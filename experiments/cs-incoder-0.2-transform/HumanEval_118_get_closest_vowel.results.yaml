language: cs
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfka4kf05.cs(49,84): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpau1nrvn_.cs(48,68): error CS1525: Invalid expression term ''}''

    /tmp/tmpau1nrvn_.cs(48,68): error CS1026: ) expected

    /tmp/tmpau1nrvn_.cs(48,68): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothBothBothBothMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjv18fcv3.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowels.Substring(0, vowels.Length);\n        string\
    \ vowelsAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllRight\
    \ = vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsAllMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsAllBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphv7l5_lr.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxhb2zqx8.cs(54,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpxhb2zqx8.cs(54,37): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpperLower = vowelsAllUpper.ToLower();\n\
    \        string vowelsAllLowerUpper = vowelsAllLower.ToUpper();\n        string\
    \ vowelsAllLowerUpperLower = vowelsAllLowerUpper.ToLower();\n        string vowelsAllUpperLowerUpper\
    \ = vowelsAllUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n \
    \       string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLower\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsngrccj5.cs(45,122): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperLower = vowel\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw2etll6j.cs(41,48): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUp\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzq9ew8u.cs(52,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kmbz6to.cs(58,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpjz92ih.cs(48,38): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothBothBothBothMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjv18fcv3.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToLower();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLower =\
    \ vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n  \
    \      string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLower\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb13blpmy.cs(45,66): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddle2\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddle3\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvoxw4rxt.cs(44,83): error CS1026: ) expected

    /tmp/tmpvoxw4rxt.cs(44,83): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932

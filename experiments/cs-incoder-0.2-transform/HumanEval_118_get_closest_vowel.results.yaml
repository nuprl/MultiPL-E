language: cs
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfka4kf05.cs(49,84): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpau1nrvn_.cs(48,68): error CS1525: Invalid expression term ''}''

    /tmp/tmpau1nrvn_.cs(48,68): error CS1026: ) expected

    /tmp/tmpau1nrvn_.cs(48,68): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothBothBothBothMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjv18fcv3.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowels.Substring(0, vowels.Length);\n        string\
    \ vowelsAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllRight\
    \ = vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsAllMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsAllBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAll = vowels.Substring(0, vowels.Length);\n\
    \        string vowelsAllAllAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n\
    \        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphv7l5_lr.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxhb2zqx8.cs(54,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpxhb2zqx8.cs(54,37): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsMiddle + vowelsRight;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpperLower = vowelsAllUpper.ToLower();\n\
    \        string vowelsAllLowerUpper = vowelsAllLower.ToUpper();\n        string\
    \ vowelsAllLowerUpperLower = vowelsAllLowerUpper.ToLower();\n        string vowelsAllUpperLowerUpper\
    \ = vowelsAllUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n \
    \       string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLower\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsngrccj5.cs(45,122): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower() + vowelsBoth.ToUpper() + vowelsBoth.ToLower() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperLower = vowel\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw2etll6j.cs(41,48): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUp\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzq9ew8u.cs(52,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kmbz6to.cs(58,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpjz92ih.cs(48,38): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowelsBothBothBothBothBothMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjv18fcv3.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToLower();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLower =\
    \ vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n  \
    \      string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLower\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb13blpmy.cs(45,66): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddle2\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddle3\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvoxw4rxt.cs(44,83): error CS1026: ) expected

    /tmp/tmpvoxw4rxt.cs(44,83): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpni9c12da.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxhb2zqx8.cs(54,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpxhb2zqx8.cs(54,37): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6pv3hvnc.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprqhgvt69.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmprqhgvt69.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6pv3hvnc.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc0ca0njc.cs(44,135): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length - 1, 1);\n        string\
    \ vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRight =\
    \ vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 4);\n        string vowelsMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 4, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 8);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 8, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 16, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 32, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 64, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 128, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 256);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 256, 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 512);\n        string vowelsMiddleMiddleMiddleLeft = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcpp5gtt9.cs(52,46): error CS1525: Invalid expression term ''}''

    /tmp/tmpcpp5gtt9.cs(52,46): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n       \
    \ string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqh2qc4jf.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower\
    \ = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string \n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp5tdy4g4.cs(53,15): error CS1001: Identifier expected

    /tmp/tmpp5tdy4g4.cs(53,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz6npbq1s.cs(44,88): error CS1026: ) expected

    /tmp/tmpz6npbq1s.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToUpper();\n     \
    \   string vowelsReversedReversed = vowelsReversed.ToUpper();\n        string\
    \ vowelsReversedReversedReversed = vowelsReversedReversed.ToUpper();\n       \
    \ string vowelsReversedReversedReversedReversed = vowelsReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.To\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwsqlhkl0.cs(37,250): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1q6px_t_.cs(51,46): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmmv5ih1k.cs(37,195): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2 - 1);\n        string\
    \ vowelsMiddleRight = vowels.Substring(word.Length / 2 - 1);\n        string vowelsMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 4);\n        string vowelsMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 4 - 1);\n        string vowelsMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 4 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0rkwq8mv.cs(51,56): error CS1001: Identifier expected

    /tmp/tmp0rkwq8mv.cs(51,56): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kmbz6to.cs(58,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4rwldgfm.cs(48,15): error CS1001: Identifier expected

    /tmp/tmp4rwldgfm.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddleRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeft = vowelsLeft.Substring(vowelsLeft.Length / 2,\
    \ vowelsLeft.Length / 4);\n        string vowelsMiddleRightRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 4);\n        string vowelsMiddleLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 4);\n        string vowelsMiddleRightRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 4);\n        string vowelsMiddleLeftRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 4);\n    \
    \    string vowelsMiddleRightRightLeftLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 4);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 4, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleLeftLeftRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 4, vowelsLeft.Length / 4);\n    \
    \    string vowelsMiddleRightRightLeftLeftRight = vowelsLeft.Substring(vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp10nyr6nl.cs(43,81): error CS1026: ) expected

    /tmp/tmp10nyr6nl.cs(43,81): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBothUpper.Replace(vowelsBothBothLower, \"\");\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr_niyknm.cs(50,53): error CS1001: Identifier expected

    /tmp/tmpr_niyknm.cs(50,53): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeft =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp068o5j_1.cs(49,15): error CS1001: Identifier expected

    /tmp/tmp068o5j_1.cs(49,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 32, vowels.Length\
    \ / 64);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 256, vowels.Length\
    \ / 512);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 2048);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 2048, vowels.Length\
    \ / 4096);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4096, vowels.Length / 8192);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 16384);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 16384,\
    \ vowels.Length / 32768);\n        string vowelsMiddleLeftLeftLeftLeft\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6mjuwzkv.cs(45,44): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsBoth\
    \ = vowelsLeft + vowelsRight;\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothBoth\
    \ = vowelsBothLower + vowelsBothUpper;\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothBoth = vowelsBothBothLower + vowelsBothBothUpper;\n        string\
    \ vowelsBothBothBothLower = vowelsBothBothBoth.ToLower();\n        string vowelsBothBothBothUpper\
    \ = vowelsBothBothBoth.ToUpper();\n        string vowelsBothBothBothBoth = vowelsBothBothBothLower\
    \ + vowelsBothBothBothUpper;\n        string vowelsBothBothBothBothLower = vowelsBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothUpper = vowelsBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBoth = vowelsBothBothBothBothLower + vowelsBothBothBothBothUpper;\n\
    \        string vowelsBothBothBothBothBothLower = vowelsBothBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBothUpper = vowelsBothBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBothBoth = vowelsBothBothBothBothBothLower\
    \ + vowelsBothBothBothBothBothUpper;\n        string vowelsBothBothBothBothBothBothLower\
    \ = vowelsBothBothBothBothBothBoth.ToLower();\n        string vowelsBothBothBothBothBothBothUpper\
    \ = vowelsBothBothBothBothBoth.ToUpper();\n        string vowelsBothBothBothBothBothBoth\
    \ = vowelsBothBothBothBothBothLower + vowelsBothBothBothBothBothUpper;\n     \
    \   string vowelsBothBothBothBothBothBothBothLower = vowelsBothBothBothBothBothBothBoth.ToLower();\n\
    \        string vowelsBothBothBothBothBothBothUpper = vowelsBothBothBothBothBothBoth.ToUpper();\n\
    \        string vowelsBothBothBothBothBothBothBoth\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4k8piywa.cs(48,50): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsBoth\
    \ = vowelsLeft + vowelsRight;\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothCap\
    \ = vowelsBoth.ToUpper().ToLower();\n        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n\
    \        string vowelsBothCapLower = vowelsBothCap.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperUpper\
    \ = vowelsBothCapUpper.ToUpper();\n        string vowelsBothCapUpperUpperLower\
    \ = vowelsBothCapUpperUpper.ToLower();\n        string vowelsBothCapUpperUpperUpper\
    \ = vowelsBothCapUpperUpper.ToUpper();\n        string vowelsBothCapUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpper.ToLower();\n        string vowelsBothCapUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpper.ToLower();\n        string vowelsBothCapUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpper.ToLower();\n        string vowelsBothCapUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpper.ToLower();\n        string\
    \ vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnxcwkag9.cs(47,83): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz1zrmkhp.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 256, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 512, vowels.Length / 512);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 1024);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 2048, vowels.Length / 2048);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 4096);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRight\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph1nvfff8.cs(43,63): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4rwldgfm.cs(48,15): error CS1001: Identifier expected

    /tmp/tmp4rwldgfm.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower\
    \ = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n        string\
    \ vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n\
    \        string vowelsBothCapsUpperLower = \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz6zmc5pm.cs(44,42): error CS1525: Invalid expression term ''}''

    /tmp/tmpz6zmc5pm.cs(44,42): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower\
    \ = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n  \
    \      string vowelsBothCapsUpperLowerUpper = vowelsBothCapsUpperLower.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpper = vowelsBothCapsUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n   \
    \     string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothCapsUpper\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe8pmlpr8.cs(45,97): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n       \
    \ string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu9nsw653.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 256);\n        string vowels\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvvtv1qdo.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5f9xars4.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRightRightRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRightRightRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightRightRightRightRightRightRightRightRightRight\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5qyhtjmw.cs(46,103): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb_88at3h.cs(41,126): error CS1525: Invalid expression term ''}''

    /tmp/tmpb_88at3h.cs(41,126): error CS1026: ) expected

    /tmp/tmpb_88at3h.cs(41,126): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n       \
    \ string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightRightRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRightRightRightLeft\
    \ = vowels.Substring(0, vowels.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnb45jjaw.cs(49,97): error CS1026: ) expected

    /tmp/tmpnb45jjaw.cs(49,97): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoe6msx79.cs(43,175): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbjdy18na.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAll = vowels.Substring(0, vowels.Length / 4);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 4 - 1);\n\
    \        string vowelsAllRight = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsAllMiddle = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAll = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsAllAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi6ic1z2_.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUp\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzq9ew8u.cs(52,22): error CS1002: ; expected

    '
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 3);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 3, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 5);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 5, vowels.Length\
    \ / 6);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 6, vowels.Length\
    \ / 7);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 7, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 9);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 9, vowels.Length\
    \ / 10);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 10,\
    \ vowels.Length / 11);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 11, vowels.Length / 12);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 12, vowels.Length / 13);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 13, vowels.Length / 14);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 14, vowels.Length / 15);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 15, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 17, vowels.Length / 18);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 18, vowels.Length / 19);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 19, vowels.Length / 20);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 20, vowels.Length / 21);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length\
    \ / 21, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj6d6h0cc.cs(48,69): error CS1525: Invalid expression term ''}''

    /tmp/tmpj6d6h0cc.cs(48,69): error CS1026: ) expected

    /tmp/tmpj6d6h0cc.cs(48,69): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2);\n        string vowelsMiddleLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightMiddle = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftMiddle = word.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle =\
    \ word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugl79mcr.cs(52,55): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n\
    \        string vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length - 1,\
    \ vowelsBoth.Length);\n        string vowelsBothMiddle = vowelsBoth.Substring(vowelsBoth.Length\
    \ / 2, vowelsBoth.Length / 2);\n        string vowelsBothBoth = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length / 2);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothMiddle = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ / 2, vowelsBothBoth.Length / 2);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length / 2);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothMiddle =\
    \ vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length / 2, vowelsBothBothBoth.Length\
    \ / 2);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length / 2);\n        string vowelsBothBothBothBothLeft =\
    \ vowelsBothBothBothBothLeft.Substring(0, vowelsBothBothBothBothLeft.Length -\
    \ 1);\n        string vowelsBothBothBothBothRight = vowelsBothBothBothBothRight.Substring(vowelsBothBothBothBothRight.Length\
    \ - 1, vowelsBothBothBothRight.Length);\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsBothBothBothBothMidd\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqd29x1yv.cs(43,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2);\n        string vowelsMiddleLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0fhbuujc.cs(46,145): error CS1001: Identifier expected

    /tmp/tmp0fhbuujc.cs(46,145): error CS1026: ) expected

    /tmp/tmp0fhbuujc.cs(46,145): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_nj_6vsd.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperLower''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpni9c12da.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowelsMiddle.Substring(0, vowelsMiddle.Length / 2);\n        string vowelsMiddleRight\
    \ = vowelsMiddle.Substring(vowelsMiddle.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowelsMiddleRight.Substring(0, vowelsMiddleRight.Length / 2);\n        string\
    \ vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length /\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps8rs91z8.cs(40,236): error CS1525: Invalid expression term ''}''

    /tmp/tmps8rs91z8.cs(40,236): error CS1026: ) expected

    /tmp/tmps8rs91z8.cs(40,236): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n   \
    \     string vowelsMiddleRight = vowels.Substring(vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length / 4);\n \
    \       string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length / 4\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 256 - 1);\n        string vowelsMiddleMiddle\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc0pdjmpd.cs(50,34): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllBoth = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAll = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAll\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppzdbf3ua.cs(49,25): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsBoth\
    \ = vowelsLeft + vowelsRight;\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothCap\
    \ = vowelsBoth.ToUpper().ToLower();\n        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n\
    \        string vowelsBothCapLower = vowelsBothCap.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperUpper\
    \ = vowelsBothCapUpperLower.ToUpper();\n        string vowelsBothCapUpperUpperLower\
    \ = vowelsBothCapUpperUpper;\n        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n       \
    \ string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi7ljt_br.cs(47,110): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper;\n    \
    \    string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLow\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvzwmb9sl.cs(47,128): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n        string\
    \ vowelsBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight;\n        string\
    \ vowelsBothMiddleUpper = vowelsLeft + vowelsMiddle.ToUpper() + vowelsRight;\n\
    \        string vowelsBothMiddleLower = vowelsLeft + vowelsMiddle.ToLower() +\
    \ vowelsRight;\n        string vowelsBothMiddleUpperLower = vowelsLeft + vowelsMiddle.ToUpper().ToLower()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerUpper = vowelsLeft + vowelsMiddle.ToLower().ToUpper()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerLower = vowelsLeft + vowelsMiddle.ToLower().ToLower()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerUpperLower = vowelsLeft\
    \ + vowelsMiddle.ToLower().ToUpper().ToLower() + vowelsRight;\n        string\
    \ vowelsBothMiddleLowerUpperUpper = vowelsLeft + vowelsMiddle.ToLower().ToUpper().ToUpper()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerUpperUpperLower = vowelsLeft\
    \ + vowelsMiddle.ToLower().ToUpper().ToUpper().ToLower() + vowelsRight;\n    \
    \    string vowelsBothMiddleLowerUpperUpperUpper = vowelsLeft + vowelsMiddle.ToLower().ToUpper().ToUpper().ToUpper()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerUpperUpperUpperLower = vowelsLeft\
    \ + vowelsMiddle.ToLower().ToUpper().ToUpper().ToUpper().ToLower() + vowelsRight;\n\
    \        string vowelsBothMiddleLowerUpperUpperUpperUpperUpper = vowelsLeft +\
    \ vowelsMiddle.ToLower().ToUpper().ToUpper().ToUpper().ToUpper() + vowelsRight;\n\
    \        string vowelsBothMiddleLowerUpperUpperUpperUpperLower = vowelsLeft +\
    \ vowelsMiddle.ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToLower() + \n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgxflc6op.cs(41,152): error CS1525: Invalid expression term ''}''

    /tmp/tmpgxflc6op.cs(41,152): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb_88at3h.cs(41,126): error CS1525: Invalid expression term ''}''

    /tmp/tmpb_88at3h.cs(41,126): error CS1026: ) expected

    /tmp/tmpb_88at3h.cs(41,126): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbjdy18na.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower() + vowelsBothLower.ToLower();\n\
    \        string vowelsBothLowerUpper = vowelsBothLower.ToUpper() + vowelsBothUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpper = vowelsBothUpperLower.ToUpper() + vowelsBothLowerUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpper = vowelsBothLowerUpper.ToUpper() + vowelsBothUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpper = vowelsBothUpperLowerUpper.ToUpper()\
    \ + vowelsBothLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpperUpper.ToUpper() + vowelsBothUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpper = vowelsBothUpperLowerUpper.ToUpper()\
    \ + vowelsBothLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpper.ToUpper() + vowelsBothUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpper = vowelsBothUpperLowerUpper.ToUpper()\
    \ + vowelsBothLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpper.ToUpper() + vowelsBothUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpper = vowelsBothUpperLowerUpper.ToUpper()\
    \ + vowelsBothLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpper.ToUpper() + vowelsBothUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpper.ToUpper()\
    \ + vowelsBothLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpper.ToUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvten0r4q.cs(43,97): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2 - 1);\n        string\
    \ vowelsMiddleRight = vowels.Substring(word.Length / 2 - 1);\n        string vowelsMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 4);\n        string vowelsMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 4 - 1);\n        string vowelsMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 4 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0rkwq8mv.cs(51,56): error CS1001: Identifier expected

    /tmp/tmp0rkwq8mv.cs(51,56): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw0rxlqiq.cs(44,53): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower\
    \ = vowelsBothCapsUpper.ToLower() + vowelsBothCapsLower.ToLower();\n        string\
    \ vowelsBothCapsUpperLowerUpper = vowelsBothCapsUpperLower.ToUpper();\n      \
    \  string vowelsBothCapsUpperLowerUpperUpper = vowelsBothCapsUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n   \
    \     string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplf6gqz58.cs(44,80): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1f2llzha.cs(43,126): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw3v8x6z_.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapital\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprw212ydu.cs(50,63): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string vowelsBothRight\
    \ = vowels.Substring(vowels.Length - 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ - 3);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 4);\n        string vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 9);\n        string vowelsBothBothBothBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 9);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnaboexh7.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6pv3hvnc.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsRightLeft = vowels.Substring(vowels.Length /\
    \ 2 + 1, vowels.Length);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeft =\
    \ vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc5x62sr2.cs(45,137): error CS1525: Invalid expression term ''}''

    /tmp/tmpc5x62sr2.cs(45,137): error CS1026: ) expected

    /tmp/tmpc5x62sr2.cs(45,137): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper() +\
    \ vowelsAll.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsUpper + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.To\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv4y3ag8c.cs(49,59): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jk0mumx.cs(42,34): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReverse = vowels.ToUpper();\n      \
    \  string vowelsReverse2 = vowelsReverse.ToLower();\n        string vowelsReverse3\
    \ = vowelsReverse2.ToUpper();\n        string vowelsReverse4 = vowelsReverse3.ToLower();\n\
    \        string vowelsReverse5 = vowelsReverse4.ToUpper();\n        string vowelsReverse6\
    \ = vowelsReverse5.ToLower();\n        string vowelsReverse7 = vowelsReverse6.ToUpper();\n\
    \        string vowelsReverse8 = vowelsReverse7.ToLower();\n        string vowelsReverse9\
    \ = vowelsReverse8.ToUpper();\n        string vowelsReverse10 = vowelsReverse9.ToLower();\n\
    \        string vowelsReverse11 = vowelsReverse10.ToUpper();\n        string vowelsReverse12\
    \ = vowelsReverse11.ToLower();\n        string vowelsReverse13 = vowelsReverse12.ToUpper();\n\
    \        string vowelsReverse14 = vowelsReverse13.ToLower();\n        string vowelsReverse15\
    \ = vowelsReverse14.ToUpper();\n        string vowelsReverse16 = vowelsReverse15.ToLower();\n\
    \        string vowelsReverse17 = vowelsReverse16.ToUpper();\n        string vowelsReverse18\
    \ = vowelsReverse17.ToLower();\n        string vowelsReverse19 = vowelsReverse18.ToUpper();\n\
    \        string vowelsReverse20 = vowelsReverse19.ToLower();\n        string vowelsReverse21\
    \ = vowelsReverse20.ToUpper();\n        string vowelsReverse22 = vowelsReverse21.ToLower();\n\
    \        string vowelsReverse23 = vowelsReverse22.ToUpper();\n        string vowelsReverse24\
    \ = vowelsReverse23.ToLower();\n        string vowelsReverse25 = vowelsReverse24.ToUpper();\n\
    \        string vowelsReverse26 = vowelsReverse25.ToLower();\n        string vowelsReverse27\
    \ = vowelsReverse26.ToUpper();\n        string vowelsReverse28 = vowelsReverse27.ToLower();\n\
    \        string vowelsReverse29 = vowelsReverse28.ToUpper();\n        string vowelsReverse30\
    \ = vowelsReverse29.ToLower();\n        string vowelsReverse31 = vowelsReverse30.ToUpper();\n\
    \        string vowelsReverse32 = vowelsReverse31.ToLower();\n        string vowelsReverse33\
    \ = vowelsReverse32.ToUpper();\n        string vowelsReverse34 = vowelsReverse33.ToLower();\n\
    \        string vowelsReverse\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqxn6iela.cs(59,29): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbzvr0v3v.cs(36,263): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphe0k2bgw.cs(43,109): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpni9c12da.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToLower();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperUpper\
    \ = vowelsBothLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpper\
    \ = vowelsBothUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperUpperUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLowerUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsBothLowerUpperLowerUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperUpperUpperUpper = vowelsBothUpperLowerUpperLowerUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperUpperUpperUpper = vowelsBothUpperLowerUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy8y664bx.cs(46,61): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdpymux5n.cs(44,15): error CS1001: Identifier expected

    /tmp/tmpdpymux5n.cs(44,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n        string\
    \ vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo2bzdkcv.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllBoth = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAll = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAll\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppzdbf3ua.cs(49,25): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n  \
    \      string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw4qg9klk.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpw4qg9klk.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsBothLeft = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothRight = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBothLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBothBothLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBothBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 + 1);\n        string\
    \ vowelsBothBothBothBothBoth = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmporkd4zt8.cs(46,57): error CS1001: Identifier expected

    /tmp/tmporkd4zt8.cs(46,57): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw3v8x6z_.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n        string\
    \ vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo2bzdkcv.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_nj_6vsd.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperLower''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_nj_6vsd.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAll = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAll = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAll = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllLeft = vowels.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3e1skqvd.cs(49,51): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddleRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqwo1koea.cs(47,93): error CS1001: Identifier expected

    /tmp/tmpqwo1koea.cs(47,93): error CS1026: ) expected

    /tmp/tmpqwo1koea.cs(47,93): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothBoth = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsBothBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd55l3lp4.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5x_fdjj.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpper.ToUpper();\n    \
    \    string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppwot0bal.cs(47,49): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5x_fdjj.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowels\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4s7_ja6q.cs(49,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdvq6cxcw.cs(42,34): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps.ToUpper() + vowelsAllCaps.ToLower();\n    \
    \    string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperLower.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperLower = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcpbt0shm.cs(45,47): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCap\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp52z4hyfv.cs(50,29): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw0rxlqiq.cs(44,53): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToCharArray().Reverse().ToArray();\n\
    \        string vowelsReversedString = string.Join(\"\", vowelsReversed);\n  \
    \      string vowelsReversedStringUpper = vowelsReversedString.ToUpper();\n  \
    \      string vowelsReversedStringUpperTrim = vowelsReversedStringUpper.Trim();\n\
    \        string vowelsReversedStringUpperTrimReversed = vowelsReversedStringUpperTrim.ToCharArray().Reverse().ToArray();\n\
    \        string vowelsReversedStringUpperTrimReversedString = string.Join(\"\"\
    , vowelsReversedStringUpperTrimReversed);\n        string vowelsReversedStringUpperTrimReversedStringUpper\
    \ = vowelsReversedStringUpperTrimReversedString.ToUpper();\n        string vowelsReversedStringUpperTrimReversedStringUpperTrim\
    \ = vowelsReversedStringUpperTrimReversedStringUpper.Trim();\n        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversed\
    \ = vowelsReversedStringUpperTrimReversedStringUpperTrim.ToCharArray().Reverse().ToArray();\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedString\
    \ = string.Join(\"\", vowelsReversedStringUpperTrimReversedStringUpperTrimReversed);\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpper\
    \ = vowelsReversedStringUpperTrimReversedStringUpperTrimReversedString.ToUpper();\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrim\
    \ = vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpper.Trim();\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrimReversed\
    \ = vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrim.ToCharArray().Reverse().ToArray();\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrimReversedString\
    \ = string.Join(\"\", vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrimReversed);\n\
    \        string vowelsReversedStringUpperTrimReversedStringUpperTrimReversedStringUpperTrimReversedStringUpper\
    \ = vowelsReversedString\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2ph1rb1e.cs(39,133): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapital\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbuv1pqez.cs(50,63): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20oxjv38.cs(37,78): error CS1026: ) expected

    /tmp/tmp20oxjv38.cs(37,78): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToUpper();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpper.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLower.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsBothLowerUpperLowerUpperLowerUpper.ToUpper();\n        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n        string\
    \ vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper =\
    \ vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy0zvqirc.cs(44,86): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddle\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpue147hbv.cs(48,40): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n  \
    \      string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz04vu8vs.cs(46,145): error CS1026: ) expected

    /tmp/tmpz04vu8vs.cs(46,145): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbjdy18na.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n   \
    \     string vowelsMiddleRight = vowels.Substring(vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length / 4);\n \
    \       string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length / 4\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 256 - 1);\n        string vowelsMiddleMiddle\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc0pdjmpd.cs(50,34): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 2);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 2);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 2) + vowels.Substring(0, vowels.Length - 3);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 2, vowels.Length - 3);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length - 2) + vowels.Substring(vowels.Length\
    \ - 2, vowels.Length - 3);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 2) + vowels.Substring(0,\
    \ vowels.Length - 3) + vowels.Substring(0, vowels.Length - 4);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 2, vowels.Length - 3)\
    \ + vowels.Substring(vowels.Length - 3, vowels.Length - 4);\n        string vowelsBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 2) + vowels.Substring(vowels.Length - 2, vowels.Length -\
    \ 3) + vowels.Substring(vowels.Length - 3, vowels.Length - 4);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 2) + vowels.Substring(0, vowels.Length - 3) + vowels.Sub\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppvf2gr5z.cs(37,178): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6pv3hvnc.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz6npbq1s.cs(44,88): error CS1026: ) expected

    /tmp/tmpz6npbq1s.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcb1umzlr.cs(44,88): error CS1026: ) expected

    /tmp/tmpcb1umzlr.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5x_fdjj.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5x_fdjj.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n       \
    \ string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps.ToUpper() + vowelsAllCaps.ToLower();\n    \
    \    string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn93tz7fb.cs(46,37): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb_88at3h.cs(41,126): error CS1525: Invalid expression term ''}''

    /tmp/tmpb_88at3h.cs(41,126): error CS1026: ) expected

    /tmp/tmpb_88at3h.cs(41,126): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string \n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4eiqfecl.cs(52,15): error CS1001: Identifier expected

    /tmp/tmp4eiqfecl.cs(52,15): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddle\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpue147hbv.cs(48,40): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpper = vowelsBothCapUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxpfsajr.cs(45,140): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperAll = vowelsAllCapsAllUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperAllLower = vowelsAllCapsAllUpperAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperAllUpper = vowelsAllCapsAllUpperAll.ToUpper();\n\
    \        string vowelsAllCapsAllUpperAllUpperLower = vowelsAllCapsAllUpperAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperAllUpperAll = vowelsAllCapsAllUpperAllUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperAllUpperAllLower = vowelsAllCapsAllUpperAllUpperAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperAllUpperAllUpper = vowelsAllCapsAllUpperAllUpperAll.ToUpper();\n\
    \        string vowelsAllCapsAllUpperAllUpperAllUpperLower = vowelsAllCapsAllUpperAllUpperAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperAllUpperAllUpperAll = vowelsAllCapsAllUpperAllUpperAllUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperAllUpperAllUpperAllLower = vowelsAllCapsAllUpperAllUpperAllUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpegb997p9.cs(46,101): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfder8vbv.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2g8d4bvl.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp2g8d4bvl.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n\
    \        string vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length - 1);\n\
    \        string vowelsBothMiddle = vowelsBoth.Substring(vowelsBoth.Length / 2,\
    \ vowelsBoth.Length / 2 - 1);\n        string vowelsBothBoth = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length / 2);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1);\n        string vowelsBothBothMiddle = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ / 2, vowelsBothBoth.Length / 2 - 1);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length / 2);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothMiddle = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ / 2, vowelsBothBothBoth.Length / 2 - 1);\n        string vowelsBothBothBothBoth\
    \ = vowelsBothBothBoth.Substring(0, vowelsBothBothBoth.Length / 2);\n        string\
    \ vowelsBothBothBothBothLeft = vowelsBothBothBothBoth.Substring(0, vowelsBothBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBothRight = vowelsBothBothBothBoth.Substring(vowelsBothBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBothMiddle = vowelsBothBothBothBoth.Substring(vowelsBothBothBothBoth.Length\
    \ / 2, vowelsBothBothBothBoth.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5k4ljtzn.cs(44,50): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw3v8x6z_.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothMiddle = vowelsLeft\
    \ + vowelsMiddle;\n        string vowelsBothBoth = vowelsLeft + vowelsRight +\
    \ vowelsMiddle;\n        string vowelsBothBothMiddle = vowelsLeft + vowelsMiddle\
    \ + vowelsRight;\n        string vowelsBothBothBoth = vowelsLeft + vowelsRight\
    \ + vowelsMiddle + vowelsLeft;\n        string vowelsBothBothBothMiddle = vowelsLeft\
    \ + vowelsMiddle + vowelsRight + vowelsLeft;\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsLeft + vowelsMiddle + vowelsRight + vowelsLeft + vowelsRight;\n    \
    \    string vowelsBothBothBothBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight\
    \ + vowelsLeft + vowelsRight + vowelsLeft;\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsLeft + vowelsMiddle + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft\
    \ + vowelsRight;\n        string vowelsBothBothBothBothMiddle = vowelsLeft + vowelsMiddle\
    \ + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft;\n\
    \        string vowelsBothBothBothBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight\
    \ + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight;\n\
    \        string vowelsBothBothBothBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight\
    \ + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight\
    \ + vowelsLeft;\n        string vowelsBothBothBothBothMiddle = vowelsLeft + vowelsMiddle\
    \ + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft + vowelsRight + vowelsLeft\
    \ + vowelsRight + vowelsLeft + vowelsRight;\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsLeft + \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqes89fjg.cs(41,59): error CS1525: Invalid expression term ''}''

    /tmp/tmpqes89fjg.cs(41,59): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpshsgud0_.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToUpper();\n     \
    \   string vowelsReversedReversed = vowelsReversed.ToUpper();\n        string\
    \ vowelsReversedReversedReversed = vowelsReversedReversed.ToUpper();\n       \
    \ string vowelsReversedReversedReversedReversed = vowelsReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReverse\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpar72vx74.cs(37,206): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn4p7v7yb.cs(43,131): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothUpperLowerUpper\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpper.ToUpper();\n        string vowelsBothUpperLowerUpperUpper\
    \ = vowelsBothUpperLowerUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpper\
    \ = vowelsBothLowerUpperUpperUpper.ToUpper();\n        string vowelsBothUpperLowerUpperUpper\
    \ = vowelsBothUpperLowerUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsBothLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper =\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvji89j63.cs(46,85): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBothUpper.Replace(vowelsBothBothLower, \"\");\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr_niyknm.cs(50,53): error CS1001: Identifier expected

    /tmp/tmpr_niyknm.cs(50,53): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20oxjv38.cs(37,78): error CS1026: ) expected

    /tmp/tmp20oxjv38.cs(37,78): error CS1002: ; expected

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppwdqcef.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659824027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxzvz8gg.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpmxzvz8gg.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659799095
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpulbbv133.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659824028
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfder8vbv.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659824028

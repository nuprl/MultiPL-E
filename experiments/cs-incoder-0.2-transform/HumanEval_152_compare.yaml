name: HumanEval_152_compare
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // I think we all remember that feeling when the result of some\
  \ long-awaited\n    // event is finally known. The feelings and thoughts you have\
  \ at that moment are\n    // definitely worth noting down and comparing.\n    //\
  \ Your task is to determine if a person correctly guessed the results of a number\
  \ of matches.\n    // You are given two arrays of scores and guesses of equal length,\
  \ where each index shows a match. \n    // Return an array of the same length denoting\
  \ how far off each guess was. If they have guessed correctly,\n    // the value\
  \ is 0, and if not, the value is the absolute difference between the guess and the\
  \ score.\n    // example:\n    // >>> Compare((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n    // (new List<long>(new\
  \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))\n    // >>>\
  \ Compare((new List<long>(new long[]{(long)0L, (long)5L, (long)0L, (long)0L, (long)0L,\
  \ (long)4L})), (new List<long>(new long[]{(long)4L, (long)1L, (long)1L, (long)0L,\
  \ (long)0L, (long)-2L})))\n    // (new List<long>(new long[]{(long)4L, (long)4L,\
  \ (long)1L, (long)0L, (long)0L, (long)6L}))\n    public static List<long> Compare(List<long>\
  \ game, List<long> guess) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new\
  \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n\
  \    Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,\
  \ (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,\
  \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L, (long)0L,\
  \ (long)1L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long score =\
    \ 0;\n        long guess = 0;\n        foreach (var item in game) {\n        \
    \    score += item;\n        }\n        foreach (var item in guess) {\n      \
    \      guess += item;\n        }\n        guess = Math.Abs(guess);\n        if\
    \ (guess == score) {\n            result.Add(0);\n        }\n        else {\n\
    \            result.Add(guess - score);\n        }\n        return result;", " \
    \       var result = new List<long>(game.Count);\n        foreach (var item in\
    \ game) {\n            var diff = item - guess[game.IndexOf(item)]; // the difference\
    \ between the score and the guess\n            if (diff > 0) result.Add(diff);\n\
    \            else result.Add(Math.Abs(diff));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            diff += g;\n    \
    \    }\n        if (diff == 0) {\n            result.Add(0);\n        } else {\n\
    \            result.Add(Math.Abs(diff - score));\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                diff += Math.Abs(g\
    \ - g);\n            }\n            result.Add(diff);\n            diff = 0;\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        game.ForEach(x => result.Add(x - guess[game.IndexOf(x)]));\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long diff = 0;\n        bool correct\
    \ = false;\n        foreach (long g in game) {\n            score += g;\n    \
    \    }\n        foreach (long g in guess) {\n            guess += g;\n       \
    \ }\n        diff = score - guess;\n        if (diff < 0) {\n            diff\
    \ = -diff;\n        }\n        foreach (long g in guess) {\n            if (g\
    \ == diff) {\n                correct = true;\n            }\n            result.Add(g);\n\
    \        }\n        if (!correct) {\n            foreach (long g in game) {\n\
    \                if (g == diff) {\n                    correct = true;\n     \
    \           }\n                result.Add(g);\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool found;\n        bool found2;\n        bool found3;\n        bool\
    \ found4;\n        bool found5;\n        bool found6;\n        bool found7;\n\
    \        bool found8;\n        bool found9;\n        bool found10;\n        bool\
    \ found11;\n        bool found12;\n        bool found13;\n        bool found14;\n\
    \        bool found15;\n        bool found16;\n        bool found17;\n       \
    \ bool found18;\n        bool found19;\n        bool found20;\n        bool found21;\n\
    \        bool found22;\n        bool found23;\n        bool found24;\n       \
    \ bool found25;\n        bool found26;\n        bool found27;\n        bool found28;\n\
    \        bool found29;\n        bool found30;\n        bool found31;\n       \
    \ bool found32;\n        bool found33;\n        bool found34;\n        bool found35;\n\
    \        bool found36;\n        bool found37;\n        bool found38;\n       \
    \ bool found39;\n        bool found40;\n        bool found41;\n        bool found42;\n\
    \        bool found43;\n        bool found44;\n        bool found45;\n       \
    \ bool found46;\n        bool found47;\n        bool found48;\n        bool found49;\n\
    \        bool found50;\n        bool found51;\n        bool found52;\n       \
    \ bool found53;\n        bool found54;\n        bool found55;\n        bool found56;\n\
    \        bool found57;\n        bool found58;\n        bool found59;\n       \
    \ bool found60;\n        bool found61;\n        bool found62;\n        bool found63;\n\
    \        bool found64;\n        bool found65;\n        bool found66;\n       \
    \ bool found67;\n        bool found68;\n        bool found69;\n        bool found70;\n\
    \        bool found71;\n        bool found72;\n        bool found73;\n       \
    \ bool found74;\n        bool found75;\n        bool found76;\n        bool found77;\n\
    \        bool found78;\n        bool found79;\n        bool found80;\n       \
    \ bool found81;\n        bool found82;\n        bool found83;\n        ", "  \
    \      var result = new List<long>();\n        foreach (var item in game) {\n\
    \            var diff = item - guess[game.IndexOf(item)]; // the absolute difference\
    \ between the score and the guess\n            result.Add(diff);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        foreach (var item in guess) {\n      \
    \      guess = item;\n            foreach (var item2 in game) {\n            \
    \    score = item2;\n                difference = Math.Abs(guess - score);\n \
    \               if (difference == 0) {\n                    correct = true;\n\
    \                }\n                result.Add(difference);\n            }\n \
    \       }\n        if (!correct) {\n            foreach (var item in guess) {\n\
    \                guess = item;\n                foreach (var item2 in game) {\n\
    \                    score = item2;\n                    difference = Math.Abs(guess\
    \ - score);\n                    if (difference != 0) {\n                    \
    \    result.Add(difference);\n                    }\n                }\n     \
    \       }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var gameScores = new List<long>(game.Count);\n        var guesses = new\
    \ List<long>(guess.Count);\n        var gameScore = 0;\n        var guess = 0;\n\
    \        var gameScoreIndex = 0;\n        var guesseIndex = 0;\n        while\
    \ (gameScoreIndex < game.Count && guesseIndex < guess.Count) {\n            gameScore\
    \ = game[gameScoreIndex];\n            guess = guess[guesseIndex];\n         \
    \   if (gameScore == guess) {\n                gameScores.Add(gameScore);\n  \
    \              guesses.Add(guess);\n                gameScoreIndex++;\n      \
    \          guesseIndex++;\n            } else if (gameScore < guess) {\n     \
    \           gameScores.Add(gameScore);\n                gameScoreIndex++;\n  \
    \          } else {\n                guesses.Add(guess);\n                guesseIndex++;\n\
    \            }\n        }\n        if (gameScoreIndex < game.Count) {\n      \
    \      gameScores.AddRange(game.Skip(gameScoreIndex).Take(game.Count - gameScoreIndex));\n\
    \        }\n        if (guesseIndex < guess.Count) {\n            guesses.AddRange(guess.Skip(guesseIndex).Take(guess.Count\
    \ - guesseIndex));\n        }\n        foreach (var gameScore in gameScores) {\n\
    \            result.Add(gameScore - guess);\n        }\n        foreach (var guess\
    \ in guesses) {\n            result.Add(guess - gameScore);\n        }\n     \
    \   return result;", "        // TODO: Implement this function\n        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (long g in game) {\n            foreach (long g in guess)\
    \ {\n                difference = Math.Abs(g - g);\n                if (difference\
    \ == 0) {\n                    score = 0;\n                } else {\n        \
    \            score = difference;\n                }\n            }\n         \
    \   result.Add(score);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var scores = new List<long>(game.Count);\n    \
    \    var guesses = new List<long>(guess.Count);\n        var score = 0;\n    \
    \    var guess = 0;\n        var maxScore = game.Max();\n        var maxGuess\
    \ = guess.Max();\n        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n\
    \        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var maxGuesses\
    \ = guesses.FindIndex(x => x == maxGuess);\n        var maxScoreIndex = scores.FindIndex(x\
    \ => x == maxScore);\n        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var\
    \ maxGuesses = guesses.FindIndex(x => x == maxGuess);\n        var maxScoreIndex\
    \ = scores.FindIndex(x => x == maxScore);\n        var maxGuesses = guesses.FindIndex(x\
    \ => x == maxGuess);\n        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n\
    \        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var maxGuesses\
    \ = guesses.FindIndex(x => x == maxGuess);\n        var maxScoreIndex = scores.FindIndex(x\
    \ => x == maxScore);\n        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var\
    \ maxGuesses = guesses.FindIndex(x => x == maxGuess);\n        var maxScoreIndex\
    \ = scores.FindIndex(x => x == maxScore);\n        var maxGuesses = guesses.FindIndex(x\
    \ => x == maxGuess);\n        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n\
    \        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var maxGuesses\
    \ = guesses.FindIndex(x => x == maxGuess);\n        var maxScoreIndex = scores.FindIndex(x\
    \ => x == maxScore);\n        var maxGuesses = guesses.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = scores.FindIndex(x => x == maxScore);\n        var\
    \ maxGuesses = guesses.FindIndex(x => x == ", "        List<long> result = new\
    \ List<long>(game.Count);\n        long score = 0;\n        long guess = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            guess += g;\n        }\n       \
    \ if (score == guess) {\n            foreach (long g in guess) {\n           \
    \     result.Add(g);\n            }\n        }\n        else {\n            foreach\
    \ (long g in guess) {\n                result.Add(Math.Abs(g - score));\n    \
    \        }\n        }\n        return result;", "        // Your code goes here\n\
    \        List<long> result = new List<long>();\n        long score = 0;\n    \
    \    long difference = 0;\n        foreach (var item in game) {\n            score\
    \ = item;\n            foreach (var item2 in guess) {\n                difference\
    \ = Math.Abs(item - item2);\n                if (difference == 0) {\n        \
    \            result.Add(0);\n                }\n                else {\n     \
    \               result.Add(difference);\n                }\n            }\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ guess in guess) {\n            score = game.ElementAtOrDefault(guess);\n   \
    \         if (score == 0) {\n                difference = guess - score;\n   \
    \         } else {\n                difference = guess - score;\n            }\n\
    \            result.Add(difference);\n        }\n        return result;", "  \
    \      List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (var g in guess) {\n            score\
    \ += g;\n            diff = g - score;\n        }\n        foreach (var g in game)\
    \ {\n            score -= g;\n            diff += g - score;\n        }\n    \
    \    foreach (var g in guess) {\n            result.Add(Math.Abs(g - diff));\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          diff += g - score;\n            }\n            result.Add(diff);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var g in game) {\n            var gDiff = Math.Abs(g - guess.FirstOrDefault());\n\
    \            result.Add(gDiff);\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        long score;\n        long guess;\n\
    \        long diff;\n        bool correct = false;\n        bool correctGuess\
    \ = false;\n        bool correctScore = false;\n        bool correctGuesses =\
    \ false;\n        bool correctScores = false;\n        bool correctGuessess =\
    \ false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool correctGuessess\
    \ = false;\n        bool correctGuessess = false;\n        bool ", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ guess = 0;\n        long diff = 0;\n        foreach (long g in game) {\n   \
    \         score += g;\n        }\n        foreach (long g in guess) {\n      \
    \      guess += g;\n        }\n        diff = score - guess;\n        if (diff\
    \ < 0) {\n            foreach (long g in game) {\n                result += g;\n\
    \            }\n        } else {\n            foreach (long g in guess) {\n  \
    \              result += g;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        long guess = 0;\n        long game = 0;\n        foreach\
    \ (var item in guess) {\n            guess = item;\n            game = game[game.Count\
    \ - 1];\n            diff = game - guess;\n            result.Add(diff);\n   \
    \     }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        bool found = false;\n        bool found2\
    \ = false;\n        bool found3 = false;\n        bool found4 = false;\n     \
    \   bool found5 = false;\n        bool found6 = false;\n        bool found7 =\
    \ false;\n        bool found8 = false;\n        bool found9 = false;\n       \
    \ bool found10 = false;\n        bool found11 = false;\n        bool found12 =\
    \ false;\n        bool found13 = false;\n        bool found14 = false;\n     \
    \   bool found15 = false;\n        bool found16 = false;\n        bool found17\
    \ = false;\n        bool found18 = false;\n        bool found19 = false;\n   \
    \     bool found20 = false;\n        bool found21 = false;\n        bool found22\
    \ = false;\n        bool found23 = false;\n        bool found24 = false;\n   \
    \     bool found25 = false;\n        bool found26 = false;\n        bool found27\
    \ = false;\n        bool found28 = false;\n        bool found29 = false;\n   \
    \     bool found30 = false;\n        bool found31 = false;\n        bool found32\
    \ = false;\n        bool found33 = false;\n        bool found34 = false;\n   \
    \     bool found35 = false;\n        bool found36 = false;\n        bool found37\
    \ = false;\n        bool found38 = false;\n        bool found39 = false;\n   \
    \     bool found40 = false;\n        bool found41 = false;\n        bool found42\
    \ = false;\n        bool found43 = false;\n        bool found44 = false;\n   \
    \     bool found45 = false;\n        bool found46 = false;\n        bool found47\
    \ = false;\n        bool found48 = false;\n        bool found49 = false;\n   \
    \     bool found50 = false;\n        bool found51 = false;\n        bool found52\
    \ = false;\n        bool found53 = false;\n        bool found54 = false;\n   \
    \     bool found55 = false;\n        bool found56 = false;\n        bool found57\
    \ = false;\n        bool found58 = false;\n        bool found59 = false;\n   \
    \     bool found60 = false;\n        bool found61 = false;\n        bool found62\
    \ = false;\n        bool found63 = false;\n        bool found64 = false;\n   \
    \     bool found65 = false;\n        bool found66 = false;\n        bool found67\
    \ = false;\n        bool found68 = false;\n        bool found69 = false;\n   \
    \     bool found70 = false;\n        bool found71 = false;\n        bool found72\
    \ = false;\n        bool found73 = false;\n        bool found74 = false;\n   \
    \     bool found75 = false;\n        bool found76 = false;\n        bool found77\
    \ = false;\n        bool found78", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          diff += Math.Abs(g - score);\n            }\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        if (diff < 0) {\n        \
    \    foreach (long g in guess) {\n                result.Add(-g);\n          \
    \  }\n        } else {\n            foreach (long g in guess) {\n            \
    \    result.Add(g);\n            }\n        }\n        return result;", "    \
    \    // TODO: Implement this method\n        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += Math.Abs(g - score);\n        }\n        foreach (long g\
    \ in guess) {\n            result.Add(Math.Abs(g - score));\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long difference = 0;\n        foreach (var item in guess)\
    \ {\n            score += item;\n        }\n        foreach (var item in game)\
    \ {\n            difference += Math.Abs(item - score);\n        }\n        if\
    \ (game.Count == guess.Count) {\n            foreach (var item in guess) {\n \
    \               result.Add(Math.Abs(item - score));\n            }\n         \
    \   return result;\n        }\n        foreach (var item in guess) {\n       \
    \     result.Add(Math.Abs(item - score));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        foreach (var item in game)\
    \ {\n            score = item;\n            guess = guess.FirstOrDefault();\n\
    \            diff = guess - score;\n            result.Add(diff);\n        }\n\
    \        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long difference;\n        bool\
    \ correct;\n        bool found;\n        bool found2;\n        bool found3;\n\
    \        bool found4;\n        bool found5;\n        bool found6;\n        bool\
    \ found7;\n        bool found8;\n        bool found9;\n        bool found10;\n\
    \        bool found11;\n        bool found12;\n        bool found13;\n       \
    \ bool found14;\n        bool found15;\n        bool found16;\n        bool found17;\n\
    \        bool found18;\n        bool found19;\n        bool found20;\n       \
    \ bool found21;\n        bool found22;\n        bool found23;\n        bool found24;\n\
    \        bool found25;\n        bool found26;\n        bool found27;\n       \
    \ bool found28;\n        bool found29;\n        bool found30;\n        bool found31;\n\
    \        bool found32;\n        bool found33;\n        bool found34;\n       \
    \ bool found35;\n        bool found36;\n        bool found37;\n        bool found38;\n\
    \        bool found39;\n        bool found40;\n        bool found41;\n       \
    \ bool found42;\n        bool found43;\n        bool found44;\n        bool found45;\n\
    \        bool found46;\n        bool found47;\n        bool found48;\n       \
    \ bool found49;\n        bool found50;\n        bool found51;\n        bool found52;\n\
    \        bool found53;\n        bool found54;\n        bool found55;\n       \
    \ bool found56;\n        bool found57;\n        bool found58;\n        bool found59;\n\
    \        bool found60;\n        bool found61;\n        bool found62;\n       \
    \ bool found63;\n        bool found64;\n        bool found65;\n        bool found66;\n\
    \        bool found67;\n        bool found68;\n        bool found69;\n       \
    \ bool found70;\n        bool found71;\n        bool found72;\n        bool found73;\n\
    \        bool found74;\n        bool found75;\n        bool found76;\n       \
    \ bool found77;\n        bool found78;\n        bool found79;\n        bool found80;\n\
    \        bool found81;\n        bool found82;\n        bool found83;\n        ",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  foreach (var item in guess) {\n            score += item;\n        }\n    \
    \    foreach (var item in game) {\n            score -= item;\n            result.Add(score);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool found;\n        bool found2;\n        bool found3;\n        bool\
    \ found4;\n        bool found5;\n        bool found6;\n        bool found7;\n\
    \        bool found8;\n        bool found9;\n        bool found10;\n        bool\
    \ found11;\n        bool found12;\n        bool found13;\n        bool found14;\n\
    \        bool found15;\n        bool found16;\n        bool found17;\n       \
    \ bool found18;\n        bool found19;\n        bool found20;\n        bool found21;\n\
    \        bool found22;\n        bool found23;\n        bool found24;\n       \
    \ bool found25;\n        bool found26;\n        bool found27;\n        bool found28;\n\
    \        bool found29;\n        bool found30;\n        bool found31;\n       \
    \ bool found32;\n        bool found33;\n        bool found34;\n        bool found35;\n\
    \        bool found36;\n        bool found37;\n        bool found38;\n       \
    \ bool found39;\n        bool found40;\n        bool found41;\n        bool found42;\n\
    \        bool found43;\n        bool found44;\n        bool found45;\n       \
    \ bool found46;\n        bool found47;\n        bool found48;\n        bool found49;\n\
    \        bool found50;\n        bool found51;\n        bool found52;\n       \
    \ bool found53;\n        bool found54;\n        bool found55;\n        bool found56;\n\
    \        bool found57;\n        bool found58;\n        bool found59;\n       \
    \ bool found60;\n        bool found61;\n        bool found62;\n        bool found63;\n\
    \        bool found64;\n        bool found65;\n        bool found66;\n       \
    \ bool found67;\n        bool found68;\n        bool found69;\n        bool found70;\n\
    \        bool found71;\n        bool found72;\n        bool found73;\n       \
    \ bool found74;\n        bool found75;\n        bool found76;\n        bool found77;\n\
    \        bool found78;\n        bool found79;\n        bool found80;\n       \
    \ bool found81;\n        bool found82;\n        bool found83;\n        bool found84",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  foreach (long guess in guess) {\n            score += game[guess];\n      \
    \      result.Add(score);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (long guess in guess) {\n            score = game.Sum(x\
    \ => x);\n            difference = guess - score;\n            result.Add(difference);\n\
    \        }\n        return result;", "        var result = new List<long>(game.Count);\n\
    \        foreach (var item in game) {\n            if (guess.Contains(item)) {\n\
    \                result.Add(0);\n            } else {\n                result.Add(item\
    \ - guess.Single(x => x == item));\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guessed = 0;\n        long difference = 0;\n        long difference2 =\
    \ 0;\n        foreach (long g in game) {\n            score += g;\n        }\n\
    \        foreach (long g in guess) {\n            guessed += g;\n        }\n \
    \       difference = score - guessed;\n        difference2 = score - guessed;\n\
    \        if (difference < 0) {\n            difference = -difference;\n      \
    \  }\n        if (difference2 < 0) {\n            difference2 = -difference2;\n\
    \        }\n        result.Add(difference);\n        result.Add(difference2);\n\
    \        return result;", "        var result = new List<long>(game.Count);\n\
    \        var scores = new List<long>(game.Count);\n        var guesses = new List<long>(game.Count);\n\
    \        var score = 0;\n        var guess = 0;\n        var maxScore = game.Max();\n\
    \        var maxGuess = guess.Max();\n        var maxScoreIndex = game.FindIndex(x\
    \ => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var\
    \ maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var maxScoreIndex\
    \ = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x\
    \ => x == maxGuess);\n        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n\
    \        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex\
    \ = guess.FindIndex(x => x == maxGuess);\n        var maxScoreIndex = game.FindIndex(x\
    \ => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var\
    \ maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var maxScoreIndex\
    \ = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x\
    \ => x == maxGuess);\n        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n\
    \        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex\
    \ = guess.FindIndex(x => x == maxGuess);\n        var maxScoreIndex = game.FindIndex(x\
    \ => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n\
    \        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var\
    \ maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var maxScoreIndex\
    \ = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex = guess.FindIndex(x\
    \ => x == maxGuess);\n        var maxScoreIndex = game.FindIndex(x => x == maxScore);\n\
    \        var maxGuessIndex = guess.FindIndex(x => x == maxGuess);\n        var\
    \ maxScoreIndex = game.FindIndex(x => x == maxScore);\n        var maxGuessIndex\
    \ = guess.", "        List<long> result = new List<long>(game.Count);\n      \
    \  long score = 0;\n        long diff = 0;\n        long diff2 = 0;\n        long\
    \ diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n        long diff6\
    \ = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n        long diff9 =\
    \ 0;\n        long diff10 = 0;\n        long diff11 = 0;\n        long diff12\
    \ = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n        long diff15\
    \ = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n        long diff18\
    \ = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n        long diff21\
    \ = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n        long diff24\
    \ = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n        long diff27\
    \ = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n        long diff30\
    \ = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n        long diff33\
    \ = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n        long diff36\
    \ = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n        long diff39\
    \ = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n        long diff42\
    \ = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n        long diff45\
    \ = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n        long diff48\
    \ = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n        long diff51\
    \ = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n        long diff54\
    \ = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n        long diff57\
    \ = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n        long diff60\
    \ = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n        long diff63\
    \ = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n        long diff66\
    \ = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n        long diff69\
    \ = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n        long diff72\
    \ = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n        long diff75\
    \ = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n        long diff78\
    \ = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n        long diff81\
    \ = 0;\n        long diff82 = 0;\n        long diff83 = 0;\n        ", "     \
    \   List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        bool correct = false;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            guess += g;\n        }\n        if (score == guess) {\n         \
    \   result.Add(0);\n            correct = true;\n        }\n        else {\n \
    \           long difference = score - guess;\n            result.Add(difference);\n\
    \            correct = difference < 0;\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        long score = 0;\n     \
    \   long guess = 0;\n        long diff = 0;\n        bool correct = false;\n \
    \       foreach (var item in game) {\n            score = item;\n            guess\
    \ = guess.FirstOrDefault();\n            diff = guess - score;\n            if\
    \ (diff < 0) {\n                diff = -diff;\n            }\n            result.Add(diff);\n\
    \            if (diff == 0) {\n                correct = true;\n            }\n\
    \        }\n        if (correct) {\n            return result;\n        }\n  \
    \      foreach (var item in guess) {\n            score = item;\n            guess\
    \ = guess.FirstOrDefault();\n            diff = guess - score;\n            if\
    \ (diff < 0) {\n                diff = -diff;\n            }\n            result.Add(diff);\n\
    \            if (diff == 0) {\n                correct = true;\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        bool first = true;\n        foreach (long\
    \ g in game) {\n            foreach (long g in guess) {\n                guess\
    \ = g;\n                difference = Math.Abs(guess - g);\n                if\
    \ (first) {\n                    score = difference;\n                    first\
    \ = false;\n                } else {\n                    score += difference;\n\
    \                }\n            }\n            correct = game.Contains(score);\n\
    \            result.Add(correct ? score : -score);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var scores = new\
    \ List<long>(game.Count);\n        var guesses = new List<long>(guess.Count);\n\
    \        foreach (var score in game) {\n            scores.Add(score);\n     \
    \   }\n        foreach (var guess in guess) {\n            guesses.Add(guess);\n\
    \        }\n        var differences = guesses.Zip(scores, (a, b) => a - b);\n\
    \        var maxDifference = differences.Max();\n        var maxDifferenceIndex\
    \ = differences.IndexOf(maxDifference);\n        if (maxDifference == 0) {\n \
    \           result.Add(0);\n        }\n        else {\n            result.Add(maxDifference);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var scores = new List<long>(game.Count);\n        var guesses = new List<long>(guess.Count);\n\
    \        var maxScore = game.Max();\n        var minScore = game.Min();\n    \
    \    var maxGuess = guess.Max();\n        var minGuess = guess.Min();\n      \
    \  var maxScoreDiff = maxScore - minScore;\n        var minScoreDiff = maxScore\
    \ - minGuess;\n        var maxGuesses = maxGuess - minGuess;\n        var minGuesses\
    \ = minGuess - minScore;\n        var maxGuessesDiff = maxGuesses - minGuesses;\n\
    \        var minGuessesDiff = minGuesses - maxScore;\n        var maxScoreDiffDiff\
    \ = maxScoreDiff - minScoreDiff;\n        var minScoreDiffDiff = maxScoreDiff\
    \ - minGuesses;\n        var maxGuessesDiff = maxGuesses - minGuesses;\n     \
    \   var minGuessesDiff = minGuesses - maxGuesses;\n        var maxScoreDiffDiffDiff\
    \ = maxScoreDiffDiff - minScoreDiffDiff;\n        var minScoreDiffDiff = maxScoreDiffDiff\
    \ - minGuessesDiff;\n        var maxGuessesDiff = maxGuessesDiff - minGuessesDiff;\n\
    \        var minGuessesDiff = minGuessesDiff - maxGuessesDiff;\n        var maxScoreDiffDiffDiff\
    \ = maxScoreDiffDiffDiff - minScoreDiffDiff;\n        var minScoreDiffDiff = maxScoreDiffDiffDiff\
    \ - minGuessesDiff;\n        var maxGuessesDiff = maxGuessesDiff - minGuessesDiff;\n\
    \        var minGuessesDiff = minGuessesDiff - maxGuessesDiff;\n        var maxScoreDiffDiffDiff\
    \ = maxScoreDiffDiffDiff - minScoreDiffDiff;\n        var minScoreDiffDiff = maxScoreDiffDiffDiff\
    \ - minGuessesDiff;\n        var maxGuessesDiff = maxGuessesDiff - minGuessesDiff;\n\
    \        var minGuessesDiff = minGuessesDiff - maxGuessesDiff;\n        var maxScoreDiffDiffDiff\
    \ = maxScoreDiffDiffDiff - minScoreDiffDiff;\n        var minScoreDiff = maxScoreDiffDiffDiff\
    \ - minGuessesDiff;\n        var maxGuessesDiff = ", "        var result = new\
    \ List<long>();\n        var scores = new List<long>(game.Count);\n        var\
    \ guesses = new List<long>(guess.Count);\n        foreach (var item in game) {\n\
    \            scores.Add(item);\n        }\n        foreach (var item in guess)\
    \ {\n            guesses.Add(item);\n        }\n        foreach (var item in guesses)\
    \ {\n            var scoreDifference = Math.Abs(item - scores.Last());\n     \
    \       result.Add(scoreDifference);\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        foreach (var g in guess) {\n  \
    \          var diff = Math.Abs(g - game.Single(x => x == g));\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            score += g;\n        }\n        foreach (long g in\
    \ guess) {\n            difference += g - score;\n        }\n        if (difference\
    \ < 0) {\n            difference = -difference;\n        }\n        result.Add(difference);\n\
    \        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ guess in guess) {\n            score = game.Sum(x => x == guess ? 1 : 0);\n\
    \            difference = guess - score;\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (var item in game) {\n            score = item;\n            guess\
    \ = guess.FirstOrDefault();\n            diff = guess - score;\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (long g in game) {\n            score += g;\n        }\n      \
    \  foreach (long g in guess) {\n            guess += g;\n        }\n        diff\
    \ = score - guess;\n        if (diff < 0) {\n            foreach (long g in guess)\
    \ {\n                result.Add(-g);\n            }\n        } else {\n      \
    \      foreach (long g in guess) {\n                result.Add(g);\n         \
    \   }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var g in guess) {\n            var gDiff = Math.Abs(g - game.ElementAt(g.IndexOf(g)));\n\
    \            result.Add(gDiff);\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ difference = 0;\n        long maxScore = game.Max();\n        long minScore\
    \ = game.Min();\n        long maxGuess = guess.Max();\n        long minGuess =\
    \ guess.Min();\n        foreach (long guess in guess) {\n            score = 0;\n\
    \            difference = maxGuess - guess;\n            if (difference > 0) {\n\
    \                score += difference;\n            }\n            difference =\
    \ minGuess - guess;\n            if (difference > 0) {\n                score\
    \ += difference;\n            }\n            difference = maxScore - guess;\n\
    \            if (difference > 0) {\n                score += difference;\n   \
    \         }\n            difference = minScore - guess;\n            if (difference\
    \ > 0) {\n                score += difference;\n            }\n            result.Add(score);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        foreach (var item in game) {\n            score += item;\n        }\n\
    \        foreach (var item in guess) {\n            guess += item;\n        }\n\
    \        guess = Math.Abs(guess);\n        difference = score - guess;\n     \
    \   if (difference == 0) {\n            result.Add(0);\n        } else {\n   \
    \         result.Add(difference);\n        }\n        return result;", "     \
    \   List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long difference = 0;\n        long guess = 0;\n        long game = 0;\n\
    \        foreach (var item in guess) {\n            guess = item;\n          \
    \  game = game[game.Count - 1];\n            difference = Math.Abs(guess - game);\n\
    \            result.Add(difference);\n        }\n        return result;", "  \
    \      List<long> result = new List<long>(game.Count);\n        long score;\n\
    \        long guess;\n        bool correct;\n        long diff;\n        int i\
    \ = 0;\n        foreach (var g in guess) {\n            guess = g;\n         \
    \   score = game[i];\n            correct = score == guess;\n            diff\
    \ = correct ? 0 : Math.Abs(score - guess);\n            result.Add(diff);\n  \
    \          i++;\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var item in game) {\n            var difference\
    \ = item - guess[game.IndexOf(item)]; // the difference between the score and\
    \ the guess, if they match\n            result.Add(difference);\n        }\n \
    \       return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        bool first = true;\n        foreach (long\
    \ g in game) {\n            if (first) {\n                guess = g;\n       \
    \         first = false;\n            } else {\n                guess = guess\
    \ - g;\n            }\n            score = score + g;\n            difference\
    \ = guess - score;\n            if (difference < 0) {\n                difference\
    \ = difference * -1;\n            }\n            if (difference == 0) {\n    \
    \            correct = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (correct) {\n            return result;\n        } else\
    \ {\n            return new List<long>(guess);\n        }", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        foreach (long g in game) {\n          \
    \  score += g;\n        }\n        foreach (long g in guess) {\n            guess\
    \ += g;\n        }\n        difference = score - guess;\n        if (difference\
    \ < 0) {\n            result.Add(difference);\n        }\n        else {\n   \
    \         result.Add(0);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score = g;\n            foreach\
    \ (long g in guess) {\n                diff = g - score;\n                if (diff\
    \ < 0) {\n                    diff = -diff;\n                }\n             \
    \   result.Add(diff);\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var scores = new List<long>(game.Count);\n\
    \        foreach (var item in game) {\n            scores.Add(item);\n       \
    \ }\n        foreach (var item in guess) {\n            var scoreDifference =\
    \ Math.Abs(item - scores.Last());\n            result.Add(scoreDifference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        foreach (long g in\
    \ game) {\n            score += g;\n        }\n        foreach (long g in guess)\
    \ {\n            guess += g;\n        }\n        foreach (long g in guess) {\n\
    \            guess -= g;\n        }\n        if (guess == 0) {\n            result.Add(0);\n\
    \        } else {\n            result.Add(Math.Abs(guess - score));\n        }\n\
    \        return result;", "        var result = new List<long>();\n        game.ForEach(x\
    \ => result.Add(Math.Abs(x - guess.ElementAt(game.IndexOf(x)))));\n        return\
    \ result;", "        List<long> result = new List<long>(game.Count);\n       \
    \ long score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n            foreach (long g in guess) {\n          \
    \      diff += Math.Abs(g - score);\n            }\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n        }\n        foreach (long g in guess) {\n            score -=\
    \ g;\n        }\n        if (score == 0) {\n            result.Add(0);\n     \
    \   } else {\n            result.Add(Math.Abs(score));\n        }\n        return\
    \ result;", "        var result = new List<long>(game.Count);\n        foreach\
    \ (var g in guess) {\n            var diff = g - game[game.IndexOf(g)];\n    \
    \        if (diff > 0) result.Add(diff);\n            else if (diff < 0) result.Add(-diff);\n\
    \            else result.Add(0);\n        }\n        return result;", "      \
    \  List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        long difference = 0;\n        bool correct = false;\n  \
    \      foreach (long g in game) {\n            guess = guess\n               \
    \ .Where(x => x == g)\n                .FirstOrDefault();\n            if (guess\
    \ == g) {\n                correct = true;\n                score = 0;\n     \
    \       }\n            else {\n                difference = Math.Abs(guess - g);\n\
    \                score = Math.Max(score, difference);\n            }\n       \
    \     result.Add(score);\n        }\n        if (correct) {\n            return\
    \ result;\n        }\n        else {\n            return result.Select(x => Math.Abs(x)).ToList();\n\
    \        }", "        var result = new List<long>(game.Count);\n        foreach\
    \ (var item in game) {\n            var diff = item - guess[game.IndexOf(item)];\
    \ // the absolute difference between the guess and the score\n            if (diff\
    \ > 0) {\n                result.Add(diff);\n            }\n        }\n      \
    \  return result;", "        var result = new List<long>();\n        var gameScores\
    \ = new List<long>(game.Count);\n        var guessScores = new List<long>(guess.Count);\n\
    \        game.ForEach(x => gameScores.Add(x));\n        guess.ForEach(x => guessScores.Add(x));\n\
    \        var gameScore = gameScores.Sum();\n        var guessScore = guessScores.Sum();\n\
    \        var gameScoreDiff = gameScore - guessScore;\n        var gameScoreDiffAbs\
    \ = Math.Abs(gameScoreDiff);\n        var gameScoreDiffPercent = gameScoreDiff\
    \ / gameScore;\n        var guessScoreDiff = guessScore - gameScore;\n       \
    \ var guessScoreDiffAbs = Math.Abs(guessScoreDiff);\n        var guessScoreDiffPercent\
    \ = guessScoreDiff / guessScore;\n        var gameScoreDiffPercentAbs = Math.Abs(gameScoreDiffPercent);\n\
    \        var guessScoreDiffPercentAbs = Math.Abs(guessScoreDiffPercent);\n   \
    \     var gameScoreDiffPercentPercent = gameScoreDiffPercent / gameScore;\n  \
    \      var guessScoreDiffPercentPercent = guessScoreDiffPercent / guessScore;\n\
    \        var gameScoreDiffPercentPercentAbs = Math.Abs(gameScoreDiffPercentPercent);\n\
    \        var guessScoreDiffPercentPercentAbs = Math.Abs(guessScoreDiffPercentPercent);\n\
    \        var gameScoreDiffPercentPercentPercent = gameScoreDiffPercentPercent\
    \ / gameScore;\n        var guessScoreDiffPercentPercentPercent = guessScoreDiffPercentPercent\
    \ / guessScore;\n        var gameScoreDiffPercentPercentPercentAbs = Math.Abs(gameScoreDiffPercentPercentPercent);\n\
    \        var guessScoreDiffPercentPercentPercentAbs = Math.Abs(guessScoreDiffPercentPercentPercent);\n\
    \        var gameScoreDiffPercentPercentPercentPercent = gameScoreDiffPercentPercentPercent\
    \ / gameScore;\n        var guessScoreDiffPercentPercentPercentPercent = guessScoreDiffPercentPercentPercent\
    \ / guessScore;\n        var gameScoreDiffPercentPercentPercentPercentAbs = Math.Abs(gameScoreDiffPercentPercentPercent);\n\
    \        var guessScoreDiffPercentPercentPercentAbs = Math.Abs(guessScoreDiffPercentPercentPercent);\n\
    \        var gameScoreDiffPercentPercentPercentPercent = gameScoreDiffPercentPercentPercent\
    \ / gameScore;\n        var guessScoreDiffPercentPercentPercentPercent = guessScoreDiffPercentPercentPercent\
    \ / guessScore;\n        var gameScoreDiffPercentPercentPercentPercentPercentAbs\
    \ = Math.Abs(gameScoreDiffPercentPercentPercentPercent);\n        var guessScoreDiffPercentPercentPercentAbs\
    \ = Math.Abs(guessScoreDiff", "        var result = new List<long>();\n      \
    \  var scores = new List<long>(game.Count);\n        var guesses = new List<long>(guess.Count);\n\
    \        scores.AddRange(game);\n        guesses.AddRange(guess);\n        var\
    \ maxScore = scores.Max();\n        var maxGuess = guesses.Max();\n        var\
    \ minScore = scores.Min();\n        var minGuess = guesses.Min();\n        var\
    \ maxScoreDiff = maxScore - minScore;\n        var maxGuess = maxGuess - minGuess;\n\
    \        var minScoreDiff = minScore - maxScore;\n        var minGuess = minGuess\
    \ - maxGuess;\n        var maxScoreDiffAbs = Math.Abs(maxScoreDiff);\n       \
    \ var maxGuess = Math.Abs(maxGuess);\n        var minScoreDiffAbs = Math.Abs(minScoreDiff);\n\
    \        var minGuess = Math.Abs(minGuess);\n        var maxScoreDiffAbsDiff =\
    \ maxScoreDiffAbs - minScoreDiffAbs;\n        var maxGuess = Math.Abs(maxGuess);\n\
    \        var minScoreDiffAbsDiff = minScoreDiffAbs - maxScoreDiffAbs;\n      \
    \  var minGuess = Math.Abs(minGuess);\n        var maxScoreDiffAbsDiffAbs = Math.Abs(maxScoreDiffAbsDiff);\n\
    \        var maxGuess = Math.Abs(maxGuess);\n        var minScoreDiffAbsDiffAbs\
    \ = Math.Abs(minScoreDiffAbsDiff);\n        var minGuess = Math.Abs(minGuess);\n\
    \        var maxScoreDiffAbsDiffAbsDiff = Math.Abs(maxScoreDiffAbsDiffAbs);\n\
    \        var maxGuess = Math.Abs(maxGuess);\n        var minScoreDiffAbsDiffAbsDiff\
    \ = Math.Abs(minScoreDiffAbsDiffAbs);\n        var minGuess = Math.Abs(minGuess);\n\
    \        var maxScoreDiffAbsDiffAbsDiffAbs = Math.Abs(maxScoreDiffAbsDiffAbsDiff);\n\
    \        var maxGuess = Math.Abs(maxGuess);\n        var minScoreDiffAbsDiffAbsDiffAbs\
    \ = Math.Abs(minScoreDiffAbsDiffAbsDiff);\n        var minGuess = Math.Abs(minGuess);\n\
    \        var maxScoreDiffAbsDiffAbsDiffAbsDiff = Math.Abs(maxScoreDiffAbsDiffAbsDiffAbs);\n\
    \        var maxGuess = Math.Abs(maxGuess);\n        var minScoreDiff", "    \
    \    List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (var g in game) {\n            score += g;\n    \
    \    }\n        foreach (var g in guess) {\n            diff += g;\n        }\n\
    \        if (diff == score) {\n            result.Add(0);\n        } else {\n\
    \            result.Add(Math.Abs(diff) - score);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score;\n        long\
    \ guess;\n        long diff;\n        bool correct = false;\n        foreach (var\
    \ item in game) {\n            score = item;\n            guess = guess.FirstOrDefault();\n\
    \            diff = score - guess;\n            if (diff > 0) {\n            \
    \    result.Add(diff);\n                correct = true;\n            }\n     \
    \       else if (diff < 0) {\n                result.Add(diff);\n            \
    \    correct = true;\n            }\n            else if (diff == 0) {\n     \
    \           result.Add(0);\n                correct = true;\n            }\n \
    \           else {\n                result.Add(diff);\n                correct\
    \ = false;\n            }\n        }\n        if (correct) {\n            return\
    \ result;\n        }\n        else {\n            return result.Select(x => Math.Abs(x)).ToList();\n\
    \        }", "        List<long> result = new List<long>(game.Count);\n      \
    \  long score = 0;\n        long difference = 0;\n        long guess = 0;\n  \
    \      long game = 0;\n        foreach (var item in guess) {\n            guess\
    \ = item;\n            game = game[game.IndexOf(item)]; // game[game.IndexOf(item)]\
    \ is the same as game[item]\n            difference = game - guess;\n        \
    \    if (difference < 0) {\n                difference = -difference;\n      \
    \      }\n            score = score + difference;\n        }\n        foreach\
    \ (var item in game) {\n            game = item;\n            guess = guess[game.IndexOf(item)];\
    \ // game[game.IndexOf(item)] is the same as game[item]\n            difference\
    \ = game - guess;\n            if (difference < 0) {\n                difference\
    \ = -difference;\n            }\n            score = score + difference;\n   \
    \     }\n        result.Add(score);\n        return result;", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ diff = 0;\n        for (int i = 0; i < game.Count; i++) {\n            score\
    \ += game[i];\n            diff += Math.Abs(guess[i] - score);\n        }\n  \
    \      if (diff == 0) {\n            result.Add(0);\n        } else {\n      \
    \      result.Add(diff);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var gameScores = game.ToArray();\n        var guessScores\
    \ = guess.ToArray();\n        var gameLength = game.Count;\n        var guessLength\
    \ = guess.Count;\n        var gameIndex = 0;\n        var guessIndex = 0;\n  \
    \      while (gameIndex < gameLength && guessIndex < guessLength) {\n        \
    \    if (gameScores[gameIndex] == guessScores[guessIndex]) {\n               \
    \ result.Add(0);\n                gameIndex++;\n                guessIndex++;\n\
    \            } else if (gameScores[gameIndex] > guessScores[guessIndex]) {\n \
    \               result.Add(gameScores[gameIndex] - guessScores[guessIndex]);\n\
    \                gameIndex++;\n            } else {\n                result.Add(guessScores[guessIndex]\
    \ - gameScores[gameIndex]);\n                guessIndex++;\n            }\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (long g in game) {\n            score += g;\n        }\n      \
    \  foreach (long g in guess) {\n            guess += g;\n        }\n        diff\
    \ = score - guess;\n        result.Add(diff);\n        return result;", "    \
    \    List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long guess = 0;\n        long difference = 0;\n        bool correct =\
    \ false;\n        foreach (var item in game) {\n            score += item;\n \
    \       }\n        foreach (var item in guess) {\n            guess += item;\n\
    \        }\n        guess = Math.Abs(guess);\n        foreach (var item in game)\
    \ {\n            difference = Math.Abs(guess - item);\n            if (difference\
    \ == 0) {\n                correct = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (correct) {\n            return result;\n        }\n  \
    \      else {\n            return new List<long>(game.Count);\n        }", " \
    \       List<long> result = new List<long>();\n        long score = 0;\n     \
    \   long diff = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        if (diff > 0) {\n            result.Add(diff);\n        }\n\
    \        else {\n            result.Add(0);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score;\n        long\
    \ guess;\n        bool correct = false;\n        foreach (var item in guess) {\n\
    \            guess = item;\n            score = game[game.Count - 1];\n      \
    \      if (score == guess) {\n                correct = true;\n            }\n\
    \            else if (score > guess) {\n                result.Add(score - guess);\n\
    \            }\n            else {\n                result.Add(guess - score);\n\
    \            }\n        }\n        if (correct) {\n            return result;\n\
    \        }\n        else {\n            return result.Select(x => Math.Abs(x)).ToList();\n\
    \        }", "        List<long> result = new List<long>(game.Count);\n      \
    \  long score = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            score -= g;\n   \
    \     }\n        if (score == 0) {\n            result.Add(0);\n        } else\
    \ {\n            result.Add(score);\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        long score = 0;\n       \
    \ foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            score -= g;\n        }\n        if (score ==\
    \ 0) {\n            result.Add(0);\n        } else {\n            result.Add(score);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct\
    \ = false;\n        bool found = false;\n        foreach (var item in game) {\n\
    \            score = item;\n            foreach (var item2 in guess) {\n     \
    \           guess = item2;\n                diff = guess - score;\n          \
    \      if (diff == 0) {\n                    correct = true;\n               \
    \     found = true;\n                    break;\n                }\n         \
    \   }\n            if (correct) {\n                result.Add(0);\n          \
    \  } else {\n                result.Add(diff);\n            }\n        }\n   \
    \     if (!found) {\n            result.Add(0);\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        bool correct = false;\n        foreach (long\
    \ g in game) {\n            foreach (long g in guess) {\n                if (g\
    \ == g) {\n                    correct = true;\n                    score = 0;\n\
    \                    diff = 0;\n                    break;\n                }\n\
    \                else {\n                    score += g;\n                   \
    \ diff += g - g;\n                }\n            }\n            if (correct) {\n\
    \                result.Add(0);\n            }\n            else {\n         \
    \       result.Add(diff);\n            }\n            correct = false;\n     \
    \   }\n        return result;", "        var result = new List<long>(game.Count);\n\
    \        foreach (var g in guess) {\n            var diff = g - game[game.IndexOf(g)];\n\
    \            result.Add(diff);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var scores = new List<long>();\n       \
    \ var guesses = new List<long>();\n        foreach (var item in game) {\n    \
    \        scores.Add(item);\n        }\n        foreach (var item in guess) {\n\
    \            guesses.Add(item);\n        }\n        foreach (var item in guesses)\
    \ {\n            var difference = Math.Abs(item - scores[0]);\n            if\
    \ (difference == 0) {\n                result.Add(0);\n            } else {\n\
    \                result.Add(difference);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>(game.Count);\n       \
    \ long score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n            foreach (long g in guess) {\n          \
    \      diff += Math.Abs(g - score);\n            }\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (long score in game) {\n            long diff = Math.Abs(guess\
    \ - score);\n            result.Add(diff);\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                diff += Math.Abs(g\
    \ - g);\n            }\n        }\n        if (diff == 0) {\n            foreach\
    \ (long g in guess) {\n                result.Add(0);\n            }\n       \
    \ } else {\n            foreach (long g in guess) {\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (long guess in guess) {\n            score = score + game[guess];\n\
    \        }\n        foreach (long guess in guess) {\n            difference =\
    \ difference + Math.Abs(guess - score);\n        }\n        foreach (long guess\
    \ in guess) {\n            result.Add(difference);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var g in\
    \ game) {\n            var gs = g.Abs();\n            foreach (var g in guess)\
    \ {\n                var gs = g.Abs();\n                if (gs == 0) {\n     \
    \               result.Add(0);\n                }\n                else if (gs\
    \ < 0) {\n                    result.Add(gs);\n                }\n           \
    \     else {\n                    result.Add(gs - g);\n                }\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long difference = 0;\n \
    \       bool guessedCorrectly = false;\n        foreach (long guess in guess)\
    \ {\n            guess = Math.Abs(guess);\n            score = Math.Max(score,\
    \ game[game.Count - 1]);\n            difference = Math.Abs(guess - score);\n\
    \            if (difference == 0) {\n                guessedCorrectly = true;\n\
    \            }\n            result.Add(difference);\n        }\n        if (!guessedCorrectly)\
    \ {\n            foreach (long guess in guess) {\n                guess = Math.Abs(guess);\n\
    \                score = Math.Max(score, game[game.Count - 1]);\n            \
    \    difference = Math.Abs(guess - score);\n                result.Add(difference);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score;\n        long guess;\n  \
    \      bool correct;\n        long diff;\n        bool first = true;\n       \
    \ foreach (long g in guess) {\n            score = 0;\n            guess = g;\n\
    \            correct = false;\n            diff = 0;\n            foreach (long\
    \ g in game) {\n                score += g;\n                if (g == guess) {\n\
    \                    correct = true;\n                }\n                diff\
    \ += g - guess;\n            }\n            if (correct) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(diff);\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long difference = 0;\n        bool correct =\
    \ false;\n        foreach (long guess in guess) {\n            score = 0;\n  \
    \          foreach (long game in game) {\n                if (guess == game) {\n\
    \                    score += 1;\n                }\n            }\n         \
    \   if (score == game.Count) {\n                correct = true;\n            \
    \    difference = guess - game;\n            }\n            result.Add(difference);\n\
    \        }\n        if (!correct) {\n            foreach (long guess in guess)\
    \ {\n                result.Add(guess - score);\n            }\n        }\n  \
    \      return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool found;\n        bool found2;\n        bool found3;\n        bool\
    \ found4;\n        bool found5;\n        bool found6;\n        bool found7;\n\
    \        bool found8;\n        bool found9;\n        bool found10;\n        bool\
    \ found11;\n        bool found12;\n        bool found13;\n        bool found14;\n\
    \        bool found15;\n        bool found16;\n        bool found17;\n       \
    \ bool found18;\n        bool found19;\n        bool found20;\n        bool found21;\n\
    \        bool found22;\n        bool found23;\n        bool found24;\n       \
    \ bool found25;\n        bool found26;\n        bool found27;\n        bool found28;\n\
    \        bool found29;\n        bool found30;\n        bool found31;\n       \
    \ bool found32;\n        bool found33;\n        bool found34;\n        bool found35;\n\
    \        bool found36;\n        bool found37;\n        bool found38;\n       \
    \ bool found39;\n        bool found40;\n        bool found41;\n        bool found42;\n\
    \        bool found43;\n        bool found44;\n        bool found45;\n       \
    \ bool found46;\n        bool found47;\n        bool found48;\n        bool found49;\n\
    \        bool found50;\n        bool found51;\n        bool found52;\n       \
    \ bool found53;\n        bool found54;\n        bool found55;\n        bool found56;\n\
    \        bool found57;\n        bool found58;\n        bool found59;\n       \
    \ bool found60;\n        bool found61;\n        bool found62;\n        bool found63;\n\
    \        bool found64;\n        bool found65;\n        bool found66;\n       \
    \ bool found67;\n        bool found68;\n        bool found69;\n        bool found70;\n\
    \        bool found71;\n        bool found72;\n        bool found73;\n       \
    \ bool found74;\n        bool found75;\n        bool found76;\n        bool found77;\n\
    \        bool found78;\n        bool found79;\n        bool found80;\n       \
    \ bool found81;\n        bool found82;\n        bool found83;\n        ", "  \
    \      var result = new List<long>();\n        foreach (var item in game) {\n\
    \            var guessedCorrectly = guess.Contains(item);\n            var difference\
    \ = item - guess[guess.IndexOf(item)]; // the absolute difference\n          \
    \  if (guessedCorrectly) {\n                result.Add(0L);\n            } else\
    \ {\n                result.Add(difference);\n            }\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        bool correct = false;\n       \
    \ foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            guess += g;\n        }\n        if (score ==\
    \ guess) {\n            correct = true;\n        }\n        long diff = 0;\n \
    \       if (correct) {\n            diff = 0;\n        } else {\n            diff\
    \ = score - guess;\n        }\n        result.Add(diff);\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        foreach (long guess in guess) {\n           \
    \ score += game[guess];\n        }\n        foreach (long guess in guess) {\n\
    \            difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        // Your code goes here\n       \
    \ List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        foreach (var item in game) {\n            score = score\
    \ + item;\n        }\n        foreach (var item in guess) {\n            guess\
    \ = guess + item;\n        }\n        if (guess == score) {\n            result.Add(0);\n\
    \        }\n        else {\n            result.Add(Math.Abs(guess - score));\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n        }\n        foreach (long g in guess) {\n\
    \            diff += g - score;\n        }\n        foreach (long g in guess)\
    \ {\n            result.Add(Math.Abs(g - diff));\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            score -= g;\n        }\n        if (score <\
    \ 0) {\n            result.Add(score);\n        }\n        else {\n          \
    \  result.Add(-score);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score;\n        long guess;\n\
    \        long diff;\n        bool correct;\n        for (int i = 0; i < game.Count;\
    \ i++) {\n            score = game[i];\n            guess = guess[i];\n      \
    \      diff = guess - score;\n            correct = diff < 0L;\n            result.Add(correct\
    \ ? diff : -diff);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   bool correct = true;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                diff += g -\
    \ g;\n                if (g == g) {\n                    correct = true;\n   \
    \             }\n                else {\n                    correct = false;\n\
    \                    break;\n                }\n            }\n            result.Add(correct\
    \ ? score : diff);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long difference = 0;\n        bool correct = false;\n        foreach (var\
    \ item in game) {\n            score = item;\n            guess = guess[game.IndexOf(item)];\
    \ // guess is the index of the item in the guess\n            difference = Math.Abs(guess\
    \ - score);\n            if (difference == 0) {\n                correct = true;\n\
    \            }\n            result.Add(difference);\n        }\n        if (correct)\
    \ {\n            return result;\n        }\n        else {\n            return\
    \ result.ToArray();\n        }", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            score += g;\n            foreach\
    \ (long g in guess) {\n                diff += Math.Abs(g - score);\n        \
    \        if (g == score) {\n                    correct = true;\n            \
    \    }\n            }\n            result.Add(diff);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>(game.Count);\n       \
    \ long score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n        }\n        foreach (long g in guess) {\n   \
    \         diff += g - score;\n        }\n        if (diff > 0) {\n           \
    \ result.Add(diff);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long guess = 0;\n    \
    \    long diff = 0;\n        foreach (var item in game) {\n            score =\
    \ item;\n            foreach (var item2 in guess) {\n                guess = item2;\n\
    \                diff = guess - score;\n                if (diff < 0) {\n    \
    \                diff = -diff;\n                }\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (long guess in guess) {\n            score += game[guess];\n\
    \            difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        bool correct =\
    \ false;\n        foreach (long g in game) {\n            score += g;\n      \
    \      foreach (long g in guess) {\n                difference = Math.Abs(g -\
    \ score);\n                if (difference == 0) {\n                    correct\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        result.Add(difference == 0 ? 0 : difference);\n        }\n        return\
    \ correct ? result : result.Where(x => x != 0).ToList();", "        var result\
    \ = new List<long>();\n        var scores = new List<long>(game.Count);\n    \
    \    var guesses = new List<long>(guess.Count);\n        var score = 0;\n    \
    \    var guess = 0;\n        var maxScore = game.Max();\n        var maxGuess\
    \ = guess.Max();\n        foreach (var item in game) {\n            scores.Add(item);\n\
    \        }\n        foreach (var item in guess) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in scores) {\n            score += item;\n\
    \        }\n        foreach (var item in guesses) {\n            guess += item;\n\
    \        }\n        if (guess == maxGuess) {\n            result.Add(0);\n   \
    \     }\n        else {\n            result.Add(Math.Abs(guess - score));\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       var scores = new List<long>(game.Count);\n        var guesses = new List<long>(guess.Count);\n\
    \        var score = new List<long>(game.Count);\n        var guess = new List<long>(guess.Count);\n\
    \        foreach (var item in game) {\n            scores.Add(item);\n       \
    \ }\n        foreach (var item in guess) {\n            guesses.Add(item);\n \
    \       }\n        foreach (var item in scores) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guess.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guess) {\n            guess.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guess.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in scores) {\n            scores.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in scores) {\n            scores.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in scores) {\n            scores.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in scores) {\n            scores.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item);\n\
    \        }\n        foreach (var item in guesses) {\n            guesses.Add(item);\n\
    \        }\n        foreach (var item in score) {\n            score.Add(item",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n            foreach (long g in guess) {\n                diff += Math.Abs(g\
    \ - score);\n            }\n            result.Add(diff);\n        }\n       \
    \ return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long diff = 0;\n        foreach\
    \ (var item in game) {\n            score = item;\n            foreach (var item2\
    \ in guess) {\n                guess = item2;\n                diff = guess -\
    \ score;\n                if (diff < 0) {\n                    result.Add(diff);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long difference = 0;\n        bool correct = false;\n        foreach\
    \ (long guess in guess) {\n            score += game[guess];\n            if (guess\
    \ == game[guess]) {\n                correct = true;\n            }\n        \
    \    difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        if (!correct) {\n            foreach (long guess in guess)\
    \ {\n                result.Add(Math.Abs(guess - score));\n            }\n   \
    \     }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          diff += g - score;\n            }\n            result.Add(diff);\n\
    \            diff = 0;\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g - score;\n        }\n\
    \        if (diff < 0) {\n            foreach (long g in guess) {\n          \
    \      result.Add(-g);\n            }\n        } else {\n            foreach (long\
    \ g in guess) {\n                result.Add(g);\n            }\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long score = 0;\n        long difference = 0;\n        foreach (long guess\
    \ in guess) {\n            score = game.Sum(x => x == guess ? 1 : 0);\n      \
    \      difference = guess - score;\n            result.Add(difference);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     foreach (var item in game) {\n            var diff = item - guess[game.IndexOf(item)];\
    \ // the absolute difference between the guess and the score\n            if (diff\
    \ != 0) {\n                result.Add(diff);\n            }\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        foreach (long g in game) {\n  \
    \          score += g;\n        }\n        foreach (long g in guess) {\n     \
    \       guess += g;\n        }\n        if (score == guess) {\n            result.Add(0);\n\
    \        } else {\n            result.Add(Math.Abs(score - guess));\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (long guess in guess) {\n            score = game.ElementAt(game.IndexOf(guess));\n\
    \            difference = Math.Abs(guess - score);\n            if (difference\
    \ == 0) {\n                result.Add(0);\n                correct = true;\n \
    \           }\n            else {\n                result.Add(difference);\n \
    \               correct = false;\n            }\n        }\n        if (correct)\
    \ {\n            return result;\n        }\n        else {\n            return\
    \ result.OrderByDescending(x => x).ToList();\n        }", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        foreach (var item in game) {\n            if (guess.Contains(item))\
    \ {\n                score = 0;\n            } else {\n                score =\
    \ item;\n            }\n            difference = Math.Abs(item - score);\n   \
    \         result.Add(difference);\n        }\n        return result;", "     \
    \   List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        bool correct = false;\n        foreach (long\
    \ g in game) {\n            score += g;\n            foreach (long g in guess)\
    \ {\n                diff += g - g;\n                if (g == g) {\n         \
    \           correct = true;\n                }\n            }\n        }\n   \
    \     if (correct) {\n            foreach (long g in guess) {\n              \
    \  result.Add(0);\n            }\n        } else {\n            foreach (long\
    \ g in guess) {\n                result.Add(diff);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            foreach (long g in guess) {\n                if (g == g) {\n\
    \                    score = 0;\n                    diff = 0;\n             \
    \   }\n                else {\n                    score = g;\n              \
    \      diff = g - score;\n                }\n            }\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long diff;\n        for (int\
    \ i = 0; i < game.Count; i++) {\n            score = game[i];\n            guess\
    \ = guess[i];\n            diff = guess - score;\n            if (diff < 0) {\n\
    \                diff *= -1;\n            }\n            result.Add(diff);\n \
    \       }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool found;\n        for (int i = 0; i < game.Count; i++) {\n       \
    \     score = game[i];\n            guess = guess[i];\n            found = false;\n\
    \            correct = false;\n            diff = 0;\n            for (int j =\
    \ 0; j < guess.Count; j++) {\n                if (guess == score) {\n        \
    \            found = true;\n                    correct = true;\n            \
    \        break;\n                }\n                diff = diff + Math.Abs(guess\
    \ - score);\n            }\n            if (found) {\n                result[i]\
    \ = 0;\n            } else {\n                result[i] = diff;\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        foreach (var item in\
    \ game) {\n            score += item;\n        }\n        foreach (var item in\
    \ guess) {\n            guess += item;\n        }\n        if (score == guess)\
    \ {\n            result.Add(0);\n        } else {\n            result.Add(Math.Abs(score\
    \ - guess));\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        foreach (long guess in guess)\
    \ {\n            score += game[guess];\n        }\n        foreach (long guess\
    \ in guess) {\n            long difference = guess - score;\n            if (difference\
    \ < 0) {\n                difference = -difference;\n            }\n         \
    \   result.Add(difference);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ difference = 0;\n        bool correct = false;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          difference = Math.Abs(g - score);\n                if (difference ==\
    \ 0) {\n                    correct = true;\n                    break;\n    \
    \            }\n            }\n            if (correct) {\n                result.Add(0);\n\
    \            } else {\n                result.Add(difference);\n            }\n\
    \            correct = false;\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        bool correct = false;\n        foreach (var item in game) {\n       \
    \     score += item;\n        }\n        foreach (var item in guess) {\n     \
    \       guess += item;\n        }\n        if (guess == score) {\n           \
    \ result.Add(0);\n            correct = true;\n        }\n        else {\n   \
    \         result.Add(Math.Abs(guess - score));\n            correct = false;\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var scores = new List<long>(game.Count);\n        var guesses = new List<long>(guess.Count);\n\
    \        var gameScores = new List<long>(game.Count);\n        var guessesScores\
    \ = new List<long>(guess.Count);\n        var gameGuesses = new List<long>(game.Count);\n\
    \        var guessesGuesses = new List<long>(guess.Count);\n        var gameScore\
    \ = game.Sum();\n        var guessesScore = guess.Sum();\n        var gameGuess\
    \ = game.Sum(x => x);\n        var guessesGuess = guess.Sum(x => x);\n       \
    \ var gameGuesses = gameGuess - gameScore;\n        var guessesGuesses = guessesGuess\
    \ - guessesScore;\n        var gameScores = gameScore - gameGuess;\n        var\
    \ guessesScores = guessesScore - guessesGuess;\n        var gameScore = gameScores.Sum();\n\
    \        var guessesScore = guessesScores.Sum();\n        var gameGuess = gameScores.Sum(x\
    \ => x);\n        var guessesGuess = guessesScores.Sum(x => x);\n        var gameGuesses\
    \ = gameGuesses - gameScore;\n        var guessesGuesses = guessesGuesses - guessesScore;\n\
    \        var gameScores = gameScore - gameGuess;\n        var guessesScores =\
    \ guessesScore - guessesGuess;\n        var gameScore = gameScores.Sum();\n  \
    \      var guessesScore = guessesScores.Sum();\n        var gameGuess = gameScores.Sum(x\
    \ => x);\n        var guessesGuess = guessesScores.Sum(x => x);\n        var gameGuesses\
    \ = gameGuesses - gameScore;\n        var guessesGuesses = guessesGuesses - guessesScore;\n\
    \        var gameScores = gameScore - gameGuess;\n        var guessesScores =\
    \ guessesScore - guessesGuess;\n        var gameScore = gameScores.Sum();\n  \
    \      var guessesScore = guessesScores.Sum();\n        var gameGuess = gameScores.Sum(x\
    \ => x);\n        var guessesGuess = guessesScores.Sum(x => x);\n        var gameGuesses\
    \ = gameGuesses - gameScore;\n        var guessesGuesses = guessesGuesses - guessesScore;\n\
    \        var gameScores = gameScore - gameGuess;\n        var guessesScores =\
    \ guessesScore ", "        var result = new List<long>();\n        var gameScores\
    \ = new List<long>();\n        var guesses = new List<long>();\n        var gameScore\
    \ = 0;\n        var guess = 0;\n        foreach (var item in game) {\n       \
    \     gameScores.Add(gameScore);\n            gameScore += item;\n        }\n\
    \        foreach (var item in guess) {\n            guesses.Add(guess);\n    \
    \        guess += item;\n        }\n        foreach (var item in gameScores) {\n\
    \            result.Add(Math.Abs(guess - item));\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long guessed = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            guessed = g;\n            foreach (long g in guess)\
    \ {\n                difference = Math.Abs(g - guessed);\n                if (difference\
    \ < score) {\n                    score = difference;\n                }\n   \
    \         }\n            result.Add(score);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        foreach (var item in game) {\n            score =\
    \ score + item;\n        }\n        foreach (var item in guess) {\n          \
    \  guess = guess + item;\n        }\n        if (guess == score) {\n         \
    \   result.Add(0);\n        } else {\n            result.Add(Math.Abs(guess -\
    \ score));\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long diff = 0;\n        long\
    \ diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n        long diff5\
    \ = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n        long diff8 =\
    \ 0;\n        long diff9 = 0;\n        long diff10 = 0;\n        long diff11 =\
    \ 0;\n        long diff12 = 0;\n        long diff13 = 0;\n        long diff14\
    \ = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n        long diff17\
    \ = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n        long diff20\
    \ = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n        long diff23\
    \ = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n        long diff26\
    \ = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n        long diff29\
    \ = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n        long diff32\
    \ = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n        long diff35\
    \ = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n        long diff38\
    \ = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n        long diff41\
    \ = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n        long diff44\
    \ = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n        long diff47\
    \ = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n        long diff50\
    \ = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n        long diff53\
    \ = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n        long diff56\
    \ = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n        long diff59\
    \ = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n        long diff62\
    \ = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n        long diff65\
    \ = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n        long diff68\
    \ = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n        long diff71\
    \ = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n        long diff74\
    \ = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n        long diff77\
    \ = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n        long diff80\
    \ = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n        long diff83\
    \ = 0;\n        long diff84", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            guess = guess\n             \
    \   .Where(x => x == g)\n                .FirstOrDefault();\n            if (guess\
    \ == g) {\n                correct = true;\n            }\n            score +=\
    \ g - guess;\n            result.Add(score);\n        }\n        if (!correct)\
    \ {\n            foreach (long g in guess) {\n                guess = game\n \
    \                   .Where(x => x == g)\n                    .FirstOrDefault();\n\
    \                if (guess == g) {\n                    correct = true;\n    \
    \            }\n                score += g - guess;\n                result.Add(score);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var scores = new List<long>(game.Count);\n        var\
    \ guesses = new List<long>(guess.Count);\n        var maxScore = game.Max();\n\
    \        var minScore = game.Min();\n        foreach (var score in game) {\n \
    \           scores.Add(score);\n        }\n        foreach (var guess in guess)\
    \ {\n            guesses.Add(guess);\n        }\n        var maxGuess = guesses.Max();\n\
    \        var minGuess = guesses.Min();\n        var maxScoreDiff = maxScore -\
    \ maxGuess;\n        var minScoreDiff = minScore - minGuess;\n        var maxGuesses\
    \ = guesses.Count(x => x == maxGuess);\n        var minGuesses = guesses.Count(x\
    \ => x == minGuess);\n        var maxGuessesDiff = maxGuesses - maxGuesses;\n\
    \        var minGuessesDiff = minGuesses - minGuesses;\n        var maxScoreDiffDiff\
    \ = maxScoreDiff - maxScoreDiff;\n        var minScoreDiffDiff = minScoreDiff\
    \ - minScoreDiff;\n        var maxGuessesDiffDiff = maxGuessesDiff - maxGuessesDiff;\n\
    \        var minGuessesDiffDiff = minGuessesDiff - minGuessesDiff;\n        var\
    \ maxScoreDiffDiffDiff = maxScoreDiffDiff - maxScoreDiffDiff;\n        var minScoreDiffDiffDiff\
    \ = minScoreDiffDiff - minScoreDiffDiff;\n        var maxGuessesDiffDiffDiff =\
    \ maxGuessesDiffDiff - maxGuessesDiffDiff;\n        var minGuessesDiffDiffDiff\
    \ = minGuessesDiffDiff - minGuessesDiffDiff;\n        var maxScoreDiffDiffDiffDiff\
    \ = maxScoreDiffDiffDiff - maxScoreDiffDiffDiff;\n        var minScoreDiffDiffDiff\
    \ = minScoreDiffDiffDiff - minScoreDiffDiffDiff;\n        var maxGuessesDiffDiffDiffDiff\
    \ = maxGuessesDiffDiffDiff - maxGuessesDiffDiffDiff;\n        var minGuessesDiffDiffDiff\
    \ = minGuessesDiffDiffDiff - minGuessesDiffDiffDiff;\n        var maxScoreDiffDiffDiffDiff\
    \ = maxScoreDiffDiffDiff - maxScoreDiffDiffDiff;\n        var minScoreDiffDiffDiff\
    \ = minScoreDiffDiffDiff - minScoreDiffDiffDiff;\n        var maxGuessesDiffDiffDiff",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        bool correct = false;\n        foreach (long g in\
    \ game) {\n            score += g;\n        }\n        foreach (long g in guess)\
    \ {\n            guess += g;\n        }\n        guess = Math.Abs(guess);\n  \
    \      if (score == guess) {\n            result.Add(0);\n            correct\
    \ = true;\n        }\n        else {\n            result.Add(Math.Abs(score -\
    \ guess));\n            correct = false;\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long difference = 0;\n        foreach (long guess in guess) {\n           \
    \ score += game[guess];\n        }\n        foreach (long guess in guess) {\n\
    \            difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        foreach (long g in game) {\n           \
    \ guess = g.ToString(\"X\");\n            foreach (long g in guess) {\n      \
    \          diff = g.ToString(\"X\") - guess.ToString(\"X\");\n               \
    \ if (diff == 0) {\n                    correct = true;\n                    break;\n\
    \                }\n            }\n            if (correct) {\n              \
    \  score = 0;\n                break;\n            }\n            score += diff;\n\
    \        }\n        result.Add(score);\n        return result;", "        var\
    \ result = new List<long>();\n        foreach (var g in game) {\n            int\
    \ diff = Math.Abs(g - guess[game.IndexOf(g)]);\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (long score in game) {\n            long guess = guess.FirstOrDefault();\n\
    \            if (guess == score)\n                result.Add(0);\n           \
    \ else\n                result.Add(Math.Abs(guess - score));\n        }\n    \
    \    return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ guess in guess) {\n            score = score + game[guess];\n            difference\
    \ = difference + (guess - score);\n        }\n        foreach (long guess in guess)\
    \ {\n            int index = game.IndexOf(guess);\n            if (index != -1)\
    \ {\n                result.Add(difference);\n            }\n        }\n     \
    \   return result;", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        foreach\
    \ (long g in game) {\n            score = g;\n            foreach (long g in guess)\
    \ {\n                guess = g;\n                difference = Math.Abs(guess -\
    \ score);\n                result.Add(difference);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long score = 0;\n        long difference = 0;\n        long guess = 0;\n\
    \        long game = 0;\n        long i = 0;\n        long j = 0;\n        long\
    \ k = 0;\n        long l = 0;\n        long m = 0;\n        long n = 0;\n    \
    \    long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n\
    \        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v\
    \ = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n\
    \        long D = 0;\n        long E = 0;\n        long F = 0;\n        long G\
    \ = 0;\n        long H = 0;\n        long I = 0;\n        long J = 0;\n      \
    \  long K = 0;\n        long L = 0;\n        long M = 0;\n        long N = 0;\n\
    \        long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R\
    \ = 0;\n        long S = 0;\n        long T = 0;\n        long U = 0;\n      \
    \  long V = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n\
    \        long Z = 0;\n        long AA = 0;\n        long BB = 0;\n        long\
    \ CC = 0;\n        long DD = 0;\n        long EE = 0;\n        long FF = 0;\n\
    \        long GG = 0;\n        long HH = 0;\n        long II = 0;\n        long\
    \ JJ = 0;\n        long KK = 0;\n        long LL = 0;\n        long MM = 0;\n\
    \        long NN = 0;\n        long OO = 0;\n        long PP = 0;\n        long\
    \ QQ = 0;\n        long RR = 0;\n        long SS = 0;\n        long TT = 0;\n\
    \        long UU = 0;\n        long VV = 0;\n        long WW = 0;\n        long\
    \ XX = 0;\n        long YY = 0;\n        long ZZ = 0;\n        long AAA = 0;\n\
    \        long BBB = 0;\n        long CCC = 0;\n        long DDD = 0;\n       \
    \ long EEE = 0;\n        long FFF = 0;\n        long GGG = 0;\n        long HHH\
    \ = 0;\n        long III = 0;\n        long JJJ = 0;\n        long KKK = 0;\n\
    \        long LLL = 0;\n        long MMM = 0;\n        long NNN = 0;\n       \
    \ long OOO = 0;\n        long PPP = 0;\n        long QQQ = 0;\n        long RRR\
    \ = 0;\n        long SSS = 0;\n        long TTT = 0;\n        long UUU = 0;\n\
    \        long VVV = 0;\n        long WW", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guessed = 0;\n        long difference =\
    \ 0;\n        foreach (long g in game) {\n            score += g;\n          \
    \  guessed += guess;\n            difference = abs(guess - score);\n         \
    \   if (difference > 0) {\n                result.Add(difference);\n         \
    \   }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        foreach (long g in\
    \ game) {\n            score += g;\n        }\n        foreach (long g in guess)\
    \ {\n            guess += g;\n        }\n        if (score == guess) {\n     \
    \       result.Add(0);\n        }\n        else {\n            result.Add(Math.Abs(score\
    \ - guess));\n        }\n        return result;", "        var result = new List<long>(game.Count);\n\
    \        foreach (var item in game) {\n            var diff = item - guess[game.IndexOf(item)];\
    \ // this line is wrong\n            if (diff > 0) {\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score;\n        long guess;\n  \
    \      long diff;\n        bool correct;\n        bool found;\n        bool found2;\n\
    \        bool found3;\n        bool found4;\n        bool found5;\n        bool\
    \ found6;\n        bool found7;\n        bool found8;\n        bool found9;\n\
    \        bool found10;\n        bool found11;\n        bool found12;\n       \
    \ bool found13;\n        bool found14;\n        bool found15;\n        bool found16;\n\
    \        bool found17;\n        bool found18;\n        bool found19;\n       \
    \ bool found20;\n        bool found21;\n        bool found22;\n        bool found23;\n\
    \        bool found24;\n        bool found25;\n        bool found26;\n       \
    \ bool found27;\n        bool found28;\n        bool found29;\n        bool found30;\n\
    \        bool found31;\n        bool found32;\n        bool found33;\n       \
    \ bool found34;\n        bool found35;\n        bool found36;\n        bool found37;\n\
    \        bool found38;\n        bool found39;\n        bool found40;\n       \
    \ bool found41;\n        bool found42;\n        bool found43;\n        bool found44;\n\
    \        bool found45;\n        bool found46;\n        bool found47;\n       \
    \ bool found48;\n        bool found49;\n        bool found50;\n        bool found51;\n\
    \        bool found52;\n        bool found53;\n        bool found54;\n       \
    \ bool found55;\n        bool found56;\n        bool found57;\n        bool found58;\n\
    \        bool found59;\n        bool found60;\n        bool found61;\n       \
    \ bool found62;\n        bool found63;\n        bool found64;\n        bool found65;\n\
    \        bool found66;\n        bool found67;\n        bool found68;\n       \
    \ bool found69;\n        bool found70;\n        bool found71;\n        bool found72;\n\
    \        bool found73;\n        bool found74;\n        bool found75;\n       \
    \ bool found76;\n        bool found77;\n        bool found78;\n        bool found79;\n\
    \        bool found80;\n        bool found81;\n        bool found82;\n       \
    \ bool found83;\n        ", "        var result = new List<long>();\n        game.ForEach(x\
    \ => result.Add(Math.Abs(x - guess.Single(y => y == x))))\n        return result;",
  "        var result = new List<long>();\n        var scores = new List<long>(game.Count);\n\
    \        var guesses = new List<long>(guess.Count);\n        var correct = new\
    \ List<long>(game.Count);\n        var wrong = new List<long>(game.Count);\n \
    \       var total = 0;\n        var correctCount = 0;\n        var wrongCount\
    \ = 0;\n        var totalCount = 0;\n        var score = 0;\n        var guess\
    \ = 0;\n        var correctScore = 0;\n        var wrongScore = 0;\n        var\
    \ totalScore = 0;\n        var correctCount = 0;\n        var wrongCount = 0;\n\
    \        var totalCount = 0;\n        var score = 0;\n        var guess = 0;\n\
    \        var correctScore = 0;\n        var wrongScore = 0;\n        var totalScore\
    \ = 0;\n        var correctCount = 0;\n        var wrongCount = 0;\n        var\
    \ totalCount = 0;\n        var score = 0;\n        var guess = 0;\n        var\
    \ correctScore = 0;\n        var wrongScore = 0;\n        var totalScore = 0;\n\
    \        var correctCount = 0;\n        var wrongCount = 0;\n        var totalCount\
    \ = 0;\n        var score = 0;\n        var guess = 0;\n        var correctScore\
    \ = 0;\n        var wrongScore = 0;\n        var totalScore = 0;\n        var\
    \ correctCount = 0;\n        var wrongCount = 0;\n        var totalCount = 0;\n\
    \        var score = 0;\n        var guess = 0;\n        var correctScore = 0;\n\
    \        var wrongScore = 0;\n        var totalScore = 0;\n        var correctCount\
    \ = 0;\n        var wrongCount = 0;\n        var totalCount = 0;\n        var\
    \ score = 0;\n        var guess = 0;\n        var correctScore = 0;\n        var\
    \ wrongScore = 0;\n        var totalScore = 0;\n        var correctCount = 0;\n\
    \        var wrongCount = 0;\n        var totalCount = 0;\n        var score =\
    \ 0;\n        var guess = 0;\n        var correctScore = 0;\n        var wrongScore\
    \ = 0;\n        var totalScore = 0;\n        var correctCount = 0;\n        var\
    \ wrongCount = 0;\n        var totalCount = 0;\n        var score = 0;\n     \
    \   var guess = 0;\n        var correctScore = 0;\n        var wrongScore = 0;\n\
    \        var totalScore = 0;\n        var correctCount = 0;\n        var wrongCount\
    \ = 0;\n        var totalCount = 0;\n        var score = 0;\n        var guess\
    \ = 0;\n        var correctScore = 0;\n        var wrongScore = 0;\n        var\
    \ totalScore = 0;\n        var correctCount = 0;\n        var wrongCount = 0;\n\
    \        var totalCount = 0;\n        var score = 0;\n        var guess = 0;\n\
    \        var correctScore = 0;\n        var wrongScore = 0;\n        var totalScore\
    \ = 0;\n        var correctCount = 0;\n        var wrongCount = 0;\n        var\
    \ totalCount = 0;\n        var score = 0;\n        var guess = 0;\n        var\
    \ correctScore = 0;\n        var wrongScore = 0;\n        var totalScore = 0;\n\
    \        var correctCount = 0;\n        var wrongCount = 0;\n        var totalCount\
    \ = 0;\n        var score = 0;\n        var guess = 0;\n        var correctScore\
    \ = 0;\n        var wrongScore = 0;\n        var totalScore = 0;\n        var\
    \ correctCount", "        List<long> result = new List<long>();\n        long\
    \ score = 0;\n        long guess = 0;\n        long difference = 0;\n        bool\
    \ correct = false;\n        bool first = true;\n        foreach (long g in game)\
    \ {\n            guess = g.ToString();\n            foreach (long g in guess)\
    \ {\n                difference = Math.Abs(g - guess);\n                if (first)\
    \ {\n                    score = g;\n                    first = false;\n    \
    \            }\n                if (difference < score) {\n                  \
    \  score = difference;\n                }\n            }\n            result.Add(score);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        foreach (long g in game) {\n         \
    \   guess = guess\n                .Where(x => g == x)\n                .FirstOrDefault();\n\
    \            if (guess == null) {\n                difference = g.Abs();\n   \
    \         } else {\n                difference = g.Abs() - guess.Abs();\n    \
    \        }\n            if (difference < 0) {\n                difference = -difference;\n\
    \            }\n            score += difference;\n            correct = correct\
    \ || difference == 0;\n            result.Add(difference);\n        }\n      \
    \  if (correct) {\n            return result;\n        } else {\n            return\
    \ result.Select(x => Math.Abs(x)).ToList();\n        }", "        var result =\
    \ new List<long>();\n        foreach (var g in game) {\n            var gs = g.Abs();\n\
    \            foreach (var g in guess) {\n                var gs = g.Abs();\n \
    \               if (gs == 0) {\n                    result.Add(0);\n         \
    \       }\n                else if (gs < 0) {\n                    result.Add(gs);\n\
    \                }\n                else {\n                    result.Add(gs\
    \ - g);\n                }\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long diff = 0;\n        foreach (long g in game) {\n            score += g;\n\
    \        }\n        foreach (long g in guess) {\n            diff += g - score;\n\
    \        }\n        if (diff == 0) {\n            result.Add(0);\n        } else\
    \ {\n            result.Add(diff);\n        }\n        return result;", "    \
    \    List<long> result = new List<long>(game.Count);\n        long score;\n  \
    \      long guess;\n        bool correct;\n        long diff;\n        long diffAbs;\n\
    \        long diffAbs2;\n        long diffAbs3;\n        long diffAbs4;\n    \
    \    long diffAbs5;\n        long diffAbs6;\n        long diffAbs7;\n        long\
    \ diffAbs8;\n        long diffAbs9;\n        long diffAbs10;\n        long diffAbs11;\n\
    \        long diffAbs12;\n        long diffAbs13;\n        long diffAbs14;\n \
    \       long diffAbs15;\n        long diffAbs16;\n        long diffAbs17;\n  \
    \      long diffAbs18;\n        long diffAbs19;\n        long diffAbs20;\n   \
    \     long diffAbs21;\n        long diffAbs22;\n        long diffAbs23;\n    \
    \    long diffAbs24;\n        long diffAbs25;\n        long diffAbs26;\n     \
    \   long diffAbs27;\n        long diffAbs28;\n        long diffAbs29;\n      \
    \  long diffAbs30;\n        long diffAbs31;\n        long diffAbs32;\n       \
    \ long diffAbs33;\n        long diffAbs34;\n        long diffAbs35;\n        long\
    \ diffAbs36;\n        long diffAbs37;\n        long diffAbs38;\n        long diffAbs39;\n\
    \        long diffAbs40;\n        long diffAbs41;\n        long diffAbs42;\n \
    \       long diffAbs43;\n        long diffAbs44;\n        long diffAbs45;\n  \
    \      long diffAbs46;\n        long diffAbs47;\n        long diffAbs48;\n   \
    \     long diffAbs49;\n        long diffAbs50;\n        long diffAbs51;\n    \
    \    long diffAbs52;\n        long diffAbs53;\n        long diffAbs54;\n     \
    \   long diffAbs55;\n        long diffAbs56;\n        long diffAbs57;\n      \
    \  long diffAbs58;\n        long diffAbs59;\n        long diffAbs60;\n       \
    \ long diffAbs61;\n        long diffAbs62;\n        long diffAbs63;", "      \
    \  List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long guess = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            score += g;\n        }\n        foreach (long g in\
    \ guess) {\n            guess += g;\n        }\n        foreach (long g in guess)\
    \ {\n            difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        bool guessedCorrectly = false;\n     \
    \   bool guessedCorrectly2 = false;\n        bool guessedCorrectly3 = false;\n\
    \        bool guessedCorrectly4 = false;\n        bool guessedCorrectly5 = false;\n\
    \        bool guessedCorrectly6 = false;\n        bool guessedCorrectly7 = false;\n\
    \        bool guessedCorrectly8 = false;\n        bool guessedCorrectly9 = false;\n\
    \        bool guessedCorrectly10 = false;\n        bool guessedCorrectly11 = false;\n\
    \        bool guessedCorrectly12 = false;\n        bool guessedCorrectly13 = false;\n\
    \        bool guessedCorrectly14 = false;\n        bool guessedCorrectly15 = false;\n\
    \        bool guessedCorrectly16 = false;\n        bool guessedCorrectly17 = false;\n\
    \        bool guessedCorrectly18 = false;\n        bool guessedCorrectly19 = false;\n\
    \        bool guessedCorrectly20 = false;\n        bool guessedCorrectly21 = false;\n\
    \        bool guessedCorrectly22 = false;\n        bool guessedCorrectly23 = false;\n\
    \        bool guessedCorrectly24 = false;\n        bool guessedCorrectly25 = false;\n\
    \        bool guessedCorrectly26 = false;\n        bool guessedCorrectly27 = false;\n\
    \        bool guessedCorrectly28 = false;\n        bool guessedCorrectly29 = false;\n\
    \        bool guessedCorrectly30 = false;\n        bool guessedCorrectly31 = false;\n\
    \        bool guessedCorrectly32 = false;\n        bool guessedCorrectly33 = false;\n\
    \        bool guessedCorrectly34 = false;\n        bool guessedCorrectly35 = false;\n\
    \        bool guessedCorrectly36 = false;\n        bool guessedCorrectly37 = false;\n\
    \        bool guessedCorrectly38 = false;\n        bool guessedCorrectly39 = false;\n\
    \        bool guessedCorrectly40 = false;\n        bool guessedCorrectly41 = false;\n\
    \        bool guessedCorrectly42 = false;\n        bool guessedCorrectly43 = false;\n\
    \        bool guessedCorrectly44 = false;\n        bool guessedCorrectly45 = false;\n\
    \        bool guessedCorrectly46 = false;\n        bool guessedCorrectly47 = false;\n\
    \        bool guessedCorrectly48 = false;\n        bool guessedCorrectly49 = false;\n\
    \        bool guessedCorrectly50 = false;\n        bool guessedCorrectly51 = false;\n\
    \        bool guessedCorrectly52 = false;\n        bool guessed", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ difference = 0;\n        foreach (long guess in guess) {\n            score\
    \ += game[guess];\n            difference = Math.Abs(guess - score);\n       \
    \     result.Add(difference);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g - score;\n        }\n\
    \        if (diff > 0) {\n            result.Add(diff);\n        }\n        if\
    \ (diff < 0) {\n            result.Add(-diff);\n        }\n        return result;",
  "        var result = new List<long>();\n        foreach (var g in game) {\n   \
    \         var gDiff = Math.Abs(g - guess.FirstOrDefault());\n            if (gDiff\
    \ != 0) {\n                result.Add(gDiff);\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool first = true;\n        foreach (long g in game) {\n            guess\
    \ = guess.FirstOrDefault();\n            score = game.FirstOrDefault();\n    \
    \        correct = guess == score;\n            if (correct) {\n             \
    \   result.Add(0);\n            } else {\n                diff = guess - score;\n\
    \                if (diff > 0) {\n                    result.Add(diff);\n    \
    \            } else {\n                    result.Add(-diff);\n              \
    \  }\n            }\n            if (first) {\n                first = false;\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   bool correct = false;\n        foreach (long guess in guess) {\n         \
    \   score = game.Sum(x => x == guess ? 1 : 0);\n            diff = guess - score;\n\
    \            if (diff > 0) {\n                result.Add(diff);\n            \
    \    correct = true;\n            }\n        }\n        if (correct) {\n     \
    \       return result;\n        }\n        else {\n            return game.Zip(guess,\
    \ (x, y) => x - y).ToList();\n        }", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            guess += g;\n        }\n       \
    \ foreach (long g in guess) {\n            difference = Math.Abs(guess - score);\n\
    \            if (difference < 0) {\n                difference = -difference;\n\
    \            }\n            result.Add(difference);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long guess = 0;\n        long diff = 0;\n        foreach (var\
    \ item in game) {\n            score = item;\n            foreach (var item2 in\
    \ guess) {\n                guess = item2;\n                diff = guess - score;\n\
    \                if (diff < 0) {\n                    result.Add(diff);\n    \
    \            }\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        foreach (var item in game) {\n        \
    \    score += item;\n        }\n        foreach (var item in guess) {\n      \
    \      guess += item;\n        }\n        foreach (var item in guess) {\n    \
    \        difference = Math.Abs(guess - score);\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      bool correct = false;\n        bool correct2 = false;\n        bool correct3\
    \ = false;\n        bool correct4 = false;\n        bool correct5 = false;\n \
    \       bool correct6 = false;\n        bool correct7 = false;\n        bool correct8\
    \ = false;\n        bool correct9 = false;\n        bool correct10 = false;\n\
    \        bool correct11 = false;\n        bool correct12 = false;\n        bool\
    \ correct13 = false;\n        bool correct14 = false;\n        bool correct15\
    \ = false;\n        bool correct16 = false;\n        bool correct17 = false;\n\
    \        bool correct18 = false;\n        bool correct19 = false;\n        bool\
    \ correct20 = false;\n        bool correct21 = false;\n        bool correct22\
    \ = false;\n        bool correct23 = false;\n        bool correct24 = false;\n\
    \        bool correct25 = false;\n        bool correct26 = false;\n        bool\
    \ correct27 = false;\n        bool correct28 = false;\n        bool correct29\
    \ = false;\n        bool correct30 = false;\n        bool correct31 = false;\n\
    \        bool correct32 = false;\n        bool correct33 = false;\n        bool\
    \ correct34 = false;\n        bool correct35 = false;\n        bool correct36\
    \ = false;\n        bool correct37 = false;\n        bool correct38 = false;\n\
    \        bool correct39 = false;\n        bool correct40 = false;\n        bool\
    \ correct41 = false;\n        bool correct42 = false;\n        bool correct43\
    \ = false;\n        bool correct44 = false;\n        bool correct45 = false;\n\
    \        bool correct46 = false;\n        bool correct47 = false;\n        bool\
    \ correct48 = false;\n        bool correct49 = false;\n        bool correct50\
    \ = false;\n        bool correct51 = false;\n        bool correct52 = false;\n\
    \        bool correct53 = false;\n        bool correct54 = false;\n        bool\
    \ correct55 = false;\n        bool correct56 = false;\n        bool correct57\
    \ = false;\n        bool correct58 = false;\n        bool correct59 = false;\n\
    \        bool correct60 = false;\n        bool correct61 = false;\n        bool\
    \ correct62 = false;\n        bool correct63 = false;\n        bool correct64\
    \ = false;\n        bool correct65 = false;\n        bool correct66 = false;\n\
    \        bool correct67 = false;\n        bool correct68 = false;\n        bool\
    \ correct69 = false;\n        bool correct70 = false;\n        bool correct71\
    \ = false;\n        bool correct72 = false;\n        bool correct73 = false;\n\
    \        bool correct74 = false;\n        bool correct75 = false;\n        bool\
    \ correct76 = false;\n        bool correct77 = false;\n        bool correct78\
    \ = false;\n        bool correct", "        var result = new List<long>();\n \
    \       var scores = new List<long>(game.Count);\n        foreach (var score in\
    \ game) {\n            scores.Add(score);\n        }\n        foreach (var guess\
    \ in guess) {\n            var difference = Math.Abs(guess - scores.Last());\n\
    \            if (difference > 0) {\n                result.Add(difference);\n\
    \            }\n            else {\n                result.Add(0);\n         \
    \   }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guess = 0;\n        long difference = 0;\n\
    \        bool correct = false;\n        foreach (var item in game) {\n       \
    \     score += item;\n        }\n        foreach (var item in guess) {\n     \
    \       guess += item;\n        }\n        foreach (var item in guess) {\n   \
    \         difference = Math.Abs(guess - score);\n            if (difference ==\
    \ 0) {\n                correct = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (!correct) {\n            result.Add(0);\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long score;\n        long guess;\n        bool correct;\n        long diff;\n\
    \        foreach (var item in guess) {\n            guess = item;\n          \
    \  correct = false;\n            foreach (var item2 in game) {\n             \
    \   score = item2;\n                diff = guess - score;\n                if\
    \ (diff < 0) {\n                    diff = -diff;\n                }\n       \
    \         if (diff == 0) {\n                    correct = true;\n            \
    \        break;\n                }\n            }\n            result.Add(correct\
    \ ? 0L : diff);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score;\n        long guess;\n  \
    \      long diff;\n        bool correct = false;\n        foreach (long g in game)\
    \ {\n            score = 0;\n            foreach (long g in guess) {\n       \
    \         guess = g;\n                diff = g - score;\n                if (diff\
    \ < 0)\n                    diff *= -1;\n                if (diff == 0)\n    \
    \                correct = true;\n                score += diff;\n           \
    \ }\n            result.Add(score);\n        }\n        return result;", "   \
    \     List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long guessed = 0;\n        long difference = 0;\n        foreach (long\
    \ g in game) {\n            guessed = g;\n            foreach (long g in guess)\
    \ {\n                difference = Math.Abs(g - guessed);\n                if (difference\
    \ == 0) {\n                    score = 0;\n                    break;\n      \
    \          }\n                else {\n                    score = difference;\n\
    \                    break;\n                }\n            }\n            result.Add(score);\n\
    \        }\n        return result;", "        // Your code goes here\n       \
    \ List<long> result = new List<long>();\n        long score = 0;\n        long\
    \ guess = 0;\n        foreach (var item in game) {\n            score = item;\n\
    \            guess = guess.Where(x => x == item).FirstOrDefault();\n         \
    \   if (guess == item) result.Add(0);\n            else result.Add(Math.Abs(item\
    \ - guess));\n        }\n        return result;", "        List<long> result =\
    \ new List<long>(game.Count);\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g;\n        }\n        if\
    \ (diff == score) {\n            foreach (long g in guess) {\n               \
    \ result.Add(0);\n            }\n        } else {\n            foreach (long g\
    \ in guess) {\n                result.Add(Math.Abs(g - score));\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long guessed = 0;\n        long difference =\
    \ 0;\n        foreach (long g in game) {\n            guessed = g;\n         \
    \   foreach (long g in guess) {\n                difference = Math.Abs(g - guessed);\n\
    \                if (difference < score) {\n                    score = difference;\n\
    \                }\n            }\n            result.Add(score);\n        }\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var g in game) {\n            var gDiff = Math.Abs(g - guess[game.IndexOf(g)]);\n\
    \            if (gDiff != 0) {\n                result.Add(gDiff);\n         \
    \   }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ guess in guess) {\n            score = game.Sum(x => x == guess ? 1 : 0);\n\
    \            difference = guess - score;\n            result.Add(difference);\n\
    \        }\n        return result;", "        // Your code here\n        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (var item in game) {\n            score += item;\n\
    \        }\n        foreach (var item in guess) {\n            diff += Math.Abs(item\
    \ - score);\n        }\n        foreach (var item in game) {\n            result.Add(Math.Abs(item\
    \ - diff));\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long score = 0;\n        long difference = 0;\n \
    \       foreach (long guess in guess) {\n            score += game[guess];\n \
    \           difference += Math.Abs(guess - score);\n        }\n        if (difference\
    \ == 0) {\n            result.Add(0);\n        } else {\n            result.Add(difference);\n\
    \        }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long diff = 0;\n        foreach (long g in game)\
    \ {\n            score += g;\n            foreach (long g in guess) {\n      \
    \          diff += Math.Abs(g - score);\n            }\n            result.Add(diff);\n\
    \            diff = 0;\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long score = 0;\n        long diff = 0;\n\
    \        foreach (long g in game) {\n            score += g;\n        }\n    \
    \    foreach (long g in guess) {\n            diff += g - score;\n        }\n\
    \        if (diff == 0) {\n            result.Add(0);\n        } else {\n    \
    \        result.Add(diff);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var scores = new List<long>(game.Count);\n    \
    \    var guesses = new List<long>(guess.Count);\n        var score = 0;\n    \
    \    var guess = 0;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n\
    \        var l = 0;\n        var m = 0;\n        var n = 0;\n        var o = 0;\n\
    \        var p = 0;\n        var q = 0;\n        var r = 0;\n        var s = 0;\n\
    \        var t = 0;\n        var u = 0;\n        var v = 0;\n        var w = 0;\n\
    \        var x = 0;\n        var y = 0;\n        var z = 0;\n        var a = 0;\n\
    \        var b = 0;\n        var c = 0;\n        var d = 0;\n        var e = 0;\n\
    \        var f = 0;\n        var g = 0;\n        var h = 0;\n        var i = 0;\n\
    \        var j = 0;\n        var k = 0;\n        var l = 0;\n        var m = 0;\n\
    \        var n = 0;\n        var o = 0;\n        var p = 0;\n        var q = 0;\n\
    \        var r = 0;\n        var s = 0;\n        var t = 0;\n        var u = 0;\n\
    \        var v = 0;\n        var w = 0;\n        var x = 0;\n        var y = 0;\n\
    \        var z = 0;\n        var a = 0;\n        var b = 0;\n        var c = 0;\n\
    \        var d = 0;\n        var e = 0;\n        var f = 0;\n        var g = 0;\n\
    \        var h = 0;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n\
    \        var l = 0;\n        var m = 0;\n        var n = 0;\n        var o = 0;\n\
    \        var p = 0;\n        var q = 0;\n        var r = 0;\n        var s = 0;\n\
    \        var t = 0;\n        var u = 0;\n        var v = 0;\n        var w = 0;\n\
    \        var x = 0;\n        var y = 0;\n        var z = 0;\n        var a = 0;\n\
    \        var b = 0;\n        var c = 0;\n        var d = 0;\n        var e = 0;\n\
    \        var f = 0;\n        var g = 0;\n        var h = 0;\n        var i = 0;\n\
    \        var j = 0;\n        var k = 0;\n        var l = 0;\n        var m = 0;\n\
    \        var n = 0;\n        var o = 0;\n        var p = 0;\n        var q = 0;\n\
    \        var r = 0;\n        var s = 0;\n        var t = 0;\n        var u = 0;\n\
    \        var v = 0;\n        var w = 0;\n        var x = 0;\n        var y = 0;\n\
    \        var z = 0;\n        var a = 0;\n        var b = 0;\n        var c = 0;\n\
    \        var d = 0;\n        var e = 0;\n        var f = 0;\n        var g = 0;\n\
    \        var h = 0;\n        var i = 0;\n        var j = 0;\n        var k = 0;\n\
    \        var l = 0;\n        var m = 0;\n        var n = 0;\n        var o = 0;\n\
    \        var p = 0;\n        var q = 0;\n        var r = 0;\n        var s = 0;\n\
    \        var t = 0;\n        var u = 0;\n        var v = 0;\n        var w = 0;\n\
    \        var x = 0;\n        var y = 0;\n        var z = 0;\n        var a", " \
    \       List<long> result = new List<long>(game.Count);\n        long score =\
    \ 0;\n        long difference = 0;\n        bool correct = false;\n        foreach\
    \ (long guess in guess) {\n            score += game[guess];\n            difference\
    \ = Math.Abs(guess - score);\n            if (difference == 0) {\n           \
    \     correct = true;\n            }\n            result.Add(difference);\n  \
    \      }\n        if (!correct) {\n            result.Add(0);\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  long score = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (long g in game) {\n            score += g;\n            if (guess.Contains(g))\
    \ {\n                correct = true;\n            }\n        }\n        if (correct)\
    \ {\n            result.Add(0);\n        } else {\n            foreach (long g\
    \ in guess) {\n                difference = Math.Abs(g - score);\n           \
    \     result.Add(difference);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long difference = 0;\n        foreach (long guess in guess) {\n     \
    \       score = game.Sum(x => x);\n            difference = guess - score;\n \
    \           result.Add(difference);\n        }\n        return result;", "   \
    \     List<long> result = new List<long>(game.Count);\n        long score = 0;\n\
    \        long diff = 0;\n        foreach (long g in game) {\n            foreach\
    \ (long g in guess) {\n                if (g == g) {\n                    score++;\n\
    \                } else {\n                    diff = g - score;\n           \
    \     }\n            }\n            result.Add(diff);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long score\
    \ = 0;\n        long diff = 0;\n        foreach (long g in game) {\n         \
    \   score += g;\n        }\n        foreach (long g in guess) {\n            diff\
    \ += g - score;\n        }\n        if (diff > 0) {\n            result.Add(diff);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score = 0;\n        foreach (long g in game) {\n            score\
    \ += g;\n        }\n        foreach (long g in guess) {\n            score -=\
    \ g;\n        }\n        if (score < 0) {\n            score *= -1;\n        }\n\
    \        result.Add(score);\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long score = 0;\n        long diff = 0;\n     \
    \   foreach (long g in game) {\n            score += g;\n        }\n        foreach\
    \ (long g in guess) {\n            diff += g - score;\n        }\n        foreach\
    \ (long g in guess) {\n            result.Add(diff - g);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>(game.Count);\n       \
    \ long score = 0;\n        long diff = 0;\n        foreach (long g in game) {\n\
    \            score += g;\n        }\n        foreach (long g in guess) {\n   \
    \         diff += g;\n        }\n        if (diff == score) {\n            for\
    \ (int i = 0; i < game.Count; i++) {\n                result.Add(0);\n       \
    \     }\n            return result;\n        }\n        long diffAbs = Math.Abs(diff);\n\
    \        long scoreAbs = Math.Abs(score);\n        double diffRatio = diffAbs\
    \ / scoreAbs;\n        double scoreRatio = score / scoreAbs;\n        double diffRatio2\
    \ = diffRatio / scoreRatio;\n        double scoreRatio2 = scoreRatio / diffRatio;\n\
    \        double diffRatio3 = diffRatio2 / scoreRatio2;\n        double scoreRatio3\
    \ = scoreRatio2 / diffRatio2;\n        double diffRatio4 = diffRatio3 / scoreRatio3;\n\
    \        double scoreRatio4 = scoreRatio3 / diffRatio3;\n        double diffRatio5\
    \ = diffRatio4 / scoreRatio4;\n        double scoreRatio5 = scoreRatio4 / diffRatio4;\n\
    \        double diffRatio6 = diffRatio5 / scoreRatio5;\n        double scoreRatio6\
    \ = scoreRatio5 / diffRatio5;\n        double diffRatio7 = diffRatio6 / scoreRatio6;\n\
    \        double scoreRatio7 = scoreRatio6 / diffRatio6;\n        double diffRatio8\
    \ = diffRatio7 / scoreRatio7;\n        double scoreRatio8 = scoreRatio7 / diffRatio7;\n\
    \        double diffRatio9 = diffRatio8 / scoreRatio8;\n        double scoreRatio9\
    \ = scoreRatio8 / diffRatio8;\n        double diffRatio10 = diffRatio9 / scoreRatio9;\n\
    \        double scoreRatio10 = scoreRatio9 / diffRatio9;\n        double diffRatio11\
    \ = diffRatio10 / scoreRatio10;\n        double scoreRatio11 = scoreRatio10 /\
    \ diffRatio10;\n        double diffRatio12 = diffRatio11 / scoreRatio11;\n   \
    \     double scoreRatio12 = scoreRatio11 / diffRatio11;\n        double diffRatio13\
    \ = diffRatio12 / scoreRatio12;\n        double scoreRatio13 = scoreRatio12 /\
    \ diffRatio12;\n        double diffRatio14 = diffRatio13 / scoreRatio13;\n   \
    \     double scoreRatio14 = scoreRatio13 / diffRatio13;\n        double diffRatio15\
    \ = diffRatio14 / scoreRatio14;\n        double scoreRatio15 = scoreRatio14 /\
    \ diffRatio14;\n        double diffRatio16 = diffRatio15 / scoreRatio15;\n   \
    \     double scoreRatio16 = score", "        // Your code goes here\n        var\
    \ result = game.Zip(guess, (a, b) => a - b).ToList();\n        return result;",
  "        List<long> result = new List<long>();\n        long score = 0;\n      \
    \  long guess = 0;\n        long difference = 0;\n        bool correct = false;\n\
    \        foreach (var item in game) {\n            guess = item.Value;\n     \
    \       difference = Math.Abs(guess - score);\n            if (guess == score)\
    \ {\n                correct = true;\n            }\n            result.Add(difference);\n\
    \        }\n        if (correct) {\n            result.Add(0);\n        }\n  \
    \      return result;", "        var result = new List<long>();\n        var scores\
    \ = new List<long>(game.Count);\n        foreach (var item in game) {\n      \
    \      scores.Add(item);\n        }\n        foreach (var item in guess) {\n \
    \           scores.Remove(item);\n        }\n        var differences = scores.Zip(scores,\
    \ (a, b) => a - b);\n        foreach (var item in differences) {\n           \
    \ if (item < 0) {\n                result.Add(item);\n            }\n        }\n\
    \        return result;", "        var result = new List<long>();\n        foreach\
    \ (var item in guess) {\n            var diff = item - game.FirstOrDefault(x =>\
    \ x == item);\n            if (diff != 0) {\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score = 0;\n        long diff =\
    \ 0;\n        foreach (long g in game) {\n            score += g;\n          \
    \  foreach (long g in guess) {\n                diff += Math.Abs(g - score);\n\
    \            }\n            result.Add(diff);\n            diff = 0;\n       \
    \ }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long guess = 0;\n        long diff = 0;\n  \
    \      foreach (long g in game) {\n            score += g;\n        }\n      \
    \  foreach (long g in guess) {\n            guess += g;\n        }\n        diff\
    \ = score - guess;\n        if (diff < 0) {\n            diff *= -1;\n       \
    \ }\n        foreach (long g in game) {\n            if (g == guess) {\n     \
    \           result.Add(0);\n            } else {\n                result.Add(diff);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>(game.Count);\n        long score;\n        long guess;\n  \
    \      long diff;\n        long diffAbs;\n        bool correct;\n        for (int\
    \ i = 0; i < game.Count; i++) {\n            score = game[i];\n            guess\
    \ = guess[i];\n            diffAbs = Math.Abs(guess - score);\n            diff\
    \ = Math.Abs(guess - score);\n            correct = guess == score;\n        \
    \    result.Add(diffAbs);\n            result.Add(diff);\n            result.Add(correct);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long score;\n        long guess;\n        bool correct;\n        long\
    \ diff;\n        foreach (var g in game) {\n            score = 0;\n         \
    \   correct = false;\n            foreach (var g in guess) {\n               \
    \ guess = g;\n                diff = g - score;\n                if (diff > 0)\
    \ {\n                    correct = true;\n                    break;\n       \
    \         }\n                score += diff;\n            }\n            result.Add(correct\
    \ ? 0L : Math.Abs(diff));\n        }\n        return result;", "        List<long>\
    \ result = new List<long>(game.Count);\n        long score = 0;\n        long\
    \ diff = 0;\n        foreach (long g in game) {\n            score += g;\n   \
    \         foreach (long g in guess) {\n                diff += Math.Abs(g - score);\n\
    \            }\n            result.Add(diff);\n        }\n        return result;",
  "        List<long> result = new List<long>(game.Count);\n        long score;\n\
    \        long guess;\n        bool correct;\n        long diff;\n        for (int\
    \ i = 0; i < game.Count; i++) {\n            score = game[i];\n            guess\
    \ = guess[i];\n            correct = guess == score;\n            diff = correct\
    \ ? 0 : Math.Abs(guess - score);\n            result.Add(diff);\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long score;\n        long guess;\n        long diff;\n        bool correct;\n\
    \        bool found;\n        bool found2;\n        bool found3;\n        bool\
    \ found4;\n        bool found5;\n        bool found6;\n        bool found7;\n\
    \        bool found8;\n        bool found9;\n        bool found10;\n        bool\
    \ found11;\n        bool found12;\n        bool found13;\n        bool found14;\n\
    \        bool found15;\n        bool found16;\n        bool found17;\n       \
    \ bool found18;\n        bool found19;\n        bool found20;\n        bool found21;\n\
    \        bool found22;\n        bool found23;\n        bool found24;\n       \
    \ bool found25;\n        bool found26;\n        bool found27;\n        bool found28;\n\
    \        bool found29;\n        bool found30;\n        bool found31;\n       \
    \ bool found32;\n        bool found33;\n        bool found34;\n        bool found35;\n\
    \        bool found36;\n        bool found37;\n        bool found38;\n       \
    \ bool found39;\n        bool found40;\n        bool found41;\n        bool found42;\n\
    \        bool found43;\n        bool found44;\n        bool found45;\n       \
    \ bool found46;\n        bool found47;\n        bool found48;\n        bool found49;\n\
    \        bool found50;\n        bool found51;\n        bool found52;\n       \
    \ bool found53;\n        bool found54;\n        bool found55;\n        bool found56;\n\
    \        bool found57;\n        bool found58;\n        bool found59;\n       \
    \ bool found60;\n        bool found61;\n        bool found62;\n        bool found63;\n\
    \        bool found64;\n        bool found65;\n        bool found66;\n       \
    \ bool found67;\n        bool found68;\n        bool found69;\n        bool found70;\n\
    \        bool found71;\n        bool found72;\n        bool found73;\n       \
    \ bool found74;\n        bool found75;\n        bool found76;\n        bool found77;\n\
    \        bool found78;\n        bool found79;\n        bool found80;\n       \
    \ bool found81;\n        bool found82;\n        bool found83;\n        bool found84",
  "        List<long> result = new List<long>();\n        long score;\n        long\
    \ guess;\n        long diff;\n        bool correct;\n        bool same;\n    \
    \    bool sameIndex;\n        bool sameScore;\n        bool sameGuesses;\n   \
    \     bool sameGuessesIndex;\n        bool sameGuessesScore;\n        bool sameGuessesGuesses;\n\
    \        bool sameGuessesGuessesIndex;\n        bool sameGuessesGuessesScore;\n\
    \        bool sameGuessesGuessesGuesses;\n        bool sameGuessesGuessesGuessesIndex;\n\
    \        bool sameGuessesGuessesGuessesScore;\n        bool sameGuessesGuessesGuessesGuesses;\n\
    \        bool sameGuessesGuessesGuessesGuessesIndex;\n        bool sameGuessesGuessesGuessesGuessesScore;\n\
    \        bool sameGuessesGuessesGuessesGuessesGuesses;\n        bool sameGuessesGuessesGuessesGuessesGuessesIndex;\n\
    \        bool sameGuessesGuessesGuessesGuessesGuessesScore;\n        bool sameGuessesGuessesGuessesGuessesGuessesGuesses;\n\
    \        bool sameGuessesGuessesGuessesGuessesGuessesGuessesIndex;\n        bool\
    \ sameGuessesGuessesGuessesGuessesGuessesGuessesScore;\n        bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuesses;\n\
    \        bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuessesIndex;\n  \
    \      bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuessesScore;\n    \
    \    bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuessesGuesses;\n    \
    \    bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuessesIndex;\n      \
    \  bool sameGuessesGuessesGuessesGuessesGuessesGuessesGuessesScore;\n        bool\
    \ sameGuessesGuessesGuessesGuessesGuessesGues", "        List<long> result = new\
    \ List<long>();\n        long score = 0;\n        long guess = 0;\n        long\
    \ diff = 0;\n        foreach (var item in game) {\n            score = item;\n\
    \            foreach (var item2 in guess) {\n                guess = item2;\n\
    \                diff = guess - score;\n                if (diff < 0) {\n    \
    \                result.Add(diff);\n                }\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>(game.Count);\n\
    \        long score = 0;\n        long difference = 0;\n        foreach (long\
    \ guess in guess) {\n            score = game.Sum(x => x == guess ? 1 : 0);\n\
    \            difference = guess - score;\n            result.Add(difference);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var g in game) {\n            var guessedCorrectly = guess.Contains(g);\n\
    \            var difference = g.CompareTo(guess);\n            result.Add(guessedCorrectly\
    \ ? difference : Math.Abs(difference));\n        }\n        return result;", " \
    \       List<long> result = new List<long>(game.Count);\n        long score =\
    \ 0;\n        long guessed = 0;\n        long difference = 0;\n        long diff\
    \ = 0;\n        foreach (long g in game) {\n            score += g;\n        }\n\
    \        foreach (long g in guess) {\n            guessed += g;\n        }\n \
    \       foreach (long g in guess) {\n            difference = Math.Abs(g - score);\n\
    \            diff = g - score;\n            if (difference == 0) {\n         \
    \       result.Add(0);\n            } else {\n                result.Add(difference);\n\
    \            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

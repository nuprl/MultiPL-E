language: cs
name: HumanEval_140_fix_spaces
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = text;\n        if (result.Contains(\"\
    \ \")) {\n            result = result.Replace(\" \", \"_\");\n            int\
    \ spaceCount = result.Count(x => x == \" \");\n            if (spaceCount > 2)\
    \ {\n                result = result.Replace(\" \", \"-\");\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n\
    \    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n\
    \    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n\
    \    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4lg3fd4b.cs(24,48): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''char'' and ''string''

    '
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            }\n            else {\n                result += c;\n           \
    \ }\n        }\n        if (result.Length > 2) {\n            int i = 0;\n   \
    \         while (i < result.Length - 2) {\n                if (result[i] == '_'\
    \ && result[i + 1] == '_') {\n                    result += \" - \";\n       \
    \             i += 2;\n                }\n                else {\n           \
    \         i++;\n                }\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08b77f447dc848a397cc20ee77081c40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08b77f447dc848a397cc20ee77081c40>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Length > 2) {\n            string newResult = \"\";\n    \
    \        int i = 0;\n            while (i < result.Length - 2) {\n           \
    \     newResult += \"-\";\n                i++;\n            }\n            result\
    \ += newResult;\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f3e48b9f06043198249ce9908ce58ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f3e48b9f06043198249ce9908ce58ab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Length > 2) {\n            int i = 0;\n            while (i\
    \ < result.Length - 2) {\n                if (result[i] == '_' && result[i + 1]\
    \ == '_') {\n                    result += result.Substring(i + 1, 2);\n     \
    \               i += 2;\n                } else {\n                    result\
    \ += result.Substring(i + 1, 1);\n                    i++;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800295
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        return Regex.Replace(text, @\"\\s+\", \"_\"\
    );\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8p4h9ckv.cs(21,16): error CS0103: The name ''Regex'' does not exist in
    the current context

    '
  timestamp: 1659800290
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += '_';\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Length > 2) {\n            string lastTwo = result.Substring(0,\
    \ result.Length - 2);\n            string rest = result.Substring(result.Length\
    \ - 2);\n            string newResult = lastTwo + \"-\" + rest;\n            return\
    \ newResult;\n        } else {\n            return result;\n        }\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f32664a78c4c5db41161ccb6f25fe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f32664a78c4c5db41161ccb6f25fe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        return text.Replace(\" \", \"_\").Replace(\"\
    \ -\", \"_\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c3981d008c48ae86d67176940cf75c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c3981d008c48ae86d67176940cf75c>:0 \n"
  stdout: ''
  timestamp: 1659800293
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Length > 2) {\n            string lastTwo = result.Substring(0,\
    \ result.Length - 2);\n            string rest = result.Substring(result.Length\
    \ - 2);\n            result += \"-\" + lastTwo;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1915472d35d406bab190c88327645a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1915472d35d406bab190c88327645a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        if (text == null || text.Length == 0) return\
    \ text;\n        var sb = new StringBuilder();\n        var lastSpace = -1;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    if (lastSpace == -1) {\n                    sb.Append(c);\n             \
    \       lastSpace = c;\n                } else if (lastSpace != c) {\n       \
    \             sb.Append('-');\n                    lastSpace = -1;\n         \
    \       }\n            } else {\n                if (lastSpace != -1) {\n    \
    \                sb.Append('-');\n                    lastSpace = -1;\n      \
    \          }\n                sb.Append(c);\n                lastSpace = c;\n\
    \            }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e5991f3fe89e492f8049a09652774b50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e5991f3fe89e492f8049a09652774b50>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        return text.Replace(\" \", \"_\").Replace(\"\
    \ -\", \"_\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c3981d008c48ae86d67176940cf75c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77c3981d008c48ae86d67176940cf75c>:0 \n"
  stdout: ''
  timestamp: 1659800293
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        // Replace all spaces with underscores\n \
    \       text = text.Replace(\" \", \"_\");\n        // If there are more than\
    \ 2 consecutive spaces, replace all \n        // consecutive spaces with -\n \
    \       if (text.Contains(\" \") && text.Contains(\" \")) {\n            text\
    \ = text.Replace(\" \", \"-\");\n        }\n        return text;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65674b1bf06d4d6a9802f08e1e28a66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65674b1bf06d4d6a9802f08e1e28a66b>:0 \n"
  stdout: ''
  timestamp: 1659800291
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        // Replace all spaces with underscores\n \
    \       text = text.Replace(\" \", \"_\");\n        // If there are more than\
    \ 2 consecutive spaces, replace all \n        // consecutive spaces with -\n \
    \       if (text.Contains(\" \") && (text.IndexOf(\" \") + 1 == text.LastIndexOf(\"\
    \ \")))\n            text = text.Replace(\" \", \"-\");\n        return text;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <422659afb948424d884eb4abdaa9cd24>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <422659afb948424d884eb4abdaa9cd24>:0 \n"
  stdout: ''
  timestamp: 1659800292
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        return text.Replace(\" \", \"_\").Replace(\"\
    \ \", \"-\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eec0124f3f3a41e68fa4170a64b489f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eec0124f3f3a41e68fa4170a64b489f3>:0 \n"
  stdout: ''
  timestamp: 1659800290
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        // Replace all spaces with underscores\n \
    \       text = text.Replace(\" \", \"_\");\n        // If text has more than 2\
    \ consecutive spaces\n        if (text.Contains(\" \") && (text.IndexOf(\" \"\
    ) + 1).Equals(text.Length)) {\n            // Replace all consecutive spaces with\
    \ -\n            text = text.Replace(\" \", \"-\");\n        }\n        return\
    \ text;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
    Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
    \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
    \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
    Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa\
    \ 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3dafdc8c184a4a569f8f4858d1dd282c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3dafdc8c184a4a569f8f4858d1dd282c>:0 \n"
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        // Replace all spaces with underscores\n \
    \       text = text.Replace(\" \", \"_\");\n        // If there are more than\
    \ 2 consecutive spaces, replace all \n        // consecutive spaces with -\n \
    \       if (text.Contains(\" \") && text.Contains(\" \")) {\n            text\
    \ = text.Replace(\" \", \"-\");\n        }\n        return text;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65674b1bf06d4d6a9802f08e1e28a66b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65674b1bf06d4d6a9802f08e1e28a66b>:0 \n"
  stdout: ''
  timestamp: 1659800291
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        if (text == null || text.Length == 0)\n  \
    \          return text;\n        StringBuilder sb = new StringBuilder(text.Length);\n\
    \        bool inSpace = false;\n        foreach (char c in text) {\n         \
    \   if (c == ' ') {\n                if (!inSpace) {\n                    inSpace\
    \ = true;\n                    sb.Append('_');\n                } else {\n   \
    \                 inSpace = false;\n                    sb.Append(c);\n      \
    \          }\n            } else {\n                sb.Append(c);\n          \
    \  }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a8dd82239554fdf8ae0475636f8a6e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a8dd82239554fdf8ae0475636f8a6e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        if (text == null || text.Length == 0)\n  \
    \          return text;\n        StringBuilder sb = new StringBuilder(text);\n\
    \        bool isFirst = true;\n        foreach (char c in text) {\n          \
    \  if (c == ' ') {\n                if (isFirst) {\n                    isFirst\
    \ = false;\n                } else {\n                    sb.Append('_');\n  \
    \              }\n            } else {\n                isFirst = true;\n    \
    \        }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84994c37fb9142edbb6f36ef3e5d2dcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84994c37fb9142edbb6f36ef3e5d2dcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        if (text == null || text.Length == 0)\n  \
    \          return text;\n        StringBuilder sb = new StringBuilder(text);\n\
    \        bool spaceFound = false;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                spaceFound = true;\n \
    \               sb.Append('_');\n            } else {\n                if (spaceFound)\
    \ {\n                    spaceFound = false;\n                    sb.Append('-');\n\
    \                }\n                sb.Append(text[i]);\n            }\n     \
    \   }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n\
    \    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n\
    \    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\"\
    )));\n    Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n\
    \    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b92e123cddad4aa7a6828b21402ad823>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b92e123cddad4aa7a6828b21402ad823>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (c == ' ') {\n                result += \"_\";\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        if (result.Length > 2) {\n            int lastSpace = result.LastIndexOf('\
    \ ');\n            int lastSpace2 = result.LastIndexOf(' ', lastSpace - 1);\n\
    \            if (lastSpace2 != -1) {\n                result = result.Substring(0,\
    \ lastSpace) + \"-\" + result.Substring(lastSpace2);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(FixSpaces((\"Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"\
    Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"\
    Yellow Yellow  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n\
    \    Debug.Assert(FixSpaces((\"Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"\
    \   Exa 1 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.LastIndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00013] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.LastIndexOf (System.Char value, System.Int32 startIndex)\
    \ [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FixSpaces (System.String\
    \ text) [0x0006a] in <7fd106315cd641779348c012b5504c4e>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x00001] in <7fd106315cd641779348c012b5504c4e>:0 \n\
    [ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was\
    \ out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.LastIndexOf (System.Char value,\
    \ System.Int32 startIndex, System.Int32 count) [0x00013] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.LastIndexOf (System.Char value, System.Int32 startIndex)\
    \ [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FixSpaces (System.String\
    \ text) [0x0006a] in <7fd106315cd641779348c012b5504c4e>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x00001] in <7fd106315cd641779348c012b5504c4e>:0 \n"
  stdout: ''
  timestamp: 1659800428
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string text, replace all spaces in it with underscores,\
    \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
    \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    //\
    \ (\"Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\"\
    )\n    // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>>\
    \ FixSpaces((\" Example 3\"))\n    // (\"_Example-3\")\n    public static string\
    \ FixSpaces(string text) {\n        if (text == null || text.Length == 0)\n  \
    \          return text;\n        StringBuilder sb = new StringBuilder();\n   \
    \     bool isFirst = true;\n        foreach (char c in text) {\n            if\
    \ (c == ' ') {\n                if (isFirst) {\n                    isFirst =\
    \ false;\n                } else {\n                    sb.Append('_');\n    \
    \            }\n            } else {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FixSpaces((\"Example\")).Equals((\"\
    Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif \")).Equals((\"Mudasir_Hanif_\"\
    )));\n    Debug.Assert(FixSpaces((\"Yellow Yellow  Dirty  Fellow\")).Equals((\"\
    Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"Exa   mple\"\
    )).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1 2 2 mple\"\
    )).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fde15724e6ca4009a31d4f22cd08f8a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fde15724e6ca4009a31d4f22cd08f8a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800428

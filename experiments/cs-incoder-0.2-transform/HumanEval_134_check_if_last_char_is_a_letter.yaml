name: HumanEval_134_check_if_last_char_is_a_letter
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that returns True if the last character\n\
  \    // of a given string is an alphabetical character and is not\n    // a part\
  \ of a word, and False otherwise.\n    // Note: \"word\" is a group of characters\
  \ separated by space.\n    // Examples:\n    // >>> CheckIfLastCharIsALetter((\"\
  apple pie\"))\n    // (false)\n    // >>> CheckIfLastCharIsALetter((\"apple pi e\"\
  ))\n    // (true)\n    // >>> CheckIfLastCharIsALetter((\"apple pi e \"))\n    //\
  \ (false)\n    // >>> CheckIfLastCharIsALetter((\"\"))\n    // (false)\n    public\
  \ static bool CheckIfLastCharIsALetter(string txt) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  apple\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"apple pi e\"\
  )) == (true));\n    Debug.Assert(CheckIfLastCharIsALetter((\"eeeee\")) == (false));\n\
  \    Debug.Assert(CheckIfLastCharIsALetter((\"A\")) == (true));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  Pumpkin pie \")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"Pumpkin\
  \ pie 1\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\")) == (false));\n\
  \    Debug.Assert(CheckIfLastCharIsALetter((\"eeeee e \")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"\
  apple pie\")) == (false));\n    Debug.Assert(CheckIfLastCharIsALetter((\"apple pi\
  \ e \")) == (false));\n    }\n\n}\n"
completions: ["        if (txt.Length > 0) {\n            char lastChar = txt[txt.Length\
    \ - 1];\n            if (char.IsLetter(lastChar)) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (string.IsNullOrEmpty(txt))\
    \ return false;\n        char lastChar = txt[txt.Length - 1];\n        return\
    \ lastChar == ' ' || lastChar == '.' || lastChar == '-' || lastChar == '_';",
  "        if (string.IsNullOrEmpty(txt))\n            return false;\n        if (txt.Length\
    \ == 0)\n            return false;\n        char lastChar = txt[txt.Length - 1];\n\
    \        if (lastChar < 'a' || lastChar > 'z')\n            return false;\n  \
    \      string words = txt.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).ToList();\n\
    \        foreach (string word in words)\n        {\n            if (word.Length\
    \ == 0)\n                continue;\n            char firstChar = word[0];\n  \
    \          if (firstChar < 'a' || firstChar > 'z')\n                return false;\n\
    \        }\n        return true;", "        string lastChar = txt.Substring(txt.Length\
    \ - 1, 1);\n        bool isLastCharAlpha = char.IsLetter(lastChar);\n        bool\
    \ isLastCharNotWord = txt.Split().All(w => !w.Contains(lastChar));\n        return\
    \ isLastCharAlpha && !isLastCharNotWord;", "        if (txt.Length > 0) {\n  \
    \          char lastChar = txt[txt.Length - 1];\n            if (char.IsLetter(lastChar))\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        string lastChar = txt.Substring(txt.Length - 1, 1);\n        bool isLastCharAlpha\
    \ = char.IsLetter(lastChar);\n        bool isLastCharNotWord = lastChar.Split(\"\
    \ \").Length > 1;\n        return isLastCharAlpha && !isLastCharNotWord;", " \
    \       if (txt.Length > 0) {\n            char lastChar = txt[txt.Length - 1];\n\
    \            if (char.IsLetter(lastChar)) {\n                return false;\n \
    \           }\n        }\n        return true;", "        string lastChar = txt.Substring(txt.Length\
    \ - 1);\n        bool isALetter = false;\n        foreach (char c in lastChar)\
    \ {\n            if (char.IsLetter(c)) {\n                isALetter = true;\n\
    \            }\n        }\n        return !isALetter;", "        if (txt.Length\
    \ > 0)\n        {\n            char lastChar = txt[txt.Length - 1];\n        \
    \    bool isLastCharALetter = false;\n            foreach (char c in txt)\n  \
    \          {\n                if (char.IsLetter(c))\n                {\n     \
    \               isLastCharALetter = true;\n                    break;\n      \
    \          }\n            }\n            return !isLastCharALetter;\n        }\n\
    \        return false;", "        string lastChar = txt.Substring(txt.Length -\
    \ 1, 1);\n        bool isLastCharAlphabetical = lastChar.All(char.IsLetter);\n\
    \        bool isLastCharNotWord = lastChar.Split(' ').All(x => !x.Contains(lastChar));\n\
    \        return isLastCharAlphabetical && !isLastCharNotWord;", "        bool\
    \ result = false;\n        if (txt.Length > 0) {\n            char lastChar =\
    \ txt[txt.Length - 1];\n            if (lastChar >= 'a' && lastChar <= 'z') {\n\
    \                result = true;\n            }\n        }\n        return result;",
  "        string lastChar = txt.Substring(txt.Length - 1, 1);\n        if (lastChar.ToUpper()\
    \ == lastChar) {\n            return false;\n        }\n        char[] chars =\
    \ lastChar.ToCharArray();\n        foreach (char c in chars) {\n            if\
    \ (char.IsLetter(c)) {\n                return true;\n            }\n        }\n\
    \        return false;", "        string lastChar = txt.Substring(txt.Length -\
    \ 1);\n        bool isLastCharALetter = false;\n        bool isLastCharNotALetter\
    \ = false;\n        bool isLastCharNotALetter2 = false;\n        bool isLastCharNotALetter3\
    \ = false;\n        bool isLastCharNotALetter4 = false;\n        bool isLastCharNotALetter5\
    \ = false;\n        bool isLastCharNotALetter6 = false;\n        bool isLastCharNotALetter7\
    \ = false;\n        bool isLastCharNotALetter8 = false;\n        bool isLastCharNotALetter9\
    \ = false;\n        bool isLastCharNotALetter10 = false;\n        bool isLastCharNotALetter11\
    \ = false;\n        bool isLastCharNotALetter12 = false;\n        bool isLastCharNotALetter13\
    \ = false;\n        bool isLastCharNotALetter14 = false;\n        bool isLastCharNotALetter15\
    \ = false;\n        bool isLastCharNotALetter16 = false;\n        bool isLastCharNotALetter17\
    \ = false;\n        bool isLastCharNotALetter18 = false;\n        bool isLastCharNotALetter19\
    \ = false;\n        bool isLastCharNotALetter20 = false;\n        bool isLastCharNotALetter21\
    \ = false;\n        bool isLastCharNotALetter22 = false;\n        bool isLastCharNotALetter23\
    \ = false;\n        bool isLastCharNotALetter24 = false;\n        bool isLastCharNotALetter25\
    \ = false;\n        bool isLastCharNotALetter26 = false;\n        bool isLastCharNotALetter27\
    \ = false;\n        bool isLastCharNotALetter28 = false;\n        bool isLastCharNotALetter29\
    \ = false;\n        bool isLastCharNotALetter30 = false;\n        bool isLastCharNotALetter31\
    \ = false;\n        bool isLastCharNotALetter32 = false;\n        bool isLastCharNotALetter33\
    \ = false;\n        bool isLastCharNotALetter34 = false;\n        bool isLastCharNotALetter35\
    \ = false;\n        bool isLastCharNotALetter36 = false;\n        bool isLastCharNotALetter37\
    \ = false;\n        bool isLastCharNotALetter38 = false;\n        bool isLastCharNotALetter39\
    \ = false;\n        bool isLastCharNotALetter40 = false;\n        bool isLastCharNot",
  "        string lastChar = txt.Substring(txt.Length - 1);\n        bool isLastCharALetter\
    \ = false;\n        bool isLastCharNotALetter = false;\n        bool isLastCharNotALetter2\
    \ = false;\n        bool isLastCharNotALetter3 = false;\n        bool isLastCharNotALetter4\
    \ = false;\n        bool isLastCharNotALetter5 = false;\n        bool isLastCharNotALetter6\
    \ = false;\n        bool isLastCharNotALetter7 = false;\n        bool isLastCharNotALetter8\
    \ = false;\n        bool isLastCharNotALetter9 = false;\n        bool isLastCharNotALetter10\
    \ = false;\n        bool isLastCharNotALetter11 = false;\n        bool isLastCharNotALetter12\
    \ = false;\n        bool isLastCharNotALetter13 = false;\n        bool isLastCharNotALetter14\
    \ = false;\n        bool isLastCharNotALetter15 = false;\n        bool isLastCharNotALetter16\
    \ = false;\n        bool isLastCharNotALetter17 = false;\n        bool isLastCharNotALetter18\
    \ = false;\n        bool isLastCharNotALetter19 = false;\n        bool isLastCharNotALetter20\
    \ = false;\n        bool isLastCharNotALetter21 = false;\n        bool isLastCharNotALetter22\
    \ = false;\n        bool isLastCharNotALetter23 = false;\n        bool isLastCharNotALetter24\
    \ = false;\n        bool isLastCharNotALetter25 = false;\n        bool isLastCharNotALetter26\
    \ = false;\n        bool isLastCharNotALetter27 = false;\n        bool isLastCharNotALetter28\
    \ = false;\n        bool isLastCharNotALetter29 = false;\n        bool isLastCharNotALetter30\
    \ = false;\n        bool isLastCharNotALetter31 = false;\n        bool isLastCharNotALetter32\
    \ = false;\n        bool isLastCharNotALetter33 = false;\n        bool isLastCharNotALetter34\
    \ = false;\n        bool isLastCharNotALetter35 = false;\n        bool isLastCharNotALetter36\
    \ = false;\n        bool isLastCharNotALetter37 = false;\n        bool isLastCharNotALetter38\
    \ = false;\n        bool isLastCharNotALetter39 = false;\n        bool isLastCharNotALetter40\
    \ = false;\n        bool isLastCharNot", "        string lastChar = txt.Substring(txt.Length\
    \ - 1, 1);\n        bool result = false;\n        foreach (char c in lastChar)\
    \ {\n            if (char.IsLetter(c)) {\n                result = true;\n   \
    \         }\n        }\n        return result;", "        string lastChar = txt.Substring(txt.Length\
    \ - 1, 1);\n        bool result = false;\n        foreach (char c in lastChar)\
    \ {\n            if (char.IsLetter(c)) {\n                result = true;\n   \
    \             break;\n            }\n        }\n        return result;", "   \
    \     if (txt.Length == 0)\n            return false;\n        if (txt.Length\
    \ == 1)\n            return true;\n        char lastChar = txt[txt.Length - 1];\n\
    \        bool isLastCharAlpha = char.IsLetter(lastChar);\n        bool isLastCharNotWord\
    \ = txt.Split().All(x => !x.Contains(lastChar));\n        return isLastCharAlpha\
    \ && !isLastCharNotWord;", "        if (txt.Length == 0)\n            return false;\n\
    \        var lastChar = txt[txt.Length - 1];\n        var isAlpha = char.IsLetterOrDigit(lastChar);\n\
    \        var isNotWord = txt.Split().All(w => !w.Contains(lastChar));\n      \
    \  return isAlpha && !isNotWord;", "        bool result = false;\n        if (txt.Length\
    \ > 0) {\n            char lastChar = txt[txt.Length - 1];\n            if (lastChar\
    \ >= 'a' && lastChar <= 'z') {\n                result = true;\n            }\n\
    \        }\n        return result;", "        string lastChar = txt.Substring(txt.Length\
    \ - 1);\n        bool isLastCharALetter = false;\n        bool isLastCharNotALetter\
    \ = false;\n        foreach (char c in lastChar) {\n            if (char.IsLetter(c))\
    \ {\n                isLastCharALetter = true;\n            }\n            else\
    \ {\n                isLastCharNotALetter = true;\n            }\n        }\n\
    \        return isLastCharALetter && !isLastCharNotALetter;"]
stop_tokens:
- "\n    }\n"

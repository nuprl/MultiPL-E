name: HumanEval_24_largest_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given number n, find the largest number that divides n\
  \ evenly, smaller than n\n    // >>> LargestDivisor((15L))\n    // (5L)\n    public\
  \ static long LargestDivisor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
  \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
  \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
  \ == (7L));\n    }\n\n}\n"
completions: ["        long largestDivisor = 1;\n        long currentDivisor = 1;\n\
    \        long currentDivisorRemainder = 0;\n        while (currentDivisor <= n)\
    \ {\n            currentDivisorRemainder = n % currentDivisor;\n            if\
    \ (currentDivisorRemainder == 0) {\n                largestDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return largestDivisor;",
  "        long maxDivisor = 1;\n        long currentDivisor = 1;\n        long currentDivisorRemainder\
    \ = 0;\n        long currentDivisorMax = 0;\n        long currentDivisorMin =\
    \ 1;\n        long currentDivisorMaxMin = 0;\n        long currentDivisorMaxMinRemainder\
    \ = 0;\n        long currentDivisorMaxMinMax = 0;\n        long currentDivisorMaxMinMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMax = 0;\n        long\
    \ currentDivisorMaxMinMaxMaxMaxMaxMaxRemainder = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxRemainder = 0;\n  \
    \      long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMax = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxRemainder\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMax = 0;\n        long\
    \ currentDivisorMaxMinMaxMaxMaxMaxMaxMaxRemainder = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxRemainder = 0;\n\
    \        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxMax = 0;\n        long\
    \ currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxRemainder = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ = 0;\n        long currentDivisorMaxMinMaxMaxMaxMaxMaxMaxMaxRemainder = 0;\n\
    \        long currentDivisorMax", "        long largestDivisor = n;\n        long\
    \ divisor = 1;\n        while (divisor < n) {\n            divisor *= 2;\n   \
    \         if (n % divisor == 0) {\n                largestDivisor = divisor;\n\
    \            }\n        }\n        return largestDivisor;", "        long largestDivisor\
    \ = n;\n        long currentDivisor = 1;\n        while (currentDivisor <= largestDivisor)\
    \ {\n            currentDivisor = currentDivisor + 1;\n            if (n % currentDivisor\
    \ == 0) {\n                largestDivisor = currentDivisor;\n            }\n \
    \       }\n        return largestDivisor;", "        long largestDivisor = 0;\n\
    \        long divisor = 1;\n        while (divisor <= n) {\n            if (n\
    \ % divisor == 0) {\n                largestDivisor = divisor;\n            }\n\
    \            divisor++;\n        }\n        return largestDivisor;", "       \
    \ long largestDivisor = n;\n        long divisor = 1;\n        while (divisor\
    \ < n) {\n            divisor *= 2;\n            if (n % divisor == 0) {\n   \
    \             largestDivisor = divisor;\n            }\n        }\n        return\
    \ largestDivisor;", "        long maxDivisor = n;\n        long currentDivisor\
    \ = 1;\n        while (currentDivisor <= maxDivisor) {\n            long currentDivisorRemainder\
    \ = n % currentDivisor;\n            if (currentDivisorRemainder == 0) {\n   \
    \             maxDivisor = currentDivisor;\n            } else {\n           \
    \     currentDivisor++;\n            }\n        }\n        return maxDivisor;",
  "        long maxDivisor = 1;\n        long currentDivisor = 1;\n        long currentMaxDivisor\
    \ = 1;\n        long currentMaxDivisorFactor = 1;\n        long currentMaxDivisorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactorFactor = 1;\n        long\
    \ currentMaxDivisorFactorFactorFactor = 1;\n        long currentMaxDivisorFactorFactorFactor\
    \ = 1;\n        long currentMaxDivisorFactorFactorFactor = 1;\n        long currentMaxDivisorFactor",
  "        long largestDivisor = n;\n        long largestDivisorFactor = 1;\n    \
    \    while (largestDivisorFactor <= n) {\n            if (n % largestDivisorFactor\
    \ == 0) {\n                largestDivisor = largestDivisorFactor;\n          \
    \  }\n            largestDivisorFactor++;\n        }\n        return largestDivisor;",
  "        long largestDivisor = 1;\n        long currentDivisor = 1;\n        while\
    \ (currentDivisor <= n) {\n            if (n % currentDivisor == 0) {\n      \
    \          largestDivisor = currentDivisor;\n            }\n            currentDivisor++;\n\
    \        }\n        return largestDivisor;", "        long largestDivisor = n;\n\
    \        long largestDivisorDivisor = 1;\n        long largestDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisor = 1;\n        long largestDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisor = 1;\n\
    \        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long largestDivisorDivisorDivisorDivisorDivisorDivisorDivisorDivisor\
    \ = 1;\n        long lar", "        long largestDivisor = n;\n        long largestDivisorFactor\
    \ = 1;\n        long largestDivisorFactorFactor = 1;\n        long largestDivisorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactor = 1;\n        long\
    \ largestDivisorFactorFactorFactorFactorFactor = 1;\n        long largestDivisorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactor = 1;\n\
    \        long largestDivisorFactorFactorFactorFactorFactorFactorFactor = 1;\n\
    \        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactor =\
    \ 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactorFactorFactorFactorFactorFactor\
    \ = 1;\n        long largestDivisorFactorFactorFactorFactorFactor", "        long\
    \ maxDivisor = 1;\n        long currentDivisor = 1;\n        while (currentDivisor\
    \ <= n) {\n            if (n % currentDivisor == 0) {\n                maxDivisor\
    \ = currentDivisor;\n            }\n            currentDivisor++;\n        }\n\
    \        return maxDivisor;", "        long largestDivisor = n;\n        long\
    \ largestDivisorFactor = 1;\n        long largestDivisorFactor2 = 1;\n       \
    \ long largestDivisorFactor3 = 1;\n        long largestDivisorFactor4 = 1;\n \
    \       long largestDivisorFactor5 = 1;\n        long largestDivisorFactor6 =\
    \ 1;\n        long largestDivisorFactor7 = 1;\n        long largestDivisorFactor8\
    \ = 1;\n        long largestDivisorFactor9 = 1;\n        long largestDivisorFactor10\
    \ = 1;\n        long largestDivisorFactor11 = 1;\n        long largestDivisorFactor12\
    \ = 1;\n        long largestDivisorFactor13 = 1;\n        long largestDivisorFactor14\
    \ = 1;\n        long largestDivisorFactor15 = 1;\n        long largestDivisorFactor16\
    \ = 1;\n        long largestDivisorFactor17 = 1;\n        long largestDivisorFactor18\
    \ = 1;\n        long largestDivisorFactor19 = 1;\n        long largestDivisorFactor20\
    \ = 1;\n        long largestDivisorFactor21 = 1;\n        long largestDivisorFactor22\
    \ = 1;\n        long largestDivisorFactor23 = 1;\n        long largestDivisorFactor24\
    \ = 1;\n        long largestDivisorFactor25 = 1;\n        long largestDivisorFactor26\
    \ = 1;\n        long largestDivisorFactor27 = 1;\n        long largestDivisorFactor28\
    \ = 1;\n        long largestDivisorFactor29 = 1;\n        long largestDivisorFactor30\
    \ = 1;\n        long largestDivisorFactor31 = 1;\n        long largestDivisorFactor32\
    \ = 1;\n        long largestDivisorFactor33 = 1;\n        long largestDivisorFactor34\
    \ = 1;\n        long largestDivisorFactor35 = 1;\n        long largestDivisorFactor36\
    \ = 1;\n        long largestDivisorFactor37 = 1;\n        long largestDivisorFactor38\
    \ = 1;\n        long largestDivisorFactor39 = 1;\n        long largestDivisorFactor40\
    \ = 1;\n        long largestDivisorFactor41 = 1;\n        long largestDivisorFactor42\
    \ = 1;\n        long largestDivisorFactor43 = 1;\n        long largestDivisorFactor44\
    \ = 1;\n        long largestDivisorFactor45 = 1;\n        long largestDivisorFactor46\
    \ = 1;\n        long largestDivisorFactor47 = 1;\n        long largestDivisorFactor48\
    \ = 1;\n        long largestDivisorFactor49 = 1;\n        long largestDivisorFactor50\
    \ = 1;\n        long lar", "        long maxDivisor = 1;\n        long currentDivisor\
    \ = 1;\n        long currentDivisorRemainder = 1;\n        long currentDivisorDivisor\
    \ = 1;\n        long currentDivisorDivisorRemainder = 1;\n        long currentDivisorRemainderDivisor\
    \ = 1;\n        long currentDivisorDivisorDivisor = 1;\n        long currentDivisorRemainderDivisorDivisor\
    \ = 1;\n        long currentDivisorDivisorRemainderDivisor = 1;\n        long\
    \ currentDivisorRemainderDivisorRemainder = 1;\n        long currentDivisorRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderDivisor = 1;\n        long\
    \ currentDivisorRemainderRemainderDivisor = 1;\n        long currentDivisorRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor = 1;\n \
    \       long currentDivisorRemainderRemainderRemainder = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainder = 1;\n        long\
    \ currentDivisorRemainderRemainderRemainderDivisor = 1;\n        long currentDivisorRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor = 1;\n \
    \       long currentDivisorRemainderRemainderRemainder = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainder = 1;\n        long\
    \ currentDivisorRemainderRemainderRemainderDivisor = 1;\n        long currentDivisorRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor = 1;\n \
    \       long currentDivisorRemainderRemainderRemainder = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainder = 1;\n        long\
    \ currentDivisorRemainderRemainderRemainderDivisor = 1;\n        long currentDivisorRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor = 1;\n \
    \       long currentDivisorRemainderRemainderRemainder = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainder = 1;\n        long\
    \ currentDivisorRemainderRemainderRemainderDivisor = 1;\n        long currentDivisorRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderDivisor = 1;\n \
    \       long currentDivisorRemainder", "        long maxDivisor = n;\n       \
    \ long currentDivisor = 1;\n        while (currentDivisor <= maxDivisor) {\n \
    \           if (n % currentDivisor == 0) {\n                maxDivisor = currentDivisor;\n\
    \            }\n            currentDivisor++;\n        }\n        return maxDivisor;",
  "        long largestDivisor = n;\n        long currentDivisor = 1;\n        while\
    \ (currentDivisor <= largestDivisor) {\n            if (n % currentDivisor ==\
    \ 0) {\n                largestDivisor = currentDivisor;\n            }\n    \
    \        currentDivisor++;\n        }\n        return largestDivisor;", "    \
    \    long largestDivisor = n;\n        long currentDivisor = 1;\n        while\
    \ (currentDivisor <= n) {\n            if (n % currentDivisor == 0) {\n      \
    \          largestDivisor = currentDivisor;\n            }\n            currentDivisor++;\n\
    \        }\n        return largestDivisor;", "        long largestDivisor = n;\n\
    \        long largestDivisorFactor = 1;\n        long largestDivisorFactor2 =\
    \ 1;\n        long largestDivisorFactor3 = 1;\n        long largestDivisorFactor4\
    \ = 1;\n        long largestDivisorFactor5 = 1;\n        long largestDivisorFactor6\
    \ = 1;\n        long largestDivisorFactor7 = 1;\n        long largestDivisorFactor8\
    \ = 1;\n        long largestDivisorFactor9 = 1;\n        long largestDivisorFactor10\
    \ = 1;\n        long largestDivisorFactor11 = 1;\n        long largestDivisorFactor12\
    \ = 1;\n        long largestDivisorFactor13 = 1;\n        long largestDivisorFactor14\
    \ = 1;\n        long largestDivisorFactor15 = 1;\n        long largestDivisorFactor16\
    \ = 1;\n        long largestDivisorFactor17 = 1;\n        long largestDivisorFactor18\
    \ = 1;\n        long largestDivisorFactor19 = 1;\n        long largestDivisorFactor20\
    \ = 1;\n        long largestDivisorFactor21 = 1;\n        long largestDivisorFactor22\
    \ = 1;\n        long largestDivisorFactor23 = 1;\n        long largestDivisorFactor24\
    \ = 1;\n        long largestDivisorFactor25 = 1;\n        long largestDivisorFactor26\
    \ = 1;\n        long largestDivisorFactor27 = 1;\n        long largestDivisorFactor28\
    \ = 1;\n        long largestDivisorFactor29 = 1;\n        long largestDivisorFactor30\
    \ = 1;\n        long largestDivisorFactor31 = 1;\n        long largestDivisorFactor32\
    \ = 1;\n        long largestDivisorFactor33 = 1;\n        long largestDivisorFactor34\
    \ = 1;\n        long largestDivisorFactor35 = 1;\n        long largestDivisorFactor36\
    \ = 1;\n        long largestDivisorFactor37 = 1;\n        long largestDivisorFactor38\
    \ = 1;\n        long largestDivisorFactor39 = 1;\n        long largestDivisorFactor40\
    \ = 1;\n        long largestDivisorFactor41 = 1;\n        long largestDivisorFactor42\
    \ = 1;\n        long largestDivisorFactor43 = 1;\n        long largestDivisorFactor44\
    \ = 1;\n        long largestDivisorFactor45 = 1;\n        long largestDivisorFactor46\
    \ = 1;\n        long largestDivisorFactor47 = 1;\n        long largestDivisorFactor48\
    \ = 1;\n        long largestDivisorFactor49 = 1;\n        long largestDivisorFactor50\
    \ = 1;\n        long lar", "        long largestDivisor = 1;\n        long currentDivisor\
    \ = 1;\n        long currentDivisorRemainder = 1;\n        long currentDivisorRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainder = 1;\n        long\
    \ currentDivisorRemainderRemainderRemainderRemainder = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 1;\n        long currentDivisorRemainderRemainderRemainderRemainderRemainderRemain"]
stop_tokens:
- "\n    }\n"

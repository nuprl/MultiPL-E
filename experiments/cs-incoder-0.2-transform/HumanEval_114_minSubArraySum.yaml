name: HumanEval_114_minSubArraySum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n    // of nums.\n    // Example\n    // >>> Minsubarraysum((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\n\
  \    // (1L)\n    // >>> Minsubarraysum((new List<long>(new long[]{(long)-1L, (long)-2L,\
  \ (long)-3L})))\n    // (-6L)\n    public static long Minsubarraysum(List<long>\
  \ nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\
  \ == (1L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)-1L, (long)-2L, (long)-3L, (long)2L, (long)-10L}))) == (-14L));\n\
  \    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-9999999999999999L})))\
  \ == (-9999999999999999L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)0L, (long)10L, (long)20L, (long)1000000L}))) == (0L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L})))\
  \ == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)10L, (long)11L, (long)13L, (long)8L, (long)3L, (long)4L})))\
  \ == (3L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-33L, (long)32L, (long)-1L, (long)0L, (long)-2L}))) == (-33L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-10L}))) == (-10L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)7L}))) == (7L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)1L, (long)-1L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long minSum = nums.Min();\n        long sum = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (var\
    \ num in nums) {\n            sum += num;\n            if (sum < min) {\n    \
    \            min = sum;\n            }\n        }\n        return min;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        foreach (var num\
    \ in nums) {\n            sum += num;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Sum();\n        long sum = 0;\n        foreach (long num\
    \ in nums) {\n            sum += num;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long minSum2 = nums.Min();\n       \
    \ long minSum3 = nums.Min();\n        long minSum4 = nums.Min();\n        long\
    \ minSum5 = nums.Min();\n        long minSum6 = nums.Min();\n        long minSum7\
    \ = nums.Min();\n        long minSum8 = nums.Min();\n        long minSum9 = nums.Min();\n\
    \        long minSum10 = nums.Min();\n        long minSum11 = nums.Min();\n  \
    \      long minSum12 = nums.Min();\n        long minSum13 = nums.Min();\n    \
    \    long minSum14 = nums.Min();\n        long minSum15 = nums.Min();\n      \
    \  long minSum16 = nums.Min();\n        long minSum17 = nums.Min();\n        long\
    \ minSum18 = nums.Min();\n        long minSum19 = nums.Min();\n        long minSum20\
    \ = nums.Min();\n        long minSum21 = nums.Min();\n        long minSum22 =\
    \ nums.Min();\n        long minSum23 = nums.Min();\n        long minSum24 = nums.Min();\n\
    \        long minSum25 = nums.Min();\n        long minSum26 = nums.Min();\n  \
    \      long minSum27 = nums.Min();\n        long minSum28 = nums.Min();\n    \
    \    long minSum29 = nums.Min();\n        long minSum30 = nums.Min();\n      \
    \  long minSum31 = nums.Min();\n        long minSum32 = nums.Min();\n        long\
    \ minSum33 = nums.Min();\n        long minSum34 = nums.Min();\n        long minSum35\
    \ = nums.Min();\n        long minSum36 = nums.Min();\n        long minSum37 =\
    \ nums.Min();\n        long minSum38 = nums.Min();\n        long minSum39 = nums.Min();\n\
    \        long minSum40 = nums.Min();\n        long minSum41 = nums.Min();\n  \
    \      long minSum42 = nums.Min();\n        long minSum43 = nums.Min();\n    \
    \    long minSum44 = nums.Min();\n        long minSum45 = nums.Min();\n      \
    \  long minSum46 = nums.Min();\n        long minSum47 = nums.Min();\n        long\
    \ minSum48 = num", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        long sumOfSubarrays = 0;\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sumOfSubarrays < sum) {\n                sumOfSubarrays\
    \ = sum;\n            }\n        }\n        minSum = sumOfSubarrays;\n       \
    \ return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = 0;\n        long sum2 = 0;\n        long min2 = 0;\n     \
    \   foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            sum2 += n;\n         \
    \   if (sum2 < min2) {\n                min2 = sum2;\n            }\n        \
    \    if (sum2 > max2) {\n                max2 = sum2;\n            }\n       \
    \ }\n        return min + max;", "        long sum = 0;\n        long minSum =\
    \ nums.Min();\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (var n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long min = nums.Min();\n        long max\
    \ = nums.Max();\n        long sum = 0;\n        long sum2 = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            sum2 += n * n;\n    \
    \    }\n        if (sum == 0)\n            return 0;\n        if (sum2 == 0)\n\
    \            return sum;\n        if (sum > sum2)\n            return sum;\n \
    \       return sum2;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long minSum = nums.Min();\n        long sum\
    \ = 0;\n        long sumOfSubarray = 0;\n        foreach (long num in nums) {\n\
    \            sum += num;\n            if (sumOfSubarray < sum) {\n           \
    \     sumOfSubarray = sum;\n            }\n        }\n        minSum = sumOfSubarray;\n\
    \        return minSum;", "        long min = nums.Sum();\n        long sum =\
    \ 0;\n        foreach (long n in nums) {\n            sum += n;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n        }\n      \
    \  return min;", "        long sum = 0;\n        long min = long.MaxValue;\n \
    \       long max = long.MinValue;\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (n < min) min = n;\n            if (n > max)\
    \ max = n;\n        }\n        if (sum < min) min = sum;\n        if (sum > max)\
    \ max = sum;\n        return sum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        long maxSum = nums.Max();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n            if (sum > maxSum) {\n       \
    \         maxSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long min = nums.Min();\n        long max = nums.Max();\n        long sum\
    \ = 0;\n        long sum2 = 0;\n        foreach (long n in nums) {\n         \
    \   sum += n;\n            sum2 += n * n;\n        }\n        if (sum == 0) return\
    \ 0;\n        if (sum2 == 0) return sum;\n        if (sum > sum2) return sum;\n\
    \        if (sum < sum2) return sum2;\n        long mid = sum / 2;\n        long\
    \ mid2 = sum2 / 2;\n        long mid3 = mid * mid;\n        long mid4 = mid2 *\
    \ mid2;\n        long mid5 = mid * mid2;\n        long mid6 = mid2 * mid3;\n \
    \       long mid7 = mid * mid3;\n        long mid8 = mid * mid4;\n        long\
    \ mid9 = mid * mid5;\n        long mid10 = mid * mid6;\n        long mid11 = mid\
    \ * mid7;\n        long mid12 = mid * mid8;\n        long mid13 = mid * mid9;\n\
    \        long mid14 = mid * mid10;\n        long mid15 = mid * mid11;\n      \
    \  long mid16 = mid * mid12;\n        long mid17 = mid * mid13;\n        long\
    \ mid18 = mid * mid14;\n        long mid19 = mid * mid15;\n        long mid20\
    \ = mid * mid16;\n        long mid21 = mid * mid17;\n        long mid22 = mid\
    \ * mid18;\n        long mid23 = mid * mid19;\n        long mid24 = mid * mid20;\n\
    \        long mid25 = mid * mid21;\n        long mid26 = mid * mid22;\n      \
    \  long mid27 = mid * mid23;\n        long mid28 = mid * mid24;\n        long\
    \ mid29 = mid * mid25;\n        long mid30 = mid * mid26;\n        long mid31\
    \ = mid * mid27;\n        long mid32 = mid * mid28;\n        long mid33 = mid\
    \ * mid29;\n        long mid34 = mid * mid30;\n        long mid35 = mid * mid31;\n\
    \        long mid36 = mid * mid32;\n        long mid37 = mid * mid33;\n      \
    \  long mid38 = mid * mid34;\n        long mid39 = mid * mid35;\n        long\
    \ mid40 = mid * mid36;\n        long mid41 = mid * mid37;\n        long mid42\
    \ = mid ", "        long minSum = nums.Sum();\n        foreach (var n in nums.SkipWhile(x\
    \ => x == 0L).TakeWhile(x => x != 0L)) {\n            minSum -= n;\n        }\n\
    \        return minSum;", "        long minSum = nums.Min();\n        long sum\
    \ = 0;\n        foreach (long n in nums) {\n            sum += n;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n            }\n       \
    \ }\n        return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = long.MinValue;\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            min = Math.Min(min, sum);\n            max = Math.Max(max,\
    \ sum);\n        }\n        return sum;", "        long sum = 0;\n        long\
    \ min = nums[0];\n        long max = nums[0];\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n            if (sum > max) {\n                max = sum;\n\
    \            }\n        }\n        return min == max ? min : min - max;", "  \
    \      long sum = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n\
    \        long mid = nums.Count / 2;\n        long mid2 = nums.Count / 2;\n   \
    \     long mid3 = nums.Count / 2;\n        long mid4 = nums.Count / 2;\n     \
    \   long mid5 = nums.Count / 2;\n        long mid6 = nums.Count / 2;\n       \
    \ long mid7 = nums.Count / 2;\n        long mid8 = nums.Count / 2;\n        long\
    \ mid9 = nums.Count / 2;\n        long mid10 = nums.Count / 2;\n        long mid11\
    \ = nums.Count / 2;\n        long mid12 = nums.Count / 2;\n        long mid13\
    \ = nums.Count / 2;\n        long mid14 = nums.Count / 2;\n        long mid15\
    \ = nums.Count / 2;\n        long mid16 = nums.Count / 2;\n        long mid17\
    \ = nums.Count / 2;\n        long mid18 = nums.Count / 2;\n        long mid19\
    \ = nums.Count / 2;\n        long mid20 = nums.Count / 2;\n        long mid21\
    \ = nums.Count / 2;\n        long mid22 = nums.Count / 2;\n        long mid23\
    \ = nums.Count / 2;\n        long mid24 = nums.Count / 2;\n        long mid25\
    \ = nums.Count / 2;\n        long mid26 = nums.Count / 2;\n        long mid27\
    \ = nums.Count / 2;\n        long mid28 = nums.Count / 2;\n        long mid29\
    \ = nums.Count / 2;\n        long mid30 = nums.Count / 2;\n        long mid31\
    \ = nums.Count / 2;\n        long mid32 = nums.Count / 2;\n        long mid33\
    \ = nums.Count / 2;\n        long mid34 = nums.Count / 2;\n        long mid35\
    \ = nums.Count / 2;\n        long mid36 = nums.Count / 2;\n        long mid37\
    \ = nums.Count / 2;\n        long mid38 = nums.Count / 2;\n        long mid39\
    \ = nums.Count / 2;\n        long mid40 = nums.Count / 2;\n        long mid41\
    \ = nums.Count / 2;\n        long mid42 = nums.Count / 2;\n        long mid43\
    \ = nums.Count / 2;\n        long mid44 = nums.Count / 2;\n        long mid45\
    \ = nums.Count / 2;\n        long mid46 = nums.Count ", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        foreach\
    \ (var n in nums) {\n            sum += n;\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n        }\n        return min;", "  \
    \      long minSum = nums.Sum();\n        foreach (var num in nums.Skip(1))\n\
    \            minSum -= num;\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long minSum = nums.Sum();\n       \
    \ long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long min = long.MaxValue;\n    \
    \    long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            sum2 += n * n;\n    \
    \        sum3 += n * n * n;\n        }\n        if (sum > min) {\n           \
    \ min = sum;\n        }\n        if (sum2 > min) {\n            min = sum2;\n\
    \        }\n        if (sum3 > min) {\n            min = sum3;\n        }\n  \
    \      return min;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (var n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long min = long.MaxValue;\n        long\
    \ max = long.MinValue;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (n < min) min = n;\n            if (n > max) max = n;\n \
    \       }\n        if (sum < 0) sum = 0;\n        return sum;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (var n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        long sumOfSubarraySum = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            sumOfSubarraySum += num;\n\
    \            if (sumOfSubarraySum < minSum) {\n                minSum = sumOfSubarraySum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long minSum = nums.Min();\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (var num in nums) {\n            sum +=\
    \ num;\n            if (sum < min) {\n                min = sum;\n           \
    \ }\n        }\n        return min;", "        long minSum = nums.Min();\n   \
    \     long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long min = nums.Min();\n       \
    \ long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < min) {\n                min = sum;\n            }\n    \
    \    }\n        return min;", "        long minSum = nums.Min();\n        long\
    \ minSumIndex = 0;\n        long sum = 0;\n        for (int i = 0; i < nums.Count;\
    \ i++) {\n            sum += nums[i];\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n                minSumIndex = i;\n            }\n \
    \       }\n        return minSum;", "        long minSum = nums.Sum();\n     \
    \   foreach (var num in nums) {\n            minSum = MinSubarraysum(minSum, num);\n\
    \        }\n        return minSum;", "        long minSum = nums.Min();\n    \
    \    long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long min = long.MaxValue;\n    \
    \    long sum = 0;\n        foreach (var n in nums) {\n            sum += n;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long minSum = nums.Sum();\n        foreach\
    \ (var item in nums) {\n            minSum -= item;\n        }\n        return\
    \ minSum;", "        long minSum = nums.Min();\n        long sum = 0;\n      \
    \  foreach (long n in nums) {\n            sum += n;\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums[0];\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ minSum = nums.Sum();\n        foreach (var n in nums.Skip(1))\n            minSum\
    \ = Min(nums.Sum() - n, minSum);\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        long sumOfSubarraySum = 0;\n \
    \       foreach (long num in nums) {\n            sum += num;\n            sumOfSubarraySum\
    \ += num;\n            if (sumOfSubarraySum < minSum) {\n                minSum\
    \ = sumOfSubarraySum;\n            }\n        }\n        return minSum;", "  \
    \      long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = long.MaxValue;\n        long minSumIndex\
    \ = 0;\n        foreach (long num in nums) {\n            sum += num;\n      \
    \      if (sum < minSum) {\n                minSum = sum;\n                minSumIndex\
    \ = num;\n            }\n        }\n        return minSumIndex;", "        long\
    \ sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Sum();\n        foreach (var num in nums) {\n            minSum = Min(num,\
    \ minSum);\n        }\n        return minSum;", "        long sum = 0;\n     \
    \   long minSum = nums.Min();\n        long maxSum = nums.Max();\n        long\
    \ minDiff = maxSum - minSum;\n        long maxDiff = maxSum - sum;\n        long\
    \ minSumDiff = minDiff - maxDiff;\n        long maxSumDiff = sum - maxDiff;\n\
    \        long minSumSumDiff = minSumDiff - maxSumDiff;\n        long maxSumSumDiff\
    \ = sum - minSumDiff;\n        long minSumSumSumDiff = minSumSumDiff - maxSumSumDiff;\n\
    \        long maxSumSumSumDiff = sum - minSumSumDiff;\n        long minSumSumSumSumDiff\
    \ = minSumSumSumDiff - maxSumSumSumDiff;\n        long maxSumSumSumSumDiff = sum\
    \ - minSumSumSumDiff;\n        long minSumSumSumSumSumDiff = minSumSumSumSumDiff\
    \ - maxSumSumSumSumDiff;\n        long maxSumSumSumSumSumDiff = sum - minSumSumSumSumDiff;\n\
    \        long minSumSumSumSumSumSumDiff = minSumSumSumSumSumDiff - maxSumSumSumSumSumDiff;\n\
    \        long maxSumSumSumSumSumSumDiff = sum - minSumSumSumSumSumDiff;\n    \
    \    long minSumSumSumSumSumSumSumDiff = minSumSumSumSumSumSumDiff - maxSumSumSumSumSumSumDiff;\n\
    \        long maxSumSumSumSumSumSumSumDiff = sum - minSumSumSumSumSumSumDiff;\n\
    \        long minSumSumSumSumSumSumSumSumDiff = minSumSumSumSumSumSumSumDiff -\
    \ maxSumSumSumSumSumSumSumDiff;\n        long maxSumSumSumSumSumSumSumSumDiff\
    \ = sum - minSumSumSumSumSumSumSumSumDiff;\n        long minSumSumSumSumSumSumSumSumSumDiff\
    \ = minSumSumSumSumSumSumSumSumDiff - maxSumSumSumSumSumSumSumSumDiff;\n     \
    \   long maxSumSumSumSumSumSumSumSumSumDiff = sum - minSumSumSumSumSumSumSumSumDiff;\n\
    \        long minSumSumSumSumSumSumSumSumSumDiff = minSumSumSumSumSumSumSumSumDiff\
    \ - maxSumSumSumSumSumSumSumSumDiff;\n        long maxSumSumSumSumSumSumSumSum",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (var\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Sum();\n        foreach (var num in nums) {\n           \
    \ minSum = Min(nums.TakeWhile(x => x != num).Sum(), minSum);\n        }\n    \
    \    return minSum;", "        long sum = 0;\n        long min = nums.Min();\n\
    \        long max = nums.Max();\n        long mid = nums.Count / 2;\n        long\
    \ mid2 = mid / 2;\n        long mid3 = mid2 / 2;\n        long mid4 = mid3 / 2;\n\
    \        long mid5 = mid4 / 2;\n        long mid6 = mid5 / 2;\n        long mid7\
    \ = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long mid9 = mid8 / 2;\n\
    \        long mid10 = mid9 / 2;\n        long mid11 = mid10 / 2;\n        long\
    \ mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n        long mid14 = mid13\
    \ / 2;\n        long mid15 = mid14 / 2;\n        long mid16 = mid15 / 2;\n   \
    \     long mid17 = mid16 / 2;\n        long mid18 = mid17 / 2;\n        long mid19\
    \ = mid18 / 2;\n        long mid20 = mid19 / 2;\n        long mid21 = mid20 /\
    \ 2;\n        long mid22 = mid21 / 2;\n        long mid23 = mid22 / 2;\n     \
    \   long mid24 = mid23 / 2;\n        long mid25 = mid24 / 2;\n        long mid26\
    \ = mid25 / 2;\n        long mid27 = mid26 / 2;\n        long mid28 = mid27 /\
    \ 2;\n        long mid29 = mid28 / 2;\n        long mid30 = mid29 / 2;\n     \
    \   long mid31 = mid30 / 2;\n        long mid32 = mid31 / 2;\n        long mid33\
    \ = mid32 / 2;\n        long mid34 = mid33 / 2;\n        long mid35 = mid34 /\
    \ 2;\n        long mid36 = mid35 / 2;\n        long mid37 = mid36 / 2;\n     \
    \   long mid38 = mid37 / 2;\n        long mid39 = mid38 / 2;\n        long mid40\
    \ = mid39 / 2;\n        long mid41 = mid40 / 2;\n        long mid42 = mid41 /\
    \ 2;\n        long mid43 = mid42 / 2;\n        long mid44 = mid43 / 2;\n     \
    \   long mid45 = mid44 / 2;\n        long mid46 = mid45 / 2;\n        long mid47\
    \ = mid46 / 2;\n        long mid48 = mid47 / 2;\n        long mid49 = mid48 /\
    \ 2;\n        long mid50 = mid49 / 2;\n        long ", "        long minSum =\
    \ nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n   \
    \         sum += n;\n            if (sum < minSum) {\n                minSum =\
    \ sum;\n            }\n        }\n        return minSum;", "        long sum =\
    \ 0;\n        long min = nums[0];\n        long max = nums[0];\n        foreach\
    \ (long num in nums) {\n            sum += num;\n            if (sum < min) {\n\
    \                min = sum;\n            }\n            if (sum > max) {\n   \
    \             max = sum;\n            }\n        }\n        return min + max;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        long sum2 = 0;\n\
    \        foreach (long i in nums) {\n            sum += i;\n            if (sum\
    \ > sum2) {\n                sum2 = sum;\n                min = sum2;\n      \
    \      }\n        }\n        return min;", "        long minSum = nums.Sum();\n\
    \        foreach (var num in nums.Skip(1))\n            minSum = Min(num.Value,\
    \ minSum);\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Sum();\n    \
    \    foreach (var n in nums.SkipWhile(n => n == 0L).TakeWhile(n => n != 0L)) {\n\
    \            minSum -= n;\n        }\n        return minSum;", "        long minSum\
    \ = nums.Min();\n        long sum = 0;\n        foreach (long n in nums) {\n \
    \           sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Sum();\n        foreach (var num in nums) {\n            minSum = Min(num,\
    \ minSum);\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ minSum = long.MaxValue;\n        long minSumIndex = 0;\n        long minSumIndex2\
    \ = 0;\n        long minSumIndex3 = 0;\n        long minSumIndex4 = 0;\n     \
    \   long minSumIndex5 = 0;\n        long minSumIndex6 = 0;\n        long minSumIndex7\
    \ = 0;\n        long minSumIndex8 = 0;\n        long minSumIndex9 = 0;\n     \
    \   long minSumIndex10 = 0;\n        long minSumIndex11 = 0;\n        long minSumIndex12\
    \ = 0;\n        long minSumIndex13 = 0;\n        long minSumIndex14 = 0;\n   \
    \     long minSumIndex15 = 0;\n        long minSumIndex16 = 0;\n        long minSumIndex17\
    \ = 0;\n        long minSumIndex18 = 0;\n        long minSumIndex19 = 0;\n   \
    \     long minSumIndex20 = 0;\n        long minSumIndex21 = 0;\n        long minSumIndex22\
    \ = 0;\n        long minSumIndex23 = 0;\n        long minSumIndex24 = 0;\n   \
    \     long minSumIndex25 = 0;\n        long minSumIndex26 = 0;\n        long minSumIndex27\
    \ = 0;\n        long minSumIndex28 = 0;\n        long minSumIndex29 = 0;\n   \
    \     long minSumIndex30 = 0;\n        long minSumIndex31 = 0;\n        long minSumIndex32\
    \ = 0;\n        long minSumIndex33 = 0;\n        long minSumIndex34 = 0;\n   \
    \     long minSumIndex35 = 0;\n        long minSumIndex36 = 0;\n        long minSumIndex37\
    \ = 0;\n        long minSumIndex38 = 0;\n        long minSumIndex39 = 0;\n   \
    \     long minSumIndex40 = 0;\n        long minSumIndex41 = 0;\n        long minSumIndex42\
    \ = 0;\n        long minSumIndex43 = 0;\n        long minSumIndex44 = 0;\n   \
    \     long minSumIndex45 = 0;\n        long minSumIndex46 = 0;\n        long minSumIndex47\
    \ = 0;\n        long minSumIndex48 = 0;\n        long minSumIndex49 = 0;\n   \
    \     long minSumIndex50 = 0;\n        long minSumIndex51 = 0;\n        long minSumIndex52\
    \ = 0;\n        long minSumIndex53 = 0;\n        long minSumIndex54 = 0;\n   \
    \     long minSumIndex55 = 0;\n        long minSumIndex56 = 0;\n        long minSumIndex57\
    \ = 0;\n        long minSumIndex58 = 0;\n        long minSumIndex59 = 0;\n   \
    \     long minSumIndex60 = 0;\n        long minSumIndex61 = 0;\n        long minSumIndex62\
    \ = 0;\n        long minSumIndex63", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        long maxSum = nums.Max();\n        long minSumIndex =\
    \ 0;\n        long maxSumIndex = 0;\n        long minSumIndex2 = 0;\n        long\
    \ maxSumIndex2 = 0;\n        foreach (long num in nums) {\n            sum +=\
    \ num;\n            if (sum < minSum) {\n                minSum = sum;\n     \
    \           minSumIndex = num;\n            }\n            if (sum > maxSum) {\n\
    \                maxSum = sum;\n                maxSumIndex = num;\n         \
    \   }\n            if (sum == minSum) {\n                minSumIndex2 = num;\n\
    \            }\n            if (sum == maxSum) {\n                maxSumIndex2\
    \ = num;\n            }\n        }\n        long sum2 = 0;\n        long minSumIndex3\
    \ = 0;\n        long maxSumIndex3 = 0;\n        foreach (long num in nums) {\n\
    \            sum2 += num;\n            if (sum2 < minSum) {\n                minSum\
    \ = sum2;\n                minSumIndex3 = num;\n            }\n            if\
    \ (sum2 > maxSum) {\n                maxSum = sum2;\n                maxSumIndex3\
    \ = num;\n            }\n            if (sum2 == minSum) {\n                minSumIndex2\
    \ = num;\n            }\n            if (sum2 == maxSum) {\n                maxSumIndex2\
    \ = num;\n            }\n        }\n        long sum3 = 0;\n        long minSumIndex4\
    \ = 0;\n        long maxSumIndex4 = 0;\n        foreach (long num in nums) {\n\
    \            sum3 += num;\n            if (sum3 < minSum) {\n                minSum\
    \ = sum3;\n                minSumIndex4 = num;\n            }\n            if\
    \ (sum3 > maxSum) {\n                maxSum = sum3;\n                maxSumIndex4\
    \ = num;\n            }\n            if (sum3 == minSum) {\n                minSumIndex2\
    \ = num;\n            }\n            if (sum3 == maxSum) {\n                maxSumIndex2\
    \ = num;\n            }\n        }\n        long sum4 = 0;\n        long minSumIndex5\
    \ = 0;\n        long maxSumIndex5 = 0;\n        foreach (long num in nums) {\n\
    \            sum4 += num;\n            if (sum4 < minSum) {\n                minSum\
    \ = sum4;\n                minSumIndex5 = num;\n            }\n            if\
    \ (sum4 > maxSum) {\n                maxSum = sum4;\n                maxSumIndex5\
    \ = num;\n            }\n            if (sum4 == minSum) {\n                minSumIndex2\
    \ = num;\n            }\n            if (sum4 == maxSum) {\n                maxSumIndex2\
    \ = num;\n            }\n        }\n        long sum5 = 0;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Sum();\n        long sum = 0;\n        foreach (long num in nums) {\n\
    \            sum += num;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n     \
    \   foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > max) {\n\
    \                max = sum;\n            }\n        }\n        return sum;", " \
    \       long minSum = nums.Sum();\n        long sum = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Sum();\n        long sum = 0;\n        foreach (var n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long min = nums.Min();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ minSum = nums.Sum();\n        foreach (var num in nums) {\n            minSum\
    \ -= num;\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        long currentSum = 0;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            currentSum += n;\n          \
    \  if (sum < minSum) {\n                minSum = sum;\n            }\n       \
    \     if (currentSum < minSum) {\n                minSum = currentSum;\n     \
    \       }\n        }\n        return minSum;", "        long sum = 0;\n      \
    \  long minSum = nums.Min();\n        foreach (long n in nums) {\n           \
    \ sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long minSum = nums.Min();\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long sum = 0;\n \
    \       long minSum = nums.Min();\n        foreach (long n in nums) {\n      \
    \      sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Sum();\n\
    \        long sum = 0;\n        foreach (long num in nums) {\n            sum\
    \ += num;\n            if (sum < minSum) {\n                minSum = sum;\n  \
    \          }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        foreach (long num in nums) {\n            sum\
    \ += num;\n            if (sum < min) {\n                min = sum;\n        \
    \    }\n        }\n        return min;", "        long sum = 0;\n        long\
    \ min = nums.Min();\n        long max = nums.Max();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n            if (sum > max) {\n                max\
    \ = sum;\n            }\n        }\n        return sum - min;", "        long\
    \ minSum = nums.Sum();\n        foreach (var num in nums.Skip(1))\n          \
    \  minSum = Min(num.Value, minSum);\n        return minSum;", "        long minSum\
    \ = nums.Sum();\n        foreach (var item in nums.SkipWhile(x => x < minSum).TakeWhile(x\
    \ => x >= minSum)) {\n            minSum -= item;\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = nums[0];\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < min) {\n             \
    \   min = sum;\n            }\n        }\n        return min;", "        long\
    \ min = long.MaxValue;\n        long sum = 0;\n        foreach (var n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long minSum = nums.Min();\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n     \
    \   long mid = nums.Count / 2;\n        bool isMin = true;\n        bool isMax\
    \ = true;\n        bool isMid = true;\n        bool isSum = true;\n        bool\
    \ isMinSum = true;\n        bool isMaxSum = true;\n        bool isMidSum = true;\n\
    \        bool isSumSum = true;\n        bool isMinSumSum = true;\n        bool\
    \ isMaxSumSum = true;\n        bool isMidSumSum = true;\n        bool isSumSumSum\
    \ = true;\n        bool isMinSumSumSum = true;\n        bool isMaxSumSumSum =\
    \ true;\n        bool isMidSumSumSum = true;\n        bool isSumSumSumSum = true;\n\
    \        bool isMinSumSumSumSum = true;\n        bool isMaxSumSumSumSum = true;\n\
    \        bool isMidSumSumSumSum = true;\n        bool isSumSumSumSumSum = true;\n\
    \        bool isMinSumSumSumSumSum = true;\n        bool isMaxSumSumSumSumSum\
    \ = true;\n        bool isMidSumSumSumSumSum = true;\n        bool isSumSumSumSumSumSum\
    \ = true;\n        bool isMinSumSumSumSumSumSum = true;\n        bool isMaxSumSumSumSumSumSum\
    \ = true;\n        bool isMidSumSumSumSumSumSum = true;\n        bool isSumSumSumSumSumSumSum\
    \ = true;\n        bool isMinSumSumSumSumSumSumSum = true;\n        bool isMaxSumSumSumSumSumSumSum\
    \ = true;\n        bool isMidSumSumSumSumSumSumSum = true;\n        bool isSumSumSumSumSumSumSum\
    \ = true;\n        bool isMinSumSumSumSumSumSumSumSum = true;\n        bool isMaxSumSumSumSumSumSumSumSum\
    \ = true;\n        bool isMidSumSumSumSumSumSumSumSum = true;\n        bool isSumSumSumSumSumSumSumSum\
    \ = true;\n        bool isMinSumSumSumSumSumSumSumSumSum = true;\n        bool\
    \ isMaxSumSumSumSumSumSumSumSumSum = true;\n        bool isMidSumSumSumSumSumSumSumSumSum\
    \ = true;\n        bool isSumSumSumSumSumSumSumSumSum = true;\n        bool isMinSumSumSumSumSumSumSumSumSumSum\
    \ = true;\n        bool isMaxSumSumSumSumSumSumSumSumSum = true;\n        bool\
    \ isMidSumSumSumSumSumSumSumSumSum = true;\n        bool isSumSumSumSumSumSumSumSumSumSum\
    \ = true;\n        bool is", "        long minSum = nums.Min();\n        long\
    \ sum = 0;\n        foreach (long num in nums) {\n            sum += num;\n  \
    \          if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Sum();\n    \
    \    long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        long max = long.MinValue;\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (n < min) min = n;\n     \
    \       if (n > max) max = n;\n        }\n        return sum - min + max;", " \
    \       long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long min = nums.Min();\n        long sum = 0;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long min =\
    \ long.MaxValue;\n        long sum = 0;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long min = nums.Min();\n\
    \        long max = nums.Max();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n            if (sum > max) {\n           \
    \     max = sum;\n            }\n        }\n        return min + max;", "    \
    \    long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n\
    \ in nums) {\n            sum += n;\n            if (sum < minSum) {\n       \
    \         minSum = sum;\n            }\n        }\n        return minSum;", " \
    \       long minSum = nums.Sum();\n        foreach (var num in nums) {\n     \
    \       minSum = Min(nums.Sum(), minSum);\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        long max = long.MinValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (n\
    \ < min) min = n;\n            if (n > max) max = n;\n        }\n        if (sum\
    \ < min) min = sum;\n        if (sum > max) max = sum;\n        long mid = min\
    \ + (max - min) / 2;\n        long sum2 = 0;\n        foreach (long n in nums)\
    \ {\n            sum2 += n;\n            if (sum2 < mid) mid = sum2;\n       \
    \ }\n        return mid;", "        long min = long.MaxValue;\n        long sum\
    \ = 0;\n        foreach (long n in nums) {\n            sum += n;\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n        }\n  \
    \      return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long minSum = nums.Min();\n        long sum = 0;\n        long\
    \ sumOfSubarrays = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum > minSum) {\n                minSum = sum;\n       \
    \         sumOfSubarrays = n;\n            }\n        }\n        return sumOfSubarrays;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long sum = 0;\n        long minSum = nums.Min();\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Sum();\n        long sum = 0;\n        foreach (long n in\
    \ nums) {\n            sum += n;\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        return minSum;", "   \
    \     long sum = 0;\n        long min = long.MaxValue;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long min = long.MaxValue;\n        long sum = 0;\n        foreach (var num in\
    \ nums) {\n            sum += num;\n            if (sum < min) {\n           \
    \     min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n \
    \       long mid = min + (max - min) / 2;\n        foreach (long num in nums)\
    \ {\n            if (num > mid) {\n                sum += num - mid;\n       \
    \     }\n            if (num < mid) {\n                sum += mid - num;\n   \
    \         }\n        }\n        return sum;", "        long minSum = nums.Sum();\n\
    \        long sum = 0;\n        foreach (var num in nums) {\n            sum +=\
    \ num;\n            if (sum < minSum) {\n                minSum = sum;\n     \
    \       }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = nums[0];\n        long max = nums[0];\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > max) {\n                max = sum;\n   \
    \         }\n        }\n        return min < max ? min : max;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long sum =\
    \ 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long minSum = long.MaxValue;\n        foreach (var num in nums) {\n     \
    \       sum += num;\n            if (sum < minSum) {\n                minSum =\
    \ sum;\n            }\n        }\n        return minSum;", "        long minSum\
    \ = nums.Sum();\n        long sum = 0;\n        foreach (long num in nums) {\n\
    \            sum += num;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = long.MaxValue;\n        foreach (var n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long min\
    \ = long.MaxValue;\n        long sum = 0;\n        long sum2 = 0;\n        long\
    \ sum3 = 0;\n        foreach (long n in nums) {\n            sum += n;\n     \
    \       sum2 += n * n;\n            sum3 += n * n * n;\n        }\n        if\
    \ (sum > min) {\n            min = sum;\n        }\n        if (sum2 > min) {\n\
    \            min = sum2;\n        }\n        if (sum3 > min) {\n            min\
    \ = sum3;\n        }\n        return min;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long minSum = nums.Sum();\n\
    \        foreach (var num in nums) {\n            minSum = Min(nums.Sum(), minSum,\
    \ num);\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        long sumOfSubArray = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sumOfSubArray < sum)\
    \ {\n                sumOfSubArray = sum;\n            }\n        }\n        minSum\
    \ = sumOfSubArray;\n        return minSum;", "        long sum = 0;\n        long\
    \ minSum = nums.Min();\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long minSum2 = nums.Min();\n        long minSum3 = nums.Min();\n    \
    \    long minSum4 = nums.Min();\n        long minSum5 = nums.Min();\n        long\
    \ minSum6 = nums.Min();\n        long minSum7 = nums.Min();\n        long minSum8\
    \ = nums.Min();\n        long minSum9 = nums.Min();\n        long minSum10 = nums.Min();\n\
    \        long minSum11 = nums.Min();\n        long minSum12 = nums.Min();\n  \
    \      long minSum13 = nums.Min();\n        long minSum14 = nums.Min();\n    \
    \    long minSum15 = nums.Min();\n        long minSum16 = nums.Min();\n      \
    \  long minSum17 = nums.Min();\n        long minSum18 = nums.Min();\n        long\
    \ minSum19 = nums.Min();\n        long minSum20 = nums.Min();\n        long minSum21\
    \ = nums.Min();\n        long minSum22 = nums.Min();\n        long minSum23 =\
    \ nums.Min();\n        long minSum24 = nums.Min();\n        long minSum25 = nums.Min();\n\
    \        long minSum26 = nums.Min();\n        long minSum27 = nums.Min();\n  \
    \      long minSum28 = nums.Min();\n        long minSum29 = nums.Min();\n    \
    \    long minSum30 = nums.Min();\n        long minSum31 = nums.Min();\n      \
    \  long minSum32 = nums.Min();\n        long minSum33 = nums.Min();\n        long\
    \ minSum34 = nums.Min();\n        long minSum35 = nums.Min();\n        long minSum36\
    \ = nums.Min();\n        long minSum37 = nums.Min();\n        long minSum38 =\
    \ nums.Min();\n        long minSum39 = nums.Min();\n        long minSum40 = nums.Min();\n\
    \        long minSum41 = nums.Min();\n        long minSum42 = nums.Min();\n  \
    \      long minSum43 = nums.Min();\n        long minSum44 = nums.Min();\n    \
    \    long minSum45 = nums.Min();\n        long minSum46 = nums.Min();\n      \
    \  long minSum47 = nums.Min();\n        long minSum48 = num", "        long min\
    \ = long.MaxValue;\n        long sum = 0;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long sum = 0;\n    \
    \    long min = long.MaxValue;\n        foreach (var n in nums) {\n          \
    \  sum += n;\n            if (sum < min) {\n                min = sum;\n     \
    \       }\n        }\n        return min;", "        long minSum = nums.Sum();\n\
    \        foreach (var item in nums) {\n            minSum -= item;\n         \
    \   if (minSum < 0) {\n                minSum = 0;\n            }\n        }\n\
    \        return minSum;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        long max = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            min = Math.Min(min, sum);\n            max = Math.Max(max, sum);\n\
    \        }\n        return min == max ? min : sum - min;", "        long minSum\
    \ = nums.Sum();\n        long sum = 0;\n        foreach (long num in nums) {\n\
    \            sum += num;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < minSum) {\n                minSum = sum;\n            }\n           \
    \ if (sum > maxSum) {\n                maxSum = sum;\n            }\n        }\n\
    \        return minSum;", "        long min = long.MaxValue;\n        long sum\
    \ = 0;\n        foreach (var n in nums) {\n            sum += n;\n           \
    \ if (sum < min) {\n                min = sum;\n            }\n        }\n   \
    \     return min;", "        long minSum = nums.Min();\n        long sum = 0;\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        long maxSum = nums.Max();\n        long sumOfMinSum = minSum;\n     \
    \   long sumOfMaxSum = maxSum;\n        foreach (long num in nums) {\n       \
    \     sum += num;\n            if (sumOfMinSum > sum) {\n                sumOfMinSum\
    \ = sum;\n            }\n            if (sumOfMaxSum < sum) {\n              \
    \  sumOfMaxSum = sum;\n            }\n        }\n        return sumOfMinSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Sum();\n        long sum = 0;\n        foreach (var\
    \ num in nums) {\n            sum += num;\n            if (sum < minSum) {\n \
    \               minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (var\
    \ num in nums) {\n            sum += num;\n            if (sum < min) {\n    \
    \            min = sum;\n            }\n        }\n        return min;", "   \
    \     long min = long.MaxValue;\n        long sum = 0;\n        foreach (var n\
    \ in nums) {\n            sum += n;\n            if (sum < min) {\n          \
    \      min = sum;\n            }\n        }\n        return min;", "        long\
    \ minSum = nums.Sum();\n        foreach (var num in nums.Skip(1))\n          \
    \  minSum = Min(num.Value, minSum);\n        return minSum;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        long maxSum = nums.Max();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n            if (sum\
    \ > maxSum) {\n                maxSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long sum = 0;\n        long minSum = nums.Min();\n\
    \        foreach (long n in nums) {\n            sum += n;\n            if (sum\
    \ < minSum) {\n                minSum = sum;\n            }\n        }\n     \
    \   return minSum;", "        long min = nums.Min();\n        long max = nums.Max();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \            if (sum > max) {\n                max = sum;\n            }\n   \
    \     }\n        return min + max;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long min = nums.Min();\n       \
    \ long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < min) {\n                min = sum;\n            }\n    \
    \    }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (var n in nums) {\n            sum += n;\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n        }\n        return\
    \ min;", "        long sum = 0;\n        long minSum = nums.Min();\n        foreach\
    \ (long n in nums) {\n            sum += n;\n            if (sum < minSum) {\n\
    \                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long sum = 0;\n        long minSum = nums.Min();\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (var\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Min();\n        long sum = 0;\n        long sumOfSubArray\
    \ = 0;\n        foreach (long num in nums) {\n            sum += num;\n      \
    \      if (sum > minSum) {\n                minSum = sum;\n            }\n   \
    \         sumOfSubArray += num;\n        }\n        if (sumOfSubArray < minSum)\
    \ {\n            minSum = sumOfSubArray;\n        }\n        return minSum;",
  "        long sum = 0;\n        long min = long.MaxValue;\n        foreach (var\
    \ n in nums) {\n            sum += n;\n            if (sum < min) {\n        \
    \        min = sum;\n            }\n        }\n        return min;", "       \
    \ long minSum = nums.Sum();\n        foreach (var num in nums) {\n           \
    \ minSum = Min(num.Value, minSum);\n        }\n        return minSum;", "    \
    \    long min = long.MaxValue;\n        long sum = 0;\n        foreach (var n\
    \ in nums) {\n            sum += n;\n            if (sum < min) {\n          \
    \      min = sum;\n            }\n        }\n        return min;", "        long\
    \ minSum = nums.Min();\n        long sum = 0;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        return minSum;", "        long sum\
    \ = 0;\n        long min = nums.Min();\n        long max = nums.Max();\n     \
    \   foreach (long n in nums) {\n            sum += n;\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > max) {\n\
    \                max = sum;\n            }\n        }\n        return min + max;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        long currentSum\
    \ = 0;\n        foreach (long n in nums) {\n            currentSum += n;\n   \
    \         if (currentSum < minSum) {\n                minSum = currentSum;\n \
    \           }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long minSum = nums.Sum();\n       \
    \ long sum = 0;\n        foreach (long num in nums) {\n            sum += num;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Min();\n    \
    \    long sum = 0;\n        foreach (long n in nums) {\n            sum += n;\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long minSum = nums.Min();\n    \
    \    long minSum2 = nums.Min();\n        foreach (long num in nums) {\n      \
    \      minSum = num < minSum ? num : minSum;\n            minSum2 = num < minSum2\
    \ ? num : minSum2;\n        }\n        return minSum;", "        long sum = 0;\n\
    \        long minSum = nums.Min();\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        return minSum;", "        long minSum = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < minSum) {\n                minSum = sum;\n       \
    \     }\n        }\n        return minSum;", "        long sum = 0;\n        long\
    \ min = long.MaxValue;\n        long max = 0;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            min = Math.Min(min, sum);\n          \
    \  max = Math.Max(max, sum);\n        }\n        return sum;", "        long sum\
    \ = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;", "        long min = nums.Min();\n\
    \        long sum = 0;\n        foreach (long n in nums) {\n            sum +=\
    \ n;\n            if (sum < min) {\n                min = sum;\n            }\n\
    \        }\n        return min;", "        long sum = 0;\n        long minSum\
    \ = nums.Min();\n        foreach (long n in nums) {\n            sum += n;\n \
    \           if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        return minSum;", "        long sum = 0;\n        long min\
    \ = long.MaxValue;\n        foreach (var num in nums) {\n            sum += num;\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \     }\n        return min;", "        long sum = 0;\n        long min = long.MaxValue;\n\
    \        foreach (long num in nums) {\n            sum += num;\n            if\
    \ (sum < min) {\n                min = sum;\n            }\n        }\n      \
    \  return min;", "        long sum = 0;\n        long min = long.MaxValue;\n \
    \       long max = 0;\n        foreach (long num in nums) {\n            sum +=\
    \ num;\n            if (sum < min) {\n                min = sum;\n           \
    \ }\n            if (sum > max) {\n                max = sum;\n            }\n\
    \        }\n        return min == long.MaxValue ? max : min;", "        long sum\
    \ = 0;\n        long minSum = nums.Min();\n        foreach (long num in nums)\
    \ {\n            sum += num;\n            if (sum < minSum) {\n              \
    \  minSum = sum;\n            }\n        }\n        return minSum;", "       \
    \ long min = long.MaxValue;\n        long sum = 0;\n        foreach (var num in\
    \ nums) {\n            sum += num;\n            if (sum < min) {\n           \
    \     min = sum;\n            }\n        }\n        return min;", "        long\
    \ sum = 0;\n        long min = long.MaxValue;\n        foreach (long n in nums)\
    \ {\n            sum += n;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n        }\n        return min;", "        long minSum\
    \ = nums.Sum();\n        foreach (var n in nums.Skip(1))\n            minSum -=\
    \ n;\n        return minSum;", "        long minSum = nums.Min();\n        long\
    \ sum = 0;\n        long currentSum = 0;\n        foreach (long n in nums) {\n\
    \            sum += n;\n            currentSum += n;\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Min();\n        long sum = 0;\n        foreach (long\
    \ n in nums) {\n            sum += n;\n            if (sum < minSum) {\n     \
    \           minSum = sum;\n            }\n        }\n        return minSum;",
  "        long minSum = nums.Sum();\n        foreach (var item in nums.Skip(1))\n\
    \            minSum -= item;\n        return minSum;", "        long sum = 0;\n\
    \        long min = long.MaxValue;\n        foreach (long n in nums) {\n     \
    \       sum += n;\n            if (sum < min) {\n                min = sum;\n\
    \            }\n        }\n        return min;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_81_numerical_letter_grade
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // It is the last week of the semester and the teacher has to give\
  \ the grades\n    // to students. The teacher has been making her own algorithm\
  \ for grading.\n    // The only problem is, she has lost the code she used for grading.\n\
  \    // She has given you a list of GPAs for some students and you have to write\
  \ \n    // a function that can output a list of letter grades using the following\
  \ table:\n    // GPA       |    Letter grade\n    // 4.0                A+\n   \
  \ // > 3.7                A \n    // > 3.3                A- \n    // > 3.0    \
  \            B+\n    // > 2.7                B \n    // > 2.3                B-\n\
  \    // > 2.0                C+\n    // > 1.7                C\n    // > 1.3   \
  \             C-\n    // > 1.0                D+ \n    // > 0.7                D\
  \ \n    // > 0.0                D-\n    // 0.0                E\n    // Example:\n\
  \    // >>> GradeEquation((new List<float>(new float[]{(float)4.0f, (float)3L, (float)1.7f,\
  \ (float)2L, (float)3.5f})))\n    // (new List<string>(new string[]{(string)\"A+\"\
  , (string)\"B\", (string)\"C-\", (string)\"C\", (string)\"A-\"}))\n    public static\
  \ List<string> NumericalLetterGrade(List<float> grades) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NumericalLetterGrade((new\
  \ List<float>(new float[]{(float)4.0f, (float)3L, (float)1.7f, (float)2L, (float)3.5f}))).Equals((new\
  \ List<string>(new string[]{(string)\"A+\", (string)\"B\", (string)\"C-\", (string)\"\
  C\", (string)\"A-\"}))));\n    Debug.Assert(NumericalLetterGrade((new List<float>(new\
  \ float[]{(float)1.2f}))).Equals((new List<string>(new string[]{(string)\"D+\"}))));\n\
  \    Debug.Assert(NumericalLetterGrade((new List<float>(new float[]{(float)0.5f}))).Equals((new\
  \ List<string>(new string[]{(string)\"D-\"}))));\n    Debug.Assert(NumericalLetterGrade((new\
  \ List<float>(new float[]{(float)0.0f}))).Equals((new List<string>(new string[]{(string)\"\
  E\"}))));\n    Debug.Assert(NumericalLetterGrade((new List<float>(new float[]{(float)1.0f,\
  \ (float)0.3f, (float)1.5f, (float)2.8f, (float)3.3f}))).Equals((new List<string>(new\
  \ string[]{(string)\"D\", (string)\"D-\", (string)\"C-\", (string)\"B\", (string)\"\
  B+\"}))));\n    Debug.Assert(NumericalLetterGrade((new List<float>(new float[]{(float)0.0f,\
  \ (float)0.7f}))).Equals((new List<string>(new string[]{(string)\"E\", (string)\"\
  D-\"}))));\n    }\n\n}\n"
completions: ["        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            float difference = grade - average;\n      \
    \      if (difference < -0.7) {\n                gradeLetters.Add(\"D-\");\n \
    \           } else if (difference < -0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 10.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 10.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 12.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 12.7) {\n                gradeLetters.Add(\"\
    B-\");", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        float difference\
    \ = average - grades.Average();\n        float gradeDifference = difference /\
    \ average;\n        gradeLetters.Add(\"D+\");\n        if (gradeDifference < -0.7)\
    \ {\n            gradeLetters.Add(\"D\");\n        } else if (gradeDifference\
    \ < -0.3) {\n            gradeLetters.Add(\"D-\");\n        } else if (gradeDifference\
    \ < -0.1) {\n            gradeLetters.Add(\"C+\");\n        } else if (gradeDifference\
    \ < 0.0) {\n            gradeLetters.Add(\"C\");\n        } else if (gradeDifference\
    \ < 0.1) {\n            gradeLetters.Add(\"C-\");\n        } else if (gradeDifference\
    \ < 0.2) {\n            gradeLetters.Add(\"B+\");\n        } else if (gradeDifference\
    \ < 0.3) {\n            gradeLetters.Add(\"B\");\n        } else if (gradeDifference\
    \ < 0.4) {\n            gradeLetters.Add(\"B-\");\n        } else if (gradeDifference\
    \ < 0.5) {\n            gradeLetters.Add(\"A+\");\n        } else if (gradeDifference\
    \ < 0.6) {\n            gradeLetters.Add(\"A\");\n        } else if (gradeDifference\
    \ < 0.7) {\n            gradeLetters.Add(\"A-\");\n        } else if (gradeDifference\
    \ < 0.8) {\n            gradeLetters.Add(\"F\");\n        } else if (gradeDifference\
    \ < 0.9) {\n            gradeLetters.Add(\"F\");\n        } else if (gradeDifference\
    \ < 1.0) {\n            gradeLetters.Add(\"E\");\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        float average\
    \ = grades.Average();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float averageOfSum\
    \ = sum / grades.Count;\n        float averageOfDifference = average - averageOfSum;\n\
    \        float difference = averageOfDifference / grades.Count;\n        float\
    \ differenceOfSum = sum - averageOfSum;\n        float differenceOfDifference\
    \ = difference - differenceOfSum;\n        float differenceOfAverage = differenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifference = sum - averageOfSum\
    \ - differenceOfSum;\n        float differenceOfDifferenceOfDifference = differenceOfDifference\
    \ - differenceOfSumOfDifference;\n        float differenceOfAverageOfDifference\
    \ = differenceOfDifferenceOfDifference / grades.Count;\n        float differenceOfSumOfDifferenceOfDifference\
    \ = sum - averageOfSum - differenceOfSum - differenceOfSumOfDifference;\n    \
    \    float differenceOfDifferenceOfDifferenceOfDifference = differenceOfDifferenceOfDifference\
    \ - differenceOfSumOfDifferenceOfDifference;\n        float differenceOfAverageOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifferenceOfDifference / grades.Count;\n        float\
    \ differenceOfSumOfDifferenceOfDifferenceOfDifference = sum - averageOfSum - differenceOfSum\
    \ - differenceOfSumOfDifference - differenceOfAverageOfDifference;\n        float\
    \ differenceOfDifferenceOfDifferenceOfDifferenceOfDifference = differenceOfDifferenceOfDifferenceOfDifference\
    \ - differenceOfSumOfDifferenceOfDifferenceOfDifference;\n        float differenceOfAverageOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifference / grades.Count;\n\
    \        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = sum - averageOfSum - differenceOfSum - differenceOfSumOfDifference - differenceOfAverageOfDifference\
    \ - differenceOfAverageOfDifferenceOfDifference;\n        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifference - differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifference;\n\
    \        float differenceOfAverageOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference / grades.Count;\n\
    \        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = sum - averageOfSum - differenceOfSum - differenceOfSumOfDifference - differenceOfAverageOfDifference\
    \ - ", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        float averageOfSquares\
    \ = average * average;\n        float averageOfSquaresOfSquares = averageOfSquares\
    \ * average;\n        float averageOfSquaresOfSquaresOfSquares = averageOfSquaresOfSquares\
    \ * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquares = averageOfSquaresOfSquaresOfSquares\
    \ * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares * average;\n        float ", " \
    \       List<string> letterGrades = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.First();\n        float gradeDifference = difference / average;\n\
    \        float gradeDifference2 = gradeDifference * gradeDifference;\n       \
    \ float gradeDifference3 = gradeDifference2 * gradeDifference;\n        float\
    \ gradeDifference4 = gradeDifference3 * gradeDifference;\n        float gradeDifference5\
    \ = gradeDifference4 * gradeDifference;\n        float gradeDifference6 = gradeDifference5\
    \ * gradeDifference;\n        float gradeDifference7 = gradeDifference6 * gradeDifference;\n\
    \        float gradeDifference8 = gradeDifference7 * gradeDifference;\n      \
    \  float gradeDifference9 = gradeDifference8 * gradeDifference;\n        float\
    \ gradeDifference10 = gradeDifference9 * gradeDifference;\n        float gradeDifference11\
    \ = gradeDifference10 * gradeDifference;\n        float gradeDifference12 = gradeDifference11\
    \ * gradeDifference;\n        float gradeDifference13 = gradeDifference12 * gradeDifference;\n\
    \        float gradeDifference14 = gradeDifference13 * gradeDifference;\n    \
    \    float gradeDifference15 = gradeDifference14 * gradeDifference;\n        float\
    \ gradeDifference16 = gradeDifference15 * gradeDifference;\n        float gradeDifference17\
    \ = gradeDifference16 * gradeDifference;\n        float gradeDifference18 = gradeDifference17\
    \ * gradeDifference;\n        float gradeDifference19 = gradeDifference18 * gradeDifference;\n\
    \        float gradeDifference20 = gradeDifference19 * gradeDifference;\n    \
    \    float gradeDifference21 = gradeDifference20 * gradeDifference;\n        float\
    \ gradeDifference22 = gradeDifference21 * gradeDifference;\n        float gradeDifference23\
    \ = gradeDifference22 * gradeDifference;\n        float gradeDifference24 = gradeDifference23\
    \ * gradeDifference;\n        float gradeDifference25 = gradeDifference24 * gradeDifference;\n\
    \        float gradeDifference26 = gradeDifference25 * gradeDifference;\n    \
    \    float gradeDifference27 = gradeDifference26 * gradeDifference;\n        float\
    \ gradeDifference28 = gradeDifference27 * gradeDifference;\n        float gradeDifference29\
    \ = gradeDifference28 * gradeDifference;\n        float gradeDifference30 = gradeDifference29\
    \ * gradeDifference;\n        float gradeDifference31 = gradeDifference30 * gradeDifference;\n\
    \        float gradeDifference32 = gradeDifference31 * gradeDifference;\n    \
    \    float gradeDifference33 = gradeDifference32 * gradeDifference;\n        float\
    \ gradeDifference34 = gradeDifference33 * gradeDifference;\n        float ", " \
    \       List<string> letters = new List<string>();\n        float sum = 0;\n \
    \       foreach (float grade in grades) {\n            sum += grade;\n       \
    \ }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0) {\n                difference = -difference;\n            }\n\
    \            int gradeLetter = Convert.ToInt32(Math.Round(difference * 100 / average));\n\
    \            letters.Add(Convert.ToString(gradeLetter));\n        }\n        return\
    \ letters;", "        List<string> gradeLetters = new List<string>();\n      \
    \  float sum = 0;\n        foreach (float grade in grades) {\n            sum\
    \ += grade;\n        }\n        float average = sum / grades.Count;\n        float\
    \ difference = average - grades.First();\n        float differenceSquare = difference\
    \ * difference;\n        float differenceSquared = differenceSquare;\n       \
    \ float sumOfSquaredDifferences = 0;\n        float sumOfDifferences = 0;\n  \
    \      foreach (float grade in grades) {\n            sumOfDifferences += Math.Pow(grade\
    \ - average, 2);\n            sumOfSquaredDifferences += Math.Pow(grade - average,\
    \ 2);\n        }\n        float averageOfDifferences = sumOfDifferences / grades.Count;\n\
    \        float averageOfSquaredDifferences = sumOfSquaredDifferences / grades.Count;\n\
    \        float averageOfDifferenceSquare = averageOfDifferences * averageOfDifferences;\n\
    \        float averageOfDifferenceSquared = averageOfDifferenceSquare;\n     \
    \   float averageOfDifferenceSquaredDifference = averageOfDifferenceSquared -\
    \ averageOfSquaredDifferences;\n        float averageOfDifferenceSquaredDifferenceSquare\
    \ = averageOfDifferenceSquaredDifference * averageOfDifferenceSquared;\n     \
    \   float averageOfDifferenceSquaredDifferenceSquared = averageOfDifferenceSquaredDifferenceSquare;\n\
    \        float averageOfDifferenceSquaredDifferenceSquaredDifference = averageOfDifferenceSquaredDifferenceSquared\
    \ - averageOfSquaredDifferences;\n        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquare\
    \ = averageOfDifferenceSquaredDifferenceSquaredDifference * averageOfDifferenceSquared;\n\
    \        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquared =\
    \ averageOfDifferenceSquaredDifferenceSquaredDifferenceSquare;\n        float\
    \ averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference = averageOfDifferenceSquaredDifferenceSquaredDifferenceSquared\
    \ - averageOfSquaredDifferences;\n        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifferenceSquare\
    \ = averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference * averageOfDifferenceSquared;\n\
    \        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifferenceSquared\
    \ = averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference * averageOfDifferenceSquared;\n\
    \        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference\
    \ = averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference * averageOfDifferenceSquared;\n\
    \        float averageOfDifferenceSquaredDifferenceSquaredDifferenceSquaredDifference",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.First();\n        float differenceSquare = difference * difference;\n\
    \        float gradeDifference = average - average;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeDifferenceSquared =\
    \ gradeDifferenceSquare * gradeDifferenceSquare;\n        float gradeDifferenceSquaredSquare\
    \ = gradeDifferenceSquareSquare * gradeDifferenceSquare;\n        float gradeDifferenceSquaredCube\
    \ = gradeDifferenceSquaredSquare * gradeDifferenceSquared;\n        float gradeDifferenceSquaredCubeRoot\
    \ = gradeDifferenceSquaredCube / Math.Sqrt(gradeDifferenceSquared);\n        float\
    \ gradeDifferenceSquaredCubeRootSquare = gradeDifferenceSquaredCubeRoot * gradeDifferenceSquaredCubeRoot;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRoot = gradeDifferenceSquaredCubeRootSquare\
    \ * gradeDifferenceSquaredCubeRootSquare;\n        float gradeDifferenceSquaredCubeRootSquareRootSquare\
    \ = gradeDifferenceSquaredCubeRootSquareRoot * gradeDifferenceSquaredCubeRootSquare;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRootSquareRoot = gradeDifferenceSquaredCubeRootSquareRootSquare\
    \ * gradeDifferenceSquaredCubeRootSquareRoot;\n        float gradeDifferenceSquaredCubeRootSquareRootSquareRoot\
    \ = gradeDifferenceSquaredCubeRootSquareRootSquare * gradeDifferenceSquaredCubeRootSquareRoot;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare = gradeDifferenceSquaredCubeRootSquareRootSquareRoot\
    \ * gradeDifferenceSquaredCubeRootSquareRootSquare;\n        float gradeDifferenceSquaredCubeRootSquareRootSquareRootSquareRoot\
    \ = gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare * gradeDifferenceSquaredCubeRootSquareRootSquareRoot;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRootSquareRootSquareRootSquare\
    \ = gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare * gradeDifferenceSquaredCubeRootSquareRootSquareRoot;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRootSquareRootSquareRootSquare\
    \ = gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare * gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare;\n\
    \        float gradeDifferenceSquaredCubeRootSquareRootSquareRootSquareRootSquareRoot\
    \ = gradeDifferenceSquaredCubeRootSquareRootSquareRootSquare * gradeDifferenceSquaredCubeRootSquareRootSquareRoot",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageSquared\
    \ = average * average;\n        float averageCubeRoot = Convert.ToSingle(Math.Sqrt(averageSquared));\n\
    \        float averageRoot = Convert.ToSingle(Math.Ceiling(averageCubeRoot));\n\
    \        float averageRootSquared = averageRoot * averageRoot;\n        float\
    \ averageRootCubeRoot = Convert.ToSingle(Math.Sqrt(averageRootSquared));\n   \
    \     float averageRootCubeRootSquared = averageRootCubeRoot * averageRootCubeRoot;\n\
    \        float averageRootCubeRootCubeRoot = Convert.ToSingle(Math.Sqrt(averageRootCubeRootSquared));\n\
    \        float averageRootCubeRootCubeRootSquared = averageRootCubeRootCubeRoot\
    \ * averageRootCubeRootCubeRoot;\n        float averageRootCubeRootCubeRootCubeRoot\
    \ = Convert.ToSingle(Math.Sqrt(averageRootCubeRootCubeRootSquared));\n       \
    \ float averageRootCubeRootCubeRootCubeRootSquared = averageRootCubeRootCubeRootCubeRoot\
    \ * averageRootCubeRootCubeRootCubeRoot;\n        float averageRootCubeRootCubeRootCubeRootCubeRoot\
    \ = Convert.ToSingle(Math.Sqrt(averageRootCubeRootCubeRootCubeRootSquared));\n\
    \        float averageRootCubeRootCubeRootCubeRootCubeRoot = Convert.ToSingle(Math.Sqrt(averageRootCubeRootCubeRootCubeRootCubeRootSquared));\n\
    \        float averageRootCubeRootCubeRootCubeRootCubeRootCubeRoot = Convert.ToSingle(Math.Sqrt(averageRootCubeRootCubeRootCubeRootCubeRootCubeRootSquared));\n\
    \        float averageRootCubeRootCubeRootCubeRootCubeRootCubeRoot = Convert.ToSingle(Math.Sqrt(averageRootCubeRootCubeRootCubeRootCubeRootCubeRootSquared));\n\
    \        float averageRootCubeRootCubeRootCubeRootCubeRootCubeRootSquared = averageRootCubeRootCubeRootCubeRootCubeRootCubeRoot\
    \ * averageRootCubeRootCubeRootCubeRootCubeRoot;\n        float averageRootCubeRootCubeRootCubeRootCubeRootCubeRootCubeRootSquared\
    \ = averageRootCubeRootCubeRootCubeRootCubeRootCubeRootSquared * averageRootCubeRootCubeRootCubeRootCubeRootCubeRoot;\n\
    \        float averageRootCubeRootCubeRoot", "        List<string> gradeLetters\
    \ = new List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n\
    \        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n       \
    \ gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    C-\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n\
    \        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n       \
    \ gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"AA\");\n        gradeLetters.Add(\"\
    AB\");\n        gradeLetters.Add(\"AC\");\n        gradeLetters.Add(\"AD\");\n\
    \        gradeLetters.Add(\"AE\");\n        gradeLetters.Add(\"AF\");\n      \
    \  gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"AH\");\n        gradeLetters.Add(\"\
    AI\");\n        gradeLetters.Add(\"AJ\");\n        gradeLetters.Add(\"AK\");\n\
    \        gradeLetters.Add(\"AL\");\n        gradeLetters.Add(\"AM\");\n      \
    \  gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"AO\");\n        gradeLetters.Add(\"\
    AP\");\n        gradeLetters.Add(\"AQ\");\n        gradeLetters.Add(\"AR\");\n\
    \        gradeLetters.Add(\"AS\");\n        gradeLetters.Add(\"AT\");\n      \
    \  gradeLetters.Add(\"AU\");\n", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"A\");\n       \
    \ gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    D-\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n \
    \       gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"\
    AC\");\n        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n\
    \        gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n      \
    \  gradeLetters.Add(\"AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"\
    AJ\");\n        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n\
    \        gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n      \
    \  gradeLetters.Add(\"AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"\
    AQ\");\n        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n\
    \        gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "  \
    \      List<string> gradeLetters = new List<string>();\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n    \
    \    }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n  \
    \      gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add", "        // Your code\
    \ goes here\n        List<string> gradeLetters = new List<string>();\n       \
    \ float sum = 0;\n        foreach (float grade in grades) {\n            sum +=\
    \ grade;\n        }\n        float average = sum / grades.Count;\n        float\
    \ gpa = average;\n        float difference = average - gpa;\n        float difference2\
    \ = average - gpa;\n        float difference3 = average - gpa;\n        float\
    \ difference4 = average - gpa;\n        float difference5 = average - gpa;\n \
    \       float difference6 = average - gpa;\n        float difference7 = average\
    \ - gpa;\n        float difference8 = average - gpa;\n        float difference9\
    \ = average - gpa;\n        float difference10 = average - gpa;\n        float\
    \ difference11 = average - gpa;\n        float difference12 = average - gpa;\n\
    \        float difference13 = average - gpa;\n        float difference14 = average\
    \ - gpa;\n        float difference15 = average - gpa;\n        float difference16\
    \ = average - gpa;\n        float difference17 = average - gpa;\n        float\
    \ difference18 = average - gpa;\n        float difference19 = average - gpa;\n\
    \        float difference20 = average - gpa;\n        float difference21 = average\
    \ - gpa;\n        float difference22 = average - gpa;\n        float difference23\
    \ = average - gpa;\n        float difference24 = average - gpa;\n        float\
    \ difference25 = average - gpa;\n        float difference26 = average - gpa;\n\
    \        float difference27 = average - gpa;\n        float difference28 = average\
    \ - gpa;\n        float difference29 = average - gpa;\n        float difference30\
    \ = average - gpa;\n        float difference31 = average - gpa;\n        float\
    \ difference32 = average - gpa;\n        float difference33 = average - gpa;\n\
    \        float difference34 = average - gpa;\n        float difference35 = average\
    \ - gpa;\n        float difference36 = average - gpa;\n        float difference37\
    \ = average - gpa;\n        float difference38 = average - gpa;\n        float\
    \ difference39 = average - gpa;\n        float difference40 = average - gpa;\n\
    \        float difference41 = average - gpa;\n        float difference42 = average\
    \ - gpa;\n        float difference43 = ", "        List<string> gradeLetters =\
    \ new List<string>();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float average = sum\
    \ / grades.Count;\n        float gpa = average;\n        float difference = average\
    \ - gpa;\n        float differencePercentage = difference * 100 / average;\n \
    \       float differencePercentagePercentage = differencePercentage * 100 / 100;\n\
    \        gradeLetters.Add(\"D-\");\n        if (differencePercentage < -0.9f)\
    \ {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < -0.7f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < -0.6f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < -0.5f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < -0.4f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < -0.3f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < -0.2f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < -0.1f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < -0.0f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < 0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < 0.1f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < 0.2f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < 0.3f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < 0.4f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < 0.5f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < 0.6f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < 0.7f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (differencePercentage\
    \ < 0.8f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (differencePercentage\
    \ < 1.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ < 1.1f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.FirstOrDefault();\n        if (difference < 0) {\n        \
    \    gradeLetters.Add(\"E\");\n        } else if (difference > 0) {\n        \
    \    gradeLetters.Add(\"D-\");\n        } else if (difference == 0) {\n      \
    \      gradeLetters.Add(\"D\");\n        } else {\n            gradeLetters.Add(\"\
    C\");\n        }\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    B-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A+\");\n        return gradeLetters;", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float sumOfSquares = 0;\n        foreach\
    \ (float grade in grades) {\n            sumOfSquares += (grade * grade);\n  \
    \      }\n        float averageOfSquares = sumOfSquares / grades.Count;\n    \
    \    float variance = averageOfSquares - average * average;\n        float standardDeviation\
    \ = Math.Sqrt(variance);\n        float standardDeviationOfSquares = standardDeviation\
    \ * standardDeviation;\n        float maximum = grades.Max();\n        float minimum\
    \ = grades.Min();\n        float maximumOfSquares = maximum * maximum;\n     \
    \   float minimumOfSquares = minimum * minimum;\n        float maximumOfStandardDeviation\
    \ = maximumOfSquares - standardDeviationOfSquares;\n        float minimumOfStandardDeviation\
    \ = minimumOfSquares - standardDeviationOfSquares;\n        float maximumOfMinimum\
    \ = maximumOfStandardDeviation - minimumOfStandardDeviation;\n        float minimumOfMaximum\
    \ = minimumOfStandardDeviation - maximumOfStandardDeviation;\n        float maximumOfMaximum\
    \ = maximumOfMinimum - minimumOfMaximum;\n        float minimumOfMinimum = minimumOfMaximum\
    \ - maximumOfMaximum;\n        float maximumOfMinimumOfMinimum = maximumOfMinimum\
    \ - minimumOfMinimum;\n        float maximumOfMinimumOfMaximum = maximumOfMinimumOfMinimum\
    \ - minimumOfMaximum;\n        float maximumOfMaximumOfMinimum = maximumOfMaximumOfMinimum\
    \ - minimumOfMinimum;\n        float maximumOfMaximumOfMaximum = maximumOfMaximumOfMaximum\
    \ - minimumOfMaximum;\n        float maximumOfMaximumOfMinimumOfMaximum = maximumOfMaximumOfMinimumOfMaximum\
    \ - minimumOfMinimum;\n        float maximumOfMaximumOfMaximumOfMinimum = maximumOfMaximumOfMaximumOfMinimum\
    \ - minimumOfMaximum;\n        float maximumOfMaximumOfMaximumOfMaximum = maximumOfMaximumOfMaximumOfMinimumOfMaximum\
    \ - minimumOfMinimum;\n        float maximumOfMaximumOfMaximumOfMinimumOfMaximum\
    \ = maximumOfMaximumOfMaximumOfMinimumOfMaximum - minimumOfMaximum;\n        float\
    \ maximumOfMaximumOfMaximumOfMaximumOfMinimum = maximumOfMaximumOfMaximumOfMaximumOfMinimum\
    \ - minimumOfMinimum;\n        float maximumOfMaximumOfMaximumOfMaximumOfMinimum\
    \ = maximumOfMaximumOfMaximumOfMaximumOfMinimumOfMaximum - minimum", "       \
    \ List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F-\");\n \
    \       gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"G+\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"H-\");\n        gradeLetters.Add(\"I\");\n \
    \       gradeLetters.Add(\"I+\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    J-\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"K+\");\n\
    \        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"L+\");\n       \
    \ gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"M+\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"N+\");\n        gradeLetters.Add(\"O\");\n \
    \       gradeLetters.Add(\"O+\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    P+\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"Q+\");\n\
    \        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"R+\");\n       \
    \ gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"S+\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"T+\");\n        gradeLetters.Add(\"U\");\n \
    \       gradeLetters.Add(\"U+\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    V+\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"W+\");\n\
    \        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"X+\");\n       \
    \ gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Y+\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"Z+\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n", "    \
    \    List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gpa = average;\n\
    \        float gpaSum = 0;\n        foreach (float grade in grades) {\n      \
    \      gpaSum += grade;\n        }\n        float gpaAverage = gpaSum / grades.Count;\n\
    \        float gpaDifference = gpaAverage - gpa;\n        float gpaDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaDifferenceSum\
    \ += Math.Abs(grade - gpa);\n        }\n        float gpaDifferenceAverage = gpaDifferenceSum\
    \ / grades.Count;\n        float gpaDifferenceDifference = gpaDifference - gpaAverage;\n\
    \        float gpaDifferenceDifferenceSum = 0;\n        foreach (float grade in\
    \ grades) {\n            gpaDifferenceDifferenceSum += Math.Abs(grade - gpaAverage);\n\
    \        }\n        float gpaDifferenceDifferenceAverage = gpaDifferenceDifferenceSum\
    \ / grades.Count;\n        float gpaDifferenceDifferenceDifference = gpaDifferenceDifference\
    \ - gpa;\n        float gpaDifferenceDifferenceDifferenceSum = 0;\n        foreach\
    \ (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpa);\n        }\n        float gpaDifferenceDifferenceDifferenceAverage\
    \ = gpaDifferenceDifferenceDifferenceSum / grades.Count;\n        float gpaDifferenceDifferenceDifferenceDifference\
    \ = gpaDifferenceDifferenceDifference - gpaAverage;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpaAverage);\n        }\n        float gpaDifferenceDifferenceDifferenceDifferenceAverage\
    \ = gpaDifferenceDifferenceDifferenceDifferenceSum / grades.Count;\n        float\
    \ gpaDifferenceDifferenceDifferenceDifference = gpaDifferenceDifferenceDifference\
    \ - gpa;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum = 0;\n\
    \        foreach (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpa);\n        }\n        float gpaDifferenceDifferenceDifferenceDifferenceAverage\
    \ = gpaDifferenceDifferenceDifferenceDifferenceSum / grades.Count;\n        float\
    \ gpaDifferenceDifferenceDifferenceDifferenceDifference = gpaDifferenceDifferenceDifferenceDifference\
    \ - gpaAverage;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            g", "        List<string>\
    \ gradeLetters = new List<string>();\n        gradeLetters.Add(\"A+\");\n    \
    \    gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D\");\n \
    \       gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F-\");\n        gradeLetters.Add(\"G\");\n \
    \       gradeLetters.Add(\"G+\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    H-\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"I+\");\n\
    \        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"J-\");\n       \
    \ gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"K+\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"L+\");\n        gradeLetters.Add(\"M\");\n \
    \       gradeLetters.Add(\"M+\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    N+\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"O+\");\n\
    \        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"P+\");\n       \
    \ gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"Q+\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"R+\");\n        gradeLetters.Add(\"S\");\n \
    \       gradeLetters.Add(\"S+\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    T+\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"U+\");\n\
    \        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"V+\");\n       \
    \ gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"W+\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"X+\");\n        gradeLetters.Add(\"Y\");\n \
    \       gradeLetters.Add(\"Y+\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    Z+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n\
    \        gradeLetters.Add(\"B\");\n", "        // Write your code here\n     \
    \   List<string> gradeLetters = new List<string>();\n        float average = grades.Average();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float averageOfSum = sum / grades.Count;\n\
    \        float averageOfAverage = average / grades.Count;\n        float difference\
    \ = averageOfAverage - averageOfSum;\n        float differenceOfAverage = average\
    \ - averageOfAverage;\n        float differenceOfSum = sum - averageOfSum;\n \
    \       float differenceOfSumOfAverage = sum - averageOfAverage;\n        float\
    \ differenceOfAverageOfSum = average - sum;\n        float differenceOfSumOfAverageOfSum\
    \ = sum - average;\n        float differenceOfAverageOfSumOfAverage = average\
    \ - sum;\n        float differenceOfSumOfAverageOfSumOfAverage = sum - average;\n\
    \        float differenceOfAverageOfSumOfAverageOfSum = average - sum;\n     \
    \   float differenceOfSumOfAverageOfSumOfAverageOfSum = sum - average;\n     \
    \   float differenceOfAverageOfSumOfAverageOfSumOfAverage = average - sum;\n \
    \       float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverage = sum - average;\n\
    \        float differenceOfAverageOfSumOfAverageOfSumOfAverageOfSum = average\
    \ - sum;\n        float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSum\
    \ = sum - average;\n        float differenceOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverage\
    \ = average - sum;\n        float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverage\
    \ = sum - average;\n        float differenceOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSum\
    \ = average - sum;\n        float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSum\
    \ = sum - average;\n        float differenceOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverage\
    \ = average - sum;\n        float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverage\
    \ = sum - average;\n        float differenceOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSum\
    \ = average - sum;\n        float differenceOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSumOfAverageOfSum",
  "        List<string> gradeLetters = new List<string>();\n        float average\
    \ = grades.Average();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float averageSum =\
    \ sum / grades.Count;\n        float averageDifference = average - averageSum;\n\
    \        float difference = averageDifference / average;\n        float differenceSum\
    \ = difference * grades.Count;\n        float differenceDifference = differenceSum\
    \ / grades.Count;\n        float differenceAverage = differenceDifference / average;\n\
    \        float differenceAverageSum = differenceAverage * grades.Count;\n    \
    \    float differenceAverageDifference = differenceAverageSum / grades.Count;\n\
    \        float differenceAverageDifferenceSum = differenceAverageDifference *\
    \ grades.Count;\n        float differenceAverageDifferenceDifference = differenceAverageDifferenceSum\
    \ / grades.Count;\n        float differenceAverageDifferenceDifferenceSum = differenceAverageDifferenceDifference\
    \ * grades.Count;\n        float differenceAverageDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceSum / grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifference * grades.Count;\n        float\
    \ differenceAverageDifferenceDifferenceDifferenceDifference = differenceAverageDifferenceDifferenceDifferenceSum\
    \ / grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifferenceDifference * grades.Count;\n\
    \        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceSum / grades.Count;\n\
    \        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifference * grades.Count;\n\
    \        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceSum / grades.Count;\n\
    \        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ * grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ / grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ * grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ / grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ * grades.Count;\n        float differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifference\
    \ = differenceAverageDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceDifferenceSum\
    \ / ", "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float average2 = average * average;\n\
    \        float average3 = average2 * average;\n        float average4 = average3\
    \ * average;\n        float average5 = average4 * average;\n        float average6\
    \ = average5 * average;\n        float average7 = average6 * average;\n      \
    \  float average8 = average7 * average;\n        float average9 = average8 * average;\n\
    \        float average10 = average9 * average;\n        float average11 = average10\
    \ * average;\n        float average12 = average11 * average;\n        float average13\
    \ = average12 * average;\n        float average14 = average13 * average;\n   \
    \     float average15 = average14 * average;\n        float average16 = average15\
    \ * average;\n        float average17 = average16 * average;\n        float average18\
    \ = average17 * average;\n        float average19 = average18 * average;\n   \
    \     float average20 = average19 * average;\n        float average21 = average20\
    \ * average;\n        float average22 = average21 * average;\n        float average23\
    \ = average22 * average;\n        float average24 = average23 * average;\n   \
    \     float average25 = average24 * average;\n        float average26 = average25\
    \ * average;\n        float average27 = average26 * average;\n        float average28\
    \ = average27 * average;\n        float average29 = average28 * average;\n   \
    \     float average30 = average29 * average;\n        float average31 = average30\
    \ * average;\n        float average32 = average31 * average;\n        float average33\
    \ = average32 * average;\n        float average34 = average33 * average;\n   \
    \     float average35 = average34 * average;\n        float average36 = average35\
    \ * average;\n        float average37 = average36 * average;\n        float average38\
    \ = average37 * average;\n        float average39 = average38 * average;\n   \
    \     float average40 = average39 * average;\n        float average41 = average40\
    \ * average;\n        float average42 = average41 * average;\n        float average43\
    \ = average42 * average;\n        float average44 = average43 * average;\n   \
    \     float average45 = average44 * average;\n        float average", "      \
    \  List<string> gradeLetters = new List<string>();\n        float sum = 0;\n \
    \       foreach (float grade in grades) {\n            sum += grade;\n       \
    \ }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0.0f) {\n                gradeLetters.Add(\"D-\");\n         \
    \   } else if (difference < 0.0f) {\n                gradeLetters.Add(\"D+\");\n\
    \            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    D\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    C\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    C+\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageGrade\
    \ = grades.Average();\n        float averageGradeLetter = averageGrade / 4.0f;\n\
    \        float averageGradeLetterLetter = averageGradeLetter * 4.0f;\n       \
    \ float averageGradeLetterLetterLetter = averageGradeLetterLetter * 4.0f;\n  \
    \      float averageGradeLetterLetterLetterLetter = averageGradeLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetter = averageGradeLetterLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetter = averageGradeLetterLetterLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetter = averageGradeLetterLetterLetterLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetter * 4.0f;\n        float\
    \ averageGradeLetterLetterLetterLetterLetterLetterLetterLetter = averageGradeLetterLetterLetterLetterLetterLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetter * 4.0f;\n   \
    \     float averageGradeLetterLetterLetterLetterLetterLetterLetterLetter = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ * 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter * 4.0f;\n\
    \        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter * 4.0f;\n\
    \        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetterLetter *\
    \ 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetterLetter *\
    \ 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter * 4.0f;\n\
    \        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetterLetter\
    \ = averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetterLetter *\
    \ 4.0f;\n        float averageGradeLetterLetterLetterLetterLetterLetterLetterLetterLetter",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        ", "        List<string> gradeLetters = new List<string>();\n \
    \       foreach (float grade in grades) {\n            float gpa = grade;\n  \
    \          float gpaMinusOne = gpa - 1;\n            float gpaMinusTwo = gpa -\
    \ 2;\n            float gpaMinusThree = gpa - 3;\n            float gpaMinusFour\
    \ = gpa - 4;\n            float gpaMinusFive = gpa - 5;\n            float gpaMinusSix\
    \ = gpa - 6;\n            float gpaMinusSeven = gpa - 7;\n            float gpaMinusEight\
    \ = gpa - 8;\n            float gpaMinusNine = gpa - 9;\n            float gpaMinusTen\
    \ = gpa - 10;\n            float gpaMinusEleven = gpa - 11;\n            float\
    \ gpaMinusTwelve = gpa - 12;\n            float gpaMinusThirteen = gpa - 13;\n\
    \            float gpaMinusFourteen = gpa - 14;\n            float gpaMinusFifteen\
    \ = gpa - 15;\n            float gpaMinusSixteen = gpa - 16;\n            float\
    \ gpaMinusSeventeen = gpa - 17;\n            float gpaMinusEighteen = gpa - 18;\n\
    \            float gpaMinusNineteen = gpa - 19;\n            float gpaMinusTwenty\
    \ = gpa - 20;\n            float gpaMinusTwentyOne = gpa - 21;\n            float\
    \ gpaMinusTwentyTwo = gpa - 22;\n            float gpaMinusTwentyThree = gpa -\
    \ 23;\n            float gpaMinusTwentyFour = gpa - 24;\n            float gpaMinusTwentyFive\
    \ = gpa - 25;\n            float gpaMinusTwentySix = gpa - 26;\n            float\
    \ gpaMinusTwentySeven = gpa - 27;\n            float gpaMinusTwentyEight = gpa\
    \ - 28;\n            float gpaMinusTwentyNine = gpa - 29;\n            float gpaMinusTwentyTen\
    \ = gpa - 30;\n            float gpaMinusTwentyEleven = gpa - 31;\n          \
    \  float gpaMinusTwentyTwelve = gpa - 32;\n            float gpaMinusTwentyThirteen\
    \ = gpa - 33;\n            float gpaMinus", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float gradePercent = grade / average;\n            gradeLetters.Add(GetLetterGrade(gradePercent));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < -1.0f) {\n\
    \                gradeLetters.Add(\"D-\");\n            } else if (difference\
    \ < 0.0f) {\n                gradeLetters.Add(\"D\");\n            } else if (difference\
    \ < 1.0f) {\n                gradeLetters.Add(\"C-\");\n            } else if\
    \ (difference < 2.0f) {\n                gradeLetters.Add(\"C\");\n          \
    \  } else if (difference < 3.0f) {\n                gradeLetters.Add(\"B-\");\n\
    \            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 6.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else if (difference < 8.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else {\n                gradeLetters.Add(\"E\");\n      \
    \      }\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < 0.0f) {\n\
    \                difference = 0.0f;\n            }\n            float gradeLetter\
    \ = difference * 100 / average;\n            gradeLetters.Add(String.Format(\"\
    {0}%\", gradeLetter));\n        }\n        return gradeLetters;", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        foreach (float grade in grades) {\n \
    \           float difference = grade - average;\n            if (difference <\
    \ 0) {\n                difference = difference * -1;\n            }\n       \
    \     float percentage = difference / average;\n            string letter = String.Empty;\n\
    \            if (percentage >= 0 && percentage <= 0.33) {\n                letter\
    \ = \"A+\";\n            }\n            else if (percentage > 0.33 && percentage\
    \ <= 0.66) {\n                letter = \"A\";\n            }\n            else\
    \ if (percentage > 0.66 && percentage <= 1) {\n                letter = \"A-\"\
    ;\n            }\n            else if (percentage > 1 && percentage <= 1.33) {\n\
    \                letter = \"B+\";\n            }\n            else if (percentage\
    \ > 1.33 && percentage <= 1.66) {\n                letter = \"B\";\n         \
    \   }\n            else if (percentage > 1.66 && percentage <= 2) {\n        \
    \        letter = \"B-\";\n            }\n            else if (percentage > 2\
    \ && percentage <= 2.33) {\n                letter = \"C+\";\n            }\n\
    \            else if (percentage > 2.33 && percentage <= 2.66) {\n           \
    \     letter = \"C\";\n            }\n            else if (percentage > 2.66 &&\
    \ percentage <= 3) {\n                letter = \"C-\";\n            }\n      \
    \      else if (percentage > 3 && percentage <= 3.33) {\n                letter\
    \ = \"D+\";\n            }\n            else if (percentage > 3.33 && percentage\
    \ <= 3.66) {\n                letter = \"D\";\n            }\n            else\
    \ if (percentage > 3.66 && percentage <= 4) {\n                letter = \"D-\"\
    ;\n            }\n            else if (percentage > 4 && percentage <= 4.33) {\n\
    \                letter = \"E\";\n            }\n            gradeLetters.Add(letter);\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   float gpa = grade;\n            float gpaUpper = gpa + (gpa / 3.0f);\n   \
    \         float gpaLower = gpa - (gpa / 3.0f);\n            float gpaMid = (gpa\
    \ + gpaUpper) / 2.0f;\n            float gpaMidUpper = (gpa + gpaUpper) / 2.0f\
    \ + (gpa / 3.0f);\n            float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa\
    \ / 3.0f);\n            float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n\
    \            float gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n   \
    \         float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n      \
    \      float gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n         \
    \   float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n            float\
    \ gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n            float gpaMidLower\
    \ = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n            float gpaMidUpper = (gpa\
    \ + gpaUpper) / 2.0f + (gpa / 3.0f);\n            float gpaMidLower = (gpa + gpaUpper)\
    \ / 2.0f - (gpa / 3.0f);\n            float gpaMidUpper = (gpa + gpaUpper) / 2.0f\
    \ + (gpa / 3.0f);\n            float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa\
    \ / 3.0f);\n            float gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n\
    \            float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n   \
    \         float gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n      \
    \      float gpaMidLower = (gpa + gpaUpper) / 2.0f - (gpa / 3.0f);\n         \
    \   float gpaMidUpper = (gpa + gpaUpper) / 2.0f + (gpa / 3.0f);\n            float\
    \ gpaMidLower = (gpa + gpaUpper) / ", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        float averageOfSquares = sum * sum;\n        float averageOfSquaresOfDifferences\
    \ = sum * sum - averageOfSquares;\n        float averageOfSquaresOfSquaredDifferences\
    \ = averageOfSquaresOfDifferences * averageOfSquaresOfDifferences;\n        float\
    \ averageOfSquaresOfSquaredDifferencesSquared = averageOfSquaresOfSquaredDifferences\
    \ * averageOfSquaresOfSquaredDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredSquared\
    \ = averageOfSquaresOfSquaredDifferencesSquared * averageOfSquaresOfSquaresOfSquaredDifferencesSquared;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredSquaredSquare = averageOfSquaresOfSquaresDifferencesSquaredSquared\
    \ * averageOfSquaresOfSquaresOfSquaredDifferencesSquaredSquared;\n        float\
    \ averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared = averageOfSquaresOfSquaresDifferencesSquaredSquared\
    \ * averageOfSquaresOfSquaresDifferencesSquaredSquared;\n        float averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared\
    \ = averageOfSquaresOfSquaresDifferencesSquaredSquared * averageOfSquaresOfSquaresDifferencesSquaredSquared;\n\
    \        float averageOfSquaresOfSquaresDifferencesSquaredSquaredSquaredSquare\
    \ = averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared * averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared;\n\
    \        float averageOfSquaresOfSquaresDifferencesSquaredSquaredSquaredSquare\
    \ = averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared * averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared;\n\
    \        float averageOfSquaresOfSquaresDifferencesSquaredSquaredSquaredSquare\
    \ = averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared * averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared;\n\
    \        float averageOfSquaresOfSquaresDifferencesSquaredSquaredSquaredSquare\
    \ = averageOfSquaresOfSquaresDifferencesSquaredSquaredSquared * averageOfSquaresOfSquaresDifferen",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < -0.7) {\n                gradeLetters.Add(\"D-\");\n         \
    \   } else if (difference < -0.3) {\n                gradeLetters.Add(\"C-\");\n\
    \            } else if (difference < -0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.2) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.4) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.6) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.8) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.9) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.2) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.4) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.6) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.8) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.9) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.2) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.4) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.6) {\n                gradeLetters.",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gradeSum = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSum += Math.Pow(grade\
    \ - average, 2);\n        }\n        float averageSquare = gradeSum / grades.Count;\n\
    \        float gradeSumSquare = 0;\n        foreach (float grade in grades) {\n\
    \            gradeSumSquare += Math.Pow(grade - average, 2);\n        }\n    \
    \    float averageSquareRoot = gradeSumSquare / grades.Count;\n        float gradeSumSquareRoot\
    \ = 0;\n        foreach (float grade in grades) {\n            gradeSumSquareRoot\
    \ += Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot2\
    \ = gradeSumSquareRoot / grades.Count;\n        float gradeSumSquareRoot2 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot2 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot3 =\
    \ gradeSumSquareRoot2 / grades.Count;\n        float gradeSumSquareRoot3 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot3 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot4 =\
    \ gradeSumSquareRoot3 / grades.Count;\n        float gradeSumSquareRoot4 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot4 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot5 =\
    \ gradeSumSquareRoot4 / grades.Count;\n        float gradeSumSquareRoot5 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot5 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot6 =\
    \ gradeSumSquareRoot5 / grades.Count;\n        float gradeSumSquareRoot6 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot6 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot7 =\
    \ gradeSumSquareRoot6 / grades.Count;\n        float gradeSumSquareRoot7 = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSumSquareRoot7 +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float averageSquareRoot8 =\
    \ gradeSumSquareRoot7 / grades.Count;\n        float gradeSum", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float difference = average - grades.Min();\n\
    \        float difference2 = average - grades.Max();\n        float difference3\
    \ = average - grades.Average();\n        float difference4 = average - grades.Sum();\n\
    \        float difference5 = average - grades.Sum(x => x);\n        float difference6\
    \ = average - grades.Sum(x => x * x);\n        float difference7 = average - grades.Sum(x\
    \ => x * x * x);\n        float difference8 = average - grades.Sum(x => x * x\
    \ * x * x);\n        float difference9 = average - grades.Sum(x => x * x * x *\
    \ x * x);\n        float difference10 = average - grades.Sum(x => x * x * x *\
    \ x * x * x);\n        float difference11 = average - grades.Sum(x => x * x *\
    \ x * x * x * x * x);\n        float difference12 = average - grades.Sum(x =>\
    \ x * x * x * x * x * x * x * x);\n        float difference13 = average - grades.Sum(x\
    \ => x * x * x * x * x * x * x * x * x * x);\n        float difference14 = average\
    \ - grades.Sum(x => x * x * x * x * x * x * x * x * x * x * x * x);\n        float\
    \ difference15 = average - grades.Sum(x => x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x);\n        float difference16 = average - grades.Sum(x =>\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x);\n        float\
    \ difference17 = average - grades.Sum(x => x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x * x * x * x * x);\n        float difference18 = average -\
    \ grades.Sum(x => x * x * x * x * x * x * x * x * x * x * x * x * x * x * x *\
    \ x * x * x * x * x);\n        float difference19 = average - grades.Sum(x =>\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x *\
    \ x * x * x);\n        float difference20 = average - grades.Sum(x => x * x *\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x *\
    \ x * x);\n        float difference21 = average - grades.Sum(x => x * x * x *\
    \ x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x *\
    \ x * x * x);", "        List<string> gradeLetters = new List<string>();\n   \
    \     float sum = 0;\n        foreach (float grade in grades) {\n            sum\
    \ += grade;\n        }\n        float average = sum / grades.Count;\n        float\
    \ gpa = average;\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    D-\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"C-\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"B-\");\n       \
    \ gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B+\");\n\
    \        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"D+\");\n      \
    \  gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float gradePercent = (grade / average) * 100;\n  \
    \          if (gradePercent >= 90) {\n                gradeLetters.Add(\"A+\"\
    );\n            } else if (gradePercent >= 80) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (gradePercent >= 70) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (gradePercent >= 60) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (gradePercent >= 50) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (gradePercent >= 40) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (gradePercent >= 30) {\n                gradeLetters.Add(\"\
    C+\");\n            } else if (gradePercent >= 20) {\n                gradeLetters.Add(\"\
    C\");\n            } else if (gradePercent >= 10) {\n                gradeLetters.Add(\"\
    C-\");\n            } else if (gradePercent >= 0) {\n                gradeLetters.Add(\"\
    D+\");\n            } else if (gradePercent <= -10) {\n                gradeLetters.Add(\"\
    D\");\n            } else if (gradePercent <= -20) {\n                gradeLetters.Add(\"\
    D-\");\n            } else if (gradePercent <= -30) {\n                gradeLetters.Add(\"\
    E\");\n            }\n        }\n        return gradeLetters;", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float gpaSum = 0;\n        foreach (float\
    \ grade in grades) {\n            gpaSum += grade;\n        }\n        float gpaAverage\
    \ = gpaSum / grades.Count;\n        float gpa = gpaAverage / 4;\n        float\
    \ gpaMin = gpaAverage - gpa;\n        float gpaMax = gpaAverage + gpa;\n     \
    \   float gpaSum2 = 0;\n        foreach (float grade in grades) {\n          \
    \  gpaSum2 += grade * grade;\n        }\n        float gpaAverage2 = gpaSum2 /\
    \ grades.Count;\n        float gpa2 = gpaAverage2 / 4;\n        float gpaMin2\
    \ = gpaAverage2 - gpa2;\n        float gpaMax2 = gpaAverage2 + gpa2;\n       \
    \ float gpaSum3 = 0;\n        foreach (float grade in grades) {\n            gpaSum3\
    \ += grade * grade * grade;\n        }\n        float gpaAverage3 = gpaSum3 /\
    \ grades.Count;\n        float gpa3 = gpaAverage3 / 4;\n        float gpaMin3\
    \ = gpaAverage3 - gpa3;\n        float gpaMax3 = gpaAverage3 + gpa3;\n       \
    \ float gpaSum4 = 0;\n        foreach (float grade in grades) {\n            gpaSum4\
    \ += grade * grade * grade * grade;\n        }\n        float gpaAverage4 = gpaSum4\
    \ / grades.Count;\n        float gpa4 = gpaAverage4 / 4;\n        float gpaMin4\
    \ = gpaAverage4 - gpa4;\n        float gpaMax4 = gpaAverage4 + gpa4;\n       \
    \ float gpaSum5 = 0;\n        foreach (float grade in grades) {\n            gpaSum5\
    \ += grade * grade * grade * grade * grade;\n        }\n        float gpaAverage5\
    \ = gpaSum5 / grades.Count;\n        float gpa5 = gpaAverage5 / 4;\n        float\
    \ gpaMin5 = gpaAverage5 - gpa5;\n        float gpaMax5 = gpaAverage5 + gpa5;\n\
    \        float gpaSum6 = 0;\n        foreach (float grade in grades) {\n     \
    \       gpaSum6 += grade * grade * grade * grade * gra", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float gpaSum = 0;\n        foreach (float\
    \ grade in grades) {\n            gpaSum += grade;\n        }\n        float gpaAverage\
    \ = gpaSum / grades.Count;\n        float gpaDiffAverage = gpaAverage - average;\n\
    \        float gpaDiffSum = gpaSum - sum;\n        float gpaDiffAverageSum = gpaDiffSum\
    \ / grades.Count;\n        float gpaDiffAverageSum2 = gpaDiffAverageSum * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum3 = gpaDiffAverageSum2 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum4 = gpaDiffAverageSum3 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum5 = gpaDiffAverageSum4 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum6 = gpaDiffAverageSum5 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum7 = gpaDiffAverageSum6 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum8 = gpaDiffAverageSum7 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum9 = gpaDiffAverageSum8 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum10 = gpaDiffAverageSum9 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum11 = gpaDiffAverageSum10 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum12 = gpaDiffAverageSum11 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum13 = gpaDiffAverageSum12 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum14 = gpaDiffAverageSum13 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum15 = gpaDiffAverageSum14 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum16 = gpaDiffAverageSum15 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum17 = gpaDiffAverageSum16 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum18 = gpaDiffAverageSum17 * gpaDiffAverageSum;\n\
    \        float gpaDiffAverageSum19 = gpaDiffAverageSum18 * gpaDiffAverage", " \
    \       List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float variance = average;\n\
    \        float deviation = 0;\n        foreach (float grade in grades) {\n   \
    \         deviation += (grade - average) * (grade - average);\n        }\n   \
    \     deviation = Math.Sqrt(deviation);\n        float standardDeviation = Math.Sqrt(variance);\n\
    \        float gradeVariance = standardDeviation / deviation;\n        float gradeStandardDeviation\
    \ = variance / deviation;\n        float gradeSum = 0;\n        foreach (float\
    \ grade in grades) {\n            gradeSum += grade;\n        }\n        gradeSum\
    \ = gradeSum / grades.Count;\n        float gradeAverage = gradeSum / grades.Count;\n\
    \        float gradeDeviation = gradeSum / grades.Count - average;\n        gradeDeviation\
    \ = Math.Sqrt(gradeDeviation);\n        float gradeStandardDeviation = Math.Sqrt(gradeVariance);\n\
    \        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n       \
    \ gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation\
    \ = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n\
    \        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n       \
    \ gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation\
    \ = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n\
    \        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n       \
    \ gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation\
    \ = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n\
    \        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n       \
    \ gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation\
    \ = Math.Sqrt(gradeStandardDeviation);\n        gradeStandardDeviation = Math.Sqrt(gradeStandardDeviation);\n\
    \        gradeStandardDeviation = Math.Sqr", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < -1.0f) {\n\
    \                gradeLetters.Add(\"D-\");\n            } else if (difference\
    \ < 0.0f) {\n                gradeLetters.Add(\"D\");\n            } else if (difference\
    \ < 1.0f) {\n                gradeLetters.Add(\"C-\");\n            } else if\
    \ (difference < 2.0f) {\n                gradeLetters.Add(\"C\");\n          \
    \  } else if (difference < 3.0f) {\n                gradeLetters.Add(\"B-\");\n\
    \            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 6.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else {\n                gradeLetters.Add(\"E\");\n     \
    \       }\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float averageOfGrades = average;\n        foreach\
    \ (float grade in grades) {\n            float difference = grade - average;\n\
    \            float differenceOfGrades = difference;\n            float differenceOfGradesOfGrades\
    \ = differenceOfGrades;\n            float differenceOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGrades;\n            float differenceOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGrades;\n            float differenceOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGradesOfGrades;\n            float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades;\n            float\
    \ differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades = differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades;\n\
    \            float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades;\n\
    \            float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades;\n\
    \            float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades;\n\
    \            float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = differenceOfGradesOfGradesOfGradesOfGra", "        List<string> gradeLetters\
    \ = new List<string>();\n        float average = grades.Average();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float averageOfSum = sum / grades.Count;\n        float difference\
    \ = average - averageOfSum;\n        float differenceOfSum = sum - averageOfSum;\n\
    \        float differenceOfSumOfDifference = differenceOfSum / grades.Count;\n\
    \        float differenceOfSumOfDifferenceOfSum = differenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifference\
    \ = differenceOfSumOfDifferenceOfSum / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ = differenceOfSumOfDifferenceOfSumOfDifference / grades.Count;\n        float\
    \ differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference = differenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ = differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference / grades.Count;\n\
    \        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference\
    \ = differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ = differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ = differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSum\
    \ = differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifferenceOfSumOfDifference",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float sumOfSquares\
    \ = 0;\n        foreach (float grade in grades) {\n            sumOfSquares +=\
    \ Math.Pow(grade - average, 2);\n        }\n        float variance = sumOfSquares\
    \ / grades.Count;\n        float standardDeviation = Math.Sqrt(variance);\n  \
    \      float standardDeviationOfGrades = standardDeviation / average;\n      \
    \  float standardDeviationOfGradesSquared = standardDeviationOfGrades * standardDeviationOfGrades;\n\
    \        float standardDeviationOfGradesSquaredOfGrades = standardDeviationOfGradesSquared\
    \ * grades.Count;\n        float standardDeviationOfGradesSquaredOfGradesOfGrades\
    \ = standardDeviationOfGradesSquaredOfGrades * grades.Count;\n        float standardDeviationOfGradesSquaredOfGradesOfGradesOfGrades\
    \ = standardDeviationOfGradesSquaredOfGradesOfGrades * grades.Count;\n       \
    \ float standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGrades = standardDeviationOfGradesSquaredOfGradesOfGradesOfGrades\
    \ * grades.Count;\n        float standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGrades * grades.Count;\n\
    \        float standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGrades *\
    \ grades.Count;\n        float standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ * grades.Count;\n        float standardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGradesOfGra",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            float\
    \ percentage = difference * 100 / average;\n            float letterGrade;\n \
    \           if (percentage < 0)\n                letterGrade = \"D-\";\n     \
    \       else if (percentage < 0.7)\n                letterGrade = \"D+\";\n  \
    \          else if (percentage < 1)\n                letterGrade = \"D\";\n  \
    \          else if (percentage < 1.3)\n                letterGrade = \"D+\";\n\
    \            else if (percentage < 1.7)\n                letterGrade = \"C+\"\
    ;\n            else if (percentage < 2)\n                letterGrade = \"C\";\n\
    \            else if (percentage < 2.3)\n                letterGrade = \"C+\"\
    ;\n            else if (percentage < 2.7)\n                letterGrade = \"B+\"\
    ;\n            else if (percentage < 3)\n                letterGrade = \"B\";\n\
    \            else if (percentage < 3.3)\n                letterGrade = \"B+\"\
    ;\n            else if (percentage < 3.7)\n                letterGrade = \"A-\"\
    ;\n            else if (percentage < 4)\n                letterGrade = \"A\";\n\
    \            else if (percentage < 4.3)\n                letterGrade = \"A-\"\
    ;\n            else if (percentage < 4.7)\n                letterGrade = \"A+\"\
    ;\n            else\n                letterGrade = \"E\";\n            gradeLetters.Add(letterGrade);\n\
    \        }\n        return gradeLetters;", "        // Your code goes here\n \
    \       List<string> result = new List<string>();\n        float sum = 0;\n  \
    \      foreach (float grade in grades) {\n            sum += grade;\n        }\n\
    \        float average = sum / grades.Count;\n        float grade;\n        float\
    \ averageGrade;\n        float gradeSum = 0;\n        foreach (float grade in\
    \ grades) {\n            gradeSum += grade;\n        }\n        averageGrade =\
    \ gradeSum / grades.Count;\n        grade = averageGrade - average;\n        if\
    \ (grade >= 0) {\n            result.Add(\"A+\");\n        } else if (grade <=\
    \ -0.7) {\n            result.Add(\"A\");\n        } else if (grade <= -0.3) {\n\
    \            result.Add(\"A-\");\n        } else if (grade <= 0) {\n         \
    \   result.Add(\"B+\");\n        } else if (grade <= 0.3) {\n            result.Add(\"\
    B\");\n        } else if (grade <= 0.7) {\n            result.Add(\"B-\");\n \
    \       } else if (grade <= 1) {\n            result.Add(\"C+\");\n        } else\
    \ if (grade <= 2) {\n            result.Add(\"C\");\n        } else if (grade\
    \ <= 3) {\n            result.Add(\"C-\");\n        } else if (grade <= 4) {\n\
    \            result.Add(\"D+\");\n        } else if (grade <= 5) {\n         \
    \   result.Add(\"D\");\n        } else if (grade <= 6) {\n            result.Add(\"\
    D-\");\n        } else if (grade <= 7) {\n            result.Add(\"E\");\n   \
    \     }\n        return result;", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float difference = average - grades.First();\n        float gradeDifference\
    \ = difference / average;\n        gradeLetters.Add(\"E\");\n        if (gradeDifference\
    \ > 0.0f) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (gradeDifference\
    \ < 0.0f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradeDifference\
    \ == 0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradeDifference\
    \ > 0.0f && gradeDifference < 0.0f) {\n            gradeLetters.Add(\"C-\");\n\
    \        }\n        if (gradeDifference > 0.0f && gradeDifference > 0.0f) {\n\
    \            gradeLetters.Add(\"C\");\n        }\n        if (gradeDifference\
    \ > 0.0f && gradeDifference < 0.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        }\n        if (gradeDifference > 0.0f && gradeDifference > 0.0f) {\n\
    \            gradeLetters.Add(\"B\");\n        }\n        if (gradeDifference\
    \ < 0.0f && gradeDifference > 0.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        }\n        if (gradeDifference < 0.0f && gradeDifference > 0.0f) {\n\
    \            gradeLetters.Add(\"B+\");\n        }\n        if (gradeDifference\
    \ < 0.0f && gradeDifference < 0.0f) {\n            gradeLetters.Add(\"A-\");\n\
    \        }\n        if (gradeDifference < 0.0f && gradeDifference < 0.0f) {\n\
    \            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 0.0f && gradeDifference < 0.0f) {\n            gradeLetters.Add(\"A+\");\n\
    \        }\n        if (gradeDifference > 0.0f && gradeDifference > 0.0f) {\n\
    \            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ < 0.0f && gradeDifference > 0.0f) {\n            gradeLetters.Add(\"A+\");\n\
    \        }\n        if (gradeDifference < 0.0f && gradeDifference < 0.0f) {\n\
    \            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 0.0f && gradeDifference > 0.0f) {\n            gradeLetters.Add(\"A\");\n\
    \        }\n        if (gradeDifference > 0.0f && gradeDifference > 0.0f) {\n\
    \            gradeLetters.Add(\"A", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade,\
    \ average));\n        }\n        return gradeLetters;", "        List<string>\
    \ gradeLetters = new List<string>();\n        foreach (float grade in grades)\
    \ {\n            float gpa = grade;\n            int gradeLetter = Convert.ToInt32(Math.Round(grade\
    \ * 100));\n            gradeLetters.Add(Convert.ToString(gradeLetter));\n   \
    \     }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n  \
    \      gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        foreach (float grade in grades) {\n \
    \           gradeLetters.Add(LetterGrade(grade, average));\n        }\n      \
    \  return gradeLetters;", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float difference = average - grades.FirstOrDefault();\n        float differencePercentage\
    \ = difference / average;\n        float gradePercentage = grades.FirstOrDefault()\
    \ / average;\n        gradeLetters.Add(\"D-\");\n        if (gradePercentage >\
    \ 0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > 0.3f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.3f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradePercentage\
    \ > -0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.1f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.3f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradePercentage\
    \ > -0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.1f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.3f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradePercentage\
    \ > -0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.1f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.3f) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (gradePercentage\
    \ > -0.0f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.1f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.7f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradePercentage\
    \ > -0.3f) {\n            gradeLetters.Add(\"D+", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float averageOfSquares = sum * sum;\n        float\
    \ averageOfSquaresOfDifferences = averageOfSquares - grades.Sum() * average;\n\
    \        float averageOfSquaresOfSquaredDifferences = averageOfSquaresOfDifferences\
    \ * averageOfSquares;\n        float averageOfSquaresOfSquaredDifferencesSquared\
    \ = averageOfSquaresOfSquaredDifferences * averageOfSquaresOfSquares;\n      \
    \  float averageOfSquaresOfSquaredDifferencesSquaredOfDifferences = averageOfSquaresOfSquaredDifferencesSquared\
    \ * averageOfSquaresOfSquaresOfDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaredDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfDifferences * averageOfSquaresOfSquaresOfSquaredDifferences;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfSquaredDifferences * averageOfSquaresOfSquaresOfDifferences;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaredDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfDifferences * averageOfSquaresOfSquaresOfSquaredDifferences;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaredDifferences *\
    \ averageOfSquaresOfSquaresOfDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfSquaredDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfDifferences\
    \ * averageOfSquaresOfSquaresOfDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfDifferences\
    \ * averageOfSquaresOfSquaresOfDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredOfSquaresOfSquaresOfSquaresOfDifferences\
    \ = averageOfSquaresOfSquared", "        List<string> gradeLetters = new List<string>();\n\
    \        foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        gradeLetters.Add(\"E\");\n        if (average >\
    \ 3.7) {\n            gradeLetters.Add(\"A+\");\n        }\n        else if (average\
    \ > 3.3) {\n            gradeLetters.Add(\"A\");\n        }\n        else if (average\
    \ > 3) {\n            gradeLetters.Add(\"A-\");\n        }\n        else if (average\
    \ > 2.7) {\n            gradeLetters.Add(\"B+\");\n        }\n        else if\
    \ (average > 2.3) {\n            gradeLetters.Add(\"B\");\n        }\n       \
    \ else if (average > 2) {\n            gradeLetters.Add(\"B-\");\n        }\n\
    \        else if (average > 1.7) {\n            gradeLetters.Add(\"C+\");\n  \
    \      }\n        else if (average > 1.3) {\n            gradeLetters.Add(\"C\"\
    );\n        }\n        else if (average > 1) {\n            gradeLetters.Add(\"\
    C-\");\n        }\n        else if (average > 0.7) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (average > 0.2) {\n            gradeLetters.Add(\"\
    D\");\n        }\n        else if (average > 0) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        else {\n            gradeLetters.Add(\"F\");\n    \
    \    }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        float difference = average - grades.Average();\n        float gradeDifference\
    \ = difference / grades.Average();\n        gradeLetters.Add(\"D-\");\n      \
    \  if (gradeDifference < -0.7) {\n            gradeLetters.Add(\"D\");\n     \
    \   }\n        if (gradeDifference < -0.1) {\n            gradeLetters.Add(\"\
    C-\");\n        }\n        if (gradeDifference < -0.3) {\n            gradeLetters.Add(\"\
    C\");\n        }\n        if (gradeDifference < -0.5) {\n            gradeLetters.Add(\"\
    B-\");\n        }\n        if (gradeDifference < -0.7) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (gradeDifference < -0.9) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        if (gradeDifference < -1.1) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference < -1.3) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        if (gradeDifference < -1.5) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   float gpa = grade;\n            float gpaSum = 0;\n            float gpaAverage\
    \ = 0;\n            float gpaSumSquare = 0;\n            float gpaAverageSquare\
    \ = 0;\n            float gpaSumSquareRoot = 0;\n            float gpaAverageSquareRoot\
    \ = 0;\n            float gpaSumRoot = 0;\n            float gpaAverageRoot =\
    \ 0;\n            float gpaSumRootSquare = 0;\n            float gpaAverageRootSquare\
    \ = 0;\n            float gpaSumRootSquareRoot = 0;\n            float gpaAverageRootSquareRoot\
    \ = 0;\n            float gpaSumSquareRootAverage = 0;\n            float gpaAverageSquareRootAverage\
    \ = 0;\n            float gpaSumSquareRootAverageSquare = 0;\n            float\
    \ gpaAverageSquareRootAverageSquare = 0;\n            float gpaSumSquareRootAverageSquareRoot\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRoot = 0;\n       \
    \     float gpaSumSquareRootAverageSquareRootSquare = 0;\n            float gpaAverageSquareRootAverageSquareRootSquare\
    \ = 0;\n            float gpaSumSquareRootAverageSquareRootSquareRoot = 0;\n \
    \           float gpaAverageSquareRootAverageSquareRootSquareRoot = 0;\n     \
    \       float gpaSumSquareRootAverageSquareRootSquareRootSquare = 0;\n       \
    \     float gpaAverageSquareRootAverageSquareRootSquareRootSquare = 0;\n     \
    \       float gpaSumSquareRootAverageSquareRootSquareRootSquare = 0;\n       \
    \     float gpaAverageSquareRootAverageSquareRootSquareRootSquare = 0;\n     \
    \       float gpaSumSquareRootAverageSquareRootSquareRootSquareRoot = 0;\n   \
    \         float gpaAverageSquareRootAverageSquareRootSquareRootSquareRoot = 0;\n\
    \            float gpaSumSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaSumSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaSumSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaSumSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaSumSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n            float gpaAverageSquareRootAverageSquareRootSquareRootSquareRootSquare\
    \ = 0;\n", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        float difference\
    \ = average - grades.First();\n        float difference2 = average - grades.Last();\n\
    \        gradeLetters.Add(\"D-\");\n        if (difference < 0) {\n          \
    \  gradeLetters.Add(\"D\");\n        }\n        if (difference2 < 0) {\n     \
    \       gradeLetters.Add(\"D\");\n        }\n        if (difference > 0) {\n \
    \           gradeLetters.Add(\"C\");\n        }\n        if (difference2 > 0)\
    \ {\n            gradeLetters.Add(\"C\");\n        }\n        if (difference <\
    \ 0 && difference2 < 0) {\n            gradeLetters.Add(\"B\");\n        }\n \
    \       if (difference > 0 && difference2 > 0) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (difference < 0 && difference2 > 0) {\n         \
    \   gradeLetters.Add(\"A\");\n        }\n        if (difference > 0 && difference2\
    \ < 0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (difference\
    \ < 0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (difference2\
    \ > 0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (difference\
    \ > 0 && difference2 > 0) {\n            gradeLetters.Add(\"A\");\n        }\n\
    \        if (difference < 0 && difference2 < 0) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference > 0 && difference2 > 0) {\n         \
    \   gradeLetters.Add(\"A\");\n        }\n        if (difference < 0) {\n     \
    \       gradeLetters.Add(\"A\");\n        }\n        if (difference2 > 0) {\n\
    \            gradeLetters.Add(\"A\");\n        }\n        if (difference > 0 &&\
    \ difference2 < 0) {\n            gradeLetters.Add(\"A\");\n        }\n      \
    \  if (difference < 0) {\n            gradeLetters.Add(\"A\");\n        }\n  \
    \      if (difference2 > 0) {\n            gradeLetters.Add(\"A\");\n        }\n\
    \        if (difference > 0 && difference2 > 0) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference < 0) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference2 < 0) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference > 0 && difference2 < 0) {\n         \
    \   gradeLetters.Add(\"A\");\n        }\n        if (difference < 0) {\n     \
    \       gradeLetters.Add(\"A\");\n        }\n        if (difference2 > 0) {\n\
    \            gradeLetters.Add(\"A\");\n        }\n        if (difference > 0 &&\
    \ difference2 > 0) {\n            gradeLetters.Add(\"A\");\n        }\n      \
    \  if (difference < 0) {\n            gradeLetters.Add(\"A", "        List<string>\
    \ letterGrades = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        foreach (float grade in grades) {\n \
    \           float difference = grade - average;\n            if (difference <\
    \ -3.7f || difference > 3.7f) {\n                letterGrades.Add(\"D-\");\n \
    \           } else if (difference < -3.3f || difference > 3.3f) {\n          \
    \      letterGrades.Add(\"C-\");\n            } else if (difference < -3.0f ||\
    \ difference > 3.0f) {\n                letterGrades.Add(\"B-\");\n          \
    \  } else if (difference < -2.7f || difference > 2.7f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < -2.3f || difference > 2.3f) {\n  \
    \              letterGrades.Add(\"B-\");\n            } else if (difference <\
    \ -2.0f || difference > 2.0f) {\n                letterGrades.Add(\"B-\");\n \
    \           } else if (difference < -1.7f || difference > 1.7f) {\n          \
    \      letterGrades.Add(\"B-\");\n            } else if (difference < -1.3f ||\
    \ difference > 1.3f) {\n                letterGrades.Add(\"B-\");\n          \
    \  } else if (difference < -1.0f || difference > 1.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < -0.7f || difference > 0.7f) {\n  \
    \              letterGrades.Add(\"B-\");\n            } else if (difference <\
    \ -0.0f || difference > 0.0f) {\n                letterGrades.Add(\"B-\");\n \
    \           } else if (difference < 0.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 0.7f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 1.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 1.7f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 2.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 2.3f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 2.7f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 3.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 3.3f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 3.7f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 4.0f) {\n                letterGrades.Add(\"\
    B-\");\n            } else if (difference < 4.7f) {\n                letterGrade",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        gradeLetters.Add(\"\
    D-\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"C-\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"B-\");\n       \
    \ gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n       \
    \ gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n       \
    \ gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n       \
    \ gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A\");\n", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < 0) {\n                difference =\
    \ -difference;\n            }\n            float percentage = (difference / average)\
    \ * 100;\n            string letter = String.Empty;\n            if (percentage\
    \ >= 90) {\n                letter = \"A\";\n            } else if (percentage\
    \ >= 80) {\n                letter = \"A-\";\n            } else if (percentage\
    \ >= 70) {\n                letter = \"B+\";\n            } else if (percentage\
    \ >= 60) {\n                letter = \"B\";\n            } else if (percentage\
    \ >= 50) {\n                letter = \"B-\";\n            } else if (percentage\
    \ >= 40) {\n                letter = \"C+\";\n            } else if (percentage\
    \ >= 30) {\n                letter = \"C\";\n            } else if (percentage\
    \ >= 20) {\n                letter = \"C-\";\n            } else if (percentage\
    \ >= 10) {\n                letter = \"D+\";\n            } else if (percentage\
    \ >= 0) {\n                letter = \"D\";\n            } else {\n           \
    \     letter = \"E\";\n            }\n            gradeLetters.Add(letter);\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float average2 = average * average;\n        float\
    \ average3 = average2 * average;\n        float average4 = average3 * average;\n\
    \        float average5 = average4 * average;\n        float average6 = average5\
    \ * average;\n        float average7 = average6 * average;\n        float average8\
    \ = average7 * average;\n        float average9 = average8 * average;\n      \
    \  float average10 = average9 * average;\n        float average11 = average10\
    \ * average;\n        float average12 = average11 * average;\n        float average13\
    \ = average12 * average;\n        float average14 = average13 * average;\n   \
    \     float average15 = average14 * average;\n        float average16 = average15\
    \ * average;\n        float average17 = average16 * average;\n        float average18\
    \ = average17 * average;\n        float average19 = average18 * average;\n   \
    \     float average20 = average19 * average;\n        float average21 = average20\
    \ * average;\n        float average22 = average21 * average;\n        float average23\
    \ = average22 * average;\n        float average24 = average23 * average;\n   \
    \     float average25 = average24 * average;\n        float average26 = average25\
    \ * average;\n        float average27 = average26 * average;\n        float average28\
    \ = average27 * average;\n        float average29 = average28 * average;\n   \
    \     float average30 = average29 * average;\n        float average31 = average30\
    \ * average;\n        float average32 = average31 * average;\n        float average33\
    \ = average32 * average;\n        float average34 = average33 * average;\n   \
    \     float average35 = average34 * average;\n        float average36 = average35\
    \ * average;\n        float average37 = average36 * average;\n        float average38\
    \ = average37 * average;\n        float average39 = average38 * average;\n   \
    \     float average40 = average39 * average;\n        float average41 = average40\
    \ * average;\n        float average42 = average41 * average;\n        float average43\
    \ = average42 * average;\n        float average44 = average43 * average;\n   \
    \     float average45 = average44 * average;\n        float average", "      \
    \  List<string> gradeLetters = new List<string>();\n        float sum = 0;\n \
    \       foreach (float grade in grades) {\n            sum += grade;\n       \
    \ }\n        float average = sum / grades.Count;\n        float gpaSum = 0;\n\
    \        foreach (float grade in grades) {\n            gpaSum += grade * average;\n\
    \        }\n        float gpaAverage = gpaSum / grades.Count;\n        float gpa\
    \ = gpaAverage / 4.0;\n        float gpaMin = gpaAverage - gpa;\n        float\
    \ gpaMax = gpaAverage + gpa;\n        float gpaSum2 = 0;\n        foreach (float\
    \ grade in grades) {\n            gpaSum2 += grade * gpa;\n        }\n       \
    \ float gpaAverage2 = gpaSum2 / grades.Count;\n        float gpa2 = gpaAverage2\
    \ / 4.0;\n        float gpaMin2 = gpaAverage2 - gpa2;\n        float gpaMax2 =\
    \ gpaAverage2 + gpa2;\n        float gpaSum3 = 0;\n        foreach (float grade\
    \ in grades) {\n            gpaSum3 += grade * gpa2;\n        }\n        float\
    \ gpaAverage3 = gpaSum3 / grades.Count;\n        float gpa3 = gpaAverage3 / 4.0;\n\
    \        float gpaMin3 = gpaAverage3 - gpa3;\n        float gpaMax3 = gpaAverage3\
    \ + gpa3;\n        float gpaSum4 = 0;\n        foreach (float grade in grades)\
    \ {\n            gpaSum4 += grade * gpa3;\n        }\n        float gpaAverage4\
    \ = gpaSum4 / grades.Count;\n        float gpa4 = gpaAverage4 / 4.0;\n       \
    \ float gpaMin4 = gpaAverage4 - gpa4;\n        float gpaMax4 = gpaAverage4 + gpa4;\n\
    \        float gpaSum5 = 0;\n        foreach (float grade in grades) {\n     \
    \       gpaSum5 += grade * gpa4;\n        }\n        float gpaAverage5 = gpaSum5\
    \ / grades.Count;\n        float gpa5 = gpaAverage5 / 4.0;\n        float gpaMin5\
    \ = gpaAverage5 - gpa5;\n        float gpaMax5 = gpaAverage5 + gpa5;\n       \
    \ float gpaSum6 = 0;\n        foreach (float grade in grades) {\n            gpaSum6\
    \ += grade * gpa5;\n        }\n        float gpaAverage6 = gpaSum6", "       \
    \ List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n \
    \       gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        ", "        List<string> gradeLetters = new List<string>();\n \
    \       float sum = 0;\n        foreach (float grade in grades) {\n          \
    \  sum += grade;\n        }\n        float average = sum / grades.Count;\n   \
    \     foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < -3.5) {\n                gradeLetters.Add(\"\
    D-\");\n            } else if (difference < -3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.6) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -3.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -4.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -4.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -5.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -5.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -6.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -6.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -7.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -7.5) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -8.0) {\n                grade", " \
    \       List<string> gradeLetters = new List<string>();\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n    \
    \    }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        foreach (float grade in grades) {\n            if (grade\
    \ > 3.7) {\n                gradeLetters.Add(\"A+\");\n            }\n       \
    \     else if (grade > 3.3) {\n                gradeLetters.Add(\"A\");\n    \
    \        }\n            else if (grade > 3) {\n                gradeLetters.Add(\"\
    A-\");\n            }\n            else if (grade > 2.7) {\n                gradeLetters.Add(\"\
    B+\");\n            }\n            else if (grade > 2.3) {\n                gradeLetters.Add(\"\
    B\");\n            }\n            else if (grade > 2) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (grade > 1.7) {\n                gradeLetters.Add(\"\
    C+\");\n            }\n            else if (grade > 1.3) {\n                gradeLetters.Add(\"\
    C\");\n            }\n            else if (grade > 1) {\n                gradeLetters.Add(\"\
    C-\");\n            }\n            else if (grade > 0.7) {\n                gradeLetters.Add(\"\
    D+\");\n            }\n            else if (grade > 0.3) {\n                gradeLetters.Add(\"\
    D\");\n            }\n            else if (grade > 0) {\n                gradeLetters.Add(\"\
    D-\");\n            }\n            else {\n                gradeLetters.Add(\"\
    E\");\n            }\n        }\n        return gradeLetters;", "        List<string>\
    \ gradeLetters = new List<string>();\n        gradeLetters.Add(\"A+\");\n    \
    \    gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    B+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"C\");\n       \
    \ gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n \
    \       gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"AA\");\n        gradeLetters.Add(\"\
    AB\");\n        gradeLetters.Add(\"AC\");\n        gradeLetters.Add(\"AD\");\n\
    \        gradeLetters.Add(\"AE\");\n        gradeLetters.Add(\"AF\");\n      \
    \  gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"AH\");\n        gradeLetters.Add(\"\
    AI\");\n        gradeLetters.Add(\"AJ\");\n        gradeLetters.Add(\"AK\");\n\
    \        gradeLetters.Add(\"AL\");\n        gradeLetters.Add(\"AM\");\n      \
    \  gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"AO\");\n        gradeLetters.Add(\"\
    AP\");\n        gradeLetters.Add(\"AQ\");\n        gradeLetters.Add(\"AR\");\n\
    \        gradeLetters.Add(\"AS\");\n        gradeLetters.Add(\"AT\");\n      \
    \  gradeLetters.Add(\"AU\");\n", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add", "        List<string> gradeLetters = new List<string>();\n\
    \        foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float difference = average - grades.Min();\n  \
    \      float difference2 = average - grades.Max();\n        float difference3\
    \ = average - grades.Average();\n        float difference4 = average - grades.Sum();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"A\");\n       \
    \ gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    D-\");\n        gradeLetters.Add(\"E\");\n        if (difference < 0.0f) {\n \
    \           gradeLetters.Add(\"E\");\n        }\n        if (difference2 < 0.0f)\
    \ {\n            gradeLetters.Add(\"E\");\n        }\n        if (difference3\
    \ < 0.0f) {\n            gradeLetters.Add(\"E\");\n        }\n        if (difference4\
    \ < 0.0f) {\n            gradeLetters.Add(\"E\");\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n \
    \       gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0) {\n                difference = difference * -1;\n        \
    \    }\n            float percent = difference / average;\n            gradeLetters.Add(String.Format(\"\
    {0}{1}\", Math.Round(percent * 100, 2), gradeLetters[gradeLetters.Count - 1]));\n\
    \        }\n        return gradeLetters;", "        // Your code goes here\n \
    \       List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n \
    \       gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");", "        //\
    \ Your code goes here\n        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");", "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        ", "        List<string> gradeLetters = new List<string>();\n \
    \       gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n\
    \        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n      \
    \  gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"\
    D+\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n\
    \        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float difference = average - grades.Last();\n\
    \        float gradeDifference = difference / average;\n        gradeLetters.Add(\"\
    D-\");\n        if (gradeDifference > -0.7f && gradeDifference < -0.1f) {\n  \
    \          gradeLetters.Add(\"D\");\n        }\n        if (gradeDifference >\
    \ -0.1f) {\n            gradeLetters.Add(\"C\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"B\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > -0.1f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > -0.", "        List<string> gradeLetters = new List<string>();\n        foreach\
    \ (float grade in grades) {\n            float gpa = grade;\n            int gradeLetter\
    \ = CalculateGrade(gpa);\n            gradeLetters.Add(CalculateLetterGrade(gradeLetter));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n\
    \        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n       \
    \ gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    C-\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n\
    \        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n       \
    \ gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n  \
    \      gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        ",
  "        List<string> gradeLetters = new List<string>();\n        float average\
    \ = grades.Average();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float averageOfSum\
    \ = sum / grades.Count;\n        foreach (float grade in grades) {\n         \
    \   float gradeDifference = grade - average;\n            float gradeDifferenceOfSum\
    \ = gradeDifference / averageOfSum;\n            float gradeDifferenceOfSumOfGradeDifference\
    \ = gradeDifferenceOfSum * gradeDifference;\n            float gradeDifferenceOfSumOfGradeDifferenceOfSum\
    \ = gradeDifferenceOfSumOfGradeDifference / averageOfSum;\n            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSum * gradeDifferenceOfSum;\n     \
    \       float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSum\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference / averageOfSum;\n\
    \            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSum * gradeDifferenceOfSumOfGradeDifference;\n\
    \            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSum\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ / averageOfSum;\n            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSum\
    \ * gradeDifferenceOfSumOfGradeDifferenceOfSum;\n            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSum\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ / averageOfSum;\n            float gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ = gradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifferenceOfSumOfGradeDifference\
    \ / average", "        List<string> gradeLetters = new List<string>();\n     \
    \   float sum = 0;\n        foreach (float grade in grades) {\n            sum\
    \ += grade;\n        }\n        float average = sum / grades.Count;\n        foreach\
    \ (float grade in grades) {\n            float difference = grade - average;\n\
    \            if (difference < -1.0f) {\n                gradeLetters.Add(\"D-\"\
    );\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    D\");\n            } else if (difference < 1.0f) {\n                gradeLetters.Add(\"\
    D+\");\n            } else if (difference < 2.0f) {\n                gradeLetters.Add(\"\
    D\");\n            } else if (difference < 3.0f) {\n                gradeLetters.Add(\"\
    C-\");\n            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    C\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    C+\");\n            } else if (difference < 6.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (difference < 8.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 10.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.0f) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (difference < 12.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 13.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 14.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 15.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else if (difference < 16.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 17.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 18.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 19.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else if (difference < 20.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 21.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 22.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 23.0f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else if (difference < 24.0f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 25.0f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 26.0f) {\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float gradeSum = 0;\n        foreach\
    \ (float grade in grades) {\n            gradeSum += grade * grade;\n        }\n\
    \        float gradeAverage = gradeSum / grades.Count;\n        float gradeDifference\
    \ = average - gradeAverage;\n        float gradeDifferenceSquared = gradeDifference\
    \ * gradeDifference;\n        float gradeVariance = gradeDifferenceSquared / (grades.Count\
    \ - 1);\n        float gradeStandardDeviation = Math.Sqrt(gradeVariance);\n  \
    \      float gradeStandardError = gradeStandardDeviation / Math.Sqrt(grades.Count);\n\
    \        float gradeSkewness = gradeDifference / gradeStandardError;\n       \
    \ float gradeKurtosis = gradeDifference / gradeStandardDeviation;\n        float\
    \ gradeSkewnessP = gradeSkewness * gradeSkewness;\n        float gradeKurtosisP\
    \ = gradeKurtosis * gradeKurtosis;\n        float gradeSkewnessQ = gradeSkewnessP\
    \ + gradeKurtosisP;\n        float gradeKurtosisQ = gradeSkewnessQ - gradeKurtosisP;\n\
    \        float gradeSkewnessR = gradeSkewnessQ / grades.Count;\n        float\
    \ gradeKurtosisR = gradeKurtosisQ / grades.Count;\n        float gradeSkewnessS\
    \ = gradeSkewnessR * gradeSkewnessR;\n        float gradeKurtosisS = gradeKurtosisR\
    \ * gradeKurtosisR;\n        float gradeSkewnessT = gradeSkewnessS + gradeKurtosisS;\n\
    \        float gradeKurtosisT = gradeSkewnessT - gradeKurtosisS;\n        float\
    \ gradeSkewnessU = gradeSkewnessT / grades.Count;\n        float gradeKurtosisU\
    \ = gradeKurtosisT / grades.Count;\n        float gradeSkewnessV = gradeSkewnessU\
    \ * gradeSkewnessU;\n        float gradeKurtosisV = gradeKurtosisU * gradeKurtosisU;\n\
    \        float ", "        List<string> gradeLetters = new List<string>();\n \
    \       gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A-\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n\
    \        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n      \
    \  gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"\
    D+\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n\
    \        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        gradeLetters.Add(\"A+\");\n    \
    \    gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float sumOfSquares = 0;\n        foreach\
    \ (float grade in grades) {\n            sumOfSquares += Math.Pow(grade - average,\
    \ 2);\n        }\n        float variance = sumOfSquares / grades.Count - average*average;\n\
    \        float standardDeviation = Math.Sqrt(variance);\n        float standardDeviationOfGrades\
    \ = standardDeviation / grades.Count;\n        float gradeVariance = standardDeviationOfGrades\
    \ / Math.Pow(grades.Count, 2);\n        float gradeVarianceOfGrades = gradeVariance\
    \ / grades.Count;\n        float gradeStandardDeviation = Math.Sqrt(gradeVarianceOfGrades);\n\
    \        float gradeStandardDeviationOfGrades = gradeStandardDeviation / grades.Count;\n\
    \        float gradeAverage = average / grades.Count;\n        float gradeAverageOfGrades\
    \ = gradeAverage / grades.Count;\n        float gradeSumOfSquares = 0;\n     \
    \   foreach (float grade in grades) {\n            gradeSumOfSquares += Math.Pow(grade\
    \ - gradeAverage, 2);\n        }\n        float gradeVarianceOfGradesSquared =\
    \ gradeSumOfSquares / grades.Count;\n        float gradeVarianceOfGradesSquaredOfGrades\
    \ = gradeVarianceOfGradesSquared / grades.Count;\n        float gradeStandardDeviationOfGradesSquared\
    \ = gradeStandardDeviationOfGrades / grades.Count;\n        float gradeStandardDeviationOfGradesSquaredOfGrades\
    \ = gradeStandardDeviationOfGradesSquared / grades.Count;\n        float gradeStandardDeviationOfGradesSquaredOfGradesOfGrades\
    \ = gradeStandardDeviationOfGradesSquaredOfGrades / grades.Count;\n        float\
    \ gradeStandardDeviationOfGradesSquaredOfGradesOfGradesOfGrades = gradeStandardDeviationOfGradesSquaredOfGradesOfGrades\
    \ / grades.Count;\n        float gradeStandardDeviationOfGradesSquaredOfGradesOfGradesOfGradesOfGrades\
    \ = gradeStandardDeviationOfGradesSquaredOfGradesOfGradesOfGrades / grades.Count;\n",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0.0f) {\n                gradeLetters.Add(\"D-\");\n         \
    \   } else if (difference < 0.7f) {\n                gradeLetters.Add(\"D\");\n\
    \            } else if (difference < 1.3f) {\n                gradeLetters.Add(\"\
    C-\");\n            } else if (difference < 1.7f) {\n                gradeLetters.Add(\"\
    C\");\n            } else if (difference < 2f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.3f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 2f) {\n                gradeLetters.Add(\"\
    A-\");\n            } else if (difference < 2.7f) {\n                gradeLetters.Add(\"\
    A\");\n            } else if (difference < 3f) {\n                gradeLetters.Add(\"\
    A+\");\n            } else {\n                gradeLetters.Add(\"E\");\n     \
    \       }\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float averageOfSquares = sum * sum;\n        float\
    \ averageOfSquaresOfGrades = grades.Sum(grade => grade * grade);\n        float\
    \ averageOfSquaresOfGradesOfGrades = grades.Sum(grade => grade * grade);\n   \
    \     float averageOfSquaresOfGradesOfGradesOfGrades = grades.Sum(grade => grade\
    \ * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGrades =\
    \ grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(grade => grade * grade);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOf",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        gradeLetters.Add(\"\
    E\");\n        if (average > 3.5f) {\n            gradeLetters.Add(\"D-\");\n\
    \        } else if (average > 2.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 2.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 2.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 1.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 1.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 1.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 0.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 0.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > 0.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -0.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -0.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -1.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -2.0f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -2.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -3.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -3.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -4.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -4.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -5.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -5.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -6.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -6.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -7.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -7.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -8.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -8.7f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -9.3f) {\n            gradeLetters.Add(\"B-\");\n\
    \        } else if (average > -9.7f", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference > -0.001 && difference < 0.001) {\n \
    \               gradeLetters.Add(\"A+\");\n            } else if (difference >\
    \ 0.001 && difference < -0.001) {\n                gradeLetters.Add(\"A-\");\n\
    \            } else if (difference > -0.001 && difference < 0.0001) {\n      \
    \          gradeLetters.Add(\"B+\");\n            } else if (difference > 0.001\
    \ && difference < -0.0001) {\n                gradeLetters.Add(\"B-\");\n    \
    \        } else if (difference > -0.0001 && difference < 0.00001) {\n        \
    \        gradeLetters.Add(\"C+\");\n            } else if (difference > 0.00001\
    \ && difference < -0.0001) {\n                gradeLetters.Add(\"C\");\n     \
    \       } else if (difference > -0.0001 && difference < -0.00001) {\n        \
    \        gradeLetters.Add(\"C-\");\n            } else if (difference > -0.00001\
    \ && difference < 0.000001) {\n                gradeLetters.Add(\"D+\");\n   \
    \         } else if (difference > 0.00001 && difference < -0.00001) {\n      \
    \          gradeLetters.Add(\"D\");\n            } else if (difference > -0.00001\
    \ && difference < -0.000001) {\n                gradeLetters.Add(\"D-\");\n  \
    \          } else if (difference > -0.000001 && difference < 0.0000001) {\n  \
    \              gradeLetters.Add(\"E\");\n            }\n        }\n        return\
    \ gradeLetters;", "        List<string> gradeLetters = new List<string>();\n \
    \       foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C\");\n \
    \       gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    D+\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n \
    \       gradeLetters.Add(\"F-\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    G+\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"H-\");\n\
    \        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"I+\");\n       \
    \ gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"J-\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"K+\");\n        gradeLetters.Add(\"L\");\n \
    \       gradeLetters.Add(\"L+\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    M+\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"N+\");\n\
    \        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"O+\");\n       \
    \ gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"P+\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"Q+\");\n        gradeLetters.Add(\"R\");\n \
    \       gradeLetters.Add(\"R+\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    S+\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"T+\");\n\
    \        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"U+\");\n       \
    \ gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"V+\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"W+\");\n        gradeLetters.Add(\"X\");\n \
    \       gradeLetters.Add(\"X+\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Y+\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"Z+\");\n\
    \        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n       \
    \ gradeLetters.Add(\"B\");\n", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    C-\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"A-\");\n       \
    \ gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    B+\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n       \
    \ gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageSquared\
    \ = average * average;\n        float averageRoot = Convert.ToSingle(Math.Sqrt(averageSquared));\n\
    \        float averageRootSquared = Convert.ToSingle(Math.Sqrt(averageRoot));\n\
    \        float averageRootCubed = Convert.ToSingle(Math.Ceiling(averageRoot));\n\
    \        float averageRootCubedSquared = Convert.ToSingle(Math.Ceiling(averageRootSquared));\n\
    \        float averageRootCubedCubed = Convert.ToSingle(Math.Ceiling(averageRootCubed));\n\
    \        float averageRootCubedCubedSquared = Convert.ToSingle(Math.Ceiling(averageRootCubedSquared));\n\
    \        float averageRootCubedCubedCubed = Convert.ToSingle(Math.Ceiling(averageRootCubedCubed));\n\
    \        float averageRootCubedCubedCubedSquared = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedSquared));\n\
    \        float averageRootCubedCubedCubedCubed = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedCubed));\n\
    \        float averageRootCubedCubedCubedCubedSquared = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedCubedSquared));\n\
    \        float averageRootCubedCubedCubedCubedCubed = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedCubedCubed));\n\
    \        float averageRootCubedCubedCubedCubedCubedSquared = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedCubedCubedSquared));\n\
    \        float averageRootCubedCubedCubedCubedCubedCubed = Convert.ToSingle(Math.Ceiling(averageRootCubedCubedCubedCubedCubed));\n\
    \        float ", "        List<string> gradeLetters = new List<string>();\n \
    \       foreach (float grade in grades) {\n            float gpa = grade;\n  \
    \          int gradeLetter = 0;\n            if (gpa > 3.7) {\n              \
    \  gradeLetter = gradeLetter | 1;\n            } else if (gpa > 3.3) {\n     \
    \           gradeLetter = gradeLetter | 2;\n            } else if (gpa > 3) {\n\
    \                gradeLetter = gradeLetter | 4;\n            } else if (gpa >\
    \ 2.7) {\n                gradeLetter = gradeLetter | 8;\n            } else if\
    \ (gpa > 2.3) {\n                gradeLetter = gradeLetter | 16;\n           \
    \ } else if (gpa > 2) {\n                gradeLetter = gradeLetter | 32;\n   \
    \         } else if (gpa > 1.7) {\n                gradeLetter = gradeLetter |\
    \ 64;\n            } else if (gpa > 1.3) {\n                gradeLetter = gradeLetter\
    \ | 128;\n            } else if (gpa > 1) {\n                gradeLetter = gradeLetter\
    \ | 256;\n            } else if (gpa > 0.7) {\n                gradeLetter = gradeLetter\
    \ | 512;\n            } else if (gpa > 0) {\n                gradeLetter = gradeLetter\
    \ | 1024;\n            } else {\n                gradeLetter = gradeLetter | 2048;\n\
    \            }\n            gradeLetters.Add(Convert.ToString(gradeLetter));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < 0) {\n   \
    \             difference = -difference;\n            }\n            gradeLetters.Add(String.Format(\"\
    {0}{1}\", Math.Round(difference, 2), GradeLetter(average)));\n        }\n    \
    \    return gradeLetters;", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float gradeDifference =\
    \ grade - average;\n            float gradeDifferenceSquared = gradeDifference\
    \ * gradeDifference;\n            float gradeDifferenceCubed = gradeDifferenceSquared\
    \ * gradeDifferenceSquared;\n            float gradeDifferenceCubedRoot = gradeDifferenceCubed\
    \ * gradeDifferenceCubed * gradeDifferenceCubed;\n            float gradeDifferenceCubedRootSquared\
    \ = gradeDifferenceCubedRoot * gradeDifferenceCubedRoot;\n            float gradeDifferenceCubedRootCubed\
    \ = gradeDifferenceCubedRootSquared * gradeDifferenceCubedRootSquared;\n     \
    \       float gradeDifferenceCubedRootCubedSquared = gradeDifferenceCubedRootCubed\
    \ * gradeDifferenceCubedRootCubed;\n            float gradeDifferenceCubedRootCubedCubed\
    \ = gradeDifferenceCubedRootCubedSquared * gradeDifferenceCubedRootCubedSquared;\n\
    \            float gradeDifferenceCubedRootCubedCubedSquared = gradeDifferenceCubedRootCubedCubed\
    \ * gradeDifferenceCubedRootCubedCubed;\n            float gradeDifferenceCubedRootCubedCubedCubed\
    \ = gradeDifferenceCubedRootCubedCubedSquared * gradeDifferenceCubedRootCubedCubedSquared;\n\
    \            float gradeDifferenceCubedRootCubedCubedCubedSquared = gradeDifferenceCubedRootCubedCubedCubed\
    \ * gradeDifferenceCubedRootCubedCubedCubed;\n            float gradeDifferenceCubedRootCubedCubedCubedCubed\
    \ = gradeDifferenceCubedRootCubedCubedCubedSquared * gradeDifferenceCubedRootCubedCubedCubedSquared;\n\
    \            float gradeDifferenceCubedRootCubedCubedCubedCubedSquared = gradeDifferenceCubedRootCubedCubedCubedCubed\
    \ * gradeDifferenceCubedRootCubedCubedCubedCubed;\n            float gradeDifferenceCubedRootCubedCubedCubedCubedCubed\
    \ = gradeDifference", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < -3.7f || difference > 3.7f) {\n   \
    \             gradeLetters.Add(\"D-\");\n            } else if (difference < -3.3f\
    \ || difference > 3.3f) {\n                gradeLetters.Add(\"C-\");\n       \
    \     } else if (difference < -3.0f || difference > 3.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.7f || difference > 2.7f) {\n  \
    \              gradeLetters.Add(\"B-\");\n            } else if (difference <\
    \ -2.3f || difference > 2.3f) {\n                gradeLetters.Add(\"B-\");\n \
    \           } else if (difference < -2.0f || difference > 2.0f) {\n          \
    \      gradeLetters.Add(\"B-\");\n            } else if (difference < -1.7f ||\
    \ difference > 1.7f) {\n                gradeLetters.Add(\"B-\");\n          \
    \  } else if (difference < -1.3f || difference > 1.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.0f || difference > 1.0f) {\n  \
    \              gradeLetters.Add(\"B-\");\n            } else if (difference <\
    \ -0.7f || difference > 0.7f) {\n                gradeLetters.Add(\"B-\");\n \
    \           } else if (difference < -0.0f || difference > 0.0f) {\n          \
    \      gradeLetters.Add(\"B-\");\n            } else if (difference < 0.0f) {\n\
    \                gradeLetters.Add(\"B-\");\n            } else if (difference\
    \ < 0.7f) {\n                gradeLetters.Add(\"B-\");\n            } else if\
    \ (difference < 1.0f) {\n                gradeLetters.Add(\"B-\");\n         \
    \   } else if (difference < 1.7f) {\n                gradeLetters.Add(\"B-\");\n\
    \            } else if (difference < 2.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference ", "        List<string> gradeLetters\
    \ = new List<string>();\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n\
    \        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n       \
    \ gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    C-\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n\
    \        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n       \
    \ gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"AA\");\n        gradeLetters.Add(\"\
    AB\");\n        gradeLetters.Add(\"AC\");\n        gradeLetters.Add(\"AD\");\n\
    \        gradeLetters.Add(\"AE\");\n        gradeLetters.Add(\"AF\");\n      \
    \  gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"AH\");\n        gradeLetters.Add(\"\
    AI\");\n        gradeLetters.Add(\"AJ\");\n        gradeLetters.Add(\"AK\");\n\
    \        gradeLetters.Add(\"AL\");\n        gradeLetters.Add(\"AM\");\n      \
    \  gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"AO\");\n        gradeLetters.Add(\"\
    AP\");\n        gradeLetters.Add(\"AQ\");\n        gradeLetters.Add(\"AR\");\n\
    \        gradeLetters.Add(\"AS\");\n        gradeLetters.Add(\"AT\");\n      \
    \  gradeLetters.Add(\"AU\");\n", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float difference = average - grades.First();\n        float differenceSquare\
    \ = difference * difference;\n        float gpa = grades.First();\n        float\
    \ gpaSquare = gpa * gpa;\n        float gpaDifference = gpaSquare - differenceSquare;\n\
    \        float gpaDifferenceSquare = gpaDifference * gpaDifference;\n        float\
    \ gpaSum = gpaSquare - gpaDifferenceSquare;\n        float gpaSumSquare = gpaSum\
    \ * gpaSum;\n        float gpaSumSquareRoot = Math.Sqrt(gpaSumSquare);\n     \
    \   float gpaSumSquareRootSquare = Math.Sqrt(gpaSumSquareRoot);\n        float\
    \ gpaSumSquareRootCubed = Math.Cubed(gpaSumSquareRoot);\n        float gpaSumSquareRootCubedSquare\
    \ = Math.Cubed(gpaSumSquareRootCubed);\n        float gpaSumSquareRootCubedSquareRoot\
    \ = Math.Cubed(gpaSumSquareRootCubedSquare);\n        float gpaSumSquareRootCubedSquareRootSquare\
    \ = Math.Cubed(gpaSumSquareRootCubedSquareRoot);\n        float gpaSumSquareRootCubedSquareRootCubed\
    \ = Math.Cubed(gpaSumSquareRootCubedSquareRoot);\n        float gpaSumSquareRootCubedSquareRootCubedSquare\
    \ = Math.Cubed(gpaSumSquareRootCubedSquareRootCubed);\n        float gpaSumSquareRootCubedSquareRootCubedSquareRoot\
    \ = Math.Cubed(gpaSumSquareRootCubedSquareRootCubedSquare);\n        float gpaSumSquareRootCubedSquareRootCubedSquareRootCubed\
    \ = Math.Cubed(gpaSumSquareRootCubedSquareRootCubedSquareRoot);\n        float\
    \ gpaSumSquareRootCubedSquareRootCubedSquareRootCubedSquare = Math.Cubed(gpaSumSquareRootCubedSquareRootCubedSquareRootCubed);\n\
    \        float gpaSumSquareRootCubedSquareRootCubedSquareRootCubedSquareRoot =\
    \ Math.Cubed(gpaSumSquareRootCubedSquareRootCub", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float averageOfSquares = sum * sum;\n        float\
    \ averageOfSquaresOfDifferences = averageOfSquares - grades.Sum();\n        float\
    \ averageOfSquaresOfDifferenceSquares = averageOfSquaresOfDifferences * averageOfSquaresOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferences = averageOfSquaresOfDifferenceSquares\
    \ - grades.Sum() * grades.Sum();\n        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences;\n        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences;\n        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaresOfDifferences * averageOfSquaresOfDifferenceSquaresOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSquaresOfDifferenceSqu",
  "        List<string> letterGrades = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0) {\n                difference = difference * -1;\n        \
    \    }\n            float percentage = (difference / average) * 100;\n       \
    \     string letterGrade = String.Empty;\n            if (percentage > 90) {\n\
    \                letterGrade = \"D+\";\n            }\n            else if (percentage\
    \ > 80) {\n                letterGrade = \"D\";\n            }\n            else\
    \ if (percentage > 70) {\n                letterGrade = \"C-\";\n            }\n\
    \            else if (percentage > 60) {\n                letterGrade = \"C\"\
    ;\n            }\n            else if (percentage > 50) {\n                letterGrade\
    \ = \"B-\";\n            }\n            else if (percentage > 40) {\n        \
    \        letterGrade = \"B\";\n            }\n            else if (percentage\
    \ > 30) {\n                letterGrade = \"A-\";\n            }\n            else\
    \ if (percentage > 20) {\n                letterGrade = \"A\";\n            }\n\
    \            else if (percentage > 10) {\n                letterGrade = \"A+\"\
    ;\n            }\n            else if (percentage > 0) {\n                letterGrade\
    \ = \"A\";\n            }\n            letterGrades.Add(letterGrade);\n      \
    \  }\n        return letterGrades;", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        float difference = average - grades.Last();\n        float gradeDifference\
    \ = difference / average;\n        float gradeDifferenceAbs = Math.Abs(gradeDifference);\n\
    \        float gradeDifferenceSign = Math.Sign(gradeDifference);\n        float\
    \ gradeDifferenceFloor = Math.Floor(gradeDifference);\n        float gradeDifferenceCeil\
    \ = Math.Ceiling(gradeDifference);\n        float gradeDifferenceRound = Math.Round(gradeDifference);\n\
    \        gradeLetters.Add(grades.Count.ToString());\n        gradeLetters.Add(\"\
    E\");\n        if (gradeDifferenceAbs == 0) {\n            gradeLetters.Add(\"\
    D\");\n        }\n        else if (gradeDifferenceAbs < 0) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        else if (gradeDifferenceAbs > 0) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == 1) {\n            gradeLetters.Add(\"\
    D\");\n        }\n        else if (gradeDifferenceAbs == -1) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        else if (gradeDifferenceAbs == 2) {\n            gradeLetters.Add(\"\
    D\");\n        }\n        else if (gradeDifferenceAbs == -2) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        else if (gradeDifferenceAbs == 3) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -3) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        else if (gradeDifferenceAbs == 4) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -4) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == 5) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -5) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == 6) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -6) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == 7) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -7) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == 8) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        else if (gradeDifferenceAbs == -8) {\n            gradeLetters.",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.First();\n        float gradeDifference = difference / average;\n\
    \        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n  \
    \      float gradeDifferenceCubed = (gradeDifference * gradeDifference) * gradeDifference;\n\
    \        float gradeDifferenceCubedSquare = (gradeDifference * gradeDifference)\
    \ * gradeDifference;\n        gradeLetters.Add(\"E\");\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"D-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"D+\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"D\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"C\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B+\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First()\
    \ > average) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (grades.First",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float average2 = average\
    \ * average;\n        float average3 = average2 * average;\n        float average4\
    \ = average3 * average;\n        float average5 = average4 * average;\n      \
    \  float average6 = average5 * average;\n        float average7 = average6 * average;\n\
    \        float average8 = average7 * average;\n        float average9 = average8\
    \ * average;\n        float average10 = average9 * average;\n        float average11\
    \ = average10 * average;\n        float average12 = average11 * average;\n   \
    \     float average13 = average12 * average;\n        float average14 = average13\
    \ * average;\n        float average15 = average14 * average;\n        float average16\
    \ = average15 * average;\n        float average17 = average16 * average;\n   \
    \     float average18 = average17 * average;\n        float average19 = average18\
    \ * average;\n        float average20 = average19 * average;\n        float average21\
    \ = average20 * average;\n        float average22 = average21 * average;\n   \
    \     float average23 = average22 * average;\n        float average24 = average23\
    \ * average;\n        float average25 = average24 * average;\n        float average26\
    \ = average25 * average;\n        float average27 = average26 * average;\n   \
    \     float average28 = average27 * average;\n        float average29 = average28\
    \ * average;\n        float average30 = average29 * average;\n        float average31\
    \ = average30 * average;\n        float average32 = average31 * average;\n   \
    \     float average33 = average32 * average;\n        float average34 = average33\
    \ * average;\n        float average35 = average34 * average;\n        float average36\
    \ = average35 * average;\n        float average37 = average36 * average;\n   \
    \     float average38 = average37 * average;\n        float average39 = average38\
    \ * average;\n        float average40 = average39 * average;\n        float average41\
    \ = average40 * average;\n        float average42 = average41 * average;\n   \
    \     float average43 = average42 * average;\n        float average44 = average43\
    \ * average;\n        float average45 = average44 * average;\n        float average",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0.0f) {\n                difference = 0.0f;\n            }\n \
    \           float percentage = (float)(difference * 100.0f) / average;\n     \
    \       gradeLetters.Add(String.Format(\"{0}{1}\", Math.Round(percentage, 2),\
    \ NumericalLetterGrade.LetterGrade(percentage)));\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.Last();\n        float differenceSquare = difference * difference;\n\
    \        float averageSquare = average * average;\n        float gradeDifference\
    \ = average - 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverage = average + 3.0;\n        float gradeAverageSquare\
    \ = gradeAverage * gradeAverage;\n        float gradeDifferenceSquare = gradeAverage\
    \ - 3.0;\n        float gradeAverageSquare = gradeAverage + 3.0;\n        float\
    \ gradeDifferenceSquare = gradeDifference * gradeDifference;\n        float gradeAverageSquare\
    \ = gradeAverage + 3.0;\n        float gradeDifferenceSquare = gradeDifference\
    \ * gradeDifference;\n        float gradeAverageSquare = gradeAverage + 3.0;\n\
    \        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n  \
    \      float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float gradeDifferenceSquare = gradeDifference * gradeDifference;\n\
    \        float gradeAverageSquare = gradeAverage + 3.0;\n        float gradeDifferenceSquare\
    \ = gradeDifference * gradeDifference;\n        float gradeAverageSquare = gradeAverage\
    \ + 3.0;\n        float grade", "        // Your code goes here\n        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float gpa = average;\n        float gpaSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaSum += grade;\n\
    \        }\n        float gpaAverage = gpaSum / grades.Count;\n        float gpaDifference\
    \ = gpaAverage - gpa;\n        float gpaDifferenceSum = 0;\n        foreach (float\
    \ grade in grades) {\n            gpaDifferenceSum += Math.Abs(grade - gpa);\n\
    \        }\n        float gpaDifferenceAverage = gpaDifferenceSum / grades.Count;\n\
    \        float gpaDifferenceDifference = gpaAverage - gpaDifference;\n       \
    \ float gpaDifferenceDifferenceSum = 0;\n        foreach (float grade in grades)\
    \ {\n            gpaDifferenceDifferenceSum += Math.Abs(grade - gpaDifference);\n\
    \        }\n        float gpaDifferenceDifferenceAverage = gpaDifferenceDifferenceSum\
    \ / grades.Count;\n        float gpaDifferenceDifferenceDifference = gpaAverage\
    \ - gpaDifferenceDifference;\n        float gpaDifferenceDifferenceDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpaDifferenceDifference);\n        }\n        float gpaDifferenceDifferenceDifferenceAverage\
    \ = gpaDifferenceDifferenceDifferenceSum / grades.Count;\n        float gpaDifferenceDifferenceDifferenceDifference\
    \ = gpaAverage - gpaDifferenceDifferenceDifference;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpaDifferenceDifferenceDifference);\n        }\n       \
    \ float gpaDifferenceDifferenceDifferenceDifferenceAverage = gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ / grades.Count;\n        float gpaDifferenceDifferenceDifferenceDifference =\
    \ gpaAverage - gpaDifferenceDifferenceDifferenceDifference;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ = 0;\n        foreach (float grade in grades) {\n            gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ += Math.Abs(grade - gpaDifferenceDifferenceDifferenceDifference);\n        }\n\
    \        float gpaDifferenceDifferenceDifferenceDifferenceAverage = gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ / grades.Count;\n        float gpaDifferenceDifferenceDifferenceDifference =\
    \ gpaAverage - gpaDifferenceDifferenceDifferenceDifference;\n        float gpaDifferenceDifferenceDifferenceDifferenceSum\
    \ = 0;", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            float difference = grade - average;\n      \
    \      if (difference < -0.25f) {\n                gradeLetters.Add(\"A-\");\n\
    \            } else if (difference < -0.1f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.1f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.25f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.4f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.25f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (", "        List<string> gradeLetters = new List<string>();\n\
    \        foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   float gpa = grade;\n            int gradeLetter;\n            if (gpa < 3.7)\
    \ {\n                gradeLetter = 'A';\n            } else if (gpa < 3.3) {\n\
    \                gradeLetter = 'A-';\n            } else if (gpa < 3) {\n    \
    \            gradeLetter = 'B+';\n            } else if (gpa < 2.7) {\n      \
    \          gradeLetter = 'B';\n            } else if (gpa < 2.3) {\n         \
    \       gradeLetter = 'B-';\n            } else if (gpa < 2) {\n             \
    \   gradeLetter = 'C+';\n            } else if (gpa < 1.7) {\n               \
    \ gradeLetter = 'C';\n            } else if (gpa < 1.3) {\n                gradeLetter\
    \ = 'C-';\n            } else if (gpa < 1) {\n                gradeLetter = 'D+';\n\
    \            } else if (gpa < 0.7) {\n                gradeLetter = 'D';\n   \
    \         } else if (gpa < 0.0) {\n                gradeLetter = 'D-';\n     \
    \       } else {\n                gradeLetter = 'E';\n            }\n        \
    \    gradeLetters.Add(gradeLetter);\n        }\n        return gradeLetters;",
  "        // Your code goes here\n        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float average2 = average * average;\n        float average3 = average2\
    \ * average;\n        float average4 = average3 * average;\n        float average5\
    \ = average4 * average;\n        float average6 = average5 * average;\n      \
    \  float average7 = average6 * average;\n        float average8 = average7 * average;\n\
    \        float average9 = average8 * average;\n        float average10 = average9\
    \ * average;\n        float average11 = average10 * average;\n        float average12\
    \ = average11 * average;\n        float average13 = average12 * average;\n   \
    \     float average14 = average13 * average;\n        float average15 = average14\
    \ * average;\n        float average16 = average15 * average;\n        float average17\
    \ = average16 * average;\n        float average18 = average17 * average;\n   \
    \     float average19 = average18 * average;\n        float average20 = average19\
    \ * average;\n        float average21 = average20 * average;\n        float average22\
    \ = average21 * average;\n        float average23 = average22 * average;\n   \
    \     float average24 = average23 * average;\n        float average25 = average24\
    \ * average;\n        float average26 = average25 * average;\n        float average27\
    \ = average26 * average;\n        float average28 = average27 * average;\n   \
    \     float average29 = average28 * average;\n        float average30 = average29\
    \ * average;\n        float average31 = average30 * average;\n        float average32\
    \ = average31 * average;\n        float average33 = average32 * average;\n   \
    \     float average34 = average33 * average;\n        float average35 = average34\
    \ * average;\n        float average36 = average35 * average;\n        float average37\
    \ = average36 * average;\n        float average38 = average37 * average;\n   \
    \     float average39 = average38 * average;\n        float average40 = average39\
    \ * average;\n        float average41 = average40 * average;\n        float average42\
    \ = average41 * average;\n        float average43 = average42 * average;\n   \
    \     float average44 = average43 * average;\n        float average45 = average44\
    \ * ", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            float difference = grade - average;\n      \
    \      if (difference < -3.7) {\n                gradeLetters.Add(\"A-\");\n \
    \           } else if (difference < -3.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.7) {\n                gradeLetters.Add(\"\
    B-\");\n", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            float difference = grade - average;\n      \
    \      if (difference < 0) {\n                difference = difference * -1;\n\
    \            }\n            gradeLetters.Add(String.Format(\"{0}{1}\", Math.Round(difference,\
    \ 2), GradeLetter(average)));\n        }\n        return gradeLetters;", "   \
    \     List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float variance = 0;\n\
    \        foreach (float grade in grades) {\n            variance += Math.Pow(grade\
    \ - average, 2);\n        }\n        float standardDeviation = Math.Sqrt(variance\
    \ / grades.Count);\n        float standardDeviationFactor = standardDeviation\
    \ / average;\n        float gradeVariance = standardDeviationFactor * average;\n\
    \        float gradeStandardDeviation = Math.Sqrt(gradeVariance);\n        float\
    \ gradeStandardDeviationFactor = gradeStandardDeviation / average;\n        float\
    \ gradeSum = 0;\n        foreach (float grade in grades) {\n            gradeSum\
    \ += grade;\n        }\n        float gradeAverage = gradeSum / grades.Count;\n\
    \        float gradeVariance = gradeAverage - average;\n        float gradeStandardDeviation\
    \ = Math.Sqrt(gradeVariance);\n        float gradeStandardDeviationFactor = gradeStandardDeviation\
    \ / average;\n        float gradeSum = 0;\n        foreach (float grade in grades)\
    \ {\n            gradeSum += grade;\n        }\n        float gradeAverage = gradeSum\
    \ / grades.Count;\n        float gradeVariance = gradeAverage - average;\n   \
    \     float gradeStandardDeviation = Math.Sqrt(gradeVariance);\n        float\
    \ gradeStandardDeviationFactor = gradeStandardDeviation / average;\n        gradeLetters.Add(\"\
    E\");\n        if (grades.Count <= 1) {\n            gradeLetters.Add(\"F\");\n\
    \        }\n        else if (average >= 4.0) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        else if (average >= 3.7) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        else if (average >= 3.3) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        else if (average >= 3.0) {\n            gradeLetters.Add(\"\
    B+\");\n        }\n        else if (average >= 2.7) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        else if (average >= 2.3) {\n            gradeLetters.Add(\"\
    B-\");\n        }\n        else if (average >= 2.0) {\n            gradeLetters.Add(\"\
    C+\");\n        }\n        else if (average >= 1.7) {\n            gradeLetters.Add(\"\
    C\");\n        }\n        else if (average >= 1.3) {\n            gradeLetters.Add(\"\
    C-\");\n        }\n        else if (average >= ", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float difference = average - grades.Min();\n  \
    \      float differenceSquared = difference * difference;\n        float variance\
    \ = differenceSquared / grades.Count - average;\n        float standardDeviation\
    \ = Math.Sqrt(variance);\n        float standardDeviationPercentage = standardDeviation\
    \ / average;\n        float standardDeviationPercentageSquared = standardDeviationPercentage\
    \ * standardDeviationPercentage;\n        float standardDeviationPercentagePercentage\
    \ = standardDeviationPercentageSquared / Math.Sqrt(grades.Count);\n        float\
    \ standardDeviationPercentagePercentageSquared = standardDeviationPercentagePercentage\
    \ * standardDeviationPercentagePercentage;\n        float standardDeviationPercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentageSquared / Math.Sqrt(grades.Count * grades.Count);\n\
    \        float standardDeviationPercentagePercentagePercentage = standardDeviationPercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentage;\n        float standardDeviationPercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentage * standardDeviationPercentagePercentagePercentagePercentage;\n\
    \        float standardDeviationPercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentage * standardDeviationPercentagePercentagePercentagePercentagePercentage;\n\
    \        float standardDeviationPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentagePercentagePercentage;\n   \
    \     float standardDeviationPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ * standardDeviationPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < -1.0f) {\n                gradeLetters.Add(\"D-\");\n        \
    \    } else if (difference < 0.0f) {\n                gradeLetters.Add(\"D\");\n\
    \            } else if (difference < 1.0f) {\n                gradeLetters.Add(\"\
    D+\");\n            } else if (difference < 2.0f) {\n                gradeLetters.Add(\"\
    D\");\n            } else if (difference < 3.0f) {\n                gradeLetters.Add(\"\
    C-\");\n            } else if (difference < 4.0f) {\n                gradeLetters.Add(\"\
    C\");\n            } else if (difference < 5.0f) {\n                gradeLetters.Add(\"\
    C+\");\n            } else if (difference < 6.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (difference < 8.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 10.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 12.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 13.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 14.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 15.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 16.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 17.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 18.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 19.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 20.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 21.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 22.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 23.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 24.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 25.0f) {\n                gradeLetters.Add(\"\
    B\");\n            } else if (difference < 26.0f) {\n                gradeLetters.",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gradeSum = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSum += Math.Pow((grade\
    \ - average), 2);\n        }\n        float averageSquare = gradeSum / grades.Count;\n\
    \        float gradeSumSquare = 0;\n        foreach (float grade in grades) {\n\
    \            gradeSumSquare += Math.Pow(grade - average, 2);\n        }\n    \
    \    float averageSquareRoot = gradeSumSquare / grades.Count;\n        float gradeSumSquareRoot\
    \ = 0;\n        foreach (float grade in grades) {\n            gradeSumSquareRoot\
    \ += Math.Pow(Math.Sqrt(grade) - averageSquareRoot, 2);\n        }\n        float\
    \ averageSquareRootRoot = gradeSumSquareRoot / grades.Count;\n        float gradeSumSquareRootRoot\
    \ = 0;\n        foreach (float grade in grades) {\n            gradeSumSquareRootRoot\
    \ += Math.Pow(Math.Sqrt(Math.Pow(grade, 2) - averageSquareRootRoot), 2);\n   \
    \     }\n        float averageSquareRootRootRoot = gradeSumSquareRootRoot / grades.Count;\n\
    \        float gradeSumSquareRootRootRoot = 0;\n        foreach (float grade in\
    \ grades) {\n            gradeSumSquareRootRootRoot += Math.Pow(Math.Sqrt(Math.Pow(Math.Pow(grade,\
    \ 2) - averageSquareRootRoot), 2), 2);\n        }\n        float averageSquareRootRootRoot\
    \ = gradeSumSquareRootRootRoot / grades.Count;\n        float gradeSumSquareRootRootRoot\
    \ = 0;\n        foreach (float grade in grades) {\n            gradeSumSquareRootRootRoot\
    \ += Math.Pow(Math.Sqrt(Math.Pow(Math.Pow(grade, 2) - averageSquareRootRootRoot),\
    \ 2), 2);\n        }\n        float averageSquareRootRootRootRoot = gradeSumSquareRootRootRoot\
    \ / grades.Count;\n        float gradeSumSquareRootRootRoot = 0;\n        foreach\
    \ (float grade in grades) {\n            gradeSumSquareRootRootRoot += Math.Pow(Math.Sqrt(Math.Pow(Math.Pow(Math.Pow(grade,\
    \ 2) - averageSquareRootRootRoot), 2), 2), 2);\n        }\n        float averageSquareRootRootRootRoot\
    \ = gradeSumSquareRootRootRoot / grades.Count;\n        float gradeSumSquareRootRootRoot\
    \ = 0;\n        foreach (float grade in grades) {\n            gradeSumSquareRoot",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0) {\n                difference = difference * -1;\n        \
    \    }\n            float percentage = (difference / average) * 100;\n       \
    \     string letterGrade = Convert.ToString(Math.Round(percentage, 2));\n    \
    \        gradeLetters.Add(letterGrade);\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float difference = grade - average;\n            if\
    \ (difference < 0) {\n                difference = difference * -1;\n        \
    \    }\n            float gradeLetter = difference / average;\n            gradeLetters.Add(String.Format(\"\
    {0}{1}\", gradeLetter, difference % average));\n        }\n        return gradeLetters;",
  "        // Your code goes here\n        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float difference = average - grades.Average();\n        float differencePercentage\
    \ = difference / average;\n        float differencePercentage2 = differencePercentage\
    \ * differencePercentage;\n        float differencePercentage3 = differencePercentage2\
    \ * differencePercentage;\n        float differencePercentage4 = differencePercentage3\
    \ * differencePercentage;\n        float differencePercentage5 = differencePercentage4\
    \ * differencePercentage;\n        float differencePercentage6 = differencePercentage5\
    \ * differencePercentage;\n        float differencePercentage7 = differencePercentage6\
    \ * differencePercentage;\n        float differencePercentage8 = differencePercentage7\
    \ * differencePercentage;\n        float differencePercentage9 = differencePercentage8\
    \ * differencePercentage;\n        float differencePercentage10 = differencePercentage9\
    \ * differencePercentage;\n        float differencePercentage11 = differencePercentage10\
    \ * differencePercentage;\n        float differencePercentage12 = differencePercentage11\
    \ * differencePercentage;\n        float differencePercentage13 = differencePercentage12\
    \ * differencePercentage;\n        float differencePercentage14 = differencePercentage13\
    \ * differencePercentage;\n        float differencePercentage15 = differencePercentage14\
    \ * differencePercentage;\n        float differencePercentage16 = differencePercentage15\
    \ * differencePercentage;\n        float differencePercentage17 = differencePercentage16\
    \ * differencePercentage;\n        float differencePercentage18 = differencePercentage17\
    \ * differencePercentage;\n        float differencePercentage19 = differencePercentage18\
    \ * differencePercentage;\n        float differencePercentage20 = differencePercentage19\
    \ * differencePercentage;\n        float differencePercentage21 = differencePercentage20\
    \ * differencePercentage;\n        float differencePercentage22 = differencePercentage21\
    \ * differencePercentage;\n        float differencePercentage23 = differencePercentage22\
    \ * differencePercentage;\n        float differencePercentage24 = differencePercentage23\
    \ * differencePercentage;\n        float differencePercentage25 = differencePercentage24\
    \ * differencePercentage;\n        float differencePercentage26 = differencePercentage25\
    \ * differencePercentage;\n        float differencePercentage27 = differencePercentage26\
    \ * differencePercentage;\n        float differencePercentage28 = differencePercentage27\
    \ * differencePercentage;\n        float differencePercentage29 = differencePercentage28\
    \ * differencePercentage;\n        float differencePercentage30 = differencePercentage29\
    \ * differencePercentage;\n        float differencePercentage31 = differencePercentage30\
    \ * differencePercentage;\n        float differencePercentage32 = differencePercentage31\
    \ * differencePercentage;\n        float differencePercentage33 = differencePercentage32\
    \ * differencePercentage;\n        float differencePercentage34 = differencePercentage33\
    \ * difference", "        List<string> gradeLetters = new List<string>();\n  \
    \      float sum = 0;\n        foreach (float grade in grades) {\n           \
    \ sum += grade;\n        }\n        float average = sum / grades.Count;\n    \
    \    float difference = average - grades.Last();\n        float differencePercentage\
    \ = difference / average;\n        gradeLetters.Add(\"D-\");\n        if (differencePercentage\
    \ > 0.3f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ > 0.2f) {\n            gradeLetters.Add(\"C-\");\n        }\n        if (differencePercentage\
    \ > 0.1f) {\n            gradeLetters.Add(\"C\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"B\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"A\");\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gpa = average;\n\
    \        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"B\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"C+\");\n\
    \        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D-\");\n      \
    \  gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add", "        List<string>\
    \ gradeLetters = new List<string>();\n        float average = grades.Average();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float averageOfSum = sum / grades.Count;\n\
    \        float difference = average - averageOfSum;\n        float differenceOfSum\
    \ = sum - averageOfSum;\n        float differenceOfSumOfDifference = differenceOfSum\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifference = differenceOfSumOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifference / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifference / grades.Count;\n    \
    \    float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifference / grades.Count;\n\
    \        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ / grades.Count;\n        float differenceOfSumOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference",
  "        List<string> gradeLetters = new List<string>();\n        float average\
    \ = grades.Average();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float averageOfSum\
    \ = sum / grades.Count;\n        float averageOfAverage = average / grades.Count;\n\
    \        float difference = averageOfSum - averageOfAverage;\n        float differenceOfSum\
    \ = sum - averageOfSum;\n        float differenceOfAverage = average - averageOfAverage;\n\
    \        float differenceOfDifference = difference - averageOfAverage;\n     \
    \   float differenceOfDifferenceOfSum = differenceOfSum - sum;\n        float\
    \ differenceOfDifferenceOfAverage = differenceOfAverage - average;\n        float\
    \ differenceOfDifferenceOfDifference = differenceOfDifference - difference;\n\
    \        float differenceOfDifferenceOfDifferenceOfSum = differenceOfDifferenceOfSum\
    \ - differenceOfSum;\n        float differenceOfDifferenceOfDifferenceOfAverage\
    \ = differenceOfDifferenceOfAverage - differenceOfAverage;\n        float differenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifference - differenceOfDifference;\n        float\
    \ differenceOfDifferenceOfDifferenceOfDifferenceOfSum = differenceOfDifferenceOfDifferenceOfSum\
    \ - differenceOfDifferenceOfSum;\n        float differenceOfDifferenceOfDifferenceOfDifferenceOfAverage\
    \ = differenceOfDifferenceOfDifferenceOfAverage - differenceOfDifferenceOfAverage;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifference = differenceOfDifferenceOfDifferenceOfDifference\
    \ - differenceOfDifferenceOfDifference;\n        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSum\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfSum - differenceOfDifferenceOfDifferenceOfSum;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfAverage\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfAverage - differenceOfDifferenceOfDifferenceOfDifferenceOfAverage;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifference - differenceOfDifferenceOfDifferenceOfDifferenceOfDifference;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSum\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSum - differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfSum;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfAverage\
    \ = differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfAverage - differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfAverage;\n\
    \        float differenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F-\");\n \
    \       gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"G+\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"H-\");\n        gradeLetters.Add(\"I\");\n \
    \       gradeLetters.Add(\"I+\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    J-\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"K+\");\n\
    \        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"L+\");\n       \
    \ gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"M-\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"N+\");\n        gradeLetters.Add(\"O\");\n \
    \       gradeLetters.Add(\"O+\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    P+\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"Q+\");\n\
    \        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"R+\");\n       \
    \ gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"S+\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"T-\");\n        gradeLetters.Add(\"U\");\n \
    \       gradeLetters.Add(\"U+\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    V+\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"W+\");\n\
    \        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"X-\");\n       \
    \ gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Y+\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"Z+\");\n        gradeLetters.Add(\"A\");\n \
    \       gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageOfSquares\
    \ = sum * sum;\n        float averageOfSquaresOfDifferences = averageOfSquares\
    \ - grades.Sum() * average;\n        float averageOfSquaresOfSquares, averageOfSquaresOfDifferencesSquares;\n\
    \        averageOfSquaresOfSquares = Math.Sqrt(averageOfSquaresOfDifferences);\n\
    \        averageOfSquaresOfDifferencesSquares = Math.Sqrt(averageOfSquaresOfSquares);\n\
    \        float averageOfDifferences = averageOfSquaresOfDifferences / averageOfSquaresOfSquares;\n\
    \        float averageOfDifferencesSquares = averageOfSquaresOfSquares / averageOfSquaresOfSquares;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferences = averageOfDifferencesSquares\
    \ - averageOfDifferences;\n        float averageOfSquaresOfDifferenceSquaresOfDifferencesSquares,\
    \ averageOfSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferences;\n   \
    \     averageOfSquaresOfDifferenceSquaresOfDifferencesSquares = Math.Sqrt(averageOfSquaresOfDifferencesSquaresOfDifferences);\n\
    \        averageOfSquaresOfDifferencesSquaresOfDifferencesSquares = Math.Sqrt(averageOfSquaresOfDifferencesSquaresOfDifferencesSquares);\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferencesSquaresOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaresOfDifferencesSquares / averageOfSquaresOfDifferencesSquares;\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferencesSquaresOfDifferencesSquares,\
    \ averageOfSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferences;\n\
    \        averageOfSquaresOfDifferenceSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferences\
    \ = Math.Sqrt(averageOfSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferences);\n\
    \        averageOfSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferences\
    \ = Math.Sqrt(averageOfSquaresOfDifferencesSquaresOfDifferencesSquaresOfDifferencesSquares);\n\
    \        float averageOfSquaresOfDifferenceSquaresOfDifferencesSquaresOfDifferencesSquares",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gradesRemaining\
    \ = average;\n        foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade,\
    \ gradesRemaining));\n            gradesRemaining -= grade;\n        }\n     \
    \   return gradeLetters;", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float averageOfSquares = sum * sum;\n        float averageOfSquaresOfDifferences\
    \ = averageOfSquares - grades.Sum();\n        float averageOfSquaresOfDifferenceSquared\
    \ = averageOfSquaresOfDifferences * averageOfSquaresOfDifferences;\n        float\
    \ averageOfSquaresOfDifferenceSquaredOfDifferences = averageOfSquaresOfDifferenceSquared\
    \ - grades.Sum() * grades.Sum();\n        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquared\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferences * averageOfSquaresOfDifferenceSquaredOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquared - grades.Sum() * grades.Sum()\
    \ * grades.Sum();\n        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquared\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferences * averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquared\
    \ - grades.Sum() * grades.Sum() * grades.Sum() * grades.Sum();\n        float\
    \ averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquared\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences;\n\
    \        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquared\
    \ - grades.Sum() * grades.Sum() * grades.Sum() * grades.Sum() * grades.Sum();\n\
    \        float averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquared\
    \ = averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences\
    \ * averageOfSquaresOfDifferenceSquaredOfDifferenceSquaredOfDifferenceSquaredOfDifferences;\n\
    \        ", "        List<string> letterGrades = new List<string>();\n       \
    \ foreach (float grade in grades) {\n            float gpa = grade;\n        \
    \    float gpaSum = 0;\n            int gpaCount = 0;\n            while (gpa\
    \ > 0) {\n                gpaSum += gpa;\n                gpaCount++;\n      \
    \          gpa = gpa / 10;\n            }\n            float gpaAverage = gpaSum\
    \ / gpaCount;\n            float gpaDiff = gpaAverage - grade;\n            float\
    \ gpaDiffPercent = gpaDiff / gpaAverage;\n            float gpaPercent = gpaAverage\
    \ / 10;\n            float gpaPercentDiff = gpaPercent - grade;\n            float\
    \ gpaPercentDiffPercent = gpaPercentDiff / gpaPercent;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent - grade;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent / gpaAverage;\n            float gpaPercentDiffPercentPercent\
    \ = gpaPercentDiffPercent ", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"A\");\n       \
    \ gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    D-\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n \
    \       gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n  \
    \      gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n  \
    \      gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n  \
    \      gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n  \
    \      gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        ", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float gradePercentage = grade / average;\n            gradeLetters.Add(String.Format(\"\
    {0}{1}\", gradePercentage, LetterGrade(gradePercentage)));\n        }\n      \
    \  return gradeLetters;", "        List<string> gradeLetters = new List<string>();\n\
    \        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    C-\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F-\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"G+\");\n\
    \        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"H-\");\n       \
    \ gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"I+\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"J-\");\n        gradeLetters.Add(\"K\");\n \
    \       gradeLetters.Add(\"K+\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    L+\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"M-\");\n\
    \        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"N+\");\n       \
    \ gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"O+\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"P+\");\n        gradeLetters.Add(\"Q\");\n \
    \       gradeLetters.Add(\"Q+\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"\
    R+\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"S-\");\n\
    \        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"T+\");\n       \
    \ gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"U-\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"V+\");\n        gradeLetters.Add(\"W\");\n \
    \       gradeLetters.Add(\"W+\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    X-\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Y+\");\n\
    \        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"Z+\");\n       \
    \ gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n        gradeLetters.Add(\"\
    B\");\n        grade", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference > -1.0f) {\n                gradeLetters.Add((grade\
    \ > average) ? \"A+\" : ((grade < average) ? \"A-\" : ((grade == average) ? \"\
    A\" : (grade < 0) ? \"B+\" : ((grade > 0) ? \"B\" : ((grade < 0) ? \"B-\" : ((grade\
    \ == 0) ? \"B\" : (grade < 0) ? \"C+\" : ((grade > 0) ? \"C\" : ((grade < 0) ?\
    \ \"C-\" : ((grade == 0) ? \"C\" : (grade < 0) ? \"D+\" : ((grade > 0) ? \"D\"\
    \ : ((grade < 0) ? \"D-\" : ((grade == 0) ? \"D\" : (grade < 0) ? \"E\" : \"\"\
    )))))))))));\n            }\n        }\n        return gradeLetters;", "     \
    \   List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageSquare\
    \ = average * average;\n        float averageSquared = averageSquare * average;\n\
    \        float averageSquared2 = averageSquared * average;\n        float averageSquared3\
    \ = averageSquared2 * average;\n        float averageSquared4 = averageSquared3\
    \ * average;\n        float averageSquared5 = averageSquared4 * average;\n   \
    \     float averageSquared6 = averageSquared5 * average;\n        float averageSquared7\
    \ = averageSquared6 * average;\n        float averageSquared8 = averageSquared7\
    \ * average;\n        float averageSquared9 = averageSquared8 * average;\n   \
    \     float averageSquared10 = averageSquared9 * average;\n        float averageSquared11\
    \ = averageSquared10 * average;\n        float averageSquared12 = averageSquared11\
    \ * average;\n        float averageSquared13 = averageSquared12 * average;\n \
    \       float averageSquared14 = averageSquared13 * average;\n        float averageSquared15\
    \ = averageSquared14 * average;\n        float averageSquared16 = averageSquared15\
    \ * average;\n        float averageSquared17 = averageSquared16 * average;\n \
    \       float averageSquared18 = averageSquared17 * average;\n        float averageSquared19\
    \ = averageSquared18 * average;\n        float averageSquared20 = averageSquared19\
    \ * average;\n        float averageSquared21 = averageSquared20 * average;\n \
    \       float averageSquared22 = averageSquared21 * average;\n        float averageSquared23\
    \ = averageSquared22 * average;\n        float averageSquared24 = averageSquared23\
    \ * average;\n        float averageSquared25 = averageSquared24 * average;\n \
    \       float averageSquared26 = averageSquared25 * average;\n        float averageSquared27\
    \ = averageSquared26 * average;\n        float averageSquared28 = averageSquared27\
    \ * average;\n        float averageSquared29 = averageSquared28 * average;\n \
    \       float averageSquared30 = averageSquared29 * average;\n        float averageSquared31\
    \ = averageSquared30 * average;\n        float averageSquared32 = averageSquared31\
    \ * average;\n        ", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      gradeLetters.Add(\"E\");\n        if (average < 3.0) {\n            gradeLetters.Add(\"\
    D-\");\n        } else if (average < 3.7) {\n            gradeLetters.Add(\"D\"\
    );\n        } else if (average < 4.0) {\n            gradeLetters.Add(\"C-\");\n\
    \        } else if (average < 4.7) {\n            gradeLetters.Add(\"C\");\n \
    \       } else if (average < 5.0) {\n            gradeLetters.Add(\"B-\");\n \
    \       } else if (average < 5.7) {\n            gradeLetters.Add(\"B\");\n  \
    \      } else if (average < 6.0) {\n            gradeLetters.Add(\"A-\");\n  \
    \      } else if (average < 6.7) {\n            gradeLetters.Add(\"A\");\n   \
    \     } else if (average < 7.0) {\n            gradeLetters.Add(\"A+\");\n   \
    \     } else if (average < 7.7) {\n            gradeLetters.Add(\"A\");\n    \
    \    } else if (average < 8.0) {\n            gradeLetters.Add(\"A+\");\n    \
    \    } else if (average < 8.7) {\n            gradeLetters.Add(\"A\");\n     \
    \   } else if (average < 9.0) {\n            gradeLetters.Add(\"A+\");\n     \
    \   } else if (average < 9.7) {\n            gradeLetters.Add(\"A\");\n      \
    \  } else if (average < 10.0) {\n            gradeLetters.Add(\"A+\");\n     \
    \   } else if (average < 10.7) {\n            gradeLetters.Add(\"A\");\n     \
    \   } else if (average < 11.0) {\n            gradeLetters.Add(\"A+\");\n    \
    \    } else if (average < 11.7) {\n            gradeLetters.Add(\"A\");\n    \
    \    } else if (average < 12.0) {\n            gradeLetters.Add(\"A+\");\n   \
    \     } else if (average < 12.7) {\n            gradeLetters.Add(\"A\");\n   \
    \     } else if (average < 13.0) {\n            gradeLetters.Add(\"A+\");\n  \
    \      } else if (average < 13.7) {\n            gradeLetters.Add(\"A\");\n  \
    \      } else if (average < 14.0) {\n            gradeLetters.Add(\"A+\");\n \
    \       } else if (average < 14.7) {\n            gradeLetters.Add(\"A\");\n \
    \       } else if (average < 15.0) {\n            gradeLetters.Add(\"A+\");\n\
    \        } else if (average < 15.7) {\n            gradeLetters.Add(\"A\");\n\
    \        } else if (average < 16.0) {\n            gradeLetters.Add(\"A+\");\n\
    \        } else if (average < 16.7) {\n            gradeLetters.Add(\"A\");\n\
    \        } else if (average < 17.0) {\n            gradeLetters.Add(\"A+\");",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.Last();\n        float differencePercentage = difference /\
    \ average;\n        gradeLetters.Add(\"D-\");\n        if (differencePercentage\
    \ > 0.3f) {\n            gradeLetters.Add(\"D\");\n        }\n        if (differencePercentage\
    \ > 0.2f) {\n            gradeLetters.Add(\"C-\");\n        }\n        if (differencePercentage\
    \ > 0.1f) {\n            gradeLetters.Add(\"C\");\n        }\n        if (differencePercentage\
    \ > 0.0f) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (differencePercentage\
    \ > 0.005f) {\n            gradeLetters.Add(\"B\");\n        }\n        if (differencePercentage\
    \ > 0.002f) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (differencePercentage\
    \ > 0.001f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage\
    \ > 0.0001f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (differencePercentage\
    \ > 0.00001f) {\n            gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage\
    \ > 0.000001f) {\n            gradeLetters.Add(\"A+\");\n        }\n        if\
    \ (differencePercentage > 0.0000001f) {\n            gradeLetters.Add(\"A\");\n\
    \        }\n        if (differencePercentage > 0.00000001f) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        if (differencePercentage > 0.00000002f) {\n       \
    \     gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage >\
    \ 0.000000015f) {\n            gradeLetters.Add(\"A\");\n        }\n        if\
    \ (differencePercentage > 0.000000014f) {\n            gradeLetters.Add(\"A\"\
    );\n        }\n        if (differencePercentage > 0.000000013f) {\n          \
    \  gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage > 0.000000012f)\
    \ {\n            gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage\
    \ > 0.000000011f) {\n            gradeLetters.Add(\"A\");\n        }\n       \
    \ if (differencePercentage > 0.000000010f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (differencePercentage > 0.000000009f) {\n       \
    \     gradeLetters.Add(\"A\");\n        }\n        if (differencePercentage >\
    \ 0.000000008f) {\n            gradeLetters.Add", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float difference = average - grades.Min();\n  \
    \      float difference2 = average - grades.Max();\n        float difference3\
    \ = average - grades.Average();\n        float difference4 = average - grades.Sum();\n\
    \        float difference5 = average - grades.Sum(x => x);\n        float difference6\
    \ = average - grades.Sum(x => Math.Pow(x, 2));\n        float difference7 = average\
    \ - grades.Sum(x => Math.Pow(x, 3));\n        float difference8 = average - grades.Sum(x\
    \ => Math.Pow(x, 4));\n        float difference9 = average - grades.Sum(x => Math.Pow(x,\
    \ 5));\n        float difference10 = average - grades.Sum(x => Math.Pow(x, 6));\n\
    \        float difference11 = average - grades.Sum(x => Math.Pow(x, 7));\n   \
    \     float difference12 = average - grades.Sum(x => Math.Pow(x, 8));\n      \
    \  float difference13 = average - grades.Sum(x => Math.Pow(x, 9));\n        float\
    \ difference14 = average - grades.Sum(x => Math.Pow(x, 10));\n        float difference15\
    \ = average - grades.Sum(x => Math.Pow(x, 11));\n        float difference16 =\
    \ average - grades.Sum(x => Math.Pow(x, 12));\n        float difference17 = average\
    \ - grades.Sum(x => Math.Pow(x, 13));\n        float difference18 = average -\
    \ grades.Sum(x => Math.Pow(x, 14));\n        float difference19 = average - grades.Sum(x\
    \ => Math.Pow(x, 15));\n        float difference20 = average - grades.Sum(x =>\
    \ Math.Pow(x, 16));\n        float difference21 = average - grades.Sum(x => Math.Pow(x,\
    \ 17));\n        float difference22 = average - grades.Sum(x => Math.Pow(x, 18));\n\
    \        float difference23 = average - grades.Sum(x => Math.Pow(x, 19));\n  \
    \      float difference24 = average - grades.Sum(x => Math.Pow(x, 20));\n    \
    \    float difference25 = average - grades.Sum(x => Math.Pow(x, 21));\n      \
    \  float difference26 = average - grades.Sum(x => Math.Pow(x, 22));\n        float\
    \ difference27 = average - grades.Sum(x => Math.Pow(x, 23));\n        ", "   \
    \     List<string> gradeLetters = new List<string>();\n        foreach (float\
    \ grade in grades) {\n            float gpa = grade;\n            float average\
    \ = grades.Average();\n            float difference = gpa - average;\n       \
    \     float differencePercent = difference * 100 / average;\n            float\
    \ differencePercentPercent = differencePercent * 100 / 100;\n            float\
    \ differencePercentPercentPercent = differencePercentPercent * 100 / 100;\n  \
    \          float differencePercentPercentPercent = differencePercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercentPercentPercentPercent = differencePercentPercentPercentPercent\
    \ * 100 / 100;\n            float differencePercent", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   float gpa = grade;\n            float sum = 0;\n            while (gpa > 0)\
    \ {\n                sum += gpa;\n                gpa = gpa / 10;\n          \
    \  }\n            int gradeLetter = Convert.ToInt32(Math.Round(sum * 100 / grades.Sum(),\
    \ 0));\n            gradeLetters.Add(Convert.ToString(gradeLetter));\n       \
    \ }\n        return gradeLetters;", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float sumOfSquares = 0;\n        foreach (float grade in grades) {\n  \
    \          sumOfSquares += grade * grade;\n        }\n        float averageOfSquares\
    \ = sumOfSquares / grades.Count;\n        float variance = averageOfSquares -\
    \ average*average;\n        float standardDeviation = Math.Sqrt(variance);\n \
    \       float standardDeviationOfGrades = standardDeviation / grades.Count;\n\
    \        float standardDeviationOfSumOfSquares = standardDeviationOfGrades * standardDeviationOfGrades;\n\
    \        float averageOfStandardDeviations = standardDeviationOfSumOfSquares /\
    \ grades.Count;\n        float standardDeviationOfAverageOfStandardDeviations\
    \ = Math.Sqrt(averageOfStandardDeviations);\n        float averageOfStandardDeviationsOfGrades\
    \ = standardDeviationOfAverageOfStandardDeviations / grades.Count;\n        float\
    \ standardDeviationOfAverageOfStandardDeviationsOfGrades = Math.Sqrt(averageOfStandardDeviationsOfGrades);\n\
    \        float averageOfStandardDeviationsOfSumOfSquares = standardDeviationOfAverageOfStandardDeviationsOfGrades\
    \ * standardDeviationOfAverageOfStandardDeviationsOfGrades;\n        float averageOfStandardDeviationsOfVariance\
    \ = standardDeviationOfAverageOfStandardDeviationsOfSumOfSquares / grades.Count;\n\
    \        float standardDeviationOfAverageOfStandardDeviationsOfVariance = Math.Sqrt(averageOfStandardDeviationsOfVariance);\n\
    \        float averageOfStandardDeviationsOfStandardDeviationOfGrades = standardDeviationOfAverageOfStandardDeviationsOfVariance\
    \ / grades.Count;\n        float standardDeviationOfAverageOfStandardDeviationsOfStandardDeviationOfGrades\
    \ = Math.Sqrt(averageOfStandardDeviationsOfStandardDeviationOfGrades);\n     \
    \   float averageOfStandardDeviationsOfStandardDeviationOfSumOfSquares = standardDeviationOfAverageOfStandardDeviationsOfStandardDeviationOfGrades\
    \ * standardDeviationOfAverageOfStandardDeviationsOfStandardDeviation", "    \
    \    List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gpaSum = 0;\n\
    \        foreach (float grade in grades) {\n            gpaSum += grade;\n   \
    \     }\n        float gpaAverage = gpaSum / grades.Count;\n        float gpaDiff\
    \ = average - gpaAverage;\n        float gpaDiffPercentage = Mathf.Abs(gpaDiff)\
    \ / average;\n        float gpaDiffPercentagePercentage = Mathf.Abs(gpaDiffPercentage)\
    \ / gpaAverage;\n        float gpaDiffPercentagePercentagePercentage = Mathf.Abs(gpaDiffPercentagePercentage)\
    \ / gpaDiff;\n        float gpaDiffPercentagePercentagePercentagePercentage =\
    \ Mathf.Abs(gpaDiffPercentagePercentagePercentage) / gpaDiffPercentage;\n    \
    \    float gpaDiffPercentagePercentagePercentagePercentagePercentage = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentage;\n        float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentage) / gpaDiffPercentagePercentagePercentage;\n\
    \        float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentage;\n        float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentagePercentage;\n        float\
    \ gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentagePercentagePercentage;\n   \
    \     float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage\
    \ = Mathf.Abs(gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage)\
    \ / gpaDiffPercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentagePercentage;\n\
    \        float gpaDiffPercentagePercentagePercentagePercentage", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float gradeSum = 0;\n        foreach\
    \ (float grade in grades) {\n            gradeSum += grade * grade;\n        }\n\
    \        float gradeAverage = gradeSum / grades.Count;\n        float gradeDifference\
    \ = average - gradeAverage;\n        float gradeDifferenceSquared = gradeDifference\
    \ * gradeDifference;\n        float gradeDifferenceCutoff = gradeDifferenceSquared\
    \ / Math.Sqrt(grades.Count);\n        float gradeDifferenceCutoffSquare = gradeDifferenceCutoff\
    \ * gradeDifferenceCutoff;\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSquare);\n\
    \        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n        float gradeDifferenceCutoffSqrt = Math.Sqrt(gradeDifferenceCutoffSqrt\
    \ + 1);\n", "        List<string> gradeLetters = new List<string>();\n       \
    \ foreach (float grade in grades) {\n            float gpa = grade;\n        \
    \    float gpaSum = grades.Sum(x => x);\n            float gpaDiff = gpa - gpaSum;\n\
    \            float gpaDiffPercent = gpa / gpaSum * 100;\n            float gpaPercent\
    \ = gpa / gpaSum;\n            float gpaPercentDiff = gpa - gpaSum;\n        \
    \    float gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float gpaPercentDiffPercentPercent\
    \ = gpa / gpaSum * 100;\n            float gpaPercentDiffPercentPercent = gpa\
    \ / gpaSum * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n\
    \            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float\
    \ gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent\
    \ = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum\
    \ * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n    \
    \        float gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float\
    \ gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent\
    \ = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum\
    \ * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n    \
    \        float gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float\
    \ gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent\
    \ = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum\
    \ * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n    \
    \        float gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float\
    \ gpaPercentDiffPercent = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent\
    \ = gpa / gpaSum * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum\
    \ * 100;\n            float gpaPercentDiffPercent = gpa / gpaSum * 100;\n    \
    \        float g", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float gradeDifference =\
    \ grade - average;\n            if (gradeDifference >= 0) {\n                gradeLetters.Add((gradeDifference\
    \ >= 3.0 ? \"A+\" : gradeDifference >= 2.0 ? \"A\" : gradeDifference >= 1.7 ?\
    \ \"A-\" : gradeDifference >= 1.3 ? \"B+\" : gradeDifference >= 0.7 ? \"B\" :\
    \ gradeDifference >= 0.3 ? \"B-\" : gradeDifference >= 0.0 ? \"C+\" : gradeDifference\
    \ >= -0.7 ? \"C\" : gradeDifference >= -0.3 ? \"C-\" : gradeDifference >= -0.0\
    \ ? \"D+\" : gradeDifference >= -0.3 ? \"D\" : gradeDifference >= -0.7 ? \"D-\"\
    \ : \"E\"));\n            }\n        }\n        return gradeLetters;", "     \
    \   List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.Average();\n        float gradeDifference = difference / average;\n\
    \        gradeLetters.Add(\"D-\");\n        if (gradeDifference > -0.7) {\n  \
    \          gradeLetters.Add(\"D+\");\n        }\n        if (gradeDifference >\
    \ -0.3) {\n            gradeLetters.Add(\"D\");\n        }\n        if (gradeDifference\
    \ > -0.1) {\n            gradeLetters.Add(\"C-\");\n        }\n        if (gradeDifference\
    \ > 0.0) {\n            gradeLetters.Add(\"C\");\n        }\n        if (gradeDifference\
    \ > 0.1) {\n            gradeLetters.Add(\"B-\");\n        }\n        if (gradeDifference\
    \ > 0.3) {\n            gradeLetters.Add(\"B+\");\n        }\n        if (gradeDifference\
    \ > 0.7) {\n            gradeLetters.Add(\"B\");\n        }\n        if (gradeDifference\
    \ > 1.0) {\n            gradeLetters.Add(\"A-\");\n        }\n        if (gradeDifference\
    \ > 1.7) {\n            gradeLetters.Add(\"A+\");\n        }\n        if (gradeDifference\
    \ > 2.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 3.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 3.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 4.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 4.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 5.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 5.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 6.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 6.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 7.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 7.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 8.0) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 8.7) {\n            gradeLetters.Add(\"A\");\n        }\n        if (gradeDifference\
    \ > 9.0) {", "        List<string> gradeLetters = new List<string>();\n      \
    \  float sum = 0;\n        foreach (float grade in grades) {\n            sum\
    \ += grade;\n        }\n        float average = sum / grades.Count;\n        foreach\
    \ (float grade in grades) {\n            float difference = grade - average;\n\
    \            if (difference > -3.0f) {\n                gradeLetters.Add(\"A-\"\
    );\n            } else if (difference > -2.5f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -2.1f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -1.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -1.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -1.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -0.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -0.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > -0.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 0.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 0.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 0.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 1.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 1.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 1.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 2.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 2.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 2.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 3.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 3.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 3.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 4.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 4.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 4.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 5.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 5.3f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 5.7f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 6.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float gradePercentage =\
    \ grade / average;\n            gradeLetters.Add(string.Format(\"{0}{1}\", gradePercentage,\
    \ NumericalLetterGrade(grade)));\n        }\n        return gradeLetters;", " \
    \       List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageOfSquares\
    \ = sum * sum;\n        float averageOfSquaresOfDifferences = sum * sum - averageOfSquares;\n\
    \        float averageOfSquaresOfSquaredDifferences = averageOfSquaresOfDifferences\
    \ * averageOfSquaresOfDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquare\
    \ = averageOfSquaresOfSquaredDifferences * averageOfSquaresOfDifferences;\n  \
    \      float averageOfSquaresOfSquaredDifferencesSquareRoot = averageOfSquaresOfSquaredDifferencesSquare\
    \ * Math.Sqrt(averageOfSquaresOfSquaredDifferencesSquare);\n        float averageOfSquaresOfSquaredDifferencesSquareRootOfDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquareRoot * Math.Sqrt(averageOfSquaresOfSquaresOfSquaredDifferencesSquare);\n\
    \        float averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquareRootOfDifferences * Math.Sqrt(averageOfSquaresOfSquaresOfSquaredDifferencesSquareRootOfDifferences);\n\
    \        float averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquare\
    \ = averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferences * Math.Sqrt(averageOfSquaresOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquare);\n\
    \        float averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRoot\
    \ = averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquare *\
    \ Math.Sqrt(averageOfSquaresOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRoot);\n\
    \        float averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRootOfDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRootOfDifferences\
    \ * Math.Sqrt(averageOfSquaresOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRootOfDifferences);\n\
    \        float averageOfSquaresOfSquaredDifferencesSquareRootOfSquaredDifferencesSquareRootOfSquaredDifferences\
    \ = averageOfSquaresOfSquaredDifferencesSquareRoot", "        List<string> letters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < 0) {\n   \
    \             letters.Add(\"D-\");\n            } else if (difference > 0) {\n\
    \                letters.Add(\"D+\");\n            } else if (difference == 0)\
    \ {\n                letters.Add(\"D\");\n            } else {\n             \
    \   letters.Add(\"C\");\n            }\n        }\n        return letters;", " \
    \       List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float sumOfSquares = 0;\n        foreach\
    \ (float grade in grades) {\n            sumOfSquares += grade * grade;\n    \
    \    }\n        float averageOfSquares = sumOfSquares / grades.Count;\n      \
    \  float variance = averageOfSquares - average * average;\n        float standardDeviation\
    \ = Math.Sqrt(variance);\n        float standardDeviationOfGrades = standardDeviation\
    \ / grades.Count;\n        float standardDeviationOfGradesSquared = standardDeviationOfGrades\
    \ * standardDeviationOfGrades;\n        float averageOfGradesSquared = averageOfSquares\
    \ * averageOfSquares;\n        float varianceOfGradesSquared = varianceOfGradesSquared\
    \ * varianceOfGradesSquared;\n        float averageOfGradesSquaredOfGrades = averageOfGradesSquared\
    \ * grades.Count;\n        float varianceOfGradesSquaredOfGrades = varianceOfGradesSquaredOfGrades\
    \ * grades.Count;\n        float averageOfGradesSquaredOfGradesOfGrades = averageOfGradesSquaredOfGrades\
    \ * grades.Count;\n        float varianceOfGradesSquaredOfGradesOfGrades = varianceOfGradesSquaredOfGradesOfGrades\
    \ * grades.Count;\n        float averageOfGradesSquaredOfGradesOfGradesOfGrades\
    \ = averageOfGradesSquaredOfGradesOfGrades * grades.Count;\n        float varianceOfGradesSquaredOfGradesOfGradesOfGrades\
    \ = varianceOfGradesSquaredOfGradesOfGradesOfGrades * grades.Count;\n        float\
    \ averageOfGradesSquaredOfGradesOfGradesOfGradesOfGrades = averageOfGradesSquaredOfGradesOfGradesOfGrades\
    \ * grades.Count;\n        float varianceOfGradesSquaredOfGradesOfGradesOfGradesOfGrades\
    \ = varianceOfGradesSquaredOfGradesOfGradesOfGradesOfGrades * grades.Count;\n\
    \        float averageOfGradesSquaredOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = averageOfGradesSquaredOfGrades", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        float difference = average - grades.Min();\n        float differenceSquare\
    \ = difference * difference;\n        float differenceSquared = differenceSquare;\n\
    \        float averageSquare = average * average;\n        float averageSquared\
    \ = averageSquare;\n        float variance = averageSquared - average;\n     \
    \   float varianceSquare = variance * variance;\n        float varianceSquared\
    \ = varianceSquare;\n        float standardDeviation = Math.Sqrt(varianceSquared);\n\
    \        float standardDeviationSquare = standardDeviation * standardDeviation;\n\
    \        float standardDeviationSquared = standardDeviationSquare;\n        float\
    \ standardDeviationRatio = standardDeviationSquared / variance;\n        float\
    \ standardDeviationRatioSquare = standardDeviationRatio * standardDeviationRatio;\n\
    \        float standardDeviationRatioSquared = standardDeviationRatioSquare +\
    \ standardDeviationRatio;\n        float standardDeviationRatioRatio = standardDeviationRatioSquared\
    \ / variance;\n        float standardDeviationRatioRatioSquare = standardDeviationRatioRatio\
    \ * standardDeviationRatioRatio;\n        float standardDeviationRatioRatioSquared\
    \ = standardDeviationRatioRatioSquare;\n        float standardDeviationRatioRatioRatio\
    \ = standardDeviationRatioRatioSquared / variance;\n        float standardDeviationRatioRatioSquare\
    \ = standardDeviationRatioRatio * standardDeviationRatioRatio;\n        float\
    \ standardDeviationRatioRatioSquared = standardDeviationRatioRatioSquare + standardDeviationRatioRatio;\n\
    \        float standardDeviationRatioRatioRatio = standardDeviationRatioRatioSquared\
    \ / variance;\n        float standardDeviationRatioRatioRatio = standardDeviationRatioRatioRatio\
    \ * standardDeviationRatioRatioRatio;\n        float standardDeviationRatioRatioRatio\
    \ = standardDeviationRatioRatioSquared / variance;\n        float standardDeviationRatioRatioRatio\
    \ = standardDeviationRatioRatio * standardDeviationRatioRatio;\n        float\
    \ standardDeviationRatioRatio = standardDeviationRatioRatioSquared / variance;\n\
    \        float standardDeviationRatioRatioRatio = standardDeviationRatioRatio",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    A\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n  \
    \      gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        ", "        List<string> gradeLetters = new List<string>();\n \
    \       float sum = 0;\n        foreach (float grade in grades) {\n          \
    \  sum += grade;\n        }\n        float average = sum / grades.Count;\n   \
    \     foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < 0) {\n                difference =\
    \ difference * -1;\n            }\n            gradeLetters.Add(LetterGrade(difference));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   float gpa = grade;\n            float gpaUpperBound = 4.0f;\n            float\
    \ gpaLowerBound = 3.0f;\n            float gpaMidpoint = (gpaUpperBound + gpaLowerBound)\
    \ / 2;\n            float gpaMidpointUpperBound = 4.7f;\n            float gpaMidpointLowerBound\
    \ = 3.5f;\n            float gpaMidpointMidpoint = (gpaMidpointUpperBound + gpaMidpointLowerBound)\
    \ / 2;\n            float gpaMidpointMidpointUpperBound = 4.7f;\n            float\
    \ gpaMidpointMidpointLowerBound = 3.5f;\n            float gpaMidpointMidpointMidpoint\
    \ = (gpaMidpointMidpointUpperBound + gpaMidpointMidpointLowerBound) / 2;\n   \
    \         float gpaMidpointMidpointMidpointUpperBound = 4.7f;\n            float\
    \ gpaMidpointMidpointMidpointLowerBound = 3.5f;\n            float gpaMidpointMidpointMidpointMidpoint\
    \ = (gpaMidpointMidpointMidpointUpperBound + gpaMidpointMidpointMidpointLowerBound)\
    \ / 2;\n            float gpaMidpointMidpointMidpointMidpointUpperBound = 4.7f;\n\
    \            float gpaMidpointMidpointMidpointMidpointLowerBound = 3.5f;\n   \
    \         float gpaMidpointMidpointMidpointMidpointMidpoint = (gpaMidpointMidpointMidpointMidpointUpperBound\
    \ + gpaMidpointMidpointMidpointMidpointLowerBound) / 2;\n            float gpaMidpointMidpointMidpointMidpointMidpointUpperBound\
    \ = 4.7f;\n            float gpaMidpointMidpointMidpointMidpointMidpointLowerBound\
    \ = 3.5f;\n            float gpaMidpointMidpointMidpointMidpointMidpointUpperBound\
    \ = 4.7f;\n            float gpaMidpointMidpointMidpointMidpointMidpointLowerBound\
    \ = 3.5f;\n            float gpaMidpointMidpointMidpointMidpointMidpointMidpointUpperBound\
    \ = 4.7f;\n            float gpaMidpointMidpointMidpointMidpointMidpointMidpointLowerBound\
    \ = 3.5f;\n            float gpaMidpointMidpointMidpointMidpointMidpointMidpointMidpointUpperBound\
    \ = 4.7f;\n            float gpaMidpointMidpointMidpointMidpointMidpointMidpointMidpointUpperBound\
    \ = 3.5f;\n            float gpa", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      float averageOfSquares = sum * sum;\n        float averageOfSquaresOfDifferences\
    \ = averageOfSquares - grades.Sum();\n        float averageOfSquaresOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferences / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferences / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferences / grades.Count;\n  \
    \      float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            float percent = (grade / average) * 100;\n       \
    \     gradeLetters.Add(String.Format(\"{0}%\", percent.ToString(\"N2\")));\n \
    \       }\n        return gradeLetters;", "        List<string> gradeLetters =\
    \ new List<string>();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float average = sum\
    \ / grades.Count;\n        float averageGrade = average;\n        float averageGradePercent\
    \ = averageGrade * 100;\n        float averageGradePercentPercent = averageGradePercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGradePercentPercentPercent\
    \ * 100;\n        float averageGradePercentPercentPercent = averageGra", "   \
    \     // Write your code here\n        List<string> gradeLetters = new List<string>();\n\
    \        float average = grades.Average();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ averageOfGrades = sum / grades.Count;\n        float difference = average -\
    \ averageOfGrades;\n        float differenceOfGrades = average - averageOfGrades;\n\
    \        float differenceOfGradesOfGrades = average - averageOfGrades;\n     \
    \   float differenceOfGradesOfGradesOfGrades = average - averageOfGrades;\n  \
    \      float differenceOfGradesOfGradesOfGradesOfGrades = average - averageOfGrades;\n\
    \        float differenceOfGradesOfGradesOfGradesOfGradesOfGrades = average -\
    \ averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = average - averageOfGrades;\n        float differenceOfGradesOfGradesOfGra",
  "        List<string> gradeLetters = new List<string>();\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n    \
    \    }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < 0.0f) {\n                gradeLetters.Add(\"\
    D-\");\n            } else if (difference < 3.0f) {\n                gradeLetters.Add(\"\
    C-\");\n            } else if (difference < 7.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 15.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 19.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 23.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 29.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 33.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 37.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 41.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 45.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 49.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 53.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 57.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 61.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 65.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 69.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 73.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 77.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 81.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 85.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 89.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 93.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 97.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 101.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 105.0f) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 109.0f) {\n                ", "  \
    \      List<string> gradeLetters = new List<string>();\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n    \
    \    }\n        return gradeLetters;", "        List<string> gradeLetters = new\
    \ List<string>();\n        foreach (float grade in grades) {\n            gradeLetters.Add(LetterGrade(grade));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        foreach (float grade in grades) {\n         \
    \   gradeLetters.Add(LetterGrade(grade));\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        foreach (float grade\
    \ in grades) {\n            gradeLetters.Add(LetterGrade(grade, average));\n \
    \       }\n        return gradeLetters;", "        List<string> gradeLetters =\
    \ new List<string>();\n        float sum = 0;\n        foreach (float grade in\
    \ grades) {\n            sum += grade;\n        }\n        float average = sum\
    \ / grades.Count;\n        float averageOfSquares = sum * sum;\n        float\
    \ averageOfSquaresOfDifferences = sum * sum - averageOfSquares;\n        float\
    \ averageOfSquaresOfSquaredDifferences = averageOfSquaresOfDifferences * averageOfSquaresOfDifferences;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquared = averageOfSquaresOfSquaredDifferences\
    \ * averageOfSquaresOfSquaredDifferences;\n        float averageOfSquaresOfSquaredDifferencesSquaredSq\
    \ = averageOfSquaresOfSquaredDifferencesSquared * averageOfSquaresOfSquaredDifferencesSquared;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredSqSq = averageOfSquaresOfSquaredDifferencesSquaredSq\
    \ * averageOfSquaresOfSquaredDifferencesSquaredSq;\n        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSq\
    \ = averageOfSquaresOfSquaredDifferencesSquaredSqSq * averageOfSquaresOfSquaredDifferencesSquaredSqSq;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq = averageOfSquaresOfSquaredDifferencesSquaredSqSq\
    \ * averageOfSquaresOfSquaredDifferencesSquaredSqSqSq;\n        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq\
    \ = averageOfSquaresOfSquaredDifferencesSquaredSqSqSq * averageOfSquaresOfSquaredDifferencesSquaredSqSqSq;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq = averageOfSquaresOfSquaredDifferencesSquaredSqSqSq\
    \ * averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq;\n        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq\
    \ = averageOfSquaresOfSquaredDifferencesSquaredSqSqSq * averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq;\n\
    \        float averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq = averageOfSquaresOfSquaredDifferencesSquaredSqSqSq\
    \ * averageOfSquaresOfSquaredDifferencesSquaredSqSqSqSq;\n        float average",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float difference = average - grades.First();\n\
    \        float gradeDifference = difference / average;\n        gradeLetters.Add(\"\
    E\");\n        if (gradeDifference > 0.0f) {\n            gradeLetters.Add(\"\
    D-\");\n        }\n        if (gradeDifference > -0.1f) {\n            gradeLetters.Add(\"\
    D+\");\n        }\n        if (gradeDifference > -0.2f) {\n            gradeLetters.Add(\"\
    D\");\n        }\n        if (gradeDifference > -0.3f) {\n            gradeLetters.Add(\"\
    C-\");\n        }\n        if (gradeDifference > -0.4f) {\n            gradeLetters.Add(\"\
    C\");\n        }\n        if (gradeDifference > -0.5f) {\n            gradeLetters.Add(\"\
    B-\");\n        }\n        if (gradeDifference > -0.6f) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (gradeDifference > -0.7f) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        if (gradeDifference > -0.8f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -0.9f) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        if (gradeDifference > -1.0f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.1f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.2f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.3f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.4f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.5f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.6f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.7f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.8f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -1.9f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -2.0f) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (gradeDifference > -2.1f) {\n            gradeLetters.Add",
  "        List<string> letterGrades = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gpa = average;\n\
    \        float difference = average - gpa;\n        float difference2 = average\
    \ - gpa * 2;\n        float difference3 = average - gpa * 3;\n        float difference4\
    \ = average - gpa * 4;\n        float difference5 = average - gpa * 5;\n     \
    \   float difference6 = average - gpa * 6;\n        float difference7 = average\
    \ - gpa * 7;\n        float difference8 = average - gpa * 8;\n        float difference9\
    \ = average - gpa * 9;\n        float difference10 = average - gpa * 10;\n   \
    \     float difference11 = average - gpa * 11;\n        float difference12 = average\
    \ - gpa * 12;\n        float difference13 = average - gpa * 13;\n        float\
    \ difference14 = average - gpa * 14;\n        float difference15 = average - gpa\
    \ * 15;\n        float difference16 = average - gpa * 16;\n        float difference17\
    \ = average - gpa * 17;\n        float difference18 = average - gpa * 18;\n  \
    \      float difference19 = average - gpa * 19;\n        float difference20 =\
    \ average - gpa * 20;\n        float difference21 = average - gpa * 21;\n    \
    \    float difference22 = average - gpa * 22;\n        float difference23 = average\
    \ - gpa * 23;\n        float difference24 = average - gpa * 24;\n        float\
    \ difference25 = average - gpa * 25;\n        float difference26 = average - gpa\
    \ * 26;\n        float difference27 = average - gpa * 27;\n        float difference28\
    \ = average - gpa * 28;\n        float difference29 = average - gpa * 29;\n  \
    \      float difference30 = average - gpa * 30;\n        float difference31 =\
    \ average - gpa * 31;\n        float difference32 = average - gpa * 32;\n    \
    \    float difference33 = average - gpa * 33;\n        float difference34 = average\
    \ - gpa * 34;\n        float difference35 = average - gpa * 35;\n        float\
    \ difference36 = average - gpa * 36;\n        float difference37 = average - gpa\
    \ * 37;\n        float difference38 = average - gpa * ", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float sumOfSquares = 0;\n        foreach\
    \ (float grade in grades) {\n            sumOfSquares += (grade * grade);\n  \
    \      }\n        float averageOfSquares = sumOfSquares / grades.Count;\n    \
    \    float variance = averageOfSquares - average * average;\n        float standardDeviation\
    \ = Math.Sqrt(variance);\n        float standardDeviationOfSquares = standardDeviation\
    \ * standardDeviation;\n        float minimum = grades.Min();\n        float maximum\
    \ = grades.Max();\n        float minimumOfSquares = minimum * minimum;\n     \
    \   float maximumOfSquares = maximum * maximum;\n        float minimumOfStandardDeviation\
    \ = minimum - average;\n        float maximumOfStandardDeviation = maximum - average;\n\
    \        float minimumOfStandardDeviationOfSquares = minimumOfStandardDeviation\
    \ * minimumOfStandardDeviation;\n        float maximumOfStandardDeviationOfSquares\
    \ = maximumOfStandardDeviation * maximumOfStandardDeviation;\n        float minimumOfMinimum\
    \ = minimum - minimumOfSquares;\n        float maximumOfMaximum = maximum - maximumOfSquares;\n\
    \        float minimumOfMaximumOfSquares = minimumOfMaximum * minimumOfMaximum;\n\
    \        float maximumOfMaximumOfSquares = maximumOfMaximum * maximumOfMaximum;\n\
    \        float minimumOfMinimumOfStandardDeviation = minimumOfMinimum - averageOfSquares;\n\
    \        float maximumOfMinimumOfStandardDeviation = maximumOfMinimum - averageOfSquares;\n\
    \        float minimumOfMinimumOfStandardDeviationOfSquares = minimumOfMinimumOfStandardDeviation\
    \ * minimumOfMinimumOfStandardDeviation;\n        float maximumOfMinimumOfStandardDeviationOfSquares\
    \ = maximumOfMinimumOfStandardDeviation * maximumOfMinimumOfStandardDeviation;\n\
    \        float minimumOfMinimumOfMinimum = minimumOfMinimum - minimumOfStandardDeviation;\n\
    \        float maximumOfMaximumOfMaximum = maximumOfMaximum - maximumOfStandardDeviation;\n\
    \        float minimumOfMaximumOfMaximumOfSquares = minimumOfMaximumOfMaximum\
    \ * minimumOfMaximumOfMaximum;\n        float maximumOfMaximumOfMaximumOfSquares\
    \ = maximumOfMaximumOfMaximum * maximumOfMaximumOfMaximum;\n        float minimumOfMinimumOfMinimumOf",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float difference =\
    \ average - grades.Last();\n        if (difference < 0) {\n            gradeLetters.Add(\"\
    D-\");\n        } else if (difference > 0) {\n            gradeLetters.Add(\"\
    D+\");\n        } else if (difference == 0) {\n            gradeLetters.Add(\"\
    D\");\n        } else {\n            gradeLetters.Add(\"E\");\n        }\n   \
    \     foreach (float grade in grades) {\n            float difference = grade\
    \ - average;\n            if (difference < 0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference > 0) {\n                gradeLetters.Add(\"\
    B+\");\n            } else if (difference == 0) {\n                gradeLetters.Add(\"\
    B\");\n            } else {\n                gradeLetters.Add(\"A\");\n      \
    \      }\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float gradePoints = grade / average;\n            gradeLetters.Add(LetterGrade(gradePoints));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float average2 = average * average;\n        float\
    \ average3 = average2 * average;\n        float average4 = average3 * average;\n\
    \        float average5 = average4 * average;\n        float average6 = average5\
    \ * average;\n        float average7 = average6 * average;\n        float average8\
    \ = average7 * average;\n        float average9 = average8 * average;\n      \
    \  float average10 = average9 * average;\n        float average11 = average10\
    \ * average;\n        float average12 = average11 * average;\n        float average13\
    \ = average12 * average;\n        float average14 = average13 * average;\n   \
    \     float average15 = average14 * average;\n        float average16 = average15\
    \ * average;\n        float average17 = average16 * average;\n        float average18\
    \ = average17 * average;\n        float average19 = average18 * average;\n   \
    \     float average20 = average19 * average;\n        float average21 = average20\
    \ * average;\n        float average22 = average21 * average;\n        float average23\
    \ = average22 * average;\n        float average24 = average23 * average;\n   \
    \     float average25 = average24 * average;\n        float average26 = average25\
    \ * average;\n        float average27 = average26 * average;\n        float average28\
    \ = average27 * average;\n        float average29 = average28 * average;\n   \
    \     float average30 = average29 * average;\n        float average31 = average30\
    \ * average;\n        float average32 = average31 * average;\n        float average33\
    \ = average32 * average;\n        float average34 = average33 * average;\n   \
    \     float average35 = average34 * average;\n        float average36 = average35\
    \ * average;\n        float average37 = average36 * average;\n        float average38\
    \ = average37 * average;\n        float average39 = average38 * average;\n   \
    \     float average40 = average39 * average;\n        float average41 = average40\
    \ * average;\n        float average42 = average41 * average;\n        float average43\
    \ = average42 * average;\n        float average44 = average43 * average;\n   \
    \     float average45 = average44 * average;\n        float average", "      \
    \  List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n \
    \       gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"H\");\n  \
    \      gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"M\");\n  \
    \      gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"\
    P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"R\");\n  \
    \      gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"W\");\n  \
    \      gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"B\");\n  \
    \      gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n  \
    \      gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"\
    J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n  \
    \      gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n  \
    \      gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n  \
    \      gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"\
    Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n  \
    \      gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float gradeSum = 0;\n\
    \        foreach (float grade in grades) {\n            gradeSum += Math.Pow(grade\
    \ - average, 2);\n        }\n        float variance = gradeSum / grades.Count\
    \ - average;\n        float standardDeviation = Math.Sqrt(variance);\n       \
    \ float standardDeviationPercentage = standardDeviation / average;\n        float\
    \ standardDeviationPercentage2 = standardDeviationPercentage * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage3 = standardDeviationPercentage2 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage4 = standardDeviationPercentage3 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage5 = standardDeviationPercentage4 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage6 = standardDeviationPercentage5 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage7 = standardDeviationPercentage6 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage8 = standardDeviationPercentage7 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage9 = standardDeviationPercentage8 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage10 = standardDeviationPercentage9 *\
    \ standardDeviationPercentage;\n        float standardDeviationPercentage11 =\
    \ standardDeviationPercentage10 * standardDeviationPercentage;\n        float\
    \ standardDeviationPercentage12 = standardDeviationPercentage11 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage13 = standardDeviationPercentage12 *\
    \ standardDeviationPercentage;\n        float standardDeviationPercentage14 =\
    \ standardDeviationPercentage13 * standardDeviationPercentage;\n        float\
    \ standardDeviationPercentage15 = standardDeviationPercentage14 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage16 = standardDeviationPercentage15 *\
    \ standardDeviationPercentage;\n        float standardDeviationPercentage17 =\
    \ standardDeviationPercentage16 * standardDeviationPercentage;\n        float\
    \ standardDeviationPercentage18 = standardDeviationPercentage17 * standardDeviationPercentage;\n\
    \        float standardDeviationPercentage19 = standardDeviationPercentage18 *\
    \ standardDeviation", "        List<string> gradeLetters = new List<string>();\n\
    \        float sum = 0;\n        foreach (float grade in grades) {\n         \
    \   sum += grade;\n        }\n        float average = sum / grades.Count;\n  \
    \      foreach (float grade in grades) {\n            float gradeDifference =\
    \ grade - average;\n            float gradeDifferencePercentage = gradeDifference\
    \ / average;\n            gradeLetters.Add(String.Format(\"{0}{1}\", Math.Round(gradeDifferencePercentage,\
    \ 1), NumericalLetterGrade(grade)));\n        }\n        return gradeLetters;",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"D\");\n \
    \       gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"\
    B-\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n       \
    \ gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    D+\");\n        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n\
    \        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n  \
    \      gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F\");\n",
  "        List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"C-\");\n       \
    \ gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"\
    E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"F-\");\n \
    \       gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"G+\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"H-\");\n        gradeLetters.Add(\"I\");\n \
    \       gradeLetters.Add(\"I+\");\n        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"\
    J-\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"K+\");\n\
    \        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"L+\");\n       \
    \ gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"M-\");\n        gradeLetters.Add(\"\
    N\");\n        gradeLetters.Add(\"N+\");\n        gradeLetters.Add(\"O\");\n \
    \       gradeLetters.Add(\"O+\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    P+\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"Q+\");\n\
    \        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"R+\");\n       \
    \ gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"S+\");\n        gradeLetters.Add(\"\
    T\");\n        gradeLetters.Add(\"T+\");\n        gradeLetters.Add(\"U\");\n \
    \       gradeLetters.Add(\"U+\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    V+\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"W+\");\n\
    \        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"X+\");\n       \
    \ gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Y+\");\n        gradeLetters.Add(\"\
    Z\");\n        gradeLetters.Add(\"Z+\");\n        gradeLetters.Add(\"AA\");\n\
    \        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n      \
    \  grade", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade, average));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        foreach (float grade in grades) {\n           \
    \ float difference = grade - average;\n            if (difference < 0) {\n   \
    \             difference = difference * -1;\n            }\n            float\
    \ percentage = (difference / average) * 100;\n            string letter = String.Empty;\n\
    \            if (percentage >= 90) {\n                letter = \"A\";\n      \
    \      } else if (percentage >= 80) {\n                letter = \"B\";\n     \
    \       } else if (percentage >= 70) {\n                letter = \"C\";\n    \
    \        } else if (percentage >= 60) {\n                letter = \"D\";\n   \
    \         } else if (percentage >= 50) {\n                letter = \"E\";\n  \
    \          } else {\n                letter = \"F\";\n            }\n        \
    \    gradeLetters.Add(letter);\n        }\n        return gradeLetters;", "  \
    \      List<string> gradeLetters = new List<string>();\n        gradeLetters.Add(\"\
    A+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n\
    \        gradeLetters.Add(\"B+\");\n        gradeLetters.Add(\"B\");\n       \
    \ gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n\
    \        gradeLetters.Add(\"D\");\n        gradeLetters.Add(\"D-\");\n       \
    \ gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"\
    V\");\n        gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"X\");\n  \
    \      gradeLetters.Add(\"Y\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    AA\");\n        gradeLetters.Add(\"AB\");\n        gradeLetters.Add(\"AC\");\n\
    \        gradeLetters.Add(\"AD\");\n        gradeLetters.Add(\"AE\");\n      \
    \  gradeLetters.Add(\"AF\");\n        gradeLetters.Add(\"AG\");\n        gradeLetters.Add(\"\
    AH\");\n        gradeLetters.Add(\"AI\");\n        gradeLetters.Add(\"AJ\");\n\
    \        gradeLetters.Add(\"AK\");\n        gradeLetters.Add(\"AL\");\n      \
    \  gradeLetters.Add(\"AM\");\n        gradeLetters.Add(\"AN\");\n        gradeLetters.Add(\"\
    AO\");\n        gradeLetters.Add(\"AP\");\n        gradeLetters.Add(\"AQ\");\n\
    \        gradeLetters.Add(\"AR\");\n        gradeLetters.Add(\"AS\");\n      \
    \  gradeLetters.Add(\"AT\");\n        gradeLetters.Add(\"AU\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        gradeLetters.Add(\"A+\");\n    \
    \    gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A-\");\n        gradeLetters.Add(\"\
    B+\");\n        gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n\
    \        gradeLetters.Add(\"C+\");\n        gradeLetters.Add(\"C\");\n       \
    \ gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"\
    D\");\n        gradeLetters.Add(\"D-\");\n        gradeLetters.Add(\"E\");\n \
    \       gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"G\");\n        gradeLetters.Add(\"\
    H\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"J\");\n  \
    \      gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"L\");\n        gradeLetters.Add(\"\
    M\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"O\");\n  \
    \      gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"S\");\n        gradeLetters.Add(\"T\");\n  \
    \      gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"\
    W\");\n        gradeLetters.Add(\"X\");\n        gradeLetters.Add(\"Y\");\n  \
    \      gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"\
    B\");\n        gradeLetters.Add(\"C\");\n        gradeLetters.Add(\"D\");\n  \
    \      gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"F\");\n        gradeLetters.Add(\"\
    G\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"I\");\n  \
    \      gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"M\");\n        gradeLetters.Add(\"N\");\n  \
    \      gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"\
    Q\");\n        gradeLetters.Add(\"R\");\n        gradeLetters.Add(\"S\");\n  \
    \      gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"U\");\n        ",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageOfSquares\
    \ = sum * sum;\n        float averageOfSquaresOfDifferences = averageOfSquares\
    \ - grades.Sum();\n        float averageOfSquaresOfDifferenceOfDifferences = averageOfSquaresOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferences / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferences / grades.Count;\n  \
    \      float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ / grades.Count;\n        float averageOfSquaresOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifference",
  "        List<string> gradeLetters = new List<string>();\n        float sum = 0;\n\
    \        foreach (float grade in grades) {\n            sum += grade;\n      \
    \  }\n        float average = sum / grades.Count;\n        float averageOfSquares\
    \ = average*average;\n        float averageOfSquaresOfSquares = averageOfSquares*average;\n\
    \        float averageOfSquaresOfSquaresOfSquares = averageOfSquaresOfSquares*average;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquares = averageOfSquaresOfSquaresOfSquares*average;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquares = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n\
    \        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares =\
    \ averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquaresOfSquaresOfSquares*average;\n        float averageOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquaresOfSquares\
    \ = averageOfSquaresOfSquares", "        // Your code goes here\n        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float averageOfSquares = sum * sum;\n\
    \        float averageOfSquaresOfGrades = grades.Sum(x => x * x);\n        float\
    \ averageOfSquaresOfGradesOfGrades = grades.Sum(x => x * x * x);\n        float\
    \ averageOfSquaresOfGradesOfGradesOfGrades = grades.Sum(x => x * x * x * x);\n\
    \        float averageOfSquaresOfGradesOfGradesOfGradesOfGrades = grades.Sum(x\
    \ => x * x * x * x * x);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x * x);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x * x * x * x);\n        float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x * x * x * x * x);\n        float\
    \ averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x * x * x * x * x * x * x);\n    \
    \    float averageOfSquaresOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGradesOfGrades\
    \ = grades.Sum(x => x * x * x * x * x * x * x * x * x * x * x * x * x * x * x);\n\
    \        float averageOfSquaresOfGradesOfGradesOfGradesOf", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        foreach (float grade in grades) {\n \
    \           float difference = grade - average;\n            if (difference <\
    \ -3.0) {\n                gradeLetters.Add(\"D-\");\n            } else if (difference\
    \ < -2.0) {\n                gradeLetters.Add(\"B-\");\n            } else if\
    \ (difference < -1.7) {\n                gradeLetters.Add(\"B-\");\n         \
    \   } else if (difference < -1.3) {\n                gradeLetters.Add(\"B-\");\n\
    \            } else if (difference < -1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < -0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 1.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 2.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 3.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 4.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 5.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 6.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 7.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 8.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 9.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 10.0) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 10.7) {\n                gradeLetters.Add(\"\
    B-\");\n            } else if (difference < 11.0) {\n                gradeLetters.Add(\"\
    B-\");", "        List<string> gradeLetters = new List<string>();\n        float\
    \ sum = 0;\n        foreach (float grade in grades) {\n            sum += grade;\n\
    \        }\n        float average = sum / grades.Count;\n        foreach (float\
    \ grade in grades) {\n            gradeLetters.Add(LetterGrade(grade, average));\n\
    \        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float variance = average;\n        float standardDeviation\
    \ = Math.Sqrt(variance);\n        float gradeVariance = standardDeviation * standardDeviation;\n\
    \        float gradeStandardDeviation = Math.Sqrt(gradeVariance);\n        float\
    \ gradeAverage = average / standardDeviation;\n        float gradeAverageSquared\
    \ = gradeAverage * gradeAverage;\n        float gradeStandardDeviationSquared\
    \ = gradeStandardDeviation * gradeStandardDeviation;\n        float gradeSum =\
    \ 0;\n        float gradeSumSquared = 0;\n        float gradeSumOfSquares = 0;\n\
    \        float gradeSumOfSquaresSquared = 0;\n        float gradeSumOfSquaresSquared2\
    \ = 0;\n        float gradeSumOfSquaresSquared3 = 0;\n        float gradeSumOfSquaresSquared4\
    \ = 0;\n        float gradeSumOfSquaresSquared5 = 0;\n        float gradeSumOfSquaresSquared6\
    \ = 0;\n        float gradeSumOfSquaresSquared7 = 0;\n        float gradeSumOfSquaresSquared8\
    \ = 0;\n        float gradeSumOfSquaresSquared9 = 0;\n        float gradeSumOfSquaresSquared10\
    \ = 0;\n        float gradeSumOfSquaresSquared11 = 0;\n        float gradeSumOfSquaresSquared12\
    \ = 0;\n        float gradeSumOfSquaresSquared13 = 0;\n        float gradeSumOfSquaresSquared14\
    \ = 0;\n        float gradeSumOfSquaresSquared15 = 0;\n        float gradeSumOfSquaresSquared16\
    \ = 0;\n        float gradeSumOfSquaresSquared17 = 0;\n        float gradeSumOfSquaresSquared18\
    \ = 0;\n        float gradeSumOfSquaresSquared19 = 0;\n        float gradeSumOfSquaresSquared20\
    \ = 0;\n        float gradeSumOfSquaresSquared21 = 0;\n        float gradeSumOfSquaresSquared22\
    \ = 0;\n        float gradeSumOfSquaresSquared23 = 0;\n        float gradeSumOfSquaresSquared24\
    \ = 0;\n        float gradeSumOfSquaresSquared25 = 0;\n        float gradeSumOfSquaresSquared26\
    \ = 0;\n        float gradeSumOfSquaresSquared27 = 0;\n        float gradeSumOfSquaresSquared28\
    \ = 0;\n        float gradeSumOfSquaresSquared29 = 0;\n        ", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        float difference = average - grades.Average();\n\
    \        float differencePercent = difference * 100 / average;\n        gradeLetters.Add(\"\
    E\");\n        if (differencePercent > 90) {\n            gradeLetters.Add(\"\
    D-\");\n        } else if (differencePercent > 80) {\n            gradeLetters.Add(\"\
    D\");\n        } else if (differencePercent > 70) {\n            gradeLetters.Add(\"\
    D+\");\n        } else if (differencePercent > 60) {\n            gradeLetters.Add(\"\
    C\");\n        } else if (differencePercent > 50) {\n            gradeLetters.Add(\"\
    C+\");\n        } else if (differencePercent > 40) {\n            gradeLetters.Add(\"\
    B-\");\n        } else if (differencePercent > 30) {\n            gradeLetters.Add(\"\
    B\");\n        } else if (differencePercent > 20) {\n            gradeLetters.Add(\"\
    B+\");\n        } else if (differencePercent > 10) {\n            gradeLetters.Add(\"\
    A-\");\n        } else if (differencePercent > 0) {\n            gradeLetters.Add(\"\
    A\");\n        } else if (differencePercent < 0) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float difference = average - grades.First();\n\
    \        float difference2 = average - grades.Last();\n        float difference3\
    \ = average - grades.LastOrDefault();\n        gradeLetters.Add(\"D+\");\n   \
    \     if (difference < -0.7) {\n            gradeLetters.Add(\"D\");\n       \
    \ }\n        if (difference < -0.3) {\n            gradeLetters.Add(\"D-\");\n\
    \        }\n        if (difference2 < -0.7) {\n            gradeLetters.Add(\"\
    C+\");\n        }\n        if (difference2 < -0.3) {\n            gradeLetters.Add(\"\
    C\");\n        }\n        if (difference3 < -0.7) {\n            gradeLetters.Add(\"\
    C-\");\n        }\n        if (difference3 < -0.3) {\n            gradeLetters.Add(\"\
    C\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    B+\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (difference2 < -0.1) {\n            gradeLetters.Add(\"\
    B-\");\n        }\n        if (difference2 < -0.1) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (difference3 < -0.1) {\n            gradeLetters.Add(\"\
    B-\");\n        }\n        if (difference3 < -0.1) {\n            gradeLetters.Add(\"\
    B\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference2 < -0.1) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        if (difference2 < -0.1) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference3 < -0.1) {\n            gradeLetters.Add(\"\
    A-\");\n        }\n        if (difference3 < -0.1) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    A+\");\n        }\n        if (difference < -0.1) {\n            gradeLetters.Add(\"\
    A\");\n        }\n        return gradeLetters;", "        List<string> gradeLetters\
    \ = new List<string>();\n        float sum = 0;\n        foreach (float grade\
    \ in grades) {\n            sum += grade;\n        }\n        float average =\
    \ sum / grades.Count;\n        float difference = average - grades.Average();\n\
    \        float differenceSquare = difference * difference;\n        float gradeDifference\
    \ = average - grades.First();\n        float gradeDifferenceSquare = gradeDifference\
    \ * gradeDifference;\n        float gradeDifferenceSquareRoot = gradeDifferenceSquare\
    \ * gradeDifferenceSquare;\n        float gradeDifferenceSquareRoot2 = gradeDifferenceSquareRoot\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot3 = gradeDifferenceSquareRoot2\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot4 = gradeDifferenceSquareRoot3\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot5 = gradeDifferenceSquareRoot4\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot6 = gradeDifferenceSquareRoot5\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot7 = gradeDifferenceSquareRoot6\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot8 = gradeDifferenceSquareRoot7\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot9 = gradeDifferenceSquareRoot8\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot10 = gradeDifferenceSquareRoot9\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot11 = gradeDifferenceSquareRoot10\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot12 = gradeDifferenceSquareRoot11\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot13 = gradeDifferenceSquareRoot12\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot14 = gradeDifferenceSquareRoot13\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot15 = gradeDifferenceSquareRoot14\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot16 = gradeDifferenceSquareRoot15\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot17 = gradeDifferenceSquareRoot16\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot18 = gradeDifferenceSquareRoot17\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot19 = gradeDifferenceSquareRoot18\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot20 = gradeDifferenceSquareRoot19\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot21 = gradeDifferenceSquareRoot20\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifferenceSquareRoot22 = gradeDifferenceSquareRoot21\
    \ * gradeDifferenceSquareRoot;\n        float gradeDifference", "        List<string>\
    \ gradeLetters = new List<string>();\n        float sum = 0;\n        foreach\
    \ (float grade in grades) {\n            sum += grade;\n        }\n        float\
    \ average = sum / grades.Count;\n        foreach (float grade in grades) {\n \
    \           float difference = grade - average;\n            if (difference <\
    \ -0.7) {\n                gradeLetters.Add(\"D-\");\n            }\n        \
    \    else if (difference < -0.3) {\n                gradeLetters.Add(\"C-\");\n\
    \            }\n            else if (difference < -0.1) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 0.0) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 0.1) {\n                gradeLetters.Add(\"B-\");\n            }\n       \
    \     else if (difference < 0.2) {\n                gradeLetters.Add(\"B-\");\n\
    \            }\n            else if (difference < 0.3) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 0.4) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 0.5) {\n                gradeLetters.Add(\"B-\");\n            }\n       \
    \     else if (difference < 0.6) {\n                gradeLetters.Add(\"B-\");\n\
    \            }\n            else if (difference < 0.7) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 0.8) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 0.9) {\n                gradeLetters.Add(\"B-\");\n            }\n       \
    \     else if (difference < 1.0) {\n                gradeLetters.Add(\"B-\");\n\
    \            }\n            else if (difference < 1.1) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 1.2) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 1.3) {\n                gradeLetters.Add(\"B-\");\n            }\n       \
    \     else if (difference < 1.4) {\n                gradeLetters.Add(\"B-\");\n\
    \            }\n            else if (difference < 1.5) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 1.6) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 1.7) {\n                gradeLetters.Add(\"B-\");\n            }\n       \
    \     else if (difference < 1.8) {\n                gradeLetters.Add(\"B-\");\n\
    \            }\n            else if (difference < 1.9) {\n                gradeLetters.Add(\"\
    B-\");\n            }\n            else if (difference < 2.0) {\n            \
    \    gradeLetters.Add(\"B-\");\n            }\n            else if (difference\
    \ < 2.1) {\n                gradeLetters.Add(\"B-\");\n", "        List<string>\
    \ gradeLetters = new List<string>();\n        gradeLetters.Add(\"A+\");\n    \
    \    gradeLetters.Add(\"B\");\n        gradeLetters.Add(\"B-\");\n        gradeLetters.Add(\"\
    C\");\n        gradeLetters.Add(\"C-\");\n        gradeLetters.Add(\"D\");\n \
    \       gradeLetters.Add(\"D+\");\n        gradeLetters.Add(\"E\");\n        gradeLetters.Add(\"\
    F\");\n        gradeLetters.Add(\"F-\");\n        gradeLetters.Add(\"G\");\n \
    \       gradeLetters.Add(\"G+\");\n        gradeLetters.Add(\"H\");\n        gradeLetters.Add(\"\
    H-\");\n        gradeLetters.Add(\"I\");\n        gradeLetters.Add(\"I+\");\n\
    \        gradeLetters.Add(\"J\");\n        gradeLetters.Add(\"J-\");\n       \
    \ gradeLetters.Add(\"K\");\n        gradeLetters.Add(\"K+\");\n        gradeLetters.Add(\"\
    L\");\n        gradeLetters.Add(\"L+\");\n        gradeLetters.Add(\"M\");\n \
    \       gradeLetters.Add(\"M+\");\n        gradeLetters.Add(\"N\");\n        gradeLetters.Add(\"\
    N+\");\n        gradeLetters.Add(\"O\");\n        gradeLetters.Add(\"O+\");\n\
    \        gradeLetters.Add(\"P\");\n        gradeLetters.Add(\"P+\");\n       \
    \ gradeLetters.Add(\"Q\");\n        gradeLetters.Add(\"Q+\");\n        gradeLetters.Add(\"\
    R\");\n        gradeLetters.Add(\"R+\");\n        gradeLetters.Add(\"S\");\n \
    \       gradeLetters.Add(\"S+\");\n        gradeLetters.Add(\"T\");\n        gradeLetters.Add(\"\
    T+\");\n        gradeLetters.Add(\"U\");\n        gradeLetters.Add(\"U+\");\n\
    \        gradeLetters.Add(\"V\");\n        gradeLetters.Add(\"V+\");\n       \
    \ gradeLetters.Add(\"W\");\n        gradeLetters.Add(\"W+\");\n        gradeLetters.Add(\"\
    X\");\n        gradeLetters.Add(\"X+\");\n        gradeLetters.Add(\"Y\");\n \
    \       gradeLetters.Add(\"Y+\");\n        gradeLetters.Add(\"Z\");\n        gradeLetters.Add(\"\
    Z+\");\n        gradeLetters.Add(\"A\");\n        gradeLetters.Add(\"A+\");\n\
    \        gradeLetters.Add(\"B\");\n", "        List<string> gradeLetters = new\
    \ List<string>();\n        float sum = 0;\n        foreach (float grade in grades)\
    \ {\n            sum += grade;\n        }\n        float average = sum / grades.Count;\n\
    \        float gpa = average;\n        float difference = average - gpa;\n   \
    \     float difference2 = average - gpa * 2;\n        float difference3 = average\
    \ - gpa * 3;\n        float difference4 = average - gpa * 4;\n        float difference5\
    \ = average - gpa * 5;\n        float difference6 = average - gpa * 6;\n     \
    \   float difference7 = average - gpa * 7;\n        float difference8 = average\
    \ - gpa * 8;\n        float difference9 = average - gpa * 9;\n        float difference10\
    \ = average - gpa * 10;\n        float difference11 = average - gpa * 11;\n  \
    \      float difference12 = average - gpa * 12;\n        float difference13 =\
    \ average - gpa * 13;\n        float difference14 = average - gpa * 14;\n    \
    \    float difference15 = average - gpa * 15;\n        float difference16 = average\
    \ - gpa * 16;\n        float difference17 = average - gpa * 17;\n        float\
    \ difference18 = average - gpa * 18;\n        float difference19 = average - gpa\
    \ * 19;\n        float difference20 = average - gpa * 20;\n        float difference21\
    \ = average - gpa * 21;\n        float difference22 = average - gpa * 22;\n  \
    \      float difference23 = average - gpa * 23;\n        float difference24 =\
    \ average - gpa * 24;\n        float difference25 = average - gpa * 25;\n    \
    \    float difference26 = average - gpa * 26;\n        float difference27 = average\
    \ - gpa * 27;\n        float difference28 = average - gpa * 28;\n        float\
    \ difference29 = average - gpa * 29;\n        float difference30 = average - gpa\
    \ * 30;\n        float difference31 = average - gpa * 31;\n        float difference32\
    \ = average - gpa * 32;\n        float difference33 = average - gpa * 33;\n  \
    \      float difference34 = average - gpa * 34;\n        float difference35 =\
    \ average - gpa * 35;\n        float difference36 = average - gpa * 36;\n    \
    \    float difference37 = average - gpa * 37;\n        float difference38 = average\
    \ - gpa * 38"]
stop_tokens:
- "\n    }\n"

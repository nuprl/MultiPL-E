language: cs
name: HumanEval_47_median
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0;\n        foreach\
    \ (var item in l) {\n            sum += item;\n        }\n        float median\
    \ = sum / l.Count;\n        return median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d18518e8b3a4fbbb9e48cc523bdbbe7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5d18518e8b3a4fbbb9e48cc523bdbbe7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = 0;\n        long\
    \ total = 0;\n        foreach (long x in l) {\n            total += x;\n     \
    \   }\n        if (total % 2 == 0) {\n            median = (long)((float)l.Sort((a,\
    \ b) => b - a).Skip(l.Count / 2).First() + l.Sort((a, b) => a - b).Skip(l.Count\
    \ / 2).First()) / 2;\n        } else {\n            median = (long)((float)l.Sort((a,\
    \ b) => b - a).Skip(l.Count / 2).Last() + l.Sort((a, b) => a - b).Skip(l.Count\
    \ / 2).Last()) / 2;\n        }\n        return (float)median;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp305o7fxp.cs(21,53): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp305o7fxp.cs(21,53): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp305o7fxp.cs(21,59): error CS0023: Operator ''.'' cannot be applied to
    operand of type ''void''

    /tmp/tmp305o7fxp.cs(21,105): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp305o7fxp.cs(21,105): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp305o7fxp.cs(21,111): error CS0023: Operator ''.'' cannot be applied to
    operand of type ''void''

    /tmp/tmp305o7fxp.cs(23,53): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp305o7fxp.cs(23,53): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp305o7fxp.cs(23,59): error CS0023: Operator ''.'' cannot be applied to
    operand of type ''void''

    /tmp/tmp305o7fxp.cs(23,104): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp305o7fxp.cs(23,104): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp305o7fxp.cs(23,110): error CS0023: Operator ''.'' cannot be applied to
    operand of type ''void''

    '
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median;\n        long medianIndex;\n\
    \        long medianCount;\n        long medianCount2;\n        long medianCount3;\n\
    \        long medianCount4;\n        long medianCount5;\n        long medianCount6;\n\
    \        long medianCount7;\n        long medianCount8;\n        long medianCount9;\n\
    \        long medianCount10;\n        long medianCount11;\n        long medianCount12;\n\
    \        long medianCount13;\n        long medianCount14;\n        long medianCount15;\n\
    \        long medianCount16;\n        long medianCount17;\n        long medianCount18;\n\
    \        long medianCount19;\n        long medianCount20;\n        long medianCount21;\n\
    \        long medianCount22;\n        long medianCount23;\n        long medianCount24;\n\
    \        long medianCount25;\n        long medianCount26;\n        long medianCount27;\n\
    \        long medianCount28;\n        long medianCount29;\n        long medianCount30;\n\
    \        long medianCount31;\n        long medianCount32;\n        long medianCount33;\n\
    \        long medianCount34;\n        long medianCount35;\n        long medianCount36;\n\
    \        long medianCount37;\n        long medianCount38;\n        long medianCount39;\n\
    \        long medianCount40;\n        long medianCount41;\n        long medianCount42;\n\
    \        long medianCount43;\n        long medianCount44;\n        long medianCount45;\n\
    \        long medianCount46;\n        long medianCount47;\n        long medianCount48;\n\
    \        long medianCount49;\n        long medianCount50;\n        long medianCount51;\n\
    \        long medianCount52;\n        long medianCount53;\n        long medianCount54;\n\
    \        long medianCount55;\n        long medianCount56;\n        long medianCount57;\n\
    \        long medianCount58;\n        long medianCount59;\n        long medianCount60;\n\
    \        long medianCount61;\n        long medianCount62;\n        long medianCount63;\n\
    \        long medianCount64;\n        long medianCount65;\n        long medianCount66;\n\
    \        long medianCount67;\n        long medianCount68;\n        long medianCount69;\n\
    \        long medianCount70;\n        long medianCount71;\n        long medianCount72;\n\
    \        long medianCount73;\n        long medianCount74;\n        long medianCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp77bsylvf.cs(91,25): error CS1002: ; expected

    '
  timestamp: 1659792552
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0;\n        long count\
    \ = 0;\n        foreach (long x in l) {\n            sum += x;\n            count++;\n\
    \        }\n        if (count == 0) {\n            return (float)0;\n        }\n\
    \        float median = (float)sum / count;\n        return median;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)-10L, (long)4L, (long)6L,\
    \ (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09a6795422d64e43a1a4f6380de12bb2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <09a6795422d64e43a1a4f6380de12bb2>:0 \n"
  stdout: ''
  timestamp: 1659792555
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = l.Count > 0 ? l.OrderBy(x\
    \ => x).Skip(l.Count / 2).Take(1).LastOrDefault() : 0L;\n        return median\
    \ == 0L ? 0f : median;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab9e8f1a96547dfa9b298a4bd36427c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2ab9e8f1a96547dfa9b298a4bd36427c>:0 \n"
  stdout: ''
  timestamp: 1659792755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0;\n        long count\
    \ = 0;\n        foreach (long x in l) {\n            sum += x;\n            count++;\n\
    \        }\n        if (count == 0) {\n            return (float)0.0;\n      \
    \  }\n        float median = (float)sum / count;\n        return median;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a9d307d2174933b0aa2cc5a7c531fc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a9d307d2174933b0aa2cc5a7c531fc>:0 \n"
  stdout: ''
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        if (l.Count == 0) return 0f;\n\
    \        long middle = l.Count / 2;\n        float median = 0f;\n        long\
    \ left = 0L;\n        long right = 0L;\n        foreach (long x in l) {\n    \
    \        if (x < left) left = x;\n            if (x > right) right = x;\n    \
    \    }\n        if (left == right) return 0f;\n        float leftMedian = Median(new\
    \ List<long>(l.Take(middle)));\n        float rightMedian = Median(new List<long>(l.Skip(middle).Take(middle)));\n\
    \        median = (left + right) / 2f;\n        if (leftMedian > rightMedian)\
    \ median = leftMedian;\n        return median;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp67pb7woi.cs(25,57): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp67pb7woi.cs(26,58): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = 0;\n        long\
    \ count = 0;\n        foreach (long x in l) {\n            count += x;\n     \
    \   }\n        if (count % 2 == 0) {\n            median = (long)((double)l.ElementAt(count\
    \ / 2) - l.ElementAt(count / 2 + 1));\n        } else {\n            median =\
    \ (long)((double)l.ElementAt(count / 2) + l.ElementAt(count / 2 + 1));\n     \
    \   }\n        return (float)median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd9z5uhgp.cs(21,49): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpd9z5uhgp.cs(21,74): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpd9z5uhgp.cs(23,49): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpd9z5uhgp.cs(23,74): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659792755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long sum = 0;\n        long count\
    \ = 0;\n        foreach (long x in l) {\n            sum += x;\n            count++;\n\
    \        }\n        if (count == 0) return (float)0;\n        float median = (float)sum\
    \ / count;\n        return median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bc26b9e0c786444191f5ae4c2cb1ff41>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bc26b9e0c786444191f5ae4c2cb1ff41>:0 \n"
  stdout: ''
  timestamp: 1659792555
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        float median;\n\
    \        if (l.Count % 2 == 0) {\n            median = (float)(l[l.Count / 2]\
    \ + l[l.Count / 2 - 1]) / 2;\n        } else {\n            median = l[l.Count\
    \ / 2];\n        }\n        return median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median = 0;\n        long\
    \ largest = l.Max();\n        long smallest = l.Min();\n        if (largest ==\
    \ smallest) {\n            return (float)largest;\n        }\n        float average\
    \ = (float)((largest + smallest) / 2);\n        float difference = average - l.Average();\n\
    \        if (difference < 0) {\n            difference = difference * -1;\n  \
    \      }\n        float difference2 = average - l.Sum() / l.Count;\n        if\
    \ (difference2 < 0) {\n            difference2 = difference2 * -1;\n        }\n\
    \        float difference3 = average - l.Sum(x => x) / l.Count;\n        if (difference3\
    \ < 0) {\n            difference3 = difference3 * -1;\n        }\n        float\
    \ difference4 = average - l.Sum(x => Math.Pow(x, 2)) / l.Count;\n        if (difference4\
    \ < 0) {\n            difference4 = difference4 * -1;\n        }\n        float\
    \ difference5 = average - l.Sum(x => Math.Pow(x, 3)) / l.Count;\n        if (difference5\
    \ < 0) {\n            difference5 = difference5 * -1;\n        }\n        float\
    \ difference6 = average - l.Sum(x => Math.Pow(x, 4)) / l.Count;\n        if (difference6\
    \ < 0) {\n            difference6 = difference6 * -1;\n        }\n        float\
    \ difference7 = average - l.Sum(x => Math.Pow(x, 5)) / l.Count;\n        if (difference7\
    \ < 0) {\n            difference7 = difference7 * -1;\n        }\n        float\
    \ difference8 = average - l.Sum(x => Math.Pow(x, 6)) / l.Count;\n        if (difference8\
    \ < 0) {\n            difference8 = difference8 * -1;\n        }\n        float\
    \ difference9 = average - l.Sum(x => Math.Pow(x, 7)) / l.Count;\n        if (difference9\
    \ < 0) {\n            difference9 = difference9 * -1;\n        }\n        float\
    \ difference10 = average - l.Sum(x => Math.Pow(x, 8)) / l.Count;\n        if (difference10\
    \ < 0) {\n            difference10 = difference10 * -1;\n        }\n        float\
    \ difference11 = average - l.Sum(x => Math.Pow(x, 9)) / l.Count;\n        if (difference11\
    \ < 0) {\n            difference11 = difference11 * -1;\n        }\n        float\
    \ difference12 = average - l.Sum(x => Math.Pow(x, 10)) / l.Count;\n        if\
    \ (difference12 < 0) {\n            difference12 = difference12 * -1;\n      \
    \  }\n        float difference13 = average - l.Sum(x => Math.Pow(x, 11)) / l.Count;\n\
    \        if (difference13 < 0) {\n            difference13 = difference13 * -1;\n\
    \        }\n        float difference14 = average - l.Sum(x => Math.Pow(x, 12))\
    \ / l.Count;\n        if (difference14 < 0) {\n            difference14 = difference14\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuj8qg6vs.cs(76,40): error CS1002: ; expected

    /tmp/tmpuj8qg6vs.cs(78,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpuj8qg6vs.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659792755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = 0;\n        long\
    \ count = 0;\n        foreach (long x in l) {\n            count++;\n        \
    \    if (count % 2 == 0) {\n                median = (median + x) / 2;\n     \
    \       } else {\n                median = x;\n            }\n        }\n    \
    \    return (float)median;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e78056c8da384d16bafde62e49ccf1d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e78056c8da384d16bafde62e49ccf1d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792553
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long n = l.Count;\n        if (n\
    \ < 2) return 0f;\n        long mid = n / 2;\n        float median = 0;\n    \
    \    foreach (long x in l) {\n            if (x < mid) median += x;\n        \
    \    else if (x > mid) median -= x;\n        }\n        return median / n;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9866071bdb9c470ba25d798aa2bec1a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9866071bdb9c470ba25d798aa2bec1a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        l.Sort();\n        float median;\n\
    \        if (l.Count % 2 == 0) {\n            median = (float)l.ElementAt(l.Count\
    \ / 2);\n        } else {\n            median = (float)l.ElementAt(l.Count / 2\
    \ - 1);\n        }\n        return median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <53792a9d40a64f51b6395bfdc68a7d90>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <53792a9d40a64f51b6395bfdc68a7d90>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Linq.Enumerable.ElementAt[TSource] (System"
  stdout: ''
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median;\n        if (l.Count\
    \ % 2 == 0) {\n            median = (float)l.GetValue(l.Count / 2);\n        }\
    \ else {\n            median = (float)l.GetValue((l.Count - 1) / 2);\n       \
    \ }\n        return median;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpohd0yssq.cs(17,31): error CS1061: ''List<long>'' does not contain a definition
    for ''GetValue'' and no accessible extension method ''GetValue'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpohd0yssq.cs(19,31): error CS1061: ''List<long>'' does not contain a definition
    for ''GetValue'' and no accessible extension method ''GetValue'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659792755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = 0;\n        long\
    \ count = 0;\n        foreach (long i in l) {\n            count += 1;\n     \
    \       if (count % 2 == 0) {\n                median += i;\n            }\n \
    \       }\n        if (count % 2 == 1) {\n            median += l.Last();\n  \
    \      }\n        return (float)median;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L,\
    \ (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4a6285522e354e7dba4f15f5bc1446a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4a6285522e354e7dba4f15f5bc1446a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792556
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median;\n        long medianIndex;\n\
    \        long medianCount;\n        long min;\n        long max;\n        long\
    \ sum;\n        long sumOfSquares;\n        long sumOfSquaresOfSquares;\n    \
    \    long count;\n        long countOfSquares;\n        long countOfSquaresOfSquares;\n\
    \        long countOfElements;\n        long countOfElementsOfSquares;\n     \
    \   long countOfElementsOfSquaresOfSquares;\n        long countOfElementsOfElements;\n\
    \        long countOfElementsOfElementsOfSquares;\n        long countOfElementsOfElementsOfSquaresOfSquares;\n\
    \        long countOfElementsOfElementsOfElements;\n        long countOfElementsOfElementsOfElementsOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfSquaresOfSquares;\n       \
    \ long countOfElementsOfElementsOfElementsOfElements;\n        long countOfElementsOfElementsOfElementsOfElementsOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfSquaresOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElements;\n     \
    \   long countOfElementsOfElementsOfElementsOfElementsOfElementsOfSquares;\n \
    \       long countOfElementsOfElementsOfElementsOfElementsOfElementsOfSquaresOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfSquaresOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElements;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfSquaresOfSquares;\n\
    \        long countOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElementsOfElement\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfdfg9xd8.cs(47,98): error CS1002: ; expected

    '
  timestamp: 1659792755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median;\n        long medianIndex;\n\
    \        long medianCount;\n        long medianCount2;\n        long medianCount3;\n\
    \        long medianCount4;\n        long medianCount5;\n        long medianCount6;\n\
    \        long medianCount7;\n        long medianCount8;\n        long medianCount9;\n\
    \        long medianCount10;\n        long medianCount11;\n        long medianCount12;\n\
    \        long medianCount13;\n        long medianCount14;\n        long medianCount15;\n\
    \        long medianCount16;\n        long medianCount17;\n        long medianCount18;\n\
    \        long medianCount19;\n        long medianCount20;\n        long medianCount21;\n\
    \        long medianCount22;\n        long medianCount23;\n        long medianCount24;\n\
    \        long medianCount25;\n        long medianCount26;\n        long medianCount27;\n\
    \        long medianCount28;\n        long medianCount29;\n        long medianCount30;\n\
    \        long medianCount31;\n        long medianCount32;\n        long medianCount33;\n\
    \        long medianCount34;\n        long medianCount35;\n        long medianCount36;\n\
    \        long medianCount37;\n        long medianCount38;\n        long medianCount39;\n\
    \        long medianCount40;\n        long medianCount41;\n        long medianCount42;\n\
    \        long medianCount43;\n        long medianCount44;\n        long medianCount45;\n\
    \        long medianCount46;\n        long medianCount47;\n        long medianCount48;\n\
    \        long medianCount49;\n        long medianCount50;\n        long medianCount51;\n\
    \        long medianCount52;\n        long medianCount53;\n        long medianCount54;\n\
    \        long medianCount55;\n        long medianCount56;\n        long medianCount57;\n\
    \        long medianCount58;\n        long medianCount59;\n        long medianCount60;\n\
    \        long medianCount61;\n        long medianCount62;\n        long medianCount63;\n\
    \        long medianCount64;\n        long medianCount65;\n        long medianCount66;\n\
    \        long medianCount67;\n        long medianCount68;\n        long medianCount69;\n\
    \        long medianCount70;\n        long medianCount71;\n        long medianCount72;\n\
    \        long medianCount73;\n        long medianCount74;\n        long medianCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))) ==\
    \ (float)3L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)-10L,\
    \ (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L}))) == (8.0f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)5L}))) == (float)5L);\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)6L, (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new\
    \ List<long>(new long[]{(long)8L, (long)1L, (long)3L, (long)9L, (long)9L, (long)2L,\
    \ (long)7L}))) == (float)7L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp77bsylvf.cs(91,25): error CS1002: ; expected

    '
  timestamp: 1659792552
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        float median;\n        if (l.Count\
    \ % 2 == 0) {\n            median = (float)l.ElementAt(l.Count / 2);\n       \
    \ } else {\n            median = (float)l.ElementAt(l.Count / 2 + 1);\n      \
    \  }\n        return median;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb9f57f9159b41e0967c449a6d313a75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb9f57f9159b41e0967c449a6d313a75>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item\
    \ (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ System.Linq.Enumerable.ElementAt[TSource] (System"
  stdout: ''
  timestamp: 1659792556
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> Median((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L})))\n\
    \    // (float)3L\n    // >>> Median((new List<long>(new long[]{(long)-10L, (long)4L,\
    \ (long)6L, (long)1000L, (long)10L, (long)20L})))\n    // (15.0f)\n    public\
    \ static float Median(List<long> l) {\n        long median = 0;\n        long\
    \ count = 0;\n        foreach (long x in l) {\n            count += 1;\n     \
    \       if (count % 2 == 0) {\n                median += x;\n            }\n \
    \       }\n        if (count % 2 == 0) {\n            median /= 2;\n        }\n\
    \        return (float)median;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Median((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))) == (float)3L);\n    Debug.Assert(Median((new List<long>(new\
    \ long[]{(long)-10L, (long)4L, (long)6L, (long)1000L, (long)10L, (long)20L})))\
    \ == (8.0f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)5L})))\
    \ == (float)5L);\n    Debug.Assert(Median((new List<long>(new long[]{(long)6L,\
    \ (long)5L}))) == (5.5f));\n    Debug.Assert(Median((new List<long>(new long[]{(long)8L,\
    \ (long)1L, (long)3L, (long)9L, (long)9L, (long)2L, (long)7L}))) == (float)7L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <311e12f485ff4b3ea808dae06c4bc25b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <311e12f485ff4b3ea808dae06c4bc25b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659792755

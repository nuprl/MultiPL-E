name: HumanEval_135_can_arrange
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function which returns the largest index of an element\
  \ which\n    // is not greater than or equal to the element immediately preceding\
  \ it. If\n    // no such element exists then return -1. The given array will not\
  \ contain\n    // duplicate values.\n    // Examples:\n    // >>> CanArrange((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L})))\n \
  \   // (3L)\n    // >>> CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)3L})))\n    // (-1L)\n    public static long CanArrange(List<long> arr)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
  \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
  \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L,\
  \ (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L,\
  \ (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
  \ List<long>())) == (-1L));\n    }\n\n}\n"
completions: ["        long maxIndex = -1;\n        long maxValue = arr[0];\n    \
    \    for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        foreach (long i in arr) {\n         \
    \   if (currentIndex == maxIndex) {\n                maxIndex = i;\n         \
    \   }\n            else if (currentIndex < maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n            currentIndex++;\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ arr.First();\n        long index = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                largest = arr[i];\n\
    \                index = i;\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentMax\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                currentMax = i;\n    \
    \        }\n            if (currentIndex > i) {\n                currentMax =\
    \ i;\n                currentIndex = i;\n            }\n        }\n        if\
    \ (currentIndex != -1) {\n            currentMax = currentIndex;\n        }\n\
    \        return currentMax;", "        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        long previousValue = -1;\n \
    \       foreach (long value in arr) {\n            if (currentValue < value) {\n\
    \                currentIndex = currentValue;\n                currentValue =\
    \ value;\n            }\n            if (currentValue == value) {\n          \
    \      currentIndex++;\n            }\n            if (currentIndex > maxIndex)\
    \ {\n                maxIndex = currentIndex;\n            }\n            if (currentIndex\
    \ > previousIndex) {\n                previousIndex = currentIndex;\n        \
    \    }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long currentIndex = 0;\n        long currentMax\
    \ = arr[0];\n        foreach (long item in arr) {\n            if (item > currentMax)\
    \ {\n                currentMax = item;\n                currentIndex = currentMax;\n\
    \            }\n            if (item == currentMax) {\n                currentIndex++;\n\
    \            }\n            if (currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex =\
    \ arr.Count - 1;\n        long currentValue = arr[currentIndex];\n        while\
    \ (currentIndex >= 0) {\n            if (currentValue <= maxValue) {\n       \
    \         currentIndex--;\n                currentValue = arr[currentIndex];\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    maxValue = currentValue;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n            if (arr[i] < currentValue) {\n            \
    \    currentValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        foreach (long value in arr) {\n            if (currentValue <\
    \ value) {\n                currentIndex = currentValue;\n                currentValue\
    \ = value;\n            }\n            if (currentValue == value) {\n        \
    \        currentIndex++;\n            }\n            if (currentIndex > maxIndex)\
    \ {\n                maxIndex = currentIndex;\n            }\n            if (currentValue\
    \ > previousValue) {\n                previousValue = currentValue;\n        \
    \    }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n \
    \       long currentIndex = -1;\n        long currentValue = -1;\n        foreach\
    \ (var item in arr) {\n            if (currentIndex == -1) {\n               \
    \ currentIndex = item;\n                currentValue = item;\n            }\n\
    \            if (item > currentValue) {\n                currentIndex = item;\n\
    \                currentValue = item;\n            }\n        }\n        if (currentIndex\
    \ != -1) {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = -1;\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        long currentValue = arr[0];\n\
    \        bool found = false;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > currentValue) {\n                found = true;\n   \
    \             currentValue = arr[i];\n            }\n            if (found &&\
    \ currentValue > maxValue) {\n                maxIndex = i;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        foreach (long\
    \ i in arr) {\n            if (i > max) {\n                max = i;\n        \
    \        maxIndex = arr.IndexOf(max);\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n     \
    \   bool found = false;\n        while (currentIndex >= 0) {\n            if (arr[currentIndex]\
    \ <= arr[currentIndex - 1]) {\n                found = true;\n               \
    \ break;\n            }\n            currentIndex--;\n        }\n        if (found)\
    \ {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long max = -1;\n        long maxIndex = -1;\n        foreach (var item\
    \ in arr) {\n            if (item > max) {\n                max = item;\n    \
    \            maxIndex = arr.IndexOf(item);\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        long currentValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n            if (arr[i] < currentValue)\
    \ {\n                currentValue = arr[i];\n            }\n        }\n      \
    \  return maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = arr[i];\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr.First();\n        foreach (long val in arr) {\n   \
    \         if (val > maxVal) {\n                maxIndex = maxVal;\n          \
    \      maxVal = val;\n            } else if (val == maxVal) {\n              \
    \  maxIndex++;\n            }\n        }\n        return maxIndex;", "       \
    \ long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n        long\
    \ currentValue = arr[0];\n        while (currentIndex >= 0) {\n            if\
    \ (currentValue < arr[currentIndex]) {\n                currentIndex--;\n    \
    \        } else {\n                currentValue = arr[currentIndex];\n       \
    \         maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (currentValue < arr[i]) {\n                currentIndex\
    \ = i;\n                currentValue = arr[i];\n            }\n            if\
    \ (currentValue == arr[i]) {\n                found = true;\n            }\n \
    \           if (found && currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxIndex = i;\n                maxValue = arr[i];\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = -1;\n        long previousIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                previousIndex = i;\n \
    \           }\n            if (currentIndex > previousIndex) {\n             \
    \   maxIndex = currentIndex;\n            }\n            currentIndex = i;\n \
    \           previousIndex = i;\n        }\n        return maxIndex;", "      \
    \  long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n           \
    \     maxIndex = i;\n                maxValue = arr[i];\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentValue = arr[0];\n        while (currentIndex < arr.Count)\
    \ {\n            currentValue = arr[currentIndex];\n            if (currentValue\
    \ >= currentIndex) {\n                currentIndex++;\n            } else {\n\
    \                maxIndex = currentIndex;\n                break;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxIndex = i;\n       \
    \         maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue =\
    \ arr[0];\n        bool found = false;\n        foreach (long value in arr) {\n\
    \            if (value > currentValue) {\n                currentIndex = currentValue;\n\
    \                currentValue = value;\n                found = true;\n      \
    \      }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = 0;\n        long currentValue = arr[0];\n        bool found =\
    \ false;\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentValue = value;\n                currentIndex = currentValue;\n\
    \                found = false;\n            }\n            if (value == currentValue)\
    \ {\n                found = true;\n            }\n            if (found) {\n\
    \                maxIndex = Math.Max(maxIndex, currentIndex);\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        foreach (var item\
    \ in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = item;\n                currentValue = item;\n            }\n            if\
    \ (item > currentValue) {\n                currentIndex = item;\n            \
    \    currentValue = item;\n            }\n        }\n        if (currentIndex\
    \ != -1) {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long largest = -1;\n        long current = arr.First();\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > current) {\n        \
    \        largest = i;\n                current = arr[i];\n            }\n    \
    \    }\n        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = -1;\n        long\
    \ previousValue = -1;\n        bool isFirst = true;\n        foreach (long value\
    \ in arr) {\n            if (isFirst) {\n                currentIndex = value;\n\
    \                currentValue = value;\n                isFirst = false;\n   \
    \         }\n            else {\n                if (value > currentValue) {\n\
    \                    currentIndex = value;\n                    currentValue =\
    \ value;\n                }\n            }\n        }\n        if (currentIndex\
    \ > 0) {\n            previousValue = arr[currentIndex - 1];\n            if (currentIndex\
    \ < arr.Count - 1) {\n                long nextValue = arr[currentIndex + 1];\n\
    \                if (currentValue > previousValue && currentValue < nextValue)\
    \ {\n                    maxIndex = currentIndex;\n                }\n       \
    \     }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxIndex = i;\n                maxValue = arr[i];\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long previous = arr.First();\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > largest) {\n                largest = arr[i];\n\
    \                previous = arr[i];\n            } else if (arr[i] < largest)\
    \ {\n                previous = largest;\n                largest = arr[i];\n\
    \            }\n        }\n        return previous;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] >= max) {\n                max = arr[i];\n           \
    \     maxIndex = i;\n            }\n        }\n        return maxIndex;", "  \
    \      long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long current = arr.First();\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (current > arr[i])\
    \ {\n                largest = i;\n            }\n            current = arr[i];\n\
    \        }\n        return largest;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n            if (arr[i] < currentValue) {\n            \
    \    currentValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        bool found = false;\n\
    \        foreach (var item in arr) {\n            if (currentValue < item) {\n\
    \                currentIndex = currentValue;\n                currentValue =\
    \ item;\n            }\n            if (item >= currentValue) {\n            \
    \    found = true;\n            }\n        }\n        if (found) {\n         \
    \   maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ largest = arr.First();\n        long index = arr.IndexOf(largest);\n       \
    \ long previous = arr.ElementAtOrDefault(index - 1);\n        if (previous >=\
    \ largest) {\n            return -1;\n        }\n        return index;", "   \
    \     long max = arr.First();\n        long maxIndex = -1;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      return maxIndex;", "        long max = arr.First();\n        long maxIndex\
    \ = 0;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ >= max) {\n                max = arr[i];\n                maxIndex = i;\n  \
    \          }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        foreach (long\
    \ element in arr) {\n            if (element <= arr[currentIndex]) {\n       \
    \         currentIndex++;\n            } else {\n                maxIndex = currentIndex;\n\
    \                currentIndex++;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n     \
    \   long currentValue = arr[currentIndex];\n        while (currentIndex > 0) {\n\
    \            if (currentValue < arr[currentIndex - 1]) {\n                currentIndex--;\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    break;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long currentIndex =\
    \ 0;\n        long maxValue = arr[0];\n        foreach (long value in arr) {\n\
    \            if (value > maxValue) {\n                maxValue = value;\n    \
    \            maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long previous = arr.First();\n        foreach (var item in arr.Skip(1))\
    \ {\n            if (item > largest) {\n                largest = item;\n    \
    \        }\n            if (item < previous) {\n                return -1;\n \
    \           }\n            previous = item;\n        }\n        return largest;",
  "        long largest = arr.First();\n        long index = 0;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n        \
    \        index = i;\n                largest = arr[i];\n            }\n      \
    \  }\n        return index;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentIndex = 0;\n        bool found = false;\n   \
    \     foreach (long value in arr) {\n            if (value > maxValue) {\n   \
    \             maxIndex = currentIndex;\n                maxValue = value;\n  \
    \          }\n            if (value == maxValue) {\n                found = true;\n\
    \            }\n            currentIndex++;\n        }\n        if (!found) {\n\
    \            return -1;\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n\
    \        bool found = false;\n        for (int i = 0; i < arr.Count; i++) {\n\
    \            if (currentValue < arr[i]) {\n                currentValue = arr[i];\n\
    \                currentIndex = i;\n            }\n            if (currentValue\
    \ == arr[i]) {\n                found = true;\n            }\n            if (found\
    \ && currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n  \
    \          }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] <= max) {\n                max = Math.Max(max, arr[i]);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        foreach (var\
    \ item in arr.Skip(1))\n            if (item > max)\n                max = item;\n\
    \            else\n                maxIndex = arr.IndexOf(item);\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.First();\n\
    \        foreach (long value in arr.Skip(1)) {\n            if (value > maxValue)\
    \ {\n                maxIndex = value;\n                maxValue = value;\n  \
    \          }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxVal) {\n                maxIndex = i;\n         \
    \       maxVal = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > currentValue) {\n                currentIndex = i;\n                currentValue\
    \ = arr[i];\n            }\n        }\n        if (currentIndex != -1) {\n   \
    \         maxIndex = currentIndex;\n        }\n        return maxIndex;", "  \
    \      long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        while (currentIndex < arr.Count) {\n            currentValue\
    \ = arr[currentIndex];\n            if (currentValue < currentIndex) {\n     \
    \           currentIndex++;\n            } else if (currentValue > currentIndex)\
    \ {\n                maxIndex = currentIndex;\n                break;\n      \
    \      } else {\n                currentIndex++;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxVal =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxVal) {\n                maxIndex = i;\n                maxVal = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n    \
    \    foreach (long i in arr) {\n            if (currentIndex == -1) {\n      \
    \          currentIndex = i;\n                currentValue = i;\n            }\n\
    \            if (currentValue < i) {\n                currentIndex = i;\n    \
    \            currentValue = i;\n            }\n            if (currentIndex >\
    \ maxIndex) {\n                maxIndex = currentIndex;\n            }\n     \
    \   }\n        return maxIndex;", "        long max = arr.First();\n        long\
    \ maxIndex = -1;\n        foreach (long i in arr) {\n            if (i > max)\
    \ {\n                max = i;\n                maxIndex = arr.IndexOf(max);\n\
    \            }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        foreach (long i in arr) {\n            if\
    \ (i > max) {\n                max = i;\n                maxIndex = arr.IndexOf(max);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       while (currentIndex < arr.Count) {\n            currentValue = arr[currentIndex];\n\
    \            if (currentValue >= currentIndex) {\n                currentIndex++;\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    break;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex =\
    \ -1;\n        long currentValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentValue) {\n                currentIndex\
    \ = i;\n                currentValue = arr[i];\n            }\n            if\
    \ (arr[i] < currentValue && currentIndex != -1) {\n                maxIndex =\
    \ currentIndex;\n                maxValue = currentValue;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] >= maxValue) {\n      \
    \          maxIndex = i;\n                maxValue = arr[i];\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = -1;\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n            if (arr[i] > currentValue) {\n                currentIndex\
    \ = i;\n                currentValue = arr[i];\n            }\n        }\n   \
    \     if (maxIndex == -1) {\n            return -1;\n        }\n        if (currentIndex\
    \ == -1) {\n            return maxIndex;\n        }\n        if (currentIndex\
    \ > maxIndex) {\n            return currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long previousIndex\
    \ = -1;\n        foreach (var item in arr) {\n            if (item > previousIndex)\
    \ {\n                currentIndex = previousIndex;\n            }\n          \
    \  previousIndex = currentIndex;\n            if (item > currentIndex) {\n   \
    \             currentIndex = item;\n            }\n            maxIndex = Math.Max(maxIndex,\
    \ currentIndex);\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long maxValue = arr[0];\n   \
    \     foreach (long value in arr) {\n            if (value > maxValue) {\n   \
    \             maxIndex = currentIndex;\n                maxValue = value;\n  \
    \          }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        foreach (long\
    \ i in arr) {\n            if (i > max) {\n                max = i;\n        \
    \        maxIndex = arr.IndexOf(max);\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentIndex = 0;\n \
    \       long currentValue = arr[0];\n        long previousValue = arr[0];\n  \
    \      for (int i = 1; i < arr.Count; i++) {\n            currentValue = arr[i];\n\
    \            if (currentValue >= previousValue) {\n                currentIndex++;\n\
    \            }\n            previousValue = currentValue;\n            if (currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = 0;\n        long currentValue = arr[0];\n        foreach (long\
    \ value in arr) {\n            if (value > currentValue) {\n                currentIndex\
    \ = currentValue;\n                currentValue = value;\n            }\n    \
    \    }\n        if (currentIndex > maxIndex) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        foreach (var item in arr) {\n            if (item > max) {\n\
    \                max = item;\n                maxIndex = arr.IndexOf(item);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxVal) {\n                maxVal = arr[i];\n      \
    \          maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = 0;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n        \
    \        largest = arr[i];\n                index = i;\n            }\n      \
    \  }\n        return index;", "        long largest = arr.First();\n        long\
    \ index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > largest) {\n                index = i;\n                largest = arr[i];\n\
    \            }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.First();\n        foreach\
    \ (long value in arr) {\n            if (value <= maxValue) {\n              \
    \  maxIndex = arr.IndexOf(value);\n                break;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.First();\n        foreach (long value in arr.Skip(1)) {\n   \
    \         if (value > maxValue) {\n                maxIndex = value;\n       \
    \         maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        foreach (long\
    \ val in arr) {\n            if (val > maxVal) {\n                maxIndex = maxVal;\n\
    \                maxVal = val;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = 0;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] >= max) {\n             \
    \   max = arr[i];\n                maxIndex = i;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = -1;\n        long previousIndex = -1;\n   \
    \     foreach (var item in arr) {\n            if (item > currentIndex) {\n  \
    \              currentIndex = item;\n                previousIndex = currentIndex;\n\
    \            }\n        }\n        if (currentIndex > maxIndex) {\n          \
    \  maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long currentIndex =\
    \ -1;\n        long currentValue = arr[0];\n        bool found = false;\n    \
    \    for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] < currentValue)\
    \ {\n                currentIndex = i;\n                currentValue = arr[i];\n\
    \            }\n            if (arr[i] > currentValue && found == false) {\n \
    \               maxIndex = i;\n                found = true;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                largest = arr[i];\n         \
    \       index = i;\n            }\n        }\n        return index;", "      \
    \  long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = arr.Count - 1;\n        while (currentIndex >= 0) {\n            if (arr[currentIndex]\
    \ > maxValue) {\n                maxValue = arr[currentIndex];\n             \
    \   maxIndex = currentIndex;\n            }\n            currentIndex--;\n   \
    \     }\n        return maxIndex;", "        long max = arr.First();\n       \
    \ long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n       \
    \     if (arr[i] <= max) {\n                max = Math.Max(max, arr[i]);\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > currentValue) {\n                found = true;\n\
    \                currentValue = arr[i];\n            }\n            if (found\
    \ && currentValue > maxValue) {\n                maxIndex = i;\n             \
    \   maxValue = currentValue;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.First();\n        foreach\
    \ (long val in arr) {\n            if (val > maxVal) {\n                maxVal\
    \ = val;\n                maxIndex = arr.IndexOf(val);\n            }\n      \
    \  }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentIndex = -1;\n        foreach (long value in arr)\
    \ {\n            if (value > maxValue) {\n                maxValue = value;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long previousIndex = -1;\n        foreach (long\
    \ i in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = i;\n                previousIndex = i;\n            } else if (currentIndex\
    \ > i) {\n                currentIndex = i;\n                previousIndex = i;\n\
    \            } else if (currentIndex == i) {\n                previousIndex =\
    \ i;\n            }\n        }\n        if (currentIndex > maxIndex) {\n     \
    \       maxIndex = currentIndex;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentIndex = -1;\n        bool found\
    \ = false;\n        foreach (long i in arr) {\n            currentIndex++;\n \
    \           if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                found = true;\n            }\n            if (found && currentIndex\
    \ == maxIndex) {\n                currentIndex = -1;\n                found =\
    \ false;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = -1;\n        long previousIndex = -1;\n \
    \       foreach (var item in arr) {\n            if (item > currentIndex) {\n\
    \                currentIndex = item;\n                previousIndex = currentIndex;\n\
    \            }\n            if (item > maxIndex) {\n                maxIndex =\
    \ item;\n            }\n        }\n        if (maxIndex == -1) {\n           \
    \ return -1;\n        }\n        if (maxIndex < previousIndex) {\n           \
    \ return -1;\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr.First();\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxVal) {\n                maxIndex = i;\n     \
    \           maxVal = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                currentValue = i;\n  \
    \          }\n            if (currentValue > i) {\n                currentIndex\
    \ = i;\n                currentValue = i;\n            }\n        }\n        if\
    \ (currentIndex != -1) {\n            maxIndex = currentIndex;\n        }\n  \
    \      return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        long currentIndex = 0;\n        foreach (long value in arr) {\n     \
    \       if (value > maxValue) {\n                maxValue = value;\n         \
    \       maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        long previousValue = arr[0];\n        bool found = false;\n\
    \        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentValue = value;\n                currentIndex = currentValue;\n\
    \                found = false;\n            }\n            else if (value < previousValue)\
    \ {\n                currentIndex = currentValue;\n                currentValue\
    \ = value;\n                found = true;\n            }\n            else if\
    \ (value == previousValue) {\n                currentIndex = currentValue;\n \
    \               currentValue = value;\n                found = true;\n       \
    \     }\n            else {\n                currentIndex = previousValue;\n \
    \               currentValue = previousValue;\n                found = true;\n\
    \            }\n            previousValue = currentValue;\n        }\n       \
    \ if (found) {\n            maxIndex = currentIndex;\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long maxIndex = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] < max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n  \
    \              maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = true;\n\
    \            }\n            if (found) {\n                maxIndex = Math.Max(maxIndex,\
    \ currentIndex);\n            }\n        }\n        return maxIndex;", "     \
    \   long max = arr.First();\n        long maxIndex = -1;\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] >= max) {\n               \
    \ max = arr[i];\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long max = arr.First();\n        long maxIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (i > max) {\n     \
    \           max = i;\n                maxIndex = arr.IndexOf(max);\n         \
    \   }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n  \
    \      long currentIndex = 0;\n        long currentValue = arr[0];\n        foreach\
    \ (long value in arr) {\n            if (value > currentValue) {\n           \
    \     currentValue = value;\n                currentIndex = currentValue;\n  \
    \          }\n            else {\n                currentIndex++;\n          \
    \  }\n            if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       bool found = false;\n        foreach (long value in arr) {\n         \
    \   if (value >= currentValue) {\n                currentIndex = currentValue;\n\
    \                currentValue = value;\n                found = true;\n      \
    \      }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr.First();\n        for\
    \ (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr[i];\n           \
    \ }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxIndex = i;\n                maxValue = arr[i];\n            }\n   \
    \     }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ current = 0;\n        long previous = 0;\n        foreach (long i in arr) {\n\
    \            if (i > current) {\n                largest = current;\n        \
    \        current = i;\n            } else if (i > previous) {\n              \
    \  largest = previous;\n                previous = i;\n            }\n       \
    \ }\n        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = arr.First();\n        long index = arr.IndexOf(largest);\n        if (index\
    \ != -1) {\n            while (index != 0) {\n                largest = arr.ElementAtOrDefault(index\
    \ - 1);\n                index = arr.IndexOf(largest);\n            }\n      \
    \  }\n        return largest;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentValue = arr[0];\n        foreach (long value in arr)\
    \ {\n            if (currentValue < value) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n            }\n            else\
    \ {\n                currentIndex++;\n            }\n            if (currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.First();\n        foreach (long value in arr.Skip(1)) {\n   \
    \         if (value > maxValue) {\n                maxValue = value;\n       \
    \         maxIndex = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentValue = value;\n                currentIndex = currentValue;\n\
    \            }\n        }\n        if (currentIndex > maxIndex) {\n          \
    \  maxIndex = currentIndex;\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxValue\
    \ = arr[i];\n                maxIndex = i;\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr.First();\n\
    \        foreach (long val in arr.Skip(1)) {\n            if (val > maxVal) {\n\
    \                maxVal = val;\n                maxIndex = arr.IndexOf(val);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long max = -1;\n   \
    \     long maxIndex = 0;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        foreach (long i in arr) {\n            if (i <= currentValue)\
    \ {\n                currentIndex++;\n                currentValue = i;\n    \
    \        }\n            if (i > currentValue) {\n                currentIndex++;\n\
    \                currentValue = i;\n            }\n            if (currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n                max\
    \ = currentValue;\n            }\n        }\n        return max;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long max = arr.First();\n        long maxIndex =\
    \ -1;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] >=\
    \ max) {\n                max = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = -1;\n        long previousIndex = -1;\n        foreach\
    \ (long i in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = i;\n                previousIndex = i;\n            }\n            else if\
    \ (currentIndex < i) {\n                currentIndex = i;\n                previousIndex\
    \ = i;\n            }\n            else if (currentIndex > i) {\n            \
    \    if (maxIndex == -1) {\n                    maxIndex = currentIndex;\n   \
    \             }\n                else {\n                    maxIndex = Math.Max(maxIndex,\
    \ currentIndex);\n                }\n                currentIndex = i;\n     \
    \           previousIndex = i;\n            }\n        }\n        if (maxIndex\
    \ == -1) {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = -1;\n        bool found = false;\n\
    \        for (int i = 0; i < arr.Count; i++) {\n            currentIndex = i;\n\
    \            currentValue = arr[i];\n            found = false;\n            for\
    \ (int j = i + 1; j < arr.Count; j++) {\n                if (arr[j] >= currentValue)\
    \ {\n                    currentIndex = j;\n                    currentValue =\
    \ arr[j];\n                    found = true;\n                    break;\n   \
    \             }\n            }\n            if (found) {\n                break;\n\
    \            }\n            maxIndex = Math.Max(maxIndex, currentIndex);\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = currentIndex;\n            }\n            currentIndex++;\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long maxValue = arr[0];\n        foreach (long value in arr) {\n\
    \            if (value > maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = value;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentValue = arr[0];\n        bool found\
    \ = false;\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentIndex = currentValue;\n                currentValue\
    \ = value;\n                found = true;\n            }\n        }\n        if\
    \ (found) {\n            maxIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value <= maxValue)\
    \ {\n                currentIndex++;\n            }\n            if (currentIndex\
    \ == maxIndex) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = value;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal) {\n           \
    \     maxVal = arr[i];\n                maxIndex = i;\n            }\n       \
    \ }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxVal\
    \ = arr[0];\n        long curVal = arr[0];\n        foreach (long val in arr)\
    \ {\n            if (val > maxVal) {\n                maxVal = val;\n        \
    \        maxIndex = curVal;\n            }\n            curVal = val;\n      \
    \  }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.First();\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        long currentIndex = 0;\n        foreach\
    \ (long value in arr) {\n            if (value > maxValue) {\n               \
    \ maxIndex = currentIndex;\n                maxValue = value;\n            }\n\
    \            currentIndex++;\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue =\
    \ arr[0];\n        while (currentIndex < arr.Count - 1) {\n            currentValue\
    \ = arr[currentIndex];\n            if (currentValue < currentIndex) {\n     \
    \           currentIndex++;\n            } else if (currentValue > currentIndex)\
    \ {\n                currentIndex++;\n                maxIndex = currentIndex;\n\
    \            } else {\n                maxIndex = currentIndex;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                index = i;\n                largest\
    \ = arr[i];\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n\
    \        bool found = false;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] <= currentValue) {\n                currentValue = arr[i];\n\
    \                currentIndex = i;\n            }\n            if (arr[i] > currentValue\
    \ && !found) {\n                maxIndex = currentIndex;\n                found\
    \ = true;\n            }\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] <= max) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] >= max) {\n           \
    \     max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       while (currentIndex < arr.Count) {\n            currentValue = arr[currentIndex];\n\
    \            if (currentValue <= currentIndex) {\n                currentIndex++;\n\
    \                continue;\n            }\n            if (currentValue > currentIndex)\
    \ {\n                currentIndex = currentValue;\n                maxIndex =\
    \ currentIndex;\n            }\n            currentIndex++;\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long previousIndex = 0;\n        foreach\
    \ (long i in arr) {\n            if (currentIndex == previousIndex) {\n      \
    \          currentIndex++;\n                previousIndex = currentIndex;\n  \
    \          }\n            if (currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n            currentIndex = previousIndex + 1;\n\
    \            previousIndex = currentIndex;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > currentValue) {\n     \
    \           maxIndex = i;\n                maxValue = currentValue;\n        \
    \    }\n            currentValue = arr[i];\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.First();\n        long index\
    \ = 0;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                index = i;\n      \
    \      }\n        }\n        return index;", "        long maxIndex = -1;\n  \
    \      long currentIndex = 0;\n        long currentValue = arr[0];\n        foreach\
    \ (long value in arr) {\n            if (value > currentValue) {\n           \
    \     currentValue = value;\n                currentIndex = currentValue;\n  \
    \          }\n            else {\n                currentIndex++;\n          \
    \  }\n            if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = arr[0];\n\
    \        long previousValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr[i];\n\
    \            previousValue = currentValue;\n            if (currentValue > previousValue)\
    \ {\n                maxIndex = currentIndex;\n            }\n        }\n    \
    \    return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long previousIndex = -1;\n        foreach (long i in arr) {\n\
    \            if (currentIndex == -1) {\n                currentIndex = i;\n  \
    \              previousIndex = -1;\n            } else if (i > currentIndex) {\n\
    \                currentIndex = i;\n                previousIndex = currentIndex;\n\
    \            } else if (i == currentIndex) {\n                previousIndex =\
    \ currentIndex;\n            }\n        }\n        if (currentIndex != -1) {\n\
    \            long currentValue = arr[currentIndex];\n            long previousValue\
    \ = arr[previousIndex];\n            if (currentValue > previousValue) {\n   \
    \             maxIndex = currentIndex;\n            } else {\n               \
    \ maxIndex = previousIndex;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        foreach (long i in arr) {\n\
    \            if (currentIndex == -1) {\n                currentIndex = i;\n  \
    \              currentValue = i;\n                previousValue = i;\n       \
    \     }\n            else if (currentValue < i) {\n                currentValue\
    \ = i;\n                currentIndex = i;\n            }\n            else if\
    \ (currentValue == i) {\n                currentIndex = i;\n            }\n  \
    \          else {\n                if (currentIndex > maxIndex) {\n          \
    \          maxIndex = currentIndex;\n                }\n                currentIndex\
    \ = -1;\n                currentValue = -1;\n                previousValue = -1;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long maxValue = arr[0];\n     \
    \   foreach (long value in arr) {\n            if (value <= maxValue) {\n    \
    \            currentIndex++;\n                if (currentIndex > maxIndex) {\n\
    \                    maxIndex = currentIndex;\n                    maxValue =\
    \ value;\n                }\n            }\n        }\n        return maxIndex;"]
stop_tokens:
- "\n    }\n"

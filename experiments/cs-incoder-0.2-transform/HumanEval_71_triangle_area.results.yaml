language: cs
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / ((a + b) * (a + c) * (b + c));\n        } else {\n   \
    \         area = -1;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfd5qkxl1.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / ((a * b) + (b * c) + (c * a));\n        }\n   \
    \     return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptcdji3u_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > c) {\n          \
    \  area = -1;\n        }\n        else {\n            float side1 = (float)(a/sum);\n\
    \            float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = side1 + side2;\n            float side5 = side3 - side4;\n\
    \            float side6 = side1 + side3;\n            float side7 = side5 - side6;\n\
    \            float side8 = side5 + side7;\n            float side9 = side3 - side8;\n\
    \            float side10 = side7 + side9;\n            float side11 = side9 -\
    \ side10;\n            float side12 = side7 - side11;\n            float side13\
    \ = side9 + side12;\n            float side14 = side11 - side13;\n           \
    \ float side15 = side12 - side14;\n            float side16 = side13 + side15;\n\
    \            float side17 = side14 - side16;\n            float side18 = side15\
    \ + side17;\n            float side19 = side16 - side18;\n            float side20\
    \ = side17 + side19;\n            float side21 = side18 - side20;\n          \
    \  float side22 = side19 + side21;\n            float side23 = side20 - side22;\n\
    \            float side24 = side21 + side23;\n            float side25 = side22\
    \ - side24;\n            float side26 = side23 + side25;\n            float side27\
    \ = side24 - side26;\n            float side28 = side25 + side27;\n          \
    \  float side29 = side26 - side28;\n            float side30 = side27 + side29;\n\
    \            float side31 = side28 - side30;\n            float side32 = side29\
    \ + side31;\n            float side33 = side30 - side32;\n            float side34\
    \ = side31 + side33;\n            float side35 = side32 - side34;\n          \
    \  float side36 = side33 + side35;\n            float side37 = side34 - side36;\n\
    \            float side38 = side35 + side37;\n            float side39 = side36\
    \ - side38;\n            float side40 = side37 + side39;\n            float side41\
    \ = side38 - side40;\n            float side42 = side39 + side41;\n          \
    \  float side43 = side40 - side42;\n            float \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppsfp3iez.cs(69,18): error CS1001: Identifier expected

    /tmp/tmppsfp3iez.cs(69,18): error CS1002: ; expected

    /tmp/tmppsfp3iez.cs(71,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmppsfp3iez.cs(83,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        }\n        else {\n            float side1 = (float)(a\
    \ * a + b * b + c * c);\n            float side2 = (float)(Math.Sqrt(side1));\n\
    \            float side3 = (float)(a * side1 + b * side2 + c * side2);\n     \
    \       area = side3 / (float)(Math.Sqrt(side2));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpybfq5kxb.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b * c);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb7habez0.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float sum = 0.0f;\n        long sumOfTwoSides = a + b;\n\
    \        long sumOfThreeSides = a + b + c;\n        if (sumOfTwoSides > sumOfThreeSides)\
    \ {\n            area = sumOfTwoSides * 0.5f;\n        } else {\n            area\
    \ = sumOfThreeSides * 0.5f;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb760brqf.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpb760brqf.cs(21,15): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = (float)(a+b+c)/sum;\n\
    \            float side5 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3);\n\
    \            float side6 = Math.Sqrt(side4*side4 + side5*side5);\n           \
    \ float side7 = side1*side4 - side2*side5;\n            float side8 = side3*side5\
    \ - side4*side3;\n            float side9 = side1*side5 + side2*side3;\n     \
    \       float side10 = side4*side3 - side5*side4;\n            float side11 =\
    \ side1*side2 + side3*side4;\n            float side12 = side2*side3 - side4*side2;\n\
    \            float side13 = side1*side3 - side2*side1;\n            float side14\
    \ = side3*side2 - side4*side1;\n            float side15 = side1*side4 + side2*side3;\n\
    \            float side16 = side3*side4 - side5*side3;\n            float side17\
    \ = side1*side5 - side2*side4;\n            float side18 = side4*side5 - side3*side4;\n\
    \            float side19 = side1*side2 + side4*side3;\n            float side20\
    \ = side2*side3 - side5*side2;\n            float side21 = side3*side5 - side4*side5;\n\
    \            float side22 = side4*side3 - side3*side2;\n            float side23\
    \ = side1*side5 + side2*side4;\n            float side24 = side2*side4 - side5*side4;\n\
    \            float side25 = side1*side3 + side4*side5;\n            float side26\
    \ = side2*side5 - side3*side3;\n            float side27 = side1*side4 - side2*side3;\n\
    \            float side28 = side3*side2 - side4*side1;\n            float side29\
    \ = side1*side5 + side3*side4;\n            float side30 = side2*side3 - side5*side3;\n\
    \            float side31 = side1*side5 - side2*side4;\n            float side32\
    \ = side3*side4 - side5*side5;\n            float side33 = side1*side2 + side5*side3;\n\
    \            float side34 = side2*side3 - side4*side2;\n            float side35\
    \ = side1*side3 - side2*side\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_amr8iff.cs(57,52): error CS1002: ; expected

    /tmp/tmp_amr8iff.cs(59,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_amr8iff.cs(71,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = a + b + c;\n        if (d > 0)\n            return (d * (d - a) * (d - b)\
    \ * (d - c)) / 2;\n        else\n            return -1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40a4c6cd208e4623b90295083cf78d7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40a4c6cd208e4623b90295083cf78d7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805098
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        long sumOfFourSides;\n        long sumOfFiveSides;\n        long sumOfSixSides;\n\
    \        long sumOfSevenSides;\n        long sumOfEightSides;\n        long sumOfNineSides;\n\
    \        long sumOfTenSides;\n        long sumOfElevenSides;\n        long sumOfTwelveSides;\n\
    \        long sumOfThirteenSides;\n        long sumOfFourteenSides;\n        long\
    \ sumOfFifteenSides;\n        long sumOfSixteenSides;\n        long sumOfSeventeenSides;\n\
    \        long sumOfEighteenSides;\n        long sumOfNineteenSides;\n        long\
    \ sumOfTwentySides;\n        long sumOfTwentyOneSides;\n        long sumOfTwentyTwoSides;\n\
    \        long sumOfTwentyThreeSides;\n        long sumOfTwentyFourSides;\n   \
    \     long sumOfTwentyFiveSides;\n        long sumOfTwentySixSides;\n        long\
    \ sumOfTwentySevenSides;\n        long sumOfTwentyEightSides;\n        long sumOfTwentyNineSides;\n\
    \        long sumOfTwentyTenSides;\n        long sumOfTwentyElevenSides;\n   \
    \     long sumOfTwentyTwelveSides;\n        long sumOfTwentyThirteenSides;\n \
    \       long sumOfTwentyFourteenSides;\n        long sumOfTwentyFifteenSides;\n\
    \        long sumOfTwentySixteenSides;\n        long sumOfTwentySeventeenSides;\n\
    \        long sumOfTwentyEighteenSides;\n        long sumOfTwentyNineteenSides;\n\
    \        long sumOfTwentyTwentySides;\n        long sumOfTwentyTwentyOneSides;\n\
    \        long sumOfTwentyTwentyTwoSides;\n        long sumOfTwentyTwentyThreeSides;\n\
    \        long sumOfTwentyTwentyFourSides;\n        long sumOfTwentyTwentyFiveSides;\n\
    \        long sumOfTwentyTwentySixSides;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu8tndkn.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpqu8tndkn.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpqu8tndkn.cs(22,14): warning CS0168: The variable ''sumOfTwoSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(23,14): warning CS0168: The variable ''sumOfThreeSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(24,14): warning CS0168: The variable ''sumOfFourSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(25,14): warning CS0168: The variable ''sumOfFiveSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(26,14): warning CS0168: The variable ''sumOfSixSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(27,14): warning CS0168: The variable ''sumOfSevenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(28,14): warning CS0168: The variable ''sumOfEightSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(29,14): warning CS0168: The variable ''sumOfNineSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(30,14): warning CS0168: The variable ''sumOfTenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(31,14): warning CS0168: The variable ''sumOfElevenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(32,14): warning CS0168: The variable ''sumOfTwelveSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(33,14): warning CS0168: The variable ''sumOfThirteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(34,14): warning CS0168: The variable ''sumOfFourteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(35,14): warning CS0168: The variable ''sumOfFifteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(36,14): warning CS0168: The variable ''sumOfSixteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(37,14): warning CS0168: The variable ''sumOfSeventeenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(38,14): warning CS0168: The variable ''sumOfEighteenSides''
    is declared but never u'
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side5 - side6;\n            float\
    \ side8 = side7 + side4;\n            float side9 = side8 - side1;\n         \
    \   float side10 = side9 + side2;\n            float side11 = side10 - side3;\n\
    \            float side12 = side11 + side4;\n            float side13 = side12\
    \ - side5;\n            float side14 = side13 + side6;\n            float side15\
    \ = side14 - side7;\n            float side16 = side15 + side8;\n            float\
    \ side17 = side16 - side9;\n            float side18 = side17 + side10;\n    \
    \        float side19 = side18 - side11;\n            float side20 = side19 +\
    \ side12;\n            float side21 = side20 - side13;\n            float side22\
    \ = side21 - side14;\n            float side23 = side22 - side15;\n          \
    \  float side24 = side23 + side16;\n            float side25 = side24 - side17;\n\
    \            float side26 = side25 + side18;\n            float side27 = side26\
    \ - side19;\n            float side28 = side27 + side20;\n            float side29\
    \ = side28 - side21;\n            float side30 = side29 + side22;\n          \
    \  float side31 = side30 - side23;\n            float side32 = side31 - side24;\n\
    \            float side33 = side32 - side25;\n            float side34 = side33\
    \ + side26;\n            float side35 = side34 - side27;\n            float side36\
    \ = side35 + side28;\n            float side37 = side36 - side29;\n          \
    \  float side38 = side37 + side30;\n            float side39 = side38 - side31;\n\
    \            float side40 = side39 + side32;\n            float side41 = side40\
    \ - side33;\n            float side42 = side41 - side34;\n            float side43\
    \ = side42 + side35;\n            float side44 = side43 - side36;\n          \
    \  float side\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi99n20ia.cs(67,23): error CS1002: ; expected

    /tmp/tmpi99n20ia.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpi99n20ia.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side5 - side6;\n            float\
    \ side8 = side3 + side5;\n            float side9 = side7 - side8;\n         \
    \   float side10 = side1 + side5;\n            float side11 = side9 - side10;\n\
    \            float side12 = side3 + side7;\n            float side13 = side11\
    \ - side12;\n            float side14 = side5 + side9;\n            float side15\
    \ = side13 - side14;\n            float side16 = side7 + side11;\n           \
    \ float side17 = side15 - side16;\n            float side18 = side9 + side13;\n\
    \            float side19 = side17 - side18;\n            float side20 = side11\
    \ + side15;\n            float side21 = side19 - side20;\n            float side22\
    \ = side13 + side17;\n            float side23 = side21 - side22;\n          \
    \  float side24 = side15 + side19;\n            float side25 = side23 - side24;\n\
    \            float side26 = side19 + side21;\n            float side27 = side25\
    \ - side26;\n            float side28 = side23 + side25;\n            float side29\
    \ = side27 - side28;\n            float side30 = side25 + side27;\n          \
    \  float side31 = side29 - side30;\n            float side32 = side27 + side29;\n\
    \            float side33 = side31 - side32;\n            float side34 = side31\
    \ + side33;\n            float side35 = side33 - side34;\n            float side36\
    \ = side35 + side35;\n            float side37 = side36 - side36;\n          \
    \  float side38 = side37 + side37;\n            float side39 = side38 - side38;\n\
    \            float side40 = side39 + side39;\n            float side41 = side40\
    \ - side40;\n            float side42 = side41 + side41;\n            float side43\
    \ = side42 + side42;\n            float side44 = side43 + side43;\n          \
    \  float \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpukceyme9.cs(67,18): error CS1001: Identifier expected

    /tmp/tmpukceyme9.cs(67,18): error CS1002: ; expected

    /tmp/tmpukceyme9.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpukceyme9.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpndd3erqy.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum, 2)\
    \ / 2);\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyg0a1130.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpyg0a1130.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float sum = 0;\n        long sumOfTwoSides = 0;\n       \
    \ long sumOfThreeSides = 0;\n        long sumOfTwoSidesPlusThreeSides = 0;\n \
    \       long sumOfTwoSidesPlusTwoSides = 0;\n        long sumOfTwoSidesPlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusTwoSides = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusTwoSides = 0;\n  \
    \      long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSide = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusTwoSides = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSide = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides = 0;\n\
    \        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOne\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpywkjciq5.cs(44,78): error CS1002: ; expected

    '
  timestamp: 1659805097

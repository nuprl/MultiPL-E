language: cs
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / ((a + b) * (a + c) * (b + c));\n        } else {\n   \
    \         area = -1;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfd5qkxl1.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / ((a * b) + (b * c) + (c * a));\n        }\n   \
    \     return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptcdji3u_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > c) {\n          \
    \  area = -1;\n        }\n        else {\n            float side1 = (float)(a/sum);\n\
    \            float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = side1 + side2;\n            float side5 = side3 - side4;\n\
    \            float side6 = side1 + side3;\n            float side7 = side5 - side6;\n\
    \            float side8 = side5 + side7;\n            float side9 = side3 - side8;\n\
    \            float side10 = side7 + side9;\n            float side11 = side9 -\
    \ side10;\n            float side12 = side7 - side11;\n            float side13\
    \ = side9 + side12;\n            float side14 = side11 - side13;\n           \
    \ float side15 = side12 - side14;\n            float side16 = side13 + side15;\n\
    \            float side17 = side14 - side16;\n            float side18 = side15\
    \ + side17;\n            float side19 = side16 - side18;\n            float side20\
    \ = side17 + side19;\n            float side21 = side18 - side20;\n          \
    \  float side22 = side19 + side21;\n            float side23 = side20 - side22;\n\
    \            float side24 = side21 + side23;\n            float side25 = side22\
    \ - side24;\n            float side26 = side23 + side25;\n            float side27\
    \ = side24 - side26;\n            float side28 = side25 + side27;\n          \
    \  float side29 = side26 - side28;\n            float side30 = side27 + side29;\n\
    \            float side31 = side28 - side30;\n            float side32 = side29\
    \ + side31;\n            float side33 = side30 - side32;\n            float side34\
    \ = side31 + side33;\n            float side35 = side32 - side34;\n          \
    \  float side36 = side33 + side35;\n            float side37 = side34 - side36;\n\
    \            float side38 = side35 + side37;\n            float side39 = side36\
    \ - side38;\n            float side40 = side37 + side39;\n            float side41\
    \ = side38 - side40;\n            float side42 = side39 + side41;\n          \
    \  float side43 = side40 - side42;\n            float \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppsfp3iez.cs(69,18): error CS1001: Identifier expected

    /tmp/tmppsfp3iez.cs(69,18): error CS1002: ; expected

    /tmp/tmppsfp3iez.cs(71,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmppsfp3iez.cs(83,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        }\n        else {\n            float side1 = (float)(a\
    \ * a + b * b + c * c);\n            float side2 = (float)(Math.Sqrt(side1));\n\
    \            float side3 = (float)(a * side1 + b * side2 + c * side2);\n     \
    \       area = side3 / (float)(Math.Sqrt(side2));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpybfq5kxb.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b * c);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb7habez0.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float sum = 0.0f;\n        long sumOfTwoSides = a + b;\n\
    \        long sumOfThreeSides = a + b + c;\n        if (sumOfTwoSides > sumOfThreeSides)\
    \ {\n            area = sumOfTwoSides * 0.5f;\n        } else {\n            area\
    \ = sumOfThreeSides * 0.5f;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb760brqf.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpb760brqf.cs(21,15): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = (float)(a+b+c)/sum;\n\
    \            float side5 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3);\n\
    \            float side6 = Math.Sqrt(side4*side4 + side5*side5);\n           \
    \ float side7 = side1*side4 - side2*side5;\n            float side8 = side3*side5\
    \ - side4*side3;\n            float side9 = side1*side5 + side2*side3;\n     \
    \       float side10 = side4*side3 - side5*side4;\n            float side11 =\
    \ side1*side2 + side3*side4;\n            float side12 = side2*side3 - side4*side2;\n\
    \            float side13 = side1*side3 - side2*side1;\n            float side14\
    \ = side3*side2 - side4*side1;\n            float side15 = side1*side4 + side2*side3;\n\
    \            float side16 = side3*side4 - side5*side3;\n            float side17\
    \ = side1*side5 - side2*side4;\n            float side18 = side4*side5 - side3*side4;\n\
    \            float side19 = side1*side2 + side4*side3;\n            float side20\
    \ = side2*side3 - side5*side2;\n            float side21 = side3*side5 - side4*side5;\n\
    \            float side22 = side4*side3 - side3*side2;\n            float side23\
    \ = side1*side5 + side2*side4;\n            float side24 = side2*side4 - side5*side4;\n\
    \            float side25 = side1*side3 + side4*side5;\n            float side26\
    \ = side2*side5 - side3*side3;\n            float side27 = side1*side4 - side2*side3;\n\
    \            float side28 = side3*side2 - side4*side1;\n            float side29\
    \ = side1*side5 + side3*side4;\n            float side30 = side2*side3 - side5*side3;\n\
    \            float side31 = side1*side5 - side2*side4;\n            float side32\
    \ = side3*side4 - side5*side5;\n            float side33 = side1*side2 + side5*side3;\n\
    \            float side34 = side2*side3 - side4*side2;\n            float side35\
    \ = side1*side3 - side2*side\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_amr8iff.cs(57,52): error CS1002: ; expected

    /tmp/tmp_amr8iff.cs(59,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_amr8iff.cs(71,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = a + b + c;\n        if (d > 0)\n            return (d * (d - a) * (d - b)\
    \ * (d - c)) / 2;\n        else\n            return -1;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40a4c6cd208e4623b90295083cf78d7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40a4c6cd208e4623b90295083cf78d7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805098
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        long sumOfFourSides;\n        long sumOfFiveSides;\n        long sumOfSixSides;\n\
    \        long sumOfSevenSides;\n        long sumOfEightSides;\n        long sumOfNineSides;\n\
    \        long sumOfTenSides;\n        long sumOfElevenSides;\n        long sumOfTwelveSides;\n\
    \        long sumOfThirteenSides;\n        long sumOfFourteenSides;\n        long\
    \ sumOfFifteenSides;\n        long sumOfSixteenSides;\n        long sumOfSeventeenSides;\n\
    \        long sumOfEighteenSides;\n        long sumOfNineteenSides;\n        long\
    \ sumOfTwentySides;\n        long sumOfTwentyOneSides;\n        long sumOfTwentyTwoSides;\n\
    \        long sumOfTwentyThreeSides;\n        long sumOfTwentyFourSides;\n   \
    \     long sumOfTwentyFiveSides;\n        long sumOfTwentySixSides;\n        long\
    \ sumOfTwentySevenSides;\n        long sumOfTwentyEightSides;\n        long sumOfTwentyNineSides;\n\
    \        long sumOfTwentyTenSides;\n        long sumOfTwentyElevenSides;\n   \
    \     long sumOfTwentyTwelveSides;\n        long sumOfTwentyThirteenSides;\n \
    \       long sumOfTwentyFourteenSides;\n        long sumOfTwentyFifteenSides;\n\
    \        long sumOfTwentySixteenSides;\n        long sumOfTwentySeventeenSides;\n\
    \        long sumOfTwentyEighteenSides;\n        long sumOfTwentyNineteenSides;\n\
    \        long sumOfTwentyTwentySides;\n        long sumOfTwentyTwentyOneSides;\n\
    \        long sumOfTwentyTwentyTwoSides;\n        long sumOfTwentyTwentyThreeSides;\n\
    \        long sumOfTwentyTwentyFourSides;\n        long sumOfTwentyTwentyFiveSides;\n\
    \        long sumOfTwentyTwentySixSides;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu8tndkn.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpqu8tndkn.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpqu8tndkn.cs(22,14): warning CS0168: The variable ''sumOfTwoSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(23,14): warning CS0168: The variable ''sumOfThreeSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(24,14): warning CS0168: The variable ''sumOfFourSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(25,14): warning CS0168: The variable ''sumOfFiveSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(26,14): warning CS0168: The variable ''sumOfSixSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(27,14): warning CS0168: The variable ''sumOfSevenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(28,14): warning CS0168: The variable ''sumOfEightSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(29,14): warning CS0168: The variable ''sumOfNineSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(30,14): warning CS0168: The variable ''sumOfTenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(31,14): warning CS0168: The variable ''sumOfElevenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(32,14): warning CS0168: The variable ''sumOfTwelveSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(33,14): warning CS0168: The variable ''sumOfThirteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(34,14): warning CS0168: The variable ''sumOfFourteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(35,14): warning CS0168: The variable ''sumOfFifteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(36,14): warning CS0168: The variable ''sumOfSixteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(37,14): warning CS0168: The variable ''sumOfSeventeenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(38,14): warning CS0168: The variable ''sumOfEighteenSides''
    is declared but never u'
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side5 - side6;\n            float\
    \ side8 = side7 + side4;\n            float side9 = side8 - side1;\n         \
    \   float side10 = side9 + side2;\n            float side11 = side10 - side3;\n\
    \            float side12 = side11 + side4;\n            float side13 = side12\
    \ - side5;\n            float side14 = side13 + side6;\n            float side15\
    \ = side14 - side7;\n            float side16 = side15 + side8;\n            float\
    \ side17 = side16 - side9;\n            float side18 = side17 + side10;\n    \
    \        float side19 = side18 - side11;\n            float side20 = side19 +\
    \ side12;\n            float side21 = side20 - side13;\n            float side22\
    \ = side21 - side14;\n            float side23 = side22 - side15;\n          \
    \  float side24 = side23 + side16;\n            float side25 = side24 - side17;\n\
    \            float side26 = side25 + side18;\n            float side27 = side26\
    \ - side19;\n            float side28 = side27 + side20;\n            float side29\
    \ = side28 - side21;\n            float side30 = side29 + side22;\n          \
    \  float side31 = side30 - side23;\n            float side32 = side31 - side24;\n\
    \            float side33 = side32 - side25;\n            float side34 = side33\
    \ + side26;\n            float side35 = side34 - side27;\n            float side36\
    \ = side35 + side28;\n            float side37 = side36 - side29;\n          \
    \  float side38 = side37 + side30;\n            float side39 = side38 - side31;\n\
    \            float side40 = side39 + side32;\n            float side41 = side40\
    \ - side33;\n            float side42 = side41 - side34;\n            float side43\
    \ = side42 + side35;\n            float side44 = side43 - side36;\n          \
    \  float side\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi99n20ia.cs(67,23): error CS1002: ; expected

    /tmp/tmpi99n20ia.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpi99n20ia.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side5 - side6;\n            float\
    \ side8 = side3 + side5;\n            float side9 = side7 - side8;\n         \
    \   float side10 = side1 + side5;\n            float side11 = side9 - side10;\n\
    \            float side12 = side3 + side7;\n            float side13 = side11\
    \ - side12;\n            float side14 = side5 + side9;\n            float side15\
    \ = side13 - side14;\n            float side16 = side7 + side11;\n           \
    \ float side17 = side15 - side16;\n            float side18 = side9 + side13;\n\
    \            float side19 = side17 - side18;\n            float side20 = side11\
    \ + side15;\n            float side21 = side19 - side20;\n            float side22\
    \ = side13 + side17;\n            float side23 = side21 - side22;\n          \
    \  float side24 = side15 + side19;\n            float side25 = side23 - side24;\n\
    \            float side26 = side19 + side21;\n            float side27 = side25\
    \ - side26;\n            float side28 = side23 + side25;\n            float side29\
    \ = side27 - side28;\n            float side30 = side25 + side27;\n          \
    \  float side31 = side29 - side30;\n            float side32 = side27 + side29;\n\
    \            float side33 = side31 - side32;\n            float side34 = side31\
    \ + side33;\n            float side35 = side33 - side34;\n            float side36\
    \ = side35 + side35;\n            float side37 = side36 - side36;\n          \
    \  float side38 = side37 + side37;\n            float side39 = side38 - side38;\n\
    \            float side40 = side39 + side39;\n            float side41 = side40\
    \ - side40;\n            float side42 = side41 + side41;\n            float side43\
    \ = side42 + side42;\n            float side44 = side43 + side43;\n          \
    \  float \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpukceyme9.cs(67,18): error CS1001: Identifier expected

    /tmp/tmpukceyme9.cs(67,18): error CS1002: ; expected

    /tmp/tmpukceyme9.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpukceyme9.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpndd3erqy.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum, 2)\
    \ / 2);\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyg0a1130.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpyg0a1130.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float sum = 0;\n        long sumOfTwoSides = 0;\n       \
    \ long sumOfThreeSides = 0;\n        long sumOfTwoSidesPlusThreeSides = 0;\n \
    \       long sumOfTwoSidesPlusTwoSides = 0;\n        long sumOfTwoSidesPlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusTwoSides = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusTwoSides = 0;\n  \
    \      long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSide = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusTwoSides = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSide = 0;\n        long\
    \ sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides = 0;\n\
    \        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusTwoSides\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOneSide\
    \ = 0;\n        long sumOfTwoSidesPlusOneSidePlusOneSidePlusOneSidePlusOneSidePlusOne\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpywkjciq5.cs(44,78): error CS1002: ; expected

    '
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c) / 2.0f;\n        float side2\
    \ = (float)(a-b+c) / 2.0f;\n        float side3 = (float)(a-b-c) / 2.0f;\n   \
    \     float side4 = (float)(a+b+c) / 2.0f;\n        float side5 = side1 + side2\
    \ + side3;\n        float side6 = side1 - side2 - side3;\n        float side7\
    \ = side1 - side2 + side3;\n        float side8 = side1 - side2 - side3;\n   \
    \     float side9 = side1 + side3 - side4;\n        float side10 = side1 - side3\
    \ + side4;\n        float side11 = side1 + side4 + side5;\n        float side12\
    \ = side1 - side4 + side5;\n        float side13 = side1 + side5 - side6;\n  \
    \      float side14 = side1 - side5 + side6;\n        float side15 = side1 + side6\
    \ - side7;\n        float side16 = side1 - side6 + side7;\n        float side17\
    \ = side1 + side7 - side8;\n        float side18 = side1 - side7 + side8;\n  \
    \      float side19 = side1 + side8 - side9;\n        float side20 = side1 - side8\
    \ + side9;\n        float side21 = side1 + side9 - side10;\n        float side22\
    \ = side1 - side9 + side10;\n        float side23 = side1 + side10 - side11;\n\
    \        float side24 = side1 - side10 + side11;\n        float side25 = side1\
    \ + side11 - side12;\n        float side26 = side1 - side11 + side12;\n      \
    \  float side27 = side1 + side12 - side13;\n        float side28 = side1 - side12\
    \ + side13;\n        float side29 = side1 + side13 - side14;\n        float side30\
    \ = side1 - side13 + side14;\n        float side31 = side1 + side14 - side15;\n\
    \        float side32 = side1 - side14 + side15;\n        float side33 = side1\
    \ + side15 - side16;\n        float side34 = side1 - side15 + side16;\n      \
    \  float side35 = side1 + side16 - side17;\n        float side36 = side1 - side16\
    \ + side17;\n        float side37 = side1 + side17 - side18;\n        float side38\
    \ = side1 - side17 + side18;\n        float side39 = side1 + side18 - side19;\n\
    \        float side40 = side1 - \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqabe75_i.cs(60,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpqabe75_i.cs(60,31): error CS1002: ; expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = 0.5f * Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwlqq92ms.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b) / c;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b252bbd28854b6b8641cf5a0a3442a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b252bbd28854b6b8641cf5a0a3442a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else {\n            float side1 = (float)(a * b);\n\
    \            float side2 = (float)(b * c);\n            float side3 = (float)(a\
    \ * c);\n            float side4 = (float)(Math.Sqrt(side1 * side1 + side2 * side2\
    \ + side3 * side3));\n            area = Math.Round(side4 / sum, 2);\n       \
    \ }\n        return area;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj81hyjk.cs(29,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplmju520w.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)((c * a) / b);\n        if (side1 +\
    \ side2 > side3) {\n            area = side1;\n        } else {\n            area\
    \ = side2;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq4de9aga.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c) / 2.0f;\n        float side2\
    \ = (float)(a-b+c) / 2.0f;\n        float side3 = (float)(a-b-c) / 2.0f;\n   \
    \     float side4 = (float)(a+b+c) / 2.0f;\n        float side5 = Math.Sqrt(side1\
    \ * side1 + side2 * side2 + side3 * side3 + side4 * side4);\n        float side6\
    \ = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3 + side4 * side4 +\
    \ side5 * side5);\n        float side7 = Math.Sqrt(side1 * side1 + side2 * side2\
    \ + side3 * side3 + side4 * side4 + side5 * side5 + side6 * side6);\n        float\
    \ side8 = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3 + side4 * side4\
    \ + side5 * side5 + side6 * side6 + side7 * side7);\n        float side9 = Math.Sqrt(side1\
    \ * side1 + side2 * side2 + side3 * side3 + side4 * side4 + side5 * side5 + side6\
    \ * side6 + side7 * side7 + side8 * side8);\n        float side10 = Math.Sqrt(side1\
    \ * side1 + side2 * side2 + side3 * side3 + side4 * side4 + side5 * side5 + side6\
    \ * side6 + side7 * side7 + side8 * side8 + side9 * side9);\n        float side11\
    \ = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3 + side4 * side4 +\
    \ side5 * side5 + side6 * side6 + side7 * side7 + side8 * side8 + side9 * side9\
    \ + side10 * side10);\n        float side12 = Math.Sqrt(side1 * side1 + side2\
    \ * side2 + side3 * side3 + side4 * side4 + side5 * side5 + side6 * side6 + side7\
    \ * side7 + side8 * side8 + side9 * side9 + side10 * side10 + side11 * side11);\n\
    \        float side13 = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3\
    \ + side4 * side4 + side5 * side5 + side6 * side6 + side7 * side7 + side8 * side8\
    \ + side9 * side9 + side10 * side10 + side11 * side11 + side12 * side12);\n  \
    \      float side14 = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3\
    \ + side4 * side4 + side5 * side5 + side6 * side6 + side7\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1wury0gi.cs(34,135): error CS1026: ) expected

    /tmp/tmp1wury0gi.cs(34,135): error CS1002: ; expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdl2jdx5e.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a+b+c) / 2;\n        float side2 =\
    \ (float)(a-b+c) / 2;\n        float side3 = (float)(a-b-c) / 2;\n        if (side1\
    \ + side2 > side3) {\n            area = side1 * side2 * side3;\n        }\n \
    \       return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0dyw1uw8.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 + side3;\n            float\
    \ side8 = side5 + side6;\n            float side9 = side7 - side8;\n         \
    \   float side10 = side5 + side6;\n            float side11 = side9 - side10;\n\
    \            float side12 = side9 - side10;\n            float side13 = side7\
    \ + side10;\n            float side14 = side13 - side12;\n            float side15\
    \ = side13 - side12;\n            float side16 = side13 + side12;\n          \
    \  float side17 = side14 + side15;\n            float side18 = side16 - side17;\n\
    \            float side19 = side16 - side17;\n            float side20 = side16\
    \ + side17;\n            float side21 = side20 + side19;\n            float side22\
    \ = side21 - side22;\n            float side23 = side21 - side22;\n          \
    \  float side24 = side21 + side22;\n            float side25 = side23 + side24;\n\
    \            float side26 = side25 - side24;\n            float side27 = side25\
    \ - side24;\n            float side28 = side25 + side24;\n            float side29\
    \ = side26 + side27;\n            float side30 = side29 - side28;\n          \
    \  float side31 = side29 - side28;\n            float side32 = side29 + side28;\n\
    \            float side33 = side31 + side32;\n            float side34 = side33\
    \ - side32;\n            float side35 = side33 - side32;\n            float side36\
    \ = side33 + side32;\n            float side37 = side34 + side35;\n          \
    \  float side38 = side36 - side37;\n            float side39 = side36 - side37;\n\
    \            float side40 = side36 + side37;\n            float side41 = side40\
    \ + side39;\n            float side42 = side41 - side42;\n            float side43\
    \ = side41 - side42;\n            float side44 = side41 + side42;\n          \
    \  float side\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpncyhx9dn.cs(67,23): error CS1002: ; expected

    /tmp/tmpncyhx9dn.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpncyhx9dn.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        if (f\
    \ < 0) {\n            return -1;\n        }\n        long g = Math.Sqrt(f * f\
    \ + d * d + e * e);\n        return g / 2;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzqrwhhr9.cs(26,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1;\n        } else if (sum > b) {\n            area = sum\
    \ - c;\n        } else if (sum > a) {\n            area = c - b;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprue2rwcq.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float sum = 0.0f;\n        float sum2 = 0.0f;\n      \
    \  float sum3 = 0.0f;\n        float sum4 = 0.0f;\n        float sum5 = 0.0f;\n\
    \        float sum6 = 0.0f;\n        float sum7 = 0.0f;\n        float sum8 =\
    \ 0.0f;\n        float sum9 = 0.0f;\n        float sum10 = 0.0f;\n        float\
    \ sum11 = 0.0f;\n        float sum12 = 0.0f;\n        float sum13 = 0.0f;\n  \
    \      float sum14 = 0.0f;\n        float sum15 = 0.0f;\n        float sum16 =\
    \ 0.0f;\n        float sum17 = 0.0f;\n        float sum18 = 0.0f;\n        float\
    \ sum19 = 0.0f;\n        float sum20 = 0.0f;\n        float sum21 = 0.0f;\n  \
    \      float sum22 = 0.0f;\n        float sum23 = 0.0f;\n        float sum24 =\
    \ 0.0f;\n        float sum25 = 0.0f;\n        float sum26 = 0.0f;\n        float\
    \ sum27 = 0.0f;\n        float sum28 = 0.0f;\n        float sum29 = 0.0f;\n  \
    \      float sum30 = 0.0f;\n        float sum31 = 0.0f;\n        float sum32 =\
    \ 0.0f;\n        float sum33 = 0.0f;\n        float sum34 = 0.0f;\n        float\
    \ sum35 = 0.0f;\n        float sum36 = 0.0f;\n        float sum37 = 0.0f;\n  \
    \      float sum38 = 0.0f;\n        float sum39 = 0.0f;\n        float sum40 =\
    \ 0.0f;\n        float sum41 = 0.0f;\n        float sum42 = 0.0f;\n        float\
    \ sum43 = 0.0f;\n        float sum44 = 0.0f;\n        float sum45 = 0.0f;\n  \
    \      float sum46 = 0.0f;\n        float sum47 = 0.0f;\n        float sum48 =\
    \ 0.0f;\n        float sum49 = 0.0f;\n        float sum50 = 0.0f;\n        float\
    \ sum51 = 0.0f;\n        float sum52 = 0.0f;\n        float sum53 = 0.0f;\n  \
    \      float sum54 = 0.0f;\n        float sum55 = 0.0f;\n        float sum56 =\
    \ 0.0f;\n        float sum57 = 0.0f;\n        float sum58 = 0.0f;\n        float\
    \ sum59 = 0.0f;\n        float sum60 = 0.0f;\n        float sum61 = 0.0f;\n  \
    \      float sum62 = 0.0f;\n        float sum63 = 0.0f;\n        float sum64 =\
    \ 0.0f;\n        float sum65 = 0.0f;\n        float sum66 = 0.0f;\n        float\
    \ sum67 = 0.0f;\n        float sum68 = 0.0f;\n        float sum69 = 0.0f;\n  \
    \      float sum70 = 0.0f;\n        float sum7\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2mltt10.cs(91,19): error CS1002: ; expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n   \
    \         area = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum,\
    \ 2) - Math.Pow(a, 2) + Math.Pow(b, 2));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd_k1qdrv.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpd_k1qdrv.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float side1 = (float)(a * b);\n        float\
    \ side2 = (float)(a * c);\n        float side3 = (float)(b * c);\n        sum\
    \ = side1 + side2 + side3;\n        if (sum > side3) {\n            area = side3;\n\
    \        } else {\n            area = sum / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdtmspm1x.cs(25,15): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpdtmspm1x.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpev1e3_ex.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1 * side2 / side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm_tusea7.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        sum\
    \ = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n     \
    \   sum2 = sum * sum;\n        sum3 = sum2 * sum;\n        if (sum3 > b) {\n \
    \           area = sum / 2;\n        } else {\n            area = -1;\n      \
    \  }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpembkg9gg.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      float area = (a*b*c)/(float)sum;\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpus8vab4a.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / 2;\n        } else {\n            area = -1;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn_sssnyj.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else {\n            float sum2 = (float)((float)(a\
    \ * b) / sum);\n            float sum3 = (float)((float)(b * c) / sum);\n    \
    \        float sum4 = (float)((float)(b * c) / sum);\n            float sum5 =\
    \ (float)((float)(b * c) / sum);\n            float sum6 = (float)((float)(b *\
    \ c) / sum);\n            float sum7 = (float)((float)(b * c) / sum);\n      \
    \      float sum8 = (float)((float)(b * c) / sum);\n            float sum9 = (float)((float)(b\
    \ * c) / sum);\n            float sum10 = (float)((float)(b * c) / sum);\n   \
    \         float sum11 = (float)((float)(b * c) / sum);\n            float sum12\
    \ = (float)((float)(b * c) / sum);\n            float sum13 = (float)((float)(b\
    \ * c) / sum);\n            float sum14 = (float)((float)(b * c) / sum);\n   \
    \         float sum15 = (float)((float)(b * c) / sum);\n            float sum16\
    \ = (float)((float)(b * c) / sum);\n            float sum17 = (float)((float)(b\
    \ * c) / sum);\n            float sum18 = (float)((float)(b * c) / sum);\n   \
    \         float sum19 = (float)((float)(b * c) / sum);\n            float sum20\
    \ = (float)((float)(b * c) / sum);\n            float sum21 = (float)((float)(b\
    \ * c) / sum);\n            float sum22 = (float)((float)(b * c) / sum);\n   \
    \         float sum23 = (float)((float)(b * c) / sum);\n            float sum24\
    \ = (float)((float)(b * c) / sum);\n            float sum25 = (float)((float)(b\
    \ * c) / sum);\n            float sum26 = (float)((float)(b * c) / sum);\n   \
    \         float sum27 = (float)((float)(b * c) / sum);\n            float sum28\
    \ = (float)((float)(b * c) / sum);\n            float sum29 = (float)((float)(b\
    \ * c) / sum);\n            float sum30 = (float)((float)(b * c) / sum);\n   \
    \         float sum31 = (float)((float)(b * c) / sum);\n            float sum32\
    \ = (float)((\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy3svfrbu.cs(55,36): error CS1525: Invalid expression term ''}''

    /tmp/tmpy3svfrbu.cs(55,36): error CS1026: ) expected

    /tmp/tmpy3svfrbu.cs(55,36): error CS1002: ; expected

    /tmp/tmpy3svfrbu.cs(57,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpy3svfrbu.cs(69,2): error CS1513: } expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcfzk7ab8.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - a;\n        long f = d - e;\n        long g\
    \ = e - b;\n        long h = f + g;\n        long i = g + f;\n        long j =\
    \ h + i;\n        long k = i + j;\n        long l = j + k;\n        long m = k\
    \ + l;\n        long n = l + m;\n        long o = m + n;\n        long p = n +\
    \ o;\n        long q = o + p;\n        long r = p + q;\n        long s = q + r;\n\
    \        long t = r + s;\n        long u = s + t;\n        long v = t + u;\n \
    \       long w = u + v;\n        long x = v + w;\n        long y = w + x;\n  \
    \      long z = x + y;\n        long a = z + a;\n        long b = a + b;\n   \
    \     long c = b + c;\n        long d = c + d;\n        long e = d + e;\n    \
    \    long f = e + f;\n        long g = f + g;\n        long h = g + h;\n     \
    \   long i = h + i;\n        long j = i + j;\n        long k = j + k;\n      \
    \  long l = k + l;\n        long m = l + m;\n        long n = m + n;\n       \
    \ long o = n + o;\n        long p = o + p;\n        long q = p + q;\n        long\
    \ r = q + r;\n        long s = r + s;\n        long t = s + t;\n        long u\
    \ = t + u;\n        long v = u + v;\n        long w = v + w;\n        long x =\
    \ w + x;\n        long y = x + y;\n        long z = y + z;\n        long a = z\
    \ + a;\n        long b = a + b;\n        long c = b + c;\n        long d = c +\
    \ d;\n        long e = d + e;\n        long f = e + f;\n        long g = f + g;\n\
    \        long h = g + h;\n        long i = h + i;\n        long j = i + j;\n \
    \       long k = j + k;\n        long l = k + l;\n        long m = l + m;\n  \
    \      long n = m + n;\n        long o = n + o;\n        long p = o + p;\n   \
    \     long q = p + q;\n        long r = q + r;\n        long s = r + s;\n    \
    \    long t = s + t;\n        long u = t + u;\n        long v = u + v;\n     \
    \   long w = v + w;\n        long x = w + x;\n        long y = x + y;\n      \
    \  long z = y + z;\n        long a = z\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbwsrdvi.cs(95,19): error CS1002: ; expected

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else {\n            area = (float)(Math.Sqrt(Math.Pow(sum,\
    \ 2.0f) / 2));\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ccc1c6d382204c3ea74dfd75f5d2a83f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ccc1c6d382204c3ea74dfd75f5d2a83f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv7y7bpc1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1L;\n        } else if (sum > b) {\n            area = ((float)(sum\
    \ - b) * (float)(c - a)) / 2;\n        } else if (sum > a) {\n            area\
    \ = ((float)(c - a) * (float)(b - a)) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe4ktpzls.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphztyltzn.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1;\n        } else if (sum > b) {\n            area = sum\
    \ - c;\n        } else if (sum > a) {\n            area = c - b;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprue2rwcq.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (b + c > a) && (c + a > b)) {\n   \
    \         area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2, MidpointRounding.AwayFromZero);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpofe7na7s.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = sum * sum;\n        }\n        else {\n           \
    \ area = -1;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9n8bgvhc.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 > side2 && side1\
    \ > side3) {\n            area = side1;\n        } else if (side2 > side3) {\n\
    \            area = side2;\n        } else {\n            area = side3;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwagwc93g.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcfzk7ab8.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)((c * a) / b);\n        if (side1 +\
    \ side2 > side3) {\n            area = side1;\n        } else {\n            area\
    \ = side2;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq4de9aga.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (b + c > a) && (a + c > b)) {\n          \
    \  area = (a * b * c) / (a + b + c);\n        }\n        else {\n            area\
    \ = -1;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5k__4qu3.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side;\n        float sum2;\n      \
    \  float sum3;\n        float sum4;\n        float sum5;\n        float sum6;\n\
    \        float sum7;\n        float sum8;\n        float sum9;\n        float\
    \ sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n \
    \       float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbr4gevy5.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpbr4gevy5.cs(22,15): warning CS0168: The variable ''side'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(23,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(24,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(25,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(26,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(27,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(28,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(29,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(30,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(31,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(32,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(33,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(34,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(35,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(36,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(37,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(38,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(39,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpbr4gevy5.cs(40,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 > side2 && side1\
    \ > side3) {\n            area = side1;\n        }\n        else if (side2 > side3)\
    \ {\n            area = side2;\n        }\n        else {\n            area =\
    \ side3;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdxb674rt.cs(33,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            float s = (a+b+c)/2;\n            float\
    \ area = Math.Sqrt(s * (s-a) * (s-b) * (s-c));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsaz82jto.cs(26,19): error CS0136: A local or parameter named ''area''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpsaz82jto.cs(26,26): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpsaz82jto.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphztyltzn.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b + c * c);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgughw2c8.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / (a + b + c);\n        }\n        return area;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b7a22b8bf4d40b89a014351a8e983f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b7a22b8bf4d40b89a014351a8e983f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long max;\n        float result;\n       \
    \ sum = (long)(a+b+c);\n        if (sum > 0) {\n            max = sum;\n     \
    \   } else {\n            max = sum * -1;\n        }\n        if (a > b) {\n \
    \           if (a > c) {\n                max = a;\n            } else {\n   \
    \             max = c;\n            }\n        } else {\n            if (b > c)\
    \ {\n                max = b;\n            } else {\n                max = c;\n\
    \            }\n        }\n        if (b > a) {\n            if (b > c) {\n  \
    \              max = b;\n            } else {\n                max = c;\n    \
    \        }\n        } else {\n            if (c > a) {\n                max =\
    \ c;\n            } else {\n                max = a;\n            }\n        }\n\
    \        result = ((float)max) / 2;\n        area = Math.Round(result, 2);\n \
    \       return area;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpts5hf_u1.cs(57,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else if (sum > b) {\n            area = sum - c;\n\
    \        } else if (sum > a) {\n            area = c - b;\n        }\n       \
    \ return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu5xqy_1o.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sum = side1 + side2\
    \ + side3;\n        if (sum > side3) {\n            area = side1;\n        } else\
    \ {\n            area = side3;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwst3mngf.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 + side3;\n            float\
    \ side8 = side1 + side2;\n            float side9 = side3 - side1;\n         \
    \   float side10 = side2 + side1;\n            float side11 = side3 + side2;\n\
    \            float side12 = side1 + side3;\n            float side13 = side2 -\
    \ side1;\n            float side14 = side3 - side2;\n            float side15\
    \ = side1 + side2;\n            float side16 = side3 - side3;\n            float\
    \ side17 = side1 + side4;\n            float side18 = side2 + side4;\n       \
    \     float side19 = side3 + side4;\n            float side20 = side1 + side3;\n\
    \            float side21 = side2 - side1;\n            float side22 = side3 -\
    \ side2;\n            float side23 = side1 + side4;\n            float side24\
    \ = side2 + side4;\n            float side25 = side3 + side4;\n            float\
    \ side26 = side1 + side2;\n            float side27 = side3 - side2;\n       \
    \     float side28 = side1 + side3;\n            float side29 = side2 - side1;\n\
    \            float side30 = side3 - side3;\n            float side31 = side1 +\
    \ side4;\n            float side32 = side2 + side4;\n            float side33\
    \ = side3 + side4;\n            float side34 = side1 + side3;\n            float\
    \ side35 = side2 - side1;\n            float side36 = side3 - side3;\n       \
    \     float side37 = side1 + side4;\n            float side38 = side2 + side4;\n\
    \            float side39 = side3 + side4;\n            float side40 = side1 +\
    \ side2;\n            float side41 = side3 - side2;\n            float side42\
    \ = side1 + side3;\n            float side43 = side2 - side1;\n            float\
    \ side44 = side3 - side3;\n            float side45 = side1 + side4;\n       \
    \     float side46 = side2 + side4;\n            float side47 = side3 + side4;\n\
    \            float side48 = side1 + side2;\n            float side49 = side3 -\
    \ side2;\n            float side50 = side1 + side3;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_l4h5bh.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpi_l4h5bh.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / 2;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe2pdh_0o.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > long.MaxValue) return -1L;\n        if (sum\
    \ < long.MinValue) return -1L;\n        long d = b - a;\n        long e = c -\
    \ b;\n        long f = d - e;\n        long g = Math.Sqrt(f * f + g * g);\n  \
    \      long h = Math.Sqrt(f * f + g * g);\n        long i = Math.Sqrt(f * f +\
    \ g * g);\n        long j = (a + b + c) / 2;\n        long k = Math.Sqrt(i * i\
    \ + j * j);\n        long l = Math.Sqrt(i * i + j * j);\n        long m = Math.Sqrt(i\
    \ * i + j * j);\n        long n = Math.Sqrt(i * i + j * j);\n        long o =\
    \ Math.Sqrt(i * i + j * j);\n        long p = Math.Sqrt(i * i + j * j);\n    \
    \    long q = Math.Sqrt(i * i + j * j);\n        long r = Math.Sqrt(i * i + j\
    \ * j);\n        long s = Math.Sqrt(i * i + j * j);\n        long t = Math.Sqrt(i\
    \ * i + j * j);\n        long u = Math.Sqrt(i * i + j * j);\n        long v =\
    \ Math.Sqrt(i * i + j * j);\n        long w = Math.Sqrt(i * i + j * j);\n    \
    \    long x = Math.Sqrt(i * i + j * j);\n        long y = Math.Sqrt(i * i + j\
    \ * j);\n        long z = Math.Sqrt(i * i + j * j);\n        long a = Math.Sqrt(i\
    \ * i + j * j);\n        long b = Math.Sqrt(i * i + j * j);\n        long c =\
    \ Math.Sqrt(i * i + j * j);\n        long d = Math.Sqrt(i * i + j * j);\n    \
    \    long e = Math.Sqrt(i * i + j * j);\n        long f = Math.Sqrt(i * i + j\
    \ * j);\n        long g = Math.Sqrt(i * i + j * j);\n        long h = Math.Sqrt(i\
    \ * i + j * j);\n        long i = Math.Sqrt(i * i + j * j);\n        long j =\
    \ Math.Sqrt(i * i + j * j);\n        long k = Math.Sqrt(i * i + j * j);\n    \
    \    long l = Math.Sqrt(i * i + j * j);\n        long m = Math.Sqrt(i * i + j\
    \ * j);\n        long n = Math.Sqrt(i * i + j * j);\n        long o = Math.Sqrt(i\
    \ * i + j * j);\n        \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe0zo9m5d.cs(20,20): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(20,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(20,24): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(23,18): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(23,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(24,18): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(24,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(26,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(27,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(28,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(29,19): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(29,23): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(29,27): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmpe0zo9m5d.cs(30,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(31,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(32,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe0zo9m5d.cs(33,18): error CS0266: Cannot implicitly convert type ''double''
    to ''l'
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaxa_j1yw.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv7y7bpc1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * Math.Sqrt(a * b));\n       \
    \ float side2 = (float)(b * Math.Sqrt(a * b));\n        float side3 = (float)(c\
    \ * Math.Sqrt(a * b));\n        float side4 = side1 + side2 + side3;\n       \
    \ if (side4 > side1 + side2) {\n            area = side4;\n        }\n       \
    \ return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf44emy1u.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv7y7bpc1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long max;\n        long min;\n        float\
    \ temp;\n        float temp2;\n        float temp3;\n        float temp4;\n  \
    \      float temp5;\n        float temp6;\n        float temp7;\n        float\
    \ temp8;\n        float temp9;\n        float temp10;\n        float temp11;\n\
    \        float temp12;\n        float temp13;\n        float temp14;\n       \
    \ float temp15;\n        float temp16;\n        float temp17;\n        float temp18;\n\
    \        float temp19;\n        float temp20;\n        float temp21;\n       \
    \ float temp22;\n        float temp23;\n        float temp24;\n        float temp25;\n\
    \        float temp26;\n        float temp27;\n        float temp28;\n       \
    \ float temp29;\n        float temp30;\n        float temp31;\n        float temp32;\n\
    \        float temp33;\n        float temp34;\n        float temp35;\n       \
    \ float temp36;\n        float temp37;\n        float temp38;\n        float temp39;\n\
    \        float temp40;\n        float temp41;\n        float temp42;\n       \
    \ float temp43;\n        float temp44;\n        float temp45;\n        float temp46;\n\
    \        float temp47;\n        float temp48;\n        float temp49;\n       \
    \ float temp50;\n        float temp51;\n        float temp52;\n        float temp53;\n\
    \        float temp54;\n        float temp55;\n        float temp56;\n       \
    \ float temp57;\n        float temp58;\n        float temp59;\n        float temp60;\n\
    \        float temp61;\n        float temp62;\n        float temp63;\n       \
    \ float temp64;\n        float temp65;\n        float temp66;\n        float temp67;\n\
    \        float temp68;\n        float temp69;\n        float temp70;\n       \
    \ float temp71;\n        float temp72;\n        float temp73;\n        float temp74;\n\
    \        float temp75;\n        float temp76;\n        float temp77;\n       \
    \ float temp78;\n        float temp79;\n        float temp80;\n        float temp81;\n\
    \        float temp82;\n        float temp83;\n        float temp84;\n       \
    \ float temp85;\n        float \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj6hxw9ih.cs(109,14): error CS1001: Identifier expected

    /tmp/tmpj6hxw9ih.cs(109,14): error CS1002: ; expected

    '
  timestamp: 1659824571
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = (float)Math.Sqrt(Math.Pow(sum, 2) / 2);\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsnnct0yi.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side1 = (float)(a * b);\n        float\
    \ side2 = (float)(b * c);\n        float side3 = (float)(a * c);\n        sum\
    \ = side1 + side2 + side3;\n        if (sum > side3) {\n            area = sum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqtquonc8.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a+b+c)/2;\n        float side2 = (float)(a+b+c)/2;\n\
    \        float side3 = (float)(a+b+c)/2;\n        float side4 = (float)(a+b+c)/2;\n\
    \        float side5 = side1 + side2;\n        float side6 = side1 + side3;\n\
    \        float side7 = side2 + side3;\n        float side8 = side1 + side4;\n\
    \        float side9 = side2 + side4;\n        float side10 = side3 + side4;\n\
    \        float side11 = side1 + side5;\n        float side12 = side1 + side6;\n\
    \        float side13 = side2 + side6;\n        float side14 = side3 + side6;\n\
    \        float side15 = side4 + side6;\n        float side16 = side1 + side7;\n\
    \        float side17 = side2 + side7;\n        float side18 = side3 + side7;\n\
    \        float side19 = side4 + side7;\n        float side20 = side5 + side7;\n\
    \        float side21 = side6 + side7;\n        float side22 = side1 + side8;\n\
    \        float side23 = side2 + side8;\n        float side24 = side3 + side8;\n\
    \        float side25 = side4 + side8;\n        float side26 = side5 + side8;\n\
    \        float side27 = side6 + side8;\n        float side28 = side1 + side9;\n\
    \        float side29 = side2 + side9;\n        float side30 = side3 + side9;\n\
    \        float side31 = side4 + side9;\n        float side32 = side5 + side9;\n\
    \        float side33 = side6 + side9;\n        float side34 = side7 + side9;\n\
    \        float side35 = side8 + side9;\n        float side36 = side1 + side10;\n\
    \        float side37 = side2 + side10;\n        float side38 = side3 + side10;\n\
    \        float side39 = side4 + side10;\n        float side40 = side5 + side10;\n\
    \        float side41 = side6 + side10;\n        float side42 = side7 + side10;\n\
    \        float side43 = side8 + side10;\n        float side44 = side1 + side11;\n\
    \        float side45 = side2 + side11;\n        float side46 = side3 + side11;\n\
    \        float side47 = side4 + side11;\n        float side48 = side5 + side11;\n\
    \        float side49 = side\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfdqnqxt4.cs(69,28): error CS1002: ; expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)(a * a + b * b + c * c);\n        if\
    \ (sum > 0) {\n            float side1 = (float)(a * a / sum);\n            float\
    \ side2 = (float)(b * b / sum);\n            float side3 = (float)(c * c / sum);\n\
    \            area = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcnmtnomc.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpcnmtnomc.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)(a+b+c);\n        if (sum > 0) {\n  \
    \          float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float sum1 = (long)(a+b+c);\n\
    \            float sum2 = (float)(a+b+c);\n            float sum3 = (float)(b+c);\n\
    \            float sum4 = (float)(a+b);\n            float sum5 = (float)(a+c);\n\
    \            float sum6 = (float)(b+c);\n            float sum7 = (float)(a+b);\n\
    \            float sum8 = (float)(b+c);\n            float sum9 = (float)(a+c);\n\
    \            float sum10 = (float)(b+c);\n            float sum11 = (float)(a);\n\
    \            float sum12 = (float)(b);\n            float sum13 = (float)(c);\n\
    \            float sum14 = (float)(a+b);\n            float sum15 = (float)(a+c);\n\
    \            float sum16 = (float)(b+c);\n            float sum17 = (float)(a);\n\
    \            float sum18 = (float)(b);\n            float sum19 = (float)(c);\n\
    \            float sum20 = (float)(a+b);\n            float sum21 = (float)(b);\n\
    \            float sum22 = (float)(a+c);\n            float sum23 = (float)(b+c);\n\
    \            float sum24 = (float)(a);\n            float sum25 = (float)(b);\n\
    \            float sum26 = (float)(a+c);\n            float sum27 = (float)(b+c);\n\
    \            float sum28 = (float)(a);\n            float sum29 = (float)(b);\n\
    \            float sum30 = (float)(a+c);\n            float sum31 = (float)(b+c);\n\
    \            float sum32 = (float)(a);\n            float sum33 = (float)(b);\n\
    \            float sum34 = (float)(a+c);\n            float sum35 = (float)(b+c);\n\
    \            float sum36 = (float)(a);\n            float sum37 = (float)(b);\n\
    \            float sum38 = (float)(a+c);\n            float sum39 = (float)(b+c);\n\
    \            float sum40 = (float)(a);\n            float sum41 = (float)(b);\n\
    \            float sum42 = (float)(b);\n            float sum43 = (float)(a);\n\
    \            float sum44 = (float)(b);\n            float sum45 = (float)(a);\n\
    \            float sum46 = (float)(b);\n            float sum47 = (float)(a);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf7srltzf.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpf7srltzf.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third68;\n        float third69;\n        float third70;\n        float third71;\n\
    \        float third72;\n        float third73;\n        float third74;\n    \
    \    float third75;\n        float third76;\n        float third77;\n        float\
    \ third78;\n        float third79;\n        float thir\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20y_9lfm.cs(99,19): error CS1002: ; expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        }\n        else {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe9xfd8ed.cs(29,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = (float)((side1+side2)/2);\n\
    \            float side5 = (float)((side2+side3)/2);\n            float side6\
    \ = (float)((side3+side4)/2);\n            float side7 = (float)((side4+side5)/2);\n\
    \            float side8 = (float)((side5+side6)/2);\n            float side9\
    \ = (float)((side6+side7)/2);\n            float side10 = (float)((side7+side8)/2);\n\
    \            float side11 = (float)((side8+side9)/2);\n            float side12\
    \ = (float)((side9+side10)/2);\n            float side13 = (float)((side10+side11)/2);\n\
    \            float side14 = (float)((side11+side12)/2);\n            float side15\
    \ = (float)((side12+side13)/2);\n            float side16 = (float)((side13+side14)/2);\n\
    \            float side17 = (float)((side14+side15)/2);\n            float side18\
    \ = (float)((side15+side16)/2);\n            float side19 = (float)((side16+side17)/2);\n\
    \            float side20 = (float)((side17+side18)/2);\n            float side21\
    \ = (float)((side18+side19)/2);\n            float side22 = (float)((side19+side20)/2);\n\
    \            float side23 = (float)((side20+side21)/2);\n            float side24\
    \ = (float)((side21+side22)/2);\n            float side25 = (float)((side22+side23)/2);\n\
    \            float side26 = (float)((side23+side24)/2);\n            float side27\
    \ = (float)((side24+side25)/2);\n            float side28 = (float)((side25+side26)/2);\n\
    \            float side29 = (float)((side26+side27)/2);\n            float side30\
    \ = (float)((side27+side28)/2);\n            float side31 = (float)((side28+side29)/2);\n\
    \            float side32 = (float)((side29+side30)/2);\n            float side33\
    \ = (float)((side30+side31)/2);\n            float side34 = (float)((side31+side\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaff4lbx9.cs(56,48): error CS1026: ) expected

    /tmp/tmpaff4lbx9.cs(56,48): error CS1002: ; expected

    /tmp/tmpaff4lbx9.cs(58,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpaff4lbx9.cs(70,2): error CS1513: } expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b) / c;\n        }\n        else {\n            area = -1;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkk5y3y40.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d8156346b60494eba290380aba85550>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d8156346b60494eba290380aba85550>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        sum\
    \ = a+b+c;\n        sum2 = a*a+b*b+c*c;\n        sum3 = sum*sum;\n        if (sum2\
    \ > sum3) {\n            area = sum/2;\n        } else {\n            area = -1;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9ndumn1v.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)(c / b);\n        if (side1 + side2\
    \ > side3) {\n            area = side1;\n        } else {\n            area =\
    \ side2;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp92lwq_lb.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float side1 = (float)(a * b) / c;\n      \
    \  float side2 = (float)(a * c) / b;\n        float side3 = (float)(b * c) / a;\n\
    \        sum = a + b + c;\n        if (side1 + side2 > side3) {\n            area\
    \ = side1;\n        } else {\n            area = side2;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsc_iw83j.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        float sum = side1 + side2\
    \ + side3;\n        if (sum > 0) {\n            area = Math.Round(sum * 0.5f,\
    \ 2);\n        } else {\n            area = -1;\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdj2zmmuw.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if (a + b > c) {\n            area = (a * b) / c;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxh503p76.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = b - a;\n            area = side1 * side2\
    \ * side3;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4m0ktnth.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = Math.Sqrt(Math.Pow(sum - c, 2) / 2);\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp913iwoeg.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp913iwoeg.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b) / c;\n        }\n        else {\n            area = -1;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkk5y3y40.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (Math.Abs(sum -\
    \ a) < 0.0001f && Math.Abs(sum - b) < 0.0001f && Math.Abs(sum - c) < 0.0001f)\
    \ {\n            area = sum;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e99dd9ac383946c880dd719a78d8aafa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e99dd9ac383946c880dd719a78d8aafa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float fourth;\n   \
    \     float fifth;\n        float sixth;\n        float seventh;\n        float\
    \ eighth;\n        float ninth;\n        float tenth;\n        float eleventh;\n\
    \        float twelfth;\n        float thirteenth;\n        float fourteenth;\n\
    \        float fifteenth;\n        float sixteenth;\n        float seventeenth;\n\
    \        float eighteenth;\n        float nineteenth;\n        float twentieth;\n\
    \        float twentyfirst;\n        float twentysecond;\n        float twentythird;\n\
    \        float twentyfourth;\n        float twentyfifth;\n        float twentysixth;\n\
    \        float twentyseventh;\n        float twentyeighth;\n        float twentyninth;\n\
    \        float thirtieth;\n        float thirtyfirst;\n        float thirtysecond;\n\
    \        float thirtythird;\n        float thirtyfourth;\n        float thirtyfifth;\n\
    \        float thirtysixth;\n        float thirtyseventh;\n        float thirtyeighth;\n\
    \        float thirtyninth;\n        float fortieth;\n        float fortyfirst;\n\
    \        float fortysecond;\n        float fortythird;\n        float fortyfourth;\n\
    \        float fortyfifth;\n        float fortysixth;\n        float fortyseventh;\n\
    \        float fortyeighth;\n        float fortyninth;\n        float fiftieth;\n\
    \        float fiftyfirst;\n        float fiftysecond;\n        float fiftythird;\n\
    \        float fiftyfourth;\n        float fiftyfifth;\n        float fiftysixth;\n\
    \        float fiftyseventh;\n        float fiftyeighth;\n        float fiftyninth;\n\
    \        float sixtieth;\n        float sixtyfirst;\n        float sixtysecond;\n\
    \        float sixtythird;\n        float sixtyfourth;\n        float sixtyfifth;\n\
    \        float sixtysixth;\n        float sixtyseventh;\n        \n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgkj1iyfk.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpgkj1iyfk.cs(22,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(23,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(24,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(25,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(26,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(27,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(28,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(29,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(30,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(31,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(32,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(33,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(34,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(35,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(36,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(37,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(38,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(39,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmpgkj1iyfk.cs(40,15): warning C'
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)(b\
    \ * c) / a;\n        float side3 = (float)(c * a) / b;\n        float sum = side1\
    \ + side2 + side3;\n        if (sum > 0) {\n            area = Math.Round(sum\
    \ * 100) / 100;\n        } else {\n            area = -1;\n        }\n       \
    \ return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn3fv2fza.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = (a + b + c) / 2;\n        if (a > b + c) {\n \
    \           area = sum * sum;\n        }\n        else if (b > a + c) {\n    \
    \        area = sum * sum;\n        }\n        else if (c > a + b) {\n       \
    \     area = sum * sum;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3v1_c7_h.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      float area = (a*b*c)/(float)sum;\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpus8vab4a.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2, MidpointRounding.AwayFromZero);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbjlv6xi8.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / 2;\n        } else {\n            area = -1;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn_sssnyj.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = (float)Math.Sqrt(Math.Pow(sum - c, 2) / (2 * a + b));\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk5t49h2d.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        float sum = (side1 + side2\
    \ + side3);\n        if (sum > 0) {\n            area = Math.Sqrt(sum);\n    \
    \    } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph2zit_r6.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmph2zit_r6.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float side;\n        float sum2;\n       \
    \ float sum3;\n        float sum4;\n        float sum5;\n        float sum6;\n\
    \        float sum7;\n        float sum8;\n        float sum9;\n        float\
    \ sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n \
    \       float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps39vxkzp.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmps39vxkzp.cs(22,15): warning CS0168: The variable ''side'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(23,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(24,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(25,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(26,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(27,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(28,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(29,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(30,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(31,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(32,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(33,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(34,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(35,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(36,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(37,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(38,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(39,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmps39vxkzp.cs(40,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        long g\
    \ = Math.Sqrt(f * f + d * d + e * e);\n        if (g > 0) {\n            float\
    \ area = f * g;\n            return Math.Round(area, 2);\n        }\n        return\
    \ -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcebbf162.cs(23,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpcebbf162.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (b + c > a) && (a + c > b)) {\n      \
    \      area = (a * b * c) / ((a * b) + (b * c) + (c * a));\n        }\n      \
    \  return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnhpjy7st.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        long\
    \ sum4;\n        long sum5;\n        long sum6;\n        long sum7;\n        long\
    \ sum8;\n        long sum9;\n        long sum10;\n        long sum11;\n      \
    \  long sum12;\n        long sum13;\n        long sum14;\n        long sum15;\n\
    \        long sum16;\n        long sum17;\n        long sum18;\n        long sum19;\n\
    \        long sum20;\n        long sum21;\n        long sum22;\n        long sum23;\n\
    \        long sum24;\n        long sum25;\n        long sum26;\n        long sum27;\n\
    \        long sum28;\n        long sum29;\n        long sum30;\n        long sum31;\n\
    \        long sum32;\n        long sum33;\n        long sum34;\n        long sum35;\n\
    \        long sum36;\n        long sum37;\n        long sum38;\n        long sum39;\n\
    \        long sum40;\n        long sum41;\n        long sum42;\n        long sum43;\n\
    \        long sum44;\n        long sum45;\n        long sum46;\n        long sum47;\n\
    \        long sum48;\n        long sum49;\n        long sum50;\n        long sum51;\n\
    \        long sum52;\n        long sum53;\n        long sum54;\n        long sum55;\n\
    \        long sum56;\n        long sum57;\n        long sum58;\n        long sum59;\n\
    \        long sum60;\n        long sum61;\n        long sum62;\n        long sum63;\n\
    \        long sum64;\n        long sum65;\n        long sum66;\n        long sum67;\n\
    \        long sum68;\n        long sum69;\n        long sum70;\n        long sum71;\n\
    \        long sum72;\n        long sum73;\n        long sum74;\n        long sum75;\n\
    \        long sum76;\n        long sum77;\n        long sum78;\n        long sum79;\n\
    \        long sum80;\n        long sum81;\n        long sum82;\n        long sum83;\n\
    \        long sum84;\n        long sum85;\n        long sum86;\n        long sum87;\n\
    \        long sum88;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp50pmq85j.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp50pmq85j.cs(22,14): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(23,14): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(24,14): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(25,14): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(26,14): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(27,14): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(28,14): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(29,14): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(30,14): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(31,14): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(32,14): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(33,14): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(34,14): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(35,14): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(36,14): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(37,14): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(38,14): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(39,14): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(40,14): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = a + b + c;\n   \
    \     if (sum > 0) {\n            temp = sum / 2;\n            area = Math.Sqrt(Math.Pow(temp,\
    \ 2) + Math.Pow(c - sum, 2));\n        } else {\n            area = -1;\n    \
    \    }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk_dsymcr.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            sum = c - sum;\n     \
    \   }\n        float area = Math.Sqrt(sum);\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa4rqci1p.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpa4rqci1p.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fccdeb25b8424ec8a872861792c8ff8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (b + c > a) && (a + c > b)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <19fe983d7d534d1cbd325fbc8becbc21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <19fe983d7d534d1cbd325fbc8becbc21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d8156346b60494eba290380aba85550>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9d8156346b60494eba290380aba85550>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplmju520w.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - a;\n        long f = d - e;\n        long g\
    \ = e + f;\n        if (g > 0) {\n            long h = Math.Sqrt(g);\n       \
    \     long i = a * h;\n            long j = b * h;\n            long k = c * h;\n\
    \            return i * j / k;\n        }\n        return -1;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpohzojeha.cs(25,22): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = (float)Math.Sqrt(sum - side1 - side2);\n\
    \            area = side1 * side2 * side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3egpva8w.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n       \
    \ float side4 = (float)(a+b+c)/2.0f;\n        float side5 = Math.Sqrt(side1*side1\
    \ + side2*side2 + side3*side3 + side4*side4);\n        float side6 = Math.Sqrt(side1*side1\
    \ + side2*side2 + side3*side3 + side4*side4 + side5*side5);\n        float side7\
    \ = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4 + side5*side5\
    \ + side6*side6);\n        float side8 = Math.Sqrt(side1*side1 + side2*side2 +\
    \ side3*side3 + side4*side4 + side5*side5 + side6*side6 + side7*side7);\n    \
    \    float side9 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4\
    \ + side5*side5 + side6*side6 + side7*side7 + side8*side8);\n        float side10\
    \ = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4 + side5*side5\
    \ + side6*side6 + side7*side7 + side8*side8 + side9*side9);\n        float side11\
    \ = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4 + side5*side5\
    \ + side6*side6 + side7*side7 + side8*side8 + side9*side9 + side10*side10);\n\
    \        float side12 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4\
    \ + side5*side5 + side6*side6 + side7*side7 + side8*side8 + side9*side9 + side10*side10\
    \ + side11*side11);\n        float side13 = Math.Sqrt(side1*side1 + side2*side2\
    \ + side3*side3 + side4*side4 + side5*side5 + side6*side6 + side7*side7 + side8*side8\
    \ + side9*side9 + side10*side10 + side11*side11 + side12*side12);\n        float\
    \ side14 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4 + side5*\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxx83y28k.cs(34,96): error CS1525: Invalid expression term ''}''

    /tmp/tmpxx83y28k.cs(34,96): error CS1026: ) expected

    /tmp/tmpxx83y28k.cs(34,96): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3_kwi_a4.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        long sumOfFourSides;\n        long sumOfFiveSides;\n        long sumOfSixSides;\n\
    \        long sumOfSevenSides;\n        long sumOfEightSides;\n        long sumOfNineSides;\n\
    \        long sumOfTenSides;\n        long sumOfElevenSides;\n        long sumOfTwelveSides;\n\
    \        long sumOfThirteenSides;\n        long sumOfFourteenSides;\n        long\
    \ sumOfFifteenSides;\n        long sumOfSixteenSides;\n        long sumOfSeventeenSides;\n\
    \        long sumOfEighteenSides;\n        long sumOfNineteenSides;\n        long\
    \ sumOfTwentySides;\n        long sumOfTwentyOneSides;\n        long sumOfTwentyTwoSides;\n\
    \        long sumOfTwentyThreeSides;\n        long sumOfTwentyFourSides;\n   \
    \     long sumOfTwentyFiveSides;\n        long sumOfTwentySixSides;\n        long\
    \ sumOfTwentySevenSides;\n        long sumOfTwentyEightSides;\n        long sumOfTwentyNineSides;\n\
    \        long sumOfTwentyTenSides;\n        long sumOfTwentyElevenSides;\n   \
    \     long sumOfTwentyTwelveSides;\n        long sumOfTwentyThirteenSides;\n \
    \       long sumOfTwentyFourteenSides;\n        long sumOfTwentyFifteenSides;\n\
    \        long sumOfTwentySixteenSides;\n        long sumOfTwentySeventeenSides;\n\
    \        long sumOfTwentyEighteenSides;\n        long sumOfTwentyNineteenSides;\n\
    \        long sumOfTwentyTwentySides;\n        long sumOfTwentyTwentyOneSides;\n\
    \        long sumOfTwentyTwentyTwoSides;\n        long sumOfTwentyTwentyThreeSides;\n\
    \        long sumOfTwentyTwentyFourSides;\n        long sumOfTwentyTwentyFiveSides;\n\
    \        long sumOfTwentyTwentySixSides;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu8tndkn.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpqu8tndkn.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpqu8tndkn.cs(22,14): warning CS0168: The variable ''sumOfTwoSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(23,14): warning CS0168: The variable ''sumOfThreeSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(24,14): warning CS0168: The variable ''sumOfFourSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(25,14): warning CS0168: The variable ''sumOfFiveSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(26,14): warning CS0168: The variable ''sumOfSixSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(27,14): warning CS0168: The variable ''sumOfSevenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(28,14): warning CS0168: The variable ''sumOfEightSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(29,14): warning CS0168: The variable ''sumOfNineSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(30,14): warning CS0168: The variable ''sumOfTenSides'' is
    declared but never used

    /tmp/tmpqu8tndkn.cs(31,14): warning CS0168: The variable ''sumOfElevenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(32,14): warning CS0168: The variable ''sumOfTwelveSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(33,14): warning CS0168: The variable ''sumOfThirteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(34,14): warning CS0168: The variable ''sumOfFourteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(35,14): warning CS0168: The variable ''sumOfFifteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(36,14): warning CS0168: The variable ''sumOfSixteenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(37,14): warning CS0168: The variable ''sumOfSeventeenSides''
    is declared but never used

    /tmp/tmpqu8tndkn.cs(38,14): warning CS0168: The variable ''sumOfEighteenSides''
    is declared but never u'
  timestamp: 1659805097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float sum2;\n     \
    \   float sum3;\n        float sum4;\n        float sum5;\n        float sum6;\n\
    \        float sum7;\n        float sum8;\n        float sum9;\n        float\
    \ sum10;\n        float sum11;\n        float sum12;\n        float sum13;\n \
    \       float sum14;\n        float sum15;\n        float sum16;\n        float\
    \ sum17;\n        float sum18;\n        float sum19;\n        float sum20;\n \
    \       float sum21;\n        float sum22;\n        float sum23;\n        float\
    \ sum24;\n        float sum25;\n        float sum26;\n        float sum27;\n \
    \       float sum28;\n        float sum29;\n        float sum30;\n        float\
    \ sum31;\n        float sum32;\n        float sum33;\n        float sum34;\n \
    \       float sum35;\n        float sum36;\n        float sum37;\n        float\
    \ sum38;\n        float sum39;\n        float sum40;\n        float sum41;\n \
    \       float sum42;\n        float sum43;\n        float sum44;\n        float\
    \ sum45;\n        float sum46;\n        float sum47;\n        float sum48;\n \
    \       float sum49;\n        float sum50;\n        float sum51;\n        float\
    \ sum52;\n        float sum53;\n        float sum54;\n        float sum55;\n \
    \       float sum56;\n        float sum57;\n        float sum58;\n        float\
    \ sum59;\n        float sum60;\n        float sum61;\n        float sum62;\n \
    \       float sum63;\n        float sum64;\n        float sum65;\n        float\
    \ sum66;\n        float sum67;\n        float sum68;\n        float sum69;\n \
    \       float sum70;\n        float sum71;\n        float sum72;\n        float\
    \ sum73;\n        float sum74;\n        float sum75;\n        float sum76;\n \
    \       float sum77;\n        float sum78;\n        float sum79;\n        float\
    \ sum80;\n        float sum81;\n        float sum82;\n        float sum83;\n \
    \       float sum84;\n        float sum85;\n        float sum86;\n        float\
    \ sum87;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjs9ev1bu.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpjs9ev1bu.cs(22,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(23,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(24,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(25,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(26,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(27,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(28,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(29,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(30,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(31,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(32,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(33,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(34,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(35,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(36,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(37,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(38,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(39,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpjs9ev1bu.cs(40,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        long g\
    \ = Math.Sqrt(f * f + d * d + e * e);\n        return Convert.ToSingle(g);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfoz3zk6r.cs(23,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcfzk7ab8.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = Math.Sqrt(Math.Pow(sum - c, 2.0f) / 2.0f);\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8_y4k0ts.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp8_y4k0ts.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        long\
    \ sum4;\n        long sum5;\n        long sum6;\n        long sum7;\n        long\
    \ sum8;\n        long sum9;\n        long sum10;\n        long sum11;\n      \
    \  long sum12;\n        long sum13;\n        long sum14;\n        long sum15;\n\
    \        long sum16;\n        long sum17;\n        long sum18;\n        long sum19;\n\
    \        long sum20;\n        long sum21;\n        long sum22;\n        long sum23;\n\
    \        long sum24;\n        long sum25;\n        long sum26;\n        long sum27;\n\
    \        long sum28;\n        long sum29;\n        long sum30;\n        long sum31;\n\
    \        long sum32;\n        long sum33;\n        long sum34;\n        long sum35;\n\
    \        long sum36;\n        long sum37;\n        long sum38;\n        long sum39;\n\
    \        long sum40;\n        long sum41;\n        long sum42;\n        long sum43;\n\
    \        long sum44;\n        long sum45;\n        long sum46;\n        long sum47;\n\
    \        long sum48;\n        long sum49;\n        long sum50;\n        long sum51;\n\
    \        long sum52;\n        long sum53;\n        long sum54;\n        long sum55;\n\
    \        long sum56;\n        long sum57;\n        long sum58;\n        long sum59;\n\
    \        long sum60;\n        long sum61;\n        long sum62;\n        long sum63;\n\
    \        long sum64;\n        long sum65;\n        long sum66;\n        long sum67;\n\
    \        long sum68;\n        long sum69;\n        long sum70;\n        long sum71;\n\
    \        long sum72;\n        long sum73;\n        long sum74;\n        long sum75;\n\
    \        long sum76;\n        long sum77;\n        long sum78;\n        long sum79;\n\
    \        long sum80;\n        long sum81;\n        long sum82;\n        long sum83;\n\
    \        long sum84;\n        long sum85;\n        long sum86;\n        long sum87;\n\
    \        long sum88;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp50pmq85j.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp50pmq85j.cs(22,14): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(23,14): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(24,14): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(25,14): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(26,14): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(27,14): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(28,14): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(29,14): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(30,14): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(31,14): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(32,14): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(33,14): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(34,14): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(35,14): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(36,14): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(37,14): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(38,14): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(39,14): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(40,14): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplmju520w.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b-c)/2.0f;\n        float side3 = (float)(a-b+c)/2.0f;\n       \
    \ float side4 = (float)(a-b-c)/2.0f;\n        float side5 = Math.Sqrt(side1*side1\
    \ + side2*side2 + side3*side3 + side4*side4);\n        if (side5 > 0.0f) {\n \
    \           float side6 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 +\
    \ side4*side4);\n            float side7 = side1*side2;\n            float side8\
    \ = side3*side4;\n            float side9 = side2*side3;\n            float side10\
    \ = side4*side5;\n            float side11 = side1*side4;\n            float side12\
    \ = side3*side5;\n            float side13 = side2*side5;\n            float side14\
    \ = side4*side3;\n            float side15 = side1*side3;\n            float side16\
    \ = side2*side4;\n            float side17 = side1*side2;\n            float side18\
    \ = side3*side1;\n            float side19 = side2*side1;\n            float side20\
    \ = side4*side1;\n            float side21 = side1*side5;\n            float side22\
    \ = side3*side3;\n            float side23 = side2*side4;\n            float side24\
    \ = side1*side4;\n            float side25 = side3*side5;\n            float side26\
    \ = side2*side3;\n            float side27 = side1*side2;\n            float side28\
    \ = side3*side1;\n            float side29 = side2*side1;\n            float side30\
    \ = side4*side1;\n            float side31 = side1*side3;\n            float side32\
    \ = side2*side2;\n            float side33 = side1*side4;\n            float side34\
    \ = side3*side5;\n            float side35 = side2*side4;\n            float side36\
    \ = side1*side5;\n            float side37 = side3*side3;\n            float side38\
    \ = side2*side2;\n            float side39 = side1*side3;\n            float side40\
    \ = side2*side4;\n            float side41 = side1*side2;\n            float side42\
    \ = side3*side1;\n            float side43 = side2*side1;\n            float side44\
    \ = side4*side1;\n            float side45 = side1*side4;\n            float side46\
    \ = side3*side\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmzrc0_a2.cs(67,38): error CS1002: ; expected

    /tmp/tmpmzrc0_a2.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpmzrc0_a2.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(c * a);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1 * side2 / side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpss3e7n51.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else {\n            area = (float)(Math.Sqrt(Math.Pow(sum,\
    \ 2) - Math.Pow(a - b, 2) - Math.Pow(b - c, 2)));\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a131b78c0b264e1aad65bcf041dd1d5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a131b78c0b264e1aad65bcf041dd1d5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        sumOfTwoSides = a + b;\n        sumOfThreeSides = a + c + b;\n      \
    \  sum = sumOfTwoSides + sumOfThreeSides;\n        if (sumOfTwoSides > sumOfThreeSides)\
    \ {\n            area = sumOfTwoSides * 0.5f;\n        } else {\n            area\
    \ = sumOfThreeSides * 0.5f;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgo_1bwk.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        long\
    \ sum4;\n        long sum5;\n        long sum6;\n        long sum7;\n        long\
    \ sum8;\n        long sum9;\n        long sum10;\n        long sum11;\n      \
    \  long sum12;\n        long sum13;\n        long sum14;\n        long sum15;\n\
    \        long sum16;\n        long sum17;\n        long sum18;\n        long sum19;\n\
    \        long sum20;\n        long sum21;\n        long sum22;\n        long sum23;\n\
    \        long sum24;\n        long sum25;\n        long sum26;\n        long sum27;\n\
    \        long sum28;\n        long sum29;\n        long sum30;\n        long sum31;\n\
    \        long sum32;\n        long sum33;\n        long sum34;\n        long sum35;\n\
    \        long sum36;\n        long sum37;\n        long sum38;\n        long sum39;\n\
    \        long sum40;\n        long sum41;\n        long sum42;\n        long sum43;\n\
    \        long sum44;\n        long sum45;\n        long sum46;\n        long sum47;\n\
    \        long sum48;\n        long sum49;\n        long sum50;\n        long sum51;\n\
    \        long sum52;\n        long sum53;\n        long sum54;\n        long sum55;\n\
    \        long sum56;\n        long sum57;\n        long sum58;\n        long sum59;\n\
    \        long sum60;\n        long sum61;\n        long sum62;\n        long sum63;\n\
    \        long sum64;\n        long sum65;\n        long sum66;\n        long sum67;\n\
    \        long sum68;\n        long sum69;\n        long sum70;\n        long sum71;\n\
    \        long sum72;\n        long sum73;\n        long sum74;\n        long sum75;\n\
    \        long sum76;\n        long sum77;\n        long sum78;\n        long sum79;\n\
    \        long sum80;\n        long sum81;\n        long sum82;\n        long sum83;\n\
    \        long sum84;\n        long sum85;\n        long sum86;\n        long sum87;\n\
    \        long sum88;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp50pmq85j.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp50pmq85j.cs(22,14): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(23,14): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(24,14): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(25,14): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(26,14): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(27,14): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(28,14): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(29,14): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(30,14): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(31,14): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(32,14): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(33,14): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(34,14): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(35,14): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(36,14): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(37,14): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(38,14): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(39,14): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp50pmq85j.cs(40,14): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        long sum = a+b+c;\n        if (sum > 0) {\n            float\
    \ side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n            float\
    \ side2 = (float)Math.Sqrt(Math.Pow(c, 2) - Math.Pow(a, 2));\n            float\
    \ side3 = (float)Math.Sqrt(Math.Pow(b, 2) - Math.Pow(c, 2));\n            float\
    \ side4 = (float)Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b, 2));\n            float\
    \ side5 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n     \
    \       float side6 = Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n            float side7 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) -\
    \ Math.Pow(c, 2));\n            float side8 = Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b,\
    \ 2) - Math.Pow(c, 2));\n            float side9 = Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side10 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) + Math.Pow(c, 2));\n            float side11 = Math.Sqrt(Math.Pow(a,\
    \ 2) - Math.Pow(b, 2) - Math.Pow(c, 2));\n            float side12 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2) - Math.Pow(a, 2));\n            float side13\
    \ = Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b, 2) + Math.Pow(c, 2) - Math.Pow(a, 2));\n\
    \            float side14 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) - Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side15 = Math.Sqrt(Math.Pow(a, 2) -\
    \ Math.Pow(b, 2) - Math.Pow(c, 2) - Math.Pow(a, 2));\n            float side16\
    \ = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a, 2));\n\
    \            float side17 = Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(a, 2));\n            float side18 = Math.Sqrt(Math.Pow(a, 2) +\
    \ Math.Pow(b, 2) - Math.Pow(c, 2) + Math.Pow(a, 2));\n            float side19\
    \ = Math.Sqrt(Math.Pow(a, 2) - Math.Pow(b, 2) - Math.Pow(c, 2) + Math.Pow(a, 2));\n\
    \            float side20 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side21 = Math.Sqrt(Math.Pow(a, 2) -\
    \ Math.Pow(b, 2) + Math.Pow(c, 2) - Math.Pow(a, 2));\n            float side22\
    \ = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) - Math.Pow(c, \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcddewvkv.cs(44,83): error CS1525: Invalid expression term ''}''

    /tmp/tmpcddewvkv.cs(44,83): error CS1026: ) expected

    /tmp/tmpcddewvkv.cs(44,83): error CS1002: ; expected

    /tmp/tmpcddewvkv.cs(46,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpcddewvkv.cs(58,2): error CS1513: } expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpndd3erqy.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third68;\n        float third69;\n        float third70;\n        float third71;\n\
    \        float third72;\n        float third73;\n        float third74;\n    \
    \    float third75;\n        float third76;\n        float third77;\n        float\
    \ third78;\n        float third79;\n        float thir\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20y_9lfm.cs(99,19): error CS1002: ; expected

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n      \
    \  long sum84 = 0;\n        long sum85 = 0;\n        long \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyfhln3_b.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpyfhln3_b.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdl2jdx5e.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (b + c > a) && (c + a > b)) {\n          \
    \  area = (a * b * c) / 2;\n        } else {\n            area = -1;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0kavenfv.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824572
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * 0.5f;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0780b03e1144a80a99e16dc94bc1f82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b0780b03e1144a80a99e16dc94bc1f82>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        long g\
    \ = a + b + c;\n        long h = g - a + b - c;\n        long i = f + g + h;\n\
    \        long j = 2 * f + 2 * g + 2 * h;\n        long k = 2 * a + 2 * b + 2 *\
    \ c;\n        long l = 2 * d + 2 * e + 2 * f;\n        long m = 2 * g + 2 * h\
    \ + 2 * i;\n        long n = 2 * e + 2 * f + 2 * i;\n        long o = 2 * d +\
    \ 2 * g + 2 * h;\n        long p = 2 * a + 2 * b + 2 * c;\n        long q = 2\
    \ * e + 2 * f + 2 * i;\n        long r = 2 * g + 2 * h + 2 * i;\n        long\
    \ s = 2 * d + 2 * e + 2 * f;\n        long t = 2 * g + 2 * h + 2 * i;\n      \
    \  long u = 2 * e + 2 * f + 2 * i;\n        long v = 2 * g + 2 * h + 2 * i;\n\
    \        long w = 2 * a + 2 * b + 2 * c;\n        long x = 2 * e + 2 * f + 2 *\
    \ i;\n        long y = 2 * g + 2 * h + 2 * i;\n        long z = 2 * d + 2 * e\
    \ + 2 * f;\n        long a = 2 * g + 2 * h + 2 * i;\n        long b = 2 * e +\
    \ 2 * f + 2 * i;\n        long c = 2 * g + 2 * h + 2 * i;\n        long d = 2\
    \ * a + 2 * b + 2 * c;\n        long e = 2 * e + 2 * f + 2 * i;\n        long\
    \ f = 2 * g + 2 * h + 2 * i;\n        long g = 2 * d + 2 * e + 2 * f;\n      \
    \  long h = 2 * g + 2 * h + 2 * i;\n        long i = 2 * e + 2 * f + 2 * i;\n\
    \        long j = 2 * g + 2 * h + 2 * i;\n        long k = 2 * a + 2 * b + 2 *\
    \ c;\n        long l = 2 * e + 2 * f + 2 * i;\n        long m = 2 * g + 2 * h\
    \ + 2 * i;\n        long n = 2 * e + 2 * f + 2 * i;\n        long o = 2 * d +\
    \ 2 * g + 2 * h;\n        long p = 2 * a + 2 * b + 2 * c;\n        long q = 2\
    \ * e + 2 * f + 2 * i;\n        long r = 2 * g + 2 * h + 2 * i;\n        long\
    \ s = 2 * d + 2 * e + 2 * f;\n        long t = 2 * g + 2 * h + 2 * i;\n      \
    \  long u = 2 * e + 2 * f + 2 * i;\n        long v = 2 * g + 2 * h + 2 * i;\n\
    \        long w = 2 * a + 2 * b\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7mtnh65w.cs(65,31): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        }\n        else {\n            area = Math.Sqrt(Math.Pow(sum,\
    \ 2.0f) / 2.0f);\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp7r3mob2.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2\
    \ = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 =\
    \ 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n\
    \        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n\
    \        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp84 = 0;\n        long temp\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa5b8ort1.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else {\n            float sum2 = Math.Sqrt(sum);\n\
    \            float sum3 = sum2 * sum2;\n            float sum4 = sum3 * sum3;\n\
    \            float sum5 = sum4 * sum4;\n            float sum6 = sum5 * sum5;\n\
    \            float sum7 = sum6 * sum6;\n            float sum8 = sum7 * sum7;\n\
    \            float sum9 = sum8 * sum8;\n            float sum10 = sum9 * sum9;\n\
    \            float sum11 = sum10 * sum10;\n            float sum12 = sum11 * sum11;\n\
    \            float sum13 = sum12 * sum12;\n            float sum14 = sum13 * sum13;\n\
    \            float sum15 = sum14 * sum14;\n            float sum16 = sum15 * sum15;\n\
    \            float sum17 = sum16 * sum16;\n            float sum18 = sum17 * sum17;\n\
    \            float sum19 = sum18 * sum18;\n            float sum20 = sum19 * sum19;\n\
    \            float sum21 = sum20 * sum20;\n            float sum22 = sum21 * sum21;\n\
    \            float sum23 = sum22 * sum22;\n            float sum24 = sum23 * sum23;\n\
    \            float sum25 = sum24 * sum24;\n            float sum26 = sum25 * sum25;\n\
    \            float sum27 = sum26 * sum26;\n            float sum28 = sum27 * sum27;\n\
    \            float sum29 = sum28 * sum28;\n            float sum30 = sum29 * sum29;\n\
    \            float sum31 = sum30 * sum30;\n            float sum32 = sum31 * sum31;\n\
    \            float sum33 = sum32 * sum32;\n            float sum34 = sum33 * sum33;\n\
    \            float sum35 = sum34 * sum34;\n            float sum36 = sum35 * sum35;\n\
    \            float sum37 = sum36 * sum36;\n            float sum38 = sum37 * sum37;\n\
    \            float sum39 = sum38 * sum38;\n            float sum40 = sum39 * sum39;\n\
    \            float sum41 = sum40 * sum40;\n            float sum42 = sum41 * sum41;\n\
    \            float sum43 = sum42 * sum42;\n            float sum44 = sum43 * sum43;\n\
    \            float sum45 = sum\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfov3_t9u.cs(68,30): error CS1002: ; expected

    /tmp/tmpfov3_t9u.cs(70,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpfov3_t9u.cs(82,2): error CS1513: } expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side1 = (float)a;\n        float side2\
    \ = (float)b;\n        float side3 = (float)c;\n        sum = side1 + side2;\n\
    \        if (sum > side3) {\n            area = side1 * side2 * side3 / sum;\n\
    \        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpllepa9g3.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b + c * c);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgughw2c8.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a+b+c)/2;\n        float side2 = (float)(a+b+c)/2;\n\
    \        float side3 = (float)(a+b+c)/2;\n        if (side1 + side2 > side3) {\n\
    \            area = side1 * side2 * side3;\n            area = Math.Round(area,\
    \ 2);\n        }\n        else {\n            area = -1;\n        }\n        return\
    \ area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptr4t6y0j.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum;\n        long temp;\n        long temp2;\n \
    \       long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;\n        long temp85;\n        long temp86;\n        long temp87;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq324pe32.cs(20,15): warning CS0219: The variable ''area'' is assigned
    but its value is never used

    /tmp/tmpq324pe32.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpq324pe32.cs(22,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpq324pe32.cs(23,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpq324pe32.cs(24,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpq324pe32.cs(25,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpq324pe32.cs(26,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpq324pe32.cs(27,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpq324pe32.cs(28,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpq324pe32.cs(29,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpq324pe32.cs(30,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpq324pe32.cs(31,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpq324pe32.cs(32,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpq324pe32.cs(33,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpq324pe32.cs(34,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpq324pe32.cs(35,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpq324pe32.cs(36,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpq324pe32.cs(37,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpq324pe32.cs(38,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpq324pe32.cs(39,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmpq324pe32.cs(40,14): warning CS0168: The variable ''temp1'
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdl2jdx5e.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824570
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / ((a * b) + (b * c));\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9gr7jtov.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n       \
    \ float side4 = side1;\n        float side5 = side2;\n        float side6 = side3;\n\
    \        float side7 = side4;\n        float side8 = side5;\n        float side9\
    \ = side6;\n        float side10 = side7;\n        float side11 = side8;\n   \
    \     float side12 = side9;\n        float side13 = side10;\n        float side14\
    \ = side11;\n        float side15 = side12;\n        float side16 = side13;\n\
    \        float side17 = side14;\n        float side18 = side15;\n        float\
    \ side19 = side16;\n        float side20 = side17;\n        float side21 = side18;\n\
    \        float side22 = side19;\n        float side23 = side20;\n        float\
    \ side24 = side21;\n        float side25 = side22;\n        float side26 = side23;\n\
    \        float side27 = side24;\n        float side28 = side25;\n        float\
    \ side29 = side26;\n        float side30 = side27;\n        float side31 = side28;\n\
    \        float side32 = side29;\n        float side33 = side30;\n        float\
    \ side34 = side31;\n        float side35 = side32;\n        float side36 = side33;\n\
    \        float side37 = side34;\n        float side38 = side35;\n        float\
    \ side39 = side36;\n        float side40 = side37;\n        float side41 = side38;\n\
    \        float side42 = side39;\n        float side43 = side40;\n        float\
    \ side44 = side41;\n        float side45 = side42;\n        float side46 = side43;\n\
    \        float side47 = side44;\n        float side48 = side45;\n        float\
    \ side49 = side46;\n        float side50 = side47;\n        float side51 = side48;\n\
    \        float side52 = side49;\n        float side53 = side50;\n        float\
    \ side54 = side51;\n        float side55 = side52;\n        float side56 = side53;\n\
    \        float side57 = side54;\n        float side\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjzir4ey_.cs(78,19): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b + c * c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7196ji3f.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp7196ji3f.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side1 = (float)(a * b);\n        float\
    \ side2 = (float)(a * c);\n        float side3 = (float)(b * c);\n        sum\
    \ = side1 + side2 + side3;\n        if (sum > side3) {\n            area = side3;\n\
    \        } else {\n            area = sum;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcuo72e1.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1;\n        } else if (sum > b) {\n            area = sum - c;\n\
    \        } else if (sum > a) {\n            area = c - b;\n        }\n       \
    \ return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu5xqy_1o.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            area = sum * 0.5f;\n\
    \        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptr9x116p.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      float area = (a*b*c)/(float)Math.Sqrt(sum);\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4t8mq2xp.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third66;\n        float third67;\n        float third68;\n        float third69;\n\
    \        float third70;\n        float third71;\n        float third72;\n    \
    \    float third73;\n        float third74;\n        float third75;\n        float\
    \ third76;\n        float third77;\n        float \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprn1nzr9m.cs(99,14): error CS1001: Identifier expected

    /tmp/tmprn1nzr9m.cs(99,14): error CS1002: ; expected

    '
  timestamp: 1659824572
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float sum2;\n        float sum3;\n       \
    \ float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8j29z8mj.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp8j29z8mj.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp8j29z8mj.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum, 2)/2);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphpvp8_9o.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmphpvp8_9o.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       float s = (a + b + c) / 2;\n            float area = Math.Sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxjgg_17w.cs(23,19): error CS0136: A local or parameter named ''area''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpxjgg_17w.cs(23,26): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        long g\
    \ = Math.Sqrt(f * f + d * d + e * e);\n        long h = Math.Sqrt(g * g + f *\
    \ f + d * d + e * e);\n        long i = g + h;\n        return Math.Round(i /\
    \ 2, 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw5xlmm04.cs(23,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpw5xlmm04.cs(24,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpw5xlmm04.cs(26,21): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Round(decimal, int)'' and ''Math.Round(double, int)''

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum, 2) / 2);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz_fub4ec.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpz_fub4ec.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/b);\n            float side2 = (float)(a/c);\n    \
    \        float side3 = (float)(b/c);\n            float side4 = (float)(a*b/c);\n\
    \            float side5 = (float)(a*c/b);\n            float side6 = (float)(b*c/a);\n\
    \            float side7 = (float)(a*b*c/a);\n            float side8 = (float)(a*c*b/a);\n\
    \            float side9 = (float)(b*c*a/b);\n            float side10 = (float)(a*b*c*a/b);\n\
    \            float side11 = (float)(a*c*b*a/b);\n            float side12 = (float)(b*c*a*b/b);\n\
    \            float side13 = (float)(a*b*c*a*b/b);\n            float side14 =\
    \ (float)(a*c*b*a*b/b);\n            float side15 = (float)(b*c*a*a*b/b);\n  \
    \          float side16 = (float)(a*b*c*a*a*b/b);\n            float side17 =\
    \ (float)(a*c*b*a*a*b/b);\n            float side18 = (float)(b*c*a*a*a*b/b);\n\
    \            float side19 = (float)(a*b*c*a*a*a*b/b);\n            float side20\
    \ = (float)(a*c*b*a*a*a*b/b);\n            float side21 = (float)(b*c*a*a*a*a*b/b);\n\
    \            float side22 = (float)(a*b*c*a*a*a*b*b/b);\n            float side23\
    \ = (float)(a*c*b*a*a*a*b*b/b);\n            float side24 = (float)(b*c*a*a*a*a*b*b/b);\n\
    \            float side25 = (float)(a*b*c*a*a*a*b*b*b/b);\n            float side26\
    \ = (float)(a*c*b*a*a*a*b*b*b/b);\n            float side27 = (float)(b*c*a*a*a*a*b*b*b/b);\n\
    \            float side28 = (float)(a*b*c*a*a*a*b*b*b*b/b);\n            float\
    \ side29 = (float)(a*c*b*a*a*a*b*b*b*b/b);\n            float side30 = (float)(b*c*a*a*a*a*b*b*b*b/b);\n\
    \            float side31 = (float)(a*b*c*a*a*a*b*b*b*b*b/b);\n            float\
    \ side32 = (float)(a*c*b*\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ckn1kkp.cs(54,42): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ckn1kkp.cs(54,42): error CS1026: ) expected

    /tmp/tmp_ckn1kkp.cs(54,42): error CS1002: ; expected

    /tmp/tmp_ckn1kkp.cs(56,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ckn1kkp.cs(68,2): error CS1513: } expected

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b) / c;\n        float side2\
    \ = (float)(b * c) / a;\n        float side3 = (float)(c * a) / b;\n        if\
    \ (side1 + side2 > side3) {\n            area = side1;\n        } else {\n   \
    \         area = side2;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv4wz9q75.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 > side2 && side1\
    \ > side3) {\n            area = side1;\n        } else if (side2 > side3) {\n\
    \            area = side2;\n        } else {\n            area = side3;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxfjc8wo6.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvz29vgle.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b * c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0hxnfcgh.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp0hxnfcgh.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a;\n        sum += b;\n        sum += c;\n\
    \        if (sum > c) {\n            area = sum * 0.5f;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp170y_5v4.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b) / c;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b252bbd28854b6b8641cf5a0a3442a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b252bbd28854b6b8641cf5a0a3442a7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side1 = (float)(a * b) / c;\n     \
    \   float side2 = (float)((b * c) / a);\n        float side3 = (float)((c * a)\
    \ / b);\n        sum = side1 + side2 + side3;\n        if (sum > 0) {\n      \
    \      area = Math.Round(sum, 2);\n        } else {\n            area = -1;\n\
    \        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6u07c6or.cs(27,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        long sum = a+b+c;\n        if (sum > 0) {\n            float\
    \ side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n       \
    \     float side3 = (float)(c/sum);\n            float sum1 = side1+side2;\n \
    \           float sum2 = side2+side3;\n            float sum3 = side1+side3;\n\
    \            float sum4 = side2+side1;\n            float sum5 = side3+side1;\n\
    \            float sum6 = side3+side2;\n            float sum7 = side1+side3;\n\
    \            float sum8 = side2+side3;\n            float sum9 = side1+side2;\n\
    \            float sum10 = side3+side1;\n            float sum11 = side3+side2;\n\
    \            float sum12 = side1+side3;\n            float sum13 = side2+side3;\n\
    \            float sum14 = side1+side2;\n            float sum15 = side3+side1;\n\
    \            float sum16 = side3+side2;\n            float sum17 = side1+side3;\n\
    \            float sum18 = side2+side3;\n            float sum19 = side1+side2;\n\
    \            float sum20 = side3+side1;\n            float sum21 = side3+side2;\n\
    \            float sum22 = side1+side3;\n            float sum23 = side2+side3;\n\
    \            float sum24 = side1+side2;\n            float sum25 = side3+side1;\n\
    \            float sum26 = side3+side2;\n            float sum27 = side1+side3;\n\
    \            float sum28 = side2+side3;\n            float sum29 = side1+side2;\n\
    \            float sum30 = side3+side1;\n            float sum31 = side3+side2;\n\
    \            float sum32 = side1+side3;\n            float sum33 = side2+side3;\n\
    \            float sum34 = side1+side2;\n            float sum35 = side3+side1;\n\
    \            float sum36 = side3+side2;\n            float sum37 = side1+side3;\n\
    \            float sum38 = side2+side3;\n            float sum39 = side1+side2;\n\
    \            float sum40 = side3+side1;\n            float sum41 = side3+side2;\n\
    \            float sum42 = side1+side3;\n            float sum43 = side2+side3;\n\
    \            float sum44 = side1+side2;\n            float sum45 = side3+side1;\n\
    \            float sum46 = side3+side2;\n            float sum47 = side1+side3;\n\
    \            float sum\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp88ajv1a0.cs(73,22): error CS1002: ; expected

    /tmp/tmp88ajv1a0.cs(75,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp88ajv1a0.cs(87,2): error CS1513: } expected

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv7y7bpc1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum = a + b + c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            area = (float)Math.Sqrt(Math.Pow(sum, 2)\
    \ / (2 * c));\n        }\n        return area;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de30e2e151824ac59feb75bb25c35200>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de30e2e151824ac59feb75bb25c35200>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        sumOfTwoSides = a + b;\n        sumOfThreeSides = a + c;\n        sum\
    \ = sumOfTwoSides + sumOfThreeSides;\n        if (sumOfTwoSides > sumOfThreeSides)\
    \ {\n            area = sumOfTwoSides * 0.5f;\n        } else {\n            area\
    \ = sumOfThreeSides * 0.5f;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2s_jbk38.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv7y7bpc1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5ndhuob.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        sum\
    \ = (a+b+c)/2;\n        sum2 = (a+b+c)/2;\n        sum3 = (a+b+c)/2;\n       \
    \ if (sum > sum2 && sum > sum3) {\n            area = sum * sum * .5;\n      \
    \  } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ahm07av.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp0ahm07av.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaxa_j1yw.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824571
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > 0) {\n            area\
    \ = (a+b+c) / 2;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl04b0vow.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824573

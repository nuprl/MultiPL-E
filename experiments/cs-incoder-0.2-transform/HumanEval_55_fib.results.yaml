language: cs
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 1;\n        long\
    \ b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n    \
    \    long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n\
    \        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m\
    \ = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n\
    \        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x\
    \ = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n      \
    \  long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n      \
    \  long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6ueqqs_j.cs(119,13): error CS1001: Identifier expected

    /tmp/tmp6ueqqs_j.cs(119,13): error CS1002: ; expected

    '
  timestamp: 1659793285
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        else\n            return Fib(n-1) + Fib(n-2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 1;\n        long\
    \ b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n    \
    \    long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n\
    \        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m\
    \ = 0;\n        long n = 0;\n        long o = 0;\n        long p = 0;\n      \
    \  long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n\
    \        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long A = 0;\n      \
    \  long B = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n\
    \        long F = 0;\n        long G = 0;\n        long H = 0;\n        long I\
    \ = 0;\n        long J = 0;\n        long K = 0;\n        long L = 0;\n      \
    \  long M = 0;\n        long N = 0;\n        long O = 0;\n        long P = 0;\n\
    \        long Q = 0;\n        long R = 0;\n        long S = 0;\n        long T\
    \ = 0;\n        long U = 0;\n        long V = 0;\n        long W = 0;\n      \
    \  long X = 0;\n        long Y = 0;\n        long Z = 0;\n        long AA = 0;\n\
    \        long BB = 0;\n        long CC = 0;\n        long DD = 0;\n        long\
    \ EE = 0;\n        long FF = 0;\n        long GG = 0;\n        long HH = 0;\n\
    \        long II = 0;\n        long JJ = 0;\n        long KK = 0;\n        long\
    \ LL = 0;\n        long MM = 0;\n        long NN = 0;\n        long OO = 0;\n\
    \        long PP = 0;\n        long QQ = 0;\n        long RR = 0;\n        long\
    \ SS = 0;\n        long TT = 0;\n        long UU = 0;\n        long VV = 0;\n\
    \        long WW = 0;\n        long XX = 0;\n        long YY = 0;\n        long\
    \ ZZ = 0;\n        long AAA = 0;\n        long BBB = 0;\n        long CCC = 0;\n\
    \        long DDD = 0;\n        long EEE = 0;\n        long FFF = 0;\n       \
    \ long GGG = 0;\n        long HHH = 0;\n        long III = 0;\n        long JJJ\
    \ = 0;\n        long KKK = 0;\n        long LLL = 0;\n        long MMM = 0;\n\
    \        long NNN = 0;\n        long OOO = 0;\n        long PPP = 0;\n       \
    \ long QQQ = 0;\n        long RRR = 0;\n        long SSS = 0;\n        long TTT\
    \ = 0;\n        long UUU = 0;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp__0k44kq.cs(30,14): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp__0k44kq.cs(17,14): warning CS0219: The variable ''a'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(18,14): warning CS0219: The variable ''b'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(19,14): warning CS0219: The variable ''c'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(20,14): warning CS0219: The variable ''d'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(21,14): warning CS0219: The variable ''e'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(22,14): warning CS0219: The variable ''f'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(23,14): warning CS0219: The variable ''g'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(24,14): warning CS0219: The variable ''h'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(25,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(26,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(27,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(28,14): warning CS0219: The variable ''l'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(29,14): warning CS0219: The variable ''m'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(30,14): warning CS0219: The variable ''n'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(31,14): warning CS0219: The variable ''o'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(32,14): warning CS0219: The variable ''p'' is assigned but
    its value is never used

    /tmp/tmp__0k44kq.cs(33,14): warning CS0219: The variable ''q'' is assigned but
    its value is never used

    /tmp/tmp__0k4'
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0 || n == 1) {\n\
    \            return n;\n        }\n        return Fib(n-1) + Fib(n-2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n-1) + Fib(n-2);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return 1;\n\
    \        if (n < 5) return Fib(n - 1) + Fib(n - 2);\n        if (n < 20) return\
    \ Fib(n - 5) + Fib(n - 10);\n        if (n < 100) return Fib(n - 20) + Fib(n -\
    \ 50);\n        if (n < 500) return Fib(n - 100) + Fib(n - 200);\n        if (n\
    \ < 1000) return Fib(n - 500) + Fib(n - 1000);\n        if (n < 5000) return Fib(n\
    \ - 1000) + Fib(n - 5000);\n        if (n < 10000) return Fib(n - 5000) + Fib(n\
    \ - 10000);\n        if (n < 50000) return Fib(n - 10000) + Fib(n - 50000);\n\
    \        if (n < 100000) return Fib(n - 50000) + Fib(n - 100000);\n        if\
    \ (n < 500000) return Fib(n - 100000) + Fib(n - 500000);\n        if (n < 1000000)\
    \ return Fib(n - 500000) + Fib(n - 1000000);\n        if (n < 5000000) return\
    \ Fib(n - 1000000) + Fib(n - 5000000);\n        if (n < 100000000) return Fib(n\
    \ - 5000000) + Fib(n - 100000000);\n        if (n < 500000000) return Fib(n -\
    \ 100000000) + Fib(n - 500000000);\n        if (n < 1000000000) return Fib(n -\
    \ 500000000) + Fib(n - 1000000000);\n        if (n < 5000000000) return Fib(n\
    \ - 1000000000) + Fib(n - 5000000000);\n        if (n < 10000000000) return Fib(n\
    \ - 5000000000) + Fib(n - 10000000000);\n        if (n < 50000000000) return Fib(n\
    \ - 10000000000) + Fib(n - 50000000000);\n        if (n < 100000000000) return\
    \ Fib(n - 50000000000) + Fib(n - 100000000000);\n        if (n < 500000000000)\
    \ return Fib(n - 100000000000) + Fib(n - 500000000000);\n        if (n < 1000000000000)\
    \ return Fib(n - 500000000000) + Fib(n - 1000000000000);\n        if (n < 5000000000000)\
    \ return Fib(n - 1000000000000) + Fib(n - 5000000000000);\n        if (n < 10000000000000)\
    \ return Fib(n - 5000000000000) + Fib(n - 10000000000000);\n        if (n < 50000000000000)\
    \ return Fib(n - 10000000000000) + Fib(n - 50000000000000);\n        if (n < 100000000000000)\
    \ return Fib(n - 50000000000000) + Fib(n - 100000000000000);\n        if (n <\
    \ 500000000000000) return Fib(n - 100000000000000) + Fib(n - 500000000000000);\n\
    \        if (n < 10000000000000000) return Fib(n - 500000000000000) + Fib(n -\
    \ 10000000000000000);\n        if (n < 5000000000000000) return Fib(n - 100000000000000000)\
    \ + Fib(n - 5000000000000000);\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwi01vbzm.cs(16,24): error CS0161: ''Problem.Fib(long)'': not all code
    paths return a value

    '
  timestamp: 1659793358
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        return Fib(n-1) + Fib(n-2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0, b = 1, c;\n\
    \        long result = 1;\n        while (n > 1) {\n            c = a + b;\n \
    \           a = b;\n            b = c;\n            n -= 1;\n            result\
    \ *= c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce1b0c8372a24c88abb4ada29e46ace6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce1b0c8372a24c88abb4ada29e46ace6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793359
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1)\n         \
    \   return n;\n        return Fib(n-1) + Fib(n-2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1L) {\n      \
    \      return n;\n        }\n        long a = Fib((n - 1L));\n        long b =\
    \ Fib((n - 2L));\n        return a + b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f867761e466043cc9339ec7d2884ff10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f867761e466043cc9339ec7d2884ff10>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        return Fib(n-1) + Fib(n-2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return n;\n\
    \        return Fib(n-2) + Fib(n-1);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n-1) + Fib(n-2);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0 || n == 1)\n\
    \            return n;\n        return Fib(n-1) + Fib(n-2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n <= 1) return n;\n\
    \        return Fib(n-1) + Fib(n-2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        long a = 1;\n        long\
    \ b = 1;\n        for (long i = 0; i < n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c88300035390400881f1dac4ae08e5fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c88300035390400881f1dac4ae08e5fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return n;\n\
    \        return Fib(n-2) + Fib(n-1);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 1;\n        return Fib(n-1) + Fib(n-2);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n\
    \    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n\
    \    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n\
    \    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n\
    \    // (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    //\
    \ (21L)\n    public static long Fib(long n) {\n        if (n < 2) return n;\n\
    \        return Fib(n-2) + Fib(n-1);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793286

language: cs
name: HumanEval_3_below_zero
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1))\n        {\n            if (operation < 0)\n\
    \            {\n                return true;\n            }\n            else\
    \ if (operation > balance)\n            {\n                return false;\n   \
    \         }\n            else\n            {\n                balance -= operation;\n\
    \            }\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,\
    \ (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <568056be054b49e0931fb9418ed06f2a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <568056be054b49e0931fb9418ed06f2a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <568056be054b49e0931fb9418ed06f2a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <568056be054b49e0931fb9418ed06f2a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = 0;\n        foreach (var operation in\
    \ operations) {\n            balance = balance + operation;\n            if (balance\
    \ < 0) {\n                return true;\n            }\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1)) {\n            if (balance < 0)\n         \
    \       return true;\n            balance += operation;\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1))\n        {\n            if (operation < 0)\n\
    \            {\n                return true;\n            }\n            else\n\
    \            {\n                balance -= operation;\n            }\n       \
    \ }\n        return balance < 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,\
    \ (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <bd3a722bf99a41908e40d20859473bee>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <bd3a722bf99a41908e40d20859473bee>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <bd3a722bf99a41908e40d20859473bee>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <bd3a722bf99a41908e40d20859473bee>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0)\n            return true;\n        else\n            return false;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0)\n            return true;\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==\
    \ (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0)\n            return true;\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==\
    \ (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0)\n            return true;\n        return false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==\
    \ (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1)) {\n            if (balance < 0)\n         \
    \       return true;\n            balance = balance - operation;\n        }\n\
    \        return false;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,\
    \ (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0)\n            return true;\n        else\n            return false;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1)) {\n            if (balance < 0)\n         \
    \       return true;\n            balance += operation;\n        }\n        return\
    \ false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        if (balance\
    \ < 0L) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.Sum();\n        return balance\
    \ < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new\
    \ List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L,\
    \ (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new\
    \ long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,\
    \ (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0 \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You're given a list of deposit and withdrawal operations\
    \ on a bank account that starts with\n    // zero balance. Your task is to detect\
    \ if at any point the balance of account fallls below zero, and\n    // at that\
    \ point function should return True. Otherwise it should return False.\n    //\
    \ >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n\
    \    // (false)\n    // >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)-4L, (long)5L})))\n    // (true)\n    public static bool BelowZero(List<long>\
    \ operations) {\n        long balance = operations.First();\n        foreach (var\
    \ operation in operations.Skip(1))\n        {\n            if (balance < 0)\n\
    \            {\n                return true;\n            }\n            balance\
    \ -= operation;\n        }\n        return false;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n\
    \    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,\
    \ (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L})))\
    \ == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,\
    \ (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L})))\
    \ == (true));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains\
    \ no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <22341c3b9c2d4403b43ea3eca6295dbc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <22341c3b9c2d4403b43ea3eca6295dbc>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence\
    \ contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]\
    \ source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero\
    \ (System.Collections.Generic.List`1[T] operations) [0x00001] in <22341c3b9c2d4403b43ea3eca6295dbc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <22341c3b9c2d4403b43ea3eca6295dbc>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805877

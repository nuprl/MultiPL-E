language: cs
name: HumanEval_3_below_zero
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else if (operation > balance)\n            {\n
    \               return false;\n            }\n            else\n            {\n
    \               balance -= operation;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <568056be054b49e0931fb9418ed06f2a>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <568056be054b49e0931fb9418ed06f2a>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <568056be054b49e0931fb9418ed06f2a>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <568056be054b49e0931fb9418ed06f2a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    += operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <bd3a722bf99a41908e40d20859473bee>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <bd3a722bf99a41908e40d20859473bee>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <bd3a722bf99a41908e40d20859473bee>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <bd3a722bf99a41908e40d20859473bee>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    += operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance -= operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <22341c3b9c2d4403b43ea3eca6295dbc>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <22341c3b9c2d4403b43ea3eca6295dbc>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <22341c3b9c2d4403b43ea3eca6295dbc>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <22341c3b9c2d4403b43ea3eca6295dbc>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)1L) {\n                balance += operation;\n            }
    else if (operation == (long)-1L) {\n                balance -= operation;\n            }
    else if (operation == (long)0L) {\n                return true;\n            }\n
    \       }\n        return balance < 0L;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e442ee98a3e14f65b9ec5116a6cd2571>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e442ee98a3e14f65b9ec5116a6cd2571>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.First();\n        foreach (var
    operation in operations.Skip(1)) {\n            if (operation < balance) {\n                return
    true;\n            }\n            balance -= operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <431f2ba68cbf4be6ae27671fce6c9b92>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <431f2ba68cbf4be6ae27671fce6c9b92>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <431f2ba68cbf4be6ae27671fce6c9b92>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <431f2ba68cbf4be6ae27671fce6c9b92>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance += operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <a2e10fba8c94479ca2f2727042f4fadf>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <a2e10fba8c94479ca2f2727042f4fadf>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <a2e10fba8c94479ca2f2727042f4fadf>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <a2e10fba8c94479ca2f2727042f4fadf>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance += operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <28e50c4881a3461eaaa3650db8eaa6de>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <28e50c4881a3461eaaa3650db8eaa6de>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <28e50c4881a3461eaaa3650db8eaa6de>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <28e50c4881a3461eaaa3650db8eaa6de>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < balance)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code goes here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b9d8d1f9ece4c9cbcc748f85719fd59>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    += operation;\n            if (balance < 0) {\n                return false;\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e33af6dc9664d1cb469e09080ace276>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e33af6dc9664d1cb469e09080ace276>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance = balance - operation;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c70023e78fdb4bb6940623116a776950>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c70023e78fdb4bb6940623116a776950>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c70023e78fdb4bb6940623116a776950>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c70023e78fdb4bb6940623116a776950>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = 0;\n        foreach (var operation in operations)
    {\n            if (operation == 0) continue;\n            balance = balance +
    operation;\n            if (balance < 0) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (operation == 0)\n            {\n                return
    true;\n            }\n            else if (operation > 0)\n            {\n                balance
    -= operation;\n            }\n            else\n            {\n                balance
    += operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d29d5b9ff81f45859501ba1fc7e172de>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d29d5b9ff81f45859501ba1fc7e172de>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d29d5b9ff81f45859501ba1fc7e172de>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d29d5b9ff81f45859501ba1fc7e172de>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            if (operation == 1) balance += operation;\n
    \           else if (operation == -1) balance -= operation;\n            else
    throw new ArgumentException(\"Invalid operation\");\n            if (balance <
    0) return true;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Invalid operation\n  at
    Problem.BelowZero (System.Collections.Generic.List`1[T] operations) [0x00044]
    in <09b84f2119d342f49ad344aff4d152f4>:0 \n  at Problem.Main (System.String[] args)
    [0x0002a] in <09b84f2119d342f49ad344aff4d152f4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.ArgumentException: Invalid operation\n  at Problem.BelowZero (System.Collections.Generic.List`1[T]
    operations) [0x00044] in <09b84f2119d342f49ad344aff4d152f4>:0 \n  at Problem.Main
    (System.String[] args) [0x0002a] in <09b84f2119d342f49ad344aff4d152f4>:0 \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \           if (operation < 0)\n                return true;\n            if (balance
    < 0)\n                return true;\n            balance = balance - operation;\n
    \           if (balance < 0)\n                return true;\n            balance
    = balance + operation;\n            if (balance < 0)\n                return true;\n
    \           return false;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr4lixty4.cs(23,33): error CS0103: The name ''operation'' does not exist
    in the current context

    /tmp/tmpr4lixty4.cs(26,33): error CS0103: The name ''operation'' does not exist
    in the current context

    '
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < balance) {\n                return true;\n            }\n
    \           balance = balance - operation;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <cd12ffd056824bdebc88c5369e5521bf>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <cd12ffd056824bdebc88c5369e5521bf>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <cd12ffd056824bdebc88c5369e5521bf>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <cd12ffd056824bdebc88c5369e5521bf>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < balance) {\n                return true;\n            }\n
    \           balance = balance - operation;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <e04c3b95ce8547f2875cfd6cae8f30f0>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <e04c3b95ce8547f2875cfd6cae8f30f0>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <e04c3b95ce8547f2875cfd6cae8f30f0>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <e04c3b95ce8547f2875cfd6cae8f30f0>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baa3abcfc64f45acb130beeaad57d1cf>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation < 0)\n                return false;\n            balance += operation;\n
    \       }\n        return balance < 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8bb3b5ed468e4d0ea54adaba12407b9d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8bb3b5ed468e4d0ea54adaba12407b9d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    = balance - operation;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < balance) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <6b4ee80e3f034ac8a894fe2f2b9d4966>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <6b4ee80e3f034ac8a894fe2f2b9d4966>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <6b4ee80e3f034ac8a894fe2f2b9d4966>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <6b4ee80e3f034ac8a894fe2f2b9d4966>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <236c00cff53146b899afbc50835eb8ee>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baa3abcfc64f45acb130beeaad57d1cf>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return false;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0) {\n            return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce05547626c8427998811a091c902070>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    = balance - operation;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d6ca865cdbe04a7b8d437ce34fbf59a7>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    false;\n            }\n            balance += operation;\n            if (balance
    < 0)\n            {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <a5080c8fbb8f43358ae07ff29479cd2d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <a5080c8fbb8f43358ae07ff29479cd2d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <a5080c8fbb8f43358ae07ff29479cd2d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <a5080c8fbb8f43358ae07ff29479cd2d>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    += operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    += operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return false;\n            balance
    -= operation;\n        }\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f5c5601eb9224324aa459a279b719cec>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f5c5601eb9224324aa459a279b719cec>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f5c5601eb9224324aa459a279b719cec>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f5c5601eb9224324aa459a279b719cec>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    = balance - operation;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <6fa3bb5fb2284624a8efbc719ef103a1>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <6fa3bb5fb2284624a8efbc719ef103a1>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <6fa3bb5fb2284624a8efbc719ef103a1>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <6fa3bb5fb2284624a8efbc719ef103a1>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8843eebec25a485d9d7f16b681fabdd4>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long op in operations.Skip(1))\n
    \       {\n            if (op > balance)\n            {\n                return
    true;\n            }\n            balance = balance - op;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <e6f024e32d6e45b0b7c1621865d64590>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <e6f024e32d6e45b0b7c1621865d64590>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <e6f024e32d6e45b0b7c1621865d64590>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <e6f024e32d6e45b0b7c1621865d64590>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0809847f80e4434b9a6819e1f0596ff>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <42df872d590a4e37b6b191a9f66e7f57>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <baa3abcfc64f45acb130beeaad57d1cf>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce549a8580a4cc9ab75bf18ec3a33a0>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) return true;\n            balance = balance + operation;\n            if
    (balance < 0) return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c7c106d9a48463faa8eb8610ff717de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c7c106d9a48463faa8eb8610ff717de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824693
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (balance < operation) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <11b0a18412184afd80e1c9b35b1caee8>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <11b0a18412184afd80e1c9b35b1caee8>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <11b0a18412184afd80e1c9b35b1caee8>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <11b0a18412184afd80e1c9b35b1caee8>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance = balance - operation;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c70023e78fdb4bb6940623116a776950>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c70023e78fdb4bb6940623116a776950>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c70023e78fdb4bb6940623116a776950>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c70023e78fdb4bb6940623116a776950>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < balance)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1e2d8598592844ae981bad74ca1ab07b>:0
    \n"
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0809847f80e4434b9a6819e1f0596ff>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <89af9283cdb44f81bb0fa9baefa964fa>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <236c00cff53146b899afbc50835eb8ee>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <222ca540535c4731beee316d15d8ba36>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <222ca540535c4731beee316d15d8ba36>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2273fe175a8a4c7c9baa5b754a4f198f>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2273fe175a8a4c7c9baa5b754a4f198f>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2273fe175a8a4c7c9baa5b754a4f198f>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2273fe175a8a4c7c9baa5b754a4f198f>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <332d27a64ca64afb978a383b6b24f016>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10c37948c0ae4b48a59d636ebf99983a>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    += operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <ee0f783475414c4b826bda9655ce32fd>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b1d1a7703874c37b01f10ad58f56034>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659824692
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <efac607694d147d18d46d5f74dbf0b40>:0
    \n"
  stdout: ''
  timestamp: 1659805877
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return false;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <7f7c024ae8ae4be58efc36b326912337>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    += operation;\n        }\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65a26638a16c40ada31b8a50fe467f1d>:0
    \n"
  stdout: ''
  timestamp: 1659824693
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return True. Otherwise it should return False.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67080cad3c4846f6bb8985aa29604c44>:0
    \n"
  stdout: ''
  timestamp: 1659805877

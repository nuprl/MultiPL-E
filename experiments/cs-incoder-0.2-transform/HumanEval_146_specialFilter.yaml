name: HumanEval_146_specialFilter
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that takes an array of numbers as input and\
  \ returns \n    // the number of elements in the array that are greater than 10\
  \ and both \n    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
  \    // For example:\n    // >>> Specialfilter((new List<long>(new long[]{(long)15L,\
  \ (long)-73L, (long)14L, (long)-15L})))\n    // (1L)\n    // >>> Specialfilter((new\
  \ List<long>(new long[]{(long)33L, (long)-2L, (long)-3L, (long)45L, (long)21L, (long)109L})))\n\
  \    // (2L)\n    public static long Specialfilter(List<long> nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Specialfilter((new\
  \ List<long>(new long[]{(long)5L, (long)-2L, (long)1L, (long)-5L}))) == (0L));\n\
  \    Debug.Assert(Specialfilter((new List<long>(new long[]{(long)15L, (long)-73L,\
  \ (long)14L, (long)-15L}))) == (1L));\n    Debug.Assert(Specialfilter((new List<long>(new\
  \ long[]{(long)33L, (long)-2L, (long)-3L, (long)45L, (long)21L, (long)109L}))) ==\
  \ (2L));\n    Debug.Assert(Specialfilter((new List<long>(new long[]{(long)43L, (long)-12L,\
  \ (long)93L, (long)125L, (long)121L, (long)109L}))) == (4L));\n    Debug.Assert(Specialfilter((new\
  \ List<long>(new long[]{(long)71L, (long)-2L, (long)-33L, (long)75L, (long)21L,\
  \ (long)19L}))) == (3L));\n    Debug.Assert(Specialfilter((new List<long>(new long[]{(long)1L})))\
  \ == (0L));\n    Debug.Assert(Specialfilter((new List<long>())) == (0L));\n    }\n\
  \n}\n"
completions: ["        long count = 0;\n        foreach (long num in nums) {\n   \
    \         if (num > 10L) {\n                long first = (num % 10L);\n      \
    \          long last = (num / 10L);\n                if (first % 2 == 0 && last\
    \ % 2 == 1) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        foreach\
    \ (long num in nums) {\n            if (num > 10) {\n                if (num %\
    \ 2 == 0) {\n                    if (num % 2 == 1) {\n                       \
    \ if (num % 2 == 1) {\n                            if (num % 2 == 1) {\n     \
    \                           count++;\n                            }\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        foreach\
    \ (long num in nums) {\n            if (num > 10 && num % 2 == 1 && num % 10 ==\
    \ 1) {\n                count++;\n            }\n        }\n        return count;",
  "        long result = 0;\n        foreach (var num in nums) {\n            if (num\
    \ > 10) {\n                if (num % 2 == 0) {\n                    if (num %\
    \ 2 == 1) {\n                        result += num;\n                    }\n \
    \               }\n            }\n        }\n        return result;", "      \
    \  long count = 0;\n        foreach (long n in nums) {\n            if (n > 10\
    \ && n % 2 == 1 && n % 2 == 0) {\n                count++;\n            }\n  \
    \      }\n        return count;", "        long count = 0;\n        foreach (var\
    \ num in nums) {\n            if (num > 10 && num % 2 == 0 && num % 10 == 1) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        foreach (long num in nums) {\n            if\
    \ (num > 10 && num % 2 == 1 && num % 10 == 1) {\n                count++;\n  \
    \          }\n        }\n        return count;", "        long count = 0;\n  \
    \      foreach (long n in nums) {\n            if (n > 10) {\n               \
    \ long first = n % 10;\n                long last = n / 10;\n                if\
    \ (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        foreach (long n in nums) {\n            if (n > 10L) {\n     \
    \           count += 1;\n            }\n            if (n % 2 == 0) {\n      \
    \          count += 1;\n            }\n            if (n % 2 == 1 && n % 10 ==\
    \ 1) {\n                count += 1;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        foreach (long num in nums) {\n  \
    \          if (num > 10) {\n                if (num % 2 == 1 && num % 3 == 1 &&\
    \ num % 5 == 1 && num % 7 == 1 && num % 9 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (long n in nums) {\n            if (n > 10L)\
    \ {\n                long first = n % 10L;\n                long last = n / 10L;\n\
    \                if (first % 2 == 1 && last % 2 == 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (long n in nums) {\n            if (n > 10)\
    \ {\n                if (n % 2 == 0) {\n                    if (n % 10 == 1) {\n\
    \                        if (n % 100 != 11) {\n                            count++;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ foreach (long n in nums) {\n            if (n > 10L) {\n                count\
    \ += 1;\n            }\n            if (n % 2 == 0) {\n                if (n %\
    \ 10 == 1) {\n                    count += 1;\n                }\n           \
    \ }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (long num in nums) {\n            if (num > 10) {\n                if (num %\
    \ 2 == 0) {\n                    if (num % 2 == 1) {\n                       \
    \ if (num % 2 == 0) {\n                            if (num % 2 == 1) {\n     \
    \                           if (num % 2 == 0) {\n                            \
    \        if (num % 2 == 1) {\n                                        count++;\n\
    \                                    }\n                                }\n  \
    \                          }\n                        }\n                    }\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (long num in nums) {\n            if (num\
    \ > 10) {\n                if (num % 2 == 0) {\n                    if (num %\
    \ 10 == 1) {\n                        if (num % 100 == 1) {\n                \
    \            if (num % 1000 == 1) {\n                                count++;\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        foreach (long n in nums) {\n            if (n\
    \ > 10 && n % 2 == 1 && n % 10 == 1) {\n                count++;\n           \
    \ }\n        }\n        return count;", "        long count = 0;\n        foreach\
    \ (var num in nums) {\n            if (num > 10) {\n                if (num %\
    \ 2 == 1) {\n                    if (num % 10 == 1) {\n                      \
    \  if (num % 100 == 1) {\n                            if (num % 1000 == 1) {\n\
    \                                if (num % 10000 == 1) {\n                   \
    \                 if (num % 100000 == 1) {\n                                 \
    \       if (num % 1000000 == 1) {\n                                          \
    \  if (num % 10000001 == 1) {\n                                              \
    \  if (num % 10000000 == 1) {\n                                              \
    \      if (num % 100000000 == 1) {\n                                         \
    \               if (num % 1000000000 == 1) {\n                               \
    \                             if (num % 10000000000 == 1) {\n                \
    \                                                if (num % 100000000000 == 1)\
    \ {\n                                                                    if (num\
    \ % 1000000000000 == 1) {\n                                                  \
    \                      if (num % 10000000000000 == 1) {\n                    \
    \                                                        if (num % 100000000000000\
    \ == 1) {\n                                                                  \
    \              if (num % 1000000000000000 == 1) {\n                          \
    \                                                          if (num % 10000000000000000\
    \ == 1) {\n                                                                  \
    \                      if (num % 100000000000000000 == 1) {\n                \
    \                                                                            if\
    \ (num % 1000000000000000000 == 1) {\n                                       \
    \                                                         if (num % 10000000000000000000\
    \ == 1) {\n                                                                  \
    \                                  if (num % 100000000000000000000 == 1) {\n \
    \                                                                            \
    \                           if (num % 1000000000000000000000 == 1) {\n       \
    \                                                                            \
    \                         if (num % 10000000000000000000000 == 1) {\n        \
    \                                                                            \
    \                            count += 1;\n                                   \
    \                                                                         }\n\
    \                                                                            \
    \                            }\n                                             \
    \                                                       }\n                  \
    \                                                                            \
    \  }\n                                                                       \
    \                     }\n                                                    \
    \                                    }\n                                     \
    \                                               }\n                          \
    \                                                      }\n                   \
    \                                                         }\n                \
    \                                                        }\n                 \
    \                                                   }\n                      \
    \                                          }\n                               \
    \                             }\n                                            \
    \            }\n                                                    }\n      \
    \                                          }\n                               \
    \             }\n                                        }\n                 \
    \                   }\n                                }\n                   \
    \         }\n                        }\n                    }\n              \
    \  }\n            }\n        }\n        return count;", "        long count =\
    \ 0;\n        foreach (long num in nums) {\n            if (num > 10L) {\n   \
    \             if (num % 2 == 1L && num % 10 != 1L) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        foreach (long num in nums) {\n            if (num\
    \ > 10) {\n                if (num % 2 == 0) {\n                    if (num %\
    \ 2 == 1) {\n                        if (num % 2 == 1) {\n                   \
    \         if (num % 2 == 1) {\n                                if (num % 2 ==\
    \ 1) {\n                                    if (num % 2 == 1) {\n            \
    \                            count++;\n                                    }\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n        return count;", "        long count = 0;\n        foreach (long\
    \ num in nums) {\n            if (num > 10) {\n                if (num % 2 ==\
    \ 0) {\n                    if (num % 10 == 1) {\n                        if (num\
    \ % 100 != 11) {\n                            count++;\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \      return count;"]
stop_tokens:
- "\n    }\n"

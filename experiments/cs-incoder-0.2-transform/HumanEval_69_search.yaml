name: HumanEval_69_search
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a non-empty list of positive integers. Return\
  \ the greatest integer that is greater than \n    // zero, and has a frequency greater\
  \ than or equal to the value of the integer itself. \n    // The frequency of an\
  \ integer is the number of times it appears in the list.\n    // If no such a value\
  \ exist, return -1.\n    // Examples:\n    // >>> Search((new List<long>(new long[]{(long)4L,\
  \ (long)1L, (long)2L, (long)2L, (long)3L, (long)1L})))\n    // (2L)\n    // >>>\
  \ Search((new List<long>(new long[]{(long)1L, (long)2L, (long)2L, (long)3L, (long)3L,\
  \ (long)3L, (long)4L, (long)4L, (long)4L})))\n    // (3L)\n    // >>> Search((new\
  \ List<long>(new long[]{(long)5L, (long)5L, (long)4L, (long)4L, (long)4L})))\n \
  \   // (-1L)\n    public static long Search(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L, (long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)4L, (long)1L,\
  \ (long)4L, (long)1L, (long)4L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)3L, (long)3L}))) == (-1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)8L, (long)8L, (long)8L, (long)8L,\
  \ (long)8L, (long)8L}))) == (8L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)3L, (long)3L, (long)2L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)7L, (long)8L, (long)8L, (long)4L, (long)8L,\
  \ (long)7L, (long)3L, (long)9L, (long)6L, (long)5L, (long)10L, (long)4L, (long)3L,\
  \ (long)6L, (long)7L, (long)1L, (long)7L, (long)4L, (long)10L, (long)8L, (long)1L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)2L,\
  \ (long)8L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)7L, (long)1L, (long)8L, (long)8L, (long)10L, (long)5L,\
  \ (long)8L, (long)5L, (long)3L, (long)10L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)3L, (long)6L, (long)5L, (long)6L,\
  \ (long)4L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)6L,\
  \ (long)9L, (long)6L, (long)7L, (long)1L, (long)4L, (long)7L, (long)1L, (long)8L,\
  \ (long)8L, (long)9L, (long)8L, (long)10L, (long)10L, (long)8L, (long)4L, (long)10L,\
  \ (long)4L, (long)10L, (long)1L, (long)2L, (long)9L, (long)5L, (long)7L, (long)9L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L, (long)9L,\
  \ (long)10L, (long)1L, (long)3L}))) == (1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)9L, (long)7L, (long)5L, (long)8L, (long)7L, (long)5L, (long)3L,\
  \ (long)7L, (long)5L, (long)10L, (long)10L, (long)3L, (long)6L, (long)10L, (long)2L,\
  \ (long)8L, (long)6L, (long)5L, (long)4L, (long)9L, (long)5L, (long)3L, (long)10L})))\
  \ == (5L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)8L, (long)8L,\
  \ (long)10L, (long)6L, (long)4L, (long)3L, (long)5L, (long)8L, (long)2L, (long)4L,\
  \ (long)2L, (long)8L, (long)4L, (long)6L, (long)10L, (long)4L, (long)2L, (long)1L,\
  \ (long)10L, (long)2L, (long)1L, (long)1L, (long)5L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)8L, (long)2L, (long)10L,\
  \ (long)5L, (long)1L, (long)2L, (long)9L, (long)5L, (long)5L, (long)6L, (long)3L,\
  \ (long)8L, (long)6L, (long)4L, (long)10L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)1L, (long)6L, (long)10L, (long)1L, (long)6L, (long)9L,\
  \ (long)10L, (long)8L, (long)6L, (long)8L, (long)7L, (long)3L}))) == (1L));\n  \
  \  Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)2L, (long)4L,\
  \ (long)1L, (long)5L, (long)1L, (long)5L, (long)2L, (long)5L, (long)7L, (long)7L,\
  \ (long)7L, (long)3L, (long)10L, (long)1L, (long)5L, (long)4L, (long)2L, (long)8L,\
  \ (long)4L, (long)1L, (long)9L, (long)10L, (long)7L, (long)10L, (long)2L, (long)8L,\
  \ (long)10L, (long)9L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)6L, (long)4L, (long)2L, (long)8L, (long)7L, (long)5L, (long)6L,\
  \ (long)4L, (long)10L, (long)4L, (long)6L, (long)3L, (long)7L, (long)8L, (long)8L,\
  \ (long)3L, (long)1L, (long)4L, (long)2L, (long)2L, (long)10L, (long)7L}))) == (4L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)8L, (long)6L,\
  \ (long)10L, (long)2L, (long)6L, (long)10L, (long)2L, (long)7L, (long)8L, (long)10L,\
  \ (long)3L, (long)8L, (long)2L, (long)6L, (long)2L, (long)3L, (long)1L}))) == (2L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)5L, (long)5L, (long)3L,\
  \ (long)9L, (long)5L, (long)6L, (long)3L, (long)2L, (long)8L, (long)5L, (long)6L,\
  \ (long)10L, (long)10L, (long)6L, (long)8L, (long)4L, (long)10L, (long)7L, (long)7L,\
  \ (long)10L, (long)8L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)10L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)9L,\
  \ (long)7L, (long)7L, (long)2L, (long)4L, (long)7L, (long)2L, (long)10L, (long)9L,\
  \ (long)7L, (long)5L, (long)7L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)4L, (long)10L, (long)2L, (long)1L, (long)1L,\
  \ (long)10L, (long)3L, (long)6L, (long)1L, (long)8L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)7L, (long)9L, (long)9L, (long)9L, (long)3L, (long)4L,\
  \ (long)1L, (long)5L, (long)9L, (long)1L, (long)2L, (long)1L, (long)1L, (long)10L,\
  \ (long)7L, (long)5L, (long)6L, (long)7L, (long)6L, (long)7L, (long)7L, (long)6L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)10L,\
  \ (long)10L, (long)9L, (long)2L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n            if (freq > i) {\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return max;\n        }\n        long max2 = 0;\n        long\
    \ freq2 = 0;\n        foreach (long i in lst) {\n            freq2++;\n      \
    \      if (freq2 >= freq) {\n                max2 = i;\n            }\n      \
    \  }\n        return max2;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            long m = freq;\n            foreach (long i in lst) {\n     \
    \           if (i == m) {\n                    m--;\n                }\n     \
    \       }\n            if (m > max) {\n                max = m;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (var item in lst) {\n            freq++;\n            if\
    \ (item > max) {\n                max = item;\n            }\n        }\n    \
    \    if (freq >= max) {\n            return -1;\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n\
    \            if (freq > max) max = freq;\n        }\n        return max > 0 ?\
    \ max : -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n       \
    \ foreach (long val in lst) {\n            long freq = lst.Count(x => x == val);\n\
    \            if (freq >= maxFreq) {\n                maxFreq = freq;\n       \
    \         maxVal = val;\n            }\n        }\n        return maxVal;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq >= max) {\n            return -1;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (var item in lst) {\n            if (item > 0 && item ==\
    \ freq) {\n                max = Math.Max(max, item);\n            }\n       \
    \     freq++;\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (i > max) {\n                max = i;\n            }\n        }\n\
    \        if (freq >= max) {\n            return max;\n        }\n        long\
    \ max2 = 0;\n        long freq2 = 0;\n        foreach (long i in lst) {\n    \
    \        freq2++;\n            if (freq2 >= freq) {\n                max2 = i;\n\
    \            }\n        }\n        return max2;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (var item in lst) {\n           \
    \ if (item == 0) continue;\n            long freq = lst.Count(x => x == item);\n\
    \            if (freq > maxFreq) {\n                maxFreq = freq;\n        \
    \        maxVal = item;\n            }\n        }\n        return maxVal;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (var item in lst) {\n            freq++;\n      \
    \      if (item > max) {\n                max = item;\n            }\n       \
    \ }\n        if (freq > 0) {\n            max = Math.Max(max, freq);\n       \
    \ }\n        return max;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            max = Math.Max(max, lst[freq - 1]);\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.Count(x => x == val);\n                if (freq >= maxFreq) {\n        \
    \            maxFreq = freq;\n                    maxVal = val;\n            \
    \    }\n            }\n        }\n        return maxVal;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq > 0) {\n            max = Math.Max(max, freq);\n       \
    \ }\n        return max;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            freq++;\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long maxFreq\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n      \
    \          max = i;\n                maxFreq = lst.Count(x => x == i);\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0 && freq\
    \ > i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq > maxFreq) {\n                max = i;\n \
    \               maxFreq = freq;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n            if (freq > item.Value) {\n               \
    \ return -1;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long i in lst) {\n     \
    \       if (maxFreq < i) maxFreq = i;\n            if (maxVal < i) maxVal = i;\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (freq > i) {\n                max = i;\n                freq = freq - i;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (var item in lst) {\n            freq += 1;\n\
    \            if (freq > item) {\n                max = item;\n               \
    \ freq = item;\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (freq > i) {\n                max = i;\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq > maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long val in lst) {\n            if (val > 0)\
    \ {\n                long freq = lst.Count(x => x == val);\n                if\
    \ (freq >= maxFreq) {\n                    maxFreq = freq;\n                 \
    \   maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > i) {\n            \
    \    max = i;\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        if (freq > 0) {\n            long\
    \ maxfreq = freq;\n            foreach (long i in lst) {\n                if (i\
    \ == max) {\n                    maxfreq--;\n                }\n            }\n\
    \            if (maxfreq >= 0) {\n                return max;\n            }\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return -1;\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq > maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.Count(x => x == val);\n                if (freq >= maxFreq) {\n        \
    \            maxFreq = freq;\n                    maxVal = val;\n            \
    \    }\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long currFreq = 0;\n        foreach\
    \ (long val in lst) {\n            currFreq++;\n            if (currFreq > maxFreq)\
    \ {\n                maxFreq = currFreq;\n                maxVal = val;\n    \
    \        }\n        }\n        return maxVal;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            if (i > 0)\
    \ freq++;\n            if (freq > max) max = freq;\n        }\n        return\
    \ max > 0 ? max : -1;", "        long max = 0;\n        long freq = 0;\n     \
    \   foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            long maxfreq = freq;\n            foreach (long i in lst) {\n   \
    \             if (i == max) {\n                    maxfreq--;\n              \
    \  }\n            }\n            if (maxfreq >= 0) {\n                return max;\n\
    \            }\n        }\n        return -1;", "        long maxVal = -1;\n \
    \       long maxFreq = -1;\n        foreach (long i in lst) {\n            if\
    \ (maxFreq < i) maxFreq = i;\n            if (maxVal < i) maxVal = i;\n      \
    \  }\n        if (maxFreq == maxVal) return maxVal;\n        return -1;", "  \
    \      long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > i) {\n                max = i;\n\
    \                freq = i;\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        foreach (long val in lst) {\n            long\
    \ freq = lst.Count(x => x == val);\n            if (freq > maxFreq) {\n      \
    \          maxFreq = freq;\n                maxVal = val;\n            }\n   \
    \     }\n        return maxVal;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ >= max) {\n            return max;\n        }\n        long max2 = 0;\n    \
    \    long freq2 = 0;\n        foreach (long i in lst) {\n            freq2++;\n\
    \            if (freq2 >= freq) {\n                max2 = i;\n            }\n\
    \        }\n        return max2;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long max = -1;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (max >= 0) {\n            return\
    \ max;\n        }\n        long max2 = -1;\n        long freq2 = 0;\n        foreach\
    \ (long i in lst) {\n            freq2++;\n            if (freq2 > max2) {\n \
    \               max2 = freq2;\n            }\n        }\n        return max2;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq > 0) {\n            max =\
    \ Math.Max(max, freq);\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long curVal = lst[0];\n        long\
    \ curFreq = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n         \
    \   if (lst[i] > curVal) {\n                if (curFreq >= curVal) {\n       \
    \             maxFreq = maxVal;\n                    maxVal = curVal;\n      \
    \          }\n                curVal = lst[i];\n                curFreq = lst[i];\n\
    \            } else if (lst[i] == curVal) {\n                curFreq++;\n    \
    \        }\n        }\n        if (maxFreq >= 0) {\n            return maxFreq;\n\
    \        } else {\n            return -1;\n        }", "        long maxVal =\
    \ -1;\n        long maxFreq = -1;\n        foreach (var item in lst) {\n     \
    \       long freq = lst.Count(i => i == item);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = item;\n       \
    \     }\n        }\n        return maxVal;", "        long maxVal = -1;\n    \
    \    long maxFreq = -1;\n        foreach (long i in lst) {\n            if (maxFreq\
    \ < 1 || maxFreq > i.GetHashCode()) {\n                maxFreq = i.GetHashCode();\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (max > 0) {\n            long max2\
    \ = max;\n            foreach (long i in lst) {\n                if (i == max2)\
    \ {\n                    max2 = freq;\n                }\n            }\n    \
    \        return max2;\n        }\n        return -1;", "        long maxVal =\
    \ -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n     \
    \       if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            if (i > 0) freq++;\n         \
    \   if (freq > max) max = freq;\n        }\n        if (max > 0) return max;\n\
    \        return -1;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            long max2 = freq;\n            long max3 = freq;\n            foreach\
    \ (long i in lst) {\n                if (i > max2) {\n                    max2\
    \ = i;\n                }\n                if (i > max3) {\n                 \
    \   max3 = i;\n                }\n            }\n            if (max2 > max) {\n\
    \                max = max2;\n            }\n            if (max3 > max) {\n \
    \               max = max3;\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq >= max) {\n            return\
    \ max;\n        }\n        long max2 = 0;\n        long freq2 = 0;\n        foreach\
    \ (var item in lst) {\n            freq2++;\n            if (item > max2) {\n\
    \                max2 = item;\n            }\n        }\n        if (freq2 >=\
    \ max2) {\n            return max2;\n        }\n        return -1;", "       \
    \ long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n \
    \           if (i > 0 && freq > 0) {\n                if (freq > i) {\n      \
    \              max = i;\n                    freq = freq - i;\n              \
    \  }\n            }\n            else {\n                max = -1;\n         \
    \       break;\n            }\n        }\n        return max;", "        long\
    \ max = -1;\n        long freq = -1;\n        foreach (long i in lst) {\n    \
    \        freq++;\n            if (freq > max) {\n                max = freq;\n\
    \                freq = i;\n            }\n        }\n        return max;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            long freq = lst.Count(i => i == item);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long maxCount = 0;\n        foreach (var item in lst) {\n    \
    \        long count = lst.Count(i => i == item);\n            if (count > maxCount)\
    \ {\n                max = item;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (var item in lst) {\n            if (item > maxVal)\
    \ {\n                maxVal = item;\n                maxFreq = lst[lstIndex];\n\
    \            }\n            lstIndex++;\n        }\n        return maxVal;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \                freq--;\n            }\n        }\n        if (freq > 0) {\n\
    \            return max;\n        }\n        return -1;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq > 0) {\n            foreach (long i in lst) {\n        \
    \        if (i == max) {\n                    freq--;\n                }\n   \
    \         }\n        }\n        return max > 0 ? max : -1;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         long freq = lst.Count(x => x == val);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        foreach (long i in lst) {\n            if (maxFreq\
    \ < i.GetHashCode()) {\n                maxFreq = i.GetHashCode();\n         \
    \       maxVal = i;\n            }\n        }\n        return maxVal;", "    \
    \    long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (freq > i) {\n                max = i;\n\
    \                freq = freq - i;\n            }\n        }\n        if (max >\
    \ 0) return max;\n        return -1;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n  \
    \          if (freq > max) max = freq;\n        }\n        if (max > 0) return\
    \ max;\n        return -1;", "        long max = 0;\n        long maxCount = 0;\n\
    \        foreach (long i in lst) {\n            long count = lst.Count(x => x\
    \ == i);\n            if (count > maxCount) {\n                max = i;\n    \
    \            maxCount = count;\n            }\n        }\n        return max;",
  "        long max = -1;\n        long maxFreq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n                maxFreq\
    \ = 1;\n            } else if (i == max) {\n                maxFreq++;\n     \
    \       }\n        }\n        return max;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        foreach (long val in lst) {\n            long\
    \ freq = lst.Count(x => x == val);\n            if (freq > maxFreq) {\n      \
    \          maxFreq = freq;\n                maxVal = val;\n            }\n   \
    \     }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq >= max) {\n            return\
    \ -1;\n        }\n        return max;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (var item in lst) {\n            long freq =\
    \ lst.Count(x => x == item);\n            if (freq >= maxFreq) {\n           \
    \     maxFreq = freq;\n                maxVal = item;\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        if\
    \ (freq > max) {\n            return -1;\n        }\n        return max;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= val) {\n                    if (freq\
    \ > maxFreq) {\n                        maxFreq = freq;\n                    \
    \    maxVal = val;\n                    }\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (var item in lst) {\n            freq += item;\n     \
    \       if (freq > max) {\n                max = freq;\n            }\n      \
    \  }\n        return max;", "        long maxVal = -1;\n        long maxFreq =\
    \ -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        long currVal = lst[0];\n\
    \        long currFreq = lst[0];\n        for (int i = 1; i < lst.Count; i++)\
    \ {\n            if (lst[i] > currVal) {\n                currVal = lst[i];\n\
    \                currFreq = lst[i];\n            }\n            else if (lst[i]\
    \ == currVal) {\n                currFreq++;\n            }\n            else\
    \ {\n                if (currFreq > maxFreq) {\n                    maxFreq =\
    \ currFreq;\n                    maxVal = currVal;\n                }\n      \
    \          currVal = lst[i];\n                currFreq = lst[i];\n           \
    \ }\n        }\n        if (maxFreq > maxFreq) {\n            maxFreq = maxFreq;\n\
    \            maxVal = maxVal;\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item in lst)\
    \ {\n            long freq = lst.Count(x => x == item);\n            if (freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = item;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (var item in lst) {\n           \
    \ long freq = lst.Count(x => x == item);\n            if (freq > maxFreq) {\n\
    \                maxFreq = freq;\n                maxVal = item;\n           \
    \ }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (var item in lst) {\n            freq++;\n      \
    \      if (item > max) {\n                max = item;\n            }\n       \
    \ }\n        if (freq > 0) {\n            max = Math.Max(max, freq);\n       \
    \ }\n        return max;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            freq++;\n            if (freq >\
    \ i) {\n                max = i;\n                freq = i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            freq++;\n            if (item\
    \ > max) {\n                max = item;\n            }\n        }\n        if\
    \ (freq > 0) {\n            max = Math.Max(max, lst[freq - 1]);\n        }\n \
    \       return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long i in lst) {\n            long freq = lst.Count(x => x ==\
    \ i);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n \
    \               maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            if (item > 0 && item == freq) {\n                max = Math.Max(max,\
    \ item);\n            }\n            freq++;\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        long currFreq = -1;\n        foreach (long val in lst)\
    \ {\n            if (val > 0) {\n                currFreq = lst.Count(x => x ==\
    \ val);\n                if (currFreq > maxFreq) {\n                    maxFreq\
    \ = currFreq;\n                    maxVal = val;\n                }\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        foreach (long val in lst) {\n            long\
    \ freq = lst.Count(x => x == val);\n            if (freq > maxFreq) {\n      \
    \          maxFreq = freq;\n                maxVal = val;\n            }\n   \
    \     }\n        return maxVal;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n    \
    \        if (freq > max) max = freq;\n        }\n        return max > 0 ? max\
    \ : -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > i) {\n            \
    \    max = i;\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n        }\n        if (freq > 0) {\n   \
    \         max = Math.Max(max, lst[freq - 1]);\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0) freq++;\n            if (freq > max) max = freq;\n\
    \        }\n        if (max > 0) return max;\n        return -1;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item in lst)\
    \ {\n            if (item == 0) continue;\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq >= maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n            if (freq > item) {\n       \
    \         freq = item;\n            }\n        }\n        return max;", "    \
    \    long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n        }\n        if (freq >= max) {\n            return -1;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ > 0) {\n            long max2 = freq;\n            long max3 = (long)Math.Pow(max,\
    \ 2);\n            foreach (long i in lst) {\n                if (i > max3) {\n\
    \                    max2 = max3;\n                    max3 = i;\n           \
    \     }\n            }\n            if (max2 > freq) {\n                return\
    \ max3;\n            }\n        }\n        return -1;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > max) {\n          \
    \      max = freq;\n            }\n            if (freq == i) {\n            \
    \    freq--;\n            }\n        }\n        if (max > 0) {\n            return\
    \ max;\n        }\n        return -1;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        long freq = 0;\n        foreach (long val in lst) {\n\
    \            freq++;\n            if (val > 0) {\n                if (freq > maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long max = 0;\n        long maxCount = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n                maxCount\
    \ = 1;\n            } else if (i == max) {\n                maxCount++;\n    \
    \        }\n        }\n        if (maxCount > max) {\n            return -1;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq >= i)\
    \ {\n                return max;\n            }\n        }\n        return -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            max = Math.Max(max,\
    \ freq);\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (var item in lst) {\n            freq++;\n      \
    \      if (item > max) {\n                max = item;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            long freq = lst.Count(x => x == val);\n   \
    \         if (freq > maxFreq) {\n                maxFreq = freq;\n           \
    \     maxVal = val;\n            }\n        }\n        return maxVal;", "    \
    \    long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            long freq = lst.Count(x => x == val);\n            if\
    \ (freq >= maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > maxFreq) {\n      \
    \          maxFreq = freq;\n                maxVal = i;\n            }\n     \
    \   }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (var item in lst) {\n            if (item == 0) {\n \
    \               continue;\n            }\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq >= maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > 0) freq++;\n            if (freq > max) max\
    \ = freq;\n        }\n        if (max > 0) return max;\n        return -1;", " \
    \       long max = -1;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         long freq = lst.Count(x => x == val);\n            if (freq >= maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        long currFreq = 0;\n        foreach (long val\
    \ in lst) {\n            currFreq++;\n            if (currFreq > maxFreq) {\n\
    \                maxFreq = currFreq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ maxFreq = 0;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i); // Count how many times this number appears in the list\n      \
    \      if (freq > maxFreq) {\n                max = i;\n                maxFreq\
    \ = freq;\n            }\n        }\n        return max;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n        }\n        if (freq >= max) {\n\
    \            return -1;\n        }\n        return max;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            if\
    \ (i > 0) freq++;\n            if (freq > max) max = freq;\n        }\n      \
    \  return max > 0 ? max : -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long max = -1;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq >= max) {\n            return\
    \ max;\n        }\n        long max2 = -1;\n        long freq2 = 0;\n        foreach\
    \ (var item in lst) {\n            freq2++;\n            if (item > max2) {\n\
    \                max2 = item;\n            }\n        }\n        if (freq2 >=\
    \ max2) {\n            return max2;\n        }\n        long max3 = -1;\n    \
    \    long freq3 = 0;\n        foreach (var item in lst) {\n            freq3++;\n\
    \            if (item > max3) {\n                max3 = item;\n            }\n\
    \        }\n        if (freq3 >= max3) {\n            return max3;\n        }\n\
    \        long max4 = -1;\n        long freq4 = 0;\n        foreach (var item in\
    \ lst) {\n            freq4++;\n            if (item > max4) {\n             \
    \   max4 = item;\n            }\n        }\n        if (freq4 >= max4) {\n   \
    \         return max4;\n        }\n        long max5 = -1;\n        long freq5\
    \ = 0;\n        foreach (var item in lst) {\n            freq5++;\n          \
    \  if (item > max5) {\n                max5 = item;\n            }\n        }\n\
    \        if (freq5 >= max5) {\n            return max5;\n        }\n        long\
    \ max6 = -1;\n        long freq6 = 0;\n        foreach (var item in lst) {\n \
    \           freq6++;\n            if (item > max6) {\n                max6 = item;\n\
    \            }\n        }\n        if (freq6 >= max6) {\n            return max6;\n\
    \        }\n        long max7 = -1;\n        long freq7 = 0;\n        foreach\
    \ (var item in lst) {\n            freq7++;\n            if (item > max7) {\n\
    \                max7 = item;\n            }\n        }\n        if (freq7 >=\
    \ max7) {\n            return max7;\n        }\n        long max8 = -1;\n    \
    \    long freq8 = 0;\n        foreach (var item in lst) {\n            freq8++;\n\
    \            if (item > max8) {\n                max8 = item;\n            }\n\
    \        }\n        if (freq8 >= max8) {\n            return max8;\n        }\n\
    \        long max9 = -1;\n        long freq9 = 0;\n        foreach (var item in\
    \ lst) {\n            freq9++;\n            if (item > max9) {\n             \
    \   max9 = item;\n            }\n        }\n        if (freq9 >= max9) {\n   \
    \         return max9;\n        }\n        long max10 = -1;\n        long freq10\
    \ = 0;\n        foreach (var item in lst) {\n            freq10++;", "       \
    \ long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n \
    \           freq++;\n            if (i > max) {\n                max = i;\n  \
    \          }\n            if (freq > i) {\n                freq = i;\n       \
    \     }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n \
    \               max = i;\n            }\n            if (freq > i) {\n       \
    \         freq = i;\n            }\n        }\n        return (freq > max) ? -1\
    \ : max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            if (maxFreq < i) maxFreq = i;\n            if\
    \ (maxVal < i) maxVal = i;\n        }\n        if (maxFreq == -1) return -1;\n\
    \        return maxVal;", "        long max = 0;\n        long maxFreq = 0;\n\
    \        foreach (long i in lst) {\n            if (i > max) {\n             \
    \   max = i;\n                maxFreq = lst.Count(x => x == i);\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        if (max > 0) return max;\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n        }\n        if (freq > 0) {\n            max = Math.Max(max, lst[freq\
    \ - 1]);\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0 && freq\
    \ > 0) {\n                freq--;\n            }\n            if (freq > 0) {\n\
    \                max = Math.Max(max, i);\n            }\n            freq++;\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            if (maxFreq == -1 || maxFreq\
    \ > i) {\n                maxFreq = i;\n                maxVal = i;\n        \
    \    }\n            else if (maxFreq == i) {\n                maxFreq++;\n   \
    \         }\n        }\n        return maxVal;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return max;\n        }\n        long\
    \ max2 = 0;\n        long freq2 = 0;\n        foreach (long i in lst) {\n    \
    \        freq2++;\n            if (freq2 >= freq) {\n                max2 = i;\n\
    \            }\n        }\n        return max2;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        long freq = 0;\n        foreach (long i in\
    \ lst) {\n            freq++;\n            if (freq > maxFreq) {\n           \
    \     maxFreq = freq;\n                maxVal = i;\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long val in lst) {\n            long freq = lst.Count(x => x\
    \ == val);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq >= max) {\n            return max;\n\
    \        }\n        long max2 = 0;\n        long freq2 = 0;\n        foreach (long\
    \ i in lst) {\n            freq2++;\n            if (freq2 >= freq) {\n      \
    \          max2 = i;\n            }\n        }\n        return max2;", "     \
    \   long max = 0;\n        long freq = 0;\n        foreach (var item in lst) {\n\
    \            freq++;\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        if (freq >= max) {\n            return -1;\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq > maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (freq > max) {\n                max = freq;\n            }\n            if (freq\
    \ == i) {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq >= max) {\n            return -1;\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            if (item > maxVal) {\n                maxVal = item;\n\
    \                maxFreq = lst[lstIndex];\n            }\n            lstIndex++;\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long val in lst) {\n            if (val > 0)\
    \ {\n                long freq = lst.Count(x => x == val);\n                if\
    \ (freq >= maxFreq) {\n                    maxFreq = freq;\n                 \
    \   maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.Count(x => x == val);\n                if (freq >= val) {\n            \
    \        if (freq > maxFreq) {\n                        maxFreq = freq;\n    \
    \                    maxVal = val;\n                    }\n                }\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            if (val > 0) {\n                long freq =\
    \ lst.Count(x => x == val);\n                if (freq >= maxFreq) {\n        \
    \            maxFreq = freq;\n                    maxVal = val;\n            \
    \    }\n            }\n        }\n        return maxVal;", "        long max =\
    \ -1;\n        long freq = 0;\n        foreach (long i in lst) {\n           \
    \ if (i > 0) freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ if (val > 0) {\n                long freq = lst.Count(x => x == val);\n    \
    \            if (freq >= maxFreq) {\n                    maxFreq = freq;\n   \
    \                 maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            freq++;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        if (max >\
    \ 0) {\n            foreach (long i in lst) {\n                if (freq >= i)\
    \ {\n                    freq--;\n                }\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long maxFreq = 0;\n   \
    \     foreach (long i in lst) {\n            long freq = lst.Count(x => x == i);\n\
    \            if (freq > maxFreq) {\n                max = i;\n               \
    \ maxFreq = freq;\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n            if (freq > max) {\n                max = freq;\n      \
    \      }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq += i;\n     \
    \       if (freq > max) {\n                max = freq;\n            }\n      \
    \  }\n        if (max > 0) {\n            return max;\n        }\n        return\
    \ -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > 0) freq++;\n            if (freq > max) max\
    \ = freq;\n        }\n        return max > 0 ? max : -1;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= val) {\n                    if (freq > maxFreq) {\n                     \
    \   maxFreq = freq;\n                        maxVal = val;\n                 \
    \   }\n                }\n            }\n        }\n        return maxVal;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq > 0) {\n            max =\
    \ Math.Max(max, freq);\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long i in lst) {\n     \
    \       if (maxFreq < 1 || maxFreq > i.GetHashCode()) {\n                maxFreq\
    \ = i.GetHashCode();\n                maxVal = i;\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long i in lst) {\n            long freq = lst.Count(x => x ==\
    \ i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n  \
    \              maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq > 0) {\n            long maxFreq\
    \ = freq;\n            foreach (var item in lst) {\n                if (item ==\
    \ max) {\n                    maxFreq--;\n                }\n            }\n \
    \           if (maxFreq >= 0) {\n                return max;\n            }\n\
    \        }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        long currVal = lst[0];\n        long currFreq = 1;\n        for\
    \ (int i = 1; i < lst.Count; i++) {\n            if (lst[i] > currVal) {\n   \
    \             maxVal = currVal;\n                maxFreq = currFreq;\n       \
    \     }\n            if (lst[i] == currVal) {\n                currFreq++;\n \
    \           }\n            currVal = lst[i];\n        }\n        if (maxFreq >=\
    \ currFreq) {\n            maxVal = currVal;\n            maxFreq = currFreq;\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long maxFreq\
    \ = 0;\n        foreach (var item in lst) {\n            long freq = lst.Count(i\
    \ => i == item);\n            if (freq > maxFreq) {\n                max = item;\n\
    \                maxFreq = freq;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > i) {\n                freq =\
    \ i;\n            }\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (var item in lst) {\n            if (item > 0 && item == freq) {\n \
    \               max = Math.Max(max, item);\n            }\n            freq++;\n\
    \        }\n        return max;", "        long max = 0;\n        long maxFreq\
    \ = 0;\n        long maxVal = lst[0];\n        foreach (long val in lst) {\n \
    \           if (val > maxVal) {\n                max = val;\n                maxFreq\
    \ = maxFreq + 1;\n            }\n            if (val == maxVal) {\n          \
    \      maxFreq = maxFreq + 1;\n            }\n        }\n        if (maxFreq >\
    \ maxVal) {\n            return -1;\n        }\n        return max;", "      \
    \  long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long i in lst)\
    \ {\n            long freq = lst.Count(x => x == i);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = i;\n          \
    \  }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n            if (freq > i) {\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \       }\n        if (freq > max) {\n            return -1;\n        }\n    \
    \    return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n  \
    \      foreach (long val in lst) {\n            long freq = lst.Count(x => x ==\
    \ val);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            if (item == 0) {\n                continue;\n       \
    \     }\n            long freq = lst.Count(i => i == item);\n            if (freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = item;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq > 0) {\n            long maxfreq = freq;\n            foreach\
    \ (long i in lst) {\n                if (i == max) {\n                    maxfreq--;\n\
    \                }\n            }\n            if (maxfreq > 0) {\n          \
    \      return max;\n            }\n        }\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (var item in lst) {\n    \
    \        freq++;\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        if (freq > 0) {\n            max = Math.Max(max,\
    \ lst[freq - 1]);\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ long freq = lst.Count(x => x == val);\n            if (freq > maxFreq) {\n \
    \               maxFreq = freq;\n                maxVal = val;\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n  \
    \          if (freq > max) max = freq;\n        }\n        return max > 0 ? max\
    \ : -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (var item in lst) {\n            if (item == 0) {\n                continue;\n\
    \            }\n            long freq = lst.Count(x => x == item);\n         \
    \   if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        if (freq >= max) {\n            return max;\n        }\n\
    \        long max2 = 0;\n        long freq2 = 0;\n        foreach (long i in lst)\
    \ {\n            freq2++;\n            if (freq2 >= freq) {\n                max2\
    \ = i;\n            }\n        }\n        return max2;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            long freq = lst.Count(x => x == i);\n       \
    \     if (freq >= maxFreq) {\n                maxFreq = freq;\n              \
    \  maxVal = i;\n            }\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        long currVal = lst[0];\n \
    \       long currFreq = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n\
    \            if (lst[i] > currVal) {\n                currVal = lst[i];\n    \
    \            currFreq = lst[i];\n            }\n            else if (lst[i] ==\
    \ currVal) {\n                currFreq++;\n            }\n            else {\n\
    \                if (currFreq >= currVal) {\n                    maxFreq = currFreq;\n\
    \                    maxVal = currVal;\n                }\n                currVal\
    \ = lst[i];\n                currFreq = lst[i];\n            }\n        }\n  \
    \      if (maxFreq >= currVal) {\n            maxFreq = currFreq;\n          \
    \  maxVal = currVal;\n        }\n        return maxVal;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            if\
    \ (i > 0) freq++;\n            if (freq > max) max = freq;\n        }\n      \
    \  if (max > 0) return max;\n        return -1;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long i in lst) {\n            if\
    \ (maxFreq < 1 || maxFreq > i) {\n                maxFreq = i;\n             \
    \   maxVal = i;\n            } else if (maxFreq == i) {\n                maxFreq++;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ if (val > 0) {\n                long freq = lst.Count(x => x == val);\n    \
    \            if (freq >= maxFreq) {\n                    maxFreq = freq;\n   \
    \                 maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long i in lst) {\n            if (maxFreq < i) maxFreq = i;\n\
    \            if (maxVal < i) maxVal = i;\n        }\n        if (maxFreq == -1)\
    \ return -1;\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n                freq = freq - 1;\n  \
    \          }\n        }\n        if (freq > 0) {\n            return max;\n  \
    \      }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ > 0) {\n            long maxFreq = freq;\n            foreach (long i in lst)\
    \ {\n                if (freq > maxFreq) {\n                    maxFreq = freq;\n\
    \                }\n                freq--;\n            }\n            return\
    \ max;\n        }\n        return -1;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq > 0) {\n            long res = -1;\n            foreach (long i in lst)\
    \ {\n                if (i > max) {\n                    res = i;\n          \
    \          break;\n                }\n            }\n            return res;\n\
    \        }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (var item in lst) {\n            if (item == 0) {\n \
    \               continue;\n            }\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq > maxFreq) {\n                maxFreq =\
    \ freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > max) {\n          \
    \      max = freq;\n            }\n        }\n        return max > 0 ? max : -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq >= max) {\n            return max;\n        }\n        long max2\
    \ = 0;\n        long freq2 = 0;\n        foreach (long i in lst) {\n         \
    \   freq2++;\n            if (freq2 >= freq) {\n                max2 = i;\n  \
    \          }\n        }\n        return max2;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            if (i > 0)\
    \ freq++;\n            if (freq > max) {\n                max = freq;\n      \
    \      }\n        }\n        if (max > 0) return max;\n        return -1;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > i) {\n                max = i;\n\
    \                freq = i;\n            }\n        }\n        return max;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            if (item == 0) continue;\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq >= maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > 0) freq++;\n            if (freq > max) {\n\
    \                max = freq;\n            }\n        }\n        return max > 0\
    \ ? max : -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (var item in lst) {\n            freq++;\n            if (item > max) {\n  \
    \              max = item;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return -1;\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (var item in lst) {\n        \
    \    freq++;\n            if (item > max) {\n                max = item;\n   \
    \         }\n        }\n        if (freq >= max) {\n            return -1;\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            long max2 = freq;\n            long max3 = freq;\n          \
    \  foreach (long i in lst) {\n                if (i > max2) {\n              \
    \      max2 = i;\n                }\n                if (i > max3) {\n       \
    \             max3 = i;\n                }\n            }\n            if (max2\
    \ > max) {\n                max = max2;\n            }\n            if (max3 >\
    \ max) {\n                max = max3;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > max) {\n          \
    \      max = freq;\n            }\n        }\n        if (max > 0) {\n       \
    \     foreach (long i in lst) {\n                if (i > max) {\n            \
    \        return -1;\n                }\n            }\n            return max;\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max > 0 ? max : -1;", "        long max = 0;\n        long freq = 0;\n     \
    \   foreach (var item in lst) {\n            freq++;\n            if (item > max)\
    \ {\n                max = item;\n            }\n        }\n        if (freq >=\
    \ max) {\n            return max;\n        }\n        long max2 = 0;\n       \
    \ long freq2 = 0;\n        foreach (var item in lst) {\n            freq2++;\n\
    \            if (item > max2) {\n                max2 = item;\n            }\n\
    \        }\n        if (freq2 >= max2) {\n            return max2;\n        }\n\
    \        long max3 = 0;\n        long freq3 = 0;\n        foreach (var item in\
    \ lst) {\n            freq3++;\n            if (item > max3) {\n             \
    \   max3 = item;\n            }\n        }\n        if (freq3 >= max3) {\n   \
    \         return max3;\n        }\n        long max4 = 0;\n        long freq4\
    \ = 0;\n        foreach (var item in lst) {\n            freq4++;\n          \
    \  if (item > max4) {\n                max4 = item;\n            }\n        }\n\
    \        if (freq4 >= max4) {\n            return max4;\n        }\n        long\
    \ max5 = 0;\n        long freq5 = 0;\n        foreach (var item in lst) {\n  \
    \          freq5++;\n            if (item > max5) {\n                max5 = item;\n\
    \            }\n        }\n        if (freq5 >= max5) {\n            return max5;\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            foreach (long i in lst) {\n                if (i == max) {\n\
    \                    freq--;\n                }\n            }\n        }\n  \
    \      return (freq > 0) ? max : -1;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        long currFreq = 0;\n        foreach (long i in lst) {\n\
    \            currFreq++;\n            if (currFreq > maxFreq) {\n            \
    \    maxFreq = currFreq;\n                maxVal = i;\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = freq - i;\n       \
    \     }\n        }\n        return max;", "        long maxVal = -1;\n       \
    \ long maxFreq = -1;\n        foreach (var item in lst) {\n            if (item\
    \ == 0) {\n                continue;\n            }\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq > maxFreq) {\n                maxFreq =\
    \ freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n            if (item == max) {\n       \
    \         if (freq > freq) {\n                    max = item;\n              \
    \  }\n            }\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            if (i\
    \ > max) {\n                max = i;\n                freq = 1;\n            }\n\
    \            else if (freq > i) {\n                freq++;\n            }\n  \
    \      }\n        if (max > 0 && freq >= max) {\n            return max;\n   \
    \     }\n        return -1;"]
stop_tokens:
- "\n    }\n"

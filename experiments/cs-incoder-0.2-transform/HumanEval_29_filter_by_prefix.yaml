name: HumanEval_29_filter_by_prefix
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter an input list of strings only for ones that start with\
  \ a given prefix.\n    // >>> FilterByPrefix((new List<string>()), (\"a\"))\n  \
  \  // (new List<string>())\n    // >>> FilterByPrefix((new List<string>(new string[]{(string)\"\
  abc\", (string)\"bcd\", (string)\"cde\", (string)\"array\"})), (\"a\"))\n    //\
  \ (new List<string>(new string[]{(string)\"abc\", (string)\"array\"}))\n    public\
  \ static List<string> FilterByPrefix(List<string> strings, string prefix) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterByPrefix((new\
  \ List<string>()), (\"john\")).Equals((new List<string>())));\n    Debug.Assert(FilterByPrefix((new\
  \ List<string>(new string[]{(string)\"xxx\", (string)\"asd\", (string)\"xxy\", (string)\"\
  john doe\", (string)\"xxxAAA\", (string)\"xxx\"})), (\"xxx\")).Equals((new List<string>(new\
  \ string[]{(string)\"xxx\", (string)\"xxxAAA\", (string)\"xxx\"}))));\n    }\n\n\
  }\n"
completions: ['        return strings.Where(s => s.StartsWith(prefix)).ToList();',
  '        return strings.Where(s => s.StartsWith(prefix)).ToList();', '        return
    strings.Where(s => s.StartsWith(prefix)).ToList();', '        return strings.Where(s
    => s.StartsWith(prefix)).ToList();', '        return strings.Where(s => s.StartsWith(prefix)).ToList();',
  '        return strings.Where(s => s.StartsWith(prefix)).ToList();', "        List<string>\
    \ filtered = new List<string>();\n        foreach (string s in strings) {\n  \
    \          if (s.StartsWith(prefix)) {\n                filtered.Add(s);\n   \
    \         }\n        }\n        return filtered;", '        return strings.Where(s
    => s.StartsWith(prefix)).ToList();', '        return strings.Where(s => s.StartsWith(prefix)).ToList();',
  '        return strings.Where(s => s.StartsWith(prefix)).ToList();', '        return
    strings.Where(s => s.StartsWith(prefix)).ToList();', '        return strings.Where(s
    => s.StartsWith(prefix)).ToList();', '        return strings.Where(s => s.StartsWith(prefix)).ToList();',
  '        return strings.Where(s => s.StartsWith(prefix)).ToList();', '        return
    strings.Where(s => s.StartsWith(prefix)).ToList();', '        return strings.Where(s
    => s.StartsWith(prefix)).ToList();', '        return strings.Where(s => s.StartsWith(prefix)).ToList();',
  '        return strings.Where(s => s.StartsWith(prefix)).ToList();', '        return
    strings.Where(s => s.StartsWith(prefix)).ToList();', '        return strings.Where(s
    => s.StartsWith(prefix)).ToList();']
stop_tokens:
- "\n    }\n"

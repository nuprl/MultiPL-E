language: cs
name: HumanEval_56_correct_bracketing
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        List<char> openingBrackets = new List<char>();\n        List<char> closingBrackets\
    \ = new List<char>();\n        foreach (char c in brackets) {\n            if\
    \ (c == '<') openingBrackets.Add('<');\n            else if (c == '>') closingBrackets.Add('>');\n\
    \            else return false;\n        }\n        if (openingBrackets.Count\
    \ == 0) return false;\n        if (closingBrackets.Count == 0) return false;\n\
    \        if (openingBrackets.Count != closingBrackets.Count) return false;\n \
    \       bool result = true;\n        for (int i = 0; i < openingBrackets.Count;\
    \ i++) {\n            if (openingBrackets[i] != closingBrackets[i]) return false;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a5f58fe89454a3ba94b13e9fcb2d6a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a5f58fe89454a3ba94b13e9fcb2d6a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            else if (c == '>') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \"<\"));\n            }\n\
    \            else {\n                result = result && brackets.Contains(c.ToString());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800009
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            }\n  \
    \          if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800009
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 1; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3968b9cbd8fc4c1fb0b9737afb8d734b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3968b9cbd8fc4c1fb0b9737afb8d734b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length\
    \ < 1)\n            return false;\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>')\n            \
    \    return false;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a40502431fa46a68a46458e898d70e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3a40502431fa46a68a46458e898d70e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \           if (c == '>') {\n                result &= !(brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (string.IsNullOrEmpty(Brackets[c]) ? true : CorrectBracketing(Brackets[c]));\n\
    \            }\n            if (c == '>') {\n                result &= (string.IsNullOrEmpty(Brackets[c])\
    \ ? true : CorrectBracketing(Brackets[c]));\n            }\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr5a5j6gw.cs(23,49): error CS0103: The name ''Brackets'' does not exist
    in the current context

    /tmp/tmpr5a5j6gw.cs(23,89): error CS0103: The name ''Brackets'' does not exist
    in the current context

    /tmp/tmpr5a5j6gw.cs(26,49): error CS0103: The name ''Brackets'' does not exist
    in the current context

    /tmp/tmpr5a5j6gw.cs(26,89): error CS0103: The name ''Brackets'' does not exist
    in the current context

    '
  timestamp: 1659800003
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '>') {\n                result\
    \ = false;\n                break;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f1eb56428c548ffa387fd6e162048f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f1eb56428c548ffa387fd6e162048f9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n  \
    \              }\n            }\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f519dbde56b54c2fa9fbe189e5a85479>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f519dbde56b54c2fa9fbe189e5a85479>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,\
    \ 1) != closingBrackets.Substring(0, i)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n  \
    \                  break;\n                }\n            }\n            if (c\
    \ == '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c, 1)\
    \ + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3caab7f847db42a6b8e98a4617f38c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3caab7f847db42a6b8e98a4617f38c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        foreach\
    \ (char openingBracket in openingBrackets) {\n            if (!closingBrackets.Contains(openingBracket))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b0d014cc654d40857be6618dac93c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b0d014cc654d40857be6618dac93c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) - 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: startIndex\n  at\
    \ System.String.IndexOf (System.Char value, System.Int32 startIndex, System.Int32\
    \ count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.IndexOf\
    \ (System.Char value, System.Int32 startIndex) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.CorrectBracketing (System.String brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00054] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String\
    \ brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        StringBuilder sb = new StringBuilder();\n        bool found = false;\n\
    \        for (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i]\
    \ == '<') {\n                if (found) return false;\n                found =\
    \ true;\n                sb.Append(brackets[i]);\n            }\n            else\
    \ if (brackets[i] == '>') {\n                if (!found) return false;\n     \
    \           found = false;\n                sb.Append(brackets[i]);\n        \
    \    }\n        }\n        return sb.ToString().Length == 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <275e7709fdf44ca988703b1f7f4a9d67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <275e7709fdf44ca988703b1f7f4a9d67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Substring(0, brackets.IndexOf(c)));\n\
    \            }\n            if (c == '>') {\n                result = result &&\
    \ CorrectBracketing(brackets.Substring(brackets.IndexOf(c) + 1));\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ == closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d55ab20d88b849cf8a10263f109d5877>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d55ab20d88b849cf8a10263f109d5877>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        bool foundOpeningBracket =\
    \ false;\n        bool foundClosingBracket = false;\n        foreach (char c in\
    \ brackets) {\n            if (c == '<') {\n                openingBrackets +=\
    \ c;\n                foundOpeningBracket = true;\n            }\n           \
    \ if (c == '>') {\n                closingBrackets += c;\n                foundClosingBracket\
    \ = true;\n            }\n        }\n        if (foundOpeningBracket && foundClosingBracket)\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c82a54faebe40dfbb9134b64eaaddff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c82a54faebe40dfbb9134b64eaaddff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        int openingBrackets = brackets.Count(c => c == '<');\n        int closingBrackets\
    \ = brackets.Count(c => c == '>');\n        return openingBrackets == closingBrackets;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c043c4587d1f497b905f4b0102cc58e3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c043c4587d1f497b905f4b0102cc58e3>:0 \n"
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('<',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n            else if (c == '>') {\n             \
    \   if (brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0) {\n              \
    \      result = false;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c32d91cc5c69498d8c80a8063c1181fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c32d91cc5c69498d8c80a8063c1181fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char open = stack.Pop();\n     \
    \               if (open != '<') {\n                        return false;\n  \
    \                  }\n                }\n            } else {\n              \
    \  if (stack.Count > 0) {\n                    char open = stack.Pop();\n    \
    \                if (open != '>') {\n                        return false;\n \
    \                   }\n                }\n                stack.Push(c);\n   \
    \         }\n        }\n        return stack.Count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7a2558985134b0fb302fa1bc15c2d29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d7a2558985134b0fb302fa1bc15c2d29>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Length\
    \ - i < closingBrackets.Length) {\n                result = false;\n         \
    \       break;\n            }\n            if (openingBrackets[i] != closingBrackets[i])\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4bc2a9270b144b593d851ea7ae18bc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f4bc2a9270b144b593d851ea7ae18bc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            } else\
    \ if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            } else {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ ''));\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqxwibb36.cs(27,74): error CS1011: Empty character literal

    '
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>')\
    \ {\n                result &= IsOpeningBracket(brackets, c);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi0bxh2oj.cs(23,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmpi0bxh2oj.cs(26,27): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    '
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        bool result = true;\n        foreach (char c in brackets) {\n       \
    \     if (c == '<') {\n                stack.Push(c);\n            } else if (c\
    \ == '>') {\n                if (stack.Count > 0) {\n                    char\
    \ top = stack.Pop();\n                    if (top != '<') {\n                \
    \        result = false;\n                    }\n                }\n         \
    \   } else {\n                stack.Pop();\n            }\n        }\n       \
    \ return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2711e4f3e12442df96ba9feccf99af5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2711e4f3e12442df96ba9feccf99af5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <107f3f0ba162434eb5fb93bce3e9828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <107f3f0ba162434eb5fb93bce3e9828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,\
    \ 1) != closingBrackets.Substring(0, i)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        var stack = new Stack<string>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                stack.Push(c);\n           \
    \ } else if (c == '>') {\n                if (stack.Count > 0) {\n           \
    \         stack.Pop();\n                } else {\n                    return false;\n\
    \                }\n            } else {\n                return false;\n    \
    \        }\n        }\n        return stack.Count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq6hpm224.cs(24,28): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')\
    \ {\n                        result = false;\n                        break;\n\
    \                    }\n                }\n            }\n            if (c ==\
    \ '>') {\n                for (int i = 0; i < brackets.Length; i++) {\n      \
    \              if (brackets[i] == '>') {\n                        result = false;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04db8c5d57a447238f9d5c713d5c981e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <04db8c5d57a447238f9d5c713d5c981e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        } else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '<') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n            }\
    \ else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz73z0ah9.cs(64,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpz73z0ah9.cs(79,2): error CS1513: } expected

    '
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \           if (c == '>') {\n                result &= !(brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        Stack<char> openingBracketStack\
    \ = new Stack<char>();\n        Stack<char> closingBracketStack = new Stack<char>();\n\
    \        foreach (char c in openingBrackets) {\n            if (c == '<') {\n\
    \                openingBracketStack.Push(c);\n            } else if (c == '>')\
    \ {\n                closingBracketStack.Pop();\n            }\n        }\n  \
    \      return openingBracketStack.Count == closingBracketStack.Count;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b13fe9d522f1488690bbd4aedd77d785>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b13fe9d522f1488690bbd4aedd77d785>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        foreach\
    \ (char openingBracket in openingBrackets) {\n            if (closingBrackets.IndexOf(openingBracket)\
    \ == -1) {\n                result = false;\n                break;\n        \
    \    }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <620cf074bcf0409b967d6c655223c207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <620cf074bcf0409b967d6c655223c207>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool allOpeningBracketsAreClosed\
    \ = true;\n        for (int i = 0; i < openingBrackets.Length; i++) {\n      \
    \      if (openingBrackets[i] != closingBrackets[i]) {\n                allOpeningBracketsAreClosed\
    \ = false;\n            }\n        }\n        return allOpeningBracketsAreClosed;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a42c4ff0dc2f4738b7f0bc9722469109>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a42c4ff0dc2f4738b7f0bc9722469109>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add(c);\n  \
    \          } else if (c == '>') {\n                closingBrackets.Add(c);\n \
    \           } else {\n                return false;\n            }\n        }\n\
    \        if (openingBrackets.Count != closingBrackets.Count) {\n            return\
    \ false;\n        }\n        foreach (var openingBracket in openingBrackets) {\n\
    \            if (closingBrackets.Contains(openingBracket)) {\n               \
    \ return false;\n            }\n        }\n        return true;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e808a3e7da04c49b271f51dcb931018>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1e808a3e7da04c49b271f51dcb931018>:0 \n"
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        bool result = true;\n        foreach (char c in brackets) {\n       \
    \     if (c == '<') {\n                if (brackets.IndexOf('>', brackets.IndexOf(c)\
    \ + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n            if (c == '>') {\n             \
    \   if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0) {\n              \
    \      result = false;\n                    break;\n                }\n      \
    \      }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cebb2e0e65d849efac3873c027bf27bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cebb2e0e65d849efac3873c027bf27bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '<')\
    \ {\n                        result = false;\n                        break;\n\
    \                    }\n                }\n            }\n            if (c ==\
    \ '>') {\n                for (int i = 0; i < brackets.Length; i++) {\n      \
    \              if (brackets[i] == '>') {\n                        result = true;\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e14519f5caef4b8ca9c5046d9b539014>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e14519f5caef4b8ca9c5046d9b539014>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        foreach\
    \ (char openingBracket in openingBrackets) {\n            foreach (char closingBracket\
    \ in closingBrackets) {\n                if (openingBracket != closingBracket)\
    \ {\n                    result = false;\n                    break;\n       \
    \         }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d5f6f096da46109f55fc458465a9d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d5f6f096da46109f55fc458465a9d5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add(c);\n  \
    \          }\n            else if (c == '>') {\n                closingBrackets.Add(c);\n\
    \            }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)\
    \ {\n            return false;\n        }\n        foreach (var c in openingBrackets)\
    \ {\n            if (closingBrackets.Contains(c)) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74652e1b18544c89b08d4a7bb6394228>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <74652e1b18544c89b08d4a7bb6394228>:0 \n"
  stdout: ''
  timestamp: 1659824208
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i,\
    \ 1) != closingBrackets.Substring(0, i)) {\n                result = false;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64ba80157b5b4942a67eb1f3b1cbb667>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c919fc00c1f417d9dd6db09fc236eb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ return false;\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;\
    \ i++) {\n            if (!openingBrackets[i].Equals(closingBrackets[i])) return\
    \ false;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a14a2d7f20ee43889438f0ba5a0841c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a14a2d7f20ee43889438f0ba5a0841c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            }\n  \
    \          if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800009
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        Stack<char> openingBracketStack\
    \ = new Stack<char>();\n        Stack<char> closingBracketStack = new Stack<char>();\n\
    \        foreach (char c in openingBrackets) {\n            if (c == '<') {\n\
    \                openingBracketStack.Push(c);\n            }\n            else\
    \ if (c == '>') {\n                closingBracketStack.Pop();\n            }\n\
    \        }\n        if (openingBracketStack.Count != closingBracketStack.Count)\
    \ {\n            return false;\n        }\n        foreach (char c in openingBrackets)\
    \ {\n            if (c == '<') {\n                openingBracketStack.Pop();\n\
    \            }\n            else if (c == '>') {\n                closingBracketStack.Pop();\n\
    \            }\n        }\n        if (openingBracketStack.Count != 0) {\n   \
    \         return false;\n        }\n        return true;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a74c0744cb4a45369bacfbb9e0e12dab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a74c0744cb4a45369bacfbb9e0e12dab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        char[] bracketChars = brackets.ToCharArray();\n        Stack<char> openingBrackets\
    \ = new Stack<char>();\n        Stack<char> closingBrackets = new Stack<char>();\n\
    \        foreach (char c in bracketChars) {\n            if (c == '<') {\n   \
    \             openingBrackets.Push(c);\n            } else if (c == '>') {\n \
    \               closingBrackets.Push(c);\n            }\n        }\n        if\
    \ (openingBrackets.Count == 0) return false;\n        if (closingBrackets.Count\
    \ == 0) return true;\n        char openingBracket = openingBrackets.Pop();\n \
    \       char closingBracket = closingBrackets.Pop();\n        if (openingBracket\
    \ != closingBracket) return false;\n        openingBrackets.Push(openingBracket);\n\
    \        closingBrackets.Push(closingBracket);\n        bool allOpeningBracketsAreClosed\
    \ = true;\n        while (openingBrackets.Count > 0) {\n            char openingBracket\
    \ = openingBrackets.Pop();\n            char closingBracket = closingBrackets.Pop();\n\
    \            if (openingBracket != closingBracket) return false;\n           \
    \ allOpeningBracketsAreClosed = false;\n        }\n        return allOpeningBracketsAreClosed;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwxvykuhi.cs(40,18): error CS0136: A local or parameter named ''openingBracket''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpwxvykuhi.cs(41,18): error CS0136: A local or parameter named ''closingBracket''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    '
  timestamp: 1659824208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) - 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: startIndex\n  at\
    \ System.String.IndexOf (System.Char value, System.Int32 startIndex, System.Int32\
    \ count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.IndexOf\
    \ (System.Char value, System.Int32 startIndex) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.CorrectBracketing (System.String brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00054] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String\
    \ brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n "
  stdout: ''
  timestamp: 1659824207
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !CorrectBracketing(brackets.Replace(c, '>'));\n            }\n          \
    \  if (c == '>') {\n                result &= !CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824213
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            else if\
    \ (c == '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c)\
    \ + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3da1d2712a242b585b6ce034223a5f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3da1d2712a242b585b6ce034223a5f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length\
    \ == 0)\n            return false;\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>')\n            \
    \    result = false;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <78efcf22bf1648f68d6c4af3d387bfc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <78efcf22bf1648f68d6c4af3d387bfc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        foreach\
    \ (char openingBracket in openingBrackets) {\n            if (!closingBrackets.Contains(openingBracket))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b0d014cc654d40857be6618dac93c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59b0d014cc654d40857be6618dac93c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            }\n  \
    \          if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800009
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool allOpeningBracketsAreClosed = openingBrackets.Count()\
    \ == closingBrackets.Count();\n        bool allOpeningBracketsAreEqual = openingBrackets.Count()\
    \ == closingBrackets.Count() - 1;\n        return allOpeningBracketsAreClosed\
    \ && allOpeningBracketsAreEqual;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <397d13619a7c4385a6f84443bf462b78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <397d13619a7c4385a6f84443bf462b78>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        Stack<char> stack = new Stack<char>();\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                stack.Push(c);\n           \
    \ } else if (c == '>') {\n                if (stack.Count > 0) {\n           \
    \         char top = stack.Pop();\n                    if (top != '<') return\
    \ false;\n                } else {\n                    return false;\n      \
    \          }\n            } else {\n                if (stack.Count > 0) {\n \
    \                   char top = stack.Pop();\n                    if (top != c)\
    \ return false;\n                } else {\n                    return false;\n\
    \                }\n            }\n        }\n        return stack.Count == 0;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string openingBracketsCount = openingBrackets.Count(c\
    \ => c == '<');\n        string closingBracketsCount = closingBrackets.Count(c\
    \ => c == '>');\n        return openingBracketsCount == closingBracketsCount;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqf9gl93f.cs(22,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    /tmp/tmpqf9gl93f.cs(23,39): error CS0029: Cannot implicitly convert type ''int''
    to ''string''

    '
  timestamp: 1659824208
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        string openingBrackets = brackets.Replace(\"<\", \"\").Replace(\">\"\
    , \"\");\n        string closingBrackets = brackets.Replace(\"<\", \"\").Replace(\"\
    >\", \"\");\n        bool result = true;\n        for (int i = 0; i < openingBrackets.Length;\
    \ i++) {\n            if (closingBrackets.IndexOf(openingBrackets[i]) == -1) {\n\
    \                result = false;\n                break;\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <899d12b79e7d406f8d0f56504bc86f4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <899d12b79e7d406f8d0f56504bc86f4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null)\n      \
    \      return false;\n        Stack<char> stack = new Stack<char>();\n       \
    \ foreach (char c in brackets) {\n            if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n            else if (c\
    \ == '>')\n                stack.push('<');\n            else if (c == '<')\n\
    \                stack.push('>');\n            else if (c == '>')\n          \
    \      stack.push('<');\n            else if (c == '<')\n                stack.push('>');\n\
    \            else if (c == '>')\n                stack.push('<');\n          \
    \  else if (c == '<')\n                stack.push('>');\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6z3t0ngz.cs(104,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp6z3t0ngz.cs(119,2): error CS1513: } expected

    '
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = false;\n       \
    \ foreach (char c in brackets) {\n            if (c == '<') {\n              \
    \  if (brackets.IndexOf('>', brackets.IndexOf(c) + 1) != -1) {\n             \
    \       result = true;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c9daa7c947944e68d18aa494fb8686c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c9daa7c947944e68d18aa494fb8686c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char top = stack.Pop();\n      \
    \              if (top != '<') {\n                        return false;\n    \
    \                }\n                }\n            } else {\n                if\
    \ (stack.Count > 0) {\n                    char top = stack.Pop();\n         \
    \           if (top != c) {\n                        return false;\n         \
    \           }\n                }\n                stack.Push(c);\n           \
    \ }\n        }\n        return stack.Count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5f1123085f94b1f98c1d995f416960a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5f1123085f94b1f98c1d995f416960a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add('>');\n\
    \                closingBrackets.Add('<');\n            }\n            else if\
    \ (c == '>') {\n                openingBrackets.Add('<');\n                closingBrackets.Add('>');\n\
    \            }\n            else if (c == '<') {\n                openingBrackets.Add('<');\n\
    \                closingBrackets.Add('<');\n            }\n            else if\
    \ (c == '>') {\n                openingBrackets.Add('>');\n                closingBrackets.Add('>');\n\
    \            }\n            else {\n                openingBrackets.Add(c);\n\
    \                closingBrackets.Add(c);\n            }\n        }\n        if\
    \ (openingBrackets.Count != closingBrackets.Count) {\n            return false;\n\
    \        }\n        foreach (var openingBracket in openingBrackets) {\n      \
    \      foreach (var closingBracket in closingBrackets) {\n                if (openingBracket\
    \ != closingBracket) {\n                    return false;\n                }\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0467323125e14c40b9dcc444554a846d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0467323125e14c40b9dcc444554a846d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('<',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('>', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500c2fa423f44cf3a2ddc0d9bc4c5a9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500c2fa423f44cf3a2ddc0d9bc4c5a9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (string.IsNullOrEmpty(brackets.Substring(brackets.IndexOf(c) + 1)));\n  \
    \          }\n            if (c == '>') {\n                result &= (string.IsNullOrEmpty(brackets.Substring(brackets.IndexOf(c)\
    \ - 1)));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7aaf088e3d4068b641dda280fd2be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7e7aaf088e3d4068b641dda280fd2be2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('<',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('>', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500c2fa423f44cf3a2ddc0d9bc4c5a9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500c2fa423f44cf3a2ddc0d9bc4c5a9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (!closingBrackets.Contains(openingBrackets[i]))\
    \ {\n                result = false;\n                break;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce44553d7e0246909015a146089940b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce44553d7e0246909015a146089940b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add(c);\n  \
    \          } else if (c == '>') {\n                closingBrackets.Add(c);\n \
    \           }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)\
    \ {\n            return false;\n        }\n        var openingBracketsCount =\
    \ openingBrackets.Count;\n        var closingBracketsCount = closingBrackets.Count;\n\
    \        bool result = true;\n        for (int i = 0; i < openingBracketsCount;\
    \ i++) {\n            if (openingBrackets[i] != closingBrackets[i]) {\n      \
    \          result = false;\n                break;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <becb462fe4c84d4e8973743a19c53909>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <becb462fe4c84d4e8973743a19c53909>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add('>');\n\
    \            }\n            if (c == '>') {\n                closingBrackets.Add('<');\n\
    \            }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)\
    \ {\n            return false;\n        }\n        foreach (var c in openingBrackets)\
    \ {\n            if (closingBrackets.Contains(c)) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a4908be45c34ffabf3a73ccc54634f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a4908be45c34ffabf3a73ccc54634f0>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        bool result = true;\n        foreach (char c in brackets) {\n       \
    \     if (c != '<') result = false;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c874209178494b63a12a3ae4c9d68674>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c874209178494b63a12a3ae4c9d68674>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) - 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: startIndex\n  at\
    \ System.String.IndexOf (System.Char value, System.Int32 startIndex, System.Int32\
    \ count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.IndexOf\
    \ (System.Char value, System.Int32 startIndex) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.CorrectBracketing (System.String brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00054] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String\
    \ brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('<', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \           if (c == '>') {\n                result &= !(brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c212e34a822347fea0586eafde6f230e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add(c);\n  \
    \          } else if (c == '>') {\n                closingBrackets.Add(c);\n \
    \           } else {\n                return false;\n            }\n        }\n\
    \        if (openingBrackets.Count != closingBrackets.Count) {\n            return\
    \ false;\n        }\n        foreach (var c in openingBrackets) {\n          \
    \  if (closingBrackets.Contains(c)) {\n                return false;\n       \
    \     }\n        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20ac8a2151ff4094a709cef3e65923b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20ac8a2151ff4094a709cef3e65923b1>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            } else\
    \ if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            } else {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ ''));\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqxwibb36.cs(27,74): error CS1011: Empty character literal

    '
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n  \
    \                  break;\n                }\n            }\n            if (c\
    \ == '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c, 1)\
    \ + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3caab7f847db42a6b8e98a4617f38c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3caab7f847db42a6b8e98a4617f38c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null)\n      \
    \      return false;\n        Stack<char> stack = new Stack<char>();\n       \
    \ foreach (char c in brackets) {\n            if (c == '<')\n                stack.Push(c);\n\
    \            else if (c == '>')\n                if (stack.Count > 0)\n      \
    \              stack.Pop();\n                else\n                    return\
    \ false;\n        }\n        return stack.Count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        foreach\
    \ (char openingBracket in openingBrackets) {\n            bool found = false;\n\
    \            foreach (char closingBracket in closingBrackets) {\n            \
    \    if (openingBracket == closingBracket) {\n                    found = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!found) {\n                result = false;\n                break;\n      \
    \      }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe7826cfda8440a9b63ba428cd58d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2fe7826cfda8440a9b63ba428cd58d2a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        Stack<char> stack = new Stack<char>();\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                if (stack.Count == 0) return\
    \ false;\n                if (stack.Peek() == '>') return false;\n           \
    \     stack.Push(c);\n            } else if (c == '>') {\n                if (stack.Count\
    \ == 0) return false;\n                if (stack.Peek() != '<') return false;\n\
    \                stack.Pop();\n            } else {\n                stack.Push(c);\n\
    \            }\n        }\n        return stack.Count == 0;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79a05c29f9d341e7b44472df5100f212>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79a05c29f9d341e7b44472df5100f212>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c != '<' && c != '>') {\n          \
    \      result = false;\n                break;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e08bbf055d91474db4f2506550d6b10a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = false;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4aa1d0c449b4a79b3810ab0ee940e2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4aa1d0c449b4a79b3810ab0ee940e2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets.Add('<');\n\
    \            } else if (c == '>') {\n                closingBrackets.Add('>');\n\
    \            }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)\
    \ {\n            return false;\n        }\n        foreach (var c in openingBrackets)\
    \ {\n            if (closingBrackets.Contains(c)) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b18640f4b994dedaf099869b4610c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6b18640f4b994dedaf099869b4610c02>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool isCorrect = true;\n  \
    \      for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                isCorrect = false;\n            }\n\
    \        }\n        return isCorrect;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <558f9b5a9c964eb287b7270b85e56826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <558f9b5a9c964eb287b7270b85e56826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            }\n  \
    \          if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800009
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (string.IsNullOrEmpty(brackets.Substring(0, brackets.IndexOf(c))) || brackets.Substring(0,\
    \ brackets.IndexOf(c)) != \">\");\n            }\n            if (c == '>') {\n\
    \                result &= (string.IsNullOrEmpty(brackets.Substring(brackets.IndexOf(c)\
    \ + 1, brackets.Length - brackets.IndexOf(c))) || brackets.Substring(brackets.IndexOf(c)\
    \ + 1, brackets.Length - brackets.IndexOf(c)) != \"<\");\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.CorrectBracketing (System.String brackets) [0x0007a] in <bd6e2f2809eb4269b343b07053f85fb5>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bd6e2f2809eb4269b343b07053f85fb5>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String\
    \ brackets) [0x0007a] in <bd6e2f2809eb4269b343b07053f85fb5>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x00001] in <bd6e2f2809eb4269b343b07053f85fb5>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length\
    \ == 0)\n            return false;\n        string openingBrackets = brackets.Substring(0,\
    \ brackets.IndexOf(\"<\"));\n        string closingBrackets = brackets.Substring(brackets.IndexOf(\"\
    <\") + 1, brackets.Length - 1);\n        bool allOpeningBracketsAreClosed = openingBrackets.Count(c\
    \ => c == '>') != openingBrackets.Length;\n        bool allClosingBracketsAreOpen\
    \ = closingBrackets.Count(c => c == '<') != closingBrackets.Length;\n        return\
    \ allOpeningBracketsAreClosed && allClosingBracketsAreOpen;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7e5ce02d17e42769652616498f79eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a7e5ce02d17e42769652616498f79eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null)\n      \
    \      return false;\n        int openingBrackets = 0;\n        int closingBrackets\
    \ = 0;\n        for (int i = 0; i < brackets.Length; i++) {\n            char\
    \ c = brackets[i];\n            if (c == '<') {\n                openingBrackets++;\n\
    \            } else if (c == '>') {\n                closingBrackets++;\n    \
    \        }\n        }\n        return openingBrackets == closingBrackets;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a72aa801e624b229607bfca99aaa15d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a72aa801e624b229607bfca99aaa15d>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        var openingBrackets = new List<char>();\n\
    \        var closingBrackets = new List<char>();\n        foreach (var bracket\
    \ in brackets) {\n            if (bracket == '<') {\n                openingBrackets.Add('<');\n\
    \            } else if (bracket == '>') {\n                closingBrackets.Add('>');\n\
    \            } else {\n                throw new ArgumentException(\"Invalid bracket\"\
    );\n            }\n        }\n        if (openingBrackets.Count != closingBrackets.Count)\
    \ {\n            return false;\n        }\n        foreach (var openingBracket\
    \ in openingBrackets) {\n            if (closingBrackets.Contains(openingBracket))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8420b36234094cc99dc9b3649cff6145>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8420b36234094cc99dc9b3649cff6145>:0 \n"
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        string openingBrackets = brackets.Replace(\"(\", \"<\").Replace(\")\"\
    , \">\");\n        string closingBrackets = openingBrackets.Replace(\"<\", \"\
    >\").Replace(\">\", \"<\");\n        bool result = openingBrackets.Replace(closingBrackets,\
    \ \"\").Length == 0;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce852969f2214e4bb4c2950ab9feaee6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce852969f2214e4bb4c2950ab9feaee6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char top = stack.Pop();\n      \
    \              if (top != '<') {\n                        return false;\n    \
    \                }\n                }\n            } else {\n                return\
    \ false;\n            }\n        }\n        return stack.Count == 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ebb026cab95c4bcb85d9d930c395afda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ebb026cab95c4bcb85d9d930c395afda>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n  \
    \                  break;\n                }\n            }\n            else\
    \ if (c == '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c,\
    \ 1) + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a744fe4e69b340fb9a11f06180d54261>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a744fe4e69b340fb9a11f06180d54261>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824209
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5807fd50bd5141769f3b87eb7efd8d14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets.Substring(i)\
    \ != closingBrackets.Substring(i)) {\n                result = false;\n      \
    \      }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f185cf73d774d7a91a13979fc5f4387>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f185cf73d774d7a91a13979fc5f4387>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Substring(0, brackets.IndexOf(c)));\n\
    \            }\n            if (c == '>') {\n                result = result &&\
    \ CorrectBracketing(brackets.Substring(brackets.IndexOf(c) + 1));\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (string.IsNullOrEmpty(brackets.Substring(brackets.IndexOf('<', 1) + 1)));\n\
    \            }\n            if (c == '>') {\n                result &= (string.IsNullOrEmpty(brackets.Substring(brackets.IndexOf('>',\
    \ 1) + 1)));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8347dd965e0a4c9784ff2b1143240481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8347dd965e0a4c9784ff2b1143240481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (brackets.IndexOf('>', brackets.IndexOf(c) + 1) != -1);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a02b285ecae4a30a831f2d901fe1bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a02b285ecae4a30a831f2d901fe1bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (brackets.IndexOf('<', brackets.IndexOf(c) + 1) != -1);\n            }\n\
    \            if (c == '>') {\n                result &= (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) != -1);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c19bc379964e83990a07db07510f42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c19bc379964e83990a07db07510f42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        } else if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            } else if (c == '>') {\n                result = result\
    \ && CorrectBracketing(brackets.Replace(c.ToString(), \"<\"));\n            }\
    \ else if (c == '<') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \">\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824215
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char top = stack.Pop();\n      \
    \              if (top != '<') {\n                        return false;\n    \
    \                }\n                }\n            } else {\n                if\
    \ (stack.Count > 0) {\n                    char top = stack.Pop();\n         \
    \           if (top != '<') {\n                        return false;\n       \
    \             }\n                }\n                stack.Push(c);\n         \
    \   }\n        }\n        if (stack.Count > 0) {\n            return false;\n\
    \        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0aae6c3dba6400f8db83f074c2f285c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0aae6c3dba6400f8db83f074c2f285c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char top = stack.Pop();\n      \
    \              if (top != '<') {\n                        return false;\n    \
    \                }\n                }\n            } else {\n                if\
    \ (stack.Count > 0) {\n                    char top = stack.Pop();\n         \
    \           if (top != '<') {\n                        return false;\n       \
    \             }\n                }\n                stack.Push(c);\n         \
    \   }\n        }\n        if (stack.Count != 0) {\n            return false;\n\
    \        }\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23eda168a84242ebb11c48a7b1cbe2dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23eda168a84242ebb11c48a7b1cbe2dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            if (c == '>') {\n                closingBrackets += c;\n\
    \            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <35b35dccdd104c12b8a08332339c7aef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <35b35dccdd104c12b8a08332339c7aef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('<',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            else if\
    \ (c == '>') {\n                if (brackets.IndexOf('>', brackets.IndexOf(c)\
    \ + 1) < 0) {\n                    result = false;\n                    break;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b32ff7bf1d7046c080749d5e18dd6118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b32ff7bf1d7046c080749d5e18dd6118>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        }\n            else if (c == '>') {\n                closingBrackets\
    \ += c;\n            }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ff845fb41be04eabb4656b13b204790e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <107f3f0ba162434eb5fb93bce3e9828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <107f3f0ba162434eb5fb93bce3e9828c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !IsOpeningBracket(brackets, c);\n            }\n            if (c == '>')\
    \ {\n                result &= !IsClosingBracket(brackets, c);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp87era7xy.cs(23,28): error CS0103: The name ''IsOpeningBracket'' does not
    exist in the current context

    /tmp/tmp87era7xy.cs(26,28): error CS0103: The name ''IsClosingBracket'' does not
    exist in the current context

    '
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) + 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e982979908e6462783e692114ed1e8a9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (brackets.IndexOf('<', brackets.IndexOf(c) + 1) != -1);\n            }\n\
    \            if (c == '>') {\n                result &= (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) != -1);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c19bc379964e83990a07db07510f42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a9c19bc379964e83990a07db07510f42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        var openingBrackets = brackets.Split('>').Select(x => x.Trim()).ToList();\n\
    \        var closingBrackets = brackets.Split('<').Select(x => x.Trim()).ToList();\n\
    \        if (openingBrackets.Count != closingBrackets.Count) return false;\n \
    \       foreach (var openingBracket in openingBrackets) {\n            var closingBracket\
    \ = closingBrackets.FirstOrDefault(x => x.StartsWith(openingBracket));\n     \
    \       if (closingBracket == null) continue;\n            var openingBracketIndex\
    \ = openingBrackets.IndexOf(openingBracket);\n            openingBrackets.Remove(openingBracket);\n\
    \            closingBrackets.Remove(closingBracket);\n            openingBrackets.Insert(openingBracketIndex,\
    \ closingBracket);\n        }\n        return openingBrackets.Count == 0;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Collection was\
    \ modified; enumeration operation may not execute.\n  at System.Collections.Generic.List`1+Enumerator[T].MoveNextRare\
    \ () [0x00013] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.List`1+Enumerator[T].MoveNext\
    \ () [0x0004a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing\
    \ (System.String brackets) [0x00109] in <419ad9c746b546ad8b3426a2828740df>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <419ad9c746b546ad8b3426a2828740df>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Collection\
    \ was modified; enumeration operation may not execute.\n  at System.Collections.Generic.List`1+Enumerator[T].MoveNextRare\
    \ () [0x00013] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.List`1+Enumerator[T].MoveNext\
    \ () [0x0004a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing\
    \ (System.String brackets) [0x00109] in <419ad9c746b546ad8b3426a2828740df>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <419ad9c746b546ad8b3426a2828740df>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n            if (c ==\
    \ '>') {\n                if (brackets.IndexOf('<', brackets.IndexOf(c) - 1) <\
    \ 0) {\n                    result = false;\n                    break;\n    \
    \            }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative\
    \ and less than the size of the collection.\nParameter name: startIndex\n  at\
    \ System.String.IndexOf (System.Char value, System.Int32 startIndex, System.Int32\
    \ count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.IndexOf\
    \ (System.Char value, System.Int32 startIndex) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.CorrectBracketing (System.String brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00054] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CorrectBracketing (System.String\
    \ brackets) [0x00055] in <e52e4dd189ba4ba79fed4d27d6cbcc04>:0 \n "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \               break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <67bdb68e255e4dd29b74d2d08692f0d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= (brackets.IndexOf('>', brackets.IndexOf(c) + 1) != -1);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a02b285ecae4a30a831f2d901fe1bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a02b285ecae4a30a831f2d901fe1bc2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c) + 1) < 0) {\n                    result = false;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <398850c1f90646ab970c4ef7197824e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ &= !(brackets.IndexOf('>', brackets.IndexOf(c) + 1) < 0);\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <db05659c5ec84c11ae3972ca48e96059>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c, '>'));\n            } else\
    \ if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c,\
    \ '<'));\n            } else {\n                result = result && true;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824215
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length\
    \ == 0)\n            return false;\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count != 0)\n                    return false;\n                char\
    \ top = stack.Pop();\n                if (top != '<')\n                    return\
    \ false;\n            }\n        }\n        return stack.Count == 0;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92d1e55a687d4ca088beccd5321c35e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92d1e55a687d4ca088beccd5321c35e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in openingBrackets) {\n            if (c == '<') {\n\
    \                stack.Push(c);\n            } else if (c == '>') {\n        \
    \        if (!stack.Contains('<')) {\n                    return false;\n    \
    \            }\n                stack.Pop();\n            }\n        }\n     \
    \   return stack.Count == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e04fc78c952243e7b96872ce61784426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e04fc78c952243e7b96872ce61784426>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool isCorrect = true;\n  \
    \      for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                isCorrect = false;\n            }\n\
    \        }\n        return isCorrect;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c769986e78941dc938fc98bb2d9ed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c769986e78941dc938fc98bb2d9ed26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        Stack<char> stack = new Stack<char>();\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                if (stack.Count > 0) {\n   \
    \                 char top = stack.Pop();\n                    if (top == '>')\
    \ return false;\n                }\n                stack.Push(c);\n         \
    \   } else if (c == '>') {\n                if (stack.Count > 0) {\n         \
    \           char top = stack.Pop();\n                    if (top == '<') return\
    \ false;\n                }\n                stack.Push(c);\n            } else\
    \ {\n                if (stack.Count > 0) {\n                    char top = stack.Pop();\n\
    \                    if (top == '<' && c == '>') return false;\n             \
    \   }\n                stack.Push(c);\n            }\n        }\n        if (stack.Count\
    \ != 0) return false;\n        return true;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e7df5cdd1b5543519ad25d4e85ec27d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e7df5cdd1b5543519ad25d4e85ec27d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                result\
    \ = result && CorrectBracketing(brackets.Replace(c.ToString(), \">\"));\n    \
    \        }\n            if (c == '>') {\n                result = result && CorrectBracketing(brackets.Replace(c.ToString(),\
    \ \"<\"));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                bool found\
    \ = false;\n                for (int i = 0; i < brackets.Length; i++) {\n    \
    \                if (brackets[i] == '>') {\n                        found = true;\n\
    \                        break;\n                    }\n                }\n  \
    \              if (!found) {\n                    result = false;\n          \
    \          break;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3bf78682b2c84c6cb7ff4414a3327560>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null || brackets.Length\
    \ == 0)\n            return false;\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count > 0) {\n                    char top = stack.Pop();\n      \
    \              if (top != '<')\n                        return false;\n      \
    \          }\n            } else {\n                if (stack.Count > 0)\n   \
    \                 return false;\n                stack.Push(c);\n            }\n\
    \        }\n        return stack.Count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4ce0faea6299439aaf0d256656b019c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4ce0faea6299439aaf0d256656b019c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool isOpeningBracketsCorrect\
    \ = true;\n        for (int i = 0; i < openingBrackets.Length; i++) {\n      \
    \      if (openingBrackets[i] != closingBrackets[i]) {\n                isOpeningBracketsCorrect\
    \ = false;\n                break;\n            }\n        }\n        return isOpeningBracketsCorrect;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993e063b0f23424ab29121daab7addf2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <993e063b0f23424ab29121daab7addf2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        if (brackets == null) return false;\n\
    \        Stack<char> stack = new Stack<char>();\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                stack.Push(c);\n           \
    \ } else if (c == '>') {\n                if (stack.Count != 0) return false;\n\
    \                char opening = stack.Pop();\n                if (opening != '<')\
    \ return false;\n            } else {\n                return false;\n       \
    \     }\n        }\n        return stack.Count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea9c82af4e8f4af2882414c47661c303>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea9c82af4e8f4af2882414c47661c303>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n            }\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5f6de7b64444d59ba0ab755a806451d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                for (int\
    \ i = 0; i < brackets.Length; i++) {\n                    if (brackets[i] == '>')\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dc6290be86f42ecb210cdc33954ba16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800004
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        Stack<char> stack = new Stack<char>();\n\
    \        foreach (char c in brackets) {\n            if (c == '<') {\n       \
    \         stack.Push(c);\n            } else if (c == '>') {\n               \
    \ if (stack.Count == 0) {\n                    return false;\n               \
    \ }\n                char top = stack.Pop();\n                if (top != c) {\n\
    \                    return false;\n                }\n            } else {\n\
    \                if (stack.Count != 0) {\n                    return false;\n\
    \                }\n                stack.Push(c);\n            }\n        }\n\
    \        return stack.Count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f822d421bd6434fa8e346e70426bd68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7f822d421bd6434fa8e346e70426bd68>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        string closingBrackets = brackets.Replace(\"\
    <\", \"\").Replace(\">\", \"\");\n        bool result = true;\n        for (int\
    \ i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e663ce5c80f4c6cbca83c74729c94c1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824208
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        bool result = true;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                if (brackets.IndexOf('>',\
    \ brackets.IndexOf(c, 1) + 1) < 0) {\n                    result = false;\n  \
    \                  break;\n                }\n            }\n        }\n     \
    \   return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eca9313d488e4148a9676659d28de9fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eca9313d488e4148a9676659d28de9fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824210
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        string openingBrackets = \"\"\
    ;\n        string closingBrackets = \"\";\n        foreach (char c in brackets)\
    \ {\n            if (c == '<') {\n                openingBrackets += c;\n    \
    \        } else if (c == '>') {\n                closingBrackets += c;\n     \
    \       }\n        }\n        if (openingBrackets.Length != closingBrackets.Length)\
    \ {\n            return false;\n        }\n        bool result = true;\n     \
    \   for (int i = 0; i < openingBrackets.Length; i++) {\n            if (openingBrackets[i]\
    \ != closingBrackets[i]) {\n                result = false;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7bf9df0f70934882848727a0bfa3adbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824207

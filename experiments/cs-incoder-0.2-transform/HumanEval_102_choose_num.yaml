name: HumanEval_102_choose_num
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // >>> ChooseNum((12L), (15L))\n    // (14L)\n    // >>> ChooseNum((13L),\
  \ (12L))\n    // (-1L)\n    public static long ChooseNum(long x, long y) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ChooseNum((12L),\
  \ (15L)) == (14L));\n    Debug.Assert(ChooseNum((13L), (12L)) == (-1L));\n    Debug.Assert(ChooseNum((33L),\
  \ (12354L)) == (12354L));\n    Debug.Assert(ChooseNum((5234L), (5233L)) == (-1L));\n\
  \    Debug.Assert(ChooseNum((6L), (29L)) == (28L));\n    Debug.Assert(ChooseNum((27L),\
  \ (10L)) == (-1L));\n    Debug.Assert(ChooseNum((7L), (7L)) == (-1L));\n    Debug.Assert(ChooseNum((546L),\
  \ (546L)) == (546L));\n    }\n\n}\n"
completions: ["        long result = -1;\n        if (x >= y) {\n            while\
    \ (x < y) {\n                long mid = (x + y) / 2;\n                if (mid\
    \ % 2 == 0) {\n                    result = mid;\n                    break;\n\
    \                }\n                else {\n                    if (mid > y) {\n\
    \                        y = mid;\n                    }\n                   \
    \ else {\n                        x = mid;\n                    }\n          \
    \      }\n            }\n        }\n        else {\n            while (y < x)\
    \ {\n                long mid = (x + y) / 2;\n                if (mid % 2 == 0)\
    \ {\n                    result = mid;\n                    break;\n         \
    \       }\n                else {\n                    if (mid < x) {\n      \
    \                  x = mid;\n                    }\n                    else {\n\
    \                        y = mid;\n                    }\n                }\n\
    \            }\n        }\n        return result;", "        long even = x & 1;\n\
    \        long odd = x >> 1;\n        long evenodd = even + odd;\n        long\
    \ result = evenodd >= y ? evenodd : -1;\n        return result;", "        long\
    \ even = x | y;\n        long odd = x ^ y;\n        long biggest = even;\n   \
    \     if (odd > biggest) {\n            biggest = odd;\n        }\n        return\
    \ biggest;", "        long even = x;\n        long odd = y;\n        long biggest\
    \ = -1;\n        while (even < odd) {\n            long mid = (even + odd) / 2;\n\
    \            if (mid % 2 == 0) {\n                even = mid;\n            } else\
    \ {\n                odd = mid;\n            }\n            if (even > biggest)\
    \ {\n                biggest = even;\n            }\n            if (odd > biggest)\
    \ {\n                biggest = odd;\n            }\n        }\n        return\
    \ biggest;", "        long z = (long)Math.Max(x, y);\n        long a = z / 2;\n\
    \        long b = z % 2;\n        long c = a / 2;\n        long d = a % 2;\n \
    \       long e = b / 2;\n        long f = b % 2;\n        long g = c / 2;\n  \
    \      long h = c % 2;\n        long i = d / 2;\n        long j = d % 2;\n   \
    \     long k = e / 2;\n        long l = e % 2;\n        long m = f / 2;\n    \
    \    long n = f % 2;\n        long o = g / 2;\n        long p = g % 2;\n     \
    \   long q = h / 2;\n        long r = h % 2;\n        long s = i / 2;\n      \
    \  long t = i % 2;\n        long u = j / 2;\n        long v = j % 2;\n       \
    \ long w = k / 2;\n        long x = k % 2;\n        long y = l / 2;\n        long\
    \ z = l % 2;\n        long aa = m / 2;\n        long ab = m % 2;\n        long\
    \ ac = n / 2;\n        long ad = n % 2;\n        long ae = o / 2;\n        long\
    \ af = o % 2;\n        long ag = p / 2;\n        long ah = p % 2;\n        long\
    \ ai = q / 2;\n        long aj = q % 2;\n        long ak = s / 2;\n        long\
    \ al = s / 2;\n        long am = t / 2;\n        long an = t % 2;\n        long\
    \ ao = u / 2;\n        long ap = u % 2;\n        long aq = v / 2;\n        long\
    \ ar = v % 2;\n        long as = w / 2;\n        long at = w % 2;\n        long\
    \ au = aa / 2;\n        long av = aa % 2;\n        long aw = ab / 2;\n       \
    \ long ax = ab % 2;\n        long ay = ax / 2;\n        long az = ax % 2;\n  \
    \      long ax = az / 2;\n        long ay = az % 2;\n        long az = ay / 2;\n\
    \        long ay = ay % 2;\n        long az = az / 2;\n        long ay = az %\
    \ 2;\n        long az = az / 2;\n        long ay = az % 2;\n        long az =\
    \ az / 2;\n        long ay = az % 2;\n        long az = az / 2;\n        long\
    \ ay = az % 2;\n        long az = az / 2;\n        long ay = az % 2;\n       \
    \ long az = az / 2;", "        long z = (long)Math.Max(x, y);\n        long a\
    \ = z;\n        long b = z;\n        long c = z;\n        long d = z;\n      \
    \  long e = z;\n        long f = z;\n        long g = z;\n        long h = z;\n\
    \        long i = z;\n        long j = z;\n        long k = z;\n        long l\
    \ = z;\n        long m = z;\n        long n = z;\n        long o = z;\n      \
    \  long p = z;\n        long q = z;\n        long r = z;\n        long s = z;\n\
    \        long t = z;\n        long u = z;\n        long v = z;\n        long w\
    \ = z;\n        long x = z;\n        long y = z;\n        long z = z;\n      \
    \  long a = z;\n        long b = z;\n        long c = z;\n        long d = z;\n\
    \        long e = z;\n        long f = z;\n        long g = z;\n        long h\
    \ = z;\n        long i = z;\n        long j = z;\n        long k = z;\n      \
    \  long l = z;\n        long m = z;\n        long n = z;\n        long o = z;\n\
    \        long p = z;\n        long q = z;\n        long r = z;\n        long s\
    \ = z;\n        long t = z;\n        long u = z;\n        long v = z;\n      \
    \  long w = z;\n        long x = z;\n        long y = z;\n        long z = z;\n\
    \        long a = z;\n        long b = z;\n        long c = z;\n        long d\
    \ = z;\n        long e = z;\n        long f = z;\n        long g = z;\n      \
    \  long h = z;\n        long i = z;\n        long j = z;\n        long k = z;\n\
    \        long l = z;\n        long m = z;\n        long n = z;\n        long o\
    \ = z;\n        long p = z;\n        long q = z;\n        long r = z;\n      \
    \  long s = z;\n        long t = z;\n        long u = z;\n        long v = z;\n\
    \        long w = z;\n        long x = z;\n        long y = z;\n        long z\
    \ = z;\n        long a = z;\n        long b = z;\n        long c = z;\n      \
    \  long d = z;\n        long e = z;\n        long f = z;\n        long g = z;\n\
    \        long h = z;\n        long i = z;\n        long j = z;\n        long k\
    \ = z;\n        long l = z;\n        long m = z;\n        long n = z;\n      \
    \  long o = z;\n        long p = z;\n        long q = z;\n        long r = z;\n\
    \        long s = z;\n        long t = z;\n        long u = z;\n        long v\
    \ = z;\n        long ", "        long even = x & 1;\n        long odd = x >> 1;\n\
    \        long evenodd = even + odd;\n        if (evenodd > y) {\n            return\
    \ -1;\n        }\n        if (evenodd < y) {\n            return evenodd;\n  \
    \      }\n        long evenodd_1 = evenodd >> 1;\n        if (evenodd_1 > y) {\n\
    \            return evenodd_1;\n        }\n        if (evenodd_1 < y) {\n    \
    \        return evenodd_1 + y;\n        }\n        long evenodd_2 = evenodd >>\
    \ 2;\n        if (evenodd_2 > y) {\n            return evenodd_2;\n        }\n\
    \        if (evenodd_2 < y) {\n            return evenodd_2 + y;\n        }\n\
    \        long evenodd_3 = evenodd >> 3;\n        if (evenodd_3 > y) {\n      \
    \      return evenodd_3;\n        }\n        if (evenodd_3 < y) {\n          \
    \  return evenodd_3 + y;\n        }\n        long evenodd_4 = evenodd >> 4;\n\
    \        if (evenodd_4 > y) {\n            return evenodd_4;\n        }\n    \
    \    if (evenodd_4 < y) {\n            return evenodd_4 + y;\n        }\n    \
    \    long evenodd_5 = evenodd >> 5;\n        if (evenodd_5 > y) {\n          \
    \  return evenodd_5;\n        }\n        if (evenodd_5 < y) {\n            return\
    \ evenodd_5 + y;\n        }\n        long evenodd_6 = evenodd >> 6;\n        if\
    \ (evenodd_6 > y) {\n            return evenodd_6;\n        }\n        if (evenodd_6\
    \ < y) {\n            return evenodd_6 + y;\n        }\n        long evenodd_7\
    \ = evenodd >> 7;\n        if (evenodd_7 > y) {\n            return evenodd_7;\n\
    \        }\n        if (evenodd_7 < y) {\n            return evenodd_7 + y;\n\
    \        }\n        long evenodd_8 = evenodd >> 8;\n        if (evenodd_8 > y)\
    \ {\n            return evenodd_8;\n        }\n        if (evenodd_8 < y) {\n\
    \            return evenodd_8 + y;\n        }\n        long evenodd_9 = evenodd\
    \ >> 9;\n        if (evenodd_9 > y) {\n            return evenodd_9;\n       \
    \ }\n        if (evenodd_9 < y) {\n            return evenodd_9 + y;\n       \
    \ }\n        long evenodd_10 = evenodd >> 10;\n        if (evenodd_10 > y) {\n\
    \            return evenodd_10;\n        }\n        if (evenodd_10 < y) {\n  \
    \          return evenodd_10 + y;\n        }\n        long evenodd_11 = evenodd\
    \ >> 11;\n        if (evenodd_11 > y) {\n            return ", "        long even\
    \ = x & 1;\n        long odd = x >> 1;\n        long evenodd = even | odd;\n \
    \       long max = Math.Max(even, odd);\n        long min = Math.Min(even, odd);\n\
    \        long range = (max - min) + 1;\n        long result = evenodd % range;\n\
    \        if (result > range)\n            return -1;\n        return result;",
  "        long result = -1;\n        long xMinusY = x - y;\n        long yMinusX\
    \ = y - x;\n        long xMinusXMinusY = xMinusY - xMinusY;\n        long xMinusXMinusXMinusY\
    \ = xMinusXMinusY - xMinusXMinusY;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusY =\
    \ xMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusY;\n       \
    \ long xMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinus",
  "        long max = 0;\n        long min = 0;\n        long mid = 0;\n        long\
    \ even = 0;\n        long odd = 0;\n        long xEven = x;\n        long xOdd\
    \ = x;\n        long yEven = y;\n        long yOdd = y;\n        long xEvenEven\
    \ = x;\n        long xOddOdd = x;\n        long yEvenEven = y;\n        long yOddOdd\
    \ = y;\n        long xEvenOdd = x;\n        long xOddEven = x;\n        long yEvenEven\
    \ = y;\n        long yOddEven = y;\n        long xEvenEvenEven = x;\n        long\
    \ xOddOddOdd = x;\n        long yEvenEvenEven = y;\n        long yOddOddOdd =\
    \ y;\n        long xEvenOddEven = x;\n        long xOddEvenOdd = x;\n        long\
    \ yEvenEvenEven = y;\n        long yOddEvenOdd = y;\n        long xEvenEvenOdd\
    \ = x;\n        long xOddOddEven = x;\n        long yEvenEvenEven = y;\n     \
    \   long yOddEvenEven = y;\n        long xEvenOddOdd = x;\n        long xOddEvenEven\
    \ = x;\n        long yEvenOddEven = y;\n        long yOddOddEven = y;\n      \
    \  long xEvenEvenEven = x;\n        long xOddOddOdd = x;\n        long yEvenEvenEven\
    \ = y;\n        long yOddEvenOdd = y;\n        long xEvenOddEven = x;\n      \
    \  long xOddEvenOdd = x;\n        long yEvenEvenEven = y;\n        long yOddOddEven\
    \ = y;\n        long xEvenEvenEven = x;\n        long xOddOddOdd = x;\n      \
    \  long yEvenEvenEven = y;\n        long yOddEvenEven = y;\n        long xEvenOddOdd\
    \ = x;\n        long xOddEvenEven = x;\n        long yEvenEvenEven = y;\n    \
    \    long yOddOddEven = y;\n        long xEvenEvenEven = x;\n        long xOddOddOdd\
    \ = x;\n        long yEvenEvenEven = y;\n        long yOddEvenEven = y;\n    \
    \    long xEvenOddEven = x;\n        long xOddEvenOd", "        long even = x;\n\
    \        long odd = y;\n        long biggest = -1;\n        while (even < odd)\
    \ {\n            long mid = (even + odd) / 2;\n            if (mid % 2 == 0) {\n\
    \                even = mid;\n            } else {\n                odd = mid;\n\
    \            }\n            if (even > biggest) {\n                biggest = even;\n\
    \            }\n        }\n        return biggest;", "        long even = x %\
    \ 2 == 0 ? x : x + 1;\n        long odd = y % 2 == 0 ? y : y + 1;\n        long\
    \ biggest = even;\n        long smallest = odd;\n        while (even < odd) {\n\
    \            biggest = even;\n            smallest = odd;\n            if (even\
    \ > odd) {\n                biggest = even + 1;\n                smallest = odd\
    \ - 1;\n            }\n            even = biggest / 2;\n            odd = smallest\
    \ / 2;\n        }\n        return biggest;", "        long result = -1;\n    \
    \    long xx = x;\n        long yy = y;\n        long xy = x * y;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long ", "        long xx = x;\n \
    \       long yy = y;\n        long xy = x * y;\n        long xx = xx * xx;\n \
    \       long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx *\
    \ xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx\
    \ = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n       \
    \ long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n\
    \        long xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy\
    \ * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n        long\
    \ yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n    \
    \    long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx * xx;\n\
    \        long yy = yy * yy;\n        long xy = xy * xy;\n        long xx = xx\
    \ * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n        long\
    \ xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n    \
    \    long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy * xy;\n\
    \        long xx = xx * xx;\n        long yy = yy * yy;\n        long xy = xy\
    \ * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n        long\
    \ xy = xy * xy;\n        long xx = xx * xx;\n        long yy = yy * yy;\n    \
    \    long xy = xy * xy;\n        long xx = xx * xx", "        long xMinusY = x\
    \ - y;\n        long yMinusX = y - x;\n        long xMinusXMinusY = xMinusY -\
    \ xMinusY;\n        long yMinusYMinusX = yMinusX - yMinusX;\n        long xMinusXMinusXMinusY\
    \ = xMinusXMinusY - xMinusXMinusY;\n        long yMinusYMinusYMinusX = yMinusYMinusX\
    \ - yMinusYMinusX;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusY = yMinusYMinusYMinusX\
    \ - yMinusYMinusYMinusX;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusXMinusY =\
    \ yMinusYMinusYMinusXMinusY - yMinusYMinusYMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusXMinusXMinusXMinusXMinusY = yMinusYMinusYMinusXMinusXMinusXMinusXMinusY\
    \ - yMinusYMinusYMinusXMinusXMinusXMinusXMinusY;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMin", "        long even = x % 2 == 0 ? x : x + 1;\n\
    \        long odd = y % 2 == 0 ? y : y + 1;\n        long biggest = even;\n  \
    \      long smallest = odd;\n        bool evenInRange = true;\n        bool oddInRange\
    \ = true;\n        while (even < odd) {\n            if (even % 2 == 0) {\n  \
    \              evenInRange = false;\n            }\n            if (odd % 2 ==\
    \ 0) {\n                oddInRange = false;\n            }\n            even =\
    \ even + 1;\n            odd = odd + 1;\n        }\n        if (evenInRange &&\
    \ oddInRange) {\n            biggest = even;\n            smallest = odd;\n  \
    \      }\n        if (even > odd) {\n            biggest = even;\n           \
    \ smallest = odd;\n        }\n        if (biggest > x || smallest < y) {\n   \
    \         return -1;\n        }\n        return biggest;", "        long xx =\
    \ x;\n        long yy = y;\n        long xy = x * y;\n        long xx = xx * xx\
    \ + xx;\n        long yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n  \
    \      long xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n        long\
    \ xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n        long yy = yy *\
    \ yy + yy;\n        long xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n\
    \        long yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n        long\
    \ xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n        long xy = xy *\
    \ xy + xy;\n        long xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n\
    \        long xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n        long\
    \ yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n        long xx = xx *\
    \ xx + xx;\n        long yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n\
    \        long xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n        long\
    \ xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n        long yy = yy *\
    \ yy + yy;\n        long xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n\
    \        long yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n        long\
    \ xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n        long xy = xy *\
    \ xy + xy;\n        long xx = xx * xx + xx;\n        long yy = yy * yy + yy;\n\
    \        long xy = xy * xy + xy;\n        long xx = xx * xx + xx;\n        long\
    \ yy = yy * yy + yy;\n        long xy = xy * xy + xy;\n        long xx = xx *\
    \ xx + xx;\n        long yy = yy * yy + yy;\n        long xy = xy * xy + xy",
  "        long even = x & 1;\n        long odd = x >> 1;\n        long evenodd =\
    \ even + odd;\n        if (evenodd > y) {\n            return -1;\n        }\n\
    \        if (evenodd < y) {\n            return evenodd;\n        }\n        long\
    \ eveneven = even + even;\n        if (eveneven > y) {\n            return -1;\n\
    \        }\n        if (eveneven < y) {\n            return eveneven;\n      \
    \  }\n        long evenoddodd = even + odd;\n        if (evenoddodd > y) {\n \
    \           return -1;\n        }\n        if (evenoddodd < y) {\n           \
    \ return evenoddodd;\n        }\n        long eveneveneven = even + even;\n  \
    \      if (eveneveneven > y) {\n            return -1;\n        }\n        if\
    \ (eveneveneven < y) {\n            return eveneveneven;\n        }\n        long\
    \ evenevenoddodd = even + odd;\n        if (evenevenoddodd > y) {\n          \
    \  return -1;\n        }\n        if (evenevenoddodd < y) {\n            return\
    \ evenevenoddodd;\n        }\n        long eveneveneveneven = even + even;\n \
    \       if (eveneveneveneven > y) {\n            return -1;\n        }\n     \
    \   if (eveneveneveneven < y) {\n            return eveneveneveneven;\n      \
    \  }\n        long evenevenevenoddodd = even + odd;\n        if (evenevenevenoddodd\
    \ > y) {\n            return -1;\n        }\n        if (evenevenevenoddodd <\
    \ y) {\n            return evenevenevenoddodd;\n        }\n        long eveneveneveneveneven\
    \ = even + even;\n        if (eveneveneveneveneven > y) {\n            return\
    \ -1;\n        }\n        if (eveneveneveneveneven < y) {\n            return\
    \ eveneveneveneveneven;\n        }\n        long evenevenevenevenoddodd = even\
    \ + odd;\n        if (evenevenevenevenoddodd > y) {\n            return -1;\n\
    \        }\n        if (evenevenevenevenoddodd < y) {\n            return evenevenevenevenoddodd;\n\
    \        }\n        long eveneveneveneveneveneven = even + even;\n        if (eveneveneveneveneveneven\
    \ > y) {\n            return -1;\n        }\n        if (eveneveneveneveneveneven\
    \ < y) {\n            return eveneveneveneveneven;\n        }\n        long evenevenevenevenevenoddodd\
    \ = even + odd;\n        if (evenevenevenevenevenoddodd > y) {\n            return\
    \ -1;\n        }\n        if (evenevenevenevenevenoddodd < y) {\n            return\
    \ evenevenevenevenoddodd;\n        }\n        long eveneven", "        long xMinusY\
    \ = x - y;\n        long yMinusX = y - x;\n        long xMinusXMinusY = xMinusY\
    \ - xMinusY;\n        long yMinusYMinusX = yMinusX - yMinusX;\n        long xMinusXMinusXMinusY\
    \ = xMinusXMinusY - xMinusXMinusY;\n        long yMinusYMinusYMinusX = yMinusYMinusX\
    \ - yMinusYMinusX;\n        long xMinusXMinusXMinusXMinusY = xMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusY;\n        long yMinusYMinusYMinusXMinusY = yMinusYMinusYMinusX\
    \ - yMinusYMinusYMinusX;\n        long xMinusXMinusXMinusXMinusXMinusY = xMinusXMinusXMinusXMinusY\
    \ - xMinusXMinusXMinusXMinusY;\n        long yMinusYMinusYMinusYMinusXMinusY =\
    \ yMinusYMinusYMinusYMinusX - yMinusYMinusYMinusYMinusX;\n        long xMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusY;\n     \
    \   long yMinusYMinusYMinusYMinusYMinusXMinusY = yMinusYMinusYMinusYMinusYMinusX\
    \ - yMinusYMinusYMinusYMinusYMinusX;\n        long xMinusXMinusXMinusXMinusXMinusXMinusXMinusY\
    \ = xMinusXMinusXMinusXMinusXMinusXMinusY - xMinusXMinusXMinusXMinusXMinusXMinusY;\n\
    \        long yMinusYMinusYMinusYMinusYMinusYMinusXMinusY = yMinusYMinusYMinusYMinusYMinusYMinusX\
    \ - yMinusYMin", "        long even = x % 2 == 0 ? x : x - 1;\n        long odd\
    \ = y % 2 == 0 ? y : y - 1;\n        long biggest = even;\n        long smallest\
    \ = odd;\n        bool evenFound = false;\n        bool oddFound = false;\n  \
    \      while (even < odd) {\n            if (even % 2 == 0) {\n              \
    \  evenFound = true;\n                biggest = even;\n            } else {\n\
    \                even = even + 1;\n            }\n            if (odd % 2 == 0)\
    \ {\n                oddFound = true;\n                smallest = odd;\n     \
    \       } else {\n                odd = odd + 1;\n            }\n        }\n \
    \       if (evenFound && oddFound) {\n            return biggest;\n        } else\
    \ if (evenFound) {\n            return -1;\n        } else if (oddFound) {\n \
    \           return -1;\n        } else {\n            return -1;\n        }"]
stop_tokens:
- "\n    }\n"

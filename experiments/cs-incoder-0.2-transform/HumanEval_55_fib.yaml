name: HumanEval_55_fib
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return n-th Fibonacci number.\n    // >>> Fib((10L))\n    //\
  \ (55L)\n    // >>> Fib((1L))\n    // (1L)\n    // >>> Fib((8L))\n    // (21L)\n\
  \    public static long Fib(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
  \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
  \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L)) ==\
  \ (144L));\n    }\n\n}\n"
completions: ["        long a = 1;\n        long b = 1;\n        long c = 1;\n   \
    \     long d = 1;\n        long e = 1;\n        long f = 1;\n        long g =\
    \ 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long\
    \ k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n    \
    \    long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c\
    \ = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n      \
    \  long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n      \
    \  long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n\
    \        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y\
    \ = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n      \
    \  long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long ", "        if (n <= 1)\n            return n;\n        else\n       \
    \     return Fib(n-1) + Fib(n-2);", "        long a = 1;\n        long b = 1;\n\
    \        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n      \
    \  long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n\
    \        long n = 0;\n        long o = 0;\n        long p = 0;\n        long q\
    \ = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n      \
    \  long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long A = 0;\n        long B\
    \ = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n      \
    \  long F = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n\
    \        long J = 0;\n        long K = 0;\n        long L = 0;\n        long M\
    \ = 0;\n        long N = 0;\n        long O = 0;\n        long P = 0;\n      \
    \  long Q = 0;\n        long R = 0;\n        long S = 0;\n        long T = 0;\n\
    \        long U = 0;\n        long V = 0;\n        long W = 0;\n        long X\
    \ = 0;\n        long Y = 0;\n        long Z = 0;\n        long AA = 0;\n     \
    \   long BB = 0;\n        long CC = 0;\n        long DD = 0;\n        long EE\
    \ = 0;\n        long FF = 0;\n        long GG = 0;\n        long HH = 0;\n   \
    \     long II = 0;\n        long JJ = 0;\n        long KK = 0;\n        long LL\
    \ = 0;\n        long MM = 0;\n        long NN = 0;\n        long OO = 0;\n   \
    \     long PP = 0;\n        long QQ = 0;\n        long RR = 0;\n        long SS\
    \ = 0;\n        long TT = 0;\n        long UU = 0;\n        long VV = 0;\n   \
    \     long WW = 0;\n        long XX = 0;\n        long YY = 0;\n        long ZZ\
    \ = 0;\n        long AAA = 0;\n        long BBB = 0;\n        long CCC = 0;\n\
    \        long DDD = 0;\n        long EEE = 0;\n        long FFF = 0;\n       \
    \ long GGG = 0;\n        long HHH = 0;\n        long III = 0;\n        long JJJ\
    \ = 0;\n        long KKK = 0;\n        long LLL = 0;\n        long MMM = 0;\n\
    \        long NNN = 0;\n        long OOO = 0;\n        long PPP = 0;\n       \
    \ long QQQ = 0;\n        long RRR = 0;\n        long SSS = 0;\n        long TTT\
    \ = 0;\n        long UUU = 0;\n", "        if (n == 0 || n == 1) {\n         \
    \   return n;\n        }\n        return Fib(n-1) + Fib(n-2);", "        if (n\
    \ == 0) return 0;\n        if (n == 1) return 1;\n        return Fib(n-1) + Fib(n-2);",
  "        if (n < 2) return 1;\n        if (n < 5) return Fib(n - 1) + Fib(n - 2);\n\
    \        if (n < 20) return Fib(n - 5) + Fib(n - 10);\n        if (n < 100) return\
    \ Fib(n - 20) + Fib(n - 50);\n        if (n < 500) return Fib(n - 100) + Fib(n\
    \ - 200);\n        if (n < 1000) return Fib(n - 500) + Fib(n - 1000);\n      \
    \  if (n < 5000) return Fib(n - 1000) + Fib(n - 5000);\n        if (n < 10000)\
    \ return Fib(n - 5000) + Fib(n - 10000);\n        if (n < 50000) return Fib(n\
    \ - 10000) + Fib(n - 50000);\n        if (n < 100000) return Fib(n - 50000) +\
    \ Fib(n - 100000);\n        if (n < 500000) return Fib(n - 100000) + Fib(n - 500000);\n\
    \        if (n < 1000000) return Fib(n - 500000) + Fib(n - 1000000);\n       \
    \ if (n < 5000000) return Fib(n - 1000000) + Fib(n - 5000000);\n        if (n\
    \ < 100000000) return Fib(n - 5000000) + Fib(n - 100000000);\n        if (n <\
    \ 500000000) return Fib(n - 100000000) + Fib(n - 500000000);\n        if (n <\
    \ 1000000000) return Fib(n - 500000000) + Fib(n - 1000000000);\n        if (n\
    \ < 5000000000) return Fib(n - 1000000000) + Fib(n - 5000000000);\n        if\
    \ (n < 10000000000) return Fib(n - 5000000000) + Fib(n - 10000000000);\n     \
    \   if (n < 50000000000) return Fib(n - 10000000000) + Fib(n - 50000000000);\n\
    \        if (n < 100000000000) return Fib(n - 50000000000) + Fib(n - 100000000000);\n\
    \        if (n < 500000000000) return Fib(n - 100000000000) + Fib(n - 500000000000);\n\
    \        if (n < 1000000000000) return Fib(n - 500000000000) + Fib(n - 1000000000000);\n\
    \        if (n < 5000000000000) return Fib(n - 1000000000000) + Fib(n - 5000000000000);\n\
    \        if (n < 10000000000000) return Fib(n - 5000000000000) + Fib(n - 10000000000000);\n\
    \        if (n < 50000000000000) return Fib(n - 10000000000000) + Fib(n - 50000000000000);\n\
    \        if (n < 100000000000000) return Fib(n - 50000000000000) + Fib(n - 100000000000000);\n\
    \        if (n < 500000000000000) return Fib(n - 100000000000000) + Fib(n - 500000000000000);\n\
    \        if (n < 10000000000000000) return Fib(n - 500000000000000) + Fib(n -\
    \ 10000000000000000);\n        if (n < 5000000000000000) return Fib(n - 100000000000000000)\
    \ + Fib(n - 5000000000000000);\n", "        if (n == 0 || n == 1)\n          \
    \  return n;\n        return Fib(n-1) + Fib(n-2);", "        long a = 0, b = 1,\
    \ c;\n        long result = 1;\n        while (n > 1) {\n            c = a + b;\n\
    \            a = b;\n            b = c;\n            n -= 1;\n            result\
    \ *= c;\n        }\n        return result;", "        if (n <= 1)\n          \
    \  return n;\n        return Fib(n-1) + Fib(n-2);", "        if (n <= 1L) {\n\
    \            return n;\n        }\n        long a = Fib((n - 1L));\n        long\
    \ b = Fib((n - 2L));\n        return a + b;", "        long a = 0, b = 1;\n  \
    \      for (long i = 0; i < n; i++) {\n            long c = a + b;\n         \
    \   a = b;\n            b = c;\n        }\n        return b;", "        if (n\
    \ == 0 || n == 1)\n            return n;\n        return Fib(n-1) + Fib(n-2);",
  "        if (n < 2) return n;\n        return Fib(n-2) + Fib(n-1);", "        if\
    \ (n == 0) return 0;\n        if (n == 1) return 1;\n        return Fib(n-1) +\
    \ Fib(n-2);", "        if (n == 0 || n == 1)\n            return n;\n        return\
    \ Fib(n-1) + Fib(n-2);", "        if (n <= 1) return n;\n        return Fib(n-1)\
    \ + Fib(n-2);", "        long a = 1;\n        long b = 1;\n        for (long i\
    \ = 0; i < n; i++) {\n            long c = a + b;\n            a = b;\n      \
    \      b = c;\n        }\n        return b;", "        if (n < 2) return n;\n\
    \        return Fib(n-2) + Fib(n-1);", "        if (n == 0) return 0;\n      \
    \  if (n == 1) return 1;\n        return Fib(n-1) + Fib(n-2);", "        if (n\
    \ < 2) return n;\n        return Fib(n-2) + Fib(n-1);"]
stop_tokens:
- "\n    }\n"

name: HumanEval_43_pairs_sum_to_zero
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n  \
  \  // it returns True if there are two distinct elements in the list that\n    //\
  \ sum to zero, and False otherwise.\n    // >>> PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)5L, (long)0L})))\n    // (false)\n    // >>>\
  \ PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L, (long)-2L, (long)1L})))\n\
  \    // (false)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)7L})))\n    // (false)\n    // >>> PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\n\
  \    // (true)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L})))\n\
  \    // (false)\n    public static bool PairsSumToZero(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)0L}))) == (false));\n\
  \    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)-2L, (long)1L}))) == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)7L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L})))\
  \ == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)3L, (long)2L, (long)30L}))) == (true));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)3L, (long)2L, (long)31L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)4L, (long)2L, (long)30L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)4L, (long)2L, (long)31L})))\
  \ == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        foreach (long i in l) {\n          \
    \  sum += i;\n        }\n        bool result = false;\n        if (sum == 0) {\n\
    \            result = true;\n        }\n        return result;", "        long\
    \ sum = 0;\n        foreach (long x in l)\n            sum += x;\n        if (sum\
    \ == 0)\n            return false;\n        long sum2 = 0;\n        foreach (long\
    \ x in l)\n            sum2 += x;\n        if (sum2 == 0)\n            return\
    \ false;\n        long sum3 = 0;\n        foreach (long x in l)\n            sum3\
    \ += x;\n        if (sum3 == 0)\n            return false;\n        long sum4\
    \ = 0;\n        foreach (long x in l)\n            sum4 += x;\n        if (sum4\
    \ == 0)\n            return false;\n        long sum5 = 0;\n        foreach (long\
    \ x in l)\n            sum5 += x;\n        if (sum5 == 0)\n            return\
    \ false;\n        long sum6 = 0;\n        foreach (long x in l)\n            sum6\
    \ += x;\n        if (sum6 == 0)\n            return false;\n        long sum7\
    \ = 0;\n        foreach (long x in l)\n            sum7 += x;\n        if (sum7\
    \ == 0)\n            return false;\n        long sum8 = 0;\n        foreach (long\
    \ x in l)\n            sum8 += x;\n        if (sum8 == 0)\n            return\
    \ false;\n        long sum9 = 0;\n        foreach (long x in l)\n            sum9\
    \ += x;\n        if (sum9 == 0)\n            return false;\n        long sum10\
    \ = 0;\n        foreach (long x in l)\n            sum10 += x;\n        if (sum10\
    \ == 0)\n            return false;\n        long sum11 = 0;\n        foreach (long\
    \ x in l)\n            sum11 += x;\n        if (sum11 == 0)\n            return\
    \ false;\n        long sum12 = 0;\n        foreach (long x in l)\n           \
    \ sum12 += x;\n        if (sum12 == 0)\n            return false;\n        long\
    \ sum13 = 0;\n        foreach (long x in l)\n            sum13 += x;\n       \
    \ if (sum13 == 0)\n            return false;\n        long sum14 = 0;\n      \
    \  foreach (long x in l)\n            sum14 += x;\n        if (sum14 == 0)\n \
    \           return false;\n        long sum15 = 0;\n        foreach (long x in\
    \ l)\n            sum15 += x;\n        if (sum15 == 0)\n            return false;\n\
    \        long sum16 = 0;\n        foreach (long x in l)\n            sum16 +=\
    \ x;\n        if (sum16 == 0)\n            return false;\n        long sum17 =\
    \ 0;\n        foreach (long x in l)\n            sum17 += x;\n        if (sum17\
    \ == 0)\n            return false;\n        long sum18 = 0;\n        foreach (long\
    \ x in l)\n            sum18 += x;\n        if (sum18 == 0)\n            return\
    \ false;\n        long sum19 = 0;\n        foreach (long x in l)\n           \
    \ sum19 += x;\n        if (sum19 == 0)\n            return false;\n        long\
    \ sum20 = 0;\n        foreach (long ", "        long sum = 0;\n        foreach\
    \ (long i in l) {\n            sum += i;\n        }\n        bool result = false;\n\
    \        if (sum == 0) {\n            result = true;\n        }\n        return\
    \ result;", "        long sum = 0;\n        foreach (long x in l) {\n        \
    \    sum += x;\n        }\n        bool result = false;\n        if (sum == 0)\
    \ {\n            result = true;\n        }\n        return result;", "       \
    \ long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n    \
    \    }\n        if (sum == 0) {\n            return false;\n        }\n      \
    \  long sum2 = sum;\n        foreach (long i in l) {\n            sum2 -= i;\n\
    \            if (sum2 == 0) {\n                return true;\n            }\n \
    \       }\n        return false;", "        long sum = 0;\n        foreach (long\
    \ i in l) {\n            sum += i;\n        }\n        if (sum == 0) {\n     \
    \       return false;\n        }\n        long sum2 = 0;\n        foreach (long\
    \ i in l) {\n            sum2 += i;\n        }\n        if (sum2 == 0) {\n   \
    \         return false;\n        }\n        long sum3 = 0;\n        foreach (long\
    \ i in l) {\n            sum3 += i;\n        }\n        if (sum3 == 0) {\n   \
    \         return false;\n        }\n        long sum4 = 0;\n        foreach (long\
    \ i in l) {\n            sum4 += i;\n        }\n        if (sum4 == 0) {\n   \
    \         return false;\n        }\n        long sum5 = 0;\n        foreach (long\
    \ i in l) {\n            sum5 += i;\n        }\n        if (sum5 == 0) {\n   \
    \         return false;\n        }\n        long sum6 = 0;\n        foreach (long\
    \ i in l) {\n            sum6 += i;\n        }\n        if (sum6 == 0) {\n   \
    \         return false;\n        }\n        return true;", "        long sum =\
    \ 0;\n        foreach (long x in l) {\n            sum += x;\n        }\n    \
    \    long zero = 0;\n        foreach (long x in l) {\n            zero += x;\n\
    \        }\n        return sum == zero;", "        long sum = 0;\n        foreach\
    \ (long i in l) {\n            sum += i;\n        }\n        if (sum == 0) {\n\
    \            return false;\n        }\n        long sum2 = 0;\n        foreach\
    \ (long i in l) {\n            sum2 += i;\n        }\n        if (sum2 == 0) {\n\
    \            return false;\n        }\n        long sum3 = 0;\n        foreach\
    \ (long i in l) {\n            sum3 += i;\n        }\n        if (sum3 == 0) {\n\
    \            return false;\n        }\n        long sum4 = 0;\n        foreach\
    \ (long i in l) {\n            sum4 += i;\n        }\n        if (sum4 == 0) {\n\
    \            return false;\n        }\n        return true;", "        long sum\
    \ = 0;\n        foreach (long x in l)\n            sum += x;\n        long zero\
    \ = 0;\n        foreach (long x in l)\n            zero += x;\n        return\
    \ sum == zero;", "        long sum = 0;\n        foreach (long x in l) {\n   \
    \         sum += x;\n        }\n        if (sum == 0) {\n            return false;\n\
    \        }\n        long max = 0;\n        foreach (long x in l) {\n         \
    \   if (x > max) {\n                max = x;\n            }\n        }\n     \
    \   long min = l.Min();\n        long max = l.Max();\n        long mid = max /\
    \ 2;\n        long sum1 = 0, sum2 = 0;\n        foreach (long x in l) {\n    \
    \        if (x < mid) {\n                sum1 += x;\n            } else {\n  \
    \              sum2 += x;\n            }\n        }\n        if (sum1 == sum2)\
    \ {\n            return false;\n        }\n        if (sum1 > sum2) {\n      \
    \      return true;\n        }\n        return false;", "        long sum = 0;\n\
    \        foreach (long x in l) {\n            sum += x;\n        }\n        if\
    \ (sum == 0) {\n            return false;\n        }\n        List<long> pairs\
    \ = new List<long>();\n        foreach (long x in l) {\n            long y = x\
    \ - sum;\n            if (y != 0) {\n                pairs.Add(x);\n         \
    \       pairs.Add(y);\n            }\n        }\n        if (pairs.Count != 2)\
    \ {\n            return false;\n        }\n        long a = pairs[0];\n      \
    \  long b = pairs[1];\n        if (a == b) {\n            return false;\n    \
    \    }\n        long c = a + b;\n        if (c != 0) {\n            return false;\n\
    \        }\n        return true;", "        if (l.Count < 2)\n            return\
    \ false;\n        long sum = 0;\n        long lastSum = 0;\n        bool first\
    \ = true;\n        foreach (long i in l) {\n            if (first) {\n       \
    \         first = false;\n                sum = i;\n                lastSum =\
    \ i;\n            } else {\n                sum += i;\n                lastSum\
    \ = sum;\n            }\n            if (sum == 0)\n                return true;\n\
    \        }\n        return false;", "        long sum = 0;\n        foreach (var\
    \ i in l) {\n            sum += i;\n        }\n        return l.Distinct().Count()\
    \ == l.Count() && sum == 0;", "        if (l.Count < 2)\n            return false;\n\
    \        long sum = 0;\n        foreach (long x in l)\n            sum += x;\n\
    \        if (sum == 0)\n            return false;\n        long lastSum = sum;\n\
    \        foreach (long x in l)\n            sum += x;\n        if (sum != lastSum)\n\
    \            return false;\n        return true;", "        if (l.Count < 2) return\
    \ false;\n        long sum = 0;\n        long count = 0;\n        foreach (long\
    \ x in l) {\n            sum += x;\n            count++;\n        }\n        if\
    \ (count == 1) return false;\n        long x = 0;\n        long y = 0;\n     \
    \   bool found = false;\n        foreach (long x in l) {\n            y += x;\n\
    \            if (y == sum) {\n                found = true;\n                break;\n\
    \            }\n        }\n        return found;", "        long sum = 0;\n  \
    \      foreach (long i in l) {\n            sum += i;\n        }\n        if (sum\
    \ == 0) {\n            return false;\n        }\n        long sum2 = 0;\n    \
    \    foreach (long i in l) {\n            sum2 += i;\n        }\n        if (sum2\
    \ == 0) {\n            return false;\n        }\n        long sum3 = 0;\n    \
    \    foreach (long i in l) {\n            sum3 += i;\n        }\n        if (sum3\
    \ == 0) {\n            return false;\n        }\n        return true;", "    \
    \    long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n \
    \       }\n        if (sum == 0) {\n            return false;\n        }\n   \
    \     List<long> l2 = new List<long>();\n        foreach (long i in l) {\n   \
    \         l2.Add(i - sum);\n        }\n        if (l2.Count != 0) {\n        \
    \    return false;\n        }\n        return true;", "        long sum = 0;\n\
    \        foreach (long x in l)\n            sum += x;\n        if (sum == 0)\n\
    \            return false;\n        long sum2 = 0;\n        foreach (long x in\
    \ l)\n            sum2 += x;\n        return sum == sum2;", "        long sum\
    \ = 0;\n        foreach (long i in l) {\n            sum += i;\n        }\n  \
    \      if (sum == 0) {\n            return false;\n        }\n        long a =\
    \ 0, b = 0, c = 0, d = 0;\n        foreach (long i in l) {\n            if (i\
    \ % 2 == 0) {\n                a += i;\n            }\n            else {\n  \
    \              b += i;\n            }\n        }\n        c = a - b;\n       \
    \ if (c < 0) {\n            d = -b;\n        }\n        else {\n            d\
    \ = a;\n        }\n        if (d == 0) {\n            return false;\n        }\n\
    \        long e = 0;\n        foreach (long i in l) {\n            if (i % 2 ==\
    \ 0) {\n                e += i;\n            }\n            else {\n         \
    \       e -= i;\n            }\n        }\n        if (e == 0) {\n           \
    \ return false;\n        }\n        return true;", "        long sum = 0;\n  \
    \      foreach (long i in l) {\n            sum += i;\n        }\n        if (sum\
    \ == 0) {\n            return false;\n        }\n        long count = 0;\n   \
    \     foreach (long i in l) {\n            count += i;\n            if (count\
    \ != 0) {\n                return false;\n            }\n        }\n        return\
    \ true;"]
stop_tokens:
- "\n    }\n"

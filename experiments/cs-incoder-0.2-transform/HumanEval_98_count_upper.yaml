name: HumanEval_98_count_upper
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s, count the number of uppercase vowels in even\
  \ indices.\n    // For example:\n    // >>> CountUpper((\"aBCdEf\"))\n    // (1L)\n\
  \    // >>> CountUpper((\"abcdefg\"))\n    // (0L)\n    // >>> CountUpper((\"dBBE\"\
  ))\n    // (0L)\n    public static long CountUpper(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountUpper((\"\
  aBCdEf\")) == (1L));\n    Debug.Assert(CountUpper((\"abcdefg\")) == (0L));\n   \
  \ Debug.Assert(CountUpper((\"dBBE\")) == (0L));\n    Debug.Assert(CountUpper((\"\
  B\")) == (0L));\n    Debug.Assert(CountUpper((\"U\")) == (1L));\n    Debug.Assert(CountUpper((\"\
  \")) == (0L));\n    Debug.Assert(CountUpper((\"EEEE\")) == (2L));\n    }\n\n}\n"
completions: ["        long vowels = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                vowels += (s.ToCharArray()[i]\
    \ == 'A' || s.ToCharArray()[i] == 'E' || s.ToCharArray()[i] == 'I' || s.ToCharArray()[i]\
    \ == 'O' || s.ToCharArray()[i] == 'U');\n            }\n        }\n        return\
    \ vowels;", "        long vowels = 0;\n        foreach (char c in s) {\n     \
    \       if (char.IsUpper(c)) {\n                vowels++;\n                if\
    \ (c != 'A' && c != 'a') {\n                    vowels -= 2;\n               \
    \ }\n            }\n        }\n        return vowels;", "        long vowels =\
    \ 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0)\
    \ {\n                if (Char.IsUpper(s[i]))\n                    vowels++;\n\
    \            }\n        }\n        return vowels;", "        long vowels = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         vowels++;\n                if (c != 'A' && c != 'E' && c != 'I' && c\
    \ != 'O' && c != 'U') {\n                    vowels -= 2;\n                }\n\
    \            }\n        }\n        return vowels;", "        long vowels = 0;\n\
    \        foreach (char c in s) {\n            if (char.IsUpper(c)) {\n       \
    \         if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {\n  \
    \                  vowels++;\n                }\n            }\n        }\n  \
    \      return vowels;", "        long vowels = 0;\n        foreach (char c in\
    \ s) {\n            if (char.IsUpper(c)) {\n                if (c != 'A' && c\
    \ != 'E' && c != 'I' && c != 'O' && c != 'U') {\n                    vowels++;\n\
    \                }\n            }\n        }\n        return vowels;", "     \
    \   long count = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n                    count++;\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c !=\
    \ 'U')\n                    vowels++;\n            }\n        }\n        return\
    \ vowels;", "        long count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long vowels = 0;\n        foreach (char c in s) {\n            if (Char.IsUpper(c))\
    \ {\n                vowels++;\n                if (c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u') {\n                    vowels -= 1;\n                }\n\
    \            }\n        }\n        return vowels;", "        long vowels = 0;\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n\
    \                if (Char.IsUpper(s[i]))\n                    vowels++;\n    \
    \        }\n        }\n        return vowels;", "        long vowels = 0;\n  \
    \      for (int i = 0; i < s.Length; i++) {\n            if (i % 2 == 0) {\n \
    \               if (Char.IsUpper(s[i]))\n                    vowels++;\n     \
    \       }\n        }\n        return vowels;", "        long vowels = 0;\n   \
    \     foreach (char c in s) {\n            if (Char.IsUpper(c)) {\n          \
    \      if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n     \
    \               vowels++;\n                }\n            }\n        }\n     \
    \   return vowels;", "        long count = 0;\n        for (int i = 0; i < s.Length;\
    \ i++) {\n            if (i % 2 == 0) {\n                if (char.IsUpper(s[i]))\n\
    \                    count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c >= 'A' && c <= 'Z') {\n                    count +=\
    \ 1;\n                }\n            }\n        }\n        return count;", " \
    \       long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n     \
    \       if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n         \
    \           vowels++;\n            }\n        }\n        return vowels;", "  \
    \      long count = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'a') {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long vowels = 0;\n        foreach (char c in s) {\n            if (char.IsUpper(c))\
    \ {\n                if (c != 'A' && c != 'a') {\n                    vowels++;\n\
    \                }\n            }\n        }\n        return vowels;", "     \
    \   long vowels = 0;\n        for (int i = 0; i < s.Length; i++) {\n         \
    \   if (i % 2 == 0) {\n                if (Char.IsUpper(s[i]))\n             \
    \       vowels++;\n            }\n        }\n        return vowels;"]
stop_tokens:
- "\n    }\n"

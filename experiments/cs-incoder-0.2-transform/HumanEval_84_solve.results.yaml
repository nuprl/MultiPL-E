language: cs
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum = sum + N % 2;\n\
    \            N = N / 2;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n\
    \        {\n            result += binary[i];\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnb82b4h9.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpnb82b4h9.cs(31,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        result = Convert.ToString(sum);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804452
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     string binary = Convert.ToString(sum, 2);\n        string result = binary.PadLeft(sum.ToString().Length,\
    \ '0');\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpevxothhp.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0)\n        {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N /= 10;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string bin = Convert.ToString(sum);\n\
    \        string bin2 = \"\";\n        foreach (char c in binary)\n        {\n\
    \            bin2 = bin2 + Convert.ToString(c);\n        }\n        string bin3\
    \ = \"\";\n        foreach (char c in bin)\n        {\n            bin3 = bin3\
    \ + Convert.ToString(c);\n        }\n        string bin4 = \"\";\n        foreach\
    \ (char c in bin2)\n        {\n            bin4 = bin4 + Convert.ToString(c);\n\
    \        }\n        string bin5 = \"\";\n        foreach (char c in bin3)\n  \
    \      {\n            bin5 = bin5 + Convert.ToString(c);\n        }\n        string\
    \ bin6 = \"\";\n        foreach (char c in bin4)\n        {\n            bin6\
    \ = bin6 + Convert.ToString(c);\n        }\n        string bin7 = \"\";\n    \
    \    foreach (char c in bin5)\n        {\n            bin7 = bin7 + Convert.ToString(c);\n\
    \        }\n        string bin8 = \"\";\n        foreach (char c in bin6)\n  \
    \      {\n            bin8 = bin8 + Convert.ToString(c);\n        }\n        string\
    \ bin9 = \"\";\n        foreach (char c in bin7)\n        {\n            bin9\
    \ = bin9 + Convert.ToString(c);\n        }\n        string bin10 = \"\";\n   \
    \     foreach (char c in bin8)\n        {\n            bin10 = bin10 + Convert.ToString(c);\n\
    \        }\n        string bin11 = \"\";\n        foreach (char c in bin9)\n \
    \       {\n            bin11 = bin11 + Convert.ToString(c);\n        }\n     \
    \   string bin12 = \"\";\n        foreach (char c in bin10)\n        {\n     \
    \       bin12 = bin12 + Convert.ToString(c);\n        }\n        string bin13\
    \ = \"\";\n        foreach (char c in bin11)\n        {\n            bin13 = bin13\
    \ + Convert.ToString(c);\n        }\n        string bin14 = \"\";\n        foreach\
    \ (char c in bin12)\n        {\n            bin14 = bin14 + Convert.ToString(c);\n\
    \        }\n        string bin15 = \"\";\n        foreach (char c in bin13)\n\
    \        {\n            bin15 = bin15 + Convert.ToString(c);\n        }\n    \
    \    string bin16 = \"\";\n        foreach (char c in bin14)\n        {\n    \
    \        bin16 = bin16 + Convert.ToString(c);\n        }\n        string bin17\
    \ = \"\";\n        foreach (char c in bin15)\n        {\n            bin17 = bin17\
    \ + Convert.ToString(c);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7fgsjlb.cs(114,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmph7fgsjlb.cs(122,2): error CS1513: } expected

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remaining\
    \ = N;\n        while (remaining > 0) {\n            long digit = remaining %\
    \ 10;\n            result += (digit < 10 ? \"0\" + digit : digit.ToString());\n\
    \            remaining = remaining / 10;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91b7e6870d73457cb5345c6d4578d7e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <91b7e6870d73457cb5345c6d4578d7e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            remainder = N % 10;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 10;\n        }\n        temp = sum;\n\
    \        result = Convert.ToString(temp);\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <608ec5cfe7f24e8390e3f7e1e17fa205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <608ec5cfe7f24e8390e3f7e1e17fa205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 2;\n        long sum = 0;\n        while (N > 0) {\n            sum +=\
    \ N % 10;\n            N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        if (sum > 0) {\n            result += binary;\n        }\n        if\
    \ (remainder > 0) {\n            result += Convert.ToString(remainder);\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea61005129194a56bdb7143163d535dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea61005129194a56bdb7143163d535dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N !=0)\n        {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n\
    \            result += binary[i];\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5697d793b57141b7aa356bfa48a58564>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5697d793b57141b7aa356bfa48a58564>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0)\n        {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N = N / 2;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string result = binary.PadLeft(binary.Length\
    \ + 1, '0');\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbm7r2a_r.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     long temp = sum;\n        string s = \"\";\n        while (temp > 0) {\n\
    \            s = Convert.ToString(temp % 2, 2).PadLeft(8, '0') + s;\n        \
    \    temp = temp / 2;\n        }\n        result = s;\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa598ffee365495bbd71a47fd4afb57f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa598ffee365495bbd71a47fd4afb57f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 10;\n    \
    \        N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string reverse = binary.Reverse().ToArray();\n        string result =\
    \ \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n        \
    \    result += reverse[i];\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_6she03.cs(31,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpt_6she03.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpt_6she03.cs(32,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        while (remainder > 0) {\n            int digit = remainder % 10;\n\
    \            result += (digit.ToString());\n            remainder = remainder\
    \ / 10;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu8nkiox6.cs(26,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remaining\
    \ = N;\n        while (remaining > 0) {\n            long digit = remaining %\
    \ 10;\n            result += (digit.ToString());\n            remaining = remaining\
    \ / 10;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a6c6d301b584f379e4103d54520aa6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a6c6d301b584f379e4103d54520aa6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n       \
    \     N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n  \
    \      string reverse = binary.Reverse().ToArray();\n        for (int i = 0; i\
    \ < binary.Length; i++)\n        {\n            result += reverse[i];\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjrn8z44t.cs(31,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 2;\n        long sum = 0;\n        while (N > 0) {\n            sum +=\
    \ N % 10;\n            N /= 10;\n        }\n        if (sum > 0) {\n         \
    \   result += Convert.ToString(sum);\n        }\n        if (remainder > 0) {\n\
    \            result += Convert.ToString(remainder);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082156dc7fd7427a8874d8fd7b56f123>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <082156dc7fd7427a8874d8fd7b56f123>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        result = Convert.ToString(sum);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804452
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0) {\n            remainder = N % 10;\n            sum += remainder;\n\
    \            sumOfDigits += remainder;\n            N = N / 10;\n        }\n \
    \       if (sumOfDigits == 0) {\n            sumOfDigits = 1;\n        }\n   \
    \     result = Convert.ToString(sumOfDigits);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1c8dc3e2479942219ac89899d037c9db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1c8dc3e2479942219ac89899d037c9db>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 2)\
    \ {\n            sum += N % 2;\n            N /= 2;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxll_3tqa.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        long remainderOfDigits = 0;\n \
    \       string result = \"\";\n        long digit;\n        long remainderOfDigit;\n\
    \        bool isNegative = false;\n        if (N < 0) {\n            isNegative\
    \ = true;\n            N = N * -1;\n        }\n        long digits = N / 10;\n\
    \        long remainderOfDigits = N % 10;\n        long sumOfDigitsOfDigits =\
    \ 0;\n        long remainderOfDigitsOfDigits = 0;\n        long sumOfDigitsOfRemainderOfDigits\
    \ = 0;\n        long remainderOfDigitsOfRemainderOfDigits = 0;\n        long sumOfRemainderOfDigitsOfRemainderOfDigits\
    \ = 0;\n        long remainderOfRemainderOfRemainderOfDigits = 0;\n        long\
    \ sumOfRemainderOfRemainderOfRemainderOfDigits = 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfDigits =\
    \ 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long remainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfDigits\
    \ = 0;\n        long sumOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainderOfRemainder\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3mgtbd1k.cs(55,193): error CS1002: ; expected

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0) {\n            remainder = N % 2;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 2;\n        }\n        result =\
    \ Convert.ToString(sum);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n \
    \   Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce26934c27f74b79928c96e220cf5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce26934c27f74b79928c96e220cf5eb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     if (sum > 0) {\n            result += Convert.ToString(sum);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f3c595ab819844acb7410c8ffe807a8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f3c595ab819844acb7410c8ffe807a8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long current = 0;\n        long digit =\
    \ 0;\n        long power = 1;\n        long temp = 0;\n        bool isNegative\
    \ = false;\n        bool isZero = false;\n        bool isOne = false;\n      \
    \  bool isTwo = false;\n        bool isThree = false;\n        bool isFour = false;\n\
    \        bool isFive = false;\n        bool isSix = false;\n        bool isSeven\
    \ = false;\n        bool isEight = false;\n        bool isNine = false;\n    \
    \    bool isTen = false;\n        bool isEleven = false;\n        bool isTwelve\
    \ = false;\n        bool isThirteen = false;\n        bool isFourteen = false;\n\
    \        bool isFifteen = false;\n        bool isSixteen = false;\n        bool\
    \ isSeventeen = false;\n        bool isEighteen = false;\n        bool isNineteen\
    \ = false;\n        bool isTwenty = false;\n        bool isThirty = false;\n \
    \       bool isForty = false;\n        bool isFifty = false;\n        bool isSixty\
    \ = false;\n        bool isSeventy = false;\n        bool isEighty = false;\n\
    \        bool isNinety = false;\n        bool isHundred = false;\n        bool\
    \ isThousand = false;\n        bool isHundredand = false;\n        bool isThousandandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool isHundredandand\
    \ = false;\n        bool isHundredandand = false;\n        bool \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2vox8w1a.cs(86,13): error CS1001: Identifier expected

    /tmp/tmp2vox8w1a.cs(86,13): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long quotient = 0;\n        long temp = 0;\n        string result\
    \ = \"\";\n        string binary = \"\";\n        string bin = \"\";\n       \
    \ string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n        string binary = \"\";\n    \
    \    string binary = \"\";\n        string binary = \"\";\n        string binary\
    \ = \"\";\n        string binary = \"\";\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr7if5ul0.cs(30,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(31,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(32,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(33,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(34,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(35,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(36,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(37,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(38,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(39,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(40,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(41,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(42,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(43,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(44,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.cs(45,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpr7if5ul0.'
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum, 2);\n      \
    \  string reverse = binary.Reverse().ToArray();\n        string result = string.Join(\"\
    \", binary.Take(binary.Length - 1).Concat(reverse));\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpicqub_8n.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpicqub_8n.cs(30,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpicqub_8n.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long digit = 0;\n        string result = \"\";\n        while\
    \ (N /= 10) {\n            digit = N % 10;\n            sum += digit;\n      \
    \      N = N / 10;\n        }\n        if (sum > 0) {\n            while (sum\
    \ > 0) {\n                remainder = sum % 2;\n                sum = sum / 2;\n\
    \                result += remainder;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuuyzvkwc.cs(27,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 2)\
    \ {\n            sum += N % 2;\n            N /= 2;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxll_3tqa.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        long sumOfDigits = 0;\n        string\
    \ result = \"\";\n        while (N !=0)\n        {\n            remainder = N\
    \ % 2;\n            temp = N / 2;\n            N = temp;\n            sum = sum\
    \ + remainder;\n            sumOfDigits += remainder;\n        }\n        temp\
    \ = sumOfDigits;\n        while (temp != 0)\n        {\n            result = result\
    \ + Convert.ToString(temp % 2);\n            temp = temp / 2;\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fdb54dd96754b769ce70d4340504ff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7fdb54dd96754b769ce70d4340504ff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0)\n        {\n            remainder = N % 10;\n            sum +=\
    \ remainder;\n            sumOfDigits += remainder;\n            N = N / 10;\n\
    \        }\n        if (sumOfDigits == 0)\n        {\n            sumOfDigits\
    \ = 1;\n        }\n        string binary = Convert.ToString(sumOfDigits);\n  \
    \      string binaryString = binary.PadLeft(sumOfDigits, '0');\n        string\
    \ binaryStringReversed = binaryString.Reverse().ToArray();\n        foreach (char\
    \ c in binaryStringReversed)\n        {\n            result += c;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0i_zm90_.cs(39,46): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp0i_zm90_.cs(40,39): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpps9y9yvw.cs(109,18): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long base = 1;\n        string result = \"\";\n        while (N\
    \ !=  0) {\n            remainder = N % base;\n            sum += remainder;\n\
    \            N = N / base;\n            base = base * 2;\n        }\n        string\
    \ binary = Convert.ToString(sum);\n        string result = Convert.ToString(sum);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1kf7d7s6.cs(25,14): error CS1001: Identifier expected

    /tmp/tmp1kf7d7s6.cs(25,14): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        while (sum > 0) {\n            result += Convert.ToString(sum\
    \ % 2, 2);\n            sum /= 2;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypraawjg.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            remainder = N % 10;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 10;\n        }\n        temp = sum;\n\
    \        result = Convert.ToString(temp);\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <608ec5cfe7f24e8390e3f7e1e17fa205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <608ec5cfe7f24e8390e3f7e1e17fa205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        long remainderOfDigits = 0;\n \
    \       string result = \"\";\n        long digit;\n        long digitSum = 0;\n\
    \        long digitRemainder = 0;\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digitSumOfDigits = 0;\n      \
    \  long digitRemainderOfDigits = 0;\n        string digitResult = \"\";\n    \
    \    long digitSumOfDigits = 0;\n        long digitRemainderOfDigits = 0;\n  \
    \      string digitResult = \"\";\n        long digit\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1kkli111.cs(91,19): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0) {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N = N / 10;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string result = Convert.ToString(sum);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppt4b2zcj.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 2;\n            remainder = remainder / 2;\n        }\n     \
    \   string binary = Convert.ToString(sum, 2);\n        string result = binary.PadLeft(binary.Length,\
    \ '0');\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpce3qsgkh.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        long temp = 0;\n        while (N !=0)\n        {\n            temp\
    \ = N % 10;\n            sum += temp;\n            N = N / 10;\n        }\n  \
    \      s = Convert.ToString(sum);\n        return s;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0802fc5ed99040bb87ee646727c90407>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0802fc5ed99040bb87ee646727c90407>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=  0) {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N = N / 10;\n        }\n\
    \        string binary = Convert.ToString(sum, 2);\n        string bin = binary.PadLeft(binary.Length\
    \ + 1, '0');\n        string result = bin;\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6q4_2coa.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long temp = N;\n\
    \        while (temp != 0) {\n            sum += temp % 2;\n            temp /=\
    \ 2;\n        }\n        string result = \"\";\n        while (sum != 0) {\n \
    \           result += Convert.ToString(sum % 2, 2);\n            sum /= 2;\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68f2d8cb952f498ca94dfdd25b06b6e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <68f2d8cb952f498ca94dfdd25b06b6e4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 10;\n        long sum = 0;\n        while (N /= 10) {\n            sum\
    \ += N % 10;\n            N /= 10;\n        }\n        if (sum > 0) {\n      \
    \      result += Convert.ToString(sum);\n        }\n        if (remainder > 0)\
    \ {\n            result += Convert.ToString(remainder);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqs0ug5jj.cs(26,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        long remainder = 0;\n        long power = 1;\n        while (N\
    \ /= 2) {\n            sum += N % 2;\n            N /= 2;\n        }\n       \
    \ while (sum > 0) {\n            remainder = sum % 10;\n            sum += remainder;\n\
    \            result += Convert.ToString(remainder);\n            sum -= remainder;\n\
    \        }\n        while (power != 0) {\n            remainder = sum % 10;\n\
    \            sum += remainder;\n            result += Convert.ToString(remainder);\n\
    \            sum -= remainder;\n            power *= 2;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptnqilsy4.cs(27,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n       \
    \     N /= 10;\n        }\n        long remainder = sum;\n        string remainderString\
    \ = remainder.ToString();\n        while (remainder !=0)\n        {\n        \
    \    result += (char)('0' + remainder % 2);\n            remainder /= 2;\n   \
    \     }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b23406d7096431bbd04ef1c856fdb64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b23406d7096431bbd04ef1c856fdb64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 2;\n            remainder = remainder / 2;\n        }\n     \
    \   result = Convert.ToString(sum);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b0f9d1ffb8c45cfb910a326e3304660>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b0f9d1ffb8c45cfb910a326e3304660>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        long digit = 0;\n\
    \        long power = 1;\n        long power2 = 1;\n        long power3 = 1;\n\
    \        long power4 = 1;\n        long power5 = 1;\n        long power6 = 1;\n\
    \        long power7 = 1;\n        long power8 = 1;\n        long power9 = 1;\n\
    \        long power10 = 1;\n        long power11 = 1;\n        long power12 =\
    \ 1;\n        long power13 = 1;\n        long power14 = 1;\n        long power15\
    \ = 1;\n        long power16 = 1;\n        long power17 = 1;\n        long power18\
    \ = 1;\n        long power19 = 1;\n        long power20 = 1;\n        long power21\
    \ = 1;\n        long power22 = 1;\n        long power23 = 1;\n        long power24\
    \ = 1;\n        long power25 = 1;\n        long power26 = 1;\n        long power27\
    \ = 1;\n        long power28 = 1;\n        long power29 = 1;\n        long power30\
    \ = 1;\n        long power31 = 1;\n        long power32 = 1;\n        long power33\
    \ = 1;\n        long power34 = 1;\n        long power35 = 1;\n        long power36\
    \ = 1;\n        long power37 = 1;\n        long power38 = 1;\n        long power39\
    \ = 1;\n        long power40 = 1;\n        long power41 = 1;\n        long power42\
    \ = 1;\n        long power43 = 1;\n        long power44 = 1;\n        long power45\
    \ = 1;\n        long power46 = 1;\n        long power47 = 1;\n        long power48\
    \ = 1;\n        long power49 = 1;\n        long power50 = 1;\n        long power51\
    \ = 1;\n        long power52 = 1;\n        long power53 = 1;\n        long power54\
    \ = 1;\n        long power55 = 1;\n        long power56 = 1;\n        long power57\
    \ = 1;\n        long power58 = 1;\n        long power59 = 1;\n        long power60\
    \ = 1;\n        long power61 = 1;\n        long power62 = 1;\n        long power63\
    \ = 1;\n        long power64 = 1;\n        long power65 = 1;\n        long power66\
    \ = 1;\n        long power67 = 1;\n        long power68 = 1;\n        long power69\
    \ = 1;\n        long power70 = 1;\n        long power71 = 1;\n        long power72\
    \ = 1;\n        long power73 = 1;\n        long power74 = 1;\n        long power75\
    \ = 1;\n        long power76 = 1;\n        long power77 = 1;\n        long power78\
    \ = 1;\n        long power79 = 1;\n        long power80 = 1;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyvs9blaz.cs(23,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(25,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpyvs9blaz.cs(26,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(27,14): warning CS0219: The variable ''digit'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(28,14): warning CS0219: The variable ''power'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(29,14): warning CS0219: The variable ''power2'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(30,14): warning CS0219: The variable ''power3'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(31,14): warning CS0219: The variable ''power4'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(32,14): warning CS0219: The variable ''power5'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(33,14): warning CS0219: The variable ''power6'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(34,14): warning CS0219: The variable ''power7'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(35,14): warning CS0219: The variable ''power8'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(36,14): warning CS0219: The variable ''power9'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(37,14): warning CS0219: The variable ''power10'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(38,14): warning CS0219: The variable ''power11'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(39,14): warning CS0219: The variable ''power12'' is assigned
    but its value is never used

    /tmp/tmpyvs9blaz.cs(40,14): warning CS0219: The variable ''power13'' is assigned
    but its value is never used

    /tmp/tmpyvs9b'
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0)\n        {\n            remainder = N % 2;\n            sum =\
    \ sum + remainder;\n            N = N / 2;\n        }\n        sumOfDigits = sum;\n\
    \        while (sumOfDigits !=0)\n        {\n            int digit = sumOfDigits\
    \ % 10;\n            sumOfDigits = sumOfDigits / 10;\n            result = result\
    \ + digit.ToString();\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4g3s49ao.cs(36,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0) {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N /= 10;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string result = binary.PadLeft(binary.Length\
    \ + 1, '0');\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpidk_yghm.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        long remainderOfDigits = 0;\n \
    \       string result = \"\";\n        long digit;\n        long sumOfDigitsInBinary\
    \ = 0;\n        long remainderOfDigitsInBinary = 0;\n        long sumOfDigitsInDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimal = 0;\n        long sumOfDigitsInDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimal = 0;\n        long\
    \ sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimalDecimalDecimal\
    \ = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long\
    \ remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n  \
    \      long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long\
    \ remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n  \
    \      long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long\
    \ remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n  \
    \      long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long\
    \ remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n  \
    \      long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long\
    \ remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long sumOfDigitsInDecimalDecimalDecimalDecimal\
    \ = 0;\n        long remainderOfDigitsInDecimalDecimalDecimalDecimal = 0;\n  \
    \      long sumOfDigitsInDecimalDecimalDecimalDecimal = 0;\n        long remainderOfDigitsInDecimal\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb969x7te.cs(68,40): error CS1002: ; expected

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 2;\n     \
    \       N /= 2;\n        }\n        string binary = Convert.ToString(sum);\n \
    \       string reverse = binary.Reverse().ToArray();\n        for (int i = 0;\
    \ i < binary.Length; i++)\n        {\n            result += reverse[i];\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjc8_2zf_.cs(31,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        long remainder = 0;\n        long current = 0;\n        long power\
    \ = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 =\
    \ 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n\
    \        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n \
    \       long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n\
    \        long temp82 = 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2tab4fm.cs(23,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(24,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpc2tab4fm.cs(25,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(26,14): warning CS0219: The variable ''current'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(27,14): warning CS0219: The variable ''power'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(28,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(29,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(30,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(31,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(32,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(33,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(34,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(35,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(36,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(37,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(38,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(39,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(40,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpc2tab4fm.cs(41,'
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 2;\n            remainder = remainder >> 1;\n        }\n    \
    \    result = Convert.ToString(sum);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d2a66ede56d4d04b279a0f89b22dd37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d2a66ede56d4d04b279a0f89b22dd37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        long n = N;\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n /= 10;\n        }\n        s = Convert.ToString(sum);\n       \
    \ return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4fd2f862127e4e858925d816a4ffa5b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4fd2f862127e4e858925d816a4ffa5b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 2)\
    \ {\n            sum += N % 2;\n            N /= 2;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxll_3tqa.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long power = 1;\n        string result = \"\";\n        while\
    \ (N !=0)\n        {\n            remainder = N % 2;\n            sum += remainder;\n\
    \            N /= 2;\n        }\n        while (sum != 0)\n        {\n       \
    \     result += Convert.ToString(sum % 2);\n            sum /= 2;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4235ced1c34b4b948418b05b20155b98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4235ced1c34b4b948418b05b20155b98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        while (N !=0)\n        {\n            remainder = N % 2;\n   \
    \         N = N / 2;\n            result += remainder;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17d6ca1be8b941d4bf5c8b89e77e8d8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17d6ca1be8b941d4bf5c8b89e77e8d8b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long\
    \ temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7\
    \ = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10\
    \ = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\
    \ = 0;\n        long \n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4qg1ulog.cs(109,13): error CS1001: Identifier expected

    /tmp/tmp4qg1ulog.cs(109,13): error CS1002: ; expected

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        result = Convert.ToString(sum);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804452
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ string binary = \"\";\n        string digit = \"\";\n        long digits = 0;\n\
    \        long digitSum = 0;\n        long digitSumOfDigits = 0;\n        long\
    \ digitSumOfDigitsRemainder = 0;\n        long digitSumOfDigitsRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainder = 0;\n      \
    \  long digitSumOfDigitsRemainderRemainderRemainderRemainder = 0;\n        long\
    \ digitSumOfDigitsRemainderRemainderRemainderRemainderRemainder = 0;\n       \
    \ long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainder = 0;\n  \
    \      long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemainderRemainderRemainderRemainderRemainderRemainder\
    \ = 0;\n        long digitSumOfDigitsRemain\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq5yo_xvu.cs(55,36): error CS1002: ; expected

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        result = Convert.ToString(sum);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa2df7d7c21b44bcafdbb5846297909d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa2df7d7c21b44bcafdbb5846297909d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        string result = \"\";\n      \
    \  while (N !=0)\n        {\n            remainder = N % 10;\n            currentDigit\
    \ = N / 10;\n            sum += remainder;\n            result += currentDigit.ToString();\n\
    \            N = currentDigit;\n        }\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e325aab29f07402baf9b6edbb4341df6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e325aab29f07402baf9b6edbb4341df6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        s = Convert.ToString(sum, 2);\n        if (s.Length > 1) {\n\
    \            s = \"1\" + s;\n        }\n        return s;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw8v_0zpa.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            remainder = N % 2;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 2;\n        }\n        result =\
    \ Convert.ToString(sum);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n \
    \   Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f794655a63d42219d0269d8113c438b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f794655a63d42219d0269d8113c438b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n\
    \            N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string bin = binary.PadLeft(binary.Length, '0');\n        string result\
    \ = bin;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmporg7byid.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        long temp = sum;\n        string binary = \"\";\n        while\
    \ (temp != 0) {\n            binary = Convert.ToString(temp % 2) + binary;\n \
    \           temp /= 2;\n        }\n        s = binary;\n        return s;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt4i3kzrc.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        string result = \"\";\n      \
    \  while (N /= 2) {\n            currentDigit = N % 2;\n            sum += currentDigit;\n\
    \            N /= 2;\n        }\n        while (N /= 10) {\n            currentDigit\
    \ = N % 10;\n            sum += currentDigit;\n            N /= 10;\n        }\n\
    \        while (sum > 0) {\n            remainder = sum % 2;\n            sum\
    \ = sum / 2;\n            result += remainder;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdr5aw3ho.cs(27,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpdr5aw3ho.cs(32,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        long n\
    \ = N;\n        do {\n            temp = n % 10;\n            sum += temp;\n \
    \           remainder = n / 10;\n            n = remainder;\n        } while (n\
    \ != 0);\n        result = Convert.ToString(sum);\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <748b6c3ca7684072aa074648b4779f9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <748b6c3ca7684072aa074648b4779f9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n       \
    \     N = N / 10;\n        }\n        s = Convert.ToString(sum);\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd3b25a6cad040728d768f08aa21c43b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd3b25a6cad040728d768f08aa21c43b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        long remainder = N;\n        while (remainder > 0)\
    \ {\n            sum += remainder % 10;\n            remainder /= 10;\n      \
    \  }\n        result = Convert.ToString(sum);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphg8xwzhr.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0)\n        {\n            remainder = N % 10;\n            sum +=\
    \ remainder;\n            sumOfDigits += remainder;\n            N = N / 10;\n\
    \        }\n        if (sumOfDigits == 0)\n        {\n            result = \"\
    0\";\n        }\n        else\n        {\n            result = Convert.ToString(sumOfDigits);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0aaf8d4f75ba4bcd87e3692bcb7da601>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0aaf8d4f75ba4bcd87e3692bcb7da601>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remaining\
    \ = N;\n        while (remaining > 0) {\n            long digit = remaining %\
    \ 10;\n            string binary = Convert.ToString(digit, 2);\n            result\
    \ += binary;\n            remaining = remaining / 10;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f333aa8c33a1418f96826f9b90f6d1fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f333aa8c33a1418f96826f9b90f6d1fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0)\n        {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N = N / 2;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string reverse = binary.Reverse().ToArray();\n\
    \        foreach (char c in reverse)\n        {\n            result += Convert.ToString(c);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw5_i5uhv.cs(33,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = binary.PadLeft(binary.Length, '0');\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy6k9e13l.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0){\n            remainder\
    \ = N % 2;\n            sum = sum + remainder;\n            N = N / 2;\n     \
    \   }\n        result = Convert.ToString(sum);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36f5457415a449ce9d1cb624d69e9e56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <36f5457415a449ce9d1cb624d69e9e56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 2;\n        long sum = 0;\n        long currentDigit = 0;\n        long\
    \ currentSum = 0;\n        long currentSumOfDigits = 0;\n        long currentSumOfDigitsInCurrentDigit\
    \ = 0;\n        long currentSumOfDigitsInCurrentSum = 0;\n        long currentSumOfDigitsInCurrentSumOfDigits\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit = 0;\n\
    \        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSum = 0;\n      \
    \  long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigits = 0;\n    \
    \    long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSum\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigits\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSum\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigits\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSum\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigits\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSum\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigits\
    \ = 0;\n        long currentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentSumOfDigitsInCurrentDigit\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl31rvbcp.cs(47,166): error CS1002: ; expected

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0) {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N = N / 10;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string reverse = binary.Reverse().ToArray();\n\
    \        string result = \"\";\n        for (int i = 0; i < reverse.Length; i++)\
    \ {\n            result += reverse[i];\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi545sb_6.cs(32,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpi545sb_6.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpi545sb_6.cs(33,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        long remainder = sum;\n        while (remainder >\
    \ 0) {\n            result += Convert.ToString(remainder % 2, 2);\n          \
    \  remainder /= 2;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqbg2wwi_.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        while (N !=0)\n\
    \        {\n            remainder = N % 10;\n            sum += remainder;\n \
    \           temp = sum;\n            sum = 0;\n            N = (N - remainder)\
    \ / 10;\n        }\n        temp = sum;\n        sum = temp;\n        while (sum\
    \ != 0)\n        {\n            result += Convert.ToString(sum % 2);\n       \
    \     sum = sum / 2;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17d5216c19694d5aa0d5c5540e4b1cad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17d5216c19694d5aa0d5c5540e4b1cad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n\
    \            result += binary[i];\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpudc36uld.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpudc36uld.cs(33,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        string result = \"\";\n      \
    \  while (N !=0) {\n            currentDigit = N % 10;\n            sum += currentDigit;\n\
    \            N /= 10;\n        }\n        while (sum > 0) {\n            remainder\
    \ = sum % 2;\n            sum = sum / 2;\n            result += remainder;\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6f5c4422a62a47c0bb4a08eb1a9f56de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6f5c4422a62a47c0bb4a08eb1a9f56de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /=\
    \ 2;\n        }\n        long remain = N;\n        while (remain > 0) {\n    \
    \        sum += remain % 2;\n            remain /= 2;\n        }\n        if (sum\
    \ > 0) {\n            result += (char)('0' + sum);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw3wec_h1.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long n = N;\n\
    \        while (n > 0) {\n            int digit = n % 10;\n            s += (digit\
    \ < 10 ? \"0\" + digit : digit.ToString());\n            n /= 10;\n        }\n\
    \        return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzg1fpxr9.cs(26,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long digit = 0;\n        long sumOfDigits\
    \ = 0;\n        long sumOfDigitsInBinary = 0;\n        long sumOfDigitsInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimal = 0;\n        long sumOfDigitsInOctal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimal = 0;\n        long sumOfDigitsInOctalInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinary = 0;\n        long\
    \ sumOfDigitsInOctalInDecimalInBinary = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimal = 0;\n     \
    \   long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinary = 0;\n   \
    \     long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinary = 0;\n       \
    \ long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal = 0;\n\
    \        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal =\
    \ 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInHexadecimalInDecimalInBinaryInDecimalInBinaryInDecimal\
    \ = 0;\n        long sumOfDigitsInOctalInDecimalInBinaryIn\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpki69ngok.cs(55,51): error CS1002: ; expected

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        long temp = N;\n        while (temp\
    \ > 0) {\n            remainder = temp % 2;\n            sum += remainder;\n \
    \           temp /= 2;\n        }\n        result = Convert.ToString(sum);\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b7a1c9b9db44c609495cf05dbf838a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b7a1c9b9db44c609495cf05dbf838a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0){\n            remainder =\
    \ N % 2;\n            sum += remainder;\n            N /= 2;\n        }\n    \
    \    string binary = Convert.ToString(sum);\n        string bin = binary.PadLeft(binary.Length,\
    \ '0');\n        string bin2 = bin.Substring(0, bin.Length - 1);\n        string\
    \ bin3 = bin2.Substring(0, bin2.Length - 1);\n        string bin4 = bin3.Substring(0,\
    \ bin3.Length - 1);\n        string bin5 = bin4.Substring(0, bin4.Length - 1);\n\
    \        string bin6 = bin5.Substring(0, bin5.Length - 1);\n        string bin7\
    \ = bin6.Substring(0, bin6.Length - 1);\n        string bin8 = bin7.Substring(0,\
    \ bin7.Length - 1);\n        string bin9 = bin8.Substring(0, bin8.Length - 1);\n\
    \        string bin10 = bin9.Substring(0, bin9.Length - 1);\n        string bin11\
    \ = bin10.Substring(0, bin10.Length - 1);\n        string bin12 = bin11.Substring(0,\
    \ bin11.Length - 1);\n        string bin13 = bin12.Substring(0, bin12.Length -\
    \ 1);\n        string bin14 = bin13.Substring(0, bin13.Length - 1);\n        string\
    \ bin15 = bin14.Substring(0, bin14.Length - 1);\n        string bin16 = bin15.Substring(0,\
    \ bin15.Length - 1);\n        string bin17 = bin16.Substring(0, bin16.Length -\
    \ 1);\n        string bin18 = bin17.Substring(0, bin17.Length - 1);\n        string\
    \ bin19 = bin18.Substring(0, bin18.Length - 1);\n        string bin20 = bin19.Substring(0,\
    \ bin19.Length - 1);\n        string bin21 = bin20.Substring(0, bin20.Length -\
    \ 1);\n        string bin22 = bin21.Substring(0, bin21.Length - 1);\n        string\
    \ bin23 = bin22.Substring(0, bin22.Length - 1);\n        string bin24 = bin23.Substring(0,\
    \ bin23.Length - 1);\n        string bin25 = bin24.Substring(0, bin24.Length -\
    \ 1);\n        string bin26 = bin25.Substring(0, bin25.Length - 1);\n        string\
    \ bin27 = bin26.Substring(0, bin26.Length - 1);\n        string bin28 = bin27.Substring(0,\
    \ bin27.Length - 1);\n        string bin29 = bin28.Substring(0, bin28.Length -\
    \ 1);\n        string bin30 = \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv9gjf3y_.cs(61,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpv9gjf3y_.cs(61,23): error CS1002: ; expected

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        string result = \"\";\n      \
    \  while (N !=0)\n        {\n            remainder = N % 10;\n            currentDigit\
    \ = N / 10;\n            sum += currentDigit;\n            N = (remainder * 10)\
    \ + currentDigit;\n        }\n        string binaryString = Convert.ToString(sum);\n\
    \        binaryString = binaryString.PadLeft(32, '0');\n        string result\
    \ = binaryString;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxij3mwnr.cs(36,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (true) {\n            long digit\
    \ = remainder % 10;\n            sum += digit;\n            remainder = remainder\
    \ / 10;\n            if (remainder == 0) {\n                result += (sum.ToString());\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1036230aab944988ad6f08be1d1b0b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1036230aab944988ad6f08be1d1b0b2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0) {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N /= 10;\n        }\n\
    \        result = Convert.ToString(sum);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cff601179c0149268471aaec6b26f104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cff601179c0149268471aaec6b26f104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     string s = Convert.ToString(sum);\n        foreach (char c in s) {\n   \
    \         result += Convert.ToString(c);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6327320708754d94ad5b13aaeea90876>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6327320708754d94ad5b13aaeea90876>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0){\n            remainder\
    \ = N % 2;\n            sum = sum + remainder;\n            N = N / 2;\n     \
    \   }\n        string binary = Convert.ToString(sum);\n        string reverse\
    \ = binary.Reverse().ToArray();\n        string final = string.Join(\"\",reverse);\n\
    \        return final;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpscrifw0m.cs(32,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpscrifw0m.cs(25,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long digit = 0;\n        string result = \"\";\n        do {\n\
    \            digit = N % 10;\n            sum += digit;\n            N /= 10;\n\
    \        } while (N > 0);\n        digit = sum % 10;\n        remainder = sum\
    \ / 10;\n        result += Convert.ToString(digit);\n        if (remainder !=\
    \ 0) {\n            result += Convert.ToString(remainder);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe872566dabb441abe870c1d632d55fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe872566dabb441abe870c1d632d55fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum, 2);\n      \
    \  while (binary.Length > 1) {\n            result += binary.Substring(0, 1);\n\
    \            binary = binary.Substring(1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptpuo4pv4.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (true) {\n            sum += remainder;\n\
    \            if (sum >= 10) {\n                result += (sum % 10).ToString();\n\
    \                sum = 0;\n            }\n            if (sum == 0)\n        \
    \        break;\n            remainder = sum % 10;\n        }\n        if (sum\
    \ > 0)\n            result += sum.ToString();\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <930c6a05e08848659d1ffa5bfc85f98d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <930c6a05e08848659d1ffa5bfc85f98d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        long sumOfDigits = 0;\n        string\
    \ result = \"\";\n        long digit;\n        long digitCount = 0;\n        long\
    \ digitSum = 0;\n        bool isNegative = false;\n        if (N < 0) {\n    \
    \        isNegative = true;\n            N = N * -1;\n        }\n        while\
    \ (N !=  0) {\n            digit = N % 10;\n            digitCount = 1;\n    \
    \        while (digit != 0) {\n                digitSum = digitSum * 10 + digit;\n\
    \                digitCount = digitCount + 1;\n                digit = digit /\
    \ 10;\n            }\n            temp = digitSum / digitCount;\n            sum\
    \ = sum + temp;\n            sumOfDigits += temp;\n            N = N / 10;\n \
    \       }\n        if (isNegative) {\n            sum = -sum;\n        }\n   \
    \     if (sumOfDigits == 0) {\n            result = \"\";\n        }\n       \
    \ else {\n            result = Convert.ToString(sum);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a57c8cee845f4b2783f4d261fbc6feb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a57c8cee845f4b2783f4d261fbc6feb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long n = N;\n\
    \        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n\
    \            n = n / 10;\n        }\n        s = Convert.ToString(sum);\n    \
    \    return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be2002cc31774837bcf3ca75e6415dd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <be2002cc31774837bcf3ca75e6415dd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     long temp = sum;\n        temp = temp * 2;\n        while (temp > 0) {\n\
    \            int digit = (int)(temp % 2);\n            result += digit.ToString();\n\
    \            temp = temp / 2;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30c30c82af0942ff8cdee364d6fc5a3f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30c30c82af0942ff8cdee364d6fc5a3f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        result = Convert.ToString(sum);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804452
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n       \
    \     N /= 10;\n        }\n        long remainder = sum;\n        long sumOfDigits\
    \ = 0;\n        while (sumOfDigits < sum)\n        {\n            sumOfDigits\
    \ += remainder;\n            remainder = sum % 10;\n            sum /= 10;\n \
    \       }\n        string binary = \"\";\n        while (sumOfDigits > 0)\n  \
    \      {\n            binary += Convert.ToString(sumOfDigits % 2, 2);\n      \
    \      sumOfDigits /= 10;\n        }\n        result = binary;\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f61b3e19dd444a1db1636fce4314b87e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f61b3e19dd444a1db1636fce4314b87e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        string binary = Convert.ToString(sum, 2);\n        while (binary.Length\
    \ > 1) {\n            s += binary[0];\n            binary = binary.Substring(1);\n\
    \        }\n        return s;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2dws5mu4.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long current = 0;\n        long currentSum\
    \ = 0;\n        long currentRemainder = 0;\n        long currentSumOfDigits =\
    \ 0;\n        long currentSumOfDigitsRemainder = 0;\n        long currentSumOfDigitsRemainder2\
    \ = 0;\n        long currentSumOfDigitsRemainder3 = 0;\n        long currentSumOfDigitsRemainder4\
    \ = 0;\n        long currentSumOfDigitsRemainder5 = 0;\n        long currentSumOfDigitsRemainder6\
    \ = 0;\n        long currentSumOfDigitsRemainder7 = 0;\n        long currentSumOfDigitsRemainder8\
    \ = 0;\n        long currentSumOfDigitsRemainder9 = 0;\n        long currentSumOfDigitsRemainder10\
    \ = 0;\n        long currentSumOfDigitsRemainder11 = 0;\n        long currentSumOfDigitsRemainder12\
    \ = 0;\n        long currentSumOfDigitsRemainder13 = 0;\n        long currentSumOfDigitsRemainder14\
    \ = 0;\n        long currentSumOfDigitsRemainder15 = 0;\n        long currentSumOfDigitsRemainder16\
    \ = 0;\n        long currentSumOfDigitsRemainder17 = 0;\n        long currentSumOfDigitsRemainder18\
    \ = 0;\n        long currentSumOfDigitsRemainder19 = 0;\n        long currentSumOfDigitsRemainder20\
    \ = 0;\n        long currentSumOfDigitsRemainder21 = 0;\n        long currentSumOfDigitsRemainder22\
    \ = 0;\n        long currentSumOfDigitsRemainder23 = 0;\n        long currentSumOfDigitsRemainder24\
    \ = 0;\n        long currentSumOfDigitsRemainder25 = 0;\n        long currentSumOfDigitsRemainder26\
    \ = 0;\n        long currentSumOfDigitsRemainder27 = 0;\n        long currentSumOfDigitsRemainder28\
    \ = 0;\n        long currentSumOfDigitsRemainder29 = 0;\n        long currentSumOfDigitsRemainder30\
    \ = 0;\n        long currentSumOfDigitsRemainder31 = 0;\n        long currentSumOfDigitsRemainder32\
    \ = 0;\n        long currentSumOfDigitsRemainder33 = 0;\n        long currentSumOfDigitsRemainder34\
    \ = 0;\n        long currentSumOfDigitsRemainder35 = 0;\n        long currentSumOfDigitsRemainder36\
    \ = 0;\n        long currentSumOfDigitsRemainder37 = 0;\n        long currentSumOfDigitsRemainder38\
    \ = 0;\n        long currentSumOfDigitsRemainder39 = 0;\n        long currentSumOfDigits\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzej03h0_.cs(69,32): error CS1002: ; expected

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long power = 1;\n        string result = \"\";\n        while\
    \ (N !=0)\n        {\n            remainder = N % 10;\n            sum += remainder\
    \ * power;\n            power = power * 10;\n            N = N / 10;\n       \
    \ }\n        result = Convert.ToString(sum);\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad39d72cee114d849d6971af1c7fb02d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ad39d72cee114d849d6971af1c7fb02d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        long temp = sum;\n        sum = temp;\n        while (sum\
    \ > 0) {\n            temp = sum % 10;\n            s += temp;\n            sum\
    \ /= 10;\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4do84jlc.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        string result = \"\";\n      \
    \  while (N /= 10) {\n            currentDigit = N % 10;\n            sum += currentDigit;\n\
    \            N /= 10;\n        }\n        if (sum > 0) {\n            remainder\
    \ = sum % 2;\n            while (sum > 0) {\n                currentDigit = sum\
    \ % 10;\n                sum += currentDigit;\n                result += currentDigit\
    \ + remainder;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzq_u7m0k.cs(27,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long temp = N;\n\
    \        while (temp > 0) {\n            sum += (temp % 10);\n            temp\
    \ /= 10;\n        }\n        return Convert.ToString(sum);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <572b41bcf03244859528288dd81846ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <572b41bcf03244859528288dd81846ca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n         \
    \   N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n \
    \       string result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n\
    \        {\n            result += binary[i];\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a438c835634192987c20485d0a3871>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a438c835634192987c20485d0a3871>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long currentDigit = 0;\n        long currentSum = 0;\n       \
    \ string result = \"\";\n        string binary = \"\";\n        string digits\
    \ = \"\";\n        long temp = 0;\n        long temp2 = 0;\n        long temp3\
    \ = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6 =\
    \ 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n\
    \        long temp10 = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n\
    \        long temp13 = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n\
    \        long temp16 = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n\
    \        long temp19 = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n\
    \        long temp22 = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n\
    \        long temp25 = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n\
    \        long temp28 = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n\
    \        long temp31 = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n\
    \        long temp34 = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n\
    \        long temp37 = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n\
    \        long temp40 = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n\
    \        long temp43 = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n\
    \        long temp46 = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n\
    \        long temp49 = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n\
    \        long temp52 = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n\
    \        long temp55 = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n\
    \        long temp58 = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n\
    \        long temp61 = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n\
    \        long temp64 = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n\
    \        long temp67 = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n\
    \        long temp70 = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n\
    \        long temp73 = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n\
    \        long temp76 = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n\
    \        long temp79 = 0;\n        long temp\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj0gsc_ll.cs(109,18): error CS1002: ; expected

    '
  timestamp: 1659824512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            temp = N % 10;\n            sum += temp;\n    \
    \        N = N / 10;\n        }\n        while (sum > 0)\n        {\n        \
    \    remainder = sum % 2;\n            sum = sum / 2;\n            result += remainder;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <556ef93e586b455c81e1ef3bbb6388e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <556ef93e586b455c81e1ef3bbb6388e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            remainder = N % 2;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 2;\n        }\n        temp = sum;\n\
    \        result = Convert.ToString(temp);\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <26352f30f3714b5d99a10cf197db8a2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <26352f30f3714b5d99a10cf197db8a2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n\
    \            N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string bin = binary.PadLeft(binary.Length + 1, '0');\n        string\
    \ bin2 = bin.Substring(0, bin.Length - 1);\n        string bin3 = bin2.Substring(0,\
    \ bin2.Length - 1);\n        string bin4 = bin3.Substring(0, bin3.Length - 1);\n\
    \        string bin5 = bin4.Substring(0, bin4.Length - 1);\n        string bin6\
    \ = bin5.Substring(0, bin5.Length - 1);\n        string bin7 = bin6.Substring(0,\
    \ bin6.Length - 1);\n        string bin8 = bin7.Substring(0, bin7.Length - 1);\n\
    \        string bin9 = bin8.Substring(0, bin8.Length - 1);\n        string bin10\
    \ = bin9.Substring(0, bin9.Length - 1);\n        string bin11 = bin10.Substring(0,\
    \ bin10.Length - 1);\n        string bin12 = bin11.Substring(0, bin11.Length -\
    \ 1);\n        string bin13 = bin12.Substring(0, bin12.Length - 1);\n        string\
    \ bin14 = bin13.Substring(0, bin13.Length - 1);\n        string bin15 = bin14.Substring(0,\
    \ bin14.Length - 1);\n        string bin16 = bin15.Substring(0, bin15.Length -\
    \ 1);\n        string bin17 = bin16.Substring(0, bin16.Length - 1);\n        string\
    \ bin18 = bin17.Substring(0, bin17.Length - 1);\n        string bin19 = bin18.Substring(0,\
    \ bin18.Length - 1);\n        string bin20 = bin19.Substring(0, bin19.Length -\
    \ 1);\n        string bin21 = bin20.Substring(0, bin20.Length - 1);\n        string\
    \ bin22 = bin21.Substring(0, bin21.Length - 1);\n        string bin23 = bin22.Substring(0,\
    \ bin22.Length - 1);\n        string bin24 = bin23.Substring(0, bin23.Length -\
    \ 1);\n        string bin25 = bin24.Substring(0, bin24.Length - 1);\n        string\
    \ bin26 = bin25.Substring(0, bin25.Length - 1);\n        string bin27 = bin26.Substring(0,\
    \ bin26.Length - 1);\n        string bin28 = bin27.Substring(0, bin27.Length -\
    \ 1);\n        string bin29 = bin28.Substring(0, bin28.Length - 1);\n        string\
    \ bin30 = bin29.Substring(0, bin29.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpddhunkfz.cs(60,55): error CS1026: ) expected

    /tmp/tmpddhunkfz.cs(60,55): error CS1002: ; expected

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        string binary = Convert.ToString(sum, 2);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++) {\n        \
    \    result += binary[i];\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpperas9k2.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpperas9k2.cs(23,16): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n         \
    \   N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n    \
    \    string result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n\
    \        {\n            result += binary[i];\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d83017acb9544aca23fccc967351d8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d83017acb9544aca23fccc967351d8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        long remainder = N;\n        while (remainder > 0)\
    \ {\n            sum += remainder % 2;\n            remainder /= 2;\n        }\n\
    \        if (sum > 0) {\n            result += \"1\";\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpllmkwx0a.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0) {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N = N / 2;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string result = \"\"\
    ;\n        for (int i = 0; i < binary.Length; i++) {\n            result += binary[i];\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpth_22j2b.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpth_22j2b.cs(32,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        if (sum > 0) {\n            result += (char)sum;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy9z3bbwo.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        if (sum > 0) {\n            s += \"1\";\n            while\
    \ (sum > 1) {\n                s += \"0\";\n                sum -= 1;\n      \
    \      }\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpme9x1t9f.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long current = 0;\n        string result = \"\";\n        while\
    \ (true) {\n            current = N % 10;\n            sum += current;\n     \
    \       N /= 10;\n            if (N == 0)\n                break;\n          \
    \  remainder = N % 10;\n            N /= 10;\n            result += Convert.ToString(remainder);\n\
    \        }\n        return Convert.ToString(sum) + result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b302eb62bf634284a821c64a8608993b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b302eb62bf634284a821c64a8608993b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 2;\n            remainder = remainder >> 1;\n        }\n    \
    \    string binary = Convert.ToString(sum, 2);\n        string result = binary.PadLeft(binary.Length,\
    \ '0');\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5dmrcftq.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824513
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long quotient = 0;\n        string result = \"\";\n        while\
    \ (N !=0)\n        {\n            quotient = N / 10;\n            N = N % 10;\n\
    \            sum = sum + quotient;\n        }\n        while (sum > 0)\n     \
    \   {\n            remainder = sum % 2;\n            sum = sum / 2;\n        \
    \    result = remainder + result;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5653d2a4c594491e96cedd12f917401a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5653d2a4c594491e96cedd12f917401a>:0 \n"
  stdout: None
  timestamp: 1659824518
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remaining\
    \ = N;\n        while (remaining > 0) {\n            long digit = remaining %\
    \ 10;\n            result += (char)('0' + digit);\n            remaining = remaining\
    \ / 10;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b671246dade4a78b161452173dd5856>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9b671246dade4a78b161452173dd5856>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0)\n        {\n            remainder\
    \ = N % 10;\n            sum += remainder;\n            N = N / 10;\n        }\n\
    \        if (sum > 0)\n        {\n            while (sum > 0)\n            {\n\
    \                result = result + Convert.ToString(sum % 2);\n              \
    \  sum = sum / 2;\n            }\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8844dae7c0d46b194e8ea19891f2f5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8844dae7c0d46b194e8ea19891f2f5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remaining\
    \ = N;\n        while (remaining > 0) {\n            long digit = remaining %\
    \ 10;\n            result += (digit == 0 ? \"\" : (char)('0' + digit));\n    \
    \        remaining = remaining / 10;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6zz25hsy.cs(27,24): error CS0173: Type of conditional expression cannot
    be determined because there is no implicit conversion between ''string'' and ''char''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum += N % 10;\n       \
    \     N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n  \
    \      string bin = Convert.ToString(sum);\n        string binary = bin.Substring(0,\
    \ bin.Length - 1);\n        string binary = binary.PadLeft(bin.Length, '0');\n\
    \        string binary = binary.PadRight(bin.Length, '0');\n        string binary\
    \ = binary.PadLeft(bin.Length, '0');\n        string binary = binary.PadRight(bin.Length,\
    \ '0');\n        string binary = binary.PadLeft(bin.Length, '0');\n        string\
    \ binary = binary.PadRight(bin.Length, '0');\n        string binary = binary.PadLeft(bin.Length,\
    \ '0');\n        string binary = binary.PadRight(bin.Length, '0');\n        string\
    \ binary = binary.PadLeft(bin.Length, '0');\n        string binary = binary.PadRight(bin.Length,\
    \ '0');\n        string binary = binary.PadLeft(bin.Length, '0');\n        string\
    \ binary = binary.PadRight(bin.Length, '0');\n        string binary = binary.PadLeft(bin.Length,\
    \ '0');\n        string binary = binary.PadRight(bin.Length, '0');\n        string\
    \ binary = binary.PadLeft(bin.Length, '0');\n        string binary = binary.PadRight(bin.Length,\
    \ '0');\n        string binary = binary.PadLeft(bin.Length, '0');\n        string\
    \ binary = binary.PadRight(bin.Length, '0');\n        string binary = binary.PadLeft(bin.Length,\
    \ '0');\n        string binary = binary.PadRight(bin.Length, '0');\n        string\
    \ binary = binary.PadLeft(bin.Length, '0');\n        string binary = binary.PadRight(bin.Length,\
    \ '0');\n        string binary = binary.PadLeft(bin.Length, '0');\n        string\
    \ binary = binary.PadRight(bin.Length, '0');\n        string binary = binary.PadLeft(bin.Length,\
    \ '0');\n        string binary = binary.PadRight(bin.Length, '0');\n        string\
    \ binary = binary.PadLeft(bin.Length, '0');\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi9dpr37h.cs(32,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(33,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(34,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(35,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(36,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(37,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(38,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(39,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(40,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(41,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(42,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(43,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(44,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(45,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(46,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.cs(47,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpi9dpr37h.'
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        while (remainder > 0) {\n            long digit = remainder %\
    \ 10;\n            result += digit.ToString();\n            remainder = remainder\
    \ / 10;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0c44587970b4d7d81441e518cd74fe2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c0c44587970b4d7d81441e518cd74fe2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n\
    \            result += binary[i];\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpudc36uld.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpudc36uld.cs(33,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long n = N;\n\
    \        while (n > 0) {\n            int digit = n % 10;\n            s += (digit\
    \ == 0 ? \"0\" : digit == 1 ? \"1\" : \"10\");\n            n /= 10;\n       \
    \ }\n        return s;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4lspuo7m.cs(26,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0) {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N = N / 2;\n        }\n\
    \        string binary = Convert.ToString(sum);\n        string reverse = binary.Reverse().ToArray();\n\
    \        string result = \"\";\n        for (int i = 0; i < reverse.Length; i++)\
    \ {\n            result += reverse[i];\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp822trnms.cs(32,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmp822trnms.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmp822trnms.cs(33,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        while (N !=0) {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N /= 2;\n        }\n  \
    \      string binary = Convert.ToString(sum);\n        string result = binary.PadLeft(binary.Length,\
    \ '0');\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6ybm2pgk.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum, 2);\n      \
    \  if (binary.Length > 0) {\n            while (binary.Length > 1) {\n       \
    \         result += binary.Substring(0, 1);\n                binary = binary.Substring(1,\
    \ binary.Length - 1);\n            }\n            result += binary;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpny6nflz8.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long current = 0;\n        long remainder2 = 0;\n        long\
    \ current2 = 0;\n        long remainder3 = 0;\n        long current3 = 0;\n  \
    \      long remainder4 = 0;\n        long current4 = 0;\n        long remainder5\
    \ = 0;\n        long current5 = 0;\n        long remainder6 = 0;\n        long\
    \ current6 = 0;\n        long remainder7 = 0;\n        long current7 = 0;\n  \
    \      long remainder8 = 0;\n        long current8 = 0;\n        long remainder9\
    \ = 0;\n        long current9 = 0;\n        long remainder10 = 0;\n        long\
    \ current10 = 0;\n        long remainder11 = 0;\n        long current11 = 0;\n\
    \        long remainder12 = 0;\n        long current12 = 0;\n        long remainder13\
    \ = 0;\n        long current13 = 0;\n        long remainder14 = 0;\n        long\
    \ current14 = 0;\n        long remainder15 = 0;\n        long current15 = 0;\n\
    \        long remainder16 = 0;\n        long current16 = 0;\n        long remainder17\
    \ = 0;\n        long current17 = 0;\n        long remainder18 = 0;\n        long\
    \ current18 = 0;\n        long remainder19 = 0;\n        long current19 = 0;\n\
    \        long remainder20 = 0;\n        long current20 = 0;\n        long remainder21\
    \ = 0;\n        long current21 = 0;\n        long remainder22 = 0;\n        long\
    \ current22 = 0;\n        long remainder23 = 0;\n        long current23 = 0;\n\
    \        long remainder24 = 0;\n        long current24 = 0;\n        long remainder25\
    \ = 0;\n        long current25 = 0;\n        long remainder26 = 0;\n        long\
    \ current26 = 0;\n        long remainder27 = 0;\n        long current27 = 0;\n\
    \        long remainder28 = 0;\n        long current28 = 0;\n        long remainder29\
    \ = 0;\n        long current29 = 0;\n        long remainder30 = 0;\n        long\
    \ current30 = 0;\n        long remainder31 = 0;\n        long current31 = 0;\n\
    \        long remainder32 = 0;\n        long current32 = 0;\n        long remainder33\
    \ = 0;\n        long current33 = 0;\n        long remainder34 = 0;\n        long\
    \ current34 = 0;\n        long remainder35 = 0;\n        long current35 = 0;\n\
    \        long remainder36 = 0;\n        long current36 = 0;\n        long remainder37\
    \ = 0;\n        long current37 = 0;\n        long remainder38 = 0;\n        long\
    \ current38 = 0;\n        long remainder39 = 0;\n        long current39 = 0;\n\
    \        long remainder40 = 0;\n        long current\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmpoy2w27.cs(103,21): error CS1002: ; expected

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        string binary = Convert.ToString(sum, 2);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++) {\n        \
    \    result += binary[i];\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpperas9k2.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpperas9k2.cs(23,16): warning CS0219: The variable ''s'' is assigned but
    its value is never used

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        long remainder = 0;\n        long currentDigit = 0;\n        long\
    \ currentSum = 0;\n        long currentRemainder = 0;\n        bool isNegative\
    \ = false;\n        if (N < 0) {\n            isNegative = true;\n           \
    \ N = N * -1;\n        }\n        while (N !=  0) {\n            currentDigit\
    \ = N % 10;\n            currentSum = currentSum + currentDigit;\n           \
    \ currentRemainder = currentDigit * currentRemainder;\n            N = N / 10;\n\
    \        }\n        if (currentRemainder == 0) {\n            currentSum = currentSum\
    \ - currentRemainder;\n        }\n        if (currentSum < 0) {\n            isNegative\
    \ = true;\n            currentSum = currentSum * -1;\n        }\n        if (isNegative)\
    \ {\n            currentSum = currentSum * -1;\n        }\n        sum = sum +\
    \ currentSum;\n        if (sum > 0) {\n            while (sum > 0) {\n       \
    \         currentSum = sum % 10;\n                currentRemainder = currentRemainder\
    \ * 10;\n                sum = sum / 10;\n                currentSum = currentSum\
    \ + currentRemainder;\n            }\n        }\n        if (currentRemainder\
    \ == 0) {\n            currentSum = currentSum - currentRemainder;\n        }\n\
    \        if (currentSum < 0) {\n            isNegative = true;\n            currentSum\
    \ = currentSum * -1;\n        }\n        if (isNegative) {\n            currentSum\
    \ = currentSum * -1;\n        }\n        result = currentSum.ToString();\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3398b737fb0b49d084deff86d12a65e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3398b737fb0b49d084deff86d12a65e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long power = 1;\n        string result = \"\";\n        while\
    \ (N !=0)\n        {\n            sum = sum + N % 10;\n            N = N / 10;\n\
    \        }\n        sum = sum % 10;\n        if (sum == 0)\n        {\n      \
    \      return result;\n        }\n        while (sum != 0)\n        {\n      \
    \      remainder = sum % 2;\n            sum = sum / 2;\n            power = power\
    \ * 10;\n        }\n        string result = \"\";\n        long temp = 0;\n  \
    \      while (power != 0)\n        {\n            temp = power;\n            power\
    \ = power / 10;\n            result = result + temp.ToString();\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplg8ivib2.cs(43,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmplg8ivib2.cs(43,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 10;\n    \
    \        N /= 10;\n        }\n        long remain = sum;\n        while (remain\
    \ !=0)\n        {\n            result += Convert.ToString(remain % 2);\n     \
    \       remain /= 2;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <457b0fc045a148069021a5327d92a098>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <457b0fc045a148069021a5327d92a098>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long x = N;\n\
    \        while (x > 0) {\n            long y = x % 10;\n            s += Convert.ToString(y)\
    \ + \"\";\n            x /= 10;\n        }\n        return s;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6eec92aa9cd4b798ff99cbffea62938>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6eec92aa9cd4b798ff99cbffea62938>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = N;\n        while (temp > 0)\
    \ {\n            remainder = temp % 2;\n            sum += remainder;\n      \
    \      temp /= 2;\n        }\n        s = Convert.ToString(sum);\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f871028358049bc92979fc21d06b436>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8f871028358049bc92979fc21d06b436>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 10;\n    \
    \        N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n\
    \        {\n            result += binary[i];\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk3jwtwrr.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpk3jwtwrr.cs(31,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        long remainderOfDigits = 0;\n \
    \       long sumOfDigitsInBinary = 0;\n        long remainderOfDigitsInBinary\
    \ = 0;\n        string result = \"\";\n        long digit = 0;\n        long digitInBinary\
    \ = 0;\n        long digitInDecimal = 0;\n        long digitInDecimalInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinary = 0;\n        long digitInDecimalInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinary = 0;\n   \
    \     long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinary = 0;\n     \
    \   long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinary = 0;\n\
    \        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryInBinary\
    \ = 0;\n        long digitInDecimalInBinaryInBinaryInBinaryInBinaryInBinaryInBinaryIn\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4lm522mo.cs(54,78): error CS1002: ; expected

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long digit = 0;\n        while (N !=0)\n\
    \        {\n            digit = N % 10;\n            sum += digit;\n         \
    \   N /= 10;\n        }\n        remainder = N;\n        while (sum != 0)\n  \
    \      {\n            digit = sum % 10;\n            result += Convert.ToString(digit);\n\
    \            sum /= 10;\n        }\n        if (remainder != 0)\n        {\n \
    \           result += Convert.ToString(remainder);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a8a29c605c047c59535b14e7261b77f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1a8a29c605c047c59535b14e7261b77f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 10;\n            sum += remainder;\n            N = N\
    \ / 10;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ reverse = binary.Reverse().ToArray();\n        string result = \"\";\n     \
    \   for (int i = 0; i < reverse.Length; i++)\n        {\n            result +=\
    \ reverse[i];\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n \
    \   Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgj81kbes.cs(33,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpgj81kbes.cs(34,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpgj81kbes.cs(34,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpps9y9yvw.cs(109,18): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 2;\n        long sum = 0;\n        while (N /= 2) {\n            sum +=\
    \ N % 2;\n            N /= 2;\n        }\n        if (sum > 0) {\n           \
    \ result += sum.ToString();\n        }\n        if (remainder > 0) {\n       \
    \     result += remainder.ToString();\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2rgqi7kh.cs(26,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 2)\
    \ {\n            sum += N % 2;\n            N /= 2;\n        }\n        string\
    \ result = \"\";\n        while (sum > 0) {\n            result += Convert.ToString(sum\
    \ % 2, 2);\n            sum /= 2;\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6smhech2.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824513
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum, 2);\n      \
    \  string reverse = binary.Reverse().ToArray();\n        string result = \"\"\
    ;\n        for (int i = 0; i < binary.Length; i++) {\n            result += reverse[i];\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgwu65nm7.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpgwu65nm7.cs(30,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpgwu65nm7.cs(31,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpgwu65nm7.cs(31,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        long remainder = 0;\n        while (N !=0)\n        {\n        \
    \    remainder = N % 2;\n            sum = sum + remainder;\n            N = N\
    \ / 2;\n        }\n        s = Convert.ToString(sum);\n        return s;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <539ba75823914a7693ecfd531295bf1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <539ba75823914a7693ecfd531295bf1b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long digit = 0;\n        while (N /= 2)\
    \ {\n            digit = N % 2;\n            sum += digit;\n            N /= 2;\n\
    \        }\n        while (sum > 0) {\n            remainder = sum % 10;\n   \
    \         sum = sum / 10;\n            result += remainder.ToString();\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpew7fzjsx.cs(27,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N /= 2) {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        if (sum > 0) {\n            result += Convert.ToString(sum);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprly55lpd.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        string binary = Convert.ToString(sum, 2);\n        while (binary.Length\
    \ > 1) {\n            s += binary.Substring(0, 1);\n            binary = binary.Substring(1);\n\
    \        }\n        return s;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpko_1b1xa.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long remainder\
    \ = N;\n        while (remainder > 0) {\n            long digit = remainder %\
    \ 10;\n            s += digit.ToString();\n            remainder = remainder /\
    \ 10;\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <454c31cd92e943618e268bacf537553f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <454c31cd92e943618e268bacf537553f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        while (remainder > 0) {\n            long digit = remainder %\
    \ 10;\n            remainder = remainder / 10;\n            result += Convert.ToString(digit);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d324af5a2d3d4a2586c17aa07430b366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d324af5a2d3d4a2586c17aa07430b366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = binary.PadLeft(binary.Length, '0');\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy6k9e13l.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n  \
    \          N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string bin = binary.PadLeft(binary.Length, '0');\n        string bin2\
    \ = bin.Substring(bin.Length - 2, 2);\n        string bin3 = bin2.Substring(bin2.Length\
    \ - 2, 2);\n        string bin4 = bin3.Substring(bin3.Length - 2, 2);\n      \
    \  string bin5 = bin4.Substring(bin4.Length - 2, 2);\n        string bin6 = bin5.Substring(bin5.Length\
    \ - 2, 2);\n        string bin7 = bin6.Substring(bin6.Length - 2, 2);\n      \
    \  string bin8 = bin7.Substring(bin7.Length - 2, 2);\n        string bin9 = bin8.Substring(bin8.Length\
    \ - 2, 2);\n        string bin10 = bin9.Substring(bin9.Length - 2, 2);\n     \
    \   string bin11 = bin10.Substring(bin10.Length - 2, 2);\n        string bin12\
    \ = bin11.Substring(bin11.Length - 2, 2);\n        string bin13 = bin12.Substring(bin12.Length\
    \ - 2, 2);\n        string bin14 = bin13.Substring(bin13.Length - 2, 2);\n   \
    \     string bin15 = bin14.Substring(bin14.Length - 2, 2);\n        string bin16\
    \ = bin15.Substring(bin15.Length - 2, 2);\n        string bin17 = bin16.Substring(bin16.Length\
    \ - 2, 2);\n        string bin18 = bin17.Substring(bin17.Length - 2, 2);\n   \
    \     string bin19 = bin18.Substring(bin18.Length - 2, 2);\n        string bin20\
    \ = bin19.Substring(bin19.Length - 2, 2);\n        string bin21 = bin20.Substring(bin20.Length\
    \ - 2, 2);\n        string bin22 = bin21.Substring(bin21.Length - 2, 2);\n   \
    \     string bin23 = bin22.Substring(bin22.Length - 2, 2);\n        string bin24\
    \ = bin23.Substring(bin23.Length - 2, 2);\n        string bin25 = bin24.Substring(bin24.Length\
    \ - 2, 2);\n        string bin26 = bin25.Substring(bin25.Length - 2, 2);\n   \
    \     string bin27 = bin26.Substring(bin26.Length - 2, 2);\n        string bin28\
    \ = bin27.Substring(bin27.Length - 2, 2);\n        string bin29 = bin28.Substring(bin28.Length\
    \ - 2, 2);\n        string bin30 = bin29.Substring(bin29.Length - 2, \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbn2y2se4.cs(60,57): error CS1525: Invalid expression term ''}''

    /tmp/tmpbn2y2se4.cs(60,57): error CS1026: ) expected

    /tmp/tmpbn2y2se4.cs(60,57): error CS1002: ; expected

    '
  timestamp: 1659824513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        long remainder = 0;\n        while (N !=0)\n        {\n        \
    \    remainder = N % 2;\n            sum += remainder;\n            N = N / 2;\n\
    \        }\n        string result = Convert.ToString(sum);\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6dfbe8d2b014d29a26a192742317c61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6dfbe8d2b014d29a26a192742317c61>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 10;\n            remainder = remainder / 10;\n        }\n   \
    \     long digit = sum;\n        string s = \"\";\n        while (digit > 0) {\n\
    \            s = Convert.ToString(digit % 2) + s;\n            digit = digit /\
    \ 2;\n        }\n        result = s;\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        while (N !=0)\n        {\n            remainder = N % 2;\n   \
    \         result += remainder.ToString();\n            N = N / 2;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <040dd4168939470d9cbb2bbdda8d1e84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <040dd4168939470d9cbb2bbdda8d1e84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n       \
    \     N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n\
    \        {\n            result += binary[i];\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af59b7d318414e6aa5aff9d2be2fe896>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <af59b7d318414e6aa5aff9d2be2fe896>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long temp = N;\n\
    \        while (temp != 0) {\n            sum += temp % 2;\n            temp /=\
    \ 2;\n        }\n        return Convert.ToString(sum);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002d55703ef345dfa776e627362ab1b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002d55703ef345dfa776e627362ab1b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        long temp2 = 0;\n        string result\
    \ = \"\";\n        long temp3 = N;\n        long temp4 = 0;\n        long temp5\
    \ = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8 =\
    \ 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =\
    \ 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14\
    \ = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17\
    \ = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20\
    \ = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23\
    \ = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26\
    \ = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29\
    \ = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32\
    \ = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35\
    \ = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38\
    \ = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41\
    \ = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44\
    \ = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47\
    \ = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50\
    \ = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53\
    \ = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56\
    \ = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59\
    \ = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62\
    \ = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65\
    \ = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68\
    \ = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71\
    \ = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74\
    \ = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77\
    \ = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80\
    \ = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp83\
    \ = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb0_i4k2j.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpb0_i4k2j.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(25,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(26,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(27,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(29,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(30,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(31,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(32,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(33,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(34,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(35,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(36,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(37,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(38,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(39,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(40,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(41,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpb0_i4k2j.cs(42'
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n    \
    \        N = N / 10;\n        }\n        s = Convert.ToString(sum);\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6a4a40b9a844f6c955c42cef70e9406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6a4a40b9a844f6c955c42cef70e9406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n\
    \            result += binary[i];\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpudc36uld.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpudc36uld.cs(33,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824512
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        if (sum > 0) {\n            s += \"1\";\n            while\
    \ (sum > 1) {\n                s += \"0\";\n                sum -= 1;\n      \
    \      }\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpruvrp_iv.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N !=0)\n\
    \        {\n            sum += N % 2;\n            N /= 2;\n        }\n      \
    \  return Convert.ToString(sum);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dfadfb9964c49609b9366d4d805d122>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0dfadfb9964c49609b9366d4d805d122>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long temp = N;\n\
    \        while (temp != 0) {\n            sum += temp % 2;\n            temp /=\
    \ 2;\n        }\n        return Convert.ToString(sum);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002d55703ef345dfa776e627362ab1b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <002d55703ef345dfa776e627362ab1b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        result = Convert.ToString(sum);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc307466b2524b1c8076aca0d461b449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804452
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        long remainder = 0;\n        long temp = 0;\n        while (N !=0)\n\
    \        {\n            temp = N % 10;\n            sum = sum + temp;\n      \
    \      N = N / 10;\n        }\n        remainder = N;\n        while (sum > 0)\n\
    \        {\n            temp = sum % 2;\n            s = s + temp;\n         \
    \   sum = sum / 2;\n        }\n        if (remainder != 0)\n        {\n      \
    \      temp = remainder % 2;\n            s = s + temp;\n        }\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd9304c7146f4e0e83ba94d3a21de831>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fd9304c7146f4e0e83ba94d3a21de831>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 10;\n    \
    \        N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string reverse = binary.Reverse().ToArray();\n        string result =\
    \ \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n        \
    \    result += reverse[i];\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt_6she03.cs(31,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpt_6she03.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpt_6she03.cs(32,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659804573
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n    \
    \        N = N / 10;\n        }\n        s = Convert.ToString(sum);\n        return\
    \ s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6a4a40b9a844f6c955c42cef70e9406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d6a4a40b9a844f6c955c42cef70e9406>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0) {\n            remainder\
    \ = N % 2;\n            sum += remainder;\n            N = N / 2;\n        }\n\
    \        if (sum > 0) {\n            result = Convert.ToString(sum);\n       \
    \ }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87139d4aeccb495aaa53b5d8af3f9b5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <87139d4aeccb495aaa53b5d8af3f9b5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N % 10;\n        long sum = 0;\n        while (N /= 10) {\n            sum\
    \ += N % 10;\n            N /= 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        if (binary.Length > 1) {\n            binary = binary.Insert(0, \"0\"\
    );\n        }\n        if (remainder > 0) {\n            binary = binary.Insert(binary.Length\
    \ - 1, remainder.ToString());\n        }\n        result = binary;\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp225_akba.cs(26,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum += N % 2;\n     \
    \       N /= 2;\n        }\n        string binary = Convert.ToString(sum);\n \
    \       string reverse = binary.Reverse().ToArray();\n        string result =\
    \ \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n        \
    \    result += reverse[i];\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuxeje2w3.cs(31,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmpuxeje2w3.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmpuxeje2w3.cs(32,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long x = N;\n\
    \        long y = 1;\n        while (x > 0) {\n            long z = x % 10;\n\
    \            s += Convert.ToString(z);\n            x /= 10;\n            y *=\
    \ 10;\n        }\n        return s;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2634f6fbfc34cc19232bce9c4e19f38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e2634f6fbfc34cc19232bce9c4e19f38>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long digit = 0;\n        string result = \"\";\n        while\
    \ (N !=0)\n        {\n            digit = N % 10;\n            sum += digit;\n\
    \            N /= 10;\n        }\n        remainder = N;\n        while (sum >\
    \ 0)\n        {\n            digit = sum % 10;\n            result += Convert.ToString(digit);\n\
    \            sum /= 10;\n        }\n        if (remainder != 0)\n        {\n \
    \           result += Convert.ToString(remainder);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6a7324c4ab04770a30387aed32eea03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6a7324c4ab04770a30387aed32eea03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum = sum + remainder;\n            N\
    \ = N / 2;\n        }\n        string binary = Convert.ToString(sum);\n      \
    \  string result = binary.PadLeft(binary.Length, '0');\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdsgfy530.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 10)\
    \ {\n            sum += N % 10;\n            N /= 10;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpny5i8sd3.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpps9y9yvw.cs(109,18): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (true) {\n            int digit =\
    \ remainder % 2;\n            sum += digit;\n            remainder = remainder\
    \ / 2;\n            if (remainder == 0)\n                break;\n            s\
    \ += (digit.ToString());\n        }\n        return s.PadLeft(s.Length, '0');\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqt0hl84b.cs(27,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ reverse = binary.Reverse().ToArray();\n        string result = \"\";\n     \
    \   for (int i = 0; i < reverse.Length; i++)\n        {\n            result +=\
    \ reverse[i];\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n \
    \   Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4vpvbrth.cs(33,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    /tmp/tmp4vpvbrth.cs(34,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    /tmp/tmp4vpvbrth.cs(34,16): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long sum\
    \ = 0;\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n  \
    \          N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string bin = binary.PadLeft(binary.Length, '0');\n        string bin2\
    \ = bin.Substring(0, bin.Length - 1);\n        string bin3 = bin2.Substring(0,\
    \ bin2.Length - 1);\n        string bin4 = bin3.Substring(0, bin3.Length - 1);\n\
    \        string bin5 = bin4.Substring(0, bin4.Length - 1);\n        string bin6\
    \ = bin5.Substring(0, bin5.Length - 1);\n        string bin7 = bin6.Substring(0,\
    \ bin6.Length - 1);\n        string bin8 = bin7.Substring(0, bin7.Length - 1);\n\
    \        string bin9 = bin8.Substring(0, bin8.Length - 1);\n        string bin10\
    \ = bin9.Substring(0, bin9.Length - 1);\n        string bin11 = bin10.Substring(0,\
    \ bin10.Length - 1);\n        string bin12 = bin11.Substring(0, bin11.Length -\
    \ 1);\n        string bin13 = bin12.Substring(0, bin12.Length - 1);\n        string\
    \ bin14 = bin13.Substring(0, bin13.Length - 1);\n        string bin15 = bin14.Substring(0,\
    \ bin14.Length - 1);\n        string bin16 = bin15.Substring(0, bin15.Length -\
    \ 1);\n        string bin17 = bin16.Substring(0, bin16.Length - 1);\n        string\
    \ bin18 = bin17.Substring(0, bin17.Length - 1);\n        string bin19 = bin18.Substring(0,\
    \ bin18.Length - 1);\n        string bin20 = bin19.Substring(0, bin19.Length -\
    \ 1);\n        string bin21 = bin20.Substring(0, bin20.Length - 1);\n        string\
    \ bin22 = bin21.Substring(0, bin21.Length - 1);\n        string bin23 = bin22.Substring(0,\
    \ bin22.Length - 1);\n        string bin24 = bin23.Substring(0, bin23.Length -\
    \ 1);\n        string bin25 = bin24.Substring(0, bin24.Length - 1);\n        string\
    \ bin26 = bin25.Substring(0, bin25.Length - 1);\n        string bin27 = bin26.Substring(0,\
    \ bin26.Length - 1);\n        string bin28 = bin27.Substring(0, bin27.Length -\
    \ 1);\n        string bin29 = bin28.Substring(0, bin28.Length - 1);\n        string\
    \ bin30 = bin29.Substring(0, bin29.Length - \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqt0lftq8.cs(60,57): error CS1525: Invalid expression term ''}''

    /tmp/tmpqt0lftq8.cs(60,57): error CS1026: ) expected

    /tmp/tmpqt0lftq8.cs(60,57): error CS1002: ; expected

    '
  timestamp: 1659824514
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long m = N;\n\
    \        long sum = 0;\n        while (m > 0) {\n            sum += m % 10;\n\
    \            m /= 10;\n        }\n        if (sum > 0) {\n            s += Convert.ToString(sum);\n\
    \        }\n        return s;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63e213eae7b145ceb83972806a11c722>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63e213eae7b145ceb83972806a11c722>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string s = \"\";\n        long sum =\
    \ 0;\n        while (N /= 2) {\n            sum += N % 2;\n            N /= 2;\n\
    \        }\n        if (sum > 0) {\n            s += Convert.ToString(sum);\n\
    \        }\n        return s;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv6yv25zs.cs(25,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 10)\
    \ {\n            sum += N % 10;\n            N /= 10;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpny5i8sd3.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = N;\n        long sum = 0;\n        while (remainder > 0) {\n            sum\
    \ += remainder % 2;\n            remainder = remainder >> 1;\n        }\n    \
    \    result = Convert.ToString(sum);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d2a66ede56d4d04b279a0f89b22dd37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d2a66ede56d4d04b279a0f89b22dd37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string s = \"\"\
    ;\n        while (N !=0)\n        {\n            sum += N % 2;\n            N\
    \ /= 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = \"\";\n        for (int i = 0; i < binary.Length; i++)\n        {\n\
    \            result += binary[i];\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5697d793b57141b7aa356bfa48a58564>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5697d793b57141b7aa356bfa48a58564>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804573
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 2;\n            sum += remainder;\n            N = N\
    \ / 2;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ reverse = binary.Reverse().ToArray();\n        foreach (char c in reverse)\n\
    \        {\n            result += Convert.ToString(c);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwmkic18m.cs(33,26): error CS0029: Cannot implicitly convert type ''char[]''
    to ''string''

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        string result = \"\";\n        long remainder\
    \ = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2 = 0;\n\
    \        long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n \
    \       long temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n  \
    \      long temp9 = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n \
    \       long temp12 = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n\
    \        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n\
    \        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n\
    \        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n\
    \        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n\
    \        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n\
    \        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n\
    \        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n\
    \        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n\
    \        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n\
    \        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n\
    \        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n\
    \        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n\
    \        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n\
    \        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n\
    \        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n\
    \        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n\
    \        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n\
    \        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n\
    \        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n\
    \        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n\
    \        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n\
    \        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n\
    \        long temp81 = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\
    \        long temp\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpps9y9yvw.cs(109,18): error CS1002: ; expected

    '
  timestamp: 1659824510
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0)\n        {\n            remainder = N % 10;\n            sum =\
    \ sum + remainder;\n            N = N / 10;\n        }\n        sumOfDigits =\
    \ sum;\n        string binary = Convert.ToString(sumOfDigits);\n        string\
    \ binary = binary.PadLeft(sumOfDigits.ToString().Length, '0');\n        string\
    \ result = binary;\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm7b0d5lo.cs(35,16): error CS0128: A local variable or function named ''binary''
    is already defined in this scope

    /tmp/tmpm7b0d5lo.cs(36,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        string result = \"\";\n        while (N !=0)\n        {\n    \
    \        remainder = N % 10;\n            sum += remainder;\n            N = N\
    \ / 10;\n        }\n        string binary = Convert.ToString(sum);\n        string\
    \ result = Convert.ToString(sum);\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps15g3ts8.cs(33,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ while (N !=0)\n        {\n            remainder = N % 2;\n            sum +=\
    \ remainder;\n            sumOfDigits += remainder;\n            N = N / 2;\n\
    \        }\n        string binary = Convert.ToString(sumOfDigits);\n        string\
    \ result = Convert.ToString(sum);\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n\
    \    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphi7livfg.cs(35,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        while (N /= 10)\
    \ {\n            sum += N % 10;\n            N /= 10;\n        }\n        return\
    \ Convert.ToString(sum);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n    Debug.Assert(Solve((150L)).Equals((\"\
    110\")));\n    Debug.Assert(Solve((147L)).Equals((\"1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"\
    1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpny5i8sd3.cs(24,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659824514
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long temp = 0;\n        string result = \"\";\n        while (N\
    \ !=0)\n        {\n            remainder = N % 2;\n            temp = sum + remainder;\n\
    \            sum = temp;\n            N = N / 2;\n        }\n        result =\
    \ Convert.ToString(sum);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"1\")));\n \
    \   Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f794655a63d42219d0269d8113c438b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0f794655a63d42219d0269d8113c438b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824511
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long remainder2 = 0;\n        long remainder3 = 0;\n        long\
    \ remainder4 = 0;\n        long remainder5 = 0;\n        long remainder6 = 0;\n\
    \        long remainder7 = 0;\n        long remainder8 = 0;\n        long remainder9\
    \ = 0;\n        long remainder10 = 0;\n        long remainder11 = 0;\n       \
    \ long remainder12 = 0;\n        long remainder13 = 0;\n        long remainder14\
    \ = 0;\n        long remainder15 = 0;\n        long remainder16 = 0;\n       \
    \ long remainder17 = 0;\n        long remainder18 = 0;\n        long remainder19\
    \ = 0;\n        long remainder20 = 0;\n        long remainder21 = 0;\n       \
    \ long remainder22 = 0;\n        long remainder23 = 0;\n        long remainder24\
    \ = 0;\n        long remainder25 = 0;\n        long remainder26 = 0;\n       \
    \ long remainder27 = 0;\n        long remainder28 = 0;\n        long remainder29\
    \ = 0;\n        long remainder30 = 0;\n        long remainder31 = 0;\n       \
    \ long remainder32 = 0;\n        long remainder33 = 0;\n        long remainder34\
    \ = 0;\n        long remainder35 = 0;\n        long remainder36 = 0;\n       \
    \ long remainder37 = 0;\n        long remainder38 = 0;\n        long remainder39\
    \ = 0;\n        long remainder40 = 0;\n        long remainder41 = 0;\n       \
    \ long remainder42 = 0;\n        long remainder43 = 0;\n        long remainder44\
    \ = 0;\n        long remainder45 = 0;\n        long remainder46 = 0;\n       \
    \ long remainder47 = 0;\n        long remainder48 = 0;\n        long remainder49\
    \ = 0;\n        long remainder50 = 0;\n        long remainder51 = 0;\n       \
    \ long remainder52 = 0;\n        long remainder53 = 0;\n        long remainder54\
    \ = 0;\n        long remainder55 = 0;\n        long remainder56 = 0;\n       \
    \ long remainder57 = 0;\n        long remainder58 = 0;\n        long remainder59\
    \ = 0;\n        long remainder60 = 0;\n        long remainder61 = 0;\n       \
    \ long remainder62 = 0;\n        long remainder63 = 0;\n        long remainder64\
    \ = 0;\n        long remainder65 = 0;\n        long remainder66 = 0;\n       \
    \ long remainder67 = 0;\n        long remainder68 = 0;\n        long remainder69\
    \ = 0;\n        long remainder70 = 0;\n        long remainder71 = 0;\n       \
    \ long remainder72 = 0;\n        long remainder73 = 0;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yx2hgnw.cs(23,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp5yx2hgnw.cs(24,14): warning CS0219: The variable ''remainder'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(25,14): warning CS0219: The variable ''remainder2'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(26,14): warning CS0219: The variable ''remainder3'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(27,14): warning CS0219: The variable ''remainder4'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(28,14): warning CS0219: The variable ''remainder5'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(29,14): warning CS0219: The variable ''remainder6'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(30,14): warning CS0219: The variable ''remainder7'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(31,14): warning CS0219: The variable ''remainder8'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(32,14): warning CS0219: The variable ''remainder9'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(33,14): warning CS0219: The variable ''remainder10'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(34,14): warning CS0219: The variable ''remainder11'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(35,14): warning CS0219: The variable ''remainder12'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(36,14): warning CS0219: The variable ''remainder13'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(37,14): warning CS0219: The variable ''remainder14'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(38,14): warning CS0219: The variable ''remainder15'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(39,14): warning CS0219: The variable ''remainder16'' is assigned
    but its value is never used

    /tmp/tmp5yx2hgnw.cs(40,14): warning CS0219: The vari'
  timestamp: 1659804451
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        string result\
    \ = \"\";\n        while (N !=0)\n        {\n            sum = sum + N % 10;\n\
    \            N = N / 10;\n        }\n        string binary = Convert.ToString(sum);\n\
    \        string bin = binary.PadLeft(binary.Length, '0');\n        string result\
    \ = bin.Substring(0, bin.Length - 1);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3vboalaf.cs(32,16): error CS0128: A local variable or function named ''result''
    is already defined in this scope

    '
  timestamp: 1659824515
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a positive integer N, return the total sum of its\
    \ digits in binary.\n    // Example\n    // >>> Solve((1000L))\n    // (\"1\"\
    )\n    // >>> Solve((150L))\n    // (\"110\")\n    // >>> Solve((147L))\n    //\
    \ (\"1100\")\n    // Variables:\n    // @N integer\n    // Constraints: 0 \u2264\
    \ N \u2264 10000.\n    // Output:\n    // a string of binary number\n    public\
    \ static string Solve(long N) {\n        long sum = 0;\n        long remainder\
    \ = 0;\n        long sumOfDigits = 0;\n        string result = \"\";\n       \
    \ long currentDigit = 0;\n        long currentSum = 0;\n        long currentSumOfDigits\
    \ = 0;\n        long currentRemainder = 0;\n        long currentRemainderOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigits = 0;\n        long currentRemainderOfSumOfDigitsAndRemainder\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfDigits = 0;\n\
    \        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigits = 0;\n  \
    \      long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainder\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainder\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainder\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainder\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfDigits\
    \ = 0;\n        long currentRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAndRemainderOfSumOfDigitsAnd\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solve((1000L)).Equals((\"\
    1\")));\n    Debug.Assert(Solve((150L)).Equals((\"110\")));\n    Debug.Assert(Solve((147L)).Equals((\"\
    1100\")));\n    Debug.Assert(Solve((333L)).Equals((\"1001\")));\n    Debug.Assert(Solve((963L)).Equals((\"\
    10010\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvitr9qd8.cs(47,146): error CS1002: ; expected

    '
  timestamp: 1659824514

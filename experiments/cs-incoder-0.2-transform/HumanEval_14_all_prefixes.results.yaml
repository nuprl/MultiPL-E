language: cs
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, new List<string>())) {\n   \
    \         result.Add(s);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpunm5vrsx.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805455
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n\
    \            return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n\
    \        prefixes.Add(prefix.ToString());\n        for (int i = 1; i < str.Length;\
    \ i++) {\n            prefix.Append(str[i]);\n            prefixes.Add(prefix.ToString());\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdf23d16c6484a80aadba8759fe07eea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdf23d16c6484a80aadba8759fe07eea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805455
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.').Select(x\
    \ => x.ToString()));\n        prefixes.AddRange(str.SkipWhile(x => x != '.').TakeWhile(x\
    \ => x != '.').Select(x => x.ToString()));\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf569333f0e44f5080b7c8f2b794a855>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cf569333f0e44f5080b7c8f2b794a855>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805455
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder(str.Length);\n        prefix.Append(str);\n\
    \        do {\n            result.Add(prefix.ToString());\n            prefix.Remove(0,\
    \ 1);\n        } while (prefix.Length > 0);\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: length\n  at System.Text.StringBuilder.Remove (System.Int32 startIndex,\
    \ System.Int32 length) [0x00033] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.AllPrefixes (System.String str) [0x00029] in <d94b967d7a1d4c7d9e157829276f5db1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <d94b967d7a1d4c7d9e157829276f5db1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: length\n  at System.Text.StringBuilder.Remove (System.Int32 startIndex,\
    \ System.Int32 length) [0x00033] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at\
    \ Problem.AllPrefixes (System.String str) [0x00029] in <d94b967d7a1d4c7d9e157829276f5db1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <d94b967d7a1d4c7d9e157829276f5db1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805455
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.'));\n\
    \        prefixes.AddRange(str.SkipWhile(x => x != '.').TakeWhile(x => x != '.'));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppvx40xpo.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    /tmp/tmppvx40xpo.cs(15,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '\\0').Select(c\
    \ => c.ToString()));\n        prefixes.AddRange(str.TakeWhile(c => c != '\\0').Reverse().Select(c\
    \ => c.ToString()));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <686a39f838f447fe94f97de9ec2ca8be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <686a39f838f447fe94f97de9ec2ca8be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805455
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (char c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[]{c}));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu58potcz.cs(15,54): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805455
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedk4hj6g.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz8199svc.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjg0_as9y.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, \"\")) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcs39okdd.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00026] in <35bf34ccd0be4ce29317e80c08b5f319>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <35bf34ccd0be4ce29317e80c08b5f319>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00026] in <35bf34ccd0be4ce29317e80c08b5f319>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <35bf34ccd0be4ce29317e80c08b5f319>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n\
    \        result.Add(prefix.ToString());\n        var i = 1;\n        while (i\
    \ < str.Length) {\n            prefix.Append(str[i]);\n            result.Add(prefix.ToString());\n\
    \            i++;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83e710d4d3c44f2bae67b5af71c3aa9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <83e710d4d3c44f2bae67b5af71c3aa9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.Add(prefix.ToString());\n \
    \           prefix.Remove(0, 1);\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6b11cea011f4423b325729e00b6ab2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6b11cea011f4423b325729e00b6ab2f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0rgtvb1a.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(\"\");\n        for (int i = 0; i < str.Length; i++) {\n\
    \            prefixes.Add(prefixes[prefixes.Count - 1] + str[i]);\n        }\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f1acabed51b4989a8636d6ff835702e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f1acabed51b4989a8636d6ff835702e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.AddRange(AllPrefixes(prefix.ToString()));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <472cef4d3ffc45f7b41be64a905ba5d6>:0 \n"
  stdout: None
  timestamp: 1659824637
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.AddRange(AllPrefixes(prefix.ToString()));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <472cef4d3ffc45f7b41be64a905ba5d6>:0 \n"
  stdout: None
  timestamp: 1659824637
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.'));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd6xirhn6.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, new List<string>(), result))\
    \ {\n            result.Add(s);\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx96vqbus.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_159wqon.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        string prefix =\
    \ \"\";\n        foreach (char c in str) {\n            prefix = prefix + c;\n\
    \            prefixes.Add(prefix);\n        }\n        foreach (string p in prefixes)\
    \ {\n            result.Add(p);\n            foreach (string s in AllPrefixes(p))\
    \ {\n                result.Add(s);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7036d997b9341988097a341f40cb38b>:0 \n"
  stdout: None
  timestamp: 1659824637
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        foreach (var c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwmpa6q8x.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjg0_as9y.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n\
    \            return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str);\n        int len = str.Length;\n        while (len\
    \ > 0) {\n            prefixes.Add(str.Substring(0, len));\n            str =\
    \ str.Substring(len);\n            len--;\n        }\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bedd408f36cb4863999e7e9a0d9908d5>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index and length must refer to a location\
    \ within the string.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00042] in <bedd408f36cb4863999e7e9a0d9908d5>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <bedd408f36cb4863999e7e9a0d9908d5>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String\
    \ str) [0x00042] in <bedd408f36cb4863999e7e9a0d9908d5>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <bedd408f36cb4863999e7e9a0d9908d5>:0 \n"
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        string prefix = str.Substring(0,\
    \ 1);\n        foreach (string s in AllPrefixes(str.Substring(1, str.Length -\
    \ 1))) {\n            prefixes.Add(prefix + s);\n        }\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69c347413af74b40ba2124f6cdcc612c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69c347413af74b40ba2124f6cdcc612c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        var prefixes = new List<string>();\n\
    \        prefixes.Add(\"\");\n        foreach (var c in str) {\n            prefixes.AddRange(AllPrefixes(c).Select(p\
    \ => p + c));\n        }\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz3pqm7pg.cs(17,43): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnwzhk6n_.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        var longest = str.Length;\n        var shortest = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str[i] == str[shortest]) {\n\
    \                prefixes.Add(str[shortest]);\n                shortest++;\n \
    \           } else {\n                prefixes.Add(str[shortest]);\n         \
    \       shortest++;\n                longest--;\n            }\n        }\n  \
    \      if (longest == 0) {\n            prefixes.Add(str[shortest]);\n       \
    \ }\n        return prefixes;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprkkpuzu9.cs(18,30): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmprkkpuzu9.cs(21,30): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmprkkpuzu9.cs(27,26): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphw6qsbys.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n\
    \            return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ccaa272e2d481bae1eb7810cac6eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ccaa272e2d481bae1eb7810cac6eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixes(str, new List<string>()));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4b794ym2.cs(14,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.'));\n\
    \        prefixes.AddRange(str.SkipWhile(c => c != '.').TakeWhile(c => c != '.'));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzfjv6dht.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    /tmp/tmpzfjv6dht.cs(15,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return new\
    \ List<string>();\n        List<string> prefixes = new List<string>();\n     \
    \   prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnesl1c9q.cs(16,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedk4hj6g.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        foreach (var c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] {c}));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9dnn6pnx.cs(15,57): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new List<string>();\n        foreach (var c in str) {\n\
    \            prefix.Add(c);\n            if (prefix.Count > result.Count) {\n\
    \                result = prefix;\n                prefix = new List<string>();\n\
    \            }\n        }\n        if (prefix.Count > result.Count) {\n      \
    \      result = prefix;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpikifib0n.cs(16,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n\
    \            return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str.Substring(0, 1));\n        for (int i = 1; i < str.Length;\
    \ i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return\
    \ prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12b117ca00e249248664f81ee6c204a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <12b117ca00e249248664f81ee6c204a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n\
    \            return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ccaa272e2d481bae1eb7810cac6eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22ccaa272e2d481bae1eb7810cac6eb0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return new\
    \ List<string>();\n        List<string> prefixes = new List<string>();\n     \
    \   prefixes.Add(str);\n        foreach (string s in AllPrefixes(str.Substring(1))\
    \ {\n            prefixes.Add(s + str.Substring(0, s.Length));\n        }\n  \
    \      return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8ry9bfco.cs(16,60): error CS1026: ) expected

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmkk7ae_i.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprf6if96j.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_159wqon.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n\
    \            prefix.Remove(0, 1);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20d00063bad84d8e95da0af76d438a1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20d00063bad84d8e95da0af76d438a1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjg0_as9y.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        var prefixLength = 0;\n  \
    \      foreach (var c in str) {\n            if (prefixLength == 0 && c == '\\\
    0') {\n                result.Add(prefix.ToString());\n                prefix\
    \ = new StringBuilder();\n                prefixLength = 0;\n            }\n \
    \           prefix.Append(c);\n            prefixLength++;\n        }\n      \
    \  if (prefix.Length > 0) {\n            result.Add(prefix.ToString());\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a81756dd46e4d26ac29cfaee9263e04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8a81756dd46e4d26ac29cfaee9263e04>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (char c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[]{c}));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu58potcz.cs(15,54): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805455
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.'));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd6xirhn6.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        bool isFirst = true;\n        foreach (char c in str) {\n           \
    \ if (isFirst) {\n                result.Add(c.ToString());\n                isFirst\
    \ = false;\n            } else {\n                result.Add((c.ToString() + result[0]).ToLower());\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2825b9fec2c346019d40a7a4c06e7917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2825b9fec2c346019d40a7a4c06e7917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ List<string>() { c }));\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe8_magy4.cs(15,62): error CS1950: The best overloaded Add method ''List<string>.Add(string)''
    for the collection initializer has some invalid arguments

    /tmp/tmpe8_magy4.cs(15,62): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.Select(c => c.ToString()));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefixes = new List<string>();\n        var current = new List<string>();\n\
    \        current.Add(str);\n        while (current.Count > 0) {\n            var\
    \ prefix = current.First();\n            current.RemoveAt(0);\n            prefixes.Add(prefix);\n\
    \            foreach (var c in prefix) {\n                if (current.Count ==\
    \ 0) {\n                    break;\n                }\n                var next\
    \ = current.First();\n                current.RemoveAt(0);\n                current.Add(next);\n\
    \                result.Add(prefix + c);\n            }\n        }\n        return\
    \ prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cffd2f0fe384681ba6486a0d3e6a8e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cffd2f0fe384681ba6486a0d3e6a8e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{\"\"\
    }));\n        for (int i = 0; i < str.Length; i++) {\n            prefixes.AddRange(new\
    \ List<string>(new string[]{prefixes[prefixes.Count - 1] + str[i]}));\n      \
    \  }\n        return prefixes;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9da68fbc197140ecaa2b38ad7e1b6b34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9da68fbc197140ecaa2b38ad7e1b6b34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixes(str, new List<string>())) {\n      \
    \      result.Add(s);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxpjo3w0e.cs(14,30): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> result =\
    \ new List<string>();\n        string prefix = str.Substring(0, 1);\n        result.Add(prefix);\n\
    \        List<string> prefixes = AllPrefixes(str.Substring(1));\n        foreach\
    \ (string p in prefixes)\n            result.Add(prefix + p);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa1669e0a01047b2b60d3f17e0644c16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fa1669e0a01047b2b60d3f17e0644c16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_159wqon.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str.Substring(0, 1));\n        prefixes.AddRange(AllPrefixes(str.Substring(1,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6f5f7b28f7dd42308ccb9337279e85fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6f5f7b28f7dd42308ccb9337279e85fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuv8afsm3.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.').Select(c\
    \ => c.ToString()));\n        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length\
    \ - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00060] in <fdec61a9f70043ee8623f0ee4df815ac>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <fdec61a9f70043ee8623f0ee4df815ac>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00060] in <fdec61a9f70043ee8623f0ee4df815ac>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <fdec61a9f70043ee8623f0ee4df815ac>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz8199svc.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0rgtvb1a.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.'));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbyytcm3l.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return null;\n\
    \        var result = new List<string>();\n        var prefix = new List<string>();\n\
    \        foreach (var c in str) {\n            prefix.Add(c);\n            if\
    \ (prefix.Count > result.Count) result = prefix;\n            prefix.RemoveAt(prefix.Count\
    \ - 1);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsh8x5n4p.cs(17,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824633
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var s in str.Split(',')) {\n            result.AddRange(AllPrefixes(s));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659824638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        string prefix = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            prefix = prefix + str[i];\n            prefixes.AddRange(AllPrefixes(prefix));\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1c83b58b4f547b39db4ce8ce1038f89>:0 \n"
  stdout: None
  timestamp: 1659824638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (string s in AllPrefixesHelper(str)) {\n  \
    \          prefixes.Add(s);\n        }\n        return prefixes;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7f9pim7.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmkk7ae_i.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix += str[i];\n    \
    \        prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8777d6413c6451b9531c5f3342e78eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8777d6413c6451b9531c5f3342e78eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefixes = new List<string>();\n        var longest = str.Length;\n\
    \        var shortest = 0;\n        foreach (var c in str) {\n            prefixes.Add(c);\n\
    \            if (longest - shortest > 1) {\n                shortest = longest;\n\
    \            }\n            longest--;\n        }\n        foreach (var p in prefixes)\
    \ {\n            result.Add(p);\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0s0wedxp.cs(18,26): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmkk7ae_i.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { (string)c, }));\n        }\n        return prefixes;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpernefdhl.cs(15,58): error CS0030: Cannot convert type ''char'' to ''string''

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedk4hj6g.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprf6if96j.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0rgtvb1a.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprf6if96j.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprf6if96j.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        prefixes.Add(str);\n        return prefixes;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1182104c5bb4ec38b1d4b315d43309d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1182104c5bb4ec38b1d4b315d43309d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.AddRange(AllPrefixes(str, 0, new List<string>()));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfbd1vx2r.cs(16,27): error CS1501: No overload for method ''AllPrefixes''
    takes 3 arguments

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (string s in AllPrefixesHelper(str)) {\n  \
    \          prefixes.Add(s);\n        }\n        return prefixes;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7f9pim7.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <34681a13559c42e49e416d71cfec1c9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f844770d01ec4fa19ef38ac15e165c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f844770d01ec4fa19ef38ac15e165c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new List<string>();\n        foreach (var c in str) {\n\
    \            prefix.Add(c);\n            if (prefix.Count > result.Count) {\n\
    \                result = prefix;\n                prefix = new List<string>();\n\
    \            }\n        }\n        if (prefix.Count > result.Count) {\n      \
    \      result = prefix;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpikifib0n.cs(16,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedk4hj6g.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefixes = new List<string>();\n        foreach (var c in str) {\n\
    \            prefixes.Add(c);\n            result.AddRange(AllPrefixes(prefixes.ToArray()));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf4id8tjw.cs(16,26): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpf4id8tjw.cs(17,41): error CS1503: Argument 1: cannot convert from ''string[]''
    to ''string''

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz8199svc.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphw6qsbys.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.Add(prefix.ToString());\n \
    \           prefix.Remove(0, 1);\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bec757a5615e4e80a5c674c2aacf208e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bec757a5615e4e80a5c674c2aacf208e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.Select(c => c.ToString()));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <1a9b6317785d4fe980e64dfb991b7be9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnwzhk6n_.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedk4hj6g.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.').Select(x\
    \ => x.ToString()));\n        prefixes.AddRange(str.TakeWhile(x => x != '.').Reverse().Select(x\
    \ => x.ToString()));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5445e31643fe49718199d3e0310cb57c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5445e31643fe49718199d3e0310cb57c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <789de67f208f4410a33737060605e3d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <789de67f208f4410a33737060605e3d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        var prefixLength = str.Length;\n        var currentPrefix = new StringBuilder(str.Substring(0,\
    \ prefixLength));\n        while (currentPrefix.Length > 0) {\n            prefixes.Add(currentPrefix.ToString());\n\
    \            currentPrefix.Remove(0, 1);\n        }\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d327a1a7af3c4a27b344f4003c62f9de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d327a1a7af3c4a27b344f4003c62f9de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmkk7ae_i.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n\
    \        while (len > 0) {\n            prefixes.Add(str.Substring(0, len));\n\
    \            str = str.Substring(len);\n            len--;\n        }\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <66487a0fb956496ab6a1200769291dfd>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index and length must refer to a location\
    \ within the string.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00034] in <66487a0fb956496ab6a1200769291dfd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <66487a0fb956496ab6a1200769291dfd>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String\
    \ str) [0x00034] in <66487a0fb956496ab6a1200769291dfd>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <66487a0fb956496ab6a1200769291dfd>:0 \n"
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string prefix in AllPrefixesHelper(str)) {\n            result.Add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpecl789ev.cs(14,35): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f844770d01ec4fa19ef38ac15e165c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f844770d01ec4fa19ef38ac15e165c34>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(str.TakeWhile(x\
    \ => x != '.')));\n        prefixes.AddRange(new List<string>(str.TakeWhile(x\
    \ => x == '.')));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwadm4isv.cs(14,44): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''int''

    /tmp/tmpwadm4isv.cs(15,44): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''int''

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjg0_as9y.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, new List<string>())) {\n   \
    \         result.Add(s);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpunm5vrsx.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805455
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz8199svc.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        var prefixLength = str.Length;\n        var prefixLengths = Enumerable.Range(0,\
    \ prefixLength).ToArray();\n        foreach (var prefixLength in prefixLengths)\
    \ {\n            var prefix = new StringBuilder(str);\n            prefix.Remove(0,\
    \ prefixLength);\n            prefixes.Add(prefix.ToString());\n        }\n  \
    \      return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqzqi2ev9.cs(16,22): error CS0136: A local or parameter named ''prefixLength''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e62c50be0e324d7cb483f2f1ad208fb3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824632
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return null;\n\
    \        List<string> result = new List<string>();\n        foreach (var c in\
    \ str) {\n            result.AddRange(AllPrefixes(new string[] { c }));\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuzsg7nfc.cs(16,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        var prefix = new List<string>();\n        foreach (var c in str) {\n\
    \            prefix.Add(c);\n            prefixes.Add(string.Join(\"\", prefix));\n\
    \            prefix.Clear();\n        }\n        return prefixes;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzx0t0jt0.cs(16,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkir9ufxw.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659824633
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ List<string> { (string)c }));\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp44wqn82h.cs(15,60): error CS0030: Cannot convert type ''char'' to ''string''

    '
  timestamp: 1659824633
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dj04b3c.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659824632
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.Add(prefix.ToString());\n \
    \           prefix.Remove(0, 1);\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bec757a5615e4e80a5c674c2aacf208e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bec757a5615e4e80a5c674c2aacf208e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659824633

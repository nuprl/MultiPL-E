name: HumanEval_15_string_sequence
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return a string containing space-delimited numbers starting\
  \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n  \
  \  // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string\
  \ StringSequence(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
  0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
  0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
completions: ["        StringBuilder sb = new StringBuilder();\n        long i = 0;\n\
    \        while (n > 0) {\n            sb.Append((n % 10).ToString());\n      \
    \      n /= 10;\n            i++;\n        }\n        if (i < 10) {\n        \
    \    sb.Append((n % 10).ToString());\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        long i = 0;\n        while\
    \ (n > 0) {\n            sb.Append((n % 10).ToString());\n            n /= 10;\n\
    \            i++;\n        }\n        if (i < 1) {\n            sb.Append(\"0\"\
    );\n        }\n        return sb.ToString();", "        string s = \"\";\n   \
    \     long i = n;\n        while (i != 0) {\n            s = s + \" \" + i;\n\
    \            i /= 10;\n        }\n        return s;", "        StringBuilder sb\
    \ = new StringBuilder();\n        long i = 0;\n        while (i < n) {\n     \
    \       sb.Append(Convert.ToString(i, 2).PadLeft(8, '0'));\n            i += 1;\n\
    \        }\n        return sb.ToString();", "        string s = \"\";\n      \
    \  long i = 0;\n        while (n > 0) {\n            s = s + \" \" + i;\n    \
    \        n = n - 1;\n            i = i + 1;\n        }\n        return s;", " \
    \       StringBuilder sb = new StringBuilder();\n        long i = 0;\n       \
    \ while (i < n) {\n            sb.Append((i++).ToString());\n        }\n     \
    \   return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        long i = 0;\n        while (i < n) {\n            sb.Append(Convert.ToString(i,\
    \ 10));\n            i++;\n        }\n        return sb.ToString();", "      \
    \  string s = \"\";\n        long i = n;\n        while (i != 0) {\n         \
    \   s = s + \" \" + i;\n            i /= 10;\n        }\n        return s;", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n;\
    \ i++) {\n            sb.Append((i + 1).ToString());\n        }\n        return\
    \ sb.ToString();", "        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < n; i++) {\n            sb.Append((long)i);\n            sb.Append(\"\
    \ \");\n        }\n        return sb.ToString();", "        StringBuilder sb =\
    \ new StringBuilder();\n        long i = 0;\n        while (i < n) {\n       \
    \     sb.Append((i++).ToString());\n        }\n        return sb.ToString();",
  "        string s = \"\";\n        for (int i = 0; i < n; i++) {\n            s\
    \ += i;\n        }\n        return s;", "        StringBuilder sb = new StringBuilder();\n\
    \        long i = 0;\n        while (i < n) {\n            sb.Append((i++).ToString());\n\
    \        }\n        return sb.ToString();", "        string s = \"\";\n      \
    \  for (long i = 0; i < n; i++) {\n            s += \" \" + i;\n        }\n  \
    \      return s;", "        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < n; i++) {\n            sb.Append((i + 1).ToString());\n    \
    \    }\n        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (long i = 0; i < n; i++) {\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            sb.Append((long)i);\n    \
    \        sb.Append(\" \");\n        }\n        return sb.ToString();", "     \
    \   string s = \"\";\n        for (int i = 0; i < n; i++) {\n            s +=\
    \ i;\n        }\n        return s;", "        StringBuilder sb = new StringBuilder();\n\
    \        long current = n;\n        while (current > 0) {\n            sb.Append(current);\n\
    \            current--;\n        }\n        return sb.ToString();"]
stop_tokens:
- "\n    }\n"

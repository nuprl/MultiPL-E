name: HumanEval_151_double_the_difference
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a list of numbers, return the sum of squares of the numbers\n\
  \    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
  \    // >>> DoubleTheDifference((new List<float>(new long[]{(long)1L, (long)3L,\
  \ (long)2L, (long)0L})))\n    // (10L)\n    // >>> DoubleTheDifference((new List<float>(new\
  \ long[]{(long)-1L, (long)-2L, (long)0L})))\n    // (0L)\n    // >>> DoubleTheDifference((new\
  \ List<float>(new long[]{(long)9L, (long)-2L})))\n    // (81L)\n    // >>> DoubleTheDifference((new\
  \ List<float>(new long[]{(long)0L})))\n    // (0L)\n    // If the input list is\
  \ empty, return 0.\n    public static long DoubleTheDifference(List<float> lst)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(DoubleTheDifference((new\
  \ List<float>())) == (0L));\n    Debug.Assert(DoubleTheDifference((new List<float>(new\
  \ float[]{(float)5.0f, (float)4.0f}))) == (25L));\n    Debug.Assert(DoubleTheDifference((new\
  \ List<float>(new float[]{(float)0.1f, (float)0.2f, (float)0.3f}))) == (0L));\n\
  \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)-10.0f,\
  \ (float)-20.0f, (float)-30.0f}))) == (0L));\n    Debug.Assert(DoubleTheDifference((new\
  \ List<float>(new float[]{(float)-1.0f, (float)-2.0f, (float)8.0f}))) == (0L));\n\
  \    Debug.Assert(DoubleTheDifference((new List<float>(new float[]{(float)0.2f,\
  \ (float)3.0f, (float)5.0f}))) == (34L));\n    Debug.Assert(DoubleTheDifference((new\
  \ List<float>(new float[]{(float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
  \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f})))\
  \ == (165L));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        foreach (float f in lst) {\n       \
    \     if (f > 0.0f) {\n                sum += Math.Pow(f, 2);\n            }\n\
    \        }\n        return sum;", "        if (lst.Count == 0)\n            return\
    \ 0;\n        long sum = 0;\n        foreach (float f in lst) {\n            if\
    \ (f == (float)f)\n                sum += (float)f;\n            else\n      \
    \          sum += (long)Math.Pow(Math.Abs(f), 2);\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (float f in lst) {\n            sum += Math.Pow(f,\
    \ 2);\n        }\n        return sum;", "        long sum = 0;\n        foreach\
    \ (float f in lst) {\n            if (f > 0.0f) {\n                sum += Math.Pow(f,\
    \ 2);\n            }\n        }\n        return sum;", "        if (lst.Count\
    \ == 0)\n            return 0;\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            long num = Math.Abs(f);\n            if (num > 0) {\n\
    \                sum += num * num;\n            }\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (float f in lst) {\n            if (f >\
    \ 0) sum += Math.Pow(f, 2);\n        }\n        return sum;", "        if (lst.Count\
    \ == 0)\n            return 0;\n        long sum = 0;\n        foreach (float\
    \ f in lst) {\n            if (f > 0)\n                sum += Math.Pow(f, 2);\n\
    \        }\n        return sum;", "        if (lst.Count == 0)\n            return\
    \ 0;\n        long sum = 0;\n        foreach (float f in lst)\n        {\n   \
    \         if (f < 0f || f % 1f != 0f)\n                continue;\n           \
    \ sum += Math.Pow(f, 2);\n        }\n        return sum;", "        if (lst.Count\
    \ == 0) {\n            return 0;\n        }\n        long sum = 0;\n        foreach\
    \ (float f in lst) {\n            if (f < 0) {\n                continue;\n  \
    \          }\n            if (f % 2 == 0) {\n                sum += Math.Pow(f,\
    \ 2);\n            }\n        }\n        return sum;", "        long sum = 0;\n\
    \        foreach (float f in lst) {\n            if (f > 0)\n                sum\
    \ += Math.Pow(f, 2);\n        }\n        return sum;", "        long sum = 0;\n\
    \        foreach (float f in lst) {\n            if (f < 0) {\n              \
    \  continue;\n            }\n            if (f % 2 == 0) {\n                sum\
    \ += f * f;\n            }\n        }\n        return sum;", "        long sum\
    \ = 0;\n        foreach (float f in lst) {\n            if (f < 0) {\n       \
    \         continue;\n            }\n            if (f % 2 == 0) {\n          \
    \      sum += f * f;\n            }\n        }\n        return sum;", "      \
    \  long sum = 0;\n        foreach (float f in lst) {\n            sum += Math.Pow(f,\
    \ 2);\n        }\n        return sum;", "        if (lst.Count == 0)\n       \
    \     return 0;\n        long sum = 0;\n        foreach (float f in lst)\n   \
    \     {\n            if (f < 0f || f > 1f)\n                continue;\n      \
    \      sum += Math.Pow(f, 2);\n        }\n        return sum;", "        if (lst.Count\
    \ == 0) {\n            return 0L;\n        }\n        long sum = 0L;\n       \
    \ foreach (float f in lst) {\n            if (f < 0) {\n                continue;\n\
    \            }\n            if (f % 2 == 0) {\n                sum += f * f;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    foreach (float f in lst) {\n            if (f > 0.0f) {\n               \
    \ sum += Math.Pow(f, 2);\n            }\n        }\n        return sum;", "  \
    \      if (lst.Count == 0)\n            return 0;\n        long sum = 0;\n   \
    \     foreach (float f in lst) {\n            long n = Convert.ToInt64(f);\n \
    \           if (n != 0) {\n                sum += n * n;\n            }\n    \
    \    }\n        return sum;", "        long sum = 0;\n        foreach (float f\
    \ in lst) {\n            if (f > 0.0f) {\n                sum += Math.Pow(f, 2);\n\
    \            }\n        }\n        return sum;", "        if (lst.Count == 0)\n\
    \            return 0;\n        long sum = 0;\n        foreach (float f in lst)\
    \ {\n            long n = Math.Abs(f);\n            if (n != 0L && n != 1L &&\
    \ n != -1L && n != -2L && n != -3L && n != -4L && n != -5L && n != -6L && n !=\
    \ -7L && n != -8L && n != -9L && n != -10L && n != -11L && n != -12L && n != -13L\
    \ && n != -14L && n != -15L && n != -16L && n != -17L && n != -18L && n != -19L\
    \ && n != -20L && n != -21L && n != -22L && n != -23L && n != -24L && n != -25L\
    \ && n != -26L && n != -27L && n != -28L && n != -29L && n != -30L && n != -31L\
    \ && n != -32L && n != -33L && n != -34L && n != -35L && n != -36L && n != -37L\
    \ && n != -38L && n != -39L && n != -40L && n != -41L && n != -42L && n != -43L\
    \ && n != -44L && n != -45L && n != -46L && n != -47L && n != -48L && n != -49L\
    \ && n != -50L && n != -51L && n != -52L && n != -53L && n != -54L && n != -55L\
    \ && n != -56L && n != -57L && n != -58L && n != -59L && n != -60L && n != -61L\
    \ && n != -62L && n != -63L && n != -64L && n != -65L && n != -66L && n != -67L\
    \ && n != -68L && n != -69L && n != -70L && n != -71L && n != -72L && n != -73L\
    \ && n != -74L && n != -75L && n != -76L && n != -77L && n != -78L && n != -79L\
    \ && n != -80L && n != -81L && n != -82L && ", "        long sum = 0;\n      \
    \  foreach (float f in lst) {\n            if (f == (float)f) {\n            \
    \    sum += (float)f;\n            }\n            else if (f != (float)f && f\
    \ != (float)f - 1) {\n                sum += Math.Pow(f, 2);\n            }\n\
    \        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

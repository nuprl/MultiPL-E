name: HumanEval_92_any_int
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true\
  \ if one of the numbers is equal to the sum of the other two, and all numbers are\
  \ integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>\
  \ AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,\
  \ (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,\
  \ (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n   \
  \ // (false)\n    public static bool AnyInt(float x, float y, float z) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
  \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
  \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==\
  \ (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
  \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
  \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)\
  \ == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n\
  \    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),\
  \ (float)4L, (float)7L) == (false));\n    }\n\n}\n"
completions: ['        return Math.Abs(x - y) <= Math.Abs(x + z) && Math.Abs(x - y)
    <= Math.Abs(x + z);', '        return Math.Abs(x - y + z) == Math.Abs(x + y +
    z);', '        return Math.Abs(x - y) <= Math.Abs(x - z) && Math.Abs(x - z) <=
    Math.Abs(y - z);', '        return Math.Abs(x - y + z) <= Math.Abs(x) + Math.Abs(y)
    + Math.Abs(z);', "        float sum = x + y + z;\n        bool result = true;\n\
    \        if (sum == (float)sum) {\n            result = true;\n        }\n   \
    \     else if (sum != (float)sum) {\n            result = false;\n        }\n\
    \        return result;", "        float sum = x + y + z;\n        return Math.Abs(sum\
    \ - z) < 0.0001f && Math.Abs(sum - y) < 0.0001f && Math.Abs(sum - x) < 0.0001f;",
  '        return ((Math.Abs(x) + Math.Abs(y) + Math.Abs(z)) % 1 == 0);', "      \
    \  float sum = x + y + z;\n        if (sum == (float)sum) {\n            return\
    \ true;\n        }\n        return false;", '        return Math.Abs(x - y + z)
    < 0.0001f;', "        float sum = x + y + z;\n        if (sum == (float)sum) return\
    \ true;\n        return false;", '        return Math.Abs(x - y + z) < 0.000001;',
  "        float sum = x + y + z;\n        return Math.Abs(sum - sum.Truncate()) <\
    \ 0.0001f;", '        return Math.Abs(x - y + z) < 0.0001f;', '        return
    Math.Abs(x - y + z) == Math.Abs(x + y + z);', "        float sum = (x + y + z);\n\
    \        if (sum == (float)sum) {\n            return true;\n        }\n     \
    \   return false;", "        if (Math.Abs(x - y) < 0.0001f && Math.Abs(x - z)\
    \ < 0.0001f && Math.Abs(y - z) < 0.0001f) {\n            return true;\n      \
    \  }\n        return false;", '        return Math.Abs(x - y + z) < 0.001f;',
  '        return Math.Abs(x - y + z) < 0.0001f;', "        float xx = x;\n      \
    \  float yy = y;\n        float zz = z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n        float xx = x * x;\n        float\
    \ yy = y * y;\n        float zz = z * z;\n        float xy = x * y;\n        float\
    \ xz = x * z;\n        float yz = y * z;\n", "        float sum = x + y + z;\n\
    \        return Math.Abs(sum - z) < 0.0001f;"]
stop_tokens:
- "\n    }\n"

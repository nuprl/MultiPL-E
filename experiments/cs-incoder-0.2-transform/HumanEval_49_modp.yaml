name: HumanEval_49_modp
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>> Modp((3L),\
  \ (5L))\n    // (3L)\n    // >>> Modp((1101L), (101L))\n    // (2L)\n    // >>>\
  \ Modp((0L), (101L))\n    // (1L)\n    // >>> Modp((3L), (11L))\n    // (8L)\n \
  \   // >>> Modp((100L), (101L))\n    // (1L)\n    public static long Modp(long n,\
  \ long p) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Modp((3L),\
  \ (5L)) == (3L));\n    Debug.Assert(Modp((1101L), (101L)) == (2L));\n    Debug.Assert(Modp((0L),\
  \ (101L)) == (1L));\n    Debug.Assert(Modp((3L), (11L)) == (8L));\n    Debug.Assert(Modp((100L),\
  \ (101L)) == (1L));\n    Debug.Assert(Modp((30L), (5L)) == (4L));\n    Debug.Assert(Modp((31L),\
  \ (5L)) == (3L));\n    }\n\n}\n"
completions: ["        long r = 1L;\n        while (r < p) {\n            long t =\
    \ r * r;\n            if (t < n) {\n                r += p;\n            } else\
    \ {\n                r -= p;\n            }\n        }\n        return r;", " \
    \       long r = 1L;\n        while (r < n) {\n            r *= p;\n        }\n\
    \        return r;", "        long res = 1L;\n        while (n != 0L) {\n    \
    \        res = (res * n) % p;\n            n /= 2L;\n        }\n        return\
    \ res;", "        long r = 1L;\n        while (r < p) {\n            r *= 2L;\n\
    \        }\n        return n % r;", "        long r = 1L;\n        while (n >\
    \ 0) {\n            long m = n & -p;\n            n ^= m;\n            r = (r\
    \ * m) % p;\n        }\n        return r;", "        long result = 1L;\n     \
    \   while (n > 0) {\n            result *= p;\n            result %= p;\n    \
    \        n -= 1;\n        }\n        return result;", "        long r = 1L;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        long r = 1L;\n        while ((n & 1L)\
    \ != 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n        }\n \
    \       return r;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n\
    \            n >>= 1L;\n            r = (r * p) % p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long t = r\
    \ * n; // t = r * n\n            if (t < p)\n                r = t + p;\n    \
    \        else\n                r = t - p;\n            n = n >> 1; // n = n /\
    \ 2\n        }\n        return r;", "        long r = 1L;\n        while (n >\
    \ 0) {\n            r = r * p + n % p;\n            n = n / p;\n        }\n  \
    \      return r;", "        long result = 1L;\n        while (n > 0) {\n     \
    \       long r = n % p;\n            result *= p;\n            result %= p;\n\
    \            n = r;\n        }\n        return result;", "        long r = 1L;\n\
    \        while (n-- > 0) {\n            r = (r * p) % p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n ^= m;\n            r = (r * m) % p;\n        }\n      \
    \  return r;", "        long r = 1L;\n        while (n > 0) {\n            long\
    \ m = n & -p;\n            n >>= p;\n            r = r * m % p;\n        }\n \
    \       return r;", "        long r = 1L;\n        while (n > 0) {\n         \
    \   long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n    \
    \    }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n \
    \           long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (r < p) {\n\
    \            long t = r * r;\n            if (t < n) {\n                r += p;\n\
    \            }\n            else {\n                r += p - t;\n            }\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            long m = n / p;\n            long r = r * m % p;\n            n =\
    \ m;\n        }\n        return r;", "        long r = 1L;\n        while (n >\
    \ 0) {\n            long m = n & -p;\n            n >>= p;\n            r = (r\
    \ * m) % p;\n        }\n        return r;", "        long ret = 1;\n        long\
    \ q = 1;\n        while (n > 0) {\n            q = q * p % n;\n            ret\
    \ = ret * q;\n            n = n / 2;\n        }\n        return ret;", "     \
    \   long r = 1L;\n        while (n > 0) {\n            long t = r * n;\n     \
    \       if (t < p)\n                return r;\n            r = t;\n          \
    \  n -= 1;\n        }\n        return r;", "        long res = 1L;\n        while\
    \ (n > 0) {\n            res = (res * n) % p;\n            n /= 2;\n        }\n\
    \        return res;", "        long r = 1L;\n        while (n > 0) {\n      \
    \      r = r * p % n;\n            n = n / 2;\n        }\n        return r;",
  "        long result = 1L;\n        while (n > 0) {\n            result *= p;\n\
    \            result %= p;\n            n /= 2;\n        }\n        return result;",
  "        long r = 1L;\n        while (n-- > 0) {\n            r = (r * p) % p;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            r = ((r * n) % p);\n            n /= 2L;\n        }\n        return\
    \ r;", "        long result = 1L;\n        while (n > 0) {\n            result\
    \ *= p;\n            result %= p;\n            n /= 2;\n        }\n        return\
    \ result;", "        long r = 1L;\n        while (n > 0) {\n            long t\
    \ = r * n % p;\n            r = t;\n            n = n >> 1;\n        }\n     \
    \   return r;", "        long r = 1L;\n        while (n > 0) {\n            long\
    \ t = r * n % p;\n            r = t;\n            n = n / p;\n        }\n    \
    \    return r;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n   \
    \         n >>= 1L;\n            r <<= 1L;\n        }\n        while ((p & 1L)\
    \ != 0L) {\n            p >>= 1L;\n            r <<= 1L;\n        }\n        r\
    \ %= p;\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            long t = r * n % p;\n            r = t;\n            n = n / p;\n\
    \        }\n        return r;", "        long result = 1L;\n        while (n >\
    \ 0) {\n            result *= p;\n            result %= p;\n            n /= 2;\n\
    \        }\n        return result;", "        long r = 1L;\n        while (n >\
    \ 0) {\n            long t = n % p;\n            n = n / p;\n            r = r\
    \ * t + p;\n        }\n        return r;", "        long ret = 1;\n        while\
    \ (n > 0) {\n            long tmp = ret % p;\n            ret *= p;\n        \
    \    n -= tmp;\n        }\n        return ret;", "        long r = 1L;\n     \
    \   while (n > 0) {\n            long m = n & -p;\n            n ^= m;\n     \
    \       r = (r * m) % p;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n > 0) {\n            long m = n & -p;\n            n >>= p;\n\
    \            r = (r * m) % p;\n        }\n        return r;", "        long r\
    \ = 1L;\n        while (n > 0) {\n            long m = n / p;\n            long\
    \ t = r * m;\n            r = t;\n            n = n - m;\n        }\n        return\
    \ r;", "        long res = 1L;\n        while (n > 0) {\n            res = (res*2L)\
    \ % p;\n            n /= 2L;\n        }\n        return res;", "        long res\
    \ = 1L;\n        while (n > 1L) {\n            if (n % 2L == 1L) {\n         \
    \       res = (res * n) % p; \n            }\n            n /= 2L;\n        }\n\
    \        return res;", "        long res = 1L;\n        while (n > 1L) {\n   \
    \         if (n % 2L == 1L) {\n                res = (res * p) % p; \n       \
    \     }\n            n /= 2L;\n        }\n        return res;", "        long\
    \ result = 1L;\n        while (n-- > 0) {\n            result *= p;\n        }\n\
    \        return result;", "        long r = 1L;\n        while ((n & 1L) != 0L)\
    \ {\n            n >>= 1L;\n            r *= p;\n        }\n        return r %\
    \ p;", "        long r = 1L;\n        while (n-- > 0) {\n            r = (r *\
    \ p) % p;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ (r < n) {\n            r *= p;\n        }\n        return r;", "        long\
    \ r = 1L;\n        while (r < n) {\n            r *= p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n            n\
    \ >>= 1L;\n            r = (r * p) % p;\n        }\n        return r;", "    \
    \    long res = 1L;\n        while (n > 0) {\n            long tmp = n % p;\n\
    \            res = (res * tmp) % p;\n            n = n / p;\n        }\n     \
    \   return res;", "        long ret = 1;\n        while (n != 0) {\n         \
    \   long r = n % p;\n            n = n / p;\n            ret = ret * r + ret;\n\
    \        }\n        return ret;", "        long ret = 1;\n        while (n > 0)\
    \ {\n            long tmp = ret % p;\n            if (tmp == 0) {\n          \
    \      ret /= p;\n            } else {\n                ret *= p;\n          \
    \  }\n            n -= 1;\n        }\n        return ret;", "        long result\
    \ = 1L;\n        while (n > 1L) {\n            result *= p;\n            n /=\
    \ p;\n        }\n        return result;", "        long res = 1L;\n        while\
    \ (n-- > 0) {\n            res = (res*p) % p;\n        }\n        return res;",
  "        long r = 1L;\n        while ((n & 1L) != 0L) {\n            n >>= 1L;\n\
    \            r = (r * p) % p;\n        }\n        return r;", "        long r\
    \ = 1L;\n        while (n > 0) {\n            long t = r * n;\n            if\
    \ (t < p)\n                t += p;\n            r ^= t;\n            n -= 1;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            r = r * p % n;\n            n = n / 2;\n        }\n        return\
    \ r;", "        long res = 1L;\n        while (n > 0) {\n            if (n % 2\
    \ == 1) {\n                res *= p;\n            }\n            n /= 2;\n   \
    \         p *= p;\n        }\n        return res;", "        long r = 1L;\n  \
    \      while (n > 1L) {\n            long m = n / p;\n            r = (r * p)\
    \ % m;\n            n = m;\n        }\n        return r;", "        long r = 1L;\n\
    \        while ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r *\
    \ p) % p;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ (n > 0) {\n            long m = n & -p;\n            n >>= p;\n            r\
    \ = (r * m) % p;\n        }\n        return r;", "        long r = 1L;\n     \
    \   while (n > 0) {\n            r = r * 2L + n % p;\n            n = n / p;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            r = r * p % n;\n            n = n / 2;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (r < p) {\n            r *= 2L;\n\
    \        }\n        return n % r;", "        long r = 1L;\n        while (r <\
    \ p) {\n            r *= 2L;\n        }\n        return n % p;", "        long\
    \ r = 1L;\n        while (n > 0) {\n            r = r * 2L + n % p;\n        \
    \    n = n / p;\n        }\n        return r;", "        long r = 1L;\n      \
    \  while (n > 0) {\n            long t = r * n; // t = r * n\n            if (t\
    \ < p)\n                t += p;\n            r ^= t;\n            n -= t;\n  \
    \      }\n        return r;", "        long r = 1L;\n        while ((n & 1L) !=\
    \ 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n        }\n    \
    \    return r;", "        long r = 1L;\n        while (n > 1L) {\n           \
    \ long t = r * n;\n            if (t < p)\n                t += p;\n         \
    \   else\n                t %= p;\n            r = t;\n            n -= 1L;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (r < n) {\n\
    \            r *= p;\n        }\n        return r % p;", "        long r = 1L;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            long m = n & -p;\n            n >>= p;\n            r = (r * m) %\
    \ p;\n        }\n        return r;", "        long r = 1L;\n        while (n >\
    \ 0) {\n            long m = n & -p;\n            n ^= m;\n            r = (r\
    \ * m) % p;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n  \
    \      }\n        return r;", "        long r = 1L;\n        while ((n & 1L) !=\
    \ 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n        }\n    \
    \    return r;", "        long res = 1L;\n        while (n > 0) {\n          \
    \  if (n % 2 == 0) {\n                res = (res * p) % p;\n            }\n  \
    \          n /= 2;\n        }\n        return res;", "        long r = 1L;\n \
    \       while (n-- > 0) {\n            r = (r * p) % p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n >>= p;\n            r = (r * m) % p;\n        }\n     \
    \   return r;", "        long r = 1L;\n        while (n-- > 0) {\n           \
    \ r = (r * p) % p;\n        }\n        return r;", "        long r = 1L;\n   \
    \     while ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r * p)\
    \ % p;\n        }\n        return r;", "        long result = 1L;\n        while\
    \ (n > 0) {\n            result *= p;\n            result %= p;\n            n\
    \ /= 2;\n        }\n        return result;", "        long result = 1L;\n    \
    \    while (n > 1L) {\n            result *= p;\n            n -= result / p;\n\
    \            result %= p;\n        }\n        return result;", "        long r\
    \ = 1L;\n        while ((n & 1L) != 0L) {\n            n >>= 1L;\n           \
    \ r = (r * p) % p;\n        }\n        return r;", "        long res = 1L;\n \
    \       while (n > 0) {\n            long t = res * n;\n            if (t % p\
    \ == 0) {\n                res = t;\n            }\n            n /= 2;\n    \
    \    }\n        return res;", "        long result = 1L;\n        while (n > 1L)\
    \ {\n            result *= p;\n            n -= result % p;\n        }\n     \
    \   return result;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n\
    \            n >>= 1L;\n            r *= p--;\n        }\n        while ((n &\
    \ 1L) == 0L) {\n            n >>= 1L;\n            r *= p;\n        }\n      \
    \  return r;", "        long r = 1L;\n        long m = 1L;\n        while (n >\
    \ 0) {\n            if (n % 2 == 0) {\n                r = (r * m) % p;\n    \
    \        }\n            m = (m * m) % p;\n            n = n / 2;\n        }\n\
    \        return r;", "        long r = 1L;\n        while (n > 0) {\n        \
    \    r = r * p + n % p;\n            n = n / p;\n        }\n        return r;",
  "        long result = 1L;\n        while (n > 0) {\n            long r = n % p;\n\
    \            n /= p;\n            result = r * result + n;\n        }\n      \
    \  return result;", "        long r = 1L;\n        while (n > 0) {\n         \
    \   long t = r * n;\n            if (t < p) {\n                r = (r * n + 1L)\
    \ % p;\n            } else {\n                r = (r * n) % p;\n            }\n\
    \            n -= t;\n        }\n        return r;", "        long r = 1L;\n \
    \       while (n-- > 0) {\n            r = (r * p) % p;\n        }\n        return\
    \ r;", "        long result = 1L;\n        while (n > 0) {\n            result\
    \ *= p;\n            result %= p;\n            n /= 2;\n        }\n        return\
    \ result;", "        long res = 1L;\n        long tmp = 1L;\n        long tmp2\
    \ = 1L;\n        long tmp3 = 1L;\n        long tmp4 = 1L;\n        long tmp5 =\
    \ 1L;\n        long tmp6 = 1L;\n        long tmp7 = 1L;\n        long tmp8 = 1L;\n\
    \        long tmp9 = 1L;\n        long tmp10 = 1L;\n        long tmp11 = 1L;\n\
    \        long tmp12 = 1L;\n        long tmp13 = 1L;\n        long tmp14 = 1L;\n\
    \        long tmp15 = 1L;\n        long tmp16 = 1L;\n        long tmp17 = 1L;\n\
    \        long tmp18 = 1L;\n        long tmp19 = 1L;\n        long tmp20 = 1L;\n\
    \        long tmp21 = 1L;\n        long tmp22 = 1L;\n        long tmp23 = 1L;\n\
    \        long tmp24 = 1L;\n        long tmp25 = 1L;\n        long tmp26 = 1L;\n\
    \        long tmp27 = 1L;\n        long tmp28 = 1L;\n        long tmp29 = 1L;\n\
    \        long tmp30 = 1L;\n        long tmp31 = 1L;\n        long tmp32 = 1L;\n\
    \        long tmp33 = 1L;\n        long tmp34 = 1L;\n        long tmp35 = 1L;\n\
    \        long tmp36 = 1L;\n        long tmp37 = 1L;\n        long tmp38 = 1L;\n\
    \        long tmp39 = 1L;\n        long tmp40 = 1L;\n        long tmp41 = 1L;\n\
    \        long tmp42 = 1L;\n        long tmp43 = 1L;\n        long tmp44 = 1L;\n\
    \        long tmp45 = 1L;\n        long tmp46 = 1L;\n        long tmp47 = 1L;\n\
    \        long tmp48 = 1L;\n        long tmp49 = 1L;\n        long tmp50 = 1L;\n\
    \        long tmp51 = 1L;\n        long tmp52 = 1L;\n        long tmp53 = 1L;\n\
    \        long tmp54 = 1L;\n        long tmp55 = 1L;\n        long tmp56 = 1L;\n\
    \        long tmp57 = 1L;\n        long tmp58 = 1L;\n        long tmp59 = 1L;\n\
    \        long tmp60 = 1L;\n        long tmp61 = 1L;\n        long tmp62 = 1L",
  "        long result = 1L;\n        while (n > 0) {\n            result *= p;\n\
    \            result %= p;\n            n /= 2;\n        }\n        return result;",
  "        long r = 1L;\n        while (n > 0) {\n            long t = r * n;\n  \
    \          if (t < p)\n                return r;\n            r = t;\n       \
    \     n -= 1;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ (n > 0) {\n            long m = n & -p;\n            n >>= p;\n            r\
    \ = (r * m) % p;\n        }\n        return r;", "        long r = 1L;\n     \
    \   while (n > 0) {\n            long m = n & -p;\n            n ^= m;\n     \
    \       r = (r * m) % p;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n\
    \        }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n\
    \            long m = n / p;\n            long t = r * m;\n            r = t;\n\
    \            n = n - m;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n-- > 0) {\n            r = (r * p) % p;\n        }\n        return\
    \ r;", "        long res = 1L;\n        while (n > 0) {\n            if (n % 2\
    \ == 0) {\n                res = (res * p) % p;\n            }\n            n\
    \ = n / 2;\n        }\n        return res;", "        long res = 1L;\n       \
    \ while (n > 1L) {\n            if (n % p == 0) {\n                res = (res\
    \ * p) % p;\n            }\n            n /= p;\n        }\n        return res;",
  "        long result = 1L;\n        while (n > 0) {\n            long r = n % p;\n\
    \            n = n / p;\n            result = r * result + p;\n        }\n   \
    \     return result;", "        long result = 1L;\n        while (n > 0) {\n \
    \           result *= p;\n            n -= 1;\n        }\n        return result;",
  "        long r = 1L;\n        while (n > 0) {\n            r = r * p + n % p;\n\
    \            n /= p;\n        }\n        return r;", "        long r = 1L;\n \
    \       while ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r *\
    \ p) % p;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n  \
    \      }\n        return r;", "        long res = 1L;\n        while (n-- > 0)\
    \ {\n            res = (res * p) % p;\n        }\n        return res;", "    \
    \    long res = 1L;\n        while (n > 0) {\n            if (n % 2 == 0) {\n\
    \                res *= p;\n            }\n            n /= 2;\n            p\
    \ *= p;\n        }\n        return res;", "        long result = 1L;\n       \
    \ while (n > 0) {\n            long r = n % p;\n            n = n / p;\n     \
    \       result = result * r + p;\n        }\n        return result;", "      \
    \  long r = 1L;\n        while ((n & 1L) != 0L) {\n            n >>= 1L;\n   \
    \         r = (r * p) % p;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n > 1L) {\n            if (n % p == 0) {\n                r %=\
    \ p;\n            }\n            n /= p;\n        }\n        return r;", "   \
    \     long r = 1L;\n        while ((n & 1L) != 0L) {\n            n >>= 1L;\n\
    \            r *= p--;\n        }\n        while ((n & 1L) == 0L) {\n        \
    \    n >>= 1L;\n            r *= p;\n        }\n        return r;", "        long\
    \ r = 1L;\n        while (n > 0) {\n            long t = r * n;\n            if\
    \ (t > p)\n                t %= p;\n            r = t;\n            n -= 1;\n\
    \        }\n        return r;", "        long r = 1L;\n        while ((n & 1L)\
    \ != 0L) {\n            r = (r * p) % p;\n            n >>= 1L;\n        }\n \
    \       return r;", "        long ret = 1;\n        while (n > 0) {\n        \
    \    long m = n % p;\n            n /= p;\n            ret *= m;\n        }\n\
    \        return ret;", "        long result = 1L;\n        while (n > 1L) {\n\
    \            result *= p;\n            n -= result * p;\n        }\n        return\
    \ result;", "        long res = 1L;\n        while ((n & 1L) != 0L) {\n      \
    \      res = (res * p) % p;\n            n >>= 1L;\n        }\n        return\
    \ res;", "        long result = 1L;\n        while (n > 0) {\n            result\
    \ *= p;\n            n -= result % p;\n            result /= p;\n        }\n \
    \       return result;", "        long r = 1L;\n        while (n > p) {\n    \
    \        long t = r * r;\n            r = t - n;\n            n = t;\n       \
    \ }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;", "        long ret = 1;\n        while (n != 0)\
    \ {\n            long tmp = n % p;\n            ret = ret * tmp;\n           \
    \ n = n / p;\n        }\n        return ret;", "        long r = 1L;\n       \
    \ while (n > 0) {\n            long m = n / p;\n            long t = r * m;\n\
    \            r = t;\n            n = n % p;\n        }\n        return r;", " \
    \       long ret = 1;\n        while (n != 0) {\n            if (n % 2 == 1) {\n\
    \                ret *= p;\n            }\n            n /= 2;\n            p\
    \ *= p;\n        }\n        return ret;", "        long r = 1L;\n        while\
    \ ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n  \
    \      }\n        return r;", "        long ret = 1;\n        while (n > 0) {\n\
    \            long tmp = ret % p;\n            if (tmp == 0)\n                return\
    \ ret;\n            ret = tmp;\n            n /= p;\n        }\n        return\
    \ ret;", "        long result = 1L;\n        while (n > 1L) {\n            result\
    \ *= p;\n            n -= result % p;\n        }\n        return result;", " \
    \       long res = 1L;\n        while (n > 1L) {\n            if (n % 2L == 1L)\
    \ {\n                res *= p;\n            }\n            n /= 2L;\n        \
    \    p *= pL;\n        }\n        return res;", "        long r = 1L;\n      \
    \  while (n > 0) {\n            long m = n / p;\n            long t = r * m;\n\
    \            r = t;\n            n = n % p;\n        }\n        return r;", " \
    \       long r = 1L;\n        while ((n & 1L) != 0L) {\n            r = (r * p)\
    \ % p;\n            n >>= 1L;\n        }\n        return r;", "        long res\
    \ = 1L;\n        while (n > 0) {\n            if (n % 2 == 0) {\n            \
    \    res *= p;\n            }\n            n /= 2;\n            p *= p;\n    \
    \    }\n        return res;", "        long r = 1L;\n        while (n > 0) {\n\
    \            long m = n / p;\n            n -= m * p;\n            r = (r * m)\
    \ % p;\n        }\n        return r;", "        long res = 1L;\n        while\
    \ (n > 0) {\n            if (n % 2 == 1L) {\n                res = (res * p) %\
    \ p;\n            }\n            n /= 2L;\n        }\n        return res;", " \
    \       long r = 1L;\n        while (n > 0) {\n            long t = n % p;\n \
    \           n = n / p;\n            r = r * t + p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n >>= p;\n            r = (r * m) % p;\n        }\n     \
    \   return r;", "        long ret = 1;\n        while (n>0) {\n            long\
    \ tmp = n % p;\n            ret = ret * tmp;\n            n = n / p;\n       \
    \ }\n        return ret;", "        long r = 1L;\n        while (n-- > 0) {\n\
    \            r = (r * p) % p;\n        }\n        return r;", "        long res\
    \ = 1L;\n        while (n > 0) {\n            res = (res * n) % p;\n         \
    \   n--;\n        }\n        return res;", "        long r = 1L;\n        while\
    \ (n > 1L) {\n            long t = r * n;\n            if (t < p) {\n        \
    \        r = (r * n + 1L) % p;\n            } else {\n                r = (r *\
    \ n) % p;\n            }\n            n = t;\n        }\n        return r;", " \
    \       long r = 1L;\n        while (n > 0) {\n            r = r * p % n;\n  \
    \          n = n / 2;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n > 0) {\n            long m = n / p;\n            long t = r\
    \ * m;\n            r = t;\n            n = n - m;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (r < p) {\n            long t = r\
    \ * r;\n            if (t < n) {\n                r += p;\n            }\n   \
    \         else {\n                r += n;\n            }\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n >>= p;\n            r = (r * m) % p;\n        }\n     \
    \   return r;", "        long result = 1L;\n        while (n > 0) {\n        \
    \    result *= p;\n            result %= p;\n            n -= 1;\n        }\n\
    \        return result;", "        long result = 1L;\n        while ((n % p) !=\
    \ 0) {\n            result *= p;\n            n /= p;\n        }\n        return\
    \ result;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n        \
    \    n >>= 1L;\n            r <<= 1L;\n        }\n        r %= p;\n        if\
    \ (r == 0L) {\n            r += p; // overflow\n        }\n        return r;",
  "        long result = 1L;\n        while (n > 0) {\n            result *= p;\n\
    \            result %= p;\n            n -= 1;\n        }\n        return result;",
  "        long r = 1L;\n        while (n > 0) {\n            long m = n / p;\n  \
    \          long t = r * m;\n            r = t;\n            n = n - m;\n     \
    \   }\n        return r;", "        long res = 1L;\n        while (n > 0) {\n\
    \            long tmp = res;\n            res = (res * (long) n) % p;\n      \
    \      n = n >> 1;\n        }\n        return res;", "        long r = 1L;\n \
    \       while (n > 1L) {\n            long t = r * n;\n            if (t < p)\n\
    \                return r;\n            r = t;\n            n -= 1L;\n       \
    \ }\n        return r;", "        long ret = 1;\n        long q = 1;\n       \
    \ long r = 1;\n        while (q < p) {\n            q = q * 2;\n            r\
    \ = r * 2;\n        }\n        while (r > 0) {\n            long t = r / 2;\n\
    \            ret = ret * n / t;\n            r = t;\n        }\n        return\
    \ ret;", "        long res = 1L;\n        while (n > 0) {\n            res = (res\
    \ * n) % p;\n            n--;\n        }\n        return res;", "        long\
    \ result = 1L;\n        while (n > 0) {\n            result *= p;\n          \
    \  result %= p;\n            n /= 2;\n        }\n        return result;", "  \
    \      long result = 1L;\n        while (n > 0) {\n            long r = n % p;\n\
    \            n = n / p;\n            result = r * result + p;\n        }\n   \
    \     return result;", "        long r = 1L;\n        while (r < n) {\n      \
    \      r *= p;\n        }\n        return r;", "        long ret = 1;\n      \
    \  while (n != 0) {\n            if (n % 2 == 0) {\n                ret *= p;\n\
    \            }\n            n /= 2;\n            p *= p;\n        }\n        return\
    \ ret;", "        long res = 1L;\n        while ((n & 1L) != 0L) {\n         \
    \   res = (res * p) % p;\n            n >>= 1L;\n        }\n        return res;",
  "        long r = 1L;\n        while (n > 0) {\n            long m = n & -p;\n \
    \           n ^= m;\n            r = (r * m) % p;\n        }\n        return r;",
  "        long r = 1L;\n        while ((n & 1L) != 0) {\n            r = (r * p)\
    \ % p;\n            n >>= 1;\n        }\n        return r;", "        long r =\
    \ 1L;\n        long m = 1L;\n        while (n > 1L) {\n            long t = n%p;\n\
    \            n = t;\n            r = r*m+t;\n            m = m*p;\n        }\n\
    \        return r;", "        long r = 1L;\n        while (r < n) {\n        \
    \    r *= p;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ (n > 0) {\n            r = r * p % n;\n            n = n / 2;\n        }\n \
    \       return r;", "        long r = 1L;\n        while (n > 0) {\n         \
    \   long t = r * n; // t = r * n\n            r = n % p;\n            n = t;\n\
    \        }\n        return r;", "        long ret = 1;\n        while (n > 0)\
    \ {\n            long tmp = ret % p;\n            ret = ret * p;\n           \
    \ ret = ret / p;\n            p = tmp;\n            n--;\n        }\n        return\
    \ ret;", "        long result = 1L;\n        while (n > 0) {\n            result\
    \ *= p;\n            result %= p;\n            n /= 2;\n        }\n        return\
    \ result;", "        long r = 1L;\n        while (n > 0) {\n            r = r\
    \ * p + n % p;\n            n = n / p;\n        }\n        return r;", "     \
    \   long r = 1L;\n        while (n > 0) {\n            r = r * p % n;\n      \
    \      n = n / 2;\n        }\n        return r;", "        long res = 1L;\n  \
    \      long t = n;\n        while (t > 0) {\n            res = (res*t) % p;\n\
    \            t = (t-1L)/p;\n        }\n        return res;", "        long result\
    \ = 1L;\n        while (n > 1L) {\n            result *= p;\n            result\
    \ %= p;\n            n /= 2L;\n        }\n        return result;", "        long\
    \ r = 1L;\n        while (n > 0) {\n            long t = r * n; // t = r * n\n\
    \            if (t % p != 0L) {\n                return 0L;\n            }\n \
    \           r = t;\n            n -= 1L;\n        }\n        return r; // r is\
    \ now the answer", "        long r = 1L;\n        while (n > 0) {\n          \
    \  long t = r * n % p;\n            r = t;\n            n = n / p;\n        }\n\
    \        return r;", "        long result = 1L;\n        while (n > 1L) {\n  \
    \          result *= p;\n            result %= p;\n            n /= 2L;\n    \
    \    }\n        return result;", "        long res = 1L;\n        while (n-- >\
    \ 0) {\n            res = (res*p) % p;\n        }\n        return res;", "   \
    \     long res = 1L;\n        while (n > 0) {\n            if (n % 2 == 0) {\n\
    \                res = (res * p) % p;\n            }\n            n = n / 2;\n\
    \        }\n        return res;", "        long result = 1L;\n        while (n\
    \ > 0) {\n            result *= p;\n            result %= p;\n            n >>=\
    \ 1;\n        }\n        return result;", "        long r = 1L;\n        while\
    \ (n-- > 0) {\n            r = (r * p) % p;\n        }\n        return r;", " \
    \       long res = 1L;\n        while (n > 0) {\n            if (n % 2 == 0) {\n\
    \                res *= p;\n            }\n            n /= 2;\n            p\
    \ *= p;\n        }\n        return res;", "        long r = 1L;\n        while\
    \ ((n & 1L) != 0L) {\n            n >>= 1L;\n            r = (r * p) % p;\n  \
    \      }\n        return r;", "        long r = 1L;\n        while (n-- > 0) {\n\
    \            r = (r * p) % p;\n        }\n        return r;", "        long result\
    \ = 1L;\n        while (n > 0) {\n            result *= p;\n            result\
    \ %= p;\n            n /= 2;\n        }\n        return result;", "        long\
    \ result = 1L;\n        while (n > 0) {\n            long r = n % p;\n       \
    \     result *= p;\n            result %= p;\n            n /= p;\n          \
    \  n %= p;\n            result *= r;\n            result %= p;\n        }\n  \
    \      return result;", "        long r = 1L;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n = n / p;\n    \
    \    }\n        return r;", "        long r = 1L;\n        while (n > 0) {\n \
    \           long t = r * n; // t = r * n\n            if (t > p) t = p - t; //\
    \ t = r * n - p\n            r = t;\n            n -= 1;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n ^= m;\n            r = (r * m) % p;\n        }\n      \
    \  return r;", "        long r = 1L;\n        while ((n & 1L) != 0L) {\n     \
    \       n >>= 1L;\n            r = (r * p) % p;\n        }\n        return r;",
  "        long r = 1L;\n        while (n > 0) {\n            long t = r * n;\n  \
    \          if (t < p)\n                t += p;\n            r = t;\n         \
    \   n -= 1;\n        }\n        return r;", "        long r = 1L;\n        while\
    \ (n > 0) {\n            long m = n / p;\n            long t = r * m;\n      \
    \      r = t;\n            n = n - m;\n        }\n        return r;", "      \
    \  long r = 1L;\n        while (n > 0) {\n            long t = r * n;\n      \
    \      if (t < p)\n                t += p;\n            r = t;\n            n\
    \ -= 1;\n        }\n        return r;", "        long r = 1L;\n        while (n--\
    \ > 0) {\n            r = (r * p) % p;\n        }\n        return r;", "     \
    \   long r = 1L;\n        while (n > 1L) {\n            long m = n / p;\n    \
    \        long t = r * m;\n            r = t;\n            n = m;\n        }\n\
    \        return r;", "        long r = 1L;\n        while (n-- > 0) {\n      \
    \      r = (r * p) % p;\n        }\n        return r;", "        long r = 1L;\n\
    \        while (n > 0) {\n            long t = r * n % p;\n            r = t;\n\
    \            n = n / p;\n        }\n        return r;", "        long res = 1L;\n\
    \        long tmp = 1L;\n        while (n > 1L) {\n            tmp = (tmp * n)\
    \ % p;\n            n /= 2L;\n            res = (res * tmp) % p;\n        }\n\
    \        return res;", "        long r = 1L;\n        while (n > 0) {\n      \
    \      long t = r * n;\n            if (t < p) {\n                r = (r * n +\
    \ 1L) % p;\n            } else {\n                n -= t;\n                r =\
    \ (r * n + 1L) % p;\n            }\n        }\n        return r;", "        long\
    \ result = 1L;\n        while (n > 0) {\n            result *= p;\n          \
    \  result %= p;\n            n /= 2;\n        }\n        return result;", "  \
    \      long r = 1L;\n        while ((n & 1L) != 0L) {\n            n >>= 1L;\n\
    \            r = (r * p) % p;\n        }\n        return r;", "        long ret\
    \ = 1;\n        while (n > 0) {\n            long tmp = ret % p;\n           \
    \ ret = ret * (long) Math.Pow(2, n);\n            ret = ret % p;\n           \
    \ n = n - 1;\n        }\n        return ret;", "        long result = 1L;\n  \
    \      while (n > 1L) {\n            result *= p;\n            n /= p;\n     \
    \   }\n        return result;", "        long r = 1L;\n        while (n > 0) {\n\
    \            r = r * p + n % p;\n            n = n / p;\n        }\n        return\
    \ r;", "        long r = 1L;\n        while (r < p) {\n            r *= 2L;\n\
    \        }\n        return n % r;", "        long result = 1L;\n        while\
    \ (n > 0) {\n            result *= p;\n            result %= p;\n            n\
    \ /= 2;\n        }\n        return result;", "        long result = 1L;\n    \
    \    while (n > 0) {\n            result *= p;\n            result %= p;\n   \
    \         n /= 2;\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

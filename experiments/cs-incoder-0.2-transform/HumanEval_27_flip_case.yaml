name: HumanEval_27_flip_case
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given string, flip lowercase characters to uppercase and\
  \ uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n\
  \    public static string FlipCase(string str) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
  \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
  )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ["        string result = \"\";\n        foreach (char c in str) {\n\
    \            if (Char.IsUpper(c)) {\n                result += Char.ToLower(c);\n\
    \            } else {\n                result += Char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", "        string result = \"\";\n   \
    \     foreach (char c in str) {\n            result += (char)(c ^ 32);\n     \
    \   }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (char.IsLower(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsLower(c)) {\n \
    \               result += char.ToUpper(c);\n            } else {\n           \
    \     result += char.ToLower(c);\n            }\n        }\n        return result;",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for(int i = 0; i < charArray.Length; i++) {\n\
    \            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n             \
    \   newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ > 'Z' ? 'A' + (chars[i] - 'A' + 26) : chars[i] > 'z' ? 'a' + (chars[i] - 'a'\
    \ + 26) : chars[i];\n        }\n        return new string(flipped);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        char[]\
    \ chars = str.ToCharArray();\n        char[] newChars = new char[str.Length];\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in str) {\n\
    \            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n\
    \            } else {\n                result += char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", "        string result = \"\";\n   \
    \     foreach (char c in str) {\n            if (Char.IsLower(c)) {\n        \
    \        result += Char.ToUpper(c);\n            } else {\n                result\
    \ += Char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] chars = str.ToCharArray();\n        char[] flipped\
    \ = new char[chars.Length];\n        for (int i = 0; i < chars.Length; i++) {\n\
    \            if (chars[i].ToString().Equals(\"A\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'a';\n            }\n            else if (chars[i].ToString().Equals(\"\
    B\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'b';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"C\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'c';\n            }\n            else if (chars[i].ToString().Equals(\"\
    D\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'd';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"E\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'e';\n            }\n            else if (chars[i].ToString().Equals(\"\
    F\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'f';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"G\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'g';\n            }\n            else if (chars[i].ToString().Equals(\"\
    H\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'h';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"I\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'i';\n            }\n            else if (chars[i].ToString().Equals(\"\
    J\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'j';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"K\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'k';\n            }\n            else if (chars[i].ToString().Equals(\"\
    L\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'l';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"M\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'm';\n            }\n            else if (chars[i].ToString().Equals(\"\
    N\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'n';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"O\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'o';\n            }\n            else if (chars[i].ToString().Equals(\"\
    P\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'p';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"Q\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'q';\n            }\n            else if (chars[i].ToString",
  "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] charArray =\
    \ str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 'A' - 'a');\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        string result = \"\";\n \
    \       foreach (char c in str) {\n            if (Char.IsLower(c)) {\n      \
    \          result += Char.ToUpper(c);\n            } else {\n                result\
    \ += Char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == char.ToLower(chars[i])) {\n            \
    \    chars[i] = char.ToUpper(chars[i]);\n            }\n            else if (chars[i]\
    \ == char.ToUpper(chars[i])) {\n                chars[i] = char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        StringBuilder sb = new StringBuilder();\n        foreach\
    \ (char c in str) {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        string result = \"\"\
    ;\n        foreach (char c in str) {\n            if (char.IsLower(c)) {\n   \
    \             result += char.ToUpper(c);\n            } else {\n             \
    \   result += char.ToLower(c);\n            }\n        }\n        return result;",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        StringBuilder sb = new StringBuilder();\n        foreach\
    \ (char c in str) {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] charArray =\
    \ str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            }\n            else if (charArray[i] >= 'A' && charArray[i]\
    \ <= 'Z') {\n                newCharArray[i] = (char)(charArray[i] + 32);\n  \
    \          }\n            else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] charArray = str.ToCharArray();\n        char[] newCharArray\
    \ = new char[charArray.Length];\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n    \
    \            newCharArray[i] = (char)(charArray[i] - 32);\n            } else\
    \ if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            } else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars.ToUpper(i) ? chars[i] : chars.ToLower(i);\n        }\n        return\
    \ new string(flipped);", "        char[] charArray = str.ToCharArray();\n    \
    \    char[] newCharArray = new char[charArray.Length];\n        for (int i = 0;\
    \ i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else {\n                newCharArray[i] = charArray[i];\n       \
    \     }\n        }\n        return new string(newCharArray);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            result += (char.IsUpper(c))\
    \ ? c.ToString().ToUpper() : c.ToString().ToLower();\n        }\n        return\
    \ result;", "        char[] chars = str.ToCharArray();\n        char[] newChars\
    \ = new char[chars.Length];\n        for (int i = 0; i < chars.Length; i++) {\n\
    \            if (chars[i].ToString().ToLower() != chars[i].ToString().ToUpper())\
    \ {\n                newChars[i] = chars[i].ToString().ToUpper();\n          \
    \  } else {\n                newChars[i] = chars[i].ToString().ToLower();\n  \
    \          }\n        }\n        return new string(newChars);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in str) {\n            if (char.IsLower(c)) {\n     \
    \           sb.Append(char.ToUpper(c));\n            } else {\n              \
    \  sb.Append(char.ToLower(c));\n            }\n        }\n        return sb.ToString();",
  "        char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars[i].ToUpper() ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n\
    \        return new string(flipped);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        char[]\
    \ chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        bool isUpper\
    \ = false;\n        for (int i = 0; i < charArray.Length; i++) {\n           \
    \ if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n                isUpper =\
    \ true;\n            }\n            if (charArray[i] >= 'A' && charArray[i] <=\
    \ 'Z') {\n                isUpper = false;\n            }\n            if (charArray[i]\
    \ == ' ') {\n                newCharArray[i] = ' ';\n            }\n         \
    \   else {\n                if (isUpper) {\n                    newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n                }\n                else {\n  \
    \                  newCharArray[i] = (char)(charArray[i] - 32);\n            \
    \    }\n            }\n        }\n        return new string(newCharArray);", " \
    \       char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[str.Length];\n        for (int i = 0; i < str.Length; i++) {\n        \
    \    if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] - 32);\n            } else if (charArray[i] >= 'A' &&\
    \ charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        Array.Sort(chars);\n        return\
    \ new string(chars);", "        char[] chars = str.ToCharArray();\n        Array.Sort(chars);\n\
    \        return new string(chars);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n       \
    \         result += Char.ToLower(c);\n            } else {\n                result\
    \ += Char.ToUpper(c);\n            }\n        }\n        return result;", "  \
    \      char[] chars = str.ToCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in chars) {\n            if (Char.IsLower(c)) {\n   \
    \             sb.Append(char.ToUpperInvariant(c));\n            } else {\n   \
    \             sb.Append(char.ToLowerInvariant(c));\n            }\n        }\n\
    \        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            if (chars[i].ToString().Equals(\"A\", StringComparison.InvariantCultureIgnoreCase))\
    \ {\n                flipped[i] = chars[i].ToString().ToUpper();\n           \
    \ } else if (chars[i].ToString().Equals(\"a\", StringComparison.InvariantCultureIgnoreCase))\
    \ {\n                flipped[i] = chars[i].ToString().ToLower();\n           \
    \ } else {\n                flipped[i] = chars[i];\n            }\n        }\n\
    \        return new string(flipped);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        char[]\
    \ charArray = str.ToCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in charArray) {\n            if (Char.IsLower(c)) {\n\
    \                sb.Append(char.ToUpperInvariant(c));\n            } else {\n\
    \                sb.Append(char.ToLowerInvariant(c));\n            }\n       \
    \ }\n        return sb.ToString();", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        Array.Sort(charArray);\n        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in charArray) {\n            if (char.IsUpper(c)) {\n\
    \                sb.Append(char.ToLower(c));\n            } else {\n         \
    \       sb.Append(char.ToUpper(c));\n            }\n        }\n        return\
    \ sb.ToString();", "        StringBuilder sb = new StringBuilder();\n        foreach\
    \ (char c in str) {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        char[] flippedChars = new char[chars.Length];\n        for (int i = 0;\
    \ i < chars.Length; i++) {\n            flippedChars[i] = (char.IsUpper(chars[i])\
    \ ? char.ToLower(chars[i]) : char.ToUpper(chars[i]));\n        }\n        return\
    \ new string(flippedChars);", "        char[] chars = str.ToCharArray();\n   \
    \     for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] > 'Z')\
    \ {\n                chars[i] = chars[i] - 32;\n            }\n            if\
    \ (chars[i] < 'A') {\n                chars[i] = chars[i] + 32;\n            }\n\
    \        }\n        return new string(chars);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] != chars[i].ToUpper()\
    \ ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n        return new string(flipped);",
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (Char.IsUpper(c)) {\n                result\
    \ += Char.ToLower(c);\n            } else {\n                result += Char.ToUpper(c);\n\
    \            }\n        }\n        return result;", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] != chars[i].ToUpper()\
    \ ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n        return new string(flipped);",
  "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] charArray =\
    \ str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in str) {\n            if (Char.IsLower(c)) {\n     \
    \           sb.Append(char.ToUpper(c));\n            } else {\n              \
    \  sb.Append(char.ToLower(c));\n            }\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] > 'Z' ? 'A' + (chars[i]\
    \ - 'A' + 26) : chars[i] > 'z' ? 'a' + (chars[i] - 'a' + 26) : chars[i];\n   \
    \     }\n        return new string(flipped);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            result += (char)(Char.ToUpper(c));\n\
    \        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[flipped.Length - 1 - i] = chars[i];\n\
    \        }\n        return new string(flipped);", "        char[] chars = str.ToCharArray();\n\
    \        char[] newChars = new char[str.Length];\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            if (chars[i].ToString().Equals(\"A\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                newChars[i] = chars[i].ToString().ToUpper();\n          \
    \  }\n            else if (chars[i].ToString().Equals(\"a\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                newChars[i] = chars[i].ToString().ToLower();\n          \
    \  }\n            else {\n                newChars[i] = chars[i];\n          \
    \  }\n        }\n        return new string(newChars);", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        foreach (char c in charArray) {\n            if (Char.IsLower(c)) {\n\
    \                newCharArray[newCharArray.Length - 1 - charArray.IndexOf(c)]\
    \ = c;\n            } else {\n                newCharArray[newCharArray.Length\
    \ - 1 - charArray.IndexOf(c)] = Char.ToUpper(c);\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else {\n                newCharArray[i] = charArray[i];\n       \
    \     }\n        }\n        return new string(newCharArray);", "        char[]\
    \ chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        char[]\
    \ chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars[i].ToUpper() ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n\
    \        return new string(flipped);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] != chars.ToUpper(i)\
    \ ? chars[i] : chars.ToLower(i);\n        }\n        return new string(flipped);",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] chars = str.ToCharArray();\n        char[] newChars\
    \ = new char[chars.Length];\n        for (int i = 0; i < chars.Length; i++) {\n\
    \            if (chars[i].ToString().ToLower() == chars[i].ToString().ToUpper())\
    \ {\n                newChars[i] = chars[i].ToString().ToLower();\n          \
    \  } else {\n                newChars[i] = chars[i].ToString().ToUpper();\n  \
    \          }\n        }\n        return new string(newChars);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] flippedCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                flippedCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                flippedCharArray[i] = (char)(charArray[i] - 32);\n          \
    \  } else {\n                flippedCharArray[i] = charArray[i];\n           \
    \ }\n        }\n        return new string(flippedCharArray);", "        char[]\
    \ chars = str.ToCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                sb.Append(chars[i].ToString().ToUpper());\n\
    \            } else {\n                sb.Append(chars[i].ToString().ToLower());\n\
    \            }\n        }\n        return sb.ToString();", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            result += (char)(Char.ToUpper(c));\n\
    \        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        bool isUpper\
    \ = false;\n        for (int i = 0; i < charArray.Length; i++) {\n           \
    \ if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n                isUpper =\
    \ true;\n            }\n            if (charArray[i] >= 'A' && charArray[i] <=\
    \ 'Z') {\n                isUpper = false;\n            }\n            if (isUpper)\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  } else {\n                newCharArray[i] = charArray[i];\n            }\n\
    \        }\n        return new string(newCharArray);", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n     \
    \           sb.Append(char.ToLower(c));\n            } else {\n              \
    \  sb.Append(c);\n            }\n        }\n        return sb.ToString();", " \
    \       char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] + 'A' - 'a');\n            } else\
    \ if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 'a' - 'A');\n            } else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        char[] chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ == chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            result += (char.IsUpper(c))\
    \ ? (char.ToLower(c)) : (char.ToUpper(c));\n        }\n        return result;",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] charArray = str.ToCharArray();\n        char[] newCharArray\
    \ = new char[charArray.Length];\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n    \
    \            newCharArray[i] = (char)(charArray[i] - 32);\n            } else\
    \ if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            } else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (Char.IsLower(c)) {\n                result\
    \ += Char.ToUpper(c);\n            } else {\n                result += Char.ToLower(c);\n\
    \            }\n        }\n        return result;", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] flippedCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                flippedCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else {\n                flippedCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(flippedCharArray);", "  \
    \      char[] charArray = str.ToCharArray();\n        Array.Sort(charArray);\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in charArray)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(c);\n            }\n        }\n\
    \        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[flipped.Length - 1 - i] = chars[i];\n\
    \        }\n        return new string(flipped);", "        string result = \"\"\
    ;\n        foreach (char c in str) {\n            result += (char)(c ^ 32);\n\
    \        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 32);\n          \
    \  }\n            else {\n                newCharArray[i] = charArray[i];\n  \
    \          }\n        }\n        return new string(newCharArray);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] charArray = str.ToCharArray();\n        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (char c in charArray) {\n       \
    \     if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n  \
    \          } else {\n                sb.Append(char.ToLower(c));\n           \
    \ }\n        }\n        return sb.ToString();", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] > 'Z' ? 'A' + (chars[i]\
    \ - 'Z') : chars[i] > 'z' ? 'a' + (chars[i] - 'z') : chars[i];\n        }\n  \
    \      return new string(flipped);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else {\n                newCharArray[i] = charArray[i];\n       \
    \     }\n        }\n        return new string(newCharArray);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (Char.IsLower(c))\
    \ {\n                result += Char.ToUpper(c);\n            } else {\n      \
    \          result += Char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] charArray = str.ToCharArray();\n        char[] newCharArray\
    \ = new char[charArray.Length];\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n    \
    \            newCharArray[i] = (char)(charArray[i] - 32);\n            } else\
    \ if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            } else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars[i].ToUpper() ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n\
    \        return new string(flipped);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flippedChars = new char[chars.Length];\n        for (int i = 0;\
    \ i < chars.Length; i++) {\n            flippedChars[i] = chars[i] != chars[i].ToUpper()\
    \ ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n        return new string(flippedChars);",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            }\n        \
    \    else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            }\n            else {\n          \
    \      newCharArray[i] = charArray[i];\n            }\n        }\n        return\
    \ new string(newCharArray);", "        char[] chars = str.ToCharArray();\n   \
    \     char[] flipped = new char[chars.Length];\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i].ToString().Equals(\"A\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = (char)(char.ToUpper(chars[i]));\n          \
    \  }\n            else if (chars[i].ToString().Equals(\"a\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = (char)(char.ToLower(chars[i]));\n          \
    \  }\n            else {\n                flipped[i] = chars[i];\n           \
    \ }\n        }\n        return new string(flipped);", "        char[] chars =\
    \ str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n     \
    \   for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars[i].ToUpper() ? chars[i].ToUpper() : chars[i].ToLower();\n        }\n\
    \        return new string(flipped);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            if (chars[i].ToString().ToLower() != chars[i].ToString().ToUpper())\
    \ {\n                flipped[i] = chars[i].ToString().ToUpper();\n           \
    \ } else {\n                flipped[i] = chars[i].ToString().ToLower();\n    \
    \        }\n        }\n        return new string(flipped);", "        char[] chars\
    \ = str.ToCharArray();\n        Array.Sort(chars);\n        StringBuilder sb =\
    \ new StringBuilder();\n        foreach (char c in chars) {\n            if (Char.IsLower(c))\
    \ {\n                sb.Append(char.ToUpper(c));\n            } else {\n     \
    \           sb.Append(char.ToLower(c));\n            }\n        }\n        return\
    \ sb.ToString();", "        char[] chars = str.ToCharArray();\n        for (int\
    \ i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().Equals(\"\
    A\", StringComparison.OrdinalIgnoreCase)) {\n                chars[i] = chars[i].ToString().ToUpper();\n\
    \            } else if (chars[i].ToString().Equals(\"a\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"B\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"b\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"C\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"c\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"D\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"d\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"E\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"e\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"F\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"f\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"G\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"g\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"H\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"h\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToLower();\n            }\
    \ else if (chars[i].ToString().Equals(\"I\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = chars[i].ToString().ToUpper();\n            }\
    \ else if (chars[i].ToString().Equals(\"i\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                chars[i] = ", "        char[] chars = str.ToCharArray();\n\
    \        Array.Sort(chars);\n        StringBuilder sb = new StringBuilder();\n\
    \        foreach (char c in chars) {\n            if (Char.IsLower(c)) {\n   \
    \             sb.Append(char.ToUpperInvariant(c));\n            } else {\n   \
    \             sb.Append(char.ToLowerInvariant(c));\n            }\n        }\n\
    \        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        Array.Reverse(chars);\n        return new string(chars);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)\
    \ {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpperInvariant(c));\n\
    \            } else {\n                sb.Append(char.ToLowerInvariant(c));\n\
    \            }\n        }\n        return sb.ToString();", "        char[] charArray\
    \ = str.ToCharArray();\n        StringBuilder sb = new StringBuilder();\n    \
    \    foreach (char c in charArray) {\n            if (Char.IsUpper(c)) {\n   \
    \             sb.Append(char.ToLower(c));\n            } else {\n            \
    \    sb.Append(c);\n            }\n        }\n        return sb.ToString();",
  "        char[] charArray = str.ToCharArray();\n        char[] flippedCharArray\
    \ = new char[charArray.Length];\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            flippedCharArray[i] = charArray[i];\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                flippedCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            }\n            if (charArray[i] >= 'A' && charArray[i] <=\
    \ 'Z') {\n                flippedCharArray[i] = (char)(charArray[i] + 32);\n \
    \           }\n        }\n        return new string(flippedCharArray);", "   \
    \     char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            }\n        \
    \    else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            }\n            else {\n          \
    \      newCharArray[i] = charArray[i];\n            }\n        }\n        return\
    \ new string(newCharArray);", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (char.IsLower(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n\
    \            }\n        }\n        return result;", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 'A' - 'a');\n            }\n            else if (charArray[i] >= 'A' && charArray[i]\
    \ <= 'Z') {\n                newCharArray[i] = (char)(charArray[i] + 'a' - 'A');\n\
    \            }\n            else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            }\n            else if (charArray[i] >= 'A' && charArray[i]\
    \ <= 'Z') {\n                newCharArray[i] = (char)(charArray[i] + 32);\n  \
    \          }\n            else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        Array.Reverse(chars);\n        return\
    \ new string(chars);", "        string result = \"\";\n        foreach (char c\
    \ in str) {\n            if (char.IsLower(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += char.ToLower(c);\n          \
    \  }\n        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            if (chars[i].ToString().ToLower() != chars[i].ToString().ToUpper())\
    \ {\n                flipped[i] = chars[i].ToString().ToUpper();\n           \
    \ } else {\n                flipped[i] = chars[i].ToString().ToLower();\n    \
    \        }\n        }\n        return new string(flipped);", "        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (char c in str) {\n            if\
    \ (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n         \
    \   } else {\n                sb.Append(char.ToLower(c));\n            }\n   \
    \     }\n        return sb.ToString();", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            if (Char.IsLower(c)) {\n       \
    \         result += Char.ToUpper(c);\n            } else {\n                result\
    \ += Char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[flipped.Length\
    \ - 1 - i] = chars[i];\n        }\n        return new string(flipped);", "   \
    \     char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        char[] charArray = str.ToCharArray();\n        char[] newCharArray\
    \ = new char[charArray.Length];\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n    \
    \            newCharArray[i] = (char)(charArray[i] - 32);\n            } else\
    \ if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            } else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ 'a') {\n                flipped[i] = 'A';\n            } else if (chars[i] ==\
    \ 'A') {\n                flipped[i] = 'a';\n            } else {\n          \
    \      flipped[i] = chars[i];\n            }\n        }\n        return new string(flipped);",
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (Char.IsLower(c)) {\n                result += Char.ToUpper(c);\n          \
    \  } else {\n                result += Char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        char[] chars = str.ToCharArray();\n \
    \       char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] > 'Z' ? 'A' + (chars[i]\
    \ - 'A') : chars[i];\n        }\n        return new string(flipped);", "     \
    \   string result = \"\";\n        foreach (char c in str) {\n            if (Char.IsUpper(c))\
    \ {\n                result += Char.ToLower(c);\n            } else {\n      \
    \          result += Char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in str) {\n\
    \            if (Char.IsUpper(c)) {\n                result += Char.ToLower(c);\n\
    \            } else {\n                result += Char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", "        string result = \"\";\n   \
    \     foreach (char c in str) {\n            if (char.IsLower(c)) {\n        \
    \        result += char.ToUpper(c);\n            } else {\n                result\
    \ += char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (Char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        string result = \"\"\
    ;\n        foreach (char c in str) {\n            if (Char.IsLower(c)) {\n   \
    \             result += Char.ToUpper(c);\n            } else {\n             \
    \   result += Char.ToLower(c);\n            }\n        }\n        return result;",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            }\n        \
    \    else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i]\
    \ = (char)(charArray[i] + 32);\n            }\n            else {\n          \
    \      newCharArray[i] = charArray[i];\n            }\n        }\n        return\
    \ new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] + 'A' - 'a');\n\
    \            }\n            else if (charArray[i] >= 'A' && charArray[i] <= 'Z')\
    \ {\n                newCharArray[i] = (char)(charArray[i] + 'a' - 'A');\n   \
    \         }\n            else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            result += (char)(Char.ToUpper(c));\n\
    \        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] + 'A' - 'a');\n\
    \            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n      \
    \          newCharArray[i] = (char)(charArray[i] + 'a' - 'A');\n            }\
    \ else {\n                newCharArray[i] = charArray[i];\n            }\n   \
    \     }\n        return new string(newCharArray);", "        char[] charArray\
    \ = str.ToCharArray();\n        StringBuilder sb = new StringBuilder();\n    \
    \    foreach (char c in charArray) {\n            if (Char.IsLower(c)) {\n   \
    \             sb.Append(char.ToUpper(c));\n            } else {\n            \
    \    sb.Append(char.ToLower(c));\n            }\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (Char.IsLower(c)) {\n                result += Char.ToUpper(c);\n          \
    \  } else {\n                result += Char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            if (Char.IsLower(c)) {\n       \
    \         result += Char.ToUpper(c);\n            } else {\n                result\
    \ += Char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i] ==\
    \ 'a') {\n                newChars[i] = 'A';\n            } else if (chars[i]\
    \ == 'A') {\n                newChars[i] = 'a';\n            } else {\n      \
    \          newChars[i] = chars[i];\n            }\n        }\n        return new\
    \ string(newChars);", "        string result = \"\";\n        foreach (char c\
    \ in str) {\n            if (Char.IsLower(c)) {\n                result += Char.ToUpper(c);\n\
    \            } else {\n                result += Char.ToLower(c);\n          \
    \  }\n        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        string result = \"\";\n  \
    \      foreach (char c in str) {\n            if (char.IsLower(c)) {\n       \
    \         result += char.ToUpper(c);\n            } else {\n                result\
    \ += char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[i] = chars[i] > chars.Length - 1 ?\
    \ chars.Length - 1 : chars[i];\n        }\n        return new string(flipped);",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        char[] flipped = new char[chars.Length];\n        for (int i = 0; i <\
    \ chars.Length; i++) {\n            flipped[chars.Length - 1 - i] = chars[i];\n\
    \        }\n        return new string(flipped);", "        string result = \"\"\
    ;\n        foreach (char c in str) {\n            result += (char)(Char.ToUpper(c));\n\
    \        }\n        return result;", "        char[] charArray = str.ToCharArray();\n\
    \        char[] newCharArray = new char[charArray.Length];\n        for (int i\
    \ = 0; i < charArray.Length; i++) {\n            if (charArray[i] >= 'a' && charArray[i]\
    \ <= 'z') {\n                newCharArray[i] = (char)(charArray[i] - 32);\n  \
    \          } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n        \
    \        newCharArray[i] = (char)(charArray[i] + 32);\n            } else {\n\
    \                newCharArray[i] = charArray[i];\n            }\n        }\n \
    \       return new string(newCharArray);", "        char[] chars = str.ToCharArray();\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in chars)\
    \ {\n            if (Char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        string result = \"\"\
    ;\n        foreach (char c in str) {\n            if (Char.IsLower(c)) {\n   \
    \             result += Char.ToUpper(c);\n            } else {\n             \
    \   result += Char.ToLower(c);\n            }\n        }\n        return result;",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            flipped[i] = chars[i]\
    \ != chars.ToUpper(i) ? chars[i] : chars.ToLower(i);\n        }\n        return\
    \ new string(flipped);", "        char[] charArray = str.ToCharArray();\n    \
    \    char[] newCharArray = new char[charArray.Length];\n        bool isUpper =\
    \ false;\n        for (int i = 0; i < charArray.Length; i++) {\n            if\
    \ (charArray[i] >= 'a' && charArray[i] <= 'z') {\n                isUpper = !isUpper;\n\
    \            }\n            newCharArray[i] = isUpper ? charArray[i].ToUpper()\
    \ : charArray[i].ToLower();\n        }\n        return new string(newCharArray);",
  "        StringBuilder sb = new StringBuilder(str.Length);\n        foreach (char\
    \ c in str) {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] charArray =\
    \ str.ToCharArray();\n        char[] newCharArray = new char[str.Length];\n  \
    \      for (int i = 0; i < str.Length; i++) {\n            if (charArray[i] >=\
    \ 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        string result = \"\";\n \
    \       foreach (char c in str) {\n            if (char.IsLower(c)) {\n      \
    \          result += char.ToUpper(c);\n            } else {\n                result\
    \ += char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for(int i = 0; i < charArray.Length; i++) {\n\
    \            if(charArray[i] >= 'a' && charArray[i] <= 'z') {\n              \
    \  newCharArray[i] = (char)(charArray[i] - 32);\n            } else {\n      \
    \          newCharArray[i] = charArray[i];\n            }\n        }\n       \
    \ return new string(newCharArray);", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (char.IsLower(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n\
    \            }\n        }\n        return result;", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for(int i = 0; i < charArray.Length; i++) {\n            if(charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            }\n            else {\n                newCharArray[i] =\
    \ charArray[i];\n            }\n        }\n        return new string(newCharArray);",
  "        char[] charArray = str.ToCharArray();\n        char[] newCharArray = new\
    \ char[charArray.Length];\n        for (int i = 0; i < charArray.Length; i++)\
    \ {\n            if (charArray[i] >= 'a' && charArray[i] <= 'z') {\n         \
    \       newCharArray[i] = (char)(charArray[i] - 32);\n            } else if (charArray[i]\
    \ >= 'A' && charArray[i] <= 'Z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ + 32);\n            } else {\n                newCharArray[i] = charArray[i];\n\
    \            }\n        }\n        return new string(newCharArray);", "      \
    \  char[] charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            if (charArray[i]\
    \ >= 'a' && charArray[i] <= 'z') {\n                newCharArray[i] = (char)(charArray[i]\
    \ - 32);\n            } else if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n\
    \                newCharArray[i] = (char)(charArray[i] + 32);\n            } else\
    \ {\n                newCharArray[i] = charArray[i];\n            }\n        }\n\
    \        return new string(newCharArray);", "        string result = \"\";\n \
    \       foreach (char c in str) {\n            if (Char.IsLower(c)) {\n      \
    \          result += Char.ToUpper(c);\n            } else {\n                result\
    \ += Char.ToLower(c);\n            }\n        }\n        return result;", "  \
    \      char[] chars = str.ToCharArray();\n        char[] flipped = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().Equals(\"\
    A\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'a';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"B\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'b';\n            }\n            else if (chars[i].ToString().Equals(\"\
    C\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'c';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"D\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'd';\n            }\n            else if (chars[i].ToString().Equals(\"\
    E\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'e';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"F\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'f';\n            }\n            else if (chars[i].ToString().Equals(\"\
    G\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'g';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"H\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'h';\n            }\n            else if (chars[i].ToString().Equals(\"\
    I\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'i';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"J\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'j';\n            }\n            else if (chars[i].ToString().Equals(\"\
    K\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'k';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"L\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'l';\n            }\n            else if (chars[i].ToString().Equals(\"\
    M\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'm';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"N\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'n';\n            }\n            else if (chars[i].ToString().Equals(\"\
    O\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'o';\n\
    \            }\n            else if (chars[i].ToString().Equals(\"P\", StringComparison.OrdinalIgnoreCase))\
    \ {\n                flipped[i] = 'p';\n            }\n            else if (chars[i].ToString().Equals(\"\
    Q\", StringComparison.OrdinalIgnoreCase)) {\n                flipped[i] = 'q';\n\
    \            }\n            else if (chars[i].ToString", "        char[] charArray\
    \ = str.ToCharArray();\n        char[] flippedCharArray = new char[charArray.Length];\n\
    \        for (int i = 0; i < charArray.Length; i++) {\n            flippedCharArray[i]\
    \ = charArray[i];\n            if (charArray[i] >= 'a' && charArray[i] <= 'z')\
    \ {\n                flippedCharArray[i] = (char)(charArray[i] - 32);\n      \
    \      }\n        }\n        return new string(flippedCharArray);", "        char[]\
    \ chars = str.ToCharArray();\n        char[] newChars = new char[chars.Length];\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (chars[i].ToString().ToLower()\
    \ != chars[i].ToString().ToUpper()) {\n                newChars[i] = chars[i].ToString().ToUpper();\n\
    \            } else {\n                newChars[i] = chars[i].ToString().ToLower();\n\
    \            }\n        }\n        return new string(newChars);", "        char[]\
    \ charArray = str.ToCharArray();\n        char[] newCharArray = new char[charArray.Length];\n\
    \        bool isUpper = false;\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (charArray[i] >= 'A' && charArray[i] <= 'Z') {\n    \
    \            newCharArray[i] = (char)(charArray[i] - 'A' + 'a');\n           \
    \     isUpper = true;\n            }\n            else {\n                newCharArray[i]\
    \ = charArray[i];\n            }\n        }\n        if (isUpper) {\n        \
    \    return new string(newCharArray);\n        }\n        else {\n           \
    \ return new string(newCharArray).ToUpper();\n        }"]
stop_tokens:
- "\n    }\n"

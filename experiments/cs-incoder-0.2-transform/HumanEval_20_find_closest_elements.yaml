name: HumanEval_20_find_closest_elements
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // From a supplied list of numbers (of length at least two) select\
  \ and return two that are the closest to each\n    // other and return them in order\
  \ (smaller number, larger number).\n    // >>> FindClosestElements((new List<float>(new\
  \ float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f})))\n\
  \    // (Tuple.Create(2.0f, 2.2f))\n    // >>> FindClosestElements((new List<float>(new\
  \ float[]{(float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f})))\n\
  \    // (Tuple.Create(2.0f, 2.0f))\n    public static Tuple<float, float> FindClosestElements(List<float>\
  \ numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindClosestElements((new\
  \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)3.9f, (float)4.0f, (float)5.0f,\
  \ (float)2.2f}))).Equals((Tuple.Create(3.9f, 4.0f))));\n    Debug.Assert(FindClosestElements((new\
  \ List<float>(new float[]{(float)1.0f, (float)2.0f, (float)5.9f, (float)4.0f, (float)5.0f}))).Equals((Tuple.Create(5.0f,\
  \ 5.9f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,\
  \ (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.2f}))).Equals((Tuple.Create(2.0f,\
  \ 2.2f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.0f,\
  \ (float)2.0f, (float)3.0f, (float)4.0f, (float)5.0f, (float)2.0f}))).Equals((Tuple.Create(2.0f,\
  \ 2.0f))));\n    Debug.Assert(FindClosestElements((new List<float>(new float[]{(float)1.1f,\
  \ (float)2.2f, (float)3.1f, (float)4.1f, (float)5.1f}))).Equals((Tuple.Create(2.2f,\
  \ 3.1f))));\n    }\n\n}\n"
completions: ["        float smallestDifference = float.MaxValue;\n        float smallestDifferenceIndex\
    \ = -1;\n        float largestDifference = float.MinValue;\n        float largestDifferenceIndex\
    \ = -1;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float\
    \ difference = numbers[i + 1] - numbers[i];\n            if (difference < smallestDifference)\
    \ {\n                smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        if (smallestDifferenceIndex == -1) {\n\
    \            return new Tuple<float, float>(float.MaxValue, float.MinValue);\n\
    \        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifferenceIndex = -1;\n        float largestDifference\
    \ = float.MinValue;\n        float largestDifferenceIndex = -1;\n        for (int\
    \ i = 0; i < numbers.Count - 1; i++) {\n            float difference = numbers[i\
    \ + 1] - numbers[i];\n            if (difference < smallestDifference) {\n   \
    \             smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        if (smallestDifferenceIndex == -1) {\n\
    \            return null;\n        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        float smallestDifference = float.MaxValue;\n\
    \        float largestDifference = float.MinValue;\n        float smallestElement\
    \ = float.MaxValue;\n        float largestElement = float.MinValue;\n        float\
    \ smallestElement2 = float.MaxValue;\n        float largestElement2 = float.MinValue;\n\
    \        float smallestElement3 = float.MaxValue;\n        float largestElement3\
    \ = float.MinValue;\n        float smallestElement4 = float.MaxValue;\n      \
    \  float largestElement4 = float.MinValue;\n        float smallestElement5 = float.MaxValue;\n\
    \        float largestElement5 = float.MinValue;\n        float smallestElement6\
    \ = float.MaxValue;\n        float largestElement6 = float.MinValue;\n       \
    \ float smallestElement7 = float.MaxValue;\n        float largestElement7 = float.MinValue;\n\
    \        float smallestElement8 = float.MaxValue;\n        float largestElement8\
    \ = float.MinValue;\n        float smallestElement9 = float.MaxValue;\n      \
    \  float largestElement9 = float.MinValue;\n        float smallestElement10 =\
    \ float.MaxValue;\n        float largestElement10 = float.MinValue;\n        float\
    \ smallestElement11 = float.MaxValue;\n        float largestElement11 = float.MinValue;\n\
    \        float smallestElement12 = float.MaxValue;\n        float largestElement12\
    \ = float.MinValue;\n        float smallestElement13 = float.MaxValue;\n     \
    \   float largestElement13 = float.MinValue;\n        float smallestElement14\
    \ = float.MaxValue;\n        float largestElement14 = float.MinValue;\n      \
    \  float smallestElement15 = float.MaxValue;\n        float largestElement15 =\
    \ float.MinValue;\n        float smallestElement16 = float.MaxValue;\n       \
    \ float largestElement16 = float.MinValue;\n        float smallestElement17 =\
    \ float.MaxValue;\n        float largestElement17 = float.MinValue;\n        float\
    \ smallestElement18 = float.MaxValue;\n        float largestElement18 = float.MinValue;\n\
    \        float smallestElement19 = float.MaxValue;\n        float largestElement19\
    \ = float.MinValue;\n        float smallestElement20 = float.MaxValue;\n     \
    \   float largestElement20 = float.MinValue;\n        float smallestElement21\
    \ = float.MaxValue;\n        float largestElement21 = float.MinValue;\n      \
    \  float smallestElement22 = float.Max", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifference2 = float.MaxValue;\n        float smallestDifference3\
    \ = float.MaxValue;\n        float smallestDifference4 = float.MaxValue;\n   \
    \     float smallestDifference5 = float.MaxValue;\n        float smallestDifference6\
    \ = float.MaxValue;\n        float smallestDifference7 = float.MaxValue;\n   \
    \     float smallestDifference8 = float.MaxValue;\n        float smallestDifference9\
    \ = float.MaxValue;\n        float smallestDifference10 = float.MaxValue;\n  \
    \      float smallestDifference11 = float.MaxValue;\n        float smallestDifference12\
    \ = float.MaxValue;\n        float smallestDifference13 = float.MaxValue;\n  \
    \      float smallestDifference14 = float.MaxValue;\n        float smallestDifference15\
    \ = float.MaxValue;\n        float smallestDifference16 = float.MaxValue;\n  \
    \      float smallestDifference17 = float.MaxValue;\n        float smallestDifference18\
    \ = float.MaxValue;\n        float smallestDifference19 = float.MaxValue;\n  \
    \      float smallestDifference20 = float.MaxValue;\n        float smallestDifference21\
    \ = float.MaxValue;\n        float smallestDifference22 = float.MaxValue;\n  \
    \      float smallestDifference23 = float.MaxValue;\n        float smallestDifference24\
    \ = float.MaxValue;\n        float smallestDifference25 = float.MaxValue;\n  \
    \      float smallestDifference26 = float.MaxValue;\n        float smallestDifference27\
    \ = float.MaxValue;\n        float smallestDifference28 = float.MaxValue;\n  \
    \      float smallestDifference29 = float.MaxValue;\n        float smallestDifference30\
    \ = float.MaxValue;\n        float smallestDifference31 = float.MaxValue;\n  \
    \      float smallestDifference32 = float.MaxValue;\n        float smallestDifference33\
    \ = float.MaxValue;\n        float smallestDifference34 = float.MaxValue;\n  \
    \      float smallestDifference35 = float.MaxValue;\n        float smallestDifference36\
    \ = float.MaxValue;\n        float smallestDifference37 = float.MaxValue;\n  \
    \      float smallestDifference38 = float.MaxValue;\n        float smallestDifference39\
    \ = float.MaxValue;\n        float smallestDifference40 = float.MaxValue;\n  \
    \      float smallestDifference41 = float.MaxValue;\n        float smallestDifference42\
    \ = float.MaxValue;\n        float smallestDifference43 = float.MaxValue;\n  \
    \      float smallestDifference44 = float", "        float smallestDifference\
    \ = float.MaxValue;\n        float smallestDifferenceIndex = 0;\n        float\
    \ largestDifference = float.MinValue;\n        float largestDifferenceIndex =\
    \ 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float\
    \ difference = numbers[i + 1] - numbers[i];\n            if (difference < smallestDifference)\
    \ {\n                smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i + 1;\n            }\n            if (difference > largestDifference) {\n\
    \                largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifferenceIndex = -1;\n        float largestDifference\
    \ = float.MinValue;\n        float largestDifferenceIndex = -1;\n        for (int\
    \ i = 0; i < numbers.Count - 1; i++) {\n            float difference = numbers[i\
    \ + 1] - numbers[i];\n            if (difference < smallestDifference) {\n   \
    \             smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        if (smallestDifferenceIndex == -1) {\n\
    \            return new Tuple<float, float>(float.MaxValue, float.MinValue);\n\
    \        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifferenceIndex = 0;\n        float smallestDifferenceValue\
    \ = numbers[0];\n        float smallestDifferenceValueIndex = numbers[0];\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            float difference\
    \ = numbers[i] - numbers[i - 1];\n            if (difference < smallestDifference)\
    \ {\n                smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n                smallestDifferenceValue = numbers[i];\n              \
    \  smallestDifferenceValueIndex = numbers[i - 1];\n            }\n        }\n\
    \        return new Tuple<float, float>(smallestDifferenceValue, smallestDifferenceValueIndex);",
  "        float smallestDifference = float.MaxValue;\n        float smallestDifferenceIndex\
    \ = 0;\n        float smallestDifferenceValue = numbers[0];\n        float smallestDifferenceValueIndex\
    \ = numbers[0];\n        for (int i = 1; i < numbers.Count; i++) {\n         \
    \   float difference = numbers[i] - numbers[i - 1];\n            if (difference\
    \ < smallestDifference) {\n                smallestDifference = difference;\n\
    \                smallestDifferenceIndex = i;\n                smallestDifferenceValue\
    \ = numbers[i];\n                smallestDifferenceValueIndex = numbers[i - 1];\n\
    \            }\n        }\n        return new Tuple<float, float>(smallestDifferenceValue,\
    \ smallestDifferenceValueIndex);", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifferenceIndex = 0;\n        float largestDifference =\
    \ float.MinValue;\n        float largestDifferenceIndex = 0;\n        for (int\
    \ i = 0; i < numbers.Count - 1; i++) {\n            float difference = numbers[i\
    \ + 1] - numbers[i];\n            if (difference < smallestDifference) {\n   \
    \             smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        if (numbers.Count < 2) {\n    \
    \        throw new ArgumentException(\"Must have at least two numbers to compare\"\
    );\n        }\n        float smallest = numbers[0];\n        float largest = numbers[0];\n\
    \        float smallestIndex = -1;\n        float largestIndex = -1;\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            float current = numbers[i];\n\
    \            if (current < smallest) {\n                smallest = current;\n\
    \                smallestIndex = i;\n            }\n            if (current >\
    \ largest) {\n                largest = current;\n                largestIndex\
    \ = i;\n            }\n        }\n        if (smallestIndex == -1) {\n       \
    \     throw new ArgumentException(\"No numbers found\");\n        }\n        if\
    \ (largestIndex == -1) {\n            throw new ArgumentException(\"No numbers\
    \ found\");\n        }\n        return Tuple.Create(smallest, largest);", "  \
    \      float smallestDifference = float.MaxValue;\n        float smallestDifferenceIndex\
    \ = -1;\n        float largestDifference = float.MinValue;\n        float largestDifferenceIndex\
    \ = -1;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float\
    \ difference = numbers[i + 1] - numbers[i];\n            if (difference < smallestDifference)\
    \ {\n                smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        return Tuple.Create(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        if (numbers.Count < 2) return null;\n\
    \        float smallestDifference = float.MaxValue;\n        float smallestDifferenceIndex\
    \ = 0;\n        float largestDifference = float.MinValue;\n        float largestDifferenceIndex\
    \ = 0;\n        for (int i = 0; i < numbers.Count - 1; i++) {\n            float\
    \ difference = numbers[i + 1] - numbers[i];\n            if (difference < smallestDifference)\
    \ {\n                smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n            }\n            if (difference > largestDifference) {\n   \
    \             largestDifference = difference;\n                largestDifferenceIndex\
    \ = i;\n            }\n        }\n        return new Tuple<float, float>(numbers[smallestDifferenceIndex],\
    \ numbers[largestDifferenceIndex]);", "        float smallestDifference = float.MaxValue;\n\
    \        float smallestDifferenceIndex = 0;\n        float smallestDifferenceValue\
    \ = float.MaxValue;\n        float smallestDifferenceValueIndex = 0;\n       \
    \ float smallestDifferenceValue2 = float.MaxValue;\n        float smallestDifferenceValue2Index\
    \ = 0;\n        float smallestDifferenceValue3 = float.MaxValue;\n        float\
    \ smallestDifferenceValue3Index = 0;\n        float smallestDifferenceValue4 =\
    \ float.MaxValue;\n        float smallestDifferenceValue4Index = 0;\n        float\
    \ smallestDifferenceValue5 = float.MaxValue;\n        float smallestDifferenceValue5Index\
    \ = 0;\n        float smallestDifferenceValue6 = float.MaxValue;\n        float\
    \ smallestDifferenceValue6Index = 0;\n        float smallestDifferenceValue7 =\
    \ float.MaxValue;\n        float smallestDifferenceValue7Index = 0;\n        float\
    \ smallestDifferenceValue8 = float.MaxValue;\n        float smallestDifferenceValue8Index\
    \ = 0;\n        float smallestDifferenceValue9 = float.MaxValue;\n        float\
    \ smallestDifferenceValue9Index = 0;\n        float smallestDifferenceValue10\
    \ = float.MaxValue;\n        float smallestDifferenceValue10Index = 0;\n     \
    \   float smallestDifferenceValue11 = float.MaxValue;\n        float smallestDifferenceValue11Index\
    \ = 0;\n        float smallestDifferenceValue12 = float.MaxValue;\n        float\
    \ smallestDifferenceValue12Index = 0;\n        float smallestDifferenceValue13\
    \ = float.MaxValue;\n        float smallestDifferenceValue13Index = 0;\n     \
    \   float smallestDifferenceValue14 = float.MaxValue;\n        float smallestDifferenceValue14Index\
    \ = 0;\n        float smallestDifferenceValue15 = float.MaxValue;\n        float\
    \ smallestDifferenceValue15Index = 0;\n        float smallestDifferenceValue16\
    \ = float.MaxValue;\n        float smallestDifferenceValue16Index = 0;\n     \
    \   float smallestDifferenceValue17 = float.MaxValue;\n        float smallestDifferenceValue17Index\
    \ = 0;\n        float smallestDifferenceValue18 = float.MaxValue;\n        float\
    \ smallestDifferenceValue18Index = 0;\n        float smallestDifferenceValue19\
    \ = float.MaxValue;\n        float smallestDifferenceValue19Index = 0;\n     \
    \   float smallestDifferenceValue20 = float.MaxValue;\n        float smallestDifferenceValue20Index\
    \ = 0;\n        float smallestDifferenceValue21 = float.MaxValue;\n        float\
    \ smallestDifferenceValue21Index = 0;\n        float smallestDifferenceValue22\
    \ = float.MaxValue;\n        float smallestDifferenceValue22Index = 0;\n     \
    \   ", "        float smallestDifference = float.MaxValue;\n        float smallestDifference2\
    \ = float.MaxValue;\n        float smallestDifference3 = float.MaxValue;\n   \
    \     float smallestDifference4 = float.MaxValue;\n        float smallestDifference5\
    \ = float.MaxValue;\n        float smallestDifference6 = float.MaxValue;\n   \
    \     float smallestDifference7 = float.MaxValue;\n        float smallestDifference8\
    \ = float.MaxValue;\n        float smallestDifference9 = float.MaxValue;\n   \
    \     float smallestDifference10 = float.MaxValue;\n        float smallestDifference11\
    \ = float.MaxValue;\n        float smallestDifference12 = float.MaxValue;\n  \
    \      float smallestDifference13 = float.MaxValue;\n        float smallestDifference14\
    \ = float.MaxValue;\n        float smallestDifference15 = float.MaxValue;\n  \
    \      float smallestDifference16 = float.MaxValue;\n        float smallestDifference17\
    \ = float.MaxValue;\n        float smallestDifference18 = float.MaxValue;\n  \
    \      float smallestDifference19 = float.MaxValue;\n        float smallestDifference20\
    \ = float.MaxValue;\n        float smallestDifference21 = float.MaxValue;\n  \
    \      float smallestDifference22 = float.MaxValue;\n        float smallestDifference23\
    \ = float.MaxValue;\n        float smallestDifference24 = float.MaxValue;\n  \
    \      float smallestDifference25 = float.MaxValue;\n        float smallestDifference26\
    \ = float.MaxValue;\n        float smallestDifference27 = float.MaxValue;\n  \
    \      float smallestDifference28 = float.MaxValue;\n        float smallestDifference29\
    \ = float.MaxValue;\n        float smallestDifference30 = float.MaxValue;\n  \
    \      float smallestDifference31 = float.MaxValue;\n        float smallestDifference32\
    \ = float.MaxValue;\n        float smallestDifference33 = float.MaxValue;\n  \
    \      float smallestDifference34 = float.MaxValue;\n        float smallestDifference35\
    \ = float.MaxValue;\n        float smallestDifference36 = float.MaxValue;\n  \
    \      float smallestDifference37 = float.MaxValue;\n        float smallestDifference38\
    \ = float.MaxValue;\n        float smallestDifference39 = float.MaxValue;\n  \
    \      float smallestDifference40 = float.MaxValue;\n        float smallestDifference41\
    \ = float.MaxValue;\n        float smallestDifference42 = float.MaxValue;\n  \
    \      float smallestDifference43 = float.MaxValue;\n        float smallestDifference44\
    \ = float", "        float smallestDifference = float.MaxValue;\n        float\
    \ smallestDifferenceIndex = 0;\n        float smallestDifferenceValue = numbers[0];\n\
    \        float smallestDifferenceValueIndex = numbers[0];\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            float difference = numbers[i] -\
    \ numbers[i - 1];\n            if (difference < smallestDifference) {\n      \
    \          smallestDifference = difference;\n                smallestDifferenceIndex\
    \ = i;\n                smallestDifferenceValue = numbers[i];\n              \
    \  smallestDifferenceValueIndex = numbers[i - 1];\n            }\n        }\n\
    \        return new Tuple<float, float>(smallestDifferenceValue, smallestDifferenceValueIndex);",
  "        if (numbers.Count < 2) {\n            throw new ArgumentException(\"Must\
    \ have at least two numbers to compare.\");\n        }\n\n        float smallestDifference\
    \ = float.MaxValue;\n        float largestDifference = float.MinValue;\n     \
    \   float smallestDifferenceIndex = -1;\n        float largestDifferenceIndex\
    \ = -1;\n\n        for (int i = 0; i < numbers.Count - 1; i++) {\n           \
    \ float difference = numbers[i + 1] - numbers[i];\n            if (difference\
    \ < smallestDifference) {\n                smallestDifference = difference;\n\
    \                smallestDifferenceIndex = i;\n            }\n            if (difference\
    \ > largestDifference) {\n                largestDifference = difference;\n  \
    \              largestDifferenceIndex = i;\n            }\n        }\n\n     \
    \   if (smallestDifferenceIndex == -1) {\n            return new Tuple<float,\
    \ float>(float.MaxValue, float.MinValue);\n        }\n\n        return new Tuple<float,\
    \ float>(numbers[smallestDifferenceIndex], numbers[largestDifferenceIndex]);",
  "        if (numbers.Count < 2) {\n            throw new ArgumentException(\"There\
    \ must be at least two numbers in the list.\");\n        }\n        float smallest\
    \ = numbers[0];\n        float largest = numbers[0];\n        float smallestDiff\
    \ = float.MaxValue;\n        float largestDiff = float.MinValue;\n        foreach\
    \ (float number in numbers) {\n            float diff = number - smallest;\n \
    \           if (diff < smallestDiff) {\n                smallestDiff = diff;\n\
    \                smallest = number;\n            }\n            diff = number\
    \ - largest;\n            if (diff > largestDiff) {\n                largestDiff\
    \ = diff;\n                largest = number;\n            }\n        }\n     \
    \   return new Tuple<float, float>(smallest, largest);", "        float smallest\
    \ = numbers.Min();\n        float largest = numbers.Max();\n        float midpoint\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint2 = smallest +\
    \ (largest - smallest) / 2;\n        float midpoint3 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint4 = smallest + (largest - smallest) / 2;\n     \
    \   float midpoint5 = smallest + (largest - smallest) / 2;\n        float midpoint6\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint7 = smallest +\
    \ (largest - smallest) / 2;\n        float midpoint8 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint9 = smallest + (largest - smallest) / 2;\n     \
    \   float midpoint10 = smallest + (largest - smallest) / 2;\n        float midpoint11\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint12 = smallest\
    \ + (largest - smallest) / 2;\n        float midpoint13 = smallest + (largest\
    \ - smallest) / 2;\n        float midpoint14 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint15 = smallest + (largest - smallest) / 2;\n    \
    \    float midpoint16 = smallest + (largest - smallest) / 2;\n        float midpoint17\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint18 = smallest\
    \ + (largest - smallest) / 2;\n        float midpoint19 = smallest + (largest\
    \ - smallest) / 2;\n        float midpoint20 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint21 = smallest + (largest - smallest) / 2;\n    \
    \    float midpoint22 = smallest + (largest - smallest) / 2;\n        float midpoint23\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint24 = smallest\
    \ + (largest - smallest) / 2;\n        float midpoint25 = smallest + (largest\
    \ - smallest) / 2;\n        float midpoint26 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint27 = smallest + (largest - smallest) / 2;\n    \
    \    float midpoint28 = smallest + (largest - smallest) / 2;\n        float midpoint29\
    \ = smallest + (largest - smallest) / 2;\n        float midpoint30 = smallest\
    \ + (largest - smallest) / 2;\n        float midpoint31 = smallest + (largest\
    \ - smallest) / 2;\n        float midpoint32 = smallest + (largest - smallest)\
    \ / 2;\n        float midpoint33 = smallest + (largest - smallest) / 2;\n    \
    \    float midpoint34 = smallest + (largest - smallest) / ", "        float smallestDifference\
    \ = float.MaxValue;\n        float largestDifference = float.MinValue;\n     \
    \   float smallestNumber = float.MaxValue;\n        float largestNumber = float.MinValue;\n\
    \        float smallestDifferenceSquare = float.MaxValue;\n        float largestDifferenceSquare\
    \ = float.MinValue;\n        float smallestNumberSquare = float.MaxValue;\n  \
    \      float largestNumberSquare = float.MinValue;\n        float smallestDifferenceSquareRoot\
    \ = float.MaxValue;\n        float largestDifferenceSquareRoot = float.MinValue;\n\
    \        float smallestNumberSquareRoot = float.MaxValue;\n        float largestNumberSquareRoot\
    \ = float.MinValue;\n        float smallestDifferenceRoot = float.MaxValue;\n\
    \        float largestDifferenceRoot = float.MinValue;\n        float smallestNumberRoot\
    \ = float.MaxValue;\n        float largestNumberRoot = float.MinValue;\n     \
    \   float smallestDifferenceRootSquare = float.MaxValue;\n        float largestDifferenceRootSquare\
    \ = float.MinValue;\n        float smallestNumberRootSquare = float.MaxValue;\n\
    \        float largestNumberRootSquare = float.MinValue;\n        float smallestDifferenceRootSquareRoot\
    \ = float.MaxValue;\n        float largestDifferenceRootSquareRoot = float.MinValue;\n\
    \        float smallestNumberRootSquareRoot = float.MaxValue;\n        float largestNumberRootSquareRoot\
    \ = float.MinValue;\n        float smallestDifferenceSquareRootSquare = float.MaxValue;\n\
    \        float largestDifferenceSquareRootSquare = float.MinValue;\n        float\
    \ smallestNumberSquareRootSquare = float.MaxValue;\n        float largestNumberSquareRootSquare\
    \ = float.MinValue;\n        float smallestDifferenceSquareRootSquareRoot = float.MaxValue;\n\
    \        float largestDifferenceSquareRootSquareRoot = float.MinValue;\n     \
    \   float smallestNumberSquareRootSquareRoot = float.MaxValue;\n        float\
    \ largestNumberSquareRootSquareRoot = float.MinValue;\n        float smallestDifferenceRootRoot\
    \ = float.MaxValue;\n        float largestDifferenceRootRoot = float.MinValue;\n\
    \        float smallestNumberRootRoot = float.MaxValue;\n        float largestNumberRootRoot\
    \ = float.MinValue;\n        float smallestDifferenceRootRootSquare = float.MaxValue;\n\
    \        float largestDifferenceRootRootSquare = float.MinValue;\n        float\
    \ smallestNumberRootRootSquare = float.MaxValue;\n        float largest", "  \
    \      float smallestDifference = float.MaxValue;\n        float smallestDifferenceIndex\
    \ = 0;\n        float largestDifference = float.MinValue;\n        float largestDifferenceIndex\
    \ = 0;\n        float smallestDifferenceValue = numbers[0];\n        float largestDifferenceValue\
    \ = numbers[0];\n        float smallestDifferenceDifference = float.MaxValue;\n\
    \        float largestDifferenceDifference = float.MinValue;\n        for (int\
    \ i = 0; i < numbers.Count; i++) {\n            float difference = numbers[i]\
    \ - smallestDifferenceValue;\n            if (difference < smallestDifferenceDifference)\
    \ {\n                smallestDifferenceDifference = difference;\n            \
    \    smallestDifferenceIndex = i;\n            }\n            difference = numbers[i]\
    \ - largestDifferenceValue;\n            if (difference > largestDifferenceDifference)\
    \ {\n                largestDifferenceDifference = difference;\n             \
    \   largestDifferenceIndex = i;\n            }\n        }\n        return new\
    \ Tuple<float, float>(smallestDifferenceValue, largestDifferenceValue);"]
stop_tokens:
- "\n    }\n"

name: HumanEval_55_fib
language: js
prompt: "//Return n-th Fibonacci number.\nfunction fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib;\n  assert.deepEqual(candidate(10),55);\n  assert.deepEqual(candidate(1),1);\n\
  \  assert.deepEqual(candidate(8),21);\n  assert.deepEqual(candidate(11),89);\n \
  \ assert.deepEqual(candidate(12),144);\n}\n\ntest();"
completions: ["  let first = 0;\n  let second = 1;\n  let result = 0;\n  for(let i\
    \ = 0; i < n; i++){\n    result = first + second;\n    first = second;\n    second\
    \ = result;\n  }\n  return result;\n}", "    var a = 1, b = 0, temp;\n    while\
    \ (n >= 0){\n        temp = a;\n        a = a + b;\n        b = temp;\n      \
    \  n--;\n    }\n    return b;\n}\n", "    if(n==0){\n        return 0;\n    }\n\
    \    if(n==1){\n        return 1;\n    }\n    return fib(n-1)+fib(n-2);\n}", " \
    \ return Math.round((1/Math.sqrt(5))*(Math.pow((1+Math.sqrt(5))/2,n)-Math.pow((1-Math.sqrt(5))/2,n)));\n\
    }", "    if(n<=1){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n\
    }\n", "  var fibs = [0,1];\n  for(let i = 2; i <= n; i++){\n    fibs.push(fibs[i-1]\
    \ + fibs[i-2]);\n  }\n  return fibs[n];\n}", "    var fibNum = 1;\n    var fibNumPrev\
    \ = 1;\n    for(var i = 2; i < n; i++){\n        var fibTemp = fibNum;\n     \
    \   fibNum += fibNumPrev;\n        fibNumPrev = fibTemp;\n    }\n    return fibNum;\n\
    }\n", "  if(n == 0){\n    return 0;\n  }\n  if(n == 1){\n    return 1;\n  }\n\
    \  return fib(n-1) + fib(n-2);\n}\n", "\tif(n == 0){\n\t\treturn 0;\n\t}else if(n\
    \ == 1){\n\t\treturn 1;\n\t}else{\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n",
  "  var a = 1, b = 0, temp;\n  while (n > 0){\n    temp = a;\n    a = a + b;\n  \
    \  b = temp;\n    n--;\n  }\n  return b;\n}", "    var a = 0, b = 1, f = 1;\n\
    \    for(var i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n     \
    \   b = f;\n    }\n    return f;\n}\n", "  if(n<=1)\n    return n;\n  return fib(n-1)+fib(n-2);\n\
    }\n", "  if(n==0 || n==1){\n    return n;\n  }\n  return fib(n-1)+fib(n-2);\n\
    }\n", "  if(n <= 1) return n;\n  return fib(n-1) + fib(n-2);\n}\n\nvar btn = document.getElementById('btn');\n\
    btn.addEventListener('click', function(event){\n  console.log(fib(n));\n  n++;\n\
    });", "  var fibo = [0, 1];\n  if (n <= 2) return 1;\n  for (var i = 2; i <=n;\
    \ i++ ){\n  fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n return fibo[n];\n} \ndocument.write(fib(12));",
  "   var a = 1, b = 0, temp;\n   if(n==0){\n      return b;\n   }\n   if(n==1){\n\
    \      return a;\n   }\n   while (n >= 0){\n      temp = a;\n      a = a + b;\n\
    \      b = temp;\n      n--;\n   }\n   return b;\n}\n", "    if(n <= 1)\n    \
    \    return n;\n    else\n        return fib(n-1) + fib(n-2);\n}\n", "    if(n\
    \ <= 1)\n        return n;\n    else\n        return fib(n-1) + fib(n-2);\n}\n",
  "  if(n==0) return 0;\n  if(n==1) return 1;\n  return fib(n-1)+fib(n-2);\n}\n",
  "    let a = 0;\n    let b = 1;\n    let c = 1;\n    for(let i = 0; i < n; i++){\n\
    \        c = a + b;\n        a = b;\n        b = c;\n    }\n    return a;\n}",
  "    var a = 1, b = 0, temp;\n  \n    while (n >= 0){\n      temp = a;\n      a\
    \ = a + b;\n      b = temp;\n      n--;\n    }\n  \n    return b;\n  }\n  fib(5);",
  "    if(n==0) return 0;\n    if(n==1) return 1;\n    return fib(n-1)+fib(n-2);\n\
    }\n", "    var a = 1, b = 0, temp;\n    while (n >= 0){\n        temp = a;\n \
    \       a = a + b;\n        b = temp;\n        n--;\n    }\n    return b;\n}",
  "    if(n == 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n\nvar testArr = [1,7,14,23,56,88,99,101,102,103,188,200,204,206,243,244,250,500,0,2,1];\n\
    for(var i = 0; i < testArr.length; i++){\n    console.log(fib(testArr[i]));\n}",
  "  if(n <= 1) return 1;\n  return fib(n-1) + fib(n-2);\n}\n```\n\nFibonacci numbers:\
    \ 1, 1, 2, 3, 5, 8, 13, 21, 34 ...\n\nIn this example, the call stack is:\n\n\
    fib(5) - fib(4) - fib(3) - fib(2) - fib(1) - fib(0)\n\nWhile we call the fib function,\
    \ it adds the function calls on the stack in the order. At first, it adds the\
    \ fib(5) call, then adds the fib(4) call and so on. When the fib(0) call returns\
    \ the number (1), it removes the call from the stack, calculates the result and\
    \ returns it to the fib(1) call. Then fib(1) call finishes, the fib(2) call finishes\
    \ and so on, until the fib(5) call is finished and returns the result - 8.\n\n\
    **Example #2**\n\n```js", "\treturn  n > 1 ? fib(n - 1) + fib(n - 2) : n;\n}\n",
  "    //Your code here.\n    if(n==0 || n==1){\n        return n;\n    }\n    return\
    \ fib(n-1)+fib(n-2);\n}\n", "  if( n == 0 )\n    return 0;\n  else if( n == 1\
    \ )\n    return 1;\n  else\n    return fib(n-1) + fib(n-2);\n}\n", "  return n\
    \ < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "    if(n<=1){\n        return n;\n  \
    \  }\n    return fib(n-1)+fib(n-2);\n}\n", "  var seq = [0,1];\n  while(seq.length\
    \ <= n){\n    seq.push(seq[seq.length-1] + seq[seq.length-2]);\n  }\n  return\
    \ seq[n];\n}\n\nfib(13);\n", "    if(n <= 1) return n;\n    else return fib(n-1)\
    \ + fib(n-2);\n}\n", "    //Your code here\n    if(n<=0){\n        return 0;\n\
    \    }else if(n==1){\n        return 1;\n    }else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "  if(n < 2){\n    return n;\n  }\n  else{\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "  if(n < 2){\n    return n;\n  }\n  return fib(n-1)\
    \ + fib(n-2);\n}\n", "  var fibo = [0, 1];\n  if (n <= 2) return 1;\n  for (var\
    \ i = 2; i <=n; i++ ){\n   fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n return fibo[n];\n\
    \ }\n", "\tif(n === 0){\n\t\treturn 0;\n\t}else if(n === 1){\n\t\treturn 1;\n\t\
    }else{\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n}\n", "  var arr = [0,1];\n  if(n<=2){\n\
    \    return 1;\n  }\n  for(var i=2;i<=n;i++){\n    arr.push(arr[i-2]+arr[i-1]);\n\
    \  }\n  return arr[n];\n}\n", "    let a = 1, b = 0, temp;\n  \n    while (n >=\
    \ 0){\n      temp = a;\n      a = a + b;\n      b = temp;\n      n--;\n    }\n\
    \  \n    return b;\n  }\n", "  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n\
    \    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}", "\tif(n==0){\n\t\treturn\
    \ 0;\n\t}\n\tif(n==1){\n\t\treturn 1;\n\t}\n\treturn fib(n-1)+fib(n-2);\n}\n",
  "    var arr=[];\n    arr[0]=0;\n    arr[1]=1;\n    for(var i=2;i<=n;i++){\n   \
    \     arr[i]=arr[i-1]+arr[i-2];\n    }\n    return arr[n];\n}", "  if(n == 0){\n\
    \    return 0;\n  }\n  if(n == 1){\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n\
    }", "    let a = 1, b = 0, temp;\n  \n    while (n >= 0){\n      temp = a;\n \
    \     a = a + b;\n      b = temp;\n      n--;\n    }\n  \n    return b;\n  }\n\
    \  \n  // Return true if given string is palindrome.\n  function isPalindrome(str){\n\
    \    str = str.toLowerCase();\n    let letter = str.split('');\n    let reverseLetter\
    \ = letter.reverse();\n    let revertStr = reverseLetter.join('');\n    return\
    \ revertStr === str;\n  }\n  \n  // Return random integer value between min and\
    \ max.\n  function getRandom(min, max){\n    return Math.floor(Math.random() *\
    \ (max - min + 1)) + min;\n  }\n  \n  // Returns true if given string is a substring\
    \ of the specified string.\n  function isSubString(str, subStr){\n    let index\
    \ = str.indexOf(subStr);\n    return index !== -1;\n  }\n  \n  // Returns true\
    \ if given string is a substring of the specified string \n  // starting at the\
    \ specified index.\n  function isSubStringAt(str, subStr, index){\n    let substring\
    \ = str.substring(index);\n    return isSubString(substring, subStr);\n  }\n \
    \ \n  // Returns true if given string is a substring of the specified string \n\
    \  // ending at the specified index.\n  function isSubStringUpTo(str, subStr,\
    \ index){\n    let substring = str.substring(0, index + 1);\n    return isSubString(substring,\
    \ subStr);\n  }\n  \n  // Returns true if given string is a substring of the specified\
    \ string \n  // starting at the specified index and ending at the specified index.\n\
    \  function isSubStringBetween(str, subStr, startIndex, endIndex){\n    let substring\
    \ = str.substring(startIndex, endIndex + 1);\n    return isSubString(substring,\
    \ subStr);\n  }\n  \n  // Returns the sum of all the numbers between two numbers.\n\
    \  function sumBetween(start, end){\n    let", "  let phi = (1 + Math.sqrt(5))\
    \ / 2; //Golden ratio\n  return Math.round((Math.pow(phi, n) - Math.pow(1 - phi,\
    \ n)) / Math.sqrt(5));\n}\n", "    if(n === 0 || n === 1){\n        return n;\n\
    \    }\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n <= 2) return 1;\n   \
    \ return fib(n-1) + fib(n-2);\n}\n", "    if(n<=1){\n        return n;\n    }\n\
    \    else{\n        return fib(n-1)+fib(n-2);\n    }\n}\n", "  let fibArray =\
    \ [0,1];\n  if(n == 0) return 0;\n  if(n == 1) return 1;\n  for(let i = 2; i <\
    \ n; i++){\n    fibArray.push(fibArray[i-1] + fibArray[i-2]);\n  }\n  return fibArray[n-1];\n\
    }\n", "    if(n<0){\n        return 0;\n    }\n    if(n==0 || n==1){\n       \
    \ return 1;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "  if(n<2){\n    return\
    \ n;\n  }\n  return fib(n-1)+fib(n-2);\n}", "  if(n === 0){return 0;}\n  if(n\
    \ === 1){return 1;}\n  else{return fib(n-1) + fib(n-2);}\n}", "  if(n < 2){\n\
    \    return n;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "\tif(n==0 || n==1){\n\
    \t\treturn n;\n\t}\n\treturn fib(n-1)+fib(n-2);\n}\n", "  if(n <= 1) return n;\n\
    \  return fib(n-1) + fib(n-2);\n}", "    let nums = [0, 1];\n    let count = 0;\n\
    \    while(count < n){\n        nums.push(nums[0] + nums[1]);\n        nums.shift();\n\
    \        count++;\n    }\n    return nums[1];\n}\n", "    var mem = [];\n    mem[0]\
    \ = 0;\n    mem[1] = 1;\n    for(var i = 2; i <= n; i++){\n        mem[i] = mem[i-1]\
    \ + mem[i-2];\n    }\n    return mem[n];\n}\n", "\tif(n<=1){\n\t\treturn n;\n\t\
    }\n\treturn fib(n-1)+fib(n-2);\n}\n", "    if(n < 2){\n        return n;\n   \
    \ }\n    return fib(n-1) + fib(n-2);\n}\n", "    var last = 1;\n    var lastLast\
    \ = 0;\n    var current = 0;\n    for(var i = 1; i < n; i++){\n        current\
    \ = last + lastLast;\n        lastLast = last;\n        last = current;\n    }\n\
    \    return current;\n}\n", "    return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n",
  "\tvar f1 = 0;\n\tvar f2 = 1;\n\tfor(var i = 2; i <= n; i++){\n\t\tvar fn = f1 +\
    \ f2;\n\t\tf1 = f2;\n\t\tf2 = fn;\n\t}\n\treturn f2;\n}\n", "\tif(n <= 1)\n\t\t\
    return n;\n\treturn fib(n-1) + fib(n-2);\n}\n", "\tif(n < 2){\n\t\treturn n;\n\
    \t}\n\treturn fib(n-1) + fib(n-2);\n}\n", "\tif(n === 0){\n\t\treturn 0;\n\t}\
    \ else if(n === 1){\n\t\treturn 1;\n\t} else {\n\t\treturn fib(n-1) + fib(n-2);\n\
    \t}\n}\n", "  //If n is less than zero, return 1.\n  if(n < 0){\n    return 1;\n\
    \  }\n  //If n is equal to zero, return 1.\n  if(n === 0){\n    return 1;\n  }\n\
    \  //If n is equal to 1, return 1.\n  if(n === 1){\n    return 1;\n  }\n  //If\
    \ n is greater than 1, return fib(n-1) + fib(n-2).\n  if(n > 1){\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "  if(n == 0) return 0;\n  else if(n == 1) return 1;\n\
    \  else if(n == 2) return 1;\n  else return fib(n-1) + fib(n-2);\n}\n", "  if(n\
    \ < 0) return -1;\n  else if(n < 2) return n;\n  else return fib(n-1) + fib(n-2);\n\
    }\n", "    if(n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n}\n", "    var\
    \ fib1 = 0;\n    var fib2 = 1;\n    var fib3 = 1;\n    for(var i = 0; i<n; i++){\n\
    \        fib3 = fib1 + fib2;\n        fib1 = fib2;\n        fib2 = fib3;\n   \
    \ }\n    return fib1;\n}", "  if(n === 0 || n === 1){\n    return n;\n  }\n  return\
    \ fib(n-1) + fib(n-2);\n}", "  if(n <= 1) return 1;\n  return fib(n-1) + fib(n-2);\n\
    }\n", "  if(n === 0 || n === 1){\n    return n;\n  }\n  return fib(n-1) + fib(n-2);\n\
    }", "  if(n <= 2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "  if(n==0 ||\
    \ n==1){\n    return n;\n  }\n  return fib(n-1)+fib(n-2);\n}\n", "  if(n==0)\n\
    \    return 0;\n  if(n==1)\n    return 1;\n  return fib(n-1)+fib(n-2);\n}", " \
    \   var a = 1, b = 0, temp;\n  \n    while (n >= 0){\n      temp = a;\n      a\
    \ = a + b;\n      b = temp;\n      n--;\n    }\n  \n    return b;\n  }\n", " \
    \ if(n<2){\n    return n;\n  }\n  else{\n    return fib(n-1)+fib(n-2);\n  }\n\
    }\n", "  // F(n) = F(n-1) + F(n-2)\n  // F(0) = 0;\n  // F(1) = 1;\n  if(n ===\
    \ 0) return 0;\n  if(n === 1) return 1;\n  return fib(n-1) + fib(n-2);\n}", " \
    \ if(n<=2){\n    return 1;\n  }else{\n    return fib(n-1)+fib(n-2);\n  }\n}\n",
  "    return fibHelper(n, 0, 1);\n}", "\tif(n < 0) return -1;\n\tif(n <= 1) return\
    \ n;\n\treturn fib(n-1) + fib(n-2);\n}\n", "  if(n === 0 || n === 1){\n    return\
    \ n;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "  //Set first two numbers.\n\
    \  let first = 0;\n  let second = 1;\n  let sum = 0;\n  //If n is 1, return 0.\n\
    \  if(n == 1){\n    return 0;\n  }\n  //If n is 2, return 1.\n  if(n == 2){\n\
    \    return 1;\n  }\n  //For loop to iterate through Fibonacci sequence.\n  for(let\
    \ i = 3; i <= n; i++){\n    //Sum of two numbers is the next number.\n    sum\
    \ = first + second;\n    //Second number becomes the first number.\n    first\
    \ = second;\n    //New number becomes the second number.\n    second = sum;\n\
    \  }\n  //Return sum.\n  return sum;\n}\n", "  let memo = {};\n  function fibHelper(num){\n\
    \    if(num <= 1) return num;\n    if(memo[num]) return memo[num];\n    memo[num]\
    \ = fibHelper(num - 1) + fibHelper(num - 2);\n    return memo[num];\n  }\n  return\
    \ fibHelper(n);\n}\n", "  if(n<0) return \"Error\";\n  var fib_num = [0,1];\n\
    \  for(var i=2; i<=n; i++){\n    fib_num[i] = fib_num[i-1] + fib_num[i-2];\n \
    \ }\n  return fib_num[n];\n}", "    if(n<2){\n        return n;\n    }\n    else{\n\
    \        return fib(n-1)+fib(n-2);\n    }\n}\n", "    let a = 1, b = 0, temp;\n\
    \    while (n >= 0){\n        temp = a;\n        a = a + b;\n        b = temp;\n\
    \        n--;\n    }\n    return b;\n}\n\nmodule.exports = fib;", "    if(n <=\
    \ 2)\n    {\n        return 1;\n    }\n    else\n    {\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "    if(n === 0 || n === 1){\n        return n;\n\
    \    }\n    var fibNMinus1 = 1;\n    var fibNMinus2 = 0;\n    var fibN = fibNMinus1\
    \ + fibNMinus2;\n    for(var i = 2; i < n; i++){\n        fibNMinus2 = fibNMinus1;\n\
    \        fibNMinus1 = fibN;\n        fibN = fibNMinus1 + fibNMinus2;\n    }\n\
    \    return fibN;\n}\n", "    if(n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\n", "  let fibs = [0, 1];\n  for (let i = 0; i < n - 1; i++) {\n    fibs.push(fibs[0]\
    \ + fibs[1]);\n    fibs.shift();\n  }\n  return fibs[0];\n}\n", "\tif(n <= 2)\
    \ return 1;\n\treturn fib(n-1) + fib(n-2);\n}\n\n", "    if(n <= 2) return 1;\n\
    \    return fib(n-1) + fib(n-2);\n}\n", "  if(n < 2){\n    return n;\n  } else\
    \ {\n    return fib(n-1) + fib(n-2);\n  }\n}\n", "    let num1 = 0;\n    let num2\
    \ = 1;\n    for(let i = 0; i < n-1; i++){\n        const temp = num1;\n      \
    \  num1 = num2;\n        num2 = temp + num2;\n    }\n    return num2;\n}\n", "\t\
    if(n==0) return 0;\n\tif(n==1) return 1;\n\treturn fib(n-1)+fib(n-2);\n}", " \
    \   var a = 0, b = 1, temp;\n    for(var i = 1; i < n; i++){\n        temp = a;\n\
    \        a = b;\n        b = temp + b;\n    }\n    return b;\n}\n", "    if(n<=1){\n\
    \        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}", "    if(n < 2){\n\
    \        return n;\n    } else {\n        return fib(n-1) + fib(n-2);\n    }\n\
    }\n", "  if(n <= 1) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "  if(n ===\
    \ 0 || n === 1){\n    return n;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", " \
    \ let fibonacci = [0, 1]\n  for (let i = 2; i <= n; i++){\n    fibonacci[i] =\
    \ fibonacci[i-1] + fibonacci[i-2]\n  }\n  return fibonacci[n]\n}", "    if(n ==\
    \ 0)\n        return 0;\n    else if(n == 1)\n        return 1;\n    else\n  \
    \      return fib(n-1) + fib(n-2);\n}\n", "    if(n < 2){\n        return n;\n\
    \    }\n    var a = 0, b = 1, c;\n    for(var i = 2; i <= n; i++){\n        c\
    \ = a + b;\n        a = b;\n        b = c;\n    }\n    return c;\n}\n", "\tvar\
    \ fibA=1;\n\tvar fibB=1;\n\tvar fibC=1;\n\tfor(var i=2;i<n;i++){\n\t\tfibC=fibA+fibB;\n\
    \t\tfibA=fibB;\n\t\tfibB=fibC;\n\t}\n\treturn fibC;\n}", "  if(n < 2){\n    return\
    \ n;\n  }else{\n    return fib(n-1) + fib(n-2);\n  }\n}", "  var result = 0;\n\
    \  if(n === 0 || n === 1){\n    return n;\n  }\n  return fib(n-1) + fib(n-2);\n\
    }\n", "    if(n<2){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n\
    }\n", "  var a = 0, b = 1, f = 1;\n  for(var i = 2; i <= n; i++) {\n    f = a\
    \ + b;\n    a = b;\n    b = f;\n  }\n  return f;\n}", "    var a = 1, b = 0, temp;\n\
    \  \n    while (n >= 0){\n      temp = a;\n      a = a + b;\n      b = temp;\n\
    \      n--;\n    }\n  \n    return b;\n  }\n  console.log(fib(6));", "    if(n\
    \ <= 1) return n;\n    return fib(n-1) + fib(n-2);\n}\n", "    if(n<0){\n    \
    \    throw new Error(\"n should not be negative\");\n    }\n    if(n===0 || n===1){\n\
    \        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n", "  if(n === 0){\n\
    \    return 0;\n  }else if(n === 1){\n    return 1;\n  }else{\n    return fib(n-1)\
    \ + fib(n-2);\n  }\n}\n", "    if(n<=1){\n        return n;\n    }\n    return\
    \ fib(n-1)+fib(n-2);\n}", "\tif(n < 2){\n\t\treturn n;\n\t}else{\n\t\treturn fib(n-1)\
    \ + fib(n-2);\n\t}\n}\n", "    var nums = [0,1];\n    if(n == 0){\n        return\
    \ 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n    if(nums[n] > 0){\n\
    \        return nums[n];\n    }\n    else{\n        nums[n] = fib(n-1) + fib(n-2);\n\
    \        return nums[n];\n    }\n}", "  if(n < 2){\n    return n;\n  }\n  else{\n\
    \    return fib(n-1) + fib(n-2);\n  }\n}\n", "  if(n === 0){\n    return 0;\n\
    \  } else if(n === 1) {\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n",
  "    if(n<2){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}", "  \
    \  let v=0,i=1;\n    if(n>0){\n        for(let k=0;k<n;k++){\n            let\
    \ o=i;\n            i=v+i;\n            v=o;\n        }\n    }\n    return v;\n\
    }\n", "    //Let's find n-th Fibonacci number\n    var fib0 = 0;\n    var fib1\
    \ = 1;\n    for(var i = 0; i < n; i++){\n        var temp = fib0;\n        fib0\
    \ = fib1;\n        fib1 = temp + fib1;\n    }\n    return fib0;\n}\n", "\tif(n\
    \ <= 2)\n\t\treturn 1;\n\treturn fib(n-1) + fib(n-2);\n}\n\n", "    if(n <= 1)\
    \ return n;\n    let fibPrev = 0;\n    let fibCurrent = 1;\n    let fibNext =\
    \ 1;\n    let i = 1;\n    while(i < n){\n        fibNext = fibPrev + fibCurrent;\n\
    \        fibPrev = fibCurrent;\n        fibCurrent = fibNext;\n        i++;\n\
    \    }\n    return fibNext;\n}", "  if(n == 0) return 0;\n  if(n == 1) return\
    \ 1;\n  return fib(n-1) + fib(n-2);\n}\n", "  let a = 1, b = 0, temp;\n\n  while\
    \ (n >= 0){\n    temp = a;\n    a = a + b;\n    b = temp;\n    n--;\n  }\n\n \
    \ return b;\n}\n", "  if(n<2){\n    return n;\n  }else{\n    return fib(n-1)+fib(n-2);\n\
    \  }\n}\n", "  var a = 1, b = 0, temp;\n\n  while (n >= 0){\n    temp = a;\n \
    \   a = a + b;\n    b = temp;\n    n--;\n  }\n\n  return b;\n}", "\tvar a = 1,\
    \ b = 0, temp;\n\twhile (n >= 0){\n\t\ttemp = a;\n\t\ta = a + b;\n\t\tb = temp;\n\
    \t\tn--;\n\t}\n\treturn b;\n}\n", "\tif(n < 2){\n\t\treturn n;\n\t}\n\t\n\tvar\
    \ fib = [0, 1];\n\t\n\tfor(var i = 2; i <= n; i++){\n\t\tfib[i] = fib[i - 1] +\
    \ fib[i - 2];\n\t}\n\t\n\treturn fib[n];\n}", "  var fibArray = [0,1];\n  if(n\
    \ <= 2){\n    return 1;\n  }\n  for(var i = 2; i <= n; i++){\n    fibArray[i]\
    \ = fibArray[i-1] + fibArray[i-2];\n  }\n  return fibArray[n];\n}\n", "\tvar a\
    \ = 1, b = 0, temp;\n\twhile (n >= 0){\n\t\ttemp = a;\n\t\ta = a + b;\n\t\tb =\
    \ temp;\n\t\tn--;\n\t}\n\treturn b;\n}\n", "  if(n<2){\n    return n;\n  }\n \
    \ return fib(n-1)+fib(n-2);\n}\n", "    if(n<=1){\n        return n;\n    }\n\
    \    return fib(n-1)+fib(n-2);\n}\n", "  if(n < 2){\n    return n;\n  }\n  else{\n\
    \    return fib(n-1) + fib(n-2);\n  }\n}", "  if(n === 0){\n    return 0;\n  }\n\
    \  if(n === 1){\n    return 1;\n  }\n  return fib(n-1) + fib(n-2);\n}\n", "  \
    \  let first = 0;\n    let second = 1;\n    let number = 0;\n    if(n === 0){\n\
    \        return 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    for(let\
    \ i = 2; i <= n; i++){\n        number = first + second;\n        first = second;\n\
    \        second = number;\n    }\n    return number;\n}\n", "  if(n === 0){\n\
    \    return 0;\n  }\n  if(n === 1){\n    return 1;\n  }\n  if(n > 1){\n    return\
    \ fib(n-1) + fib(n-2);\n  }\n}\n", "  let a = 1;\n  let b = 1;\n  for (let i =\
    \ 3; i <= n; i++){\n    let c = a + b;\n    a = b;\n    b = c;\n  }\n  return\
    \ b;\n}\n", "  //insert your code here!\n  var fib_arr = [0,1];\n  for(var i =\
    \ 2; i < n; i++){\n    fib_arr.push(fib_arr[i-1] + fib_arr[i-2]);\n  }\n  return\
    \ fib_arr[n-1];\n}\n", "\tvar fibNums = [0,1];\n\tvar nthNum = 0;\n\tvar fibNumsLength\
    \ = fibNums.length;\n\tif(n === 0 || n === 1){\n\t\treturn n;\n\t}\n\tfor(var\
    \ i = 0; i <= n; i++){\n\t\tnthNum = fibNums[fibNumsLength - 1] + fibNums[fibNumsLength\
    \ - 2];\n\t\tfibNums.push(nthNum);\n\t\tfibNumsLength++;\n\t}\n\treturn nthNum;\n\
    }", "  if(n==0) return 0;\n  if(n==1) return 1;\n  return fib(n-1)+fib(n-2);\n\
    }\n", "  if(n <= 2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n", "  let a =\
    \ 1, b = 0, temp;\n\n  while (n >= 0){\n    temp = a;\n    a = a + b;\n    b =\
    \ temp;\n    n--;\n  }\n\n  return b;\n}", "  if(n<2){\n    return n;\n  }\n \
    \ return fib(n-1)+fib(n-2);\n}\nfib(10);\n", "    let a = 1, b = 0, temp;\n  \n\
    \    while (n >= 0){\n      temp = a;\n      a = a + b;\n      b = temp;\n   \
    \   n--;\n    }\n  \n    return b;\n  }", "    if(n === 0){\n        return 0;\n\
    \    }\n    else if(n === 1){\n        return 1;\n    }\n    else{\n        return\
    \ fib(n-1) + fib(n-2);\n    }\n}\n", "    if(n <= 1) return n;\n    return fib(n-1)\
    \ + fib(n-2);\n}\n", "    let a = 1, b = 0, temp;\n    while (n >= 0){\n     \
    \   temp = a;\n        a = a + b;\n        b = temp;\n        n--;\n    }\n  \
    \  return b;\n}\n", "  if(n === 0 || n === 1){\n    return n;\n  }\n  else{\n\
    \    return fib(n-1) + fib(n-2);\n  }\n}", "  if(n <= 1) return n;\n  return fib(n-1)\
    \ + fib(n-2);\n}\n", "  //if 1 or 2, return 1\n  if(n===1 || n===2){\n    return\
    \ 1;\n  }\n  //return fib(n-1) + fib(n-2)\n  return fib(n-1) + fib(n-2);\n}",
  "    let fib=[0,1]\n    for(let i=2;i<=n;i++){\n        fib[i]=fib[i-1]+fib[i-2]\n\
    \    }\n    return fib[n]\n}\n", "    return (n < 2) ? n : fib(n-1) + fib(n-2);\n\
    }\n", "\tvar a = 0, b = 1, f = 1;\n\tfor(var i = 2; i <= n; i++) {\n\t\tf = a\
    \ + b;\n\t\ta = b;\n\t\tb = f;\n\t}\n\treturn f;\n}\n", "    //Base case.\n  \
    \  if(n<=0){\n        return 0;\n    }\n    //Base case.\n    if(n<=2){\n    \
    \    return 1;\n    }\n    //Recursive case.\n    return fib(n-1)+fib(n-2);\n\
    }\n", "  let result=[0,1];\n  if(n==0 || n==1){\n    return result[n];\n  }else{\n\
    \    for(let i=2;i<=n;i++){\n      result.push(result[i-1]+result[i-2]);\n   \
    \ }\n    return result[n];\n  }\n}\n", "    var a = 0, b = 1, f = 1;\n    for(var\
    \ i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n\
    \    }\n    return f;\n}\n", "  var a = 0, b = 1, f = 1;\n  for(var i = 2; i <=\
    \ n; i++) {\n    f = a + b;\n    a = b;\n    b = f;\n  }\n  return f;\n}\n", " \
    \   if(n<=1){\n        return n;\n    }\n    return fib(n-1)+fib(n-2);\n}\n",
  "  //Fibonacci numbers are defined by the following recurrence relation:\n  //fib(0)\
    \ = 0, fib(1) = 1, fib(n) = fib(n-1) + fib(n-2)\n  //What a mouthful.\n  if(n===0)\
    \ return 0;\n  if(n===1) return 1;\n  return fib(n-1) + fib(n-2);\n}", "    var\
    \ fib = [];\n    fib[0] = 0;\n    fib[1] = 1;\n    for(var i = 2; i <= n; i++){\n\
    \        fib[i] = fib[i-1] + fib[i-2];\n    }\n    return fib[n];\n}", "  if(n==0\
    \ || n==1){\n    return n;\n  }else{\n    return fib(n-1)+fib(n-2);\n  }\n}\n",
  "    if(n<=1){\n        return n;\n    }else{\n        return fib(n-1)+fib(n-2);\n\
    \    }\n}\n", "  if(n <= 2) return 1;\n  return fib(n-1) + fib(n-2);\n}\n\n",
  "\tif(n < 2){\n\t\treturn n;\n\t} else {\n\t\treturn fib(n-1) + fib(n-2);\n\t}\n\
    }\n", "    var a = 0, b = 1, f = 1;\n    for(var i = 2; i <= n; i++) {\n     \
    \   f = a + b;\n        a = b;\n        b = f;\n    }\n    return f;\n}\n", " \
    \ //Fibonacci number is defined by the sum of the two previous fibonacci numbers\n\
    \  //First 10 are: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ...\n  //So we'll need to start\
    \ with an array like this: [0, 1]\n  //then we'll calculate the next numbers by\
    \ summing the two previous ones\n  //then push that value into the array.\n  //Once\
    \ we reach desired number of the sequence, we'll return the last value.\n  \n\
    \  var fibNums = [0, 1];\n  \n  if (n <= 2) return 1;\n  \n  for (var i = 2; i\
    \ <=n; i++ ){\n     fibNums[i] = fibNums[i-1]+fibNums[i-2];\n  }\n  \n return\
    \ fibNums[n];\n}\n\n\n", "\tif(n < 0){\n\t\treturn undefined;\n\t}\n\tif(n ===\
    \ 0){\n\t\treturn 0;\n\t}\n\tif(n === 1){\n\t\treturn 1;\n\t}\n\treturn fib(n-1)\
    \ + fib(n-2);\n}\n", "\tif(n==0) return 0;\n\tif(n==1) return 1;\n\tif(n==2) return\
    \ 1;\n\treturn fib(n-1)+fib(n-2);\n}\n", "   if(n <= 2) return 1;\n   return fib(n-1)\
    \ + fib(n-2);\n}\n", "    if(n <= 1) return n;\n    return fib(n-1) + fib(n-2);\n\
    }\n", "  if(n==0)\n    return 0;\n  if(n==1)\n    return 1;\n  else\n    return\
    \ fib(n-1)+fib(n-2);\n}\n", "\tif(n==0) return 0;\n\tif(n==1) return 1;\n\treturn\
    \ fib(n-1)+fib(n-2);\n}", "\tvar a = 0, b = 1, f = 1;\n\tfor(var i = 2; i <= n;\
    \ i++) {\n\t\tf = a + b;\n\t\ta = b;\n\t\tb = f;\n\t}\n\treturn f;\n}\n", "  \
    \  //Code here\n    if(n==0){\n        return 0;\n    }\n    if(n==1){\n     \
    \   return 1;\n    }\n    if(n>1){\n        return fib(n-1)+fib(n-2);\n    }\n\
    }", "  if(n <= 1) return n;\n  return fib(n-1) + fib(n-2);\n}", "\tif(n == 0){\n\
    \t\treturn 0;\n\t}\n\tif(n == 1){\n\t\treturn 1;\n\t}\n\treturn fib(n-1) + fib(n-2);\n\
    }\n", "    if(n < 2){\n        return n;\n    }\n    else{\n        return fib(n-1)\
    \ + fib(n-2);\n    }\n}\n", "  return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n",
  "    return (n < 2) ? n : fib(n-1) + fib(n-2);\n}\n", "  return n < 2 ? n : fib(n-1)\
    \ + fib(n-2);\n}\n", "  return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "  var\
    \ old = 0;\n  var fib = 1;\n  for(var i = 1; i < n; i++){\n    var old_old = old;\n\
    \    old = fib;\n    fib = old + old_old;\n  }\n  return fib;\n}\n", "    var\
    \ a = 1, b = 0, temp;\n    while (n >= 0){\n        temp = a;\n        a = a +\
    \ b;\n        b = temp;\n        n--;\n    }\n    return b;\n}\n", "  var arr\
    \ = [0,1];\n  for(var i = 2; i <= n; i++){\n    arr.push(arr[i-2] + arr[i-1]);\n\
    \  }\n  return arr[n];\n}\n", "\tif(n === 0 || n === 1){\n\t\treturn n;\n\t}\n\
    \treturn fib(n-1) + fib(n-2);\n}\n", "    //Base case.\n    if(n <= 0){\n    \
    \    return 0;\n    }\n    if(n === 1){\n        return 1;\n    }\n    //Recursive\
    \ case.\n    return fib(n-1) + fib(n-2);\n}\n", "   if(n <= 1) return n;\n   return\
    \ fib(n-1) + fib(n-2);\n}\n", "    if(n == 0) return 0;\n    if(n == 1) return\
    \ 1;\n    return fib(n-1) + fib(n-2);\n}\n", "  if(n < 2){\n    return n;\n  }\n\
    \  return fib(n-1) + fib(n-2);\n}\n", "  var a = 1, b = 0, temp;\n\n  while (n\
    \ >= 0){\n    temp = a;\n    a = a + b;\n    b = temp;\n    n--;\n  }\n\n  return\
    \ b;\n}\n", "    let fib1 = 0;\n    let fib2 = 1;\n    let aux;\n    for(let i\
    \ = 0; i < n; i++){\n        aux = fib1;\n        fib1 = fib2;\n        fib2 =\
    \ aux + fib2;\n    }\n    return fib1;\n}\n", "    if(n <= 1)\n        return\
    \ n;\n    return fib(n-1) + fib(n-2);\n}\n", "    var a = 0, b = 1, f = 1;\n \
    \   for(var i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n      \
    \  b = f;\n    }\n    return f;\n}\nvar a = prompt(\"Please enter your number\
    \ \");\nfib(a);\n", "  if(n <= 1)\n    return n;\n  return fib(n-1) + fib(n-2);\n\
    }\n", "  let cache = {}\n  if(n === 0){\n    return 0\n  } else if(n === 1){\n\
    \    return 1\n  } else if(n > 1){\n    if(cache[n]){\n      return cache[n]\n\
    \    } else {\n      cache[n] = fib(n-1) + fib(n-2)\n      return cache[n]\n \
    \   }\n  }\n}\n", "  return n < 2 ? n : fib(n-1) + fib(n-2);\n}\n", "    if(n\
    \ < 2){\n        return n;\n    }\n    else{\n        return fib(n-1) + fib(n-2);\n\
    \    }\n}\n", "  var a = 0, b = 1, f = 1;\n  for(var i = 2; i <= n; i++) {\n \
    \   f = a + b;\n    a = b;\n    b = f;\n  }\n  return f;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

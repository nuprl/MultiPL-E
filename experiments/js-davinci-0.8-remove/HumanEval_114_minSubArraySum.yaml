name: HumanEval_114_minSubArraySum
language: js
prompt: "//Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n// of nums.\n// Example\nfunction minSubArraySum(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = minSubArraySum;\n  assert.deepEqual(candidate([2, 3, 4, 1, 2, 4]),1);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3]),-6);\n  assert.deepEqual(candidate([-1, -2, -3, 2, -10]),-14);\n  assert.deepEqual(candidate([-9999999999999999]),-9999999999999999);\n\
  \  assert.deepEqual(candidate([0, 10, 20, 1000000]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, -3, 10, -5]),-6);\n  assert.deepEqual(candidate([100, -1, -2, -3, 10, -5]),-6);\n\
  \  assert.deepEqual(candidate([10, 11, 13, 8, 3, 4]),3);\n  assert.deepEqual(candidate([100,\
  \ -33, 32, -1, 0, -2]),-33);\n  assert.deepEqual(candidate([-10]),-10);\n  assert.deepEqual(candidate([7]),7);\n\
  \  assert.deepEqual(candidate([1, -1]),-1);\n}\n\ntest();"
completions: ["    if(nums.length==0) return 0;\n    let result = Number.MAX_VALUE;\n\
    \    let sum = 0;\n    for(let n of nums){\n        sum+=n;\n        result =\
    \ Math.min(result,sum);\n        if(sum>0) sum=0;\n    }\n    return result;\n\
    }", "    let minSum = Infinity;\n    let sum = 0;\n    let start = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        while(sum >=\
    \ minSum){\n            minSum = Math.min(minSum, sum);\n            sum -= nums[start];\n\
    \            start++;\n        }\n    }\n    return minSum;\n}", "    let minSum\
    \ = Infinity;\n    let prevSum = 0;\n    let minStart = 0;\n    let minEnd = 0;\n\
    \    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum\
    \ += nums[i];\n        if(currSum < minSum){\n            minSum = currSum;\n\
    \            minStart = i;\n            minEnd = i;\n        }\n        if(currSum\
    \ - prevSum < minSum){\n            minSum = currSum - prevSum;\n            minEnd\
    \ = i;\n        }\n        prevSum = currSum;\n    }\n    return nums.slice(minStart,\
    \ minEnd + 1);\n}\n", "  let sum = Infinity;\n  let current = 0;\n  for(let i\
    \ = 0; i < nums.length; i++){\n    for(let j = i; j < nums.length; j++){\n   \
    \   current += nums[j];\n      if(current < sum){\n        sum = current;\n  \
    \    }\n    }\n    current = 0;\n  }\n  return sum;\n}\nlet nums = [2,3,1,2,4,3];",
  "    let total = 0;\n    let start = 0;\n    let end = 0;\n    let min = Infinity;\n\
    \    while(start < nums.length){\n        if(total < 0){\n            total =\
    \ 0;\n        }\n        if(end >= nums.length){\n            total -= nums[start];\n\
    \            start++;\n        } else {\n            total += nums[end];\n   \
    \         end++;\n        }\n        min = Math.min(min, total);\n    }\n    return\
    \ min;\n}", "  let minSum = Infinity;\n  let currentSum = 0;\n  let start = 0;\n\
    \  let end = 0;\n  while(start < nums.length){\n    if(currentSum < minSum){\n\
    \      minSum = currentSum;\n    }\n    if(currentSum < 0){\n      currentSum\
    \ = 0;\n      start = end;\n    }\n    currentSum += nums[end];\n    end++;\n\
    \  }\n  return minSum;\n}\n", "    let total = 0;\n    let minTotal = 0;\n   \
    \ let start = 0;\n    for(let i = 0; i < nums.length; i++){\n        total +=\
    \ nums[i];\n        minTotal = Math.min(minTotal, total - start);\n        start\
    \ = Math.min(start, total);\n    }\n    return minTotal;\n}", "    let minimumSum\
    \ = Infinity;\n    let sum = 0;\n    let start = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        while(sum >= minimumSum){\n        \
    \    minimumSum = Math.min(minimumSum, sum);\n            sum -= nums[start];\n\
    \            start++;\n        }\n    }\n    return minimumSum;\n}\n\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4]); // -5", "    if (nums.length == 0) {\n        return\
    \ 0;\n    }\n    let tempSum = 0;\n    let minSum = Infinity;\n    let i = 0;\n\
    \    while (i < nums.length) {\n        if (nums[i] < 0) {\n            minSum\
    \ = Math.min(minSum, nums[i]);\n        }\n        let j = i;\n        while (j\
    \ < nums.length) {\n            tempSum += nums[j];\n            if (tempSum <\
    \ minSum) {\n                minSum = tempSum;\n            }\n            j++;\n\
    \        }\n        tempSum = 0;\n        i++;\n    }\n    return minSum;\n}",
  "    let currSum = 0\n    let minSum = Infinity\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currSum += nums[i]\n        if(currSum < minSum){\n         \
    \   minSum = currSum\n        }\n        if(currSum > 0){\n            currSum\
    \ = 0\n        }\n    }\n    return minSum\n}", "    let min = Infinity;\n   \
    \ let sum = 0;\n    let start = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum += nums[i];\n        while(sum >= min){\n            min = sum;\n\
    \            sum -= nums[start];\n            start++;\n        }\n    }\n   \
    \ return min;\n}", "    let currentSum = 0;\n    let minSum = Infinity;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n        if(currentSum\
    \ < minSum){\n            minSum = currentSum;\n        }\n        if(currentSum\
    \ > 0){\n            currentSum = 0;\n        }\n    }\n    return minSum;\n}\n",
  "\tlet min = Infinity;\n\tlet sum = 0;\n\tfor(let i = 0; i < nums.length; i++){\n\
    \t\tsum += nums[i];\n\t\tmin = Math.min(min, sum);\n\t\tif(sum > 0){\n\t\t\tsum\
    \ = 0;\n\t\t}\n\t}\n\treturn min;\n}", "  let total = 0;\n  let min = Infinity;\n\
    \  let left = 0;\n  let right = 0;\n  while(right<nums.length){\n    total +=\
    \ nums[right];\n    right++;\n    while(total>=0){\n      min = Math.min(min,\
    \ total);\n      total -= nums[left];\n      left++;\n    }\n  }\n  return min;\n\
    }", "  let sum = 0;\n  let minSum = Infinity;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    if(sum < 0){\n      sum = 0;\n    }\n    sum += nums[i];\n    minSum\
    \ = Math.min(minSum, sum);\n  }\n  return minSum;\n}", "    let sum = 0;\n   \
    \ let min = Infinity;\n    let currentSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currentSum += nums[i];\n        if(currentSum < min){\n     \
    \       min = currentSum;\n        }\n        if(currentSum > 0){\n          \
    \  currentSum = 0;\n        }\n    }\n    return min;\n}", "    let maxSum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let currentSum = 0;\n    \
    \    for(let j = i; j < nums.length; j++){\n            currentSum += nums[j];\n\
    \            if(currentSum < maxSum){\n                maxSum = currentSum;\n\
    \            }\n        }\n    }\n    return maxSum;\n}", "    let min = nums[0];\n\
    \    let current = nums[0];\n    for(let i = 1; i < nums.length; i++){\n     \
    \   current = Math.min(current + nums[i], nums[i]);\n        min = Math.min(min,\
    \ current);\n    }\n    return min;\n}\n", "  let currSum = nums[0];\n  let maxSum\
    \ = nums[0];\n  for(let i = 1; i < nums.length; i++){\n    currSum = Math.max(nums[i],\
    \ currSum + nums[i]);\n    maxSum = Math.max(maxSum, currSum);\n  }\n  return\
    \ maxSum;\n}", "    let result = Infinity;\n    let temp = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        temp += nums[i];\n        result = Math.min(result,\
    \ temp);\n        if(temp > 0){\n            temp = 0;\n        }\n    }\n   \
    \ return result;\n}", "    // add whatever parameters you deem necessary - good\
    \ luck!\n    let minSum = Infinity;\n    let currentSum = 0;\n    \n    for(let\
    \ num of nums){\n        currentSum += num;\n        minSum = Math.min(minSum,\
    \ currentSum);\n        if(currentSum < 0){\n            currentSum = 0;\n   \
    \     }\n    }\n    return minSum;\n}\n", "  let minimumSum = Infinity;\n  let\
    \ currentSum = 0;\n  for(let i = 0; i < nums.length; i++){\n    currentSum +=\
    \ nums[i];\n    if(currentSum < minimumSum){\n      minimumSum = currentSum;\n\
    \    }\n    if(currentSum > 0){\n      currentSum = 0;\n    }\n  }\n  return minimumSum;\n\
    }", "    let minSum = Infinity;\n    let tempSum = 0;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        tempSum += nums[i];\n        if(tempSum < minSum){\n\
    \            minSum = tempSum;\n        }\n        if(tempSum > 0){\n        \
    \    tempSum = 0;\n        }\n    }\n    return minSum;\n}", "  let minSum = Infinity;\n\
    \  let tempSum = 0;\n  for(let i = 0; i < nums.length; i++){\n    for(let j =\
    \ i; j < nums.length; j++){\n      tempSum += nums[j];\n      if(tempSum < minSum){\n\
    \        minSum = tempSum;\n      }\n    }\n    tempSum = 0;\n  }\n  return minSum;\n\
    }", "    let currentSum = nums[0];\n    let minSum = nums[0];\n    for(let i =\
    \ 1; i < nums.length; i++){\n        currentSum = Math.min(currentSum + nums[i],\
    \ nums[i]);\n        minSum = Math.min(currentSum, minSum);\n    }\n    return\
    \ minSum;\n}\n", "   let minSum = 0\n   for(let i = 0; i < nums.length; i++){\n\
    \      let tempSum = 0\n      for(let j = i; j < nums.length; j++){\n        \
    \ tempSum += nums[j]\n         if(tempSum < minSum || minSum === 0){\n       \
    \     minSum = tempSum\n         }\n      }\n   }\n   return minSum\n}\n", " \
    \   if(nums.length===0) return null;\n    if(nums.length===1) return nums[0];\n\
    \    let minSum = Infinity;\n    let sum = 0;\n    for(let i=0; i<nums.length;\
    \ i++){\n        sum += nums[i];\n        minSum = Math.min(minSum, sum);\n  \
    \      if(sum>0){\n            sum = 0;\n        }\n    }\n    return minSum;\n\
    }", "    let start = 0, \n        end = 0, \n        sum = 0, \n        min =\
    \ Infinity;\n\n    while(start < nums.length){\n        if(sum < 0) {\n      \
    \      sum = 0;\n            start = end;\n        }\n        sum += nums[end];\n\
    \        min = Math.min(min, sum);\n        end++;\n    }\n    return min;\n}",
  "    if(nums.length === 0) return;\n    let minSum = Infinity;\n    let start =\
    \ 0;\n    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n      \
    \  currSum += nums[i];\n        while(currSum >= minSum){\n            minSum\
    \ = Math.min(minSum, currSum);\n            currSum -= nums[start];\n        \
    \    start++;\n        }\n    }\n    return minSum;\n}\n", "    let minSum = Infinity;\n\
    \    let sum = 0;\n    for(let start = 0, end = 0; end < nums.length; end++){\n\
    \        sum += nums[end];\n        while(sum >= 0){\n            minSum = Math.min(minSum,\
    \ sum);\n            sum -= nums[start];\n            start++;\n        }\n  \
    \  }\n    return minSum;\n}", "    let total = 0;\n    let min = Infinity;\n \
    \   for(let i = 0; i < nums.length; i++){\n        if(nums[i] < min){\n      \
    \      min = nums[i];\n        }\n        total += nums[i];\n    }\n    if(total\
    \ == min){\n        return total;\n    }\n    let cur = 0;\n    let start = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        cur += nums[i];\n        while(cur\
    \ >= min){\n            min = Math.min(min, cur);\n            cur -= nums[start];\n\
    \            start++;\n        }\n    }\n    return min;\n}\n", "    let total\
    \ = 0;\n    let minSum = Infinity;\n    for(let i = 0; i < nums.length; i++){\n\
    \        total += nums[i];\n        minSum = Math.min(minSum, total);\n      \
    \  if(total > 0){\n            total = 0;\n        }\n    }\n    return minSum;\n\
    }", "    let minSum = 0;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum > minSum){\n            minSum\
    \ = sum;\n        } else if(sum < 0){\n            sum = 0;\n        }\n    }\n\
    \    return minSum;\n}\n", "    let currSum = Infinity\n    let totalSum = 0\n\
    \    let left = 0\n    for(let i = 0; i < nums.length; i++){\n        totalSum\
    \ += nums[i]\n        currSum = Math.min(currSum, totalSum - left)\n        left\
    \ = Math.min(left, totalSum)\n    }\n    return currSum\n}\n", "    if(nums.length\
    \ < 2) return nums[0];\n    let len = nums.length;\n    let min = Infinity;\n\
    \    let sum = 0;\n    for(let i = 0; i < len; i++){\n        sum += nums[i];\n\
    \        if(sum < min) min = sum;\n        if(sum > 0) sum = 0;\n    }\n    return\
    \ min;\n}\n", "   let len = nums.length;\n   let temp = 0;\n   let res = Number.MAX_VALUE;\n\
    \   for(let i = 0; i < len; i++){\n       temp += nums[i];\n       if(temp < res){\n\
    \           res = temp;\n       }\n       if(temp > 0){\n           temp = 0;\n\
    \       }\n   }\n   return res;\n}", "  let left = 0;\n  let sum = 0;\n  let min\
    \ = Infinity;\n  for(let i = 0; i < nums.length; i++){\n    sum += nums[i];\n\
    \    while(sum >= 0){\n      min = Math.min(min, sum);\n      sum -= nums[left];\n\
    \      left++;\n    }\n  }\n  return min;\n}\n\nlet arr = [3,1,-7,4,-8,2,3];",
  "\tvar current_sum = nums[0]\n\tvar minimum_sum = nums[0]\n\tfor(var i = 1; i <\
    \ nums.length; i++){\n\t\tcurrent_sum = Math.min(nums[i], current_sum + nums[i])\n\
    \t\tminimum_sum = Math.min(minimum_sum, current_sum)\n\t}\n\treturn minimum_sum\n\
    }", "    let minSum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < minSum){\n            minSum\
    \ = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n        }\n \
    \   }\n    return minSum;\n}\nminSubArraySum([-3,1,2,3]); // => -1\nminSubArraySum([-3,2,2,3]);\
    \ // => -1\nminSubArraySum([-3,2,2,4]); // => -1\nminSubArraySum([-3,1,2,4]);\
    \ // => -3\nminSubArraySum([-3,1,2,3]); // => -1\nminSubArraySum([-3,2,2,3]);\
    \ // => -1\nminSubArraySum([-3,2,2,4]); // => -1\nminSubArraySum([-3,2,2,4]);\
    \ // => -1\nminSubArraySum([-3,1,2,4]); // => -3", "    let minSum = Infinity;\n\
    \    let currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        minSum = Math.min(minSum, currentSum);\n        if(currentSum\
    \ > 0){\n            currentSum = 0;\n        }\n    }\n    return minSum;\n}\n\
    \nlet arr1 = [1,2,3];\nlet arr2 = [3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3,\
    \ -3, -3, -3, -3, -3, -3, -3, -3, -3, -3", "    let start = 0;\n    let end =\
    \ 1;\n    let total = nums[start] + nums[end];\n    let minTotal = total;\n  \
    \  while(end < nums.length){\n        if(total < minTotal){\n            minTotal\
    \ = total;\n        }\n        if(total < 0){\n            start++;\n        \
    \    end = start + 1;\n            total = nums[start] + nums[end];\n        }else{\n\
    \            end++;\n            total += nums[end];\n        }\n    }\n    return\
    \ minTotal;\n}\n", "    let sum = 0;\n    let minSum = Number.MAX_SAFE_INTEGER;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minSum){\n            minSum = sum;\n        }\n        if(sum > 0){\n   \
    \         sum = 0;\n        }\n    }\n    return minSum;\n}\nlet res = minSubArraySum([2,\
    \ 3, -2, 4]);", "    if(nums.length === 0){\n        return 0;\n    }\n    let\
    \ total = nums[0];\n    let min = nums[0];\n    for(let i = 1; i < nums.length;\
    \ i++){\n        if(total < 0){\n            total = nums[i];\n        } else\
    \ {\n            total += nums[i];\n        }\n        min = Math.min(min, total);\n\
    \    }\n    return min;\n}\n", "\tif(nums.length == 0){\n\t\treturn;\n\t}\n\t\
    var minSum = nums[0];\n\tvar currSum = 0;\n\tfor(var i = 0; i < nums.length; i++){\n\
    \t\tcurrSum += nums[i];\n\t\tif(currSum < minSum){\n\t\t\tminSum = currSum;\n\t\
    \t}\n\t\tif(currSum > 0){\n\t\t\tcurrSum = 0;\n\t\t}\n\t}\n\treturn minSum;\n}",
  "    let minSum = Number.MAX_VALUE;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < minSum){\n            minSum\
    \ = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n        }\n \
    \   }\n    return minSum;\n}", "    if(nums.length === 0) return -1;\n    let\
    \ minSum = Infinity;\n    let currSum = 0;\n    let start = 0;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        currSum += nums[i];\n        while(currSum\
    \ >= minSum){\n            minSum = Math.min(minSum, currSum);\n            currSum\
    \ -= nums[start];\n            start++;\n        }\n    }\n    return minSum;\n\
    }\n", "    let start = 0;\n    let end = 0;\n    let minLength = Infinity;\n \
    \   let minSum = Infinity;\n    let currentSum = 0;\n    while(start < nums.length){\n\
    \        if(currentSum >= 0){\n            currentSum += nums[end];\n        \
    \    end++;\n        }else{\n            currentSum = nums[start];\n         \
    \   start++;\n            end++;\n        }\n        if(currentSum < minSum){\n\
    \            minSum = currentSum;\n            minLength = end - start;\n    \
    \    }\n    }\n    return minLength;\n}", "    let total = 0;\n    let min = Number.MAX_SAFE_INTEGER;\n\
    \    let current = 0;\n    for(let i = 0; i < nums.length; i++){\n        current\
    \ += nums[i];\n        if(current < min){\n            min = current;\n      \
    \  }\n        if(current > 0){\n            current = 0;\n        }\n    }\n \
    \   return min;\n}", "    let sum = 0;\n    let min = Infinity;\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n\
    \            min = sum;\n        } else if(sum > 0){\n            sum = 0;\n \
    \       }\n    }\n    return min;\n}\n", "    let globalSum = Infinity\n    let\
    \ localSum = 0\n    for(let i = 0; i < nums.length; i++){\n        localSum +=\
    \ nums[i]\n        globalSum = Math.min(globalSum, localSum)\n        if(localSum\
    \ > 0){\n            localSum = 0\n        }\n    }\n    return globalSum\n}",
  "    let minSum = Infinity;\n    let currentSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        currentSum += nums[i];\n        minSum = Math.min(minSum, currentSum);\n\
    \        if(currentSum < 0){\n            currentSum = 0;\n        }\n    }\n\
    \    return minSum;\n}", "  if(nums.length === 0){\n    return 0;\n  }\n  let\
    \ min = nums[0];\n  let sum = 0;\n  for(let i = 0; i < nums.length; i++){\n  \
    \  sum += nums[i];\n    if(sum < min){\n      min = sum;\n    }\n    if(sum >\
    \ 0){\n      sum = 0;\n    }\n  }\n  return min;\n}\nminSubArraySum([-2, -1, -3]);",
  "    if(nums.length === 0) return 0;\n    let subSum = Infinity;\n    let currentSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n\
    \        subSum = Math.min(subSum, currentSum);\n        if(currentSum < 0){\n\
    \            currentSum = 0;\n        }\n    }\n    return subSum;\n}", "    let\
    \ minSum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        for(let j = i; j < nums.length; j++){\n            sum += nums[j];\n\
    \            if(sum < minSum){\n                minSum = sum;\n            }\n\
    \        }\n        sum = 0;\n    }\n    return minSum;\n}", "    let min = Infinity;\n\
    \    let sum = 0;\n    let i = 0;\n    let j = 0;\n    for(let len = nums.length;\
    \ i < len; i++){\n        sum += nums[i];\n        while(sum >= 0){\n        \
    \    min = Math.min(min, sum);\n            sum -= nums[j];\n            j++;\n\
    \        }\n    }\n    return min;\n}", "    if(nums.length === 0){\n        return\
    \ 0;\n    }\n    let minSum = Infinity;\n    let tempSum = 0;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        tempSum += nums[i];\n        if(tempSum <\
    \ minSum){\n            minSum = tempSum;\n        }\n        if(tempSum > 0){\n\
    \            tempSum = 0;\n        }\n    }\n    return minSum;\n}", "    let\
    \ minSum = nums[0];\n    let total = nums[0];\n    for(let i = 1; i < nums.length;\
    \ i++){\n        if(total < 0){\n            total = nums[i];\n        }else{\n\
    \            total += nums[i];\n        }\n        minSum = Math.min(minSum, total);\n\
    \    }\n    return minSum;\n}", "    let count = Number.MAX_VALUE;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        let sum = 0;\n        for(let j = i;\
    \ j < nums.length; j++){\n            sum += nums[j];\n            if(sum < count){\n\
    \                count = sum;\n            }\n        }\n    }\n    return count;\n\
    }\n", "    let subSum = Infinity;\n    let currentSum = 0;\n    for(let num of\
    \ nums){\n        currentSum += num;\n        subSum = Math.min(subSum, currentSum);\n\
    \        if(currentSum > 0){\n            currentSum = 0;\n        }\n    }\n\
    \    return subSum;\n}", "  let tempSum = Infinity;\n  let sum = Infinity;\n \
    \ for(let i = 0; i < nums.length; i++){\n    tempSum = Math.min(tempSum, nums[i]);\n\
    \    if(tempSum < 0){\n      tempSum = 0;\n    }\n    sum = Math.min(sum, tempSum);\n\
    \  }\n  return sum;\n}", "    let result = 0;\n    let min = Infinity;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        result += nums[i];\n        if(result\
    \ < min){\n            min = result;\n        }\n        if(result > 0){\n   \
    \         result = 0;\n        }\n    }\n    return min;\n}", "    let minSum\
    \ = nums[0]\n    let result = 0\n    for(let i = 0; i < nums.length; i++){\n \
    \       result += nums[i]\n        if(result < minSum){\n            minSum =\
    \ result\n        }\n        if(result > 0){\n            result = 0\n       \
    \ }\n    }\n    return minSum\n}\n", "    let prev = 0;\n    let min = Infinity;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        min = Math.min(min, sum - prev);\n        prev = Math.min(prev, sum);\n\
    \    }\n    return min;\n}", "    let smallestSum = nums[0];\n    let currSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum += nums[i];\n\
    \        if(smallestSum > currSum){\n            smallestSum = currSum;\n    \
    \    }\n        if(currSum > 0){\n            currSum = 0;\n        }\n    }\n\
    \    return smallestSum;\n}", "  let windowStart = 0;\n  let windowSum = 0;\n\
    \  let minSum = Infinity;\n  for(let windowEnd = 0; windowEnd < nums.length; windowEnd++){\n\
    \    windowSum += nums[windowEnd];\n    while(windowSum >= k){\n      minSum =\
    \ Math.min(minSum, windowSum);\n      windowSum -= nums[windowStart];\n      windowStart++;\n\
    \    }\n  }\n  return minSum;\n}\n", "    let minSum = Infinity;\n    let sum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n \
    \       if(sum < minSum){\n            minSum = sum;\n        }\n        if(sum\
    \ > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n}", "   \
    \ \n}", "    let minSum = Infinity;\n    let subSum = 0;\n    for(let i = 0; i\
    \ < nums.length; i++){\n        subSum += nums[i];\n        if(subSum < minSum){\n\
    \            minSum = subSum;\n        }\n        if(subSum > 0){\n          \
    \  subSum = 0;\n        }\n    }\n    return minSum;\n}", "    let minSum = Infinity;\n\
    \    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum\
    \ += nums[i];\n        if(currSum < minSum){\n            minSum = currSum;\n\
    \        }\n        if(currSum > 0){\n            currSum = 0;\n        }\n  \
    \  }\n    return minSum;\n}", "    let minSum = Infinity\n    let leftPointer\
    \ = 0\n    let rightPointer = 0\n    let currSum = 0\n    while(rightPointer <\
    \ nums.length){\n        currSum += nums[rightPointer]\n        while(currSum\
    \ >= minSum){\n            minSum = Math.min(minSum, currSum)\n            currSum\
    \ -= nums[leftPointer]\n            leftPointer++\n        }\n        rightPointer++\n\
    \    }\n    return minSum\n}\n", "    let minSum = Infinity;\n    let currentSum\
    \ = 0;\n    for(let num of nums){\n        currentSum += num;\n        minSum\
    \ = Math.min(minSum, currentSum);\n        if(currentSum < 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return minSum;\n}", "    let globalMin = Infinity;\n\
    \    let windowStart = 0;\n    let windowSum = 0;\n    for(let windowEnd = 0;\
    \ windowEnd < nums.length; windowEnd++){\n        windowSum += nums[windowEnd];\n\
    \        while(windowSum >= 0){\n            globalMin = Math.min(globalMin, windowSum);\n\
    \            windowSum -= nums[windowStart];\n            windowStart++;\n   \
    \     }\n    }\n    return globalMin;\n}\n", "  let subArrayTotal = 0;\n  let\
    \ minTotal = nums[0];\n  let numsLength = nums.length;\n  for(let i = 0; i < numsLength;\
    \ i++){\n    subArrayTotal += nums[i];\n    minTotal = Math.min(minTotal, subArrayTotal);\n\
    \    if(subArrayTotal > 0){\n      subArrayTotal = 0;\n    }\n  }\n  return minTotal;\n\
    }\n", "    let len = nums.length;\n    let minSum = 0;\n    for(let i = 0; i <\
    \ len; i++){\n        let currentSum = 0;\n        for(let j = i; j < len; j++){\n\
    \            currentSum += nums[j];\n            if(minSum === 0 || currentSum\
    \ < minSum){\n                minSum = currentSum;\n            }\n        }\n\
    \    }\n    return minSum;\n}", "    let total = 0;\n    let minSum = Infinity;\n\
    \    let start = 0;\n    for(let i = 0; i < nums.length; i++){\n        total\
    \ += nums[i];\n        while(total >= minSum){\n            minSum = Math.min(minSum,\
    \ total);\n            total -= nums[start];\n            start++;\n        }\n\
    \    }\n    return minSum;\n}\n", "  let currentMax = Infinity;\n  let currentSum\
    \ = 0;\n  let result = Infinity;\n  for(let i = 0; i < nums.length; i++){\n  \
    \  currentSum += nums[i];\n    if(currentSum < result){\n      result = currentSum;\n\
    \    }\n    if(currentSum > 0){\n      currentSum = 0;\n    }\n  }\n  return result;\n\
    }", "  let min = Infinity;\n  let temp = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    temp += nums[i];\n    if(temp < min){\n      min = temp;\n    }\n\
    \    if(temp > 0){\n      temp = 0;\n    }\n  }\n  return min;\n}\n", "    let\
    \ total = 0;\n    let min = Infinity;\n    for(let i = 0; i < nums.length; i++){\n\
    \        if(nums[i] < min){\n            min = nums[i];\n        }\n        total\
    \ += nums[i];\n    }\n    return total;\n}\n", "    let minSum = Infinity;\n \
    \   let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum\
    \ += nums[i];\n        minSum = Math.min(minSum, currSum);\n        if(currSum\
    \ < 0){\n            currSum = 0;\n        }\n    }\n    return minSum;\n}", " \
    \   let total = 0;\n    let min = Infinity;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        total += nums[i];\n        if(total < min){\n            min\
    \ = total;\n        }\n        if(total > 0){\n            total = 0;\n      \
    \  }\n    }\n    return min;\n}", "  let globalMin = nums[0];\n  let tempMin =\
    \ nums[0];\n  for(let i = 1; i < nums.length; i++){\n    tempMin = Math.min(nums[i],\
    \ tempMin + nums[i]);\n    globalMin = Math.min(globalMin, tempMin);\n  }\n  return\
    \ globalMin;\n}", "    let currentWindowSum = 0;\n    let minWindowSum = Infinity;\n\
    \    let windowStart = 0;\n    \n    for(let windowEnd = 0; windowEnd < nums.length;\
    \ windowEnd++){\n        currentWindowSum += nums[windowEnd];\n        while(currentWindowSum\
    \ >= minWindowSum){\n            minWindowSum = Math.min(minWindowSum, currentWindowSum);\n\
    \            currentWindowSum -= nums[windowStart];\n            windowStart++;\n\
    \        }\n    }\n    return minWindowSum;\n}\n", "    let curSum = 0\n    let\
    \ minSum = Infinity\n    for(let i = 0; i < nums.length; i++){\n        curSum\
    \ += nums[i]\n        if(curSum < minSum){\n            minSum = curSum\n    \
    \    }\n        if(curSum > 0){\n            curSum = 0\n        }\n    }\n  \
    \  return minSum\n}", "  let minSum = Infinity\n  let sum = 0\n\n  for(let i =\
    \ 0; i < nums.length; i++){\n    sum += nums[i]\n    if(sum < minSum){\n     \
    \ minSum = sum\n    }\n    if(sum > 0){\n      sum = 0\n    }\n  }\n  return minSum\n\
    }\n", "  let minSum = Infinity;\n  let tempSum = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    tempSum += nums[i];\n    if(tempSum < minSum){\n      minSum = tempSum;\n\
    \    }\n    if(tempSum > 0){\n      tempSum = 0;\n    }\n  }\n  return minSum;\n\
    }", "  let currentSum = nums[0];\n  let minimumSum = nums[0];\n  for(let i = 1;\
    \ i < nums.length; i++){\n    currentSum = Math.min(nums[i], currentSum + nums[i]);\n\
    \    minimumSum = Math.min(minimumSum, currentSum);\n  }\n  return minimumSum;\n\
    }\n", "  let total = 0;\n  let minSum = Infinity;\n  let start = 0;\n  for(let\
    \ i = 0; i < nums.length; i++){\n    total += nums[i];\n    while(total >= minSum){\n\
    \      minSum = Math.min(minSum, total);\n      total -= nums[start];\n      start++;\n\
    \    }\n  }\n  return minSum;\n}\n", "    let total = 0;\n    let min = Infinity;\n\
    \    for(let i = 0; i < nums.length; i++){\n        total += nums[i];\n      \
    \  min = Math.min(min, total);\n        if(total > 0){\n            total = 0;\n\
    \        }\n    }\n    return min;\n}\n", "    let minSum = nums[0];\n    let\
    \ currentSum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        currentSum\
    \ = Math.min(currentSum + nums[i], nums[i]);\n        minSum = Math.min(minSum,\
    \ currentSum);\n    }\n    return minSum;\n}\n", "  let total = 0;\n  let min\
    \ = nums[0];\n  let max = nums[0];\n  for(let i = 0; i < nums.length; i++){\n\
    \    total += nums[i];\n    if(total < min){\n      min = total;\n    }\n    if(total\
    \ > max){\n      max = total;\n    }\n  }\n  return Math.abs(min) < max ? min\
    \ : max;\n}\n", "    let total = 0;\n    let min = Infinity;\n    for(let i =\
    \ 0; i < nums.length; i++){\n        if(nums[i] < min){\n            min = nums[i];\n\
    \        }\n        total += nums[i];\n    }\n    if(total === min){\n       \
    \ return total;\n    }\n    let curr = 0;\n    let minVal = Infinity;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        curr += nums[i];\n        if(curr < minVal){\n\
    \            minVal = curr;\n        }\n        if(curr > 0){\n            curr\
    \ = 0;\n        }\n    }\n    return minVal;\n}", "    let minSum = Number.MAX_VALUE;\n\
    \    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum\
    \ += nums[i];\n        if(currSum < minSum){\n            minSum = currSum;\n\
    \        }\n        if(currSum > 0){\n            currSum = 0;\n        }\n  \
    \  }\n    return minSum;\n}\n", "  if(nums.length === 0) return 0;\n  let currSum\
    \ = nums[0];\n  let minSum = nums[0];\n  for(let i = 1; i < nums.length; i++){\n\
    \    currSum = Math.min(nums[i], currSum + nums[i]);\n    minSum = Math.min(minSum,\
    \ currSum);\n  }\n  return minSum;\n}\n", "    let current = nums[0];\n    let\
    \ min = current;\n    for(let i = 1; i < nums.length; i++){\n        current =\
    \ Math.min(current + nums[i], nums[i]);\n        min = Math.min(current, min);\n\
    \    }\n    return min;\n}\n", "    let minimumSum = Infinity;\n    let sum =\
    \ 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n   \
    \     minimumSum = Math.min(minimumSum, sum);\n        if(sum > 0){\n        \
    \    sum = 0;\n        }\n    }\n    return minimumSum;\n}\n", "    let currSum\
    \ = 0;\n    let minSum = Infinity;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currSum += nums[i];\n        if(currSum < minSum){\n            minSum\
    \ = currSum;\n        }\n        if(currSum > 0){\n            currSum = 0;\n\
    \        }\n    }\n    return minSum;\n}", "    let local = nums[0]\n    let global\
    \ = nums[0]\n    for(let i = 1; i < nums.length; i++){\n        local = Math.min(nums[i],\
    \ local + nums[i])\n        global = Math.min(local, global)\n    }\n    return\
    \ global\n}", "    let result = Infinity;\n    let total = 0;\n    let start =\
    \ 0;\n    let end = 0;\n    while(start < nums.length){\n        if(total < 0){\n\
    \            total = 0;\n            start = end;\n        }\n        if(end >=\
    \ nums.length){\n            break;\n        }\n        total += nums[end];\n\
    \        result = Math.min(result, total);\n        end++;\n    }\n    return\
    \ result;\n}", "  let min = Infinity;\n  let sum = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    sum += nums[i];\n    if(sum < min){\n      min = sum;\n    }\n  \
    \  if(sum > 0){\n      sum = 0;\n    }\n  }\n  return min;\n}", "    let minSum\
    \ = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n \
    \       sum += nums[i];\n        minSum = Math.min(minSum, sum);\n        if(sum\
    \ < 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n}", "   let\
    \ total = 0;\n   let smallest = Infinity;\n   for(let num of nums){\n       total\
    \ += num;\n       smallest = Math.min(smallest, total);\n       if(total > 0){\n\
    \           total = 0;\n       }\n   }\n   return smallest;\n}\n\nminSubArraySum([2,3,1,2,4,3])",
  "    let currentSum = nums[0];\n    let minSum = nums[0];\n    \n    for(let i =\
    \ 1; i < nums.length; i++){\n        currentSum = Math.min(currentSum + nums[i],\
    \ nums[i]);\n        minSum = Math.min(currentSum, minSum);\n    }\n    return\
    \ minSum;\n}", "    let minSum = Infinity;\n    let currSum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        currSum += nums[i];\n        if(currSum\
    \ < minSum){\n            minSum = currSum;\n        }\n        if(currSum > 0){\n\
    \            currSum = 0;\n        }\n    }\n    return minSum;\n}", "    let\
    \ min_sum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum += nums[i];\n        min_sum = Math.min(min_sum, sum);\n        if(sum\
    \ < 0){\n            sum = 0;\n        }\n    }\n    return min_sum;\n}\n", " \
    \   let minSum = nums[0];\n    let currSum = nums[0];\n    for(let i = 1; i <\
    \ nums.length; i++){\n        currSum = Math.min(nums[i], currSum + nums[i]);\n\
    \        minSum = Math.min(minSum, currSum);\n    }\n    return minSum;\n}\n",
  "  // declare a left and right pointer \n  let left = 0;\n  let right = 1;\n  //\
    \ declare a variable to keep track of sum\n  let sum = nums[left] + nums[right];\n\
    \  // loop while right pointer is less than the length of nums\n  while(right\
    \ < nums.length){\n    if(nums[left] > nums[right]){\n      left = right;\n  \
    \  }\n    right++;\n    sum = Math.min(sum, nums[left] + nums[right]);\n  }\n\
    \  return sum;\n}", "  // Given an array, find the minSum of any sub-array of\
    \ that array\n  //  - if the array length is 1, return the first value\n  // \
    \ - while i < the length of the array\n  //  - take the current value of i, and\
    \ add it to the value at i+1\n  //  - compare the current index value + 1 to current\
    \ index value + 2\n  //  - compare the current minSum to index value + 1\n  //\
    \  - once i = array.length, return the minSum\n  if(nums.length === 1){\n    return\
    \ nums[0];\n  }\n  let minSum = nums[0];\n  for(let i = 0; i < nums.length; i++){\n\
    \    let currSum = nums[i];\n    if(currSum < minSum){\n      minSum = currSum;\n\
    \    }\n    for(let j = i + 1; j < nums.length; j++){\n      currSum += nums[j];\n\
    \      if(currSum < minSum){\n        minSum = currSum;\n      }\n    }\n  }\n\
    \  return minSum;\n}", "    let total = 0;\n    let min = Infinity;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        for(let j = i; j < nums.length; j++){\n\
    \            total += nums[j];\n            if(total < min){\n               \
    \ min = total;\n            }\n        }\n        total = 0;\n    }\n    return\
    \ min;\n}\n", "  let currSum = nums[0]\n  let minSum = nums[0]\n  let pointer1\
    \ = 0\n  let pointer2 = 1\n  while(pointer2 <= nums.length - 1){\n    while(currSum\
    \ < 0 && pointer1 < pointer2){\n      currSum -= nums[pointer1]\n      pointer1++\n\
    \    }\n    minSum = Math.min(minSum, currSum)\n    currSum += nums[pointer2]\n\
    \    pointer2++\n  }\n  return minSum\n}", "    let minSum = Infinity;\n    let\
    \ left = 0;\n    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n   \
    \     sum += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n\
    \        }\n        if(sum > 0){\n            left++;\n            sum = 0;\n\
    \        }\n    }\n    return minSum;\n}\n", "    let minSum = Infinity;\n   \
    \ let minStart = 0;\n    let minEnd = 0;\n    let sum = 0;\n    let start = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minSum){\n            minSum = sum;\n            minStart = start;\n     \
    \       minEnd = i;\n        }\n        if(sum > 0){\n            sum = 0;\n \
    \           start = i + 1;\n        }\n    }\n    return nums.slice(minStart,\
    \ minEnd + 1);\n}", "    if (nums.length === 0) return 0;\n    let globalSum =\
    \ nums[0];\n    let localSum = nums[0];\n    for (let i = 1; i < nums.length;\
    \ i++) {\n        localSum = Math.min(nums[i], localSum + nums[i]);\n        globalSum\
    \ = Math.min(globalSum, localSum);\n    }\n    return globalSum;\n}", "  let minSum\
    \ = Infinity;\n  let sum = 0;\n  for(let i = 0; i < nums.length; i++){\n    sum\
    \ += nums[i];\n    if(sum < minSum){\n      minSum = sum;\n    }\n    if(sum >\
    \ 0){\n      sum = 0;\n    }\n  }\n  return minSum;\n}\n\nminSubArraySum([-2,1,-3,4,-1,2,1,-5,4]);",
  "  var currentMin = null;\n  var sum = 0;\n  for(var i = 0; i < nums.length; i++){\n\
    \    sum += nums[i];\n    if(sum < currentMin || currentMin === null){\n     \
    \ currentMin = sum;\n    }\n    if(sum > 0){\n      sum = 0;\n    }\n  }\n  return\
    \ currentMin;\n}\n\nvar nums = [-2,1,-3,4,-1,2,1,-5,4];", "  let minSum = Number.MAX_SAFE_INTEGER;\n\
    \  let sum = 0;\n  let start = 0;\n  for(let i = 0; i < nums.length; i++){\n \
    \   sum += nums[i];\n    while(sum >= nums[i]){\n      minSum = Math.min(minSum,\
    \ sum - nums[start]);\n      sum -= nums[start];\n      start++;\n    }\n  }\n\
    \  return minSum;\n}\n", "    let minSum = Number.MAX_VALUE;\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum\
    \ < minSum){\n            minSum = sum;\n        }\n        if(sum > 0){\n   \
    \         sum = 0;\n        }\n    }\n    return minSum;\n}", "    let globalMin\
    \ = Infinity\n    let minSum = 0\n    for(let i = 0; i < nums.length; i++){\n\
    \        minSum += nums[i]\n        if(minSum < globalMin){\n            globalMin\
    \ = minSum\n        }\n        if(minSum > 0){\n            minSum = 0\n     \
    \   }\n    }\n    return globalMin\n}", "    let minSum = Number.MAX_VALUE;\n\
    \    let currSum = 0;\n    for(let num of nums){\n        currSum += num;\n  \
    \      minSum = Math.min(minSum, currSum);\n        if(currSum > 0){\n       \
    \     currSum = 0;\n        }\n    }\n    return minSum;\n}\n", "    let localMinSum\
    \ = globalMinSum = Infinity;\n    let localSum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        localSum += nums[i];\n        if(localSum < localMinSum){\n \
    \           localMinSum = localSum;\n        }\n        if(localSum - localMinSum\
    \ < globalMinSum){\n            globalMinSum = localSum - localMinSum;\n     \
    \   }\n    }\n    return globalMinSum;\n}\n", "    let minSum = 0;\n    let tempSum\
    \ = 0;\n    for(let i = 0; i < nums.length; i++){\n        tempSum += nums[i];\n\
    \        if(tempSum > minSum){\n            minSum = tempSum;\n        } else\
    \ if(tempSum < 0){\n            tempSum = 0;\n        }\n    }\n    return minSum;\n\
    }", "    let min = Number.MAX_VALUE;\n    let sum = 0;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        sum += nums[i];\n        if(sum < min){\n      \
    \      min = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n   \
    \     }\n    }\n    return min;\n}\n", "    \n    //\n    // let sum = 0\n   \
    \ // let min = Infinity\n    //\n    // let st = 0\n    // let ed = 0\n    //\n\
    \    // while(ed < nums.length){\n    //     sum += nums[ed]\n    //     while(sum\
    \ >= s) {\n    //         min = Math.min(min, ed - st + 1)\n    //         sum\
    \ -= nums[st]\n    //         st++\n    //     }\n    //     ed++\n    // }\n\
    \    //\n    // return min === Infinity ? 0 : min\n    let sum = 0\n    let min\
    \ = Infinity\n    for(let st = 0; st < nums.length; st++){\n        sum = 0\n\
    \        for(let ed = st; ed < nums.length; ed++){\n            sum += nums[ed]\n\
    \            if(sum >= s){\n                min = Math.min(min, ed - st + 1)\n\
    \                break\n            }\n        }\n    }\n    return min === Infinity\
    \ ? 0 : min\n}\n\nlet arr = [2,3,1,2,4,3]", "  let minSum = Infinity;\n  let currentSum\
    \ = 0;\n  for(let i = 0; i < nums.length; i++){\n    currentSum += nums[i];\n\
    \    if(currentSum < minSum){\n      minSum = currentSum;\n    }\n    if(currentSum\
    \ > 0){\n      currentSum = 0;\n    }\n  }\n  return minSum;\n}", "    let left\
    \ = 0;\n    let right = 0;\n    let min = Infinity;\n    let sum = 0;\n    while(right\
    \ < nums.length){\n        sum += nums[right];\n        while(sum >= nums[left]){\n\
    \            min = Math.min(min, sum);\n            sum -= nums[left];\n     \
    \       left++;\n        }\n        right++;\n    }\n    return min;\n}", "  \
    \  let pointer1 = 0;\n    let pointer2 = 1;\n    let smallest_sum = nums[pointer1]\
    \ + nums[pointer2];\n    let temp_sum = smallest_sum;\n    while(pointer2 < nums.length){\n\
    \        temp_sum = nums[pointer1] + nums[pointer2];\n        if(temp_sum < smallest_sum){\n\
    \            smallest_sum = temp_sum;\n        }\n        pointer1++;\n      \
    \  pointer2++;\n    }\n    return smallest_sum;\n}", "  if(nums.length === 0)\
    \ return 0;\n  let minSum = nums[0];\n  let currSum = 0;\n  for(let i = 0; i <\
    \ nums.length; i++){\n    currSum += nums[i];\n    if(currSum < minSum){\n   \
    \   minSum = currSum;\n    }\n    if(currSum > 0){\n      currSum = 0;\n    }\n\
    \  }\n  return minSum;\n}\n", "    let minSum = Infinity;\n    let currentSum\
    \ = 0;\n    for(let num of nums){\n        currentSum += num;\n        minSum\
    \ = Math.min(minSum, currentSum);\n        if(currentSum < 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return minSum;\n}\n", "  let left = 0;\n  let right\
    \ = 0;\n  let sum = 0;\n  let minSum = Infinity;\n  while(right < nums.length){\n\
    \    sum += nums[right];\n    while(sum >= 0){\n      minSum = Math.min(minSum,\
    \ sum);\n      sum -= nums[left];\n      left++;\n    }\n    right++;\n  }\n \
    \ return minSum;\n}", "    let minSum = Infinity;\n    let currentSum = 0;\n \
    \   let start = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        while(currentSum >= minSum){\n            minSum = Math.min(minSum,\
    \ currentSum);\n            currentSum -= nums[start];\n            start++;\n\
    \        }\n    }\n    return minSum;\n}\n", "    let currentMin = Infinity;\n\
    \    let currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        if(currentSum < currentMin){\n            currentMin =\
    \ currentSum;\n        }\n        if(currentSum > 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return currentMin;\n}\n", "    let minSum = Infinity;\n\
    \    let minSumEndingHere = 0;\n    let start = 0;\n    let end = 0;\n    while(end\
    \ < nums.length){\n        minSumEndingHere += nums[end];\n        while(minSumEndingHere\
    \ > minSum){\n            minSumEndingHere -= nums[start];\n            start++;\n\
    \        }\n        if(minSumEndingHere < minSum){\n            minSum = minSumEndingHere;\n\
    \        }\n        end++;\n    }\n    return minSum;\n}", "    let minSum = Infinity;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < minSum){\n            minSum = sum;\n        }\n        if(sum\
    \ > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n}", "   \
    \ let result = Infinity;\n    let length = nums.length;\n    let currentSum =\
    \ 0;\n    for(let i = 0; i < length; i++){\n        currentSum += nums[i];\n \
    \       result = Math.min(result, currentSum);\n        if(currentSum > 0){\n\
    \            currentSum = 0;\n        }\n    }\n    return result;\n}\n\nminSubArraySum([-2,\
    \ 1, -3, 4, -1, 2, 1, -5, 4]);\n", "    let local = nums[0];\n    let global =\
    \ nums[0];\n    for(let i = 1; i < nums.length; i++){\n        local = Math.min(nums[i],\
    \ local + nums[i]);\n        global = Math.min(local, global);\n    }\n    return\
    \ global;\n}\n", "    if(nums.length === 0) return 0;\n    let min_sum = Infinity;\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < min_sum){\n            min_sum = sum;\n        }\n        if(sum\
    \ > 0){\n            sum = 0;\n        }\n    }\n    return min_sum;\n}\n", " \
    \   let minSum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        if(sum < minSum){\n            minSum\
    \ = sum;\n        }\n        if(sum > 0){\n            sum = 0;\n        }\n \
    \   }\n    return minSum;\n}\n", "    if (nums.length === 0){\n        return\
    \ 0;\n    }\n    var max = 0;\n    var sum = 0;\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] > max){\n            max = nums[i];\n        }\n\
    \        sum += nums[i];\n    }\n    if (sum === max){\n        return max;\n\
    \    }\n    var min = sum;\n    var temp = 0;\n    for (var i = 0; i < nums.length;\
    \ i++){\n        temp += nums[i];\n        if (temp < min){\n            min =\
    \ temp;\n        }\n        for (var j = i + 1; j < nums.length; j++){\n     \
    \       temp += nums[j];\n            if (temp < min){\n                min =\
    \ temp;\n            }\n        }\n        temp = 0;\n    }\n    return min;\n\
    }\n", "    let tempSum = nums[0];\n    let start = 0;\n    let end = 1;\n    let\
    \ result = nums[0];\n    while(start < nums.length && end < nums.length){\n  \
    \      if(tempSum < 0){\n            start++;\n            end = start + 1;\n\
    \            tempSum = nums[start];\n        }\n        else if(tempSum > 0){\n\
    \            if(tempSum < result){\n                result = tempSum;\n      \
    \      }\n            tempSum += nums[end];\n            end++;\n        }\n \
    \       else{\n            if(tempSum < result){\n                result = tempSum;\n\
    \            }\n            start++;\n            end = start + 1;\n         \
    \   tempSum = nums[start];\n        }\n    }\n    return result;\n}\n", "    if(nums.length\
    \ === 0) return 0;\n    let curr = nums[0],\n        res = Infinity;\n    for(let\
    \ i = 1; i < nums.length; i++){\n        curr = Math.min(curr + nums[i], nums[i]);\n\
    \        res = Math.min(res, curr);\n    }\n    return res;\n}", "    if(nums.length\
    \ === 0){\n        return 0;\n    }\n    let maxSum = Infinity;\n    let currentSum\
    \ = 0;\n    for(let num of nums){\n        currentSum += num;\n        maxSum\
    \ = Math.min(maxSum, currentSum);\n        if(currentSum > 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return maxSum;\n}", "    if(nums.length === 0) return\
    \ 0;\n    let minSum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        minSum = Math.min(minSum, sum);\n  \
    \      if(sum > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n\
    }\n", "    if(nums.length === 0){\n        return 0;\n    }\n    let minSum =\
    \ Infinity;\n    let currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currSum += nums[i];\n        minSum = Math.min(minSum, currSum);\n  \
    \      if(currSum > 0){\n            currSum = 0;\n        }\n    }\n    return\
    \ minSum;\n}", "    let currSum = Infinity;\n    let currentSum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        currentSum += nums[i];\n        currSum\
    \ = Math.min(currSum, currentSum);\n        if(currentSum > 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return currSum;\n}", "  let sum = nums[0] || 0\n\
    \  let minSum = nums[0] || 0\n\n  for(let i = 1; i < nums.length; i++){\n    sum\
    \ = Math.min(nums[i], sum + nums[i])\n    minSum = Math.min(sum, minSum)\n  }\n\
    \  return minSum\n}\n", "    let total = 0;\n    let min = Infinity;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] < min){\n            min =\
    \ nums[i];\n        }\n        total += nums[i];\n    }\n    return Math.min(total,\
    \ total - min);\n}\n", "  if(nums.length === 0) return 0;\n  let min = nums[0];\n\
    \  let sum = nums[0];\n  for(let i = 1; i < nums.length; i++){\n    sum = Math.min(sum\
    \ + nums[i], nums[i]);\n    min = Math.min(min, sum);\n  }\n  return min;\n}",
  "  let sum = nums[0];\n  let minSum = nums[0];\n  let start = 0;\n  let end = 0;\n\
    \  let minStart = 0;\n  let minEnd = 0;\n  while(end < nums.length){\n    while(sum\
    \ < 0 && start < end){\n      sum -= nums[start];\n      start++;\n    }\n   \
    \ if(sum < minSum){\n      minSum = sum;\n      minStart = start;\n      minEnd\
    \ = end;\n    }\n    end++;\n    sum += nums[end];\n  }\n  return nums.slice(minStart,\
    \ minEnd + 1);\n}\n", "  let min = Infinity;\n  let sum = 0;\n  for(let num of\
    \ nums){\n    sum += num;\n    min = Math.min(min, sum);\n    if(sum > 0){\n \
    \     sum = 0;\n    }\n  }\n  return min;\n}", "    let min = Infinity;\n    let\
    \ runningSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        runningSum\
    \ += nums[i];\n        if(runningSum < min){\n            min = runningSum;\n\
    \        }\n        if(runningSum > 0){\n            runningSum = 0;\n       \
    \ }\n    }\n    return min;\n}\n", "    let minSum = Number.MAX_VALUE;\n    let\
    \ currSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currSum +=\
    \ nums[i];\n        if(currSum < minSum){\n            minSum = currSum;\n   \
    \     }\n        if(currSum > 0){\n            currSum = 0;\n        }\n    }\n\
    \    return minSum;\n}", "    let minSum = Infinity;\n    let sum = 0;\n    for(let\
    \ i = 0; i < nums.length; i++){\n        sum += nums[i];\n        if(sum < minSum){\n\
    \            minSum = sum;\n        }\n        if(sum > 0){\n            sum =\
    \ 0;\n        }\n    }\n    return minSum;\n}\n", "    let smallestSum = Infinity;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let current = nums[i];\n \
    \       if(current < smallestSum){\n            smallestSum = current;\n     \
    \   }\n        for(let j = i + 1; j < nums.length; j++){\n            current\
    \ += nums[j];\n            if(current < smallestSum){\n                smallestSum\
    \ = current;\n            }\n        }\n    }\n    return smallestSum;\n}\n",
  "   let minSum = Infinity;\n   let currentSum = 0;\n   \n   for(let i = 0; i < nums.length;\
    \ i++){\n      currentSum += nums[i];\n      minSum = Math.min(minSum, currentSum);\n\
    \      if(currentSum > 0){\n         currentSum = 0;\n      }\n   }\n   return\
    \ minSum;\n}\n", "  let minSum = nums[0];\n  let start = 0;\n  let end = 0;\n\
    \  let currentSum = 0;\n  if(nums.length === 0) return 0;\n  while(start < nums.length){\n\
    \    if(end < nums.length && currentSum >= 0){\n      currentSum += nums[end]\n\
    \      end += 1;\n    }else{\n      currentSum -= nums[start]\n      start +=\
    \ 1;\n    }\n    if(currentSum < minSum){\n      minSum = currentSum;\n    }\n\
    \  }\n  return minSum;\n}\n", "    // create a sliding window\n    let total =\
    \ 0;\n    let start = 0;\n    let end = 0;\n    let min = Infinity;\n    while(start\
    \ < nums.length) {\n        // shift the window\n        if(total < 0) {\n   \
    \         total = 0;\n            start = end;\n        }\n        total += nums[end];\n\
    \        min = Math.min(min, total);\n        end++;\n    }\n    return min;\n\
    }", "    //make a variable to store the minimum sum value\n    let minSum = Infinity;\n\
    \    //make a variable to store the current sum\n    let currentSum = 0;\n   \
    \ //loop through the array\n    for(let i = 0; i < nums.length; i++){\n      \
    \  //add the current number to the current sum\n        currentSum += nums[i];\n\
    \        //if the current sum is less than the minimum sum\n        if(currentSum\
    \ < minSum){\n            //update the minimum sum\n            minSum = currentSum;\n\
    \        }\n        //if the current sum is negative\n        if(currentSum <\
    \ 0){\n            //update the current sum to 0\n            currentSum = 0;\n\
    \        }\n    }\n    //return the minimum sum\n    return minSum;\n}\n", " \
    \ let local_max_sum = nums[0];\n  let global_max_sum = nums[0];\n  for(let i =\
    \ 1; i < nums.length; i++){\n    local_max_sum = Math.max(nums[i], local_max_sum\
    \ + nums[i]);\n    global_max_sum = Math.max(local_max_sum, global_max_sum);\n\
    \  }\n  return global_max_sum;\n}\n\nminSubArraySum([2,3,-2,4]); // 5\nminSubArraySum([-2,1,-3,4,-1,2,1,-5,4]);\
    \ // 6", "    let left = 0;\n    let right = 0;\n    let minSum = Infinity;\n\
    \    let currSum = 0;\n    while(right < nums.length){\n        while(currSum\
    \ <= 0 && left < nums.length){\n            currSum += nums[left];\n         \
    \   left++;\n        }\n        minSum = Math.min(minSum, currSum);\n        currSum\
    \ -= nums[right];\n        right++;\n    }\n    return minSum;\n}\n", "  let currentSum\
    \ = nums[0];\n  let minSum = nums[0];\n  for(let i = 1; i < nums.length; i++){\n\
    \    currentSum = Math.min(currentSum + nums[i], nums[i]);\n    minSum = Math.min(currentSum,\
    \ minSum);\n  }\n  return minSum;\n}", "    //edge case :\n    if(nums.length===0)\
    \ return 0;\n    let min = Infinity;\n    let sum = 0;\n    let j = 0;\n    //for\
    \ each element\n    for(let i = 0; i<nums.length; i++){\n        //start adding\
    \ value to the variable sum\n        sum += nums[i];\n        //while the sum\
    \ is greater than 0\n        while(sum>=0){\n            //if sum is greater than\
    \ min\n            if(sum<min){\n                //change min\n              \
    \  min = sum;\n            }\n            //subtracting the value of the first\
    \ element\n            sum -= nums[j];\n            //increment j\n          \
    \  j++;\n        }\n    }\n    return min;\n}\n", "    let maxSum = 0;\n    let\
    \ currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n        currentSum\
    \ += nums[i];\n        if(currentSum > maxSum){\n            maxSum = currentSum;\n\
    \        }\n        if(currentSum < 0){\n            currentSum = 0;\n       \
    \ }\n    }\n    return maxSum;\n}", "  let total = 0;\n  let min = Infinity;\n\
    \  let start = 0;\n  let end = 0;\n  let arr = [];\n  for(let i = 0; i < nums.length;\
    \ i++){\n    total += nums[i];\n    end = i;\n    if(total < min){\n      min\
    \ = total;\n      arr = nums.slice(start, end + 1);\n    }\n    if(total > 0){\n\
    \      total = 0;\n      start = i + 1;\n    }\n  }\n  console.log(arr);\n  return\
    \ min;\n}\n\nminSubArraySum([2, 3, -6, 7, -6, 7]); // -6", "    let minSum = nums[0];\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \        if(sum < minSum){\n            minSum = sum;\n        }\n        if(sum\
    \ > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n}", "   \
    \ let total = 0;\n    let min = Infinity;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        total += nums[i];\n        min = Math.min(min, total);\n    \
    \    if(total > 0){\n            total = 0;\n        }\n    }\n    return min;\n\
    }\n", "    let sum = 0;\n    let min = Infinity;\n    let i = 0;\n    while(i\
    \ < nums.length){\n        sum += nums[i];\n        if(sum < min){\n         \
    \   min = sum;\n        }\n        i++;\n    }\n    return min;\n}\n", "    let\
    \ min = 0;\n    let sum = 0;\n    let num = 1;\n    while(num <= nums.length){\n\
    \        for(let i = 0; i<= nums.length - num; i++){\n            let temp = nums.slice(i,\
    \ i+num)\n            let tempSum = temp.reduce((acc, next) => {\n           \
    \     return acc + next\n            }, 0)\n            if(tempSum < min || min\
    \ === 0){\n                min = tempSum\n            }\n        }\n        num++\n\
    \    }\n    return min\n}\n", "  let min = nums[0];\n  let current = nums[0];\n\
    \  for(let i = 1; i < nums.length; i++){\n    current = Math.min(current + nums[i],\
    \ nums[i]);\n    min = Math.min(min, current);\n  }\n  return min;\n}\n", "  \
    \  let min = nums[0]\n    let sum = 0\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = nums[i]\n        if(sum < min){\n            min = sum\n      \
    \  }\n        for(let j = i + 1; j < nums.length; j++){\n            sum += nums[j]\n\
    \            if(sum < min){\n                min = sum\n            }\n      \
    \  }\n    }\n    return min\n}\n", "    let min = Infinity;\n    let sum = 0;\n\
    \    let left = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum +=\
    \ nums[i];\n        while(sum >= 0){\n            min = Math.min(min, sum);\n\
    \            sum -= nums[left];\n            left++;\n        }\n    }\n    return\
    \ min;\n}\n", "\tlet start=0,end=0,minSum=Infinity,sum=0;\n\twhile(start<nums.length){\n\
    \t\twhile(end<nums.length && sum<=0){\n\t\t\tsum+=nums[end];\n\t\t\tminSum=Math.min(minSum,sum);\n\
    \t\t\tend++;\n\t\t}\n\t\tsum-=nums[start];\n\t\tstart++;\n\t}\n\treturn minSum;\n\
    }\n", "    let minSum = Infinity;\n    let sum = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += nums[i];\n        minSum = Math.min(minSum, sum);\n  \
    \      if(sum > 0){\n            sum = 0;\n        }\n    }\n    return minSum;\n\
    }", "    let minSubSum = Number.MAX_VALUE;\n    let n = nums.length;\n    let\
    \ totalSum = 0;\n    for(let i = 0; i < n; i++){\n        totalSum += nums[i];\n\
    \        minSubSum = Math.min(minSubSum, totalSum);\n        if(totalSum > 0){\n\
    \            totalSum = 0;\n        }\n    }\n    return minSubSum;\n}", "   \
    \ let currentSum = 0;\n    let minimumSum = Infinity;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        currentSum += nums[i];\n        if(currentSum <\
    \ minimumSum){\n            minimumSum = currentSum;\n        }\n        if(currentSum\
    \ > 0){\n            currentSum = 0;\n        }\n    }\n    return minimumSum;\n\
    }\n\nlet nums = [-2, 2, 5, -11, 6];", "  let total = 0;\n  let lowest = Infinity;\n\
    \  for(let i = 0; i < nums.length; i++){\n    total += nums[i];\n    lowest =\
    \ Math.min(lowest, total);\n    if(total > 0){\n      total = 0;\n    }\n  }\n\
    \  return lowest;\n}\n", "    // n^2\n    // for(let i = 0; i < nums.length; i++){\n\
    \    //     for(let j = i + 1; j < nums.length; j++){\n    //         if(nums[i]\
    \ < nums[j]){\n    //             [nums[i], nums[j]] = [nums[j], nums[i]];\n \
    \   //         }\n    //     }\n    // }\n    // return nums[0];\n    // n log\
    \ n\n    return nums.sort((a, b) => a - b)[0];\n}", "    let minSum = Infinity;\n\
    \    let sum = 0;\n    let left = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum += nums[i];\n        if(sum < minSum){\n            minSum = sum;\n\
    \        }\n        if(sum > 0){\n            sum = 0;\n            left = i +\
    \ 1;\n        }\n    }\n    return minSum;\n}", "    let sum = nums[0]\n    let\
    \ currentSum = nums[0]\n    for(let i = 1; i < nums.length; i++){\n        currentSum\
    \ = Math.min(currentSum + nums[i], nums[i])\n        sum = Math.min(sum, currentSum)\n\
    \    }\n    return sum\n}", "  let sum = 0;\n  let min = nums[0];\n  for(let i\
    \ = 0; i < nums.length; i++){\n    sum += nums[i];\n    if(sum < min){\n     \
    \ min = sum;\n    }\n    if(sum > 0){\n      sum = 0;\n    }\n  }\n  return min;\n\
    }\n", "    if(nums.length === 0) return 0;\n    let currSum = nums[0];\n    let\
    \ minSum = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        currSum\
    \ = Math.min(nums[i], currSum + nums[i]);\n        minSum = Math.min(minSum, currSum);\n\
    \    }\n    return minSum;\n}", "    let currentSum = nums[0];\n    let lowestSum\
    \ = nums[0];\n    for(let i = 1; i < nums.length; i++){\n        currentSum =\
    \ Math.min(currentSum + nums[i], nums[i]);\n        lowestSum = Math.min(currentSum,\
    \ lowestSum);\n    }\n    return lowestSum;\n}\n", "    if(nums.length===0) return\
    \ 0;\n    let sum=0;\n    let min = Infinity;\n    for(let i=0;i<nums.length;i++){\n\
    \        sum += nums[i];\n        if(sum<min)min=sum;\n        if(sum>0)sum=0;\n\
    \    }\n    return min;\n}", "    let total = 0;\n    let min = Infinity;\n  \
    \  for(let i = 0; i < nums.length; i++){\n        if(nums[i] < min){\n       \
    \     min = nums[i];\n        }\n        total += nums[i];\n    }\n    if(total\
    \ === min){\n        return total;\n    }\n    let left = 0;\n    let right =\
    \ 0;\n    let current = 0;\n    let minSum = Infinity;\n    while(right < nums.length){\n\
    \        while(current < min && right < nums.length){\n            current +=\
    \ nums[right];\n            right++;\n        }\n        if(current < minSum){\n\
    \            minSum = current;\n        }\n        current -= nums[left];\n  \
    \      left++;\n    }\n    return minSum;\n}", "    if(nums.length == 0) return\
    \ null;\n    let min = Infinity;\n    let curr = 0;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        curr += nums[i];\n        if(curr < min) min = curr;\n      \
    \  if(curr > 0) curr = 0;\n    }\n    return min;\n}\n", "    let minimumSum =\
    \ 0;\n    let currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n   \
    \     currentSum += nums[i];\n        if(currentSum > minimumSum){\n         \
    \   minimumSum = currentSum;\n        }\n        if(currentSum < 0){\n       \
    \     currentSum = 0;\n        }\n    }\n    return minimumSum;\n}\n", "    let\
    \ total = 0;\n    let currentSum = nums[0];\n    let min = nums[0];\n    for(let\
    \ i = 1; i < nums.length; i++){\n        currentSum = Math.min(currentSum + nums[i],\
    \ nums[i]);\n        min = Math.min(min, currentSum);\n    }\n    return min;\n\
    }", "  let minSum = Infinity;\n  let tempSum = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    tempSum += nums[i];\n    if(tempSum < minSum){\n      minSum = tempSum;\n\
    \    }\n    if(tempSum > 0){\n      tempSum = 0;\n    }\n  }\n  return minSum;\n\
    }\nminSubArraySum([2, -4, 3, -2, -4, -1]); // -8", "  let total = 0;\n  let min\
    \ = Infinity;\n  let start = 0;\n  let end = 0;\n  while(start < nums.length){\n\
    \    if(total < 0){\n      total = 0;\n    }\n    total += nums[end];\n    min\
    \ = Math.min(min, total);\n    if(end >= nums.length - 1){\n      total -= nums[start];\n\
    \      start++;\n    } else {\n      end++;\n    }\n  }\n  return min;\n}", " \
    \   if(nums.length===0) return 0;\n    let minSum = Infinity;\n    let currSum\
    \ = 0;\n    for(let i=0; i<nums.length; i++){\n        currSum += nums[i];\n \
    \       minSum = Math.min(minSum, currSum);\n        if(currSum>0){\n        \
    \    currSum = 0;\n        }\n    }\n    return minSum;\n}\n", "    let minSum\
    \ = nums[0];\n    let currentSum = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        currentSum += nums[i];\n        if(currentSum < minSum){\n          \
    \  minSum = currentSum;\n        }\n        if(currentSum > 0){\n            currentSum\
    \ = 0;\n        }\n    }\n    return minSum;\n}\n\nlet nums = [-2,1,-3,4,-1,2,1,-5,4];\n\
    let nums2 = [2,3,1,2,4,3];\nlet nums3 = [2,-3,2,-3];", "    let minSum = Infinity\n\
    \    let sum = 0\n    let start = 0\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum += nums[i]\n        while(sum >= minSum){\n            minSum = Math.min(minSum,\
    \ sum)\n            sum -= nums[start]\n            start++\n        }\n    }\n\
    \    return minSum\n}\n\nlet input = [1,2,3,4,5]\nlet input2 = [5,5,5,5,5]", " \
    \   let total = 0;\n    let min = Infinity;\n    for(let i = 0; i < nums.length;\
    \ i++){\n        total += nums[i];\n        min = Math.min(min, total);\n    \
    \    if(total > 0){\n            total = 0;\n        }\n    }\n    return min;\n\
    }\n", "  if(nums.length === 0) return 0;\n  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let curSum = 0;\n  for(let i = 0; i < nums.length; i++){\n    curSum += nums[i];\n\
    \    if(curSum < min){\n      min = curSum;\n    }\n    if(curSum > 0){\n    \
    \  curSum = 0;\n    }\n  }\n  return min;\n}", "  let minSum = Infinity;\n  let\
    \ left = 0;\n  let currSum = 0;\n  for(let i = 0; i < nums.length; i++){\n   \
    \ currSum += nums[i];\n    while(currSum >= minSum){\n      minSum = Math.min(minSum,\
    \ currSum);\n      currSum -= nums[left];\n      left++;\n    }\n  }\n  return\
    \ minSum;\n}\n", "    let min = Infinity;\n    let sum = 0;\n    let start = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n        while(sum\
    \ >= nums[i]){\n            min = Math.min(min, sum);\n            sum -= nums[start];\n\
    \            start++;\n        }\n    }\n    return min;\n}", "    let minSum\
    \ = Infinity;\n    let windowStart = 0;\n    let windowSum = 0;\n    for(let windowEnd\
    \ = 0; windowEnd < nums.length; windowEnd++){\n        windowSum += nums[windowEnd];\n\
    \        while(windowSum >= minSum){\n            minSum = Math.min(minSum, windowSum);\n\
    \            windowSum -= nums[windowStart];\n            windowStart++;\n   \
    \     }\n    }\n    return minSum;\n}\n", "   let minSum = Infinity;\n   let sum\
    \ = 0;\n   for(let i = 0; i < nums.length; i++){\n       sum += nums[i];\n   \
    \    if(sum < minSum){\n           minSum = sum;\n       }\n       if(sum > 0){\n\
    \           sum = 0;\n       }\n   }\n   return minSum;\n}", "    let sums = [nums[0]];\n\
    \    for(let i = 1; i < nums.length; i++){\n        sums[i] = Math.min(sums[i-1]\
    \ + nums[i], nums[i]);\n    }\n    return Math.min(...sums);\n}", "  let total\
    \ = 0;\n  let minTotal = Infinity;\n  for(let num of nums){\n    total += num;\n\
    \    minTotal = Math.min(minTotal, total);\n    if(total < 0){\n      total =\
    \ 0;\n    }\n  }\n  return minTotal;\n}\n", "    let total = 0;\n    let min =\
    \ Infinity;\n    for(let i = 0; i < nums.length; i++){\n        total += nums[i];\n\
    \        if(total < min){\n            min = total;\n        }\n        if(total\
    \ > 0){\n            total = 0;\n        }\n    }\n    return min;\n}\n", "  \
    \  let minSum = Infinity\n    let sum = 0\n    let start = 0\n    for(let i =\
    \ 0; i < nums.length; i++){\n        sum += nums[i]\n        while(sum >= nums[i]){\n\
    \            minSum = Math.min(minSum, sum)\n            sum -= nums[start]\n\
    \            start++\n        }\n    }\n    return minSum\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

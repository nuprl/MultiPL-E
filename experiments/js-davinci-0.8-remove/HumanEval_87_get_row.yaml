name: HumanEval_87_get_row
language: js
prompt: "//You are given a 2 dimensional data, as a nested lists,\n// which is similar\
  \ to matrix, however, unlike matrices,\n// each row may contain a different number\
  \ of columns.\n// Given lst, and integer x, find integers x in the list,\n// and\
  \ return list of tuples, [(x1, y1), (x2, y2) ...] such that\n// each tuple is a\
  \ coordinate - (row, columns), starting with 0.\n// Sort coordinates initially by\
  \ rows in ascending order.\n// Also, sort coordinates of the row by columns in descending\
  \ order.\n// Examples:\nfunction get_row(lst, x){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_row;\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1,\
  \ 6], [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 4], [1, 0], [2, 5], [2, 0]]);\n  assert.deepEqual(candidate([[1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1,\
  \ 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]], 2),[[0, 1], [1, 1], [2, 1], [3, 1], [4, 1],\
  \ [5, 1]]);\n  assert.deepEqual(candidate([[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6],\
  \ [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1, 2, 3, 1, 5, 6], [1, 2, 3, 4, 1, 6],\
  \ [1, 2, 3, 4, 5, 1]], 1),[[0, 0], [1, 0], [2, 1], [2, 0], [3, 2], [3, 0], [4, 3],\
  \ [4, 0], [5, 4], [5, 0], [6, 5], [6, 0]]);\n  assert.deepEqual(candidate([], 1),[]);\n\
  \  assert.deepEqual(candidate([[1]], 2),[]);\n  assert.deepEqual(candidate([[],\
  \ [1], [1, 2, 3]], 3),[[2, 2]]);\n}\n\ntest();"
completions: ["    var newList = [];\n    for(var i = 0; i < lst.length; i++){\n \
    \       for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                newList.push([i, j]);\n            }\n        }\n    }\n    return\
    \ newList;\n}", "    // ...\n}\n", "  //for every sublist, check if x is in the\
    \ sublist\n  var result = [];\n  for (var i = 0; i < lst.length; i++){\n    for\
    \ (var j = 0; j < lst[i].length; j++){\n      if (lst[i][j] == x){\n        result.push([i,\
    \ j]);\n      }\n    }\n  }\n  //for every coordinate of x, sort it according\
    \ to the row\n  result.sort(function(a, b){\n    return a[0] - b[0];\n  });\n\
    \  //for every coordinate of x, sort it according to the column\n  for (var i\
    \ = 0; i < result.length; i++){\n    if (result[i][0] == result[i + 1][0]){\n\
    \      var temp = result[i];\n      var j = i - 1;\n      while (j >= 0 && result[j][0]\
    \ == temp[0]){\n        j--;\n      }\n      var j = j + 1;\n      while (j <=\
    \ i && result[j][1] < temp[1]){\n        result[j + 1] = result[j];\n        j++;\n\
    \      }\n      result[j] = temp;\n    }\n  }\n  return result;\n}\n", "    var\
    \ new_lst = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j =\
    \ 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n             \
    \   new_lst.push([i, j]);\n            }\n        }\n    }\n    var new_lst2 =\
    \ new_lst.sort(function(a, b){\n        if(a[0] == b[0]){\n            return\
    \ b[1] - a[1];\n        }\n        return a[0] - b[0];\n    });\n    return new_lst2;\n\
    }", "    var answer = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       answer.push([i, j]);\n            }\n        }\n    }\n    answer.sort(function(a,\
    \ b){\n        if(a[0] == b[0]){\n            return b[1] - a[1];\n        } else{\n\
    \            return a[0] - b[0];\n        }\n    });\n    return answer;\n}\n",
  "    var found = [];\n    for (var i = 0; i < lst.length; i++){\n        for (var\
    \ j = 0; j < lst[i].length; j++){\n            if (lst[i][j] == x){\n        \
    \        found.push([i, j]);\n            }\n        }\n    }\n    return found;\n\
    }\n", "  var coordinates = [],x_list = [];\n  for(var i = 0; i < lst.length; i++){\n\
    \    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n    \
    \    coordinates.push([i,j]);\n      }\n    }\n  }\n  coordinates.sort(function(a,b){\n\
    \    return a[0] - b[0];\n  });\n  coordinates.sort(function(a,b){\n    return\
    \ b[1] - a[1];\n  });\n  return coordinates;\n}\n", "    let i = 0;\n    while\
    \ (lst[i].indexOf(x) < 0){\n        i++;\n    }\n    return i;\n}", "    var res\
    \ = [];\n    var i = 0;\n    while (i < lst.length){\n        var j = 0;\n   \
    \     while (j < lst[i].length){\n            if (lst[i][j] == x){\n         \
    \       res.push([i, j]);\n            }\n            j += 1;\n        }\n   \
    \     i += 1;\n    }\n    return res;\n}", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    return lst.filter(e=>\
    \ e.includes(x));\n}\n", "    var row=[];\n    var res=[];\n    for(var i=0; i<lst.length;\
    \ i++){\n        for(var j=0; j<lst[i].length; j++){\n            if(lst[i][j]==x){\n\
    \                row.push(i);\n                row.push(j);\n                res.push(row);\n\
    \                row=[];\n            }\n        }\n    }\n    return res;\n}",
  "    var res = [];\n    var y = 0;\n    for(var i = 0; i < lst.length; i++){\n \
    \       for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                res.push(y++);\n            }\n        }\n    }\n    return res;\n\
    }\n", "    var coordinates = [];\n    for(var i = 0; i < lst.length; i++){\n \
    \       for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                coordinates.push([i, j]);\n            }\n        }\n    }\n\
    \    coordinates.sort(function(a, b){\n        if(a[0] > b[0]){\n            return\
    \ 1;\n        }\n        else if(a[0] < b[0]){\n            return -1;\n     \
    \   }\n        else if(a[0] == b[0]){\n            if(a[1] > b[1]){\n        \
    \        return -1;\n            }\n            else if(a[1] < b[1]){\n      \
    \          return 1;\n            }\n            else{\n                return\
    \ 0;\n            }\n        }\n    });\n    return coordinates;\n}\n", "  //\
    \ Write your code here\n  let coordinates = [];\n  lst.forEach((row, index) =>\
    \ {\n    row.forEach((el, i) => {\n      if (el === x) {\n        coordinates.push([index,\
    \ i]);\n      }\n    });\n  });\n  return coordinates.sort((a, b) => a[0] - b[0]\
    \ || b[1] - a[1]);\n}", "    let res = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                res.push([i, j]);\n            }\n        }\n    }\n\
    \    return res;\n}\n", "    var arr = [];\n    var tmp = lst;\n    for(var i\
    \ = 0; i < tmp.length; i++){\n        if(tmp[i].includes(x)){\n            arr.push(i);\n\
    \        }\n    }\n    return arr;\n}", "    var result = [];\n    for(var i =\
    \ 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    var y=0;\n    var\
    \ row=[];\n    while(lst[y]){\n        var x1=0;\n        while(lst[y][x1]){\n\
    \            if(lst[y][x1]==x){\n                row.push([y,x1]);\n         \
    \   }\n            x1++;\n        }\n        y++;\n    }\n    return row;\n}\n",
  "  return lst.reduce(function(acc, el, idx){\n    el.forEach(function(element, index){\n\
    \      if(element == x){\n        acc.push([idx, index]);\n      }\n    });\n\
    \    return acc;\n  }, []);\n}", "    var temp_dic = {};\n    var x_index = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                if(i in temp_dic){\n\
    \                    temp_dic[i].push(j);\n                }else{\n          \
    \          temp_dic[i] = [j];\n                }\n            }\n        }\n \
    \   }\n    for(var i in temp_dic){\n        x_index.push([i, temp_dic[i]]);\n\
    \    }\n    var x_result = [];\n    x_index.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    for(var i = 0; i < x_index.length; i++){\n      \
    \  var temp_tuple = [];\n        x_index[i][1].sort(function(a, b){\n        \
    \    return b - a;\n        });\n        for(var j = 0; j < x_index[i][1].length;\
    \ j++){\n            temp_tuple.push([x_index[i][0], x_index[i][1][j]]);\n   \
    \     }\n        x_result.push(temp_tuple);\n    }\n    return x_result;\n}",
  "   var coords = [];\n   lst.forEach(function(e, i){\n      var index_x = e.indexOf(x);\n\
    \      if(index_x != -1){\n         coords.push([i, index_x]);\n      }\n   });\n\
    \   return coords;\n}\n", "    let rows = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i].indexOf(x) !== -1){\n            rows.push(i);\n  \
    \      }\n    }\n    return rows;\n}\n", "    var result = [];\n    var index\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                result[index] = [];\n\
    \                result[index][0] = i;\n                result[index][1] = j;\n\
    \                index++;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let ints = [];\n    let my_list = []\n    for (let i = 0; i < lst.length;\
    \ i++){\n        for (let j = 0; j < lst[i].length; j++){\n            if (lst[i][j]\
    \ == x){\n                my_list.push([i, j]);\n            }\n        }\n  \
    \  }\n    my_list.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    my_list.sort(function(a, b){\n        return b[1] - a[1];\n    });\n    console.log(my_list);\n\
    }\n\nget_row([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5);\nget_row([[1, 2, 3], [4, 5,\
    \ 6], [7, 8, 9]], 7);\n", "  let results = [];\n  for(let i = 0; i < lst.length;\
    \ i++){\n    for(let j = 0; j < lst[i].length; j++){\n      if(lst[i][j] === x){\n\
    \        results.push([i, j]);\n      }\n    }\n  }\n  // sort by row\n  results.sort((a,\
    \ b) => a[0] - b[0]);\n  // sort by column within row\n  for(let i = 0; i < results.length;\
    \ i++){\n    if(results[i][0] === results[i+1][0]){\n      results.sort((a, b)\
    \ => b[1] - a[1]);\n    }\n  }\n  return results;\n}", "    var lst_x = [];\n\
    \    for (var i = 0; i < lst.length; i++){\n        for (var j = 0; j < lst[i].length;\
    \ j++){\n            if (lst[i][j] == x){\n                lst_x.push([i, j]);\n\
    \            }\n        }\n    }\n    lst_x.sort(function(a, b){\n        if (a[0]\
    \ != b[0]){\n            return a[0] - b[0];\n        } else{\n            return\
    \ b[1] - a[1];\n        }\n    });\n    return lst_x;\n}\n\nvar lst = [[1, 2,\
    \ 3], [1, 2, 5], [0, 1, 2]];\nvar x = 1;", "  var res = [];\n  for(var i = 0;\
    \ i < lst.length; i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j]\
    \ == x){\n        res.push([i, j]);\n      }\n    }\n  }\n  return res;\n}\n",
  "    var row = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x)\
    \ != -1){\n            row.push([i, lst[i].indexOf(x)]);\n        }\n    }\n \
    \   return row;\n}", "   var r;\n   var result = [];\n   var coords = [];\n  \
    \ var cols = [];\n   var col_index;\n   var dict_coords = {};\n   var dict_cols\
    \ = {};\n   for (r=0; r<lst.length; r++){\n      col_index = lst[r].indexOf(x);\n\
    \      if (col_index != -1){\n         dict_coords = { \"row\": r, \"col\": col_index};\n\
    \         dict_cols = {col_index: lst[r][col_index]};\n         coords.push(dict_coords);\n\
    \         cols.push(dict_cols);\n      }\n   }\n   var c = 0;\n   var row_max\
    \ = lst.length;\n   for (r=0; r<row_max; r++){\n      for (c=0; c<coords.length;\
    \ c++){\n         if (coords[c].row == r){\n            var y = coords[c].col;\n\
    \            var x = cols[y].col_index;\n            var new_tuple = [x, y];\n\
    \            result.push(new_tuple);\n         }\n      }\n   }\n   return result;\n\
    }", "    let res=[];\n    lst.forEach((el,ind)=>{\n       if(el.indexOf(x)!=-1){\n\
    \           res.push([ind,el.indexOf(x)]);\n       }\n    });\n    return res;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < lst.length; i++){\n      \
    \  for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                result.push([i, j]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    var result = [];\n    var row = [];\n    var count = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                count++;\n         \
    \       row.push(i);\n                row.push(j);\n                result.push(row);\n\
    \                row = [];\n            }\n        }\n    }\n    if(count == 0){\n\
    \        return result;\n    }\n    result.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    for(var k = 0; k < result.length; k++){\n       \
    \ result[k].reverse();\n    }\n    return result;\n}", "  const coordinates =\
    \ [];\n  for (let i = 0; i < lst.length; i++) {\n    for (let j = 0; j < lst[i].length;\
    \ j++) {\n      if (lst[i][j] === x) {\n        coordinates.push([i, j]);\n  \
    \    }\n    }\n  }\n  // sort rows\n  coordinates.sort((a, b) => a[0] - b[0]);\n\
    \  // sort columns\n  coordinates.sort((a, b) => b[1] - a[1]);\n  return coordinates;\n\
    }\nlst = [[1, 2, 3], [1, 2, 3], [1, 2, 3], [4, 5, 6], [4, 5, 6], [4, 5, 6]];\n\
    get_row(lst, 1);\nget_row(lst, 2);\nget_row(lst, 3);\nget_row(lst, 4);\nget_row(lst,\
    \ 5);\nget_row(lst, 6);\nget_row(lst, 7);", "    let result = [];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        for(let j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push({\n            \
    \        x: i,\n                    y: j\n                });\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var arr = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                arr.push([i, j]);\n        \
    \    }\n        }\n    }\n    arr.sort(function(a, b){\n        if(a[0] > b[0]){\n\
    \            return 1;\n        }\n        else if(a[0] < b[0]){\n           \
    \ return -1;\n        }\n        else{\n            if(a[1] > b[1]){\n       \
    \         return -1;\n            }\n            else if(a[1] < b[1]){\n     \
    \           return 1;\n            }\n            else{\n                return\
    \ 0;\n            }\n        }\n    });\n    return arr;\n}\n", "    var arr =\
    \ []\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                arr.push([i, j])\n \
    \           }\n        }\n    }\n    arr.sort(function(a, b){\n        if(a[0]\
    \ > b[0]){\n            return 1\n        }\n        else if(a[0] < b[0]){\n \
    \           return -1\n        }\n        else if(a[0] == b[0]){\n           \
    \ if(a[1] > b[1]){\n                return -1\n            }\n            else\
    \ if(a[1] < b[1]){\n                return 1\n            }\n            else{\n\
    \                return 0\n            }\n        }\n    })\n    return arr\n}",
  "  var newArr = [];\n  for(var i = 0; i < lst.length; i++){\n    for(var j = 0;\
    \ j < lst[i].length; j++){\n      if(lst[i][j] === x){\n        newArr.push([i,\
    \ j]);\n      }\n    }\n  }\n  return newArr;\n}\n", "    var row = [];\n    var\
    \ tuples = [];\n    var temp = [];\n    var row_count = 0;\n    var tuple_count\
    \ = 0;\n    var row_count_temp = 0;\n    var tuple_count_temp = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                row.push([lst[i][j], i, j]);\n\
    \            }\n        }\n    }\n    for(var i = 0; i < row.length; i++){\n \
    \       for(var j = 0; j < row.length; j++){\n            if(row[i][1] == row[j][1]){\n\
    \                temp.push(row[j]);\n            }\n        }\n        for(var\
    \ k = 0; k < temp.length; k++){\n            if(temp[k][2] > temp[k+1][2]){\n\
    \                var t = temp[k];\n                temp[k] = temp[k+1];\n    \
    \            temp[k+1] = t;\n            }\n        }\n        while(row_count\
    \ < temp.length){\n            tuples.push([temp[row_count][1], temp[row_count][2]]);\n\
    \            row_count++;\n        }\n        row_count = 0;\n        temp = [];\n\
    \    }\n    for(var i = 0; i < tuples.length; i++){\n        for(var j = 0; j\
    \ < tuples.length; j++){\n            if(tuples[i][0] < tuples[j][0]){\n     \
    \           var t = tuples[i];\n                tuples[i] = tuples[j];\n     \
    \           tuples[j] = t;\n            }\n        }\n    }\n    return tuples;\n\
    }\n", "    let result = [];\n    lst.forEach((row, y) => {\n        if (row.indexOf(x)\
    \ > -1) result.push([y, row.indexOf(x)]);\n    });\n    return result.sort((a,\
    \ b) => {\n        if (a[0] < b[0]) return -1;\n        if (a[0] > b[0]) return\
    \ 1;\n        if (a[1] > b[1]) return -1;\n        if (a[1] < b[1]) return 1;\n\
    \        return 0;\n    });\n}", "  var output = [];\n  var y = 0;\n  var n =\
    \ 0;\n  for(var i = 0; i < lst.length; i++){\n    for(var j = 0; j < lst[i].length;\
    \ j++){\n      if(lst[i][j] == x){\n        output.push({\"x\":y, \"y\":n});\n\
    \      }\n      n++;\n    }\n    n = 0;\n    y++;\n  }\n  return output;\n}\n",
  "    let get_col = (x,lst, row) =>\n        lst[row].map((v,i) => [v,i]).filter(v\
    \ => v[0] === x).map(v => [row,v[1]]);\n    let get_row = (x,lst) => lst.map((v,i)\
    \ => get_col(x,lst,i)).filter(v => v.length > 0);\n    return get_row(x,lst).reduce((a,v)\
    \ => a.concat(v),[]).sort((a,b) => a[0] === b[0] ? b[1] - a[1] : a[0] - b[0]);\n\
    }\nlst = [\n    [ 1,  3,  5,  7,  9],\n    [ 2,  4,  6,  8, 10],\n    [11, 12,\
    \ 13, 14, 15],\n    [21, 22, 23, 24, 25],\n    [31, 32, 33, 34, 35]\n]", "   \
    \ var res = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j =\
    \ 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n             \
    \   res.push([i, j]);\n            }\n        }\n    }\n    return res;\n}\n",
  "  let result = [];\n  for(let i = 0; i < lst.length; i++){\n    for(let j = 0;\
    \ j < lst[i].length; j++){\n      if(lst[i][j] === x){\n        result.push([i,\
    \ j]);\n      }\n    }\n  }\n  return result;\n}", "\tvar new_lst = [];\n\tfor(var\
    \ i = 0; i < lst.length; i++){\n\t\tfor(var j = 0; j < lst[i].length; j++){\n\t\
    \t\tif(lst[i][j] == x){\n\t\t\t\tnew_lst.push([i, j]);\n\t\t\t}\n\t\t}\n\t}\n\t\
    var sort_lst = new_lst.sort(function(a, b){\n\t\tif(a[0] > b[0]){\n\t\t\treturn\
    \ 1;\n\t\t}\n\t\telse if(a[0] < b[0]){\n\t\t\treturn -1;\n\t\t}\n\t\telse if(a[0]\
    \ == b[0]){\n\t\t\tif(a[1] > b[1]){\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse if(a[1]\
    \ < b[1]){\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if(a[1] == b[1]){\n\t\t\t\t\
    return 0;\n\t\t\t}\n\t\t}\n\t});\n\treturn sort_lst;\n}\n", "\treturn lst.map(function(e,\
    \ i){return [i, e.indexOf(x)]}).filter(function(e){return e[1] >= 0});\n}\n",
  "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       result.push([i, j]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "  return lst.map(function(y, i){\n    return y.reduce(function(a, b, j){\n\
    \      if(b == x){\n        a.push([i, j]);\n      }\n      return a;\n    },\
    \ []);\n  }).reduce(function(a, b){\n    return a.concat(b);\n  }, []).sort(function(a,\
    \ b){\n    if(a[0] > b[0]){\n      return 1;\n    }\n    if(a[0] < b[0]){\n  \
    \    return -1;\n    }\n    if(a[1] > b[1]){\n      return -1;\n    }\n    if(a[1]\
    \ < b[1]){\n      return 1;\n    }\n    return 0;\n  });\n}\n", "    var row =\
    \ [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                row.push(i);\n     \
    \       }\n        }\n    }\n    return row;\n}", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        var temp = [];\n        for(var j = 0;\
    \ j < lst[i].length; j++){\n            if(lst[i][j] == x){\n                temp.push([i,\
    \ j]);\n            }\n        }\n        result.push(temp);\n    }\n    return\
    \ result;\n}\n", "    let all_rows = [];\n    let all_cols = [];\n    let result\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                result.push([i,\
    \ j]);\n            }\n        }\n    }\n    for(let a = 0; a < result.length;\
    \ a++){\n        all_rows.push(result[a][0]);\n    }\n    all_rows.sort();\n \
    \   for(let b = 0; b < all_rows.length; b++){\n        for(let c = 0; c < result.length;\
    \ c++){\n            if(all_rows[b] == result[c][0]){\n                all_cols.push(result[c][1]);\n\
    \            }\n        }\n        all_cols.sort(function(a, b){return b - a});\n\
    \        for(let d = 0; d < all_cols.length; d++){\n            for(let e = 0;\
    \ e < result.length; e++){\n                if(all_rows[b] == result[e][0] &&\
    \ all_cols[d] == result[e][1]){\n                    result[e] = [all_rows[b],\
    \ all_cols[d]];\n                }\n            }\n        }\n        all_cols\
    \ = [];\n    }\n    return result;\n}", "    var result = [];\n    for(var i =\
    \ 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    var coordinates =\
    \ [];\n    var row = 0;\n    var column = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        row = i;\n        for(var j = 0; j < lst[i].length; j++){\n \
    \           column = j;\n            if(lst[i][j] == x){\n                coordinates.push([row,\
    \ column]);\n            }\n        }\n    }\n    return coordinates;\n}", " \
    \   let result = [];\n    for(let row = 0; row < lst.length; row++){\n       \
    \ for(let col = 0; col < lst[row].length; col++){\n            if(lst[row][col]\
    \ === x){\n                result.push([row, col]);\n            }\n        }\n\
    \    }\n    return result;\n}", "    var arr = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                arr.push([i,j]);\n            }\n        }\n    }\n\
    \    return arr;\n}\n", "    var r = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        var col = lst[i].lastIndexOf(x);\n        if(col > -1){\n           \
    \ r.push([i, col]);\n        }\n    }\n    return r;\n}\n", "    var i = 0;\n\
    \    var res = [];\n    var row = lst[i];\n    while(typeof row !== 'undefined'){\n\
    \        for(var j = 0; j < row.length; j++){\n            if(row[j] === x){\n\
    \                res.push([i, j]);\n            }\n        }\n        i++;\n \
    \       row = lst[i];\n    }\n    return res;\n}\n", "  var res = [];\n  for(var\
    \ i = 0; i < lst.length; i++){\n    for(var j = 0; j < lst[i].length; j++){\n\
    \      if(lst[i][j] == x){\n        res.push([i, j]);\n      }\n    }\n  }\n \
    \ res.sort(function(a, b){\n    if(a[0] > b[0]){\n      return 1;\n    }else if(a[0]\
    \ < b[0]){\n      return -1;\n    }else{\n      if(a[1] > b[1]){\n        return\
    \ -1;\n      }else if(a[1] < b[1]){\n        return 1;\n      }else{\n       \
    \ return 0;\n      }\n    }\n  });\n  return res;\n}", "   var lst1 = [];\n  \
    \ var lst2 = [];\n   var lst3 = [];\n   var lst4 = [];\n   var lst5 = [];\n  \
    \ var lst6 = [];\n   var lst7 = [];\n   var lst8 = [];\n   var lst9 = [];\n  \
    \ var lst10 = [];\n   var lst11 = [];\n   var lst12 = [];\n   var lst13 = [];\n\
    \   var lst14 = [];\n   var lst15 = [];\n   var lst16 = [];\n   var lst17 = [];\n\
    \   var lst18 = [];\n   var lst19 = [];\n   var lst20 = [];\n   var lst21 = [];\n\
    \   var lst22 = [];\n   var lst23 = [];\n   var lst24 = [];\n   var lst25 = [];\n\
    \   var lst26 = [];\n   var lst27 = [];\n   var lst28 = [];\n   var lst29 = [];\n\
    \   var lst30 = [];\n   var lst31 = [];\n   var lst32 = [];\n   var lst33 = [];\n\
    \   var lst34 = [];\n   var lst35 = [];\n   var lst36 = [];\n   var lst37 = [];\n\
    \   var lst38 = [];\n   var lst39 = [];\n   var lst40 = [];\n   var lst41 = [];\n\
    \   var lst42 = [];\n   var lst43 = [];\n   var lst44 = [];\n   var lst45 = [];\n\
    \   var lst46 = [];\n   var lst47 = [];\n   var lst48 = [];\n   var lst49 = [];\n\
    \   var lst50 = [];\n   var lst51 = [];\n   var lst52 = [];\n   var lst53 = [];\n\
    \   var lst54 = [];\n   var lst55 = [];\n   var lst56 = [];\n   var lst57 = [];\n\
    \   var lst58 = [];\n   var lst59 = [];\n   var lst60 = [];\n   var lst61 = [];\n\
    \   var lst62 = [];\n   var lst63 = [];\n   var lst64 = [];", "    var lst_row\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                lst_row.push([i,\
    \ j]);\n            }\n        }\n    }\n    var lst_row_sort = lst_row.sort(function(a,\
    \ b){\n        if(a[0] > b[0]){\n            return 1;\n        }\n        else\
    \ if(a[0] < b[0]){\n            return -1;\n        }\n        else{\n       \
    \     if(a[1] > b[1]){\n                return -1;\n            }\n          \
    \  else if(a[1] < b[1]){\n                return 1;\n            }\n         \
    \   else{\n                return 0;\n            }\n        }\n    });\n    return\
    \ lst_row_sort;\n}\nvar lst = [[0, 1, 2, 3, 4, 5],\n           [1, 0, 1, 2, 3,\
    \ 4],\n           [2, 1, 0, 1, 2, 3],\n           [3, 2, 1, 0, 1, 2],\n      \
    \     [4, 3, 2, 1, 0, 1],\n           [5, 4, 3, 2, 1, 0]]\nget_row(lst, 0); //returns\
    \ [[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5]]\nget_row(lst, 1); //returns\
    \ [[0, 1], [1, 0], [2, 1], [3, 2], [4, 3], [5, 4]]\nget_row(lst, 2); //returns\
    \ [[0, 2], [1, 1], [2, 0], [3, 1], [4, 2], [5, 3]]\nget_row(lst, 3); //returns\
    \ [[0, 3], [1, 2], [2, 1], [3, 0], [4, 1], [5, 2]]\nget_row(lst, 4); //returns",
  "    var ar = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j =\
    \ 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n             \
    \   ar.push([i, j]);\n            }\n        }\n    }\n    ar.sort(function(a,\
    \ b){\n        if(a[0] > b[0]){\n            return 1;\n        }\n        else\
    \ if(a[0] < b[0]){\n            return -1;\n        }\n        else{\n       \
    \     if(a[1] > b[1]){\n                return -1;\n            }\n          \
    \  else if(a[1] < b[1]){\n                return 1;\n            }\n         \
    \   else{\n                return 0;\n            }\n        }\n    });\n    return\
    \ ar;\n}\n", "    return lst.map(function(e, i){\n        return e.filter(function(f){\n\
    \            return f === x;\n        }).map(function(f){\n            return\
    \ [i, e.indexOf(f)];\n        });\n    }).reduce(function(a, b){\n        return\
    \ a.concat(b);\n    }).sort(function(a, b){\n        return a[0] - b[0] || b[1]\
    \ - a[1];\n    });\n}\n", "    var n = lst.length;\n    var i;\n    var flag =\
    \ false;\n    var posx = [];\n    for(i = 0; i < n; i++) {\n        var j = 0;\n\
    \        var m = lst[i].length;\n        var posy = [];\n        for(j = 0; j\
    \ < m; j++) {\n            if(lst[i][j] == x) {\n                flag = true;\n\
    \                posy.push(j);\n            }\n        }\n        if(flag) {\n\
    \            posx.push([i, posy]);\n        }\n        flag = false;\n    }\n\
    \    return posx;\n}", "  let y = -1;\n  let row = -1;\n  for(let i=0; i<lst.length;\
    \ i++){\n    for(let j=0; j<lst[i].length; j++){\n      if(lst[i][j] === x){\n\
    \        y = j;\n        row = i;\n        break;\n      }\n    }\n  }\n  return\
    \ [row, y];\n}\n", "    let res = []\n    for(let i=0; i<lst.length; i++){\n \
    \       for(let j=0; j<lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                res.push([i,j])\n            }\n        }\n    }\n    return\
    \ res.sort((a,b)=>(a[0]-b[0])||(b[1]-a[1]))\n}\n\nlet data = [\n    [3,1,2,2,6],\n\
    \    [1,1,3,4,5],\n    [4,4,4,4,4],\n    [4,4,4,4,4]\n]", "    var result = [];\n\
    \    var rows = [];\n    var columns = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                rows.push(i);\n                columns.push(j);\n  \
    \          }\n        }\n    }\n    for(var k = 0; k < rows.length; k++){\n  \
    \      var temp = [];\n        temp.push(rows[k]);\n        temp.push(columns[k]);\n\
    \        result.push(temp);\n    }\n    // sort rows in ascending order\n    for(var\
    \ h = 0; h < result.length; h++){\n        for(var n = h + 1; n < result.length;\
    \ n++){\n            if(result[h][0] > result[n][0]){\n                var temp\
    \ = result[h];\n                result[h] = result[n];\n                result[n]\
    \ = temp;\n            }\n        }\n    }\n    // sort columns in descending\
    \ order\n    for(var i = 0; i < result.length; i++){\n        for(var j = i +\
    \ 1; j < result.length; j++){\n            if(result[i][0] == result[j][0]){\n\
    \                if(result[i][1] < result[j][1]){\n                    var temp\
    \ = result[i];\n                    result[i] = result[j];\n                 \
    \   result[j] = temp;\n                }\n            }\n        }\n    }\n  \
    \  return result;\n}\n\nvar lst = [[1, 2, 3], [4, 5, 6], [8, 9, 10], [10, 20,\
    \ 30]];\nvar x = 10;", "    // return [ (i, lst[i].indexOf(x)) for (i in lst)\
    \ if (lst[i].indexOf(x) > -1) ]\n    return [].concat.apply([], lst).map(function(v,\
    \ i){\n        if (v == x) return [(i/lst[0].length)^0, i%lst[0].length];\n  \
    \  }).filter(function(v){return v;});\n}\n", "    var results = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                results.push([i, j]);\n    \
    \        }\n        }\n    }\n    return results;\n}", "    let tuples = [];\n\
    \    lst.forEach((row, y) => {\n        row.forEach((value, x) => {\n        \
    \    if (value === x) {\n                tuples.push([y, x]);\n            }\n\
    \        });\n    });\n    return tuples.sort((a, b) => a[0] > b[0] ? 1 : -1).sort((a,\
    \ b) => a[1] < b[1] ? 1 : -1);\n}\n", "    for(var i = 0; i < lst.length; i++){\n\
    \        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] ==\
    \ x){\n                console.log(`(${i}, ${j})`);\n            }\n        }\n\
    \    }\n}\n\nlst = [[1, 2, 3], [3, 4, 5], [6, 7, 8]]\nx = 4", "    var res = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                res.push([i, j]);\n\
    \            }\n        }\n    }\n    return res;\n}\n", "    var new_lst = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        var row = lst[i];\n       \
    \ var row_length = row.length;\n        var temp_lst = [];\n        for(var j\
    \ = 0; j < row_length; j++){\n            if(x == row[j]){\n                temp_lst.push(i);\n\
    \                temp_lst.push(j);\n                new_lst.push(temp_lst);\n\
    \                temp_lst = [];\n            }\n        }\n    }\n    return new_lst;\n\
    }", "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       res.push([i, j]);\n            }\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        if(a[0] == b[0]){\n            return b[1] - a[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    return res;\n}\n", "    var arr = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                arr.push([i, j]);\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "    let coordinates\
    \ = [];\n    lst.forEach((item, i) => {\n        for (let j = 0; j < item.length;\
    \ j++) {\n            if (item[j] === x) {\n                coordinates.push([i,\
    \ j]);\n            }\n        }\n    });\n    return coordinates;\n}\n", "  \
    \  var lst_1 = []\n    for (var i = 0; i < lst.length; i++){\n        for (var\
    \ j = 0; j < lst[i].length; j++){\n            if (lst[i][j] == x){\n        \
    \        lst_1.push([i,j])\n            }\n        }\n    }\n    return lst_1\n\
    }", "  return lst.map(function(val, ind){\n    return [val.reduce(function(acc,\
    \ val){\n      if(val === x){\n        acc.push(ind);\n      }\n      return acc;\n\
    \    }, []), ind];\n  }).reduce(function(acc, val){\n    if(val[0].length > 0){\n\
    \      acc.push(val);\n    }\n    return acc;\n  }, []).map(function(val){\n \
    \   return val[0].map(function(val){\n      return [val, val[1]];\n    });\n \
    \ }).reduce(function(acc, val){\n    return acc.concat(val);\n  }, []).sort(function(a,\
    \ b){\n    if(a[0] > b[0]){\n      return 1;\n    }else if(a[0] < b[0]){\n   \
    \   return -1;\n    }else{\n      if(a[1] > b[1]){\n        return -1;\n     \
    \ }else if(a[1] < b[1]){\n        return 1;\n      }else{\n        return 0;\n\
    \      }\n    }\n  });\n}\n", "    let y = 0;\n    let res = []\n    lst.forEach(e\
    \ => {\n        let i = e.length - 1;\n        while (i >= 0){\n            if\
    \ (e[i] == x){\n                res.push([y, i])\n            }\n            i\
    \ -= 1;\n        }\n        y += 1;\n    })\n    res.sort( (a, b) => {\n     \
    \   if (a[0] > b[0]){\n            return 1;\n        } else if (a[0] < b[0]){\n\
    \            return -1;\n        } else {\n            if (a[1] > b[1]){\n   \
    \             return -1;\n            } else if (a[1] < b[1]){\n             \
    \   return 1;\n            } else {\n                return 0;\n            }\n\
    \        }\n    })\n    return res;\n}", "    var ret = [];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n   \
    \         if(lst[i][j] == x){\n                ret.push([i, j]);\n           \
    \ }\n        }\n    }\n    return ret;\n}", "    var r = [];\n    for(var i =\
    \ 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                r.push([i,j]);\n           \
    \ }\n        }\n    }\n    return r;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    var res = [], tmp\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                res.push([i,\
    \ j]);\n            }\n        }\n    }\n    for(var i = 0; i < res.length; i++){\n\
    \        for(var j = i; j < res.length; j++){\n            if(res[i][0] > res[j][0]){\n\
    \                tmp = res[i];\n                res[i] = res[j];\n           \
    \     res[j] = tmp;\n            }\n        }\n    }\n    for(var i = 0; i < res.length;\
    \ i++){\n        for(var j = i; j < res.length; j++){\n            if(res[i][0]\
    \ == res[j][0]){\n                if(res[i][1] < res[j][1]){\n               \
    \     tmp = res[i];\n                    res[i] = res[j];\n                  \
    \  res[j] = tmp;\n                }\n            }\n        }\n    }\n    return\
    \ res;\n}\n", "    let final = [];\n    for(let i = 0; i < lst.length; i++){\n\
    \        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j] ==\
    \ x){\n                final.push([i, j]);\n            }\n        }\n    }\n\
    \    return final;\n}", "    var newLst = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var row = lst[i];\n        for(var j = 0; j < row.length; j++){\n\
    \            if(row[j] == x){\n                newLst.push([i, j]);\n        \
    \    }\n        }\n    }\n    return newLst;\n}", "    var dct = {};\n    for(var\
    \ i=0; i<lst.length; i++){\n        for(var j=0; j<lst[i].length; j++){\n    \
    \        if(lst[i][j] == x){\n                dct[i] = j;\n            }\n   \
    \     }\n    }\n    var lst_arr = Object.keys(dct).map(function(key){\n      \
    \  return [key, dct[key]];\n    });\n    lst_arr.sort(function(a, b){\n      \
    \  if(a[0] != b[0]){\n            return a[0] - b[0];\n        }\n        else{\n\
    \            return b[1] - a[1];\n        }\n    });\n    return lst_arr;\n}\n",
  "  var result = [];\n  for(var i = 0; i < lst.length; i++){\n    for(var j = 0;\
    \ j < lst[i].length; j++){\n      if(lst[i][j] == x){\n        result.push([i,\
    \ j]);\n      }\n    }\n  }\n  return result;\n}", "    var result = [];\n   \
    \ for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                result.push([i, j]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "  var row=[]\n  for(var\
    \ i=0; i<lst.length; i++){\n    for(var j=0; j<lst[i].length; j++){\n      if(lst[i][j]===x){\n\
    \        row.push([i,j])\n      }\n    }\n  }\n  return row\n}", "    var rows\
    \ = lst.length;\n    var cols = lst[0].length;\n    var result = []\n    for (var\
    \ i = 0; i < rows; i++){\n        for (var j = 0; j < cols; j++){\n          \
    \  if (lst[i][j] == x){\n                result.push((i, j));\n            }\n\
    \        }\n    }\n    return result;\n}", "    return lst.map(function(row, row_idx){\n\
    \        return row.map(function(cell, col_idx){\n            if(cell == x){\n\
    \                return [row_idx, col_idx];\n            } else {\n          \
    \      return null;\n            }\n        }).filter(function(cell){\n      \
    \      return cell !== null;\n        });\n    }).reduce(function(acc, el){\n\
    \        return acc.concat(el);\n    }, []);\n}\n", "    let result = [];\n  \
    \  for(let i = 0; i < lst.length; i++){\n        for(let j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                result.push([i, j]);\n\
    \            }\n        }\n    }\n    let sortResult = result.sort((a, b) => {\n\
    \        if(a[0] == b[0]){\n            return b[1] - a[1];\n        }\n     \
    \   return a[0] - b[0];\n    });\n    return sortResult;\n}\n", "    if (lst.length\
    \ === 0) return [];\n    var result = [];\n    for (var i = 0; i < lst.length;\
    \ i++){\n        for (var j = 0; j < lst[i].length; j++){\n            if (lst[i][j]\
    \ === x){\n                result.push([i, j]);\n            }\n        }\n  \
    \  }\n    return result;\n}\n", "    // console.log(lst);\n    // console.log(x);\n\
    \    let rows = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       rows.push([i, j]);\n            }\n        }\n    }\n    rows.sort(function(a,\
    \ b){\n        if(a[0] < b[0]) return -1;\n        if(a[0] > b[0]) return 1;\n\
    \        if(a[1] > b[1]) return -1;\n        if(a[1] < b[1]) return 1;\n     \
    \   return 0;\n    });\n    return rows;\n}\n", "\tvar arr_res = [];\n\tfor(var\
    \ i = 0; i < lst.length; i++){\n\t\tfor(var j = 0; j < lst[i].length; j++){\n\t\
    \t\tif(lst[i][j] == x){\n\t\t\t\tarr_res.push([i, j]);\n\t\t\t}\n\t\t}\n\t}\n\t\
    return arr_res;\n}", "    if(lst.length == 0){\n        return [];\n    }\n  \
    \  else if(lst[0].length == 0){\n        return get_row(lst.slice(1), x);\n  \
    \  }\n    else if(lst[0][0] == x){\n        return [[0, 0]].concat(get_row(lst.slice(1),\
    \ x).map(function(coord){return [coord[0] + 1, coord[1]]}));\n    }\n    else{\n\
    \        return get_row(lst.slice(1), x).map(function(coord){return [coord[0]\
    \ + 1, coord[1]]}).concat(get_column(lst[0].slice(1), x).map(function(coord){return\
    \ [0, coord[1] + 1]}));\n    }\n}\n", "    var arr = [];\n    for(var i = 0; i\
    \ < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n     \
    \       if(lst[i][j] == x){\n                arr.push([i, j]);\n            }\n\
    \        }\n    }\n    return arr;\n}\n", "    let re = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        for(let j = 0; j < lst[i].length; j++){\n   \
    \         if(lst[i][j] == x){\n                re.push([i, j]);\n            }\n\
    \        }\n    }\n    for(let i = 0; i < re.length; i++){\n        for(let j\
    \ = i + 1; j < re.length; j++){\n            if(re[i][0] > re[j][0]){\n      \
    \          let temp = re[i];\n                re[i] = re[j];\n               \
    \ re[j] = temp;\n            }\n        }\n    }\n    for(let i = 0; i < re.length;\
    \ i++){\n        for(let j = i + 1; j < re.length; j++){\n            if(re[i][0]\
    \ == re[j][0]){\n                if(re[i][1] < re[j][1]){\n                  \
    \  let temp = re[i];\n                    re[i] = re[j];\n                   \
    \ re[j] = temp;\n                }\n            }\n        }\n    }\n    return\
    \ re;\n}\n\nlet lst = [[-8, -5, -1, 0, 3, 7, 8, 10, 11, 12, 15, 20],\n    [2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,", "    var x_coord = [];\n    for\
    \ (var row = 0; row < lst.length; row++){\n        var tmp = [];\n        for\
    \ (var col = 0; col < lst[row].length; col++){\n            if (lst[row][col]\
    \ == x){\n                tmp.push(col);\n            }\n        }\n        if\
    \ (tmp.length > 0){\n            var tmp_r = [row,tmp];\n            x_coord.push(tmp_r);\n\
    \        }\n    }\n    x_coord.sort(function(a,b){\n        if (a[0] < b[0]){\n\
    \            return -1;\n        }\n        if (a[0] > b[0]){\n            return\
    \ 1;\n        }\n        return 0;\n    });\n    for (var i = 0; i < x_coord.length;\
    \ i++){\n        x_coord[i][1].sort(function(a,b){\n            if (a > b){\n\
    \                return -1;\n            }\n            if (a < b){\n        \
    \        return 1;\n            }\n            return 0;\n        });\n    }\n\
    \    return x_coord;\n}", "    var res = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var row = lst[i];\n        for(var j = 0; j < row.length; j++){\n\
    \            if(row[j] == x){\n                res.push([i, j]);\n           \
    \ }\n        }\n    }\n    return res;\n}\n", "    var res = [];\n    var str\
    \ = \"\";\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j\
    \ < lst[i].length; j++){\n            if(lst[i][j] == x){\n                res.push([i,\
    \ j]);\n            }\n        }\n    }\n    for(var i = 0; i < res.length; i++){\n\
    \        if(i == res.length - 1){\n            str += \"(\" + res[i][0] + \",\
    \ \" + res[i][1] + \")\";\n        }\n        else{\n            str += \"(\"\
    \ + res[i][0] + \", \" + res[i][1] + \"), \";\n        }\n    }\n    return str;\n\
    }\nvar lst = [[1, 2, 3], [2, 4, 5], [3, 4, 5, 7]];", "    var ret = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        var row = lst[i];\n        var col = [];\n\
    \        for(var j = 0; j < row.length; j++){\n            if(row[j] == x){\n\
    \                col.push(j);\n            }\n        }\n        if(col.length\
    \ > 0){\n            col.reverse();\n            for(var j = 0; j < col.length;\
    \ j++){\n                ret.push([i, col[j]]);\n            }\n        }\n  \
    \  }\n    return ret;\n}\n", "    var res = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                res.push([i, j]);\n            }\n        }\n    }\n\
    \    return res;\n}\n", "    var rows = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var row = [];\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                row.push(j);\n            }\n\
    \        }\n        if(row.length > 0){\n            rows.push([i, row]);\n  \
    \      }\n    }\n    return rows;\n}\n", "    //1\n    // return [[y, lst[y].indexOf(x)]\
    \ for each(y in range(lst.length)) if x in lst[y]].sort()\n    //2\n    return\
    \ [[y, lst[y].indexOf(x)] for each(y in range(lst.length)) if x in lst[y]].sort((a,\
    \ b) => (a[0] - b[0]) || (b[1] - a[1]))\n}\n", "    // your code here\n    let\
    \ my_list = [];\n    let my_set = new Set(lst);\n    let array = [...my_set];\n\
    \    //console.log(array);\n    array.forEach(function(element){\n        let\
    \ row = lst.indexOf(element);\n        //console.log(row);\n        let columns\
    \ = lst.lastIndexOf(element);\n        //console.log(columns);\n        if(row\
    \ == columns){\n            my_list.push(row);\n        }\n        else{\n   \
    \         my_list.push(row, columns);\n        }\n    });\n    let my_results\
    \ = new Set(my_list);\n    let my_final_results = [...my_results];\n    return\
    \ my_final_results;\n}", "  var result = [];\n  for(var i = 0; i < lst.length;\
    \ i++){\n    var current_list = lst[i];\n    for(var j = 0; j < current_list.length;\
    \ j++){\n      if(current_list[j] == x){\n        result.push([i, j]);\n     \
    \ }\n    }\n  }\n  return result;\n}", "    return lst.filter(row => row.includes(x)).map(row\
    \ => row.indexOf(x));\n}\n", "    var result = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                result.push([i, j]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    let result = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                result.push([i, j]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "  let result = [];\n  for(let i=0; i<lst.length;\
    \ i++){\n    for(let j=0; j<lst[i].length; j++){\n      if(lst[i][j]===x){\n \
    \       result.push([i,j]);\n      }\n    }\n  }\n  return result;\n}", "    var\
    \ result = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j =\
    \ 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n             \
    \   result.push([i, j]);\n            }\n        }\n    }\n    return result;\n\
    }", "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       res.push([i, j]);\n            }\n        }\n    }\n    return res;\n\
    }\n", "  var coordinates = [];\n  var sorting_the_rows = [];\n  var sorting_the_columns\
    \ = [];\n  for(var i = 0; i < lst.length; i++){\n    for(var j = 0; j < lst[i].length;\
    \ j++){\n      if(lst[i][j] == x){\n        coordinates.push([i, j]);\n      }\n\
    \    }\n  }\n  for(var i = 0; i < coordinates.length; i++){\n    sorting_the_rows.push(coordinates[i][0]);\n\
    \  }\n  for(var i = 0; i < coordinates.length; i++){\n    sorting_the_columns.push(coordinates[i][1]);\n\
    \  }\n  sorting_the_rows.sort(function(a, b){return a - b});\n  sorting_the_columns.sort(function(a,\
    \ b){return b - a});\n  console.log(sorting_the_rows);\n  console.log(sorting_the_columns);\n\
    \  var result = [];\n  for(var i = 0; i < sorting_the_rows.length; i++){\n   \
    \ result.push([sorting_the_rows[i], sorting_the_columns[i]]);\n  }\n  return result;\n\
    }", "    for(var i = 0; i < lst.length; i++){\n        if(lst[i].indexOf(x) !=\
    \ -1){\n            return i;\n        }\n    }\n}", "    var row = [];\n    var\
    \ result = [];\n    lst.forEach(function(element, index) {\n        if (element.indexOf(x)\
    \ != -1) {\n            row.push(index);\n        }\n    });\n    row.forEach(function(r)\
    \ {\n        lst[r].forEach(function(elem, ind){\n            if (elem == x) {\n\
    \                result.push([r, ind]);\n            }\n        });\n    });\n\
    \    return result;\n}\n", "    var result = []\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                result.push([i, j])\n            }\n        }\n    }\n\
    \    return result\n}\n", "\tlet output = [];\n\tlet rowCount = 0;\n\tfor(let\
    \ i = 0; i < lst.length; i++){\n\t\tfor(let j = 0; j < lst[i].length; j++){\n\t\
    \t\tif(lst[i][j] === x){\n\t\t\t\toutput.push([rowCount, j]);\n\t\t\t}\n\t\t}\n\
    \t\trowCount++;\n\t}\n\treturn output;\n}\n", "  var x_row = [];\n  var row =\
    \ 0;\n  var col = 0;\n  var main_row = 0;\n  var main_col = 0;\n  var col_tmp\
    \ = 0;\n  var row_tmp = 0;\n  var num_list = []\n  for(var i = 0; i < lst.length;\
    \ i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n\
    \        x_row.push(row);\n        x_row.push(col);\n        row = row + 1;\n\
    \        col = 0;\n      }\n      else{\n        col = col + 1;\n      }\n   \
    \ }\n  }\n  for(var i = 0; i < x_row.length; i = i + 2){\n    for(var j = i; j\
    \ < x_row.length; j = j + 2){\n      if(x_row[i] < x_row[j]){\n        row_tmp\
    \ = x_row[i];\n        x_row[i] = x_row[j];\n        x_row[j] = row_tmp;\n   \
    \     col_tmp = x_row[i + 1];\n        x_row[i + 1] = x_row[j + 1];\n        x_row[j\
    \ + 1] = col_tmp;\n      }\n    }\n  }\n  row = 0;\n  col = 0;\n  for(var i =\
    \ 0; i < x_row.length; i = i + 2){\n    if(x_row[i] != row){\n      row = x_row[i];\n\
    \      col = 0;\n    }\n    for(var j = i; j < x_row.length; j = j + 2){\n   \
    \   if(x_row[i] == x_row[j] && x_row[i + 1] > x_row[j + 1]){\n        row_tmp\
    \ = x_row[i];\n        x_row[i] = x_row[j];\n        x_row[j] = row_tmp;\n   \
    \     col_tmp = x", "    return lst.map(function(x, i){\n        return [(x.filter(function(y){return\
    \ y == x}).length), i]\n    }).filter(function(x){return x[0] != 0})\n}", "  \
    \  var i, j,\n        temp=[],\n        res=[];\n    for(i=0; i<lst.length; i++){\n\
    \        for(j=0; j<lst[i].length; j++){\n            if(lst[i][j]===x){\n   \
    \             temp.push([i,j]);\n            }\n        }\n    }\n    temp.sort(function(a,b){\n\
    \        if(a[0]>b[0]){\n            return 1;\n        }\n        else if(a[0]<b[0]){\n\
    \            return -1;\n        }\n        else{\n            if(a[1]>b[1]){\n\
    \                return -1;\n            }\n            else if(a[1]<b[1]){\n\
    \                return 1;\n            }\n            else{\n               \
    \ return 0;\n            }\n        }\n    });\n    for(i=0; i<temp.length; i++){\n\
    \        res.push([temp[i][0], temp[i][1]]);\n    }\n    return res;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       result.push([i, j]);\n            }\n        }\n    }\n    //result.sort(function(a,\
    \ b){return a[0] - b[0]});\n    //result.sort(function(a, b){return b[1] - a[1]});\n\
    \    return result;\n}\n", "    let res = [];\n    for(let i=0; i<lst.length;\
    \ i++){\n        let j = lst[i].indexOf(x);\n        if(j != -1){\n          \
    \  res.push([i, j]);\n        }\n    }\n    return res;\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        var sub_lst = lst[i];\n\
    \        for(var j = 0; j < sub_lst.length; j++){\n            if(sub_lst[j] ==\
    \ x){\n                result.push([i, j]);\n            }\n        }\n    }\n\
    \    //sort the list by row\n    result.sort(function(a, b){\n        return a[0]\
    \ - b[0];\n    });\n    //sort the list by col for each row\n    for(var i = 0;\
    \ i < result.length; i++){\n        var row = result[i][0];\n        var col =\
    \ result[i][1];\n        if(row != result[i + 1][0]){\n            continue;\n\
    \        }\n        while(i < result.length - 1 && row == result[i + 1][0]){\n\
    \            var next_col = result[i + 1][1];\n            if(col < next_col){\n\
    \                var tmp = result[i];\n                result[i] = result[i +\
    \ 1];\n                result[i + 1] = tmp;\n            }\n            i++;\n\
    \        }\n    }\n    return result;\n}", "\tfor(var i = 0; i < lst.length; i++){\n\
    \t\tvar row = lst[i];\n\t\tfor(var j = 0; j < row.length; j++){\n\t\t\tif(x ==\
    \ row[j]){\n\t\t\t\treturn [i,j];\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n}\n",
  "    var arr = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j\
    \ = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n           \
    \     arr.push({x: i, y: j});\n            }\n        }\n    }\n    return arr;\n\
    }", "    var xs = [];\n    for (var i = 0; i < lst.length; i++){\n        for\
    \ (var j = 0; j < lst[i].length; j++){\n            if (lst[i][j] == x){\n   \
    \             xs.push([i, j]);\n            }\n        }\n    }\n    return xs;\n\
    }\n", "    var out = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       out.push([i, j]);\n            }\n        }\n    }\n    out.sort(function(a,\
    \ b){\n        if(a[0] < b[0]){\n            return -1;\n        }\n        if(a[0]\
    \ > b[0]){\n            return 1;\n        }\n        if(a[1] > b[1]){\n     \
    \       return -1;\n        }\n        if(a[1] < b[1]){\n            return 1;\n\
    \        }\n        return 0;\n    });\n    return out;\n}\n", "    let result\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                result.push([i,\
    \ j]);\n            }\n        }\n    }\n    return result;\n}\n", "    if (lst.length\
    \ === 0){\n        return [];\n    }\n    var count = 0;\n    var out = [];\n\
    \    for (var i = 0; i < lst.length; i++){\n        for (var j = 0; j < lst[i].length;\
    \ j++){\n            if (lst[i][j] === x){\n                out.push([i, j]);\n\
    \            }\n        }\n    }\n    return out;\n}\n", "    let res = [];\n\
    \    let r = lst.length;\n    for(let i = 0; i < r; i++){\n        let y = lst[i].indexOf(x);\n\
    \        if(y != -1){\n            res.push([i, y]);\n        }\n    }\n    return\
    \ res;\n}", "    let result = [];\n    lst.forEach((row, row_index) =>{\n    \
    \    row.forEach((column, column_index) =>{\n            if(column === x){\n \
    \               result.push([row_index, column_index]);\n            }\n     \
    \   });\n    });\n    return result;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j]);\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    var row_lst = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                row_lst.push([i, j]);\n\
    \            }\n        }\n    }\n    return row_lst;\n}", "    var lst = [[1,\
    \ 2, 5, 4], [3, 2, 4, 1], [1, 4, 2, 3]];\n    var x = 4;\n    var output = [];\n\
    \    for (i = 0; i < lst.length; i++){\n        for (j = 0; j < lst[i].length;\
    \ j++){\n            if (lst[i][j] == x){\n                output.push([i, j]);\n\
    \            }\n        }\n    }\n    output.sort(function(a, b){\n        return\
    \ a[0] - b[0];\n    });\n    return output;\n}", "  var ans = [];\n  for(var i\
    \ = 0; i < lst.length; i++){\n    for(var j = 0; j < lst[i].length; j++){\n  \
    \    if(lst[i][j] == x){\n        ans.push([i, j]);\n      }\n    }\n  }\n  return\
    \ ans;\n}", "    var found = [];\n    for (var i = 0; i < lst.length; i++){\n\
    \        for (var j = 0; j < lst[i].length; j++){\n            if (lst[i][j] ==\
    \ x){\n                found.push([i, j]);\n            }\n        }\n    }\n\
    \    return found;\n}", "    return lst.filter(function(row, i){\n        return\
    \ row.includes(x);\n    }).map(function(row, i){\n        return [i, row.indexOf(x)];\n\
    \    });\n}", "    var n = 0;\n    var res = [];\n    lst.forEach(function(list){\n\
    \        list.forEach(function(item){\n            if (item == x){\n         \
    \       res.push([n, list.indexOf(item)]);\n            }\n        });\n     \
    \   n++;\n    });\n    return res;\n}", "    var res = [];\n    var indexes =\
    \ lst.map(function(e,i){\n        return e.indexOf(x);\n    }).filter(function(e){\n\
    \        return e > -1;\n    }).map(function(e,i){\n        return [i,e];\n  \
    \  });\n    return indexes;\n}\nvar test1 = [[1,2,3], [5,5,5], [2,3,3,3], [5,5,5,5,5],\
    \ [1,2,3,3,3,3]];", "    let result = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                result.push([i, j]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var tpl = [];\n    var row = 0;\n    lst.forEach(function(el){\n\
    \        if(el.indexOf(x) != -1){\n            tpl.push([row, el.indexOf(x)]);\n\
    \        }\n        row++;\n    });\n    return tpl;\n}\n", "    var coordinates\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                coordinates.push([i,\
    \ j]);\n            }\n        }\n    }\n    coordinates.sort(function(a, b){\n\
    \        if(a[0] < b[0]){\n            return -1;\n        }\n        if(a[0]\
    \ > b[0]){\n            return 1;\n        }\n        return 0;\n    });\n   \
    \ coordinates.sort(function(a, b){\n        if(a[1] > b[1]){\n            return\
    \ -1;\n        }\n        if(a[1] < b[1]){\n            return 1;\n        }\n\
    \        return 0;\n    });\n    return coordinates;\n}\n", "  var result = [];\n\
    \  var list_of_tuples = [];\n  for (var i = 0; i < lst.length; i++){\n    for\
    \ (var j = 0; j < lst[i].length; j++){\n      if (lst[i][j] == x){\n        var\
    \ tuple = [i, j];\n        list_of_tuples.push(tuple);\n      }\n    }\n  }\n\
    \  var new_list = list_of_tuples.sort(function(a, b){\n    return a[0] - b[0];\n\
    \  });\n  var sorted_list = new_list.sort(function(a, b){\n    return b[1] - a[1];\n\
    \  });\n  return sorted_list;\n}\n", "    //counters\n    var countRow = 0;\n\
    \    var countCol = 0;\n    var countIndex = 0;\n    var tempIndex = 0;\n    var\
    \ countX = 0;\n    var indexRow = 0;\n    var indexCol = 0;\n    var newLength\
    \ = 0;\n    var newRow = 0;\n    var newCol = 0;\n    var index = 0;\n    var\
    \ index2 = 0;\n    var countX = 0;\n    var tupleArray = [];\n    var tempRow\
    \ = 0;\n    var tempCol = 0;\n    var sortArray = [];\n    //iterate through row\n\
    \    for(var i = 0; i < lst.length; i++){\n        //iterate through col\n   \
    \     for(var j = 0; j < lst[i].length; j++){\n            //check if element\
    \ is equal to x\n            if(lst[i][j] == x){\n                countX++;\n\
    \                //indexRow = i;\n                //indexCol = j;\n          \
    \      indexRow = i;\n                indexCol = j;\n                var tuple\
    \ = [];\n                tuple.push(indexRow);\n                tuple.push(indexCol);\n\
    \                tupleArray.push(tuple);\n            }\n        }\n    }\n  \
    \  //sort indexes of x\n    // if(tupleArray.length != 0){\n    //     for(var\
    \ m = 0; m < tupleArray.length; m++){\n    //         for(var n = 0; n < tupleArray.length;\
    \ n++){\n    //             if(tupleArray[m][0] > tupleArray[n][0]){\n    // \
    \                tempRow = tupleArray[m][0];\n    //                 tempCol =\
    \ tupleArray[m][1];\n    //                 tupleArray[m][0] = tupleArray[n][0];\n\
    \    //                 tupleArray[m][1] = tupleArray[n][1];\n    //         \
    \        tupleArray[n][0] = tempRow;\n    //                 tupleArray[n][1]\
    \ = tempCol;\n    //             }\n    //         }\n    //     }\n    // }\n\
    \    // var sortArray = [];\n    // if(tupleArray.length", "    //Get a row of\
    \ nested lists of x coordinates\n    var row_x = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                row_x.push([i, j]);\n            }\n        }\n    }\n\
    \    //Sort rows by rows first then sort rows by columns\n    row_x.sort(function(a,\
    \ b){\n        if(a[0] === b[0]){\n            return b[1] - a[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    return row_x;\n}", "    var result\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] == x){\n                result.push([i,\
    \ j]);\n            }\n        }\n    }\n    return result;\n}\n", "    let res\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        let row = lst[i];\n\
    \        for(let j = 0; j < row.length; j++){\n            if(row[j] == x){\n\
    \                res.push([i, j]);\n            }\n        }\n    }\n    return\
    \ res;\n}", "    let res = [];\n    for(let i = 0; i < lst.length; i++){\n   \
    \     for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                res.push([i, j]);\n            }\n        }\n    }\n    res.sort(function(a,\
    \ b){\n        if(a[0] > b[0]){\n            return 1;\n        }\n        else\
    \ if(a[0] < b[0]){\n            return -1;\n        }\n        else{\n       \
    \     if(a[1] > b[1]){\n                return -1;\n            }\n          \
    \  else if(a[1] < b[1]){\n                return 1;\n            }\n         \
    \   else{\n                return 0;\n            }\n        }\n    });\n    return\
    \ res;\n}", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] ==\
    \ x){\n                result.push([i, j]);\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    var arr = [];\n    var counter = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                arr[counter] = [i,j];\n    \
    \            counter++;\n            }\n        }\n    }\n    return arr;\n}",
  "    var output = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       output.push([i, j]);\n            }\n        }\n    }\n    return output;\n\
    }\n", "    //your code here\n    let row = 0;\n    let rowArray = [];\n    let\
    \ result = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let j =\
    \ 0; j < lst[i].length; j++){\n            if(lst[i][j] === x){\n            \
    \    rowArray.push([lst[i][j], row, j]);\n            }\n        }\n        row++;\n\
    \    }\n    rowArray.sort(function(a, b){\n        if(a[1] === b[1]){\n      \
    \      return b[2] - a[2];\n        } else {\n            return a[1] - b[1];\n\
    \        }\n    });\n    for(let i = 0; i < rowArray.length; i++){\n        result.push([rowArray[i][1],\
    \ rowArray[i][2]]);\n    }\n    return result;\n}\n", "    var results = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                results.push([i, j]);\n\
    \            }\n        }\n    }\n    return results;\n}", "    var arr = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length;\
    \ j++){\n            if(lst[i][j] == x){\n                arr.push([i,j]);\n \
    \           }\n        }\n    }\n    arr.sort(sort_x_y);\n    return arr;\n}\n",
  "  //your code here\n  var arr = [];\n  for(var i = 0; i < lst.length; i++){\n \
    \   for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n     \
    \   arr.push([i, j]);\n      }\n    }\n  }\n  arr.sort(function(a, b){\n    if(a[0]\
    \ > b[0]){\n      return 1;\n    }else if(a[0] < b[0]){\n      return -1;\n  \
    \  }else{\n      if(a[1] > b[1]){\n        return -1;\n      }else if(a[1] < b[1]){\n\
    \        return 1;\n      }else{\n        return 0;\n      }\n    }\n  });\n \
    \ return arr;\n}", "    var c = [];\n    var q = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                c.push([i,j]);\n            }\n        }\n    }\n  \
    \  return c;\n}", "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        var sub = lst[i];\n        for(var j = 0; j < sub.length; j++){\n   \
    \         if(sub[j] == x){\n                res.push([i, j]);\n            }\n\
    \        }\n    }\n    return res;\n}\n", "    var out = [];\n    for(var i =\
    \ 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                out.push([i, j]);\n        \
    \    }\n        }\n    }\n    return out;\n}", "    let result = []\n    for(let\
    \ i = 0; i < lst.length; i++){\n        for(let j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                result.push([i, j])\n      \
    \      }\n        }\n    }\n    return result.sort((a, b) => {\n        if(a[0]\
    \ < b[0]) return -1\n        if(a[0] > b[0]) return 1\n        if(a[1] > b[1])\
    \ return -1\n        if(a[1] < b[1]) return 1\n        return 0\n    })\n}\n",
  "    if(Array.isArray(lst[0])){\n        let arr = []\n        lst.forEach((element,\
    \ index) => {\n            element.forEach((element2, index2) => {\n         \
    \       if(element2 === x){\n                    arr.push([index, index2])\n \
    \               }\n            });\n        });\n        return arr\n    }else{\n\
    \        let arr = []\n        lst.forEach((element, index) => {\n           \
    \ if(element === x){\n                arr.push([index, 0])\n            }\n  \
    \      });\n        return arr\n    }\n}", "    var res = [];\n    var num = 0;\n\
    \    lst.forEach(function(item){\n        var len = item.length;\n        for(var\
    \ i = 0; i < len; i++){\n            if(item[i] == x){\n                res.push([num,\
    \ i]);\n            }\n        }\n        num++;\n    });\n    return res;\n}\n",
  "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j\
    \ = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n           \
    \     res.push([i, j]);\n            }\n        }\n    }\n    return res;\n}",
  "    var res = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var j\
    \ = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n           \
    \     res.push([i, j]);\n            }\n        }\n    }\n    return res;\n}",
  "    let indices = [];\n    lst.forEach((row, y) => {\n        let col = row.indexOf(x);\n\
    \        if (col >= 0) {\n            indices.push([y, col]);\n        }\n   \
    \ });\n    return indices;\n}", "    var res = [];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                res.push([i, j]);\n            }\n        }\n    }\n\
    \    return res;\n}\n", "    let coord = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                coord.push([i, j]);\n            }\n        }\n    }\n\
    \    return coord;\n}\n", "  var output = []\n  for(var i = 0; i < lst.length;\
    \ i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n\
    \        output.push([i, j])\n      }\n    }\n  }\n  return output\n}\n", "  \
    \  // create empty row list\n    var row_lst = [];\n    // loop through list\n\
    \    for (var i = 0; i < lst.length; i++){\n        // create empty col list\n\
    \        var col_lst = [];\n        // loop through each nested list\n       \
    \ for (var j = 0; j < lst[i].length; j++){\n            // check if x matches\
    \ with current nested list\n            if (lst[i][j] == x){\n               \
    \ // if true, append column to col list\n                col_lst.push(j);\n  \
    \          }\n        }\n        // sort column list in descending order\n   \
    \     col_lst.sort(function(a, b){return b - a});\n        // check if col list\
    \ is not empty\n        if (col_lst.length > 0){\n            // if true, append\
    \ row number and column number to row list\n            for (var k = 0; k < col_lst.length;\
    \ k++){\n                row_lst.push([i, col_lst[k]]);\n            }\n     \
    \   }\n    }\n    // sort row list by first element in each nested list\n    row_lst.sort(function(a,\
    \ b){return a[0] - b[0]});\n    // return row list\n    return row_lst;\n}\n",
  "    var row = 0;\n    var indexes = [];\n    for(var i=0; i<lst.length; i++){\n\
    \        for(var j=0; j<lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                indexes.push(row + \",\" + j);\n            }\n        }\n  \
    \      row += 1;\n    }\n    return indexes;\n}", "    // helper function that\
    \ gets the row of an index\n    return Math.floor(x / lst[0].length);\n}", " \
    \   for(let i = 0; i < lst.length; i++){\n        let lst2 = lst[i];\n       \
    \ for(let j = 0; j < lst2.length; j++){\n            if(lst2[j] == x){\n     \
    \           lst2[j] = [i, j];\n            }\n        }\n    }\n    return lst;\n\
    }", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n        for(var\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n         \
    \       result.push([i, j]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    var answer = [];\n    for(var i = 0; i < lst.length; i++){\n      \
    \  for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                answer.push(i);\n            }\n        }\n    }\n    return\
    \ answer;\n}", "    let res = [];\n    for(let i = 0; i < lst.length; i++){\n\
    \        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j] ==\
    \ x){\n                res.push([i, j]);\n            }\n        }\n    }\n  \
    \  return res;\n}", "    return lst.map(function(value, index){\n        return\
    \ value.map(function(value, index){\n            if(value == x){\n           \
    \     return index\n            }\n        })\n    })\n}", "    let i = 0;\n \
    \   while (i < lst.length){\n        if (lst[i].includes(x)){\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    return -1;\n}\n", "    var result=[];\n\
    \    for(var i=0; i<lst.length; i++){\n        var row = [];\n        for(var\
    \ j=0; j<lst[i].length; j++){\n            if(lst[i][j]===x){\n              \
    \  row.push(j);\n            }\n        }\n        if(row.length>0){\n       \
    \     row.sort(function(a,b){return b-a});\n            for(var k=0; k<row.length;\
    \ k++){\n                result.push([i, row[k]]);\n            }\n        }\n\
    \    }\n    return result;\n}", "  var result = []\n  for(var i = 0; i < lst.length;\
    \ i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n\
    \        result.push([i, j])\n      }\n    }\n  }\n  return result\n}", "  var\
    \ rows = [];\n  var y = 0;\n  var row = [];\n  var coordinates = [];\n  for(var\
    \ i = 0; i < lst.length; i++){\n    row = [];\n    for(var j = 0; j < lst[i].length;\
    \ j++){\n      if(lst[i][j] == x){\n        row.push(j);\n      }\n    }\n   \
    \ if(row.length > 0){\n      rows.push([i, row]);\n    }\n  }\n  return rows;\n\
    }\n", "  let result = [];\n  let i = 0;\n  let counter = 0;\n  let arr = [];\n\
    \  while(i < lst.length){\n    arr = lst[i];\n    counter = 0;\n    let j = 0;\n\
    \    while(j < arr.length){\n      if(arr[j] === x){\n        result.push([i,\
    \ counter]);\n      }\n      counter++;\n      j++;\n    }\n    i++;\n  }\n  return\
    \ result;\n}\n", "    return lst.reduce(function(acc, curr, index){\n        if(curr.indexOf(x)\
    \ >= 0){\n            acc.push(index);\n        }\n        return acc;\n    },\
    \ []);\n}\n", "    var ret = [];\n    for(var i = 0; i < lst.length; i++){\n \
    \       for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] == x){\n\
    \                ret.push([i, j]);\n            }\n        }\n    }\n    return\
    \ ret;\n}", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        var row = lst[i];\n        for(var j = 0; j < row.length; j++){\n   \
    \         if(row[j] == x){\n                result.push([i, j]);\n           \
    \ }\n        }\n    }\n    return result;\n}\n", "    let row = 0,\n        coord\
    \ = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let j = 0; j <\
    \ lst[i].length; j++){\n            if(lst[i][j] === x){\n                coord.push([row,\
    \ j]);\n            }\n        }\n        row++;\n    }\n    return coord;\n}\n",
  "    var result = [];\n    var row = 0;\n    lst.forEach(function(e){\n        e.forEach(function(e2,\
    \ col){\n            if(e2 === x){\n                result.push([row, col]);\n\
    \            }\n        });\n        row++;\n    });\n    return result;\n}",
  "    return lst.map(function(arr, i){\n        return arr.map(function(v, j){\n\
    \            if(v == x){\n                return [i, j];\n            }\n    \
    \    }).filter(function(n){\n            return n;\n        });\n    }).reduce(function(a,\
    \ b){\n        return a.concat(b);\n    }).sort(function(a, b){\n        if(a[0]\
    \ > b[0]){\n            return 1;\n        }else if(a[0] < b[0]){\n          \
    \  return -1;\n        }else{\n            if(a[1] > b[1]){\n                return\
    \ -1;\n            }else if(a[1] < b[1]){\n                return 1;\n       \
    \     }else{\n                return 0;\n            }\n        }\n    });\n}\n",
  "    var arr = [], out = [], i = 0, k = 0;\n    while(i < lst.length){\n       \
    \ if(lst[i].indexOf(x) != -1){\n            arr.push(lst[i].indexOf(x));\n   \
    \         out.push([i, arr[k]]);\n            k++;\n        }\n        i++;\n\
    \    }\n    for(var i = 0; i < out.length; i++){\n        for(var j = i; j < out.length;\
    \ j++){\n            if(out[i][0] > out[j][0]){\n                var t = out[i];\n\
    \                out[i] = out[j];\n                out[j] = t;\n            }\n\
    \        }\n    }\n    for(var i = 0; i < out.length; i++){\n        for(var j\
    \ = i; j < out.length; j++){\n            if(out[i][0] == out[j][0]){\n      \
    \          if(out[i][1] < out[j][1]){\n                    var t = out[i];\n \
    \                   out[i] = out[j];\n                    out[j] = t;\n      \
    \          }\n            }\n        }\n    }\n    return out;\n}", "  var n =\
    \ [];\n  for(var i = 0; i < lst.length; i++){\n    for(var j = 0; j < lst[i].length;\
    \ j++){\n      if(lst[i][j] == x){\n        n.push([i, j]);\n      }\n    }\n\
    \  }\n  return n;\n}\n", "    var rows = [];\n    var row = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                rows.push([i, j]);\n       \
    \     }\n        }\n    }\n    return rows;\n}\n", "    // your code here\n  \
    \  let answer = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let\
    \ j = 0; j < lst[i].length; j++){\n            if(lst[i][j] === x){\n        \
    \        answer.push([i, j]);\n            }\n        }\n    }\n    return answer;\n\
    }\n", "  var ret = [];\n  for(var i = 0; i < lst.length; i++){\n    for(var j\
    \ = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n        ret.push([i,\
    \ j]);\n      }\n    }\n  }\n  return ret;\n}", "    return lst.reduce(function(a,\
    \ b, i){\n        if(b.indexOf(x) !== -1){\n            a.push([i, b.indexOf(x)]);\n\
    \        }\n        return a;\n    }, []);\n}", "    var tuple = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                tuple.push([i, j]);\n      \
    \      }\n        }\n    }\n    return tuple;\n}", "    var xArr = [];\n    for(var\
    \ i = 0; i < lst.length; i++){\n        for(var j = 0; j < lst[i].length; j++){\n\
    \            if(lst[i][j] == x){\n                xArr.push([i,j]);\n        \
    \    }\n        }\n    }\n    return xArr;\n}", "    for(let i = 0; i < lst.length;\
    \ i++){\n        for(let j = 0; j < lst[i].length; j++){\n            if(lst[i][j]\
    \ == x){\n                console.log('(' + i + ',' + j + ')');\n            }\n\
    \        }\n    }\n}\nlet lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\nlet x = 4;\n\
    get_row(lst, x);", "    var result = [];\n    for(var i = 0; i < lst.length; i++){\n\
    \        for(var j = 0; j < lst[i].length; j++){\n            if(lst[i][j] ==\
    \ x){\n                result.push([i, j]);\n            }\n        }\n    }\n\
    \    return result;\n}\n", "  var result = [];\n  for(var i = 0; i < lst.length;\
    \ i++){\n    for(var j = 0; j < lst[i].length; j++){\n      if(lst[i][j] == x){\n\
    \        result.push([i, j]);\n      }\n    }\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    lst.forEach(function(e,i){\n        e.forEach(function(e,j){\n\
    \            if(e == x){\n                result.push([i,j]);\n            }\n\
    \        });\n    });\n    return result;\n}\nvar result = get_row([[1, 0, 1],\
    \ [1, 2, 0], [2, 2, 0]], 2);", "    var ret = [];\n    lst.forEach(function(row,\
    \ r) {\n        row.forEach(function(cell, c) {\n            if (cell === x) {\n\
    \                ret.push([r, c]);\n            }\n        });\n    });\n    ret.sort(function(a,\
    \ b) {\n        if (a[0] == b[0]) {\n            return b[1] - a[1];\n       \
    \ }\n        return a[0] - b[0];\n    });\n    return ret;\n}\n", "    //your\
    \ code here\n    // get the row\n    //     count the column\n    //         return\
    \ the column number in a tuple\n\n    let output = [];\n    let column = 0;\n\
    \    let row = 0;\n    for (let item of lst){\n        let count = 0;\n      \
    \  for (let num of item){\n            if (num === x){\n                output.push(\
    \ [row, count] );\n            }\n            count ++;\n        }\n        row\
    \ ++;\n    }\n    output.sort(function(a, b){\n        return a[0] - b[0];\n \
    \   });\n    for (let tuple of output){\n        tuple.sort(function(a, b){\n\
    \            return b[1] - a[1];\n        });\n    }\n    return output;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

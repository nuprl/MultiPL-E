name: HumanEval_111_histogram
language: js
prompt: "//Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n// of the letter with the most repetition and containing the corresponding\
  \ count.\n// If several letters have the same occurrence, return all of them.\n\
  // Example:\nfunction histogram(test){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = histogram;\n  assert.deepEqual(candidate(\"a b b a\"),{\"a\": 2, \"b\": 2});\n\
  \  assert.deepEqual(candidate(\"a b c a b\"),{\"a\": 2, \"b\": 2});\n  assert.deepEqual(candidate(\"\
  a b c d g\"),{\"a\": 1, \"b\": 1, \"c\": 1, \"d\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\
  r t g\"),{\"r\": 1, \"t\": 1, \"g\": 1});\n  assert.deepEqual(candidate(\"b b b\
  \ b a\"),{\"b\": 4});\n  assert.deepEqual(candidate(\"r t g\"),{\"r\": 1, \"t\"\
  : 1, \"g\": 1});\n  assert.deepEqual(candidate(\"\"),{});\n  assert.deepEqual(candidate(\"\
  a\"),{\"a\": 1});\n}\n\ntest();"
completions: ["    var hist = {};\n    test.split('').forEach(function(c){\n     \
    \   if (c in hist)\n            hist[c]++;\n        else\n            hist[c]\
    \ = 1;\n    });\n    return hist;\n}", "    const arr = test.split(\" \");\n \
    \   console.log(arr);\n    let newObj = {};\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(newObj[arr[i]] === undefined){\n            newObj[arr[i]]\
    \ = 1;\n        }else{\n            newObj[arr[i]] += 1;\n        }\n    }\n \
    \   console.log(newObj);\n    let max = 0;\n    let dict = {};\n    let winner\
    \ = [];\n    for(let key in newObj){\n        if(newObj[key] > max){\n       \
    \     max = newObj[key];\n            winner = [];\n            winner.push(key);\n\
    \        }else if(newObj[key] === max){\n            winner.push(key);\n     \
    \   }\n    }\n    for(let i = 0; i < winner.length; i++){\n        dict[winner[i]]\
    \ = max;\n    }\n    return dict;\n}", "    const count = {};\n    const arr =\
    \ test.split(\" \");\n    for(let i=0; i<arr.length; i++){\n        if(count[arr[i]]){\n\
    \            count[arr[i]] += 1;\n        } else {\n            count[arr[i]]\
    \ = 1;\n        }\n    }\n    const max = Math.max(...Object.values(count));\n\
    \    let maxList = [];\n    for(let key in count){\n        if(count[key] ===\
    \ max){\n            maxList.push(key);\n        }\n    }\n    const output =\
    \ {};\n    output[maxList.join(\",\")] = max;\n    return output;\n}", "  var\
    \ test = test.split(\" \");\n  var counts = {};\n  for (var i = 0; i < test.length;\
    \ i++) {\n    var num = test[i];\n    counts[num] = counts[num] ? counts[num]\
    \ + 1 : 1;\n  }\n  var max = -Infinity;\n  var result = [];\n  for (var key in\
    \ counts) {\n    if (counts[key] > max) {\n      max = counts[key];\n      result\
    \ = [key];\n    } else if (counts[key] === max) {\n      result.push(key);\n \
    \   }\n  }\n  console.log(counts);\n  console.log(result);\n  return (result);\n\
    }\nhistogram(\"a b c d a b a b a a\");", "    let letters = test.split(\" \").join(\"\
    \").split(\"\");\n    let count = 1;\n    let highestCount = 1;\n    let result\
    \ = {};\n    for(let i = 0; i < letters.length; i++){\n        if(letters[i] ==\
    \ letters[i+1]){\n            count++;\n        }\n        else{\n           \
    \ result[letters[i]] = count;\n            count = 1;\n        }\n    }\n    for(let\
    \ key in result){\n        if(result[key] > highestCount){\n            highestCount\
    \ = result[key];\n        }\n    }\n    let answer = [];\n    for(let key in result){\n\
    \        if(result[key] == highestCount){\n            answer.push(key);\n   \
    \     }\n    }\n    return answer;\n}", "    var dict = {};\n    for (var i =\
    \ 0; i < test.length; i++){\n        if(test[i] in dict){\n            dict[test[i]]\
    \ += 1;\n        }\n        else{\n            dict[test[i]] = 1;\n        }\n\
    \    }\n    var max = 0;\n    var keys = [];\n    for (var key in dict){\n   \
    \     if(dict[key] > max){\n            max = dict[key];\n            keys = [key];\n\
    \        }\n        else if(dict[key] == max){\n            keys.push(key);\n\
    \        }\n    }\n    return keys;\n}\n", "  var letterDict = {};\n  var letterArr\
    \ = test.split(' ');\n  var maxVal = 0;\n  var letterStr = '';\n  for (i=0; i<letterArr.length;\
    \ i++){\n    if(letterDict[letterArr[i]]){\n      letterDict[letterArr[i]] +=\
    \ 1;\n    } else {\n      letterDict[letterArr[i]] = 1;\n    }\n  }\n  for (key\
    \ in letterDict){\n    if (letterDict[key] >= maxVal){\n      maxVal = letterDict[key];\n\
    \      letterStr += ' ' + key;\n    }\n  }\n  letterStr = letterStr.trim();\n\
    \  letterDict = {};\n  letterDict[letterStr] = maxVal;\n  return letterDict;\n\
    }", "\tvar count = {};\n\tvar max = 0;\n\tvar result = [];\n\ttest.split('').forEach(function(i){\n\
    \t\tcount[i] = (count[i]||0) + 1;\n\t\tif(count[i] > max){\n\t\t\tmax = count[i];\n\
    \t\t}\n\t});\n\tfor(var i in count){\n\t\tif(count[i] === max){\n\t\t\tresult.push(i);\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "    var hist = {};\n    var max = 1;\n  \
    \  var letter = test[0];\n    for(var x=0; x<test.length; x++){\n        if(!hist[test[x]]){\n\
    \            hist[test[x]] = 1;\n        } else {\n            hist[test[x]] +=\
    \ 1;\n        }\n        if(hist[test[x]] > max){\n            max = hist[test[x]];\n\
    \            letter = test[x];\n        }\n    }\n    var letters = [];\n    for(var\
    \ y in hist){\n        if(hist[y] === max){\n            letters.push(y);\n  \
    \      }\n    }\n    var output = {};\n    for(var z=0; z<letters.length; z++){\n\
    \        output[letters[z]] = max;\n    }\n    return output;\n}", "    const\
    \ output = {};\n    test.split('').forEach(letter => {\n        if (letter in\
    \ output) {\n            output[letter]++;\n        } else {\n            output[letter]\
    \ = 1;\n        }\n    });\n    let max = 0;\n    for (const key in output) {\n\
    \        if (output[key] > max) {\n            max = output[key];\n        }\n\
    \    }\n    const final = {};\n    for (const key in output) {\n        if (output[key]\
    \ === max) {\n            final[key] = max;\n        }\n    }\n    return final;\n\
    }\n\nhistogram('aabbccccdd');//{c: 4, d: 2}\nhistogram('abbbbcdd');//{b: 4, c:\
    \ 1, d: 2}\nhistogram('aa');//{a: 2}", "    let letters = test.split(' ');\n \
    \   let result = {};\n    letters.forEach(char => {\n        if(!result[char]){\n\
    \            result[char] = 1;\n        } else {\n            result[char] = result[char]\
    \ + 1;\n        }\n    });\n    return result;\n}\n", "  var split=test.split('\
    \ ');\n  var obj={};\n  var max=0;\n  var keys=[];\n  for(var i=0;i<split.length;i++){\n\
    \    if(obj[split[i]]!==undefined){\n      obj[split[i]]++;\n    }else{\n    \
    \  obj[split[i]]=1;\n    }\n  }\n  for(var key in obj){\n    if(obj[key]>max){\n\
    \      max=obj[key];\n      keys=[];\n      keys.push(key);\n    }else if(obj[key]===max){\n\
    \      keys.push(key);\n    }\n  }\n  return keys;\n}", "    var letters = test.split(\"\
    \");\n    var counts = {};\n    for (var i = 0; i < letters.length; i++) {\n \
    \       var letter = letters[i];\n        if (letter in counts) {\n          \
    \  counts[letter] += 1;\n        } else {\n            counts[letter] = 1;\n \
    \       }\n    }\n    return counts;\n}\n\nvar test = \"aaaaccccdddddeeeeeee\"\
    ;\nhistogram(test);", "    let maxObj = {};\n    let arr = test.split(' ').sort();\n\
    \    let max = 1;\n    for(let i = 0; i < arr.length; i++){\n        if(arr[i]\
    \ === arr[i + 1]){\n            max++;\n        }else{\n            if(max > 1){\n\
    \                maxObj[arr[i]] = max;\n            }\n            max = 1;\n\
    \        }\n    }\n    return maxObj;\n}", "  var split = test.split(\" \");\n\
    \  var count = 1;\n  var currentMax = 0;\n  var maxLetters = [];\n  for(var i\
    \ = 0; i < split.length; i++){\n    if(split[i] === split[i + 1]){\n      count++;\n\
    \    } else {\n      if(count > currentMax){\n        currentMax = count;\n  \
    \      maxLetters = [split[i]];\n      } else if(count === currentMax){\n    \
    \    maxLetters.push(split[i]);\n      }\n      count = 1;\n    }\n  }\n  return\
    \ maxLetters.reduce(function(a,b){\n    return a + b;\n  }) + \": \" + currentMax;\n\
    }\n", "    let histo = {};\n    test.split(\"\").map(x => {\n        if (histo[x]){\n\
    \            histo[x] += 1;\n        }\n        else {\n            histo[x] =\
    \ 1;\n        }\n    });\n    return histo;\n}\n", "  var map = new Map();\n \
    \ var list = test.split(\" \");\n  for(var i = 0; i < list.length; i++){\n   \
    \ if(map.has(list[i])){\n      map.set(list[i], map.get(list[i]) + 1);\n    }\n\
    \    else{\n      map.set(list[i], 1);\n    }\n  }\n  var maxCount = 0;\n  var\
    \ result = [];\n  for(var key of map.keys()){\n    if(map.get(key) > maxCount){\n\
    \      maxCount = map.get(key);\n      result = [];\n      result.push(key);\n\
    \    }\n    else if(map.get(key) == maxCount){\n      result.push(key);\n    }\n\
    \  }\n  var map2 = new Map();\n  map2.set(maxCount, result);\n  return map2;\n\
    }", "  var result = {};\n  var arr = test.split(' ');\n  var number = 0;\n  var\
    \ letter = '';\n  var letterArray = [];\n  for(var i = 0; i < arr.length; i++){\n\
    \    if(result[arr[i]] === undefined){\n      result[arr[i]] = 1;\n    }else{\n\
    \      result[arr[i]] += 1;\n    }\n  }\n  for(var key in result){\n    if(result[key]\
    \ > number){\n      number = result[key];\n      letter = key;\n    }\n  }\n \
    \ for(var key in result){\n    if(result[key] === number){\n      letterArray.push(key);\n\
    \    }\n  }\n  console.log(letterArray);\n  return letterArray;\n}", "  var obj\
    \ = {};\n  var max = 0;\n  var maxKeys = [];\n  for (var i = 0; i < test.length;\
    \ i++) {\n    if (obj[test[i]]){\n      obj[test[i]]++\n    } else {\n      obj[test[i]]\
    \ = 1;\n    }\n  }\n  for (var x in obj) {\n    if (obj[x] > max) {\n      max\
    \ = obj[x];\n      maxKeys = [];\n      maxKeys.push(x);\n    } else if (obj[x]\
    \ === max) {\n      maxKeys.push(x);\n    }\n  }\n  console.log(maxKeys.join(''));\n\
    }\nhistogram('aabbbcc');\nhistogram('abc');\nhistogram('abcc');\nhistogram('aaabbbaa');\n\
    histogram('wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww",
  "    var myArr = test.split(\" \");\n    var myObj = {};\n    for(var i = 0; i <\
    \ myArr.length; i++){\n        if(myObj[myArr[i]]){\n            myObj[myArr[i]]++;\n\
    \        }\n        else{\n            myObj[myArr[i]] = 1;\n        }\n    }\n\
    \    var keys = Object.keys(myObj);\n    var max = 0;\n    var output = {};\n\
    \    for(var i = 0; i < keys.length; i++){\n        if(myObj[keys[i]] > max){\n\
    \            max = myObj[keys[i]];\n            output = {};\n            output[keys[i]]\
    \ = max;\n        }\n        else if(myObj[keys[i]] === max){\n            output[keys[i]]\
    \ = max;\n        }\n    }\n    return output;\n}", "  var spaceSplitArray = test.split(\"\
    \ \");\n  var wordCountObj = {};\n  var maxCount = 0;\n  var wordsWithMaxCount\
    \ = [];\n  for (var i = 0; i < spaceSplitArray.length; i++) {\n    if (wordCountObj[spaceSplitArray[i]]\
    \ === undefined) {\n      wordCountObj[spaceSplitArray[i]] = 1;\n    } else {\n\
    \      wordCountObj[spaceSplitArray[i]] += 1;\n    }\n    if (wordCountObj[spaceSplitArray[i]]\
    \ > maxCount) {\n      maxCount = wordCountObj[spaceSplitArray[i]];\n    }\n \
    \ }\n  for (var j in wordCountObj) {\n    if (wordCountObj[j] === maxCount) {\n\
    \      wordsWithMaxCount.push(j);\n    }\n  }\n  var result = {};\n  result[maxCount]\
    \ = wordsWithMaxCount;\n  return result;\n}", "    const testarr = test.split(\"\
    \ \")\n    let counted = testarr.reduce((allLetters, letter) => {\n        if\
    \ (letter in allLetters) {\n          allLetters[letter]++;\n        }\n     \
    \   else {\n          allLetters[letter] = 1;\n        }\n        return allLetters;\n\
    \      }, {});\n       let max = 0\n       let maxArr = []\n      for (let key\
    \ in counted){\n        if (counted[key] >= max){\n          max = counted[key]\n\
    \        }\n      }\n      for (let key in counted){\n        if (counted[key]\
    \ === max){\n          maxArr.push(key)\n        }\n      }\n      return maxArr.reduce((acc,curr)=>{\n\
    \        acc[curr] = max\n        return acc\n      },{})\n    }\n    console.log(histogram(\"\
    a b c d a b b a\"))\n    console.log(histogram(\"a a b c d e f f f g\"))\n   \
    \ console.log(histogram(\"a a b c d e f f f g a\"))\n    console.log(histogram(\"\
    a a b c d e f f f g a a\"))\n    console.log(histogram(\"a a b c d e f f f g a\
    \ a f\"))\n    console.log(histogram(\"a a b c d e f f f g a a f g\"))", "   \
    \ let res = {};\n    test.split('').forEach(el => res[el] = (res[el] || 0) + 1);\n\
    \    console.log(res);\n    let max = Math.max(...Object.values(res));\n    let\
    \ result = {};\n    for (let key in res) {\n        if (res[key] === max) {\n\
    \            result[key] = max;\n        }\n    }\n    return result;\n}\n", " \
    \   var count = {};\n    var maxCount = 0;\n    for (var i = 0; i < test.length;\
    \ i++) {\n        count[test[i]] = (count[test[i]] || 0) + 1;\n        if (count[test[i]]\
    \ > maxCount) {\n            maxCount = count[test[i]];\n        }\n    }\n  \
    \  var maxKeys = Object.keys(count).filter(function(k) { return count[k] === maxCount;\
    \ });\n    return {'letter': maxKeys, 'occurrence': maxCount};\n}\n", "    var\
    \ array = test.split(\"\");\n    var count = [];\n    var arr = {};\n    var result\
    \ = {};\n    array.forEach(function(x){\n        if (arr[x] === undefined){\n\
    \            arr[x] = 0;\n        }\n        arr[x] += 1;\n    });\n    count\
    \ = Object.values(arr);\n    result = {};\n    for (var key in arr){\n       \
    \ if (arr[key] === Math.max.apply(null, count)){\n            result[key] = arr[key];\n\
    \        }\n    }\n    return result;\n}\n", "    var obj = {};\n    test.split(\"\
    \").map(x => {\n        if (obj[x]) {\n            obj[x] = obj[x] + 1;\n    \
    \    } else {\n            obj[x] = 1;\n        }\n    });\n    console.log(obj);\n\
    \    var max = Math.max(...Object.values(obj));\n    return(Object.keys(obj).filter(x\
    \ => obj[x] === max));\n}\n", "    var result = [];\n    var res = {};\n    test\
    \ = test.split(\" \");\n    test.forEach(function(letter){\n        if(!res[letter]){\n\
    \            res[letter] = 0;\n        }\n        res[letter]++;\n    });\n  \
    \  var max = Object.keys(res).reduce(function(a, b){\n        return res[a] >\
    \ res[b] ? a : b;\n    });\n    for(var x in res){\n        if(res[x] === res[max]){\n\
    \            result.push(x);\n        }\n    }\n    var resultObj = {};\n    resultObj[result]\
    \ = res[max];\n    return resultObj;\n}\n", "    var count = {};\n    for (var\
    \ i = 0; i < test.length; i++) {\n        var char = test[i];\n        if (count[char])\
    \ {\n            count[char]++;\n        } else {\n            count[char] = 1;\n\
    \        }\n    }\n    return count;\n}\n", "    var hash = {};\n    var highest\
    \ = 0;\n    var result = [];\n    for(var i = 0; i < test.length; i++){\n    \
    \    if(hash[test[i]]){\n            hash[test[i]]++;\n        }\n        else{\n\
    \            hash[test[i]] = 1;\n        }\n        if(hash[test[i]] > highest){\n\
    \            highest = hash[test[i]];\n        }\n    }\n    for(var key in hash){\n\
    \        if(hash[key] === highest){\n            result.push(key);\n        }\n\
    \    }\n    return result;\n}", "    var count = {};\n    var c = 0;\n    var\
    \ m = 0;\n    var max = 0;\n    var k = 0;\n    var greatest = 0;\n    var maxLetter\
    \ = [];\n    var keyNames = [];\n    var values = [];\n    for (var i = 0; i <\
    \ test.length; i++) {\n        var l = test[i];\n        if (count[l] === undefined)\
    \ {\n            count[l] = 1;\n        } else {\n            count[l] = count[l]\
    \ + 1;\n        }\n    }\n    for (var key in count) {\n        var v = count[key];\n\
    \        values.push(v);\n        keyNames.push(key);\n    }\n    console.log(keyNames);\n\
    \    for (k; k < values.length; k++) {\n        if (values[k] > greatest) {\n\
    \            greatest = values[k];\n        }\n    }\n    for (var i = 0; i <\
    \ values.length; i++) {\n        if (values[i] === greatest) {\n            maxLetter.push(keyNames[i]);\n\
    \        }\n    }\n    console.log(maxLetter);\n    return {maxLetter: greatest};\n\
    }", "    var count = 1;\n    var num = 1;\n    var max = 0;\n    var letter =\
    \ '';\n    var result = {};\n    for(var i = 0; i < test.length; i++){\n     \
    \   for(var j = i + 1; j < test.length; j++){\n            if(test[i] === test[j]){\n\
    \                count++;\n            }\n        }\n        if(count > max){\n\
    \            max = count;\n            letter = test[i];\n        }\n        else\
    \ if(count === max){\n            num++;\n            letter += test[i];\n   \
    \     }\n        count = 1;\n    }\n    result[letter] = max;\n    return result;\n\
    }", "  let max = 0;\n  let maxChars = {};\n  for (let char of test){\n    if(!maxChars[char]){\n\
    \      maxChars[char] = 1;\n    }\n    else {\n      maxChars[char] += 1;\n  \
    \  }\n    if(maxChars[char] > max){\n      max = maxChars[char];\n    }\n  }\n\
    \  let result = [];\n  for (let char in maxChars){\n    if(maxChars[char] ===\
    \ max){\n      result.push(char);\n    }\n  }\n  return result;\n}", "    var\
    \ dict = {};\n    test.split(\"\").forEach(function(i){\n        dict[i] = dict[i]\
    \ + 1 || 1;\n    });\n    return dict;\n}", "  var result = {};\n  var arr = test.split(\"\
    \ \");\n  var max = 0;\n  var count = 0;\n  var ans = [];\n  var same = false;\n\
    \  for(var i = 0; i < arr.length; i++){\n    for(var j = 0; j < arr.length; j++){\n\
    \      if(arr[i] === arr[j]){\n        count++;\n      }\n    }\n    if(result[arr[i]]\
    \ === undefined){\n      result[arr[i]] = count;\n    }\n    if(count > max){\n\
    \      max = count;\n      same = false;\n      ans = [];\n      ans.push(arr[i]);\n\
    \    }\n    else if(count === max){\n      ans.push(arr[i]);\n      same = true;\n\
    \    }\n    count = 0;\n  }\n  if(same){\n    return ans;\n  }\n  else{\n    return\
    \ ans[0];\n  }\n}", "  var dict = {};\n  var arr = test.split(\" \");\n  var store\
    \ = [];\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] in dict){\n   \
    \   dict[arr[i]] += 1;\n    }else{\n      dict[arr[i]] = 1;\n    }\n  }\n  //\
    \ console.log(dict);\n  var big = 0;\n  for(var key in dict){\n    if(dict[key]\
    \ > big){\n      big = dict[key];\n    }\n  }\n  for(var key in dict){\n    if(dict[key]\
    \ === big){\n      store.push(key);\n    }\n  }\n  // console.log(store);\n  return\
    \ {big:store};\n}\n", "  var frequency = {};\n  for (var i = 0; i < test.length;\
    \ i++) {\n    var letter = test[i];\n    if (frequency[letter]) {\n      frequency[letter]++;\n\
    \    } else {\n      frequency[letter] = 1;\n    }\n  }\n  return frequency;\n\
    }\n", "    var count = {}\n    var most = 0\n    var mostoccur = []\n    for(i=0;\
    \ i<test.length; i++){\n        if(count[test[i]] === undefined){\n          \
    \  count[test[i]] = 1\n        }else{\n            count[test[i]]++\n        }\n\
    \        if(count[test[i]] > most){\n            most = count[test[i]]\n     \
    \   }\n    }\n    for(key in count){\n        if(count[key] === most){\n     \
    \       mostoccur.push(key)\n        }\n    }\n    var output = {}\n    output[mostoccur]\
    \ = most\n    return output\n}\nhistogram(\"abcabcabc\")\nhistogram(\"ab\")\n\
    histogram(\"abbbcc\")\nhistogram(\"abbbbbcccc\")\nhistogram(\"abbbbbbbccccc\"\
    )\nhistogram(\"abbbbbbbbccccccc\")\n", "  var obj = {};\n  var testArray = test.split(\"\
    \ \");\n  testArray.forEach(function(letter){\n    if(!obj[letter]){\n      obj[letter]\
    \ = 1;\n    } else {\n      obj[letter]++;\n    }\n  });\n  return obj;\n}\n",
  "  // your code here\n}\n", "  var count = {};\n  for (var i = 0; i < test.length;\
    \ i++) {\n    if (test[i] in count) {\n      count[test[i]] += 1;\n    } else\
    \ {\n      count[test[i]] = 1;\n    }\n  }\n  var max = 0;\n  var letter = '';\n\
    \  for (var key in count) {\n    if (count[key] > max) {\n      max = count[key];\n\
    \      letter = key;\n    }\n  }\n  for (var key in count) {\n    if (count[key]\
    \ === max) {\n      console.log(key);\n    }\n  }\n}\n\nhistogram('hello world');\
    \ // > {h: 1, e: 1, l: 3, o: 2, ' ': 1, w: 1, r: 1, d: 1}\n", "    var arr = test.split(\"\
    \ \")\n    var obj = {}\n    for(let i = 0; i < arr.length; i++){\n        if(obj[arr[i]]\
    \ === undefined){\n            obj[arr[i]] = 1\n        } else {\n           \
    \ obj[arr[i]]++\n        }\n    }\n    var max = 0\n    var arr2 = []\n    for(var\
    \ key in obj){\n        if(obj[key] > max){\n            max = obj[key]\n    \
    \        arr2 = []\n            arr2.push(key)\n        } else if(obj[key] ===\
    \ max){\n            arr2.push(key)\n        }\n    }\n    return `{\"${arr2.join(\"\
    \")}\": ${max}}`\n}\n", "    let dict = {};\n    let greatestKey = \"\";\n   \
    \ let greatestValue = 0;\n    let a = test.split(\" \");\n    for(let i = 0; i\
    \ < a.length; i++){\n        if(dict[a[i]]){\n            dict[a[i]] += 1;\n \
    \       }else{\n            dict[a[i]] = 1;\n        }\n    }\n    for(let value\
    \ in dict){\n        if(dict[value] > greatestValue){\n            greatestValue\
    \ = dict[value];\n            greatestKey = value;\n        }\n    }\n    let\
    \ result = {};\n    result[greatestKey] = greatestValue;\n    return result;\n\
    }\n", "  var result = {};\n  test.split('').forEach(function(i){\n    result[i]\
    \ = result[i] + 1 || 1;\n  });\n  return result;\n}\n", "  let map = new Map();\n\
    \  let max = 0;\n  let list = [];\n  for(let i = 0; i < test.length; i++){\n \
    \   if(map.has(test[i])){\n      map.set(test[i], map.get(test[i]) + 1);\n   \
    \ } else {\n      map.set(test[i], 1);\n    }\n    if(map.get(test[i]) > max){\n\
    \      max = map.get(test[i]);\n    }\n  }\n  map.forEach((val, key) => {\n  \
    \  if(val === max){\n      list.push(key);\n    }\n  });\n  return {[list]: max};\n\
    }\n", "  var unique = \"\";\n  var counter = {};\n  var count = 0;\n  var max\
    \ = 0;\n  var result = [];\n  var check = 0;\n  for(var i = 0; i < test.length;\
    \ i++){\n    if(unique.indexOf(test[i]) === -1){\n      unique += test[i];\n \
    \   }\n  }\n  for(var j = 0; j < unique.length; j++){\n    counter[unique[j]]\
    \ = 0;\n  }\n  for(var k = 0; k < test.length; k++){\n    counter[test[k]] +=\
    \ 1;\n  }\n  for(var l = 0; l < unique.length; l++){\n    if(counter[unique[l]]\
    \ > max){\n      max = counter[unique[l]];\n    }\n  }\n  for(var m = 0; m < unique.length;\
    \ m++){\n    if(counter[unique[m]] === max){\n      result.push(unique[m]);\n\
    \    }\n  }\n  return result;\n}\n\nvar result = histogram(\"banana\");", "  let\
    \ testArray = test.split(' ')\n  let occur = 0\n  let letHist = {}\n  for(let\
    \ i = 0; i < testArray.length; i++){\n    let count = 0\n    for(let j = 0; j\
    \ < testArray.length; j++){\n      if(testArray[i] === testArray[j]){\n      \
    \  count++\n      }\n    }\n    if(count >= occur){\n      letHist[testArray[i]]\
    \ = count\n      occur = count\n    }\n  }\n  let newArray = []\n  let final =\
    \ []\n  for(let i = 0; i < testArray.length; i++){\n    if(letHist[testArray[i]]\
    \ === occur){\n      newArray.push(testArray[i])\n    }\n  }\n  for(let i = 0;\
    \ i < newArray.length; i++){\n    final.push(newArray[i] + ': ' + letHist[newArray[i]])\n\
    \  }\n  return final\n}", "  let myHashMap = {};\n  let max = 0;\n  let set =\
    \ new Set();\n  for(let i = 0; i < test.length; i++){\n    if(!myHashMap[test[i]]){\n\
    \      myHashMap[test[i]] = 1;\n    }else{\n      myHashMap[test[i]] += 1;\n \
    \   }\n    if(myHashMap[test[i]] > max){\n      max = myHashMap[test[i]];\n  \
    \  }\n  }\n  let result = {};\n  for(let key in myHashMap){\n    if(myHashMap[key]\
    \ === max){\n      result[key] = max;\n    }\n  }\n  return result;\n}", "   \
    \ let dict = {};\n    for (let i=0; i<test.length; i++){\n        if (test[i]\
    \ in dict){\n            dict[test[i]] += 1;\n        }\n        else {\n    \
    \        dict[test[i]] = 1;\n        }\n    }\n    let max = Math.max(...Object.values(dict));\n\
    \    let maxArray = [];\n    for (let x of Object.keys(dict)){\n        if (dict[x]\
    \ == max){\n            maxArray.push(x);\n        }\n    }\n    return maxArray;\n\
    }\n\nlet test = 'abbbccccdddddeeeefffffffffggggggggg'", "    var result = {};\n\
    \    var maxCount = 0;\n    var maxKeys = [];\n    var charInTest;\n    var count\
    \ = 0;\n    // For each letter in the string, look in result[char]\n    for (var\
    \ i = 0; i < test.length; i++){\n        charInTest = test[i];\n        if (result[charInTest]\
    \ === undefined){\n            result[charInTest] = 1;\n        }\n        else\
    \ {\n            result[charInTest] += 1;\n        }\n    }\n    for (var key\
    \ in result){\n        if (result[key] === maxCount){\n            maxKeys.push(key);\n\
    \        }\n        else if (result[key] > maxCount){\n            maxCount =\
    \ result[key];\n            maxKeys = [];\n            maxKeys.push(key);\n  \
    \      }\n    }\n    return {'maxCount': maxCount, 'maxKeys': maxKeys};\n}\n",
  "var result = {};\n  var split = test.split(\" \");\n  var count = 0;\n    for(var\
    \ i = 0; i < split.length; i++){\n      for(var j = 0; j < split.length; j++){\n\
    \        if(split[i] == split[j]){\n          count++\n        }\n      }\n  \
    \    result[split[i]] = count;\n      count = 0;\n    }\n  return result;\n}",
  "var h = {};\n\ntest.split('').forEach(function(c){\n  if(h[c]){\n    h[c]++;\n\
    \  }else{\n    h[c] = 1;\n  }\n});\nvar max = 0;\nfor(var k in h){\n  if(h[k]\
    \ > max){\n    max = h[k];\n  }\n}\nvar result = {};\nfor(var k in h){\n  if(h[k]\
    \ === max){\n    result[k] = h[k];\n  }\n}\nreturn result;\n}", "  test = test.split(\"\
    \ \").join(\"\").split(\"\");\n  var histogram = {};\n  for (var i = 0; i < test.length;\
    \ i++) {\n    if(histogram[test[i]] === undefined){\n      histogram[test[i]]\
    \ = 1;\n    }\n    else{\n      histogram[test[i]]++;\n    }\n  }\n  return histogram;\n\
    }\n", "    let table = test.split(\" \");\n    let newTable = [];\n    let obj\
    \ = {};\n    for(let i = 0; i < table.length; i++){\n        if(newTable.indexOf(table[i])\
    \ === -1){\n            newTable.push(table[i]);\n        }\n    }\n    for(let\
    \ j = 0; j < newTable.length; j++){\n        obj[newTable[j]] = 0;\n    }\n  \
    \  for(let k = 0; k < table.length; k++){\n        obj[table[k]]++;\n    }\n \
    \   return obj;\n}", "    var result = {};\n    var max = 1;\n    for(var i =\
    \ 0; i < test.length; i++){\n        var current = test[i];\n        if(result[current]\
    \ == undefined){\n            result[current] = 1;\n        }else{\n         \
    \   result[current]++;\n        }\n        if(result[current] > max){\n      \
    \      max = result[current];\n        }\n    }\n    for(var i in result){\n \
    \       if(result[i] < max){\n            delete result[i];\n        }\n    }\n\
    \    return result;\n}", "  var count_keys = {};\n  var max_char = 0;\n  var max_char_name\
    \ = [];\n  test.split(\"\").forEach(function(char){\n    if (count_keys[char]){\n\
    \      count_keys[char] ++;\n    } else {\n      count_keys[char] = 1;\n    }\n\
    \    if (count_keys[char] > max_char){\n      max_char = count_keys[char];\n \
    \     max_char_name = [];\n      max_char_name.push(char);\n    } else if (count_keys[char]\
    \ === max_char){\n      max_char_name.push(char);\n    }\n  });\n  return {[max_char_name]\
    \ : max_char};\n}", "  let letters = test.split(' ');\n  let counter = 0;\n  let\
    \ max = 0;\n  let maxLetters = [];\n  for(let i = 0; i < letters.length; i++){\n\
    \    for(let j = 0; j < letters.length; j++){\n      if(letters[i] === letters[j]){\n\
    \        counter++;\n      }\n    }\n    if(counter > max){\n      max = counter;\n\
    \      maxLetters = [];\n      maxLetters.push(letters[i]);\n    }\n    else if(counter\
    \ === max){\n      maxLetters.push(letters[i]);\n    }\n    counter = 0;\n  }\n\
    \  return {[maxLetters.join('')]: max};\n}", "  var histo = {};\n  var max = 0;\n\
    \  var key = '';\n  for (var i = 0; i < test.length; i++) {\n    var letter =\
    \ test[i];\n    if (histo[letter]) {\n      histo[letter] += 1;\n    } else {\n\
    \      histo[letter] = 1;\n    }\n    if (histo[letter] > max) {\n      max =\
    \ histo[letter];\n      key = letter;\n    }\n  }\n  // all letters with the same\
    \ occurrence\n  var keys = [];\n  for (var i = 0; i < test.length; i++) {\n  \
    \  var letter = test[i];\n    if (histo[letter] === max) {\n      keys.push(letter);\n\
    \    }\n  }\n  // console.log(keys);\n  //\n  // return histo;\n  return {keys:\
    \ keys, count: max};\n}\n", "    let letters = new Map();\n    let maxCount =\
    \ 0;\n    let a = test.split(\" \");\n    for(let i = 0; i < a.length; i++){\n\
    \        let letter = a[i];\n        if(letters.has(letter)){\n            let\
    \ count = letters.get(letter);\n            count++;\n            letters.set(letter,\
    \ count);\n            if(count > maxCount){\n                maxCount = count;\n\
    \            }\n        }else{\n            letters.set(letter, 1);\n        }\n\
    \    }\n    let result = [];\n    for(let [key, value] of letters){\n        if(value\
    \ === maxCount){\n            result.push(key);\n        }\n    }\n    return\
    \ result;\n}\n\nlet test = \"a b c d a b c d a b\";", "    var count=1;\n    var\
    \ temp;\n    var output=[];\n    test.split('').sort().map(function(item,index){\n\
    \      if(index>0){\n        if(item===temp){\n          count++;\n        }else{\n\
    \          output.push([temp,count]);\n          count=1;\n        }\n      }\n\
    \      temp=item;\n    });\n    output.push([temp,count]);\n    var highest=output.reduce(function(prev,curr){\n\
    \      return prev[1]>curr[1]?prev:curr;\n    });\n    var output={};\n    output[highest[0]]=highest[1];\n\
    \    return output;\n}\n", "\tvar output = {};\n\tvar splitTest = test.split(\"\
    \ \");\n\tsplitTest.forEach(function(input){\n\t\tif (output[input] !== undefined){\n\
    \t\t\toutput[input]++;\n\t\t} else {\n\t\t\toutput[input] = 1;\n\t\t}\n\t});\n\
    \treturn output;\n}\n", "    var dict = {};\n    for (var i = 0; i < test.length;\
    \ i++){\n        if (test[i] in dict){\n            dict[test[i]] += 1;\n    \
    \    }\n        else{\n            dict[test[i]] = 1;\n        }\n    }\n    var\
    \ max = 0;\n    var keys = Object.keys(dict);\n    var temp = [];\n    for (var\
    \ i = 0; i < keys.length; i++){\n        if (dict[keys[i]] > max){\n         \
    \   max = dict[keys[i]];\n            temp = [keys[i]];\n        }\n        else\
    \ if (dict[keys[i]] == max){\n            temp.push(keys[i]);\n        }\n   \
    \ }\n    var dict2 = {};\n    for (var i = 0; i < temp.length; i++){\n       \
    \ dict2[temp[i]] = max;\n    }\n    return dict2;\n}", "  var histogram = {};\n\
    \  var lettersArray = test.split(\" \");\n  for (var i = 0; i < lettersArray.length;\
    \ i++) {\n    var letter = lettersArray[i];\n    if (histogram[letter]) {\n  \
    \    histogram[letter] += 1;\n    } else {\n      histogram[letter] = 1;\n   \
    \ }\n  }\n  return histogram;\n}\n", "  var histo = {};\n  var lrg = [0, 0];\n\
    \  var result = {};\n  for (var i = 0; i < test.length; i++){\n    if(histo[test[i]]){\n\
    \      histo[test[i]] += 1;\n    } else {\n      histo[test[i]] = 1;\n    }\n\
    \  }\n  console.log(histo);\n  for (var i = 0; i < test.length; i++){\n    if(histo[test[i]]\
    \ > lrg[1]){\n      lrg[0] = test[i];\n      lrg[1] = histo[test[i]];\n    }\n\
    \  }\n  for (var i = 0; i < test.length; i++){\n    if(histo[test[i]] === lrg[1]){\n\
    \      result[test[i]] = histo[test[i]];\n    }\n  }\n  return result;\n}\n\n\
    histogram(\"abccccccdd\");\n", "  var obj = {};\n  var max = 0;\n  for(var i =\
    \ 0; i < test.length; i++){\n    if(obj[test[i]] === undefined){\n      obj[test[i]]\
    \ = 1;\n    }else{\n      obj[test[i]]++;\n    }\n    if(obj[test[i]] > max){\n\
    \      max = obj[test[i]];\n    }\n  }\n  console.log(obj);\n  console.log(max);\n\
    \  var finalObj = {};\n  for(var key in obj){\n    if(obj[key] === max){\n   \
    \   finalObj[key] = max;\n    }\n  }\n  return finalObj;\n}\n\nvar test = \"helloworld\"\
    ;\nhistogram(test);", "    let obj = {};\n    let count = 0;\n    for(let i =\
    \ 0; i < test.length; i++){\n        if(!obj[test[i]]){\n            obj[test[i]]\
    \ = 0;\n        }\n        obj[test[i]] += 1;\n    }\n    let highestCount = Object.values(obj)[0];\n\
    \    let highestKey = Object.keys(obj)[0];\n    for(let i = 0; i < Object.keys(obj).length;\
    \ i++){\n        if(Object.values(obj)[i] >= highestCount){\n            highestCount\
    \ = Object.values(obj)[i];\n            highestKey = Object.keys(obj)[i];\n  \
    \      }\n    }\n    return {[highestKey]: highestCount};\n}\n", "    var obj\
    \ = {};\n    var testArr = test.split(\" \");\n    var most = 0;\n    var mostStr\
    \ = \"\";\n    for(var i = 0; i < testArr.length; i++){\n        var count = 0;\n\
    \        for(var j = 0; j < testArr.length; j++){\n            if(testArr[i] ===\
    \ testArr[j]){\n                count++;\n            }\n        }\n        if(count\
    \ > most){\n            most = count;\n            mostStr = testArr[i];\n   \
    \     }\n        obj[testArr[i]] = count;\n    }\n    obj[\"most\"] = most;\n\
    \    obj[\"mostStr\"] = mostStr;\n    return obj;\n}", "  let count = {};\n  let\
    \ result = [];\n  for (let i = 0; i < test.length; i++) {\n    if (!count[test[i]])\
    \ {\n      count[test[i]] = 1;\n    } else {\n      count[test[i]]++;\n    }\n\
    \  }\n  let max = 0;\n  for (let key in count) {\n    if (count[key] > max) {\n\
    \      max = count[key];\n    }\n  }\n  for (let key in count) {\n    if (count[key]\
    \ === max) {\n      result.push(key);\n    }\n  }\n  return result;\n}", "   \
    \ var dict = {};\n    var maxCount = 0;\n    var letters = [];\n    test.split(\"\
    \").forEach(letter => {\n        if (dict[letter]) {\n            dict[letter]++;\n\
    \        } else {\n            dict[letter] = 1;\n        }\n        if (dict[letter]\
    \ === maxCount) {\n            letters.push(letter);\n        } else if (dict[letter]\
    \ > maxCount) {\n            maxCount = dict[letter];\n            letters = [letter];\n\
    \        }\n    });\n    return letters.reduce((acc, letter) => {\n        acc[letter]\
    \ = maxCount;\n        return acc;\n    }, {});\n}\n", "    const arr = test.split('\
    \ ');\n    const count = {};\n    for(let i = 0; i < arr.length; i++){\n     \
    \   if(count[arr[i]] === undefined){\n            count[arr[i]] = 1;\n       \
    \ } else {\n            count[arr[i]]++;\n        }\n    }\n    const newArr =\
    \ [];\n    const max = Math.max(...Object.values(count));\n    for(const key in\
    \ count){\n        if(count[key] === max){\n            newArr.push(key);\n  \
    \      }\n    }\n    const mostRepeated = newArr.join(', ');\n    return `${mostRepeated}\
    \ => ${max}`;\n}", "  var myhash = {};\n  var mysplit = test.split(\" \");\n \
    \ for (var i = 0; i < mysplit.length; i++) {\n    var ichar = mysplit[i];\n  \
    \  if (ichar in myhash) {\n      myhash[ichar] += 1;\n    } else {\n      myhash[ichar]\
    \ = 1;\n    }\n  }\n  return myhash;\n}\n", "    var letters = test.split(\" \"\
    );\n    var histo = {};\n    for (var i = 0; i < letters.length; i++){\n     \
    \   if (letters[i] in histo){\n            histo[letters[i]]++;\n        }\n \
    \       else{\n            histo[letters[i]] = 1;\n        }\n    }\n    var max\
    \ = 0;\n    var maxCount = [];\n    for (var key in histo){\n        if (histo[key]\
    \ == max){\n            maxCount.push(key);\n        }\n        else if (histo[key]\
    \ > max){\n            max = histo[key];\n            maxCount = [key];\n    \
    \    }\n    }\n    var r = {};\n    for (var i = 0; i < maxCount.length; i++){\n\
    \        r[maxCount[i]] = max;\n    }\n    return r;\n}", "  var letters = test.split(\"\
    \ \");\n  var counts = {};\n  var current = null;\n  var cnt = 0;\n  var max =\
    \ 0;\n  var output = [];\n  var key = [];\n  letters.forEach(function(letter){\n\
    \    counts[letter] = counts[letter] + 1 || 1;\n  });\n  for (var letter in counts)\
    \ {\n    current = counts[letter];\n    if (max < current) {\n      max = current;\n\
    \      key = [];\n      key.push(letter);\n    } else if (max === current) {\n\
    \      key.push(letter);\n    }\n  }\n  key.forEach(function(letter){\n    output.push(letter\
    \ + \":\" + max);\n  });\n  return output;\n}", "  var letters = {};\n  for (var\
    \ i = 0; i < test.length; i++) {\n    if (letters[test[i]]) {\n      letters[test[i]]++;\n\
    \    } else {\n      letters[test[i]] = 1;\n    }\n  }\n  console.log(letters);\n\
    \  var max = 0;\n  var maxLetters = [];\n  for (var key in letters) {\n    if\
    \ (letters[key] >= max) {\n      max = letters[key];\n      maxLetters.push(key);\n\
    \    }\n  }\n  console.log(maxLetters);\n  var res = {};\n  for (var i = 0; i\
    \ < maxLetters.length; i++) {\n    res[maxLetters[i]] = max;\n  }\n  return res;\n\
    }", "   var dic ={};\n   for(var i = 0; i < test.length; i++){\n      if(test[i]\
    \ in dic){\n         dic[test[i]] += 1;\n      }else{\n         dic[test[i]] =\
    \ 1;\n      }\n   }\n   console.log(dic);\n   var max = Math.max.apply(null, Object.values(dic));\n\
    \   var ans = {};\n   for(var key in dic){\n      if(dic[key] == max){\n     \
    \    ans[key] = max;\n      }\n   }\n   return ans;\n}", "    var string = test.split(\"\
    \ \");\n    var dict = {};\n    for(var i = 0; i < string.length; i++){\n    \
    \    var currentWord = string[i];\n        var currentCount = 1;\n        for(var\
    \ j = i + 1; j < string.length; j++){\n            if(currentWord === string[j]){\n\
    \                currentCount += 1;\n            }\n        }\n        dict[currentWord]\
    \ = currentCount;\n    }\n    return dict;\n}\n", "    var split = test.split(\"\
    \ \");\n    var dict = {};\n    for(var i = 0; i < split.length; i++){\n     \
    \   var key = split[i];\n        if(dict[key] === undefined){\n            dict[key]\
    \ = 1;\n        }\n        else{\n            dict[key] = dict[key] + 1;\n   \
    \     }\n    }\n    var max = 0;\n    var letters = [];\n    for(var key in dict){\n\
    \        if(dict[key] > max){\n            max = dict[key];\n            letters\
    \ = [key];\n        }\n        else if(dict[key] === max){\n            letters.push(key);\n\
    \        }\n    }\n    return [letters, max];\n}\nvar test = \"a a a b c\";",
  "    var array = test.split(' ');\n    var histo = {};\n    var max = 0;\n    var\
    \ solution = '';\n    array.forEach(function(letter){\n        if(!histo[letter]){\n\
    \            histo[letter] = 1;\n        }\n        else{\n            histo[letter]\
    \ += 1;\n        }\n        if(histo[letter] > max){\n            max = histo[letter];\n\
    \            solution = letter;\n        }\n    });\n    console.log(histo);\n\
    \    return solution;\n}", "  let letters= {};\n  let max = 0;\n  let winner =\
    \ [];\n  for(let i = 0; i < test.length; i++){\n    if(letters[test[i]]){\n  \
    \    letters[test[i]] = letters[test[i]] + 1;\n    }\n    else{\n      letters[test[i]]\
    \ = 1;\n    }\n  }\n  for(let key in letters){\n    if(letters[key] > max){\n\
    \      max = letters[key];\n      winner = [key];\n    }\n    else if(letters[key]\
    \ === max){\n      winner.push(key);\n    }\n  }\n  return {[winner]:max};\n}",
  "  var occurences = {};\n  var mostOccurences = 0;\n  var topLetters = [];\n  for\
    \ (var i = 0; i < test.length; i++) {\n    if (occurences[test[i]]) {\n      occurences[test[i]]\
    \ += 1;\n    } else {\n      occurences[test[i]] = 1;\n    }\n    if (occurences[test[i]]\
    \ > mostOccurences) {\n      mostOccurences = occurences[test[i]];\n      topLetters\
    \ = [test[i]];\n    } else if (occurences[test[i]] === mostOccurences) {\n   \
    \   topLetters.push(test[i]);\n    }\n  }\n  return {\n    [topLetters]: mostOccurences\n\
    \  };\n}", "  var newDict = {};\n  for (var i = 0; i < test.length; i++){\n  \
    \  var current = test[i];\n    if (newDict[current] === undefined){\n      newDict[current]\
    \ = 1;\n    } else {\n      newDict[current]++;\n    }\n  }\n  var maxKeys = [];\n\
    \  var maxOccurence = 0;\n  for (var key in newDict){\n    if (newDict[key] >\
    \ maxOccurence){\n      maxKeys = [key];\n      maxOccurence = newDict[key];\n\
    \    } else if (newDict[key] === maxOccurence){\n      maxKeys.push(key);\n  \
    \  }\n  }\n  var newDict2 = {};\n  for (var i = 0; i < maxKeys.length; i++){\n\
    \    newDict2[maxKeys[i]] = maxOccurence;\n  }\n  return newDict2;\n}\nhistogram(\"\
    blahhh\");\n", "    var test = test.split(' ').join('');\n    var current = 0;\n\
    \    var max = 0;\n    var prev = '';\n    var result = {};\n    for(var i = 0;\
    \ i < test.length; i++){\n        if(test[i] == prev){\n            current++;\n\
    \        }else{\n            current = 1;\n        }\n        if(current > max){\n\
    \            max = current;\n            result = {};\n            result[test[i]]\
    \ = max;\n        }else if(current == max){\n            result[test[i]] = max;\n\
    \        }\n        prev = test[i];\n    }\n    return result;\n}\n", "    let\
    \ obj = {};\n    test.split(\"\").forEach(ele => {\n        if(obj[ele]){\n  \
    \          obj[ele]++;\n        } else {\n            obj[ele] = 1;\n        }\n\
    \    });\n    let max = Math.max(...Object.values(obj));\n    let result = {};\n\
    \    for(let ele in obj){\n        if(obj[ele] === max){\n            result[ele]\
    \ = max;\n        }\n    }\n    return result;\n}", "    var dict = {}\n    var\
    \ max_key;\n    var max_val = 0;\n    for (i = 0; i < test.length; i++){\n   \
    \     var char = test[i];\n        if (char in dict){\n            dict[char]\
    \ += 1;\n        }\n        else{\n            dict[char] = 1;\n        }\n  \
    \      if (dict[char] > max_val){\n            max_val = dict[char];\n       \
    \     max_key = char;\n        }\n    }\n    return dict\n}\n", "  var arr = test.split('\
    \ ');\n  var dict = {};\n  var big = 0;\n  for(var i = 0; i < arr.length; i++){\n\
    \    var letter = arr[i];\n    if(dict[letter] > 0){\n      dict[letter] = dict[letter]\
    \ + 1;\n    }\n    else{\n      dict[letter] = 1;\n    }\n    if(dict[letter]\
    \ > big){\n      big = dict[letter];\n    }\n  }\n  var newArr = [];\n  for(var\
    \ k in dict){\n    if(dict[k] == big){\n      newArr.push(k);\n    }\n  }\n  console.log('the\
    \ most repeated letters are: ', newArr, 'and they appear', big, 'times');\n}\n\
    histogram('a b c d a e a b f a g a');\n", "    var h = {};\n    var split = test.split('\
    \ ');\n    for(var i = 0; i < split.length; i++){\n        var letter = split[i];\n\
    \        if(h[letter] === undefined){\n            h[letter] = 1;\n        } else\
    \ {\n            h[letter]++;\n        }\n    }\n    var letters = Object.keys(h);\n\
    \    var max = Math.max.apply(null, letters.map(function(l){\n        return h[l];\n\
    \    }));\n    return letters.filter(function(l){\n        return h[l] === max;\n\
    \    });\n}\n", "  var answer = {};\n  var count = 0;\n  var most = 0;\n  for(var\
    \ i = 0; i < test.length; i++){\n    for(var j = 0; j < test.length; j++){\n \
    \     if(test[i] === test[j]){\n        count++;\n      }\n    }\n    if(most\
    \ < count){\n      most = count;\n      answer = {};\n      answer[test[i]] =\
    \ most;\n    } else if(most === count){\n      answer[test[i]] = most;\n    }\n\
    \    count = 0;\n  }\n  return answer;\n}", "    let max = 0;\n    const dictionary\
    \ = {}\n    for(let i = 0; i < test.length; i++){\n        if(dictionary[test[i]]){\n\
    \            dictionary[test[i]]++\n        }else{\n            dictionary[test[i]]\
    \ = 1\n        }\n        if(dictionary[test[i]] > max){\n            max = dictionary[test[i]]\n\
    \        }\n    }\n    const result = {}\n    for(let key in dictionary){\n  \
    \      if(dictionary[key] === max){\n            result[key] = dictionary[key]\n\
    \        }\n    }\n    return result\n}\n", "    let dict={};\n    for(let i=0;i<test.length;i++){\n\
    \        if(dict[test[i]]){\n            dict[test[i]]++;\n        }else{\n  \
    \          dict[test[i]]=1;\n        }\n    }\n    let max=Math.max(...Object.values(dict));\n\
    \    let newDict={};\n    for(let key in dict){\n        if(dict[key]===max){\n\
    \            newDict[key]=max;\n        }\n    }\n    return newDict;\n}", " \
    \   // Make a string into an array\n    var array = test.split(\" \");\n    //Initialize\
    \ the dictionary with first word\n    var wordCounter = {};\n    wordCounter[array[0]]\
    \ = 1;\n    // Loop through the array\n    for (var i = 1; i < array.length; i++){\n\
    \        // If the current word is already a key, increment the value\n      \
    \  if (array[i] in wordCounter){\n            wordCounter[array[i]]++;\n     \
    \   }\n        // Otherwise, create a new key and set it equal to 1\n        else{\n\
    \            wordCounter[array[i]] = 1;\n        }\n    }\n    // Initialize a\
    \ new array for maximum and current values\n    var temp = [];\n    var max =\
    \ 1;\n    // Loop through the dictionary\n    for (var key in wordCounter){\n\
    \        // If the value is greater than the maximum, empty the array and add\
    \ the new key\n        if (wordCounter[key] > max){\n            temp = [];\n\
    \            temp.push(key);\n            max = wordCounter[key];\n        }\n\
    \        // If the value is equal to the maximum, add the new key\n        else\
    \ if (wordCounter[key] == max){\n            temp.push(key);\n        }\n    }\n\
    \    // Return the array\n    return temp;\n}\n\nvar test = \"the quick brown\
    \ fox jumps over the the lazy dog\";", "  var dict = {};\n  var arr = test.split(\"\
    \ \");\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] in dict){\n    \
    \  dict[arr[i]] = dict[arr[i]] + 1;\n    }\n    else{\n      dict[arr[i]] = 1;\n\
    \    }\n  }\n  var result = {};\n  var max = 0;\n  for(var key in dict){\n   \
    \ if(dict[key] > max){\n      max = dict[key];\n    }\n  }\n  for(var key in dict){\n\
    \    if(dict[key] == max){\n      result[key] = max;\n    }\n  }\n  return result;\n\
    }", "    let result = {};\n    let max = 1;\n    let maxKeys = [];\n    test.split('').forEach(function(el)\
    \ {\n        if(!result[el]){\n            result[el] = 1;\n        } else {\n\
    \            result[el]++;\n        }\n        if(result[el] > max){\n       \
    \     max = result[el];\n            maxKeys = [el];\n        } else if(result[el]\
    \ === max){\n            maxKeys.push(el);\n        }\n    });\n    return maxKeys;\n\
    }", "  var letters = test.split(\"\");\n  var counts = {};\n  for (var i = 0;\
    \ i < letters.length; i++) {\n    counts[letters[i]] = (counts[letters[i]] + 1)\
    \ || 1;\n  }\n  var max = 0;\n  var max_letter = [];\n  for (var letter in counts)\
    \ {\n    if (counts[letter] > max) {\n      max = counts[letter];\n      max_letter\
    \ = [];\n      max_letter.push(letter);\n    } else if (counts[letter] === max)\
    \ {\n      max_letter.push(letter);\n    }\n  }\n  return {max: max, letters:\
    \ max_letter.join(\"\")};\n}", "    let dict = {};\n    let max = 0;\n    let\
    \ res = [];\n    test.split(\"\").forEach(letter => {\n        if (dict[letter])\
    \ {\n            dict[letter]++;\n        } else {\n            dict[letter] =\
    \ 1;\n        }\n        if (dict[letter] > max) {\n            max = dict[letter];\n\
    \        }\n    });\n    for (let i in dict) {\n        if (dict[i] === max) {\n\
    \            res.push(i);\n        }\n    }\n    return res;\n}\nhistogram(\"\
    djdvijdviddvi\"); // should return \"d\"\nhistogram(\"aabbc\"); // should return\
    \ [\"a\", \"b\"]\nhistogram(\"dddd\"); // should return [\"d\"]", "    let myObj\
    \ = {}\n    let tempArr = test.split(\" \");\n    let maxCount = 0;\n    let maxLetter\
    \ = [];\n    for(let i = 0; i < tempArr.length; i++){\n        if(myObj[tempArr[i]]\
    \ !== undefined){\n            myObj[tempArr[i]] += 1;\n        }else{\n     \
    \       myObj[tempArr[i]] = 1;\n        }\n    }\n    for(let key in myObj){\n\
    \        if(myObj[key] > maxCount){\n            maxCount = myObj[key];\n    \
    \        maxLetter = [key];\n        }\n        else if(myObj[key] === maxCount){\n\
    \            maxLetter.push(key);\n        }\n    }\n    return{ [maxLetter]:\
    \ maxCount };\n}", "    var letters = {}\n    var split = test.split(\" \");\n\
    \    var counter = 0;\n    for(var i = 0; i < split.length; i++){\n        if(letters[split[i]]){\n\
    \            letters[split[i]] += 1;\n        }else{\n            letters[split[i]]\
    \ = 1;\n        }\n    }\n    for(var key in letters){\n        if(letters[key]\
    \ > counter){\n            counter = letters[key];\n        }\n    }\n    var\
    \ final = {};\n    for(var key in letters){\n        if(letters[key] == counter){\n\
    \            final[key] = letters[key];\n        }\n    }\n    return final;\n\
    }\n", "  var myObj = {};\n  var myArray = test.split(\" \");\n  for (var i = 0;\
    \ i < myArray.length; i++) {\n    var word = myArray[i];\n    if (myObj[word]\
    \ === undefined) {\n      myObj[word] = 1;\n    } else {\n      myObj[word]++;\n\
    \    }\n  }\n  var max = 0;\n  var result = [];\n  for (var key in myObj) {\n\
    \    if (myObj[key] > max) {\n      max = myObj[key];\n      result = [];\n  \
    \    result.push(key);\n    } else if (myObj[key] === max) {\n      result.push(key);\n\
    \    }\n  }\n  return {max: max, result: result};\n}\n\nvar test = \"This is a\
    \ test this is only a test\";\n", "    let results = {};\n    test.split(\"\"\
    ).forEach(function(letter){\n        if(letter in results){\n            results[letter]\
    \ += 1;\n        } else {\n            results[letter] = 1;\n        }\n    });\n\
    \    return results;\n}\n", "    var result = {};\n    var array1 = test.split(\"\
    \ \");\n    var current = null;\n    var count = 0;\n    for (var i = 0; i < array1.length;\
    \ i++) {\n        for (var j = i; j < array1.length; j++) {\n            if (array1[i]\
    \ == array1[j])\n                count++;\n        }\n        if (count > 1) {\n\
    \            result[array1[i]] = count;\n        }\n        count = 0;\n    }\n\
    \    return result;\n}\nhistogram(\"abbbbcde\"); //Returns {\"b\": 4, \"c\": 1}\n\
    histogram(\"abbccddeffgghi\"); //Returns {\"b\": 2, \"c\": 2, \"d\": 2, \"e\"\
    : 2, \"f\": 2, \"g\": 2, \"h\": 1, \"i\": 1}\nhistogram(\"apxyzqqq\"); //Returns\
    \ {\"q\": 3, \"p\": 1, \"x\": 1, \"y\": 1, \"z\": 1}\nhistogram(\"aabbfqcccde\"\
    ); //Returns {\"a\": 2, \"b\": 2, \"f\": 1, \"q\": 1, \"c\": 3, \"d\": 1, \"e\"\
    : 1}\n", "\n}", "    let myDict = {};\n    let max = 0;\n    let result = [];\n\
    \    let count = 0;\n    for(let i = 0; i < test.length; i++){\n        if(test[i]\
    \ in myDict){\n            myDict[test[i]]++;\n        }\n        else{\n    \
    \        myDict[test[i]] = 1;\n        }\n    }\n    for(let key in myDict){\n\
    \        if(myDict[key] > max){\n            max = myDict[key];\n        }\n \
    \   }\n    for(let key in myDict){\n        if(myDict[key] === max){\n       \
    \     result.push(key);\n        }\n    }\n    return result;\n}", "  var test_array\
    \ = test.split(\" \");\n  var dictionary = [];\n  var dictionary_dup = [];\n \
    \ var max_num = 0;\n  var letter = \"\";\n  for(var i = 0; i < test_array.length;\
    \ i++){\n    var current_letter = test_array[i];\n    var current_num = 0;\n \
    \   for(var j = 0; j < test_array.length; j++){\n      if(current_letter == test_array[j]){\n\
    \        current_num++;\n      }\n    }\n    if(dictionary_dup.indexOf(current_letter)\
    \ == -1){\n      dictionary_dup.push(current_letter);\n      dictionary.push([current_letter,\
    \ current_num]);\n    }\n    if(current_num > max_num){\n      max_num = current_num;\n\
    \      letter = current_letter;\n    }\n  }\n  if(letter == \"\"){\n    return\
    \ \"No letter has been repeated\";\n  }\n  else if(max_num == 1){\n    return\
    \ \"All letters have been repeated only once\";\n  }\n  else{\n    var final_array\
    \ = [];\n    for(var i = 0; i < dictionary.length; i++){\n      if(dictionary[i][1]\
    \ == max_num){\n        final_array.push(dictionary[i][0]);\n      }\n    }\n\
    \    return final_array.join(\", \");\n  }\n}\n", "    let arr = test.split('\
    \ ');\n    let map = new Map();\n    for(let el of arr){\n        if(map.has(el)){\n\
    \            map.set(el, map.get(el) + 1);\n        } else {\n            map.set(el,\
    \ 1);\n        }\n    }\n    let max = Math.max(...map.values());\n    let newMap\
    \ = new Map();\n    for(let [key, value] of map){\n        if(value === max){\n\
    \            newMap.set(key, value);\n        }\n    }\n    return newMap;\n}",
  "    var letterCount = {};\n    for (var i = 0; i < test.length; i++) {\n      \
    \  var letter = test[i];\n        if (letterCount[letter]) {\n            letterCount[letter]++;\n\
    \        } else {\n            letterCount[letter] = 1;\n        }\n    }\n  \
    \  return letterCount;\n}\n", "  var hist = {};\n  var max = 0;\n  for (var i\
    \ = 0; i < test.length; i++) {\n    if (hist[test[i]]) {\n      hist[test[i]]++;\n\
    \    } else {\n      hist[test[i]] = 1;\n    }\n    if (hist[test[i]] > max) {\n\
    \      max = hist[test[i]];\n    }\n  }\n  var result = {};\n  for (var key in\
    \ hist) {\n    if (hist[key] === max) {\n      result[key] = max;\n    }\n  }\n\
    \  return result;\n}\nhistogram(\"hello moto\");\nhistogram(\"the cat and the\
    \ hat\");\nhistogram(\"aa bb c dddd\");\nhistogram(\"hi hihi hihihi\");\nhistogram(\"\
    abbbcc\");", "    var testArray = test.split(' ');\n    var letterCount = {};\n\
    \    for (var i = 0; i < testArray.length; i++) {\n        letterCount[testArray[i]]\
    \ = (letterCount[testArray[i]] || 0) + 1;\n    }\n    var letters = Object.keys(letterCount);\n\
    \    var numberOfLetters = letters.length;\n    var maxCount = -1;\n    var maxLetters\
    \ = [];\n    for (var j = 0; j < numberOfLetters; j++) {\n        if (letterCount[letters[j]]\
    \ > maxCount) {\n            maxCount = letterCount[letters[j]];\n           \
    \ maxLetters = [letters[j]];\n        } else if (letterCount[letters[j]] === maxCount)\
    \ {\n            maxLetters.push(letters[j]);\n        }\n    }\n    var maxDict\
    \ = {};\n    for (var k = 0; k < maxLetters.length; k++) {\n        maxDict[maxLetters[k]]\
    \ = maxCount;\n    }\n    return maxDict;\n}\n", "    var obj = {};\n    var arr\
    \ = test.split(\" \");\n    for(var i = 0; i < arr.length; i++){\n        if(!obj[arr[i]]){\n\
    \            obj[arr[i]] = 1;\n        } else {\n            obj[arr[i]]++;\n\
    \        }\n    }\n    var maxValue = 0;\n    var answer = {};\n    for(var key\
    \ in obj){\n        if(obj[key] > maxValue){\n            maxValue = obj[key];\n\
    \            answer = {};\n            answer[key] = maxValue;\n        } else\
    \ if(obj[key] === maxValue){\n            answer[key] = maxValue;\n        }\n\
    \    }\n    return answer;\n}", "    //var test = \"abcdeefg\";\n    var string\
    \ = [];\n    var count = [];\n    for(var i = 0; i < test.length; i++){\n    \
    \    var times = 1;\n        for(var j = i+1; j < test.length; j++){\n       \
    \     if(test[i] == test[j]){\n                times++;\n            }\n     \
    \   }\n        if(!string.includes(test[i])){\n            string.push(test[i]);\n\
    \            count.push(times);\n        }\n    }\n    var maxCount = Math.max(...count);\n\
    \    var indexes = [];\n    for(var k = 0; k < count.length; k++){\n        if(count[k]\
    \ == maxCount){\n            indexes.push(k);\n        }\n    }\n    var sol =\
    \ [];\n    for(var l = 0; l < indexes.length; l++){\n        sol.push(string[indexes[l]]);\n\
    \    }\n    //return indexes;\n    return sol;\n    //return string;\n    //return\
    \ count;\n}\n", "  var letters = {};\n  var max = 0;\n  for(var i = 0; i < test.length;\
    \ i++){\n    if(!letters[test[i]]){\n      letters[test[i]] = 1;\n    } else {\n\
    \      letters[test[i]]++;\n    }\n    if(letters[test[i]] > max){\n      max\
    \ = letters[test[i]];\n    }\n  }\n  var results = {};\n  for(var key in letters){\n\
    \    if(letters[key] === max){\n      results[key] = letters[key];\n    }\n  }\n\
    \  return results;\n}", "    const letters = {};\n    let maxLetter = '';\n  \
    \  let maxCount = 0;\n    test.split('').forEach(function(letter){\n        if\
    \ (letters[letter]){\n            letters[letter]++;\n        } else {\n     \
    \       letters[letter] = 1;\n        }\n        if (letters[letter] > maxCount){\n\
    \            maxCount = letters[letter];\n            maxLetter = letter;\n  \
    \      }\n    });\n    if (maxCount > 1){\n        return letters;\n    } else\
    \ {\n        return maxLetter;\n    }\n}", "    let counter = {}\n    for(let\
    \ i = 0; i < test.length; i++){\n        if(test[i] in counter){\n           \
    \ counter[test[i]] += 1\n        }else{\n            counter[test[i]] = 1\n  \
    \      }\n    }\n    return counter\n}", "    let obj = {};\n    let i = 0;\n\
    \    let max = 0;\n    let result = [];\n    while(i < test.length){\n       \
    \ let curr = test[i];\n        if(!obj[curr]){\n            obj[curr] = 1;\n \
    \       }\n        else{\n            obj[curr] += 1;\n        }\n        if(obj[curr]\
    \ > max){\n            max = obj[curr];\n        }\n        i++;\n    }\n    for(key\
    \ in obj){\n        if(obj[key] === max){\n            result.push(key);\n   \
    \     }\n    }\n    return result;\n}\n", "  var hist = {}\n  var max = 1\n  var\
    \ count = 1\n  var result = []\n  for(var i = 0; i < test.length; i++){\n    if(test[i]\
    \ === test[i+1]){\n      count++\n    } else {\n      if(count >= max){\n    \
    \    max = count\n        hist[test[i]] = count\n      }\n      count = 1\n  \
    \  }\n  }\n  console.log(hist)\n  for(var key in hist){\n    if(hist[key] ===\
    \ max){\n      result.push(key)\n    }\n  }\n  return result\n}\n", "    let dict\
    \ = {};\n    test.split('').forEach(function(v){\n        dict[v] = dict[v] ?\
    \ dict[v] + 1 : 1;\n    });\n    let max = 0;\n    let key_max = 0;\n    for (let\
    \ k in dict){\n        if (dict[k] > max){\n            max = dict[k];\n     \
    \       key_max = k;\n        }\n    }\n    let arr = [];\n    for (let k in dict){\n\
    \        if (dict[k] === max){\n            arr.push(k);\n        }\n    }\n \
    \   return {\n        highest_occurrence: arr,\n        count: max\n    };\n}",
  "    var container = {};\n    test.split(\"\").forEach(function(item){\n       \
    \ if (container[item]) {\n            container[item]++;\n        } else {\n \
    \           container[item] = 1;\n        }\n    });\n    var highest = {};\n\
    \    for (var prop in container) {\n        if (container[prop] > container.a)\
    \ {\n            highest[prop] = container[prop];\n        }\n    }\n    return\
    \ highest;\n}\n", "  const arr = test.split(' ');\n  let output = {}\n  arr.forEach(item\
    \ => {\n    if (output[item]){\n      output[item] += 1;\n    } else {\n     \
    \ output[item] = 1;\n    }\n  })\n  let max = 0;\n  let result = {};\n  for (let\
    \ key in output){\n    if (output[key] > max){\n      max = output[key];\n   \
    \   result = {};\n      result[key] = max;\n    } else if (output[key] === max){\n\
    \      result[key] = max;\n    }\n  }\n  return result;\n}", "    let result =\
    \ {};\n    for(let i = 0; i < test.length; i++){\n        if(result[test[i]] ===\
    \ undefined){\n            result[test[i]] = 1;\n        } else {\n          \
    \  result[test[i]]++;\n        }\n    }\n    console.log(result);\n    return\
    \ result;\n}\n\nhistogram(\"hello\");\nhistogram(\"aaabbb\");\nhistogram(\"\"\
    );\n", "  var max = 0;\n  var letters = [];\n  var letters_hash = {};\n  for (var\
    \ i = 0; i < test.length; i++) {\n    var s = test[i];\n    if (letters_hash[s]\
    \ === undefined) {\n      letters_hash[s] = 1;\n    } else {\n      letters_hash[s]\
    \ += 1;\n    }\n    if (letters_hash[s] > max) {\n      max = letters_hash[s];\n\
    \      letters = [s];\n    } else if (letters_hash[s] === max) {\n      letters.push(s);\n\
    \    }\n  }\n  return {letters: letters, max: max};\n}\n\ndescribe('histogram',\
    \ function(){\n  it('should return a dictionary of letters with the most repetition',\
    \ function(){\n    var result = histogram('adsadsadsadsadsadsadasd');\n    expect(result).to.eql({letters:\
    \ ['a'], max: 6});\n  });\n  it('should return a dictionary of letters with the\
    \ most repetition', function(){\n    var result = histogram('adsadsadsadsadsadsadasdedqs');\n\
    \    expect(result).to.eql({letters: ['a', 'd'], max: 6});\n  });\n});", "  \n\
    \  let count = {};\n  let chars = test.split('');\n  let max = 0;\n  let result\
    \ = [];\n  \n  for(let i = 0; i < chars.length; i++){\n    if(chars[i] in count){\n\
    \      count[chars[i]] += 1;\n    } else {\n      count[chars[i]] = 1;\n    }\n\
    \  }\n  \n  for(let j in count){\n    if(count[j] > max){\n      max = count[j];\n\
    \    }\n  }\n  \n  for(let k in count){\n    if(count[k] === max){\n      result.push(k);\n\
    \    }\n  }\n  \n  return {[result.join('')]: max};\n  \n}\n", "    let letterCounts\
    \ = {};\n    let maxCount = 0;\n    let result = [];\n    for (let i = 0; i <\
    \ test.length; i++) {\n        let letter = test[i];\n        if (letterCounts[letter]\
    \ === undefined) {\n            letterCounts[letter] = 1;\n        } else {\n\
    \            letterCounts[letter]++;\n        }\n        if (letterCounts[letter]\
    \ > maxCount) {\n            maxCount = letterCounts[letter];\n        }\n   \
    \ }\n    for (let j in letterCounts) {\n        if (letterCounts[j] === maxCount)\
    \ {\n            result.push(j);\n        }\n    }\n    return `${result}  with\
    \ ${maxCount} repetition`;\n}", "    var dict = {};\n    var max = 0;\n    var\
    \ result = [];\n    var newArr = test.split(\" \");\n    for(var i = 0; i < newArr.length;\
    \ i++){\n        if(dict[newArr[i]]){\n            dict[newArr[i]]++;\n      \
    \  }\n        else{\n            dict[newArr[i]] = 1;\n        }\n    }\n    for(var\
    \ key in dict){\n        if(dict[key] > max){\n            max = dict[key];\n\
    \        }\n    }\n    for(var key in dict){\n        if(dict[key] == max){\n\
    \            result.push(key);\n        }\n    }\n    return result;\n}", "  var\
    \ result={};\n  var splitTest=test.split(\" \");\n  for(var i=0;i<splitTest.length;i++){\n\
    \    var count=0;\n    for(var j=0;j<splitTest.length;j++){\n      if(splitTest[i]===splitTest[j]){\n\
    \        count++;\n      }\n    }\n    result[splitTest[i]]=count;\n  }\n  return\
    \ result;\n}\n", "    let wordSplit = test.split(' ');\n    let wordSplitHistogram\
    \ = {};\n    let wordSplitHistogramMax = {};\n    let max = 0;\n    for (let i\
    \ = 0; i < wordSplit.length; i++) {\n        if (wordSplitHistogram[wordSplit[i]]){\n\
    \            wordSplitHistogram[wordSplit[i]] += 1;\n        }\n        else {\n\
    \            wordSplitHistogram[wordSplit[i]] = 1;\n        }\n    }\n    for\
    \ (let j in wordSplitHistogram){\n        if (wordSplitHistogram[j] > max){\n\
    \            max = wordSplitHistogram[j];\n        }\n    }\n    for (let k in\
    \ wordSplitHistogram){\n        if (wordSplitHistogram[k] === max){\n        \
    \    wordSplitHistogramMax[k] = max;\n        }\n    }\n    return wordSplitHistogramMax;\n\
    }", "    const arr = test.split(' ');\n    const dict = {};\n    let max = 0;\n\
    \    let maxkeys = [];\n    arr.forEach(val => {\n        if(dict[val]){\n   \
    \         dict[val] += 1;\n        }else{\n            dict[val] = 1;\n      \
    \  }\n    });\n    for(let key in dict){\n        if(dict[key] > max){\n     \
    \       max = dict[key];\n            maxkeys = [key];\n        }else if(dict[key]\
    \ === max){\n            maxkeys.push(key);\n        }\n    }\n    return {[maxkeys.join(',')]:\
    \ max};\n}", "  var hist = {};\n  var count = 0;\n  var max = 0;\n  var maxLetter\
    \ = [];\n  test = test.split(\" \");\n  for(var i = 0; i < test.length; i++){\n\
    \    if(hist[test[i]] != undefined){\n      hist[test[i]]++;\n    }\n    else{\n\
    \      hist[test[i]] = 1;\n    }\n  }\n  for(var key in hist){\n    if(hist[key]\
    \ > max){\n      max = hist[key];\n      maxLetter = [];\n      maxLetter.push(key);\n\
    \    }\n    else if(hist[key] == max){\n      maxLetter.push(key);\n    }\n  }\n\
    \  return maxLetter;\n}", "    const hist = {};\n    for (let i = 0; i < test.length;\
    \ i++){\n        if (hist[test[i]]){\n            hist[test[i]]++;\n        }\n\
    \        else {\n            hist[test[i]] = 1;\n        }\n    }\n    let max\
    \ = 0;\n    let maxLetter = \"\";\n    for (let [key, value] of Object.entries(hist)){\n\
    \        if (value > max){\n            max = value;\n            maxLetter =\
    \ key;\n        }\n    }\n    const maxLetterDict = {};\n    for (let [key, value]\
    \ of Object.entries(hist)){\n        if (value === max){\n            maxLetterDict[key]\
    \ = value;\n        }\n    }\n    return maxLetterDict;\n}\n", "  var arr = test.split('\
    \ ')\n  var result = {}\n  for(var i = 0; i < arr.length; i++){\n    var letter\
    \ = arr[i]\n    if(result[letter] === undefined){\n      result[letter] = 1\n\
    \    }else{\n      result[letter] += 1\n    }\n  }\n  return result\n}\n", " \
    \   let d = {};\n    let letters = test.split(' ');\n    letters.forEach( (letter)\
    \ => {\n        if(d[letter]){\n            d[letter] += 1;\n        }else{\n\
    \            d[letter] = 1;\n        }\n    });\n    let max = 0;\n    for(let\
    \ key in d){\n        if(d[key] > max){\n            max = d[key];\n        }\n\
    \    }\n    let results = {};\n    for(let key in d){\n        if(d[key] === max){\n\
    \            results[key] = d[key];\n        }\n    }\n    return results;\n}\n",
  "  var each = test.split(\" \");\n  var arr = []\n  for(var i = 0; i < each.length;\
    \ i++){\n    if(arr[each[i]]){\n      arr[each[i]]++;\n    }\n    else{\n    \
    \  arr[each[i]] = 1;\n    }\n  }\n  console.log(arr);\n  return arr;\n}\nhistogram(\"\
    a c b b d a\"); // => {'a': 2, 'b': 2, 'c': 1, 'd': 1}", "  return test.split(\"\
    \").reduce(function(result, item){\n    if (item in result){\n      result[item]\
    \ += 1;\n    } else {\n      result[item] = 1;\n    }\n    return result;\n  },\
    \ {});\n}\n", "    let space = \" \";\n    let histogram = {};\n    let word =\
    \ test.split(space);\n    for (let i = 0; i < word.length; i++){\n        if(histogram[word[i]]){\n\
    \            histogram[word[i]] += 1;\n        } else {\n            histogram[word[i]]\
    \ = 1;\n        }\n    }\n    let keys = Object.keys(histogram);\n    let max\
    \ = Math.max(...keys);\n    for (let key in histogram){\n        if (histogram[key]\
    \ === max){\n            console.log(key + \" = \" + histogram[key]);\n      \
    \  }\n    }\n}\n\nhistogram(\"to be or not to be\");\n", "    var holder = {};\n\
    \    var max = 0;\n    var result = [];\n    for(var i = 0; i < test.length; i++){\n\
    \        if(!holder[test[i]]){\n            holder[test[i]] = 1;\n        }\n\
    \        else{\n            holder[test[i]] += 1;\n        }\n        if(holder[test[i]]\
    \ > max){\n            max = holder[test[i]];\n        }\n    }\n    for(var key\
    \ in holder){\n        if(holder[key] === max){\n            result.push(key);\n\
    \        }\n    }\n    return result;\n}", "    var histo = {};\n    var max =\
    \ {k: 0, v: 0};\n    for (var i = 0; i < test.length; i++) {\n        if (test[i]\
    \ in histo) {\n            histo[test[i]]++;\n        } else {\n            histo[test[i]]\
    \ = 1;\n        }\n        if (histo[test[i]] > max.v) {\n            max.k =\
    \ test[i];\n            max.v = histo[test[i]];\n        }\n    }\n    if (histo[max.k]\
    \ == 1) {\n        return histo;\n    } else {\n        return {[max.k]: histo[max.k]};\n\
    \    }\n}", "  let chars = test.split('');\n  let frequencies = {};\n  for (let\
    \ i=0; i<chars.length; i++){\n    let letter = chars[i];\n    if (!frequencies[letter]){\n\
    \      frequencies[letter] = 1;\n    }\n    else{\n      frequencies[letter] +=\
    \ 1;\n    }\n  }\n  return frequencies;\n}\n", "  var histo = {};\n  var max =\
    \ 0;\n  var maxletter = [];\n  for (i=0; i<test.length; i++){\n    histo[test[i]]\
    \ === undefined ? histo[test[i]] = 1 : histo[test[i]] += 1;\n    if (histo[test[i]]\
    \ > max){\n      max = histo[test[i]];\n      maxletter = [];\n      maxletter.push(test[i]);\n\
    \    }\n    else if (histo[test[i]] === max){\n      maxletter.push(test[i]);\n\
    \    }\n  }\n  return maxletter;\n}", "  var maxOccurrences = 0;\n  var letters\
    \ = {};\n  var lettersArray = {};\n  test.split(\"\").forEach(function(letter)\
    \ {\n    if(letters[letter]){\n      letters[letter]++;\n    } else {\n      letters[letter]\
    \ = 1;\n    }\n    if(letters[letter] > maxOccurrences){\n      maxOccurrences\
    \ = letters[letter];\n    }\n  });\n  for(var key in letters){\n    if(letters[key]\
    \ === maxOccurrences){\n      lettersArray[key] = letters[key];\n    }\n  }\n\
    \  return lettersArray;\n}\nhistogram(\"hello\");\n", "    var x = {};\n    var\
    \ y = 1;\n    var z = [];\n    for(var i = 0; i < test.length; i++){\n       \
    \ if(x[test[i]]){\n            x[test[i]]++;\n        }\n        else{\n     \
    \       x[test[i]] = 1;\n        }\n    }\n    for(var key in x){\n        if(x[key]\
    \ >= y){\n            y = x[key];\n        }\n    }\n    for(var key in x){\n\
    \        if(x[key] === y){\n            z.push(key);\n        }\n    }\n    return\
    \ z;\n}", "    var obj = {}\n    for(var i = 0; i < test.length; i++){\n     \
    \   if(obj[test[i]] === undefined){\n            obj[test[i]] = 1\n        } else\
    \ {\n            obj[test[i]]++\n        }\n    }\n    return obj\n}", "    var\
    \ arr = test.split(' ');\n    var obj = {};\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(!obj[arr[i]]){\n            obj[arr[i]] = 1;\n        }else{\n\
    \            obj[arr[i]] += 1;\n        }\n    }\n    return obj;\n}\n", "   \
    \ if (typeof test !== 'string') {\n        return false;\n    }\n    var len =\
    \ test.length;\n    var result = {};\n    for (var i = 0; i < len; i++) {\n  \
    \      if (test[i] in result) {\n            result[test[i]] += 1;\n        }\
    \ else {\n            result[test[i]] = 1;\n        }\n    }\n    return result;\n\
    }", "    var dict = {};\n    var max_count = 1;\n    var max_letter = test[0];\n\
    \    var max_letters = [];\n    for (var i = 0; i < test.length; i++){\n     \
    \   if (test[i] in dict){\n            dict[test[i]] += 1;\n        }\n      \
    \  else{\n            dict[test[i]] = 1;\n        }\n        if (dict[test[i]]\
    \ > max_count){\n            max_letter = test[i];\n            max_count = dict[test[i]];\n\
    \            max_letters = [max_letter];\n        }\n        else if (dict[test[i]]\
    \ == max_count){\n            max_letters.push(test[i]);\n        }\n    }\n \
    \   dict = {\n        \"letter\": max_letters,\n        \"count\": max_count\n\
    \    };\n    return dict;\n}", "    var splitString = test.split(\" \");\n   \
    \ var dict = {};\n    for (i=0; i<splitString.length; i++){\n        var letter\
    \ = splitString[i];\n        if (letter in dict){\n            dict[letter] +=\
    \ 1;\n        }\n        else{\n            dict[letter] = 1;\n        }\n   \
    \ }\n    return dict;\n}\n", "    const target = test.split(\" \");\n    let targetArray\
    \ = {};\n    let maxCount = 0;\n    let best;\n    for (let i = 0; i < target.length;\
    \ i++) {\n        let letter = target[i];\n        if (!targetArray[letter]) {\n\
    \            targetArray[letter] = 1;\n        } else {\n            targetArray[letter]++;\n\
    \        }\n        if (targetArray[letter] > maxCount) {\n            maxCount\
    \ = targetArray[letter];\n            best = letter;\n        }\n    }\n    return\
    \ {maxCount: maxCount, best: best};\n}", "    var arr = {};\n    for(var i = 0;\
    \ i < test.length; i++){\n        if(arr[test[i]]){\n            arr[test[i]]\
    \ += 1;\n        } else {\n            arr[test[i]] = 1;\n        }\n    }\n \
    \   return arr;\n}", "  let split = test.split(' ');\n  let obj = {};\n  let myArr\
    \ = [];\n  let max = 0;\n  for(let i = 0; i < split.length; i++){\n    if(obj[split[i]]){\n\
    \      obj[split[i]] += 1;\n    } else {\n      obj[split[i]] = 1;\n    }\n  }\n\
    \  for(key in obj){\n    if(obj[key] > max){\n      max = obj[key];\n    }\n \
    \ }\n  for(key in obj){\n    if(obj[key] === max){\n      myArr.push(key);\n \
    \   }\n  }\n  return myArr;\n}\n\nhistogram('a b c a b'); //returns ['a']\nhistogram('a\
    \ b c d a b'); //returns ['a', 'b']\nhistogram('a b c d e f g a b c d e f g');\
    \ //returns ['a', 'b', 'c', 'd', 'e', 'f', 'g']", "  let arr = test.split(' ');\n\
    \  let obj = {};\n  let max = 0;\n  let res = [];\n  for(let i = 0; i < arr.length;\
    \ i++){\n    if(obj[arr[i]] === undefined){\n      obj[arr[i]] = 1;\n    } else\
    \ {\n      obj[arr[i]]++;\n    }\n    if(obj[arr[i]] > max){\n      max = obj[arr[i]];\n\
    \    }\n  }\n  for(let key in obj){\n    if(obj[key] === max){\n      res.push(key);\n\
    \    }\n  }\n  return res;\n}\n", "    return test.split('').reduce((acc,val)=>{\n\
    \        if(acc[val]){\n            acc[val]+=1;\n        }else{\n           \
    \ acc[val]=1;\n        }\n        return acc;\n    },{});\n}", "  let textArray\
    \ = test.split(' ');\n  let result = {};\n  let max = 0;\n  for(let i = 0; i <\
    \ textArray.length; i++){\n    if(!result[textArray[i]]){\n      result[textArray[i]]\
    \ = 1;\n    } else {\n      result[textArray[i]]++;\n    }\n    if(result[textArray[i]]\
    \ > max){\n      max = result[textArray[i]];\n    }\n  }\n  let finalResult =\
    \ {};\n  for(let key in result){\n    if(result[key] === max){\n      finalResult[key]\
    \ = result[key];\n    }\n  }\n  return finalResult;\n}\n", "    test = test.split('\
    \ ').join('');\n    let dictionary = {};\n    for(let i = 0; i < test.length;\
    \ i++){\n        if(!dictionary[test[i]]){\n            dictionary[test[i]] =\
    \ 1;\n        }\n        else{\n            dictionary[test[i]]++;\n        }\n\
    \    }\n    let max = 0;\n    let result = [];\n    for(key in dictionary){\n\
    \        if(dictionary[key] > max){\n            max = dictionary[key];\n    \
    \        result = [key];\n        }\n        else if(dictionary[key] === max){\n\
    \            result.push(key);\n        }\n    }\n    return result;\n}\n", "\n}",
  "    let arr = {};\n    for(let i = 0; i < test.length; i++){\n        if(arr[test[i]]\
    \ === undefined){\n            arr[test[i]] = 1;\n        } else {\n         \
    \   arr[test[i]]++;\n        }\n    }\n    console.log(arr);\n    return arr;\n\
    }\n\nhistogram(\"troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll troll troll troll troll troll\
    \ troll troll troll troll troll troll troll troll", "\tvar dict = {};\n\tvar count\
    \ = 1;\n\tvar max = 0;\n\tfor(var i = 0; i < test.length; i++){\n\t\tif(test[i]\
    \ == test[i+1]){\n\t\t\tcount++;\n\t\t}\n\t\telse{\n\t\t\tdict[test[i]] = count;\n\
    \t\t\tcount = 1;\n\t\t}\n\t}\n\tfor(var key in dict){\n\t\tif(dict[key] >= max){\n\
    \t\t\tmax = dict[key];\n\t\t}\n\t}\n\tvar result = [];\n\tfor(var key in dict){\n\
    \t\tif(dict[key] == max){\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\treturn result;\n\
    }", "    var o = {};\n    for (var i=0; i<test.length; i++) {\n        var char\
    \ = test[i];\n        o[char] = (o[char] || 0) + 1;\n    }\n    return o;\n}\n\
    \nvar test = 'abbccc';", "  var hist = {};\n  var maxCount = 0;\n  var maxLetter\
    \ = [];\n  var letter;\n  for (var i = 0; i < test.length; i++) {\n    letter\
    \ = test[i];\n    if (hist[letter] === undefined) {\n      hist[letter] = 1;\n\
    \    } else {\n      hist[letter] += 1;\n    }\n    if (hist[letter] > maxCount)\
    \ {\n      maxCount = hist[letter];\n      maxLetter = [letter];\n    } else if\
    \ (hist[letter] === maxCount) {\n      maxLetter.push(letter);\n    }\n  }\n \
    \ return { maxLetter: maxLetter, maxCount: maxCount };\n}\n", "    let letter\
    \ = [];\n    let obj = {};\n    for(let i = 0; i < test.length; i++){\n      \
    \  if(letter.indexOf(test[i]) === -1){\n            letter.push(test[i]);\n  \
    \          obj[test[i]] = 1;\n        } else {\n            obj[test[i]] += 1;\n\
    \        }\n    }\n    // console.log(obj);\n    let max = 0;\n    let maxArr\
    \ = [];\n    for(let i = 0; i < letter.length; i++){\n        if(obj[letter[i]]\
    \ > max){\n            max = obj[letter[i]];\n            maxArr = [letter[i]];\n\
    \        } else if(obj[letter[i]] === max){\n            maxArr.push(letter[i]);\n\
    \        }\n    }\n    return maxArr;\n}", "  // split test string into separate\
    \ characters\n  var testSplit = test.split(\"\");\n  //assign histogram object\n\
    \  var histogram = {};\n  //loop through array\n  for (var i = 0; i < testSplit.length;\
    \ i++) {\n    //if element is not in object\n    if (histogram[testSplit[i]] ===\
    \ undefined) {\n      //add to object as property with value of 1\n      histogram[testSplit[i]]\
    \ = 1;\n    }\n    //if element is in object\n    else {\n      //add 1 to value\n\
    \      histogram[testSplit[i]] += 1;\n    }\n  }\n  return histogram;\n}\n", " \
    \ var test = test.split(\" \");\n  var l = test.length;\n  var obj = {};\n  for(var\
    \ i = 0; i < l; i++){\n    var letter = test[i];\n    if(!obj[letter]){\n    \
    \  obj[letter] = 1;\n    } else {\n      obj[letter] = obj[letter] + 1;\n    }\n\
    \  }\n  var max = 0;\n  var maxs = [];\n  for(var key in obj){\n    if(obj[key]\
    \ >= max){\n      max = obj[key];\n      maxs.push(key);\n    }\n  }\n  return\
    \ maxs;\n}", "  var results = {};\n  var count = 1;\n  var maxCount = 1;\n  var\
    \ mostFrequent = test[0];\n  for(var i = 0; i < test.length; i++){\n    for(var\
    \ j = i + 1; j < test.length; j++){\n      if(test[i] == test[j]){\n        count++;\n\
    \        if(count > maxCount){\n          maxCount = count;\n          mostFrequent\
    \ = test[i];\n        }\n      }\n    }\n    count = 1;\n  }\n  results[mostFrequent]\
    \ = maxCount;\n  return results;\n}\n", "    const mapp={};\n    for(let i=0;i<test.length;i++){\n\
    \        if(!mapp[test[i]]){\n            mapp[test[i]]=1;\n        }else{\n \
    \           mapp[test[i]]++;\n        }\n    }\n    let maxval=0;\n    for(let\
    \ key in mapp){\n        if(mapp[key]>maxval){\n            maxval=mapp[key];\n\
    \        }\n    }\n    const final={};\n    for(let key in mapp){\n        if(mapp[key]===maxval){\n\
    \            final[key]=mapp[key];\n        }\n    }\n    return final;\n}", " \
    \ return test.split('').reduce(function(acc, val){\n    if (acc[val]){\n     \
    \ acc[val] += 1;\n    } else {\n      acc[val] = 1;\n    }\n    return acc;\n\
    \  }, {});\n}", "   var letterDictionary = {};\n   var mostUsedLetter = [];\n\
    \   var mostUsedCount = 0;\n   for(var i = 0; i < test.length; i++){\n      if(letterDictionary[test[i]]\
    \ === undefined){\n         letterDictionary[test[i]] = 1;\n      }\n      else{\n\
    \         letterDictionary[test[i]]++;\n      }\n      if(letterDictionary[test[i]]\
    \ > mostUsedCount){\n         mostUsedCount = letterDictionary[test[i]];\n   \
    \      mostUsedLetter = [test[i]];\n      }\n      else if(letterDictionary[test[i]]\
    \ === mostUsedCount){\n         mostUsedLetter.push(test[i]);\n      }\n   }\n\
    \   return mostUsedLetter;\n}", "  let longest = test.split(' ');\n  let hist\
    \ = {};\n  let max = 0;\n  let keys = [];\n  for(let i = 0; i < longest.length;\
    \ i++){\n    if(hist[longest[i]] === undefined){\n      hist[longest[i]] = 1;\n\
    \    }\n    else{\n      hist[longest[i]] += 1;\n    }\n  }\n  console.log(hist);\n\
    \  for(let key in hist){\n    if(hist[key] > max){\n      max = hist[key];\n \
    \     keys = [];\n      keys.push(key);\n    }\n    else if(hist[key] === max){\n\
    \      keys.push(key);\n    }\n  }\n  return keys;\n}\n", "    let dict = {};\n\
    \    let list = test.split(\" \");\n    for(let i = 0; i < list.length; i++){\n\
    \        if(dict[list[i]]){\n            dict[list[i]] = dict[list[i]] + 1;\n\
    \        }\n        else{\n            dict[list[i]] = 1;\n        }\n    }\n\
    \    console.log(dict);\n    let max = 0;\n    let key = \"\";\n    for(let element\
    \ in dict){\n        if(dict[element] > max){\n            max = dict[element];\n\
    \            key = element;\n        }\n    }\n    console.log(key + \": \" +\
    \ max);\n}\n\nhistogram(\"a b c a c d a b c e b e a b c d c a b e c a b e c a\
    \ b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e\
    \ c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a\
    \ b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e\
    \ c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a\
    \ b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e\
    \ c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a\
    \ b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e\
    \ c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a b e c a\
    \ b e c a b e c a b e", "    let dictionary = {};\n    let max = 0;\n    let result\
    \ = [];\n    for(let i = 0; i < test.length; i++){\n        if(dictionary[test[i]]){\n\
    \            dictionary[test[i]] += 1;\n        } else {\n            dictionary[test[i]]\
    \ = 1;\n        }\n    }\n    for(let key in dictionary){\n        if(dictionary[key]\
    \ > max){\n            max = dictionary[key];\n        }\n    }\n    for(let key\
    \ in dictionary){\n        if(dictionary[key] === max){\n            result.push(key);\n\
    \        }\n    }\n    return result;\n}", "    var histo = {};\n    for (var\
    \ i = 0; i < test.length; i++) {\n        var character = test[i];\n        if\
    \ (histo[character]) {\n            histo[character]++;\n        } else {\n  \
    \          histo[character] = 1;\n        }\n    }\n    return histo;\n}\n", " \
    \   var strArray = test.split(' ');\n    var dict = {};\n    var count = 0;\n\
    \    for(var i = 0; i < strArray.length; i++){\n        if(dict[strArray[i]]){\n\
    \            dict[strArray[i]] += 1;\n        }\n        else{\n            dict[strArray[i]]\
    \ = 1;\n        }\n    }\n    return dict;\n}\nvar test = \"a b b c c c d d d\
    \ d e e e e e e f f f f f f f g g g g g g g g h h h h h h h h h i i i i i i i\
    \ i i i j j j j j j j j j j j k k k k k k k k k k k k l l l l l l l l l l l l\
    \ l m m m m m m m m m m m m m m n n n n n n n n n n n n n n n o o o o o o o o\
    \ o o o o o o o p p p p p p p p p p p p p p p p q q q q q q q q q q q q q q q\
    \ q q r r r r r r r r r r r r r r r r r s s s s s s s s s s s s s s s s s s t\
    \ t t t t t t t t t t t t t t t t t u u u u u u u u u u u u u u u u u u u u v\
    \ v v v v v v v v v v v v v v v v v v v w w w w w w w w w w w w w w w w w w w\
    \ w x x x x x x x x x x x x x x x x x x x x y y y y y y y y y y y y y y y y y\
    \ y y y z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z z\";\nvar\
    \ hist = histogram(test);\nvar max = 0;\nvar maxArray = [];\nfor(i in hist){\n\
    \    if(hist[i] >= max){\n        max = hist[i];\n        maxArray.push(i);\n",
  "  let arr = test.split(\" \")\n  let max = 0\n  let maxLetters = []\n  arr.forEach(function(x){\n\
    \    if(x.length > max){\n      max = x.length\n      maxLetters = [x]\n    }\n\
    \    else if(x.length === max){\n      maxLetters.push(x)\n    }\n  })\n  return\
    \ maxLetters\n}", "  var arr = test.split(\" \");\n  var res = {};\n  for(var\
    \ i = 0; i < arr.length; i++){\n    if(res[arr[i]] === undefined){\n      res[arr[i]]\
    \ = 1;\n    } else {\n      res[arr[i]] += 1;\n    }\n  }\n  var max = 0;\n  var\
    \ obj = {};\n  for(var key in res){\n    if(res[key] > max){\n      max = res[key];\n\
    \      obj = {};\n      obj[key] = max;\n    } else if(res[key] === max){\n  \
    \    obj[key] = max;\n    }\n  }\n  return obj;\n}\n\nhistogram(\"a b c d a a\
    \ e f g h a b c\");", "  //Empty dictionary to save the result\n  var letterCount\
    \ = {};\n  var maxLetter = 0;\n  var result = [];\n  //Iterate over the string\n\
    \  for(var i = 0; i < test.length; i++){\n    //Check if the letter is already\
    \ in the dictionary\n    if(test[i] in letterCount){\n      //If so, increment\
    \ the value\n      letterCount[test[i]] += 1;\n    } else {\n      //Otherwise,\
    \ add the letter as a key with a value of 1\n      letterCount[test[i]] = 1;\n\
    \    }\n    //Check if the letter's value is greater than the maxLetter\n    if(letterCount[test[i]]\
    \ > maxLetter){\n      //If so, make the letter's value the new maxLetter\n  \
    \    maxLetter = letterCount[test[i]];\n    }\n  }\n  //Iterate over the dictionary\n\
    \  for(var k in letterCount){\n    //Check if the letter's value is equal to the\
    \ maxLetter\n    if(letterCount[k] === maxLetter){\n      //If so, add it to the\
    \ result list\n      result.push(k);\n    }\n  }\n  //Return the result\n  return\
    \ result;\n}", "    let counts = {};\n    let letters = Object.keys(test);\n \
    \   let maxValue = 0;\n    let maxKey = [];\n    let finalResult = {};\n    for\
    \ (let i = 0; i < letters.length; i++) {\n        let letter = letters[i];\n \
    \       if (counts[letter] === undefined) {\n            counts[letter] = 1;\n\
    \        } else {\n            counts[letter] = counts[letter] + 1;\n        }\n\
    \    }\n    for (let letter in counts) {\n        if (counts[letter] > maxValue)\
    \ {\n            maxValue = counts[letter];\n            maxKey = [];\n      \
    \      maxKey.push(letter);\n        } else if (counts[letter] === maxValue) {\n\
    \            maxKey.push(letter);\n        }\n    }\n    finalResult[maxKey] =\
    \ maxValue;\n    return finalResult;\n}\nconst test = {\n    \"a\": 5,\n    \"\
    b\": 7,\n    \"c\": 3,\n    \"d\": 10,\n    \"e\": 3,\n    \"f\": 3,\n    \"g\"\
    : 8,\n    \"h\": 12,\n    \"i\": 5,\n    \"j\": 1,\n    \"k\": 1,\n    \"l\":\
    \ 2,\n    \"m\": 2,\n    \"n\": 3,\n    \"o\": 2,\n    \"p\": 3,\n    \"q\": 1,\n\
    \    \"r\": 2,\n    \"s\": 2,\n    \"t\": 7,\n    \"u\": 2,\n    \"v\": 2,\n \
    \   \"w\": 2,\n    \"x\": 1,\n    \"y\": 1,\n    \"z\": 1\n};", "    var hist\
    \ = {}\n    var max = 0\n    var histArray = {}\n    for (var i = 0; i < test.length;\
    \ i++){\n        if (hist[test[i]]){\n            hist[test[i]] += 1\n       \
    \ }\n        else {\n            hist[test[i]] = 1\n        }\n    }\n    for\
    \ (var key in hist){\n        var arr = hist[key]\n        if (arr > max){\n \
    \           max = arr\n        }\n    }\n    for (var key in hist){\n        if\
    \ (hist[key] === max){\n            histArray[key] = max\n        }\n    }\n \
    \   return histArray\n}", "  let obj = {};\n  test.split(\"\").forEach(el => {\n\
    \    obj[el] ? obj[el]++ : obj[el] = 1;\n  });\n  let max = Math.max(...Object.values(obj));\n\
    \  let result = {};\n  Object.keys(obj).forEach(el => {\n    if (obj[el] === max)\
    \ {\n      result[el] = max;\n    }\n  });\n  return result;\n}", "  var words\
    \ = {};\n  var t = test.split(\" \");\n  var max = 0;\n  for(var i = 0; i < t.length;\
    \ i++){\n    if(words[t[i]] === undefined){\n      words[t[i]] = 1;\n    }\n \
    \   else{\n      words[t[i]] += 1;\n    }\n    if(words[t[i]] > max){\n      max\
    \ = words[t[i]];\n    }\n  }\n  var key = []\n  for(var k in words){\n    if(words[k]\
    \ === max){\n      key.push(k);\n    }\n  }\n  var answer = {};\n  answer[key]\
    \ = max;\n  return answer;\n}", "  let histoObj = {};\n  let maxCount = 0;\n \
    \ let maxKeys = [];\n  for (let index = 0; index < test.length; index++) {\n \
    \   let currentLetter = test[index];\n    if (histoObj[currentLetter] === undefined)\
    \ {\n      histoObj[currentLetter] = 1;\n    } else {\n      histoObj[currentLetter]\
    \ += 1;\n    }\n    if (histoObj[currentLetter] > maxCount) {\n      maxCount\
    \ = histoObj[currentLetter];\n      maxKeys = [currentLetter];\n    } else if\
    \ (histoObj[currentLetter] === maxCount) {\n      maxKeys.push(currentLetter);\n\
    \    }\n  }\n  return {[maxKeys]: maxCount};\n}", "  //create an empty dictionary\n\
    \  var letterCount = {}\n  //iterate through the string and count the letters\n\
    \  for (var i = 0; i < test.length; i++){\n    var current = test[i]\n    if (letterCount[current]===undefined){\n\
    \      letterCount[current] = 1\n    } else {\n      letterCount[current] += 1\n\
    \    }\n  }\n  // find the letter with the highest count\n  var highest = 0\n\
    \  var maxLetters = []\n  for (var key in letterCount){\n    if (letterCount[key]\
    \ > highest){\n      highest = letterCount[key]\n      maxLetters = [key]\n  \
    \  } else if (letterCount[key] === highest){\n      maxLetters.push(key)\n   \
    \ }\n  }\n  return maxLetters\n}\n\n\ndescribe('histogram', function() {\n  it('should\
    \ be a function', function(){\n    expect(histogram).to.be.a('function')\n  })\n\
    \  it('should return an array', function(){\n    expect(histogram('test')).to.be.a('array')\n\
    \  })\n  it('should return an array of the letters with the most repetition',\
    \ function(){\n    expect(histogram('test')).to.deep.equal(['t'])\n  })\n  it('should\
    \ return an array of the letters with the most repetition, even if there are multiple\
    \ letters', function(){\n    expect(histogram('timetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimetimet",
  "  const dict = {};\n  for (let i = 0; i < test.length; i++) {\n    if (dict[test[i]])\
    \ {\n      dict[test[i]] += 1;\n    } else {\n      dict[test[i]] = 1;\n    }\n\
    \  }\n  let max = 0;\n  let results = [];\n  for (let prop in dict) {\n    if\
    \ (dict[prop] > max) {\n      max = dict[prop];\n      results = [prop];\n   \
    \ } else if (dict[prop] === max) {\n      results.push(prop);\n    }\n  }\n  return\
    \ {[results]: max};\n}", "    let result = {};\n    let maxCount = 0;\n    let\
    \ chars = test.split('');\n    for(let i = 0; i < chars.length; i++){\n      \
    \  if(!result[chars[i]]){\n            result[chars[i]] = 1;\n        } else {\n\
    \            result[chars[i]]++;\n        }\n        if(result[chars[i]] > maxCount){\n\
    \            maxCount = result[chars[i]];\n        }\n    }\n    let maxChars\
    \ = [];\n    for(let k in result){\n        if(result[k] === maxCount){\n    \
    \        maxChars.push(k);\n        }\n    }\n    return {\"maxCount\": maxCount,\
    \ \"maxChars\": maxChars};\n}", "  var arr = test.split(\" \");\n  var dict =\
    \ {};\n  for(var i = 0; i < arr.length; i++){\n    var count = 0;\n    for(var\
    \ j = 0; j < arr.length; j++){\n      if(arr[i] == arr[j]){\n        count++;\n\
    \      }\n    }\n    if(!(arr[i] in dict)){\n      dict[arr[i]] = count;\n   \
    \ }\n  }\n  var most = 0;\n  var result = {};\n  for(var key in dict){\n    if(dict[key]\
    \ > most){\n      most = dict[key];\n    }\n  }\n  for(var key in dict){\n   \
    \ if(dict[key] == most){\n      result[key] = most;\n    }\n  }\n  return result;\n\
    }", "    var dictionary = {};\n    var max = 1;\n    var letter = test[0];\n \
    \   for(var i = 0; i < test.length; i++){\n        if(dictionary[test[i]] == null){\n\
    \            dictionary[test[i]] = 1;\n        }\n        else{\n            dictionary[test[i]]\
    \ += 1;\n        }\n        if(dictionary[test[i]] > max){\n            max =\
    \ dictionary[test[i]];\n            letter = test[i];\n        }\n    }\n    var\
    \ answer = [];\n    for(var key in dictionary){\n        if(dictionary[key] ==\
    \ max){\n            answer.push(key);\n        }\n    }\n    return answer;\n\
    }", "\ttest = test.split(' ').join('').split('');\n\tvar dict = {};\n\tfor(var\
    \ i = 0; i < test.length; i++){\n\t\tvar letter = test[i];\n\t\tdict[letter] =\
    \ dict[letter] === undefined ? 1 : dict[letter] + 1;\n\t}\n\tvar max = Object.keys(dict).reduce(function(prev,\
    \ curr){\n\t\treturn dict[prev] > dict[curr] ? prev : curr;\n\t});\n\treturn {[max]:\
    \ dict[max]};\n}\n", "    let letters = {};\n    let max = 0;\n    let maxLetter\
    \ = [];\n    let split = test.split(' ');\n    for(let i = 0; i < split.length;\
    \ i++){\n        if(!letters[split[i]]){\n            letters[split[i]] = 1;\n\
    \        }\n        else{\n            letters[split[i]] += 1;\n        }\n  \
    \  }\n    for(let char in letters){\n        if(letters[char] > max){\n      \
    \      max = letters[char];\n            maxLetter = [char];\n        }\n    \
    \    else if(letters[char] === max){\n            maxLetter.push(char);\n    \
    \    }\n    }\n    return maxLetter;\n}", "    let results = {};\n    let max\
    \ = 0;\n    for(i = 0; i < test.length; i++){\n        if(results[test[i]]){\n\
    \            results[test[i]]++;\n        }\n        else{\n            results[test[i]]\
    \ = 1;\n        }\n        if(results[test[i]] > max){\n            max = results[test[i]];\n\
    \        }\n    }\n    var keys = Object.keys(results).filter(function(x){\n \
    \       return results[x] == max;\n    });\n    return {[keys]: max};\n}", "\t\
    var dict = {};\n\tvar temp = [];\n\tvar test = test.split(' ');\n\ttest.forEach(function(i){\n\
    \t\tif (dict[i] !== undefined){\n\t\t\tdict[i] += 1;\n\t\t}\n\t\telse {\n\t\t\t\
    dict[i] = 1;\n\t\t}\n\t});\n\tvar max = Math.max.apply(null, Object.values(dict));\n\
    \tfor (var letter in dict){\n\t\tif (dict[letter] === max){\n\t\t\ttemp.push(letter);\n\
    \t\t}\n\t}\n\treturn {\n\t\tletter: temp,\n\t\tcount: max\n\t};\n}\n\nvar test\
    \ = \"hello hello hello\";", "  var o = {};\n  var length = test.length;\n  for\
    \ (var i = 0; i < length; i++) {\n    if (test[i] !== \" \") {\n      if (o[test[i]]\
    \ === undefined) {\n        o[test[i]] = 1;\n      } else {\n        o[test[i]]++;\n\
    \      }\n    }\n  }\n  console.log(o);\n  var max = 0;\n  var result = [];\n\
    \  for (var j in o) {\n    if (o[j] >= max) {\n      max = o[j];\n    }\n  }\n\
    \  for (var k in o) {\n    if (o[k] === max) {\n      result.push(k);\n    }\n\
    \  }\n  console.log(result);\n  return result;\n}\n\nhistogram(\"a b c d b\");\
    \ // -> {a: 1, b: 2, c: 1, d: 1}\nhistogram(\"a b b c d e f g g f\"); // -> {a:\
    \ 1, b: 2, c: 1, d: 1, e: 1, f: 2, g: 2}\nhistogram(\"f g g f\"); // -> {f: 2,\
    \ g: 2}\nhistogram(\"g f\"); // -> {f: 1, g: 1}\nhistogram(\"g\"); // -> {g: 1}\n\
    histogram(\"\"); // -> {}\n", "  //var hist = {};\n  var hist = test.split('').reduce(function(hist,\
    \ value){\n    //console.log(value);\n    hist[value] = hist[value] || 0;\n  \
    \  hist[value] += 1;\n    return hist;\n  },{});\n  var max = Math.max.apply(null,\
    \ Object.keys(hist).map(function(value){\n    return hist[value];\n  }));\n  console.log(hist);\n\
    \  return Object.keys(hist).reduce(function(obj, value){\n    //console.log(value);\n\
    \    if(hist[value] === max){\n      obj[value] = hist[value];\n    }\n    return\
    \ obj;\n  },{});\n}", "    var result = {};\n    for(var i = 0; i < test.length;\
    \ i++){\n        if(!result[test[i]]){\n            result[test[i]] = 1;\n   \
    \     }\n        else{\n            result[test[i]] += 1;\n        }\n    }\n\
    \    return result;\n}\n", "  var obj = {};\n  var results = {};\n  var big =\
    \ 0;\n  for(var i = 0; i < test.length; i++){\n    if(obj[test[i]]){\n      obj[test[i]]++;\n\
    \    } else {\n      obj[test[i]] = 1;\n    }\n  }\n  for(var key in obj){\n \
    \   if(obj[key] > big){\n      big = obj[key];\n    }\n  }\n  for(var keys in\
    \ obj){\n    if(obj[keys] === big){\n      results[keys] = big;\n    }\n  }\n\
    \  return results;\n}\n", "  //function will take in a string\n  var hist = {};\n\
    \  // split the string into an array of characters\n  var arr = test.split('');\n\
    \  // iterate through the array\n  for (var i = 0; i < arr.length; i++) {\n  \
    \  // if the character is a key in the histogram\n    if (hist[arr[i]]) {\n  \
    \    //increment the value of the key by 1\n      hist[arr[i]]++;\n    } else\
    \ {\n      //otherwise\n      //set the value of the key to 1\n      hist[arr[i]]\
    \ = 1;\n    }\n  }\n  // find the max value in the histogram\n  var max = 0;\n\
    \  for (var key in hist) {\n    if (hist[key] > max) {\n      max = hist[key];\n\
    \    }\n  }\n  // iterate through the histogram again\n  var answer = {};\n  for\
    \ (var key in hist) {\n    // if the value in the histogram equals the max value\n\
    \    if (hist[key] === max) {\n      // then set the key:value pair in the answer\
    \ object\n      answer[key] = max;\n    }\n  }\n  // return the answer object\n\
    \  return answer;\n}\n", "  var arr = test.split(\"\");\n  arr.sort();\n  var\
    \ obj = {};\n  for(var i = 0; i < arr.length; i++){\n    if(obj[arr[i]]){\n  \
    \    obj[arr[i]]++;\n    }else{\n      obj[arr[i]] = 1;\n    }\n  }\n  var maxCount\
    \ = 0;\n  var maxLetter = [];\n  for(var letter in obj){\n    if(obj[letter] >\
    \ maxCount){\n      maxCount = obj[letter];\n      maxLetter = [letter];\n   \
    \ }\n    else if(obj[letter] === maxCount){\n      maxLetter.push(letter);\n \
    \   }\n  }\n  console.log(maxLetter);\n  return maxLetter;\n}\nhistogram(\"abbbcccccdddd\"\
    );\n", "  var dict = {};\n  var arr = test.split(\" \");\n  var count = 0;\n \
    \ var biggest = 0;\n  for(var i = 0; i < arr.length; i++){\n    count = 0;\n \
    \   if(arr[i] in dict){\n      dict[arr[i]]++;\n    }\n    else{\n      dict[arr[i]]\
    \ = 1;\n    }\n    for(var char in dict){\n      if(dict[char] > count){\n   \
    \     count = dict[char];\n        biggest = char;\n      }\n    }\n  }\n  for(var\
    \ char in dict){\n    if(dict[char] === count){\n      console.log(char + \":\
    \ \" + dict[char]);\n    }\n  }\n}\nhistogram(\"a b c d a\");\nhistogram(\"a b\
    \ c a b b\");\nhistogram(\"a b b b b c c c d e e e e e\");", "    var ans={};\n\
    \    test.split(\"\").forEach(function(a){\n        ans[a]? ans[a]++ : ans[a]=1;\n\
    \    });\n    var max=Object.keys(ans).reduce(function(a,b){return ans[a]>ans[b]?a:b});\n\
    \    return (Object.keys(ans).filter(function(a){return ans[a]===ans[max]}));\n\
    }", "  var hist = {};\n  test.split('').forEach(function(letter){\n    if(!hist[letter]){\n\
    \      hist[letter] = 1;\n    } else {\n      hist[letter] += 1;\n    }\n  });\n\
    \  var maxVal = 0;\n  for(var k in hist){\n    if(hist[k] > maxVal){\n      maxVal\
    \ = hist[k];\n    }\n  }\n  var maxKeys = [];\n  for(var k in hist){\n    if(hist[k]\
    \ === maxVal){\n      maxKeys.push(k);\n    }\n  }\n  return maxKeys;\n}\n\nvar\
    \ test = \"aaabbc\";", "  let letterCount = {}\n  for(let i = 0; i < test.length;\
    \ i++){\n    if(letterCount[test[i]]){\n      letterCount[test[i]]++\n    } else\
    \ {\n      letterCount[test[i]] = 1\n    }\n  }\n  return letterCount\n}\n", " \
    \ let myDict = {};\n  test.split(\"\").forEach(x => {\n    if(myDict[x]){\n  \
    \    myDict[x] += 1;\n    } else {\n      myDict[x] = 1;\n    }\n  });\n  let\
    \ max = Math.max(...Object.values(myDict));\n  let myFinalDict = {};\n  for(let\
    \ key in myDict){\n    if(myDict[key] === max){\n      myFinalDict[key] = myDict[key];\n\
    \    }\n  }\n  return myFinalDict;\n}\n", "  var dict={};\n  var count=[];\n \
    \ var max=0;\n  var array=test.split(\" \");\n  for(var i=0;i<array.length;i++){\n\
    \    if(array[i] in dict){\n      dict[array[i]]+=1;\n    }\n    else{\n     \
    \ dict[array[i]]=1;\n    }\n  }\n  for(var a in dict){\n    if(dict[a]>max){\n\
    \      max=dict[a];\n    }\n  }\n  for(var b in dict){\n    if(dict[b]==max){\n\
    \      count.push(b);\n    }\n  }\n  var out=count.join(\" \");\n  return out+\"\
    \ \"+max;\n}", "  var obj = {};\n  var max = 0;\n  var maxes = [];\n  var arr\
    \ = test.split(' ');\n  for(var i = 0; i < arr.length; i++){\n    if(!obj[arr[i]]){\n\
    \      obj[arr[i]] = 1;\n    } else {\n      obj[arr[i]]++;\n    }\n  }\n  for(var\
    \ key in obj){\n    if(obj[key] > max){\n      max = obj[key];\n      maxes =\
    \ [];\n      maxes.push(key);\n    } else if(obj[key] === max){\n      maxes.push(key);\n\
    \    }\n  }\n  return {[maxes.join(', ')]: max};\n}\n", "    var myMap = new Map();\n\
    \    var letterArray = test.split(\" \");\n    var tempArray = new Array();\n\
    \    var count = 0;\n    var temp = 0;\n    for(var i = 0; i < letterArray.length;\
    \ i++){\n        if(!myMap.has(letterArray[i])){\n            count = 0;\n   \
    \         for(var j = 0; j < letterArray.length; j++){\n                if(letterArray[i]\
    \ == letterArray[j]){\n                    count++;\n                }\n     \
    \       }\n            myMap.set(letterArray[i], count);\n        }\n    }\n \
    \   for(var [key, value] of myMap){\n        if(value > temp){\n            temp\
    \ = value;\n            tempArray = [];\n            tempArray.push(key);\n  \
    \      }\n        else if(value == temp){\n            tempArray.push(key);\n\
    \        }\n    }\n    console.log(tempArray);\n}\nhistogram(\"a b b c c c\");\
    \ // returns [\"c\"]\nhistogram(\"a b b c c\"); // returns [\"b\", \"c\"]\nhistogram(\"\
    a a a b b c c c\"); // returns [\"a\", \"c\"]\nhistogram(\"a b c d e f\"); //\
    \ returns [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]", "    var result = {};\n\
    \    test.split(\"\").forEach(function(item){\n        var key = item;\n     \
    \   result[key] = (result[key] || 0) + 1;\n    });\n    console.log(result);\n\
    }\nhistogram(\"abcbcd\");\n", "\tvar array = test.split(' ');\n\tvar histo = {};\n\
    \tvar max = 0;\n\tfor(var i = 0; i < array.length; i++){\n\t\tif(array[i] in histo){\n\
    \t\t\thisto[array[i]]++;\n\t\t}\n\t\telse{\n\t\t\thisto[array[i]] = 1;\n\t\t}\n\
    \t\tif(histo[array[i]] > max){\n\t\t\tmax = histo[array[i]];\n\t\t}\n\t}\n\tvar\
    \ answer = [];\n\tfor(var key in histo){\n\t\tif(histo[key] == max){\n\t\t\tanswer.push(key);\n\
    \t\t}\n\t}\n\treturn answer;\n}", "  let count = 0;\n  let  biggest = 0;\n  let\
    \ x;\n  let y;\n  let myObj = {};\n  for(let i = 0; i < test.length; i++){\n \
    \   let a = test[i];\n    if(a in myObj){\n      myObj[a] += 1;\n    }else{\n\
    \      myObj[a] = 1;\n    }\n  }\n  for(let key in myObj){\n    let prop = myObj[key];\n\
    \    if(prop > biggest){\n      biggest = prop;\n      x = key;\n    }\n  }\n\
    \  for(let key in myObj){\n    let prop = myObj[key];\n    if(prop === biggest){\n\
    \      count++;\n    }\n  }\n  if(count > 1){\n    for(let key in myObj){\n  \
    \    let prop = myObj[key];\n      if(prop === biggest){\n        y = key;\n \
    \     }\n    }\n    return {\"two\":[x,y],\"count\":biggest};\n  }else{\n    return\
    \ {\"one\":x,\"count\":biggest};\n  }\n}\n", "    let count = 0;\n    let output\
    \ = {};\n    let current = '';\n    let arr = test.split('');\n    let obj = {};\n\
    \    for(let i = 0; i < arr.length; i++){\n        let letter = arr[i];\n    \
    \    if(obj[letter]){\n            obj[letter]++;\n        } else {\n        \
    \    obj[letter] = 1;\n        }\n    }\n    console.log(obj);\n    for(let key\
    \ in obj){\n        if(obj[key] > count){\n            count = obj[key];\n   \
    \         current = key;\n        }\n    }\n    output[current] = count;\n   \
    \ return output;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

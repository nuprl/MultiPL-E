name: HumanEval_99_closest_integer
language: js
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = closest_integer;\n  assert.deepEqual(candidate(\"10\"),10);\n  assert.deepEqual(candidate(\"\
  14.5\"),15);\n  assert.deepEqual(candidate(\"-15.5\"),-16);\n  assert.deepEqual(candidate(\"\
  15.3\"),15);\n  assert.deepEqual(candidate(\"0\"),0);\n}\n\ntest();"
completions: ["  let split = value.split('.');\n  let num = parseInt(split[0]);\n\
    \  let decimal = Number('0.' + split[1]);\n  let num2 = num + 1;\n  let ifDecimal\
    \ = '';\n  if(decimal < 0.5){\n    ifDecimal = 'Round down';\n  }else{\n    ifDecimal\
    \ = 'Round up';\n  }\n  console.log(num);\n  console.log(decimal);\n  console.log(num2);\n\
    \  console.log(ifDecimal);\n}\nclosest_integer('14.5');\nclosest_integer('-14.5');\n\
    closest_integer('-19.5');\nclosest_integer('19.5');\nclosest_integer('24.5');\n\
    closest_integer('-24.5');", "  let num = Number(value);\n  let closest = Math.round(num);\n\
    \  return closest;\n}", "    return Math.round(value);\n}", "  return Math.round(parseFloat(value));\n\
    }\n
  "    return value > 0 ? Math.ceil(value) : Math.floor(value);\n}", "    //take the\
    \ string as a float\n    var closest = Math.round(parseFloat(value));\n    //return\
    \ the rounded number\n    return closest;\n}", "\tvar value = Number(value);\n\
    \tvar a = Math.round(value);\n\tvar b = Math.ceil(value);\n\tvar c = Math.floor(value);\n\
    \tif (a - value > 0.5) {\n\t\treturn c;\n\t}\n\tif (a - value < 0.5) {\n\t\treturn\
    \ b;\n\t}\n\tif (a - value === 0.5) {\n\t\treturn b;\n\t}\n}", "  return Math.round(parseFloat(value));\n\
    }\n", "\tvalue = parseFloat(value);\n\tlet floor = Math.floor(value);\n\tlet ceil\
    \ = Math.ceil(value);\n\tif(value % 1 == 0) return value;\n\tif(value - floor\
    \ < 0.5) return floor;\n\tif(ceil - value < 0.5) return ceil;\n\treturn Math.round(value);\n\
    }\n", "    let whole = Math.round(value);\n    if(whole === 0){\n        return\
    \ whole;\n    }else if(whole === value){\n        return whole;\n    }else if(whole\
    \ > value){\n        let lower = Math.floor(value);\n        let diff = whole\
    \ - value;\n        let up = whole - diff;\n        if(value < 0){\n         \
    \   return lower;\n        }else{\n            return up;\n        }\n    }else\
    \ if(whole < value){\n        let upper = Math.ceil(value);\n        let diff\
    \ = value - whole;\n        let low = whole + diff;\n        if(value < 0){\n\
    \            return low;\n        }else{\n            return upper;\n        }\n\
    \    }\n}", "    let roundedVal = Math.round(value);\n    let flooredVal = Math.floor(value);\n\
    \    let ceiledVal = Math.ceil(value);\n    if (value % 1 === 0) {\n        return\
    \ value;\n    }\n    if (value < 0) {\n        if (value - flooredVal >= ceiledVal\
    \ - value) {\n            return flooredVal;\n        } else {\n            return\
    \ ceiledVal;\n        }\n    } else {\n        if (ceiledVal - value >= value\
    \ - flooredVal) {\n            return flooredVal;\n        } else {\n        \
    \    return ceiledVal;\n        }\n    }\n}\n", "    let num = Math.round(Number(value))\n\
    \    return num\n}", "    return Math.round(value);\n  }\n  \n  console.log(closest_integer(\"\
    13.5\")); //14\n  console.log(closest_integer(\"-13.5\")); //-14\n  console.log(closest_integer(\"\
    14.5\")); //15\n  console.log(closest_integer(\"-14.5\")); //-15\n  \n  \n  //5.Write\
    \ a function that takes a string and returns true or false\n  // depending on\
    \ whether or not the string is a palindrome.\n  // A palindrome is a string that\
    \ is spelled the same backwards\n  // and forwards.\n  // Examples\n  // is_palindrome(\"\
    \") \u279E true\n  // is_palindrome(\"a\") \u279E true\n  // is_palindrome(\"\
    abba\") \u279E true\n  // is_palindrome(\"racecar\") \u279E true\n  // is_palindrome(\"\
    helloworld\") \u279E false\n  // is_palindrome(\"abcdefghijklmnopqrstuvwxyz\"\
    ) \u279E false\n  function is_palindrome(str){\n    if(str === ''){\n      return\
    \ true;\n    }\n    if(str === str.split('').reverse().join('')){\n      return\
    \ true;\n    }\n    return false;\n  }\n  \n  console.log(is_palindrome(\"\"));\
    \ //true\n  console.log(is_palindrome(\"a\")); //true\n  console.log(is_palindrome(\"\
    abba\")); //true\n  console.log(is_palindrome(\"racecar\")); //true\n  console.log(is_palindrome(\"\
    helloworld\")); //false\n  console.log(is_palindrome(\"abcdefghijklmnopqrstuvwxyz\"\
    )); //false\n  \n  \n  //6.Write a function that takes an integer and returns\
    \ the number\n  // with its digits reversed.\n  // Examples\n  // reverse_integer(1234)\
    \ \u279E 4321\n  // reverse_integer(12) \u279E 21\n  // reverse_integer(0)", " \
    \   return Math.round(parseFloat(value));\n}\n", "    if(value >= 0){\n      \
    \  return Math.ceil(value);\n    }\n    return Math.floor(value);\n}\n\nvar a\
    \ = closest_integer(2.8);", "  return Math.round(value);\n}\n", "    var num =\
    \ Math.round(value);\n    if(value - num >= .5){\n        return num + 1;\n  \
    \  }\n    return num;\n}", "  let valueFloat = parseFloat(value);\n  let valueInt\
    \ = parseInt(value);\n  if(valueFloat-valueInt === 0.5){\n    if(valueFloat>0){\n\
    \      return valueInt+1;\n    }else{\n      return valueInt-1;\n    }\n  }else{\n\
    \    return Math.round(valueFloat);\n  }\n}", "  var num = value.toString();\n\
    \  var arr = num.split(\".\");\n  if(arr[1][0] < 5){\n    return Number(arr[0]);\n\
    \  }\n  return Number(arr[0]) + 1;\n}\n", "  let num = parseFloat(value);\n  return\
    \ num > 0 ? Math.ceil(num) : Math.floor(num);\n}\n", "    let n = Math.floor(value);\n\
    \    let isEven = n % 2 === 0;\n    let m = value - n;\n    if(m > 0.5){\n   \
    \     if(isEven){\n            return n + 2;\n        }else{\n            return\
    \ n + 1;\n        }\n    }else if(m < 0.5){\n        if(isEven){\n           \
    \ return n;\n        }else{\n            return n + 1;\n        }\n    }else{\n\
    \        if(value > 0){\n            return n + 1;\n        }else{\n         \
    \   return n - 1;\n        }\n    }\n}", "  let sign = Math.sign(value);\n  let\
    \ leftValue = Math.floor(value);\n  let rightValue = Math.ceil(value);\n  let\
    \ leftDiff = value - leftValue;\n  let rightDiff = rightValue - value;\n  if(leftDiff\
    \ === rightDiff){\n    return sign === 1 ? rightValue : leftValue;\n  }\n  return\
    \ leftDiff < rightDiff ? leftValue : rightValue;\n}", "    value = parseFloat(value)\n\
    \    let b = Math.round(value)\n    let a = value - b\n    if(a == 0.5){\n   \
    \     return value > 0 ? b + 1 : b - 1\n    }\n    return b\n}\n", "  let stringNumber\
    \ = value.toString();\n  let round = Math.round(Number(stringNumber));\n  let\
    \ decimal = stringNumber.indexOf('.');\n  if(stringNumber[decimal + 1] > 5){\n\
    \    return round + 1;\n  }\n  else if(stringNumber[decimal + 1] < 5){\n    return\
    \ round - 1;\n  }\n  else{\n    return round;\n  }\n}", "    let result = 0;\n\
    \    let number = parseFloat(value);\n    let numberPositive = number;\n    let\
    \ numberNegative = number;\n    let closestNumberPositive = 0;\n    let closestNumberNegative\
    \ = 0;\n    if(number >= 0){\n        for(let i = 0; i < number; i++){\n     \
    \       if(numberPositive - i < 0){\n                closestNumberPositive = numberPositive;\n\
    \                break;\n            }\n            numberPositive -= 1;\n   \
    \     }\n        for(let i = 0; i < number; i++){\n            if(numberPositive\
    \ + i > number){\n                break;\n            }\n            closestNumberPositive\
    \ = numberPositive + i;\n        }\n        result = closestNumberPositive;\n\
    \    }\n    else{\n        for(let i = 0; i < number; i++){\n            if(numberNegative\
    \ + i > 0){\n                closestNumberNegative = numberNegative;\n       \
    \         break;\n            }\n            numberNegative += 1;\n        }\n\
    \        for(let i = 0; i < number; i++){\n            if(numberNegative - i <\
    \ number){\n                break;\n            }\n            closestNumberNegative\
    \ = numberNegative - i;\n        }\n        result = closestNumberNegative;\n\
    \    }\n    return result;\n}", "  let arr = value.split(\".\");\n  if(arr[1][0]\
    \ >= 5){\n    arr[0] = Number(arr[0]) + 1;\n  }\n  else{\n    arr[0] = Number(arr[0]);\n\
    \  }\n  return arr[0];\n}\n", "  let valueRound = Math.round(value);\n  let valueFloor\
    \ = Math.floor(value);\n  let valueCeil = Math.ceil(value);\n  if(valueRound ===\
    \ valueCeil){\n    return valueCeil;\n  } else if(valueRound === valueFloor){\n\
    \    return valueFloor;\n  } else if(value === valueCeil){\n    return valueCeil;\n\
    \  } else if(value === valueFloor){\n    return valueFloor;\n  } else {\n    let\
    \ floorDiff = value - valueFloor;\n    let ceilDiff = valueCeil - value;\n   \
    \ if(floorDiff === ceilDiff){\n      return valueCeil;\n    } else if(floorDiff\
    \ < ceilDiff){\n      return valueFloor;\n    } else {\n      return valueCeil;\n\
    \    }\n  }\n}\n", "    return Math.round(parseFloat(value))\n}", "  value = Number(value);\n\
    \  if(value % 1 >= 0.5){\n    value += 1;\n  }else{\n    value -= 1;\n  }\n  return\
    \ value;\n}\n", "    let high = Math.ceil(value);\n    let low = Math.floor(value);\n\
    \    if(value-low < high-value){\n        return low;\n    }else if(value-low\
    \ > high-value){\n        return high;\n    }else{\n        return high;\n   \
    \ }\n}\n", "    return Math.round(value);\n}", "  var value = parseFloat(value)\n\
    \  var result = value.toFixed(0)\n  return Number(result)\n}\n", "    return Math.round(parseFloat(value))\n\
    }\n", "  let number = +value.split('.').join('');\n  let firstNumber = number.toString().slice(0,\
    \ number.toString().length - 1);\n  let secondNumber = number.toString().slice(number.toString().length\
    \ - 1);\n  let decimalPoint = '.' + secondNumber;\n  if (decimalPoint === '0')\
    \ {\n    return +firstNumber;\n  } else if (decimalPoint >= '5') {\n    firstNumber\
    \ = +firstNumber + 1;\n    return +firstNumber;\n  } else if (decimalPoint < '5')\
    \ {\n    return +firstNumber;\n  }\n}", "    return Math.round(value);\n}", " \
    \   var number = value.toString();\n    var number_split = number.split(\".\"\
    );\n    var part_1 = number_split[0];\n    var part_2 = number_split[1];\n   \
    \ var part_2_first_num = part_2.substring(0,1);\n    if(part_2_first_num >= 5)\
    \ {\n        if(number.substring(0,1) === \"-\") {\n            return parseInt(part_1)\
    \ - 1;\n        } else {\n            return parseInt(part_1) + 1;\n        }\n\
    \    } else {\n        return parseInt(part_1);\n    }\n}\n", "  let closest =\
    \ Math.round(value);\n  if (value >= 0){\n    if (value - Math.floor(value) <\
    \ 0.5){\n      closest = Math.floor(value);\n    }\n  } else {\n    if (Math.ceil(value)\
    \ - value < 0.5){\n      closest = Math.ceil(value);\n    }\n  }\n  return closest;\n\
    }", "  var num1 = Math.ceil(value);\n  var num2 = Math.floor(value);\n  if (value-num2>num1-value){\n\
    \    return num1;\n  }\n  else{\n    return num2;\n  }\n}", "    let decimal =\
    \ parseFloat(value)\n    let decimalToRound = decimal * 10\n    let roundedInt\
    \ = Math.ceil(decimalToRound)\n    if(roundedInt % 10 === 0){\n        let newDecimal\
    \ = roundedInt / 10\n        return newDecimal\n    } else {\n        let newDecimal\
    \ = roundedInt / 10\n        return newDecimal\n    }\n}", "    return Math.round(value);\n\
    \  }\n  closest_integer(19.93)", "    let number = Number(value);\n    let decimal\
    \ = number % 1;\n    let integer = Math.floor(number);\n    if(decimal >= 0.5){\n\
    \        return integer + 1;\n    }\n    else{\n        return integer;\n    }\n\
    }", "    return Math.round(value);\n}\n", "  return Math.round(value);\n}\n",
  "  return Math.round(parseFloat(value))\n}\n\nclosest_integer(\"12.5\")//\u279E\
    \ 13\n\nclosest_integer(\"-13.5\")//\u279E -14\n\nclosest_integer(\"14.5\")//\u279E\
    \ 15", "    return Math.round(value);\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Number(value.toFixed(0));\n}", "    var arr = value.split(\"\
    .\");\n    if(arr[1] > 0.5){\n        return Number(arr[0]) + 1;\n    }\n    return\
    \ Number(arr[0]);\n}", "    var number = parseFloat(value);\n    var decimal =\
    \ number - Math.floor(number);\n    if(decimal>=0.5){\n        return Math.ceil(number);\n\
    \    }\n    else if(decimal<0.5){\n        return Math.floor(number);\n    }\n\
    }\n", "  let number = Number(value);\n  let ceilNum = Math.ceil(number);\n  let\
    \ floorNum = Math.floor(number);\n  if(Math.abs(ceilNum - number) === Math.abs(floorNum\
    \ - number)){\n    return ceilNum;\n  } else if(Math.abs(ceilNum - number) > Math.abs(floorNum\
    \ - number)){\n    return floorNum;\n  } else {\n    return ceilNum;\n  }\n}",
  "  return Number(Math.round(value+'e'+ 0)+'e-'+0);\n}\n", "    let n = Math.round(value);\n\
    \    if(value < n){\n        n--;\n    }\n    return n;\n}", "    let valueArray\
    \ = value.split(\".\");\n    if(valueArray[1] >= 50){\n        return Number(valueArray[0])\
    \ + 1;\n    }\n    return Number(valueArray[0]);\n}\n", "  var arr = [];\n  var\
    \ valueArr = value.split('');\n  var valueArr2 = value.split('');\n  var len =\
    \ valueArr.length;\n  var num = '';\n  var num2 = '';\n  var num3 = '';\n  var\
    \ num4 = '';\n  var num5 = '';\n  var num6 = '';\n  var num7 = '';\n  var dec\
    \ = '';\n  var dec2 = '';\n  var x = 0;\n  var y = 0;\n  var z = 0;\n  var total\
    \ = 0;\n  var total2 = 0;\n  var total3 = 0;\n  var total4 = 0;\n  for(var i =\
    \ 0; i < len; i++){\n    if(valueArr[i] === '.'){\n      x = i;\n      y = valueArr.slice(x);\n\
    \      y.shift();\n      dec = y.join('');\n      num = valueArr.slice(0,x);\n\
    \      num = num.join('');\n      num3 = num;\n      num2 = Number(num);\n   \
    \   num2++;\n      num3 = Number(num3);\n      num3--;\n      num2 = num2.toString();\n\
    \      num3 = num3.toString();\n      num4 = num2 + '.' + dec;\n      num5 = num3\
    \ + '.' + dec;\n      num4 = Number(num4);\n      num5 = Number(num5);\n     \
    \ num6 = num2;\n      num7 = num3;\n      num6 = Number(num6);\n      num7 = Number(num7);\n\
    \      num4 = num4 - Number(value);\n      num5 = num5 - Number(value);\n    \
    \  num6 = num6 - Number(value);\n      num7 = num7 - Number(value);\n      arr.push(num4);\n\
    \      arr.push(num5);\n      arr.push(num6);\n      arr.push(num7);\n      console.log(arr);\n\
    \      for(var j = 0; j < arr.length; j++){\n        if(arr[j", "  return Math.round(parseFloat(value));\n\
    }", "  return Math.round(value);\n}", "  let num=parseFloat(value);\n  let numbers=num.toString().split('.')\n\
    \  let closestNumber;\n  if(numbers[1].split('').every(function(item){\n    return\
    \ item==='0'\n  })){\n    closestNumber=parseInt(numbers[0])\n  }else if(numbers[1].split('').every(function(item){\n\
    \    return item==='5'\n  })){\n    if(num>0){\n      closestNumber=parseInt(numbers[0])+1\n\
    \    }else{\n      closestNumber=parseInt(numbers[0])-1\n    }\n  }else{\n   \
    \ closestNumber=Math.round(num)\n  }\n  return closestNumber\n}", "    value=parseFloat(value);\n\
    \    var m_d=value%1;\n    var m_i=Math.round(value);\n    var m_i2=value<0?m_i-1:m_i+1;\n\
    \    var d1=Math.abs(m_i-value);\n    var d2=Math.abs(m_i2-value);\n    return\
    \ d1<d2?m_i:m_i2;\n}", "  return ~~value - Number(value) < 0.5 ? ~~value : ~~value\
    \ + 1;\n}\n", "  var num = parseFloat(value)\n  var inte = parseInt(value)\n \
    \ if (num - inte < 0.5) {\n    return inte\n  } else {\n    return inte + 1\n\
    \  }\n}", "  let x = value.toString().split('.');\n  if(x[1] > 5){\n    return\
    \ parseInt(x[0]) + 1;\n  }\n  else{\n    return parseInt(x[0]);\n  }\n}", "\t\
    return Math.round(value);\n}", "    //value is a string\n    if(value[0] !== '-'){\n\
    \        var decimal = value.split('.')[1];\n        var integer = value.split('.')[0];\n\
    \        if(decimal[0] >= 5){\n            return parseInt(integer)+1;\n     \
    \   }else if(decimal[0] < 5){\n            return parseInt(integer);\n       \
    \ }\n    }else{\n        var decimal = value.split('.')[1];\n        var integer\
    \ = value.split('.')[0];\n        if(decimal[0] >= 5){\n            return parseInt(integer)-1;\n\
    \        }else if(decimal[0] < 5){\n            return parseInt(integer);\n  \
    \      }\n    }\n}", "  // create an array of integers and a variable to keep\
    \ track of the difference\n  // between each integer and value\n  var integArray\
    \ = [];\n  var diff;\n  // push all integers into the array\n  for(var i = 1;\
    \ i < 15; i++){\n    integArray.push(i);\n  }\n  // filter the array to just the\
    \ integers that are closer than the next integer\n  integArray = integArray.filter(function(number){\n\
    \    diff = value - number;\n    // if the difference is greater than 0\n    if(diff\
    \ > 0){\n      // if the difference is less than the next integer and the next\
    \ integer\n      // is not the next integer (1)\n      if(diff < (number + 1)\
    \ && (number + 1) != 1){\n        // keep the integer\n        return number;\n\
    \      }\n    }\n    // if the difference is less than 0\n    if(diff < 0){\n\
    \      // if the difference is greater than the integer (no next integer)\n  \
    \    if(diff > number){\n        // keep the integer\n        return number;\n\
    \      }\n    }\n  });\n  // return the last value in the array\n  return integArray[integArray.length\
    \ - 1];\n}\n", "  value = Number(value);\n  return value % 1 >= 0.5 ? Math.ceil(value)\
    \ : Math.floor(value);\n}", "  return Math.round(parseFloat(value));\n}", "  \
    \  value = parseFloat(value);\n    if (value < 0) {\n        let negativeInteger\
    \ = parseInt(value);\n        if (value === negativeInteger) {\n            return\
    \ parseInt(value);\n        } else {\n            return parseInt(value) - 1;\n\
    \        }\n    } else {\n        let positiveInteger = parseInt(value);\n   \
    \     if (value === positiveInteger) {\n            return parseInt(value);\n\
    \        } else {\n            return parseInt(value) + 1;\n        }\n    }\n\
    }\n", "   let floatVal = parseFloat(value);\n   let rounding_int = Math.round(floatVal);\n\
    \   let intVal = Math.trunc(floatVal);\n   if (floatVal === rounding_int) {\n\
    \       return intVal;\n   } else if (floatVal < 0) {\n       return intVal;\n\
    \   } else {\n       return rounding_int;\n   }\n}", "  let float = parseFloat(value);\n\
    \  let round = Math.round(float);\n  let floor = Math.floor(float);\n  let ceiling\
    \ = Math.ceil(float);\n  if (float - floor > ceiling - float){\n    return ceiling;\n\
    \  } else if (float - floor === ceiling - float){\n    if (float < 0){\n     \
    \ return floor;\n    } else {\n      return ceiling;\n    }\n  } else {\n    return\
    \ floor;\n  }\n}\n", "    return Math.round(value);\n}\n", "    return Math.round(value);\n\
    }", "    var array = value.split('.');\n    if(array[1][0] >= 5){\n        return\
    \ parseInt(array[0]) + 1;\n    }else{\n        return parseInt(array[0]);\n  \
    \  }\n}\n", "  let s = value.split(\"\");\n  let min = Number.POSITIVE_INFINITY;\n\
    \  let minIndex = 0;\n  let diff = 0;\n  let first = 0;\n  let second = 0;\n \
    \ for(let i = 0; i < s.length; i++){\n    if(s[i] === \".\"){\n      s.splice(i,\
    \ 1);\n    }\n  }\n  s = s.join(\"\");\n  s = parseInt(s);\n  if(s >= 0){\n  \
    \  first = s + 1;\n    second = s - 1;\n  } else {\n    first = s - 1;\n    second\
    \ = s + 1;\n  }\n  for(let i = 0; i < s.length; i++){\n    diff = Math.abs(value\
    \ - s[i]);\n    if(diff < min){\n      min = diff;\n      minIndex = i;\n    }\n\
    \  }\n  if(Math.abs(value - first) === Math.abs(value - second)){\n    if(first\
    \ > second){\n      return first;\n    } else {\n      return second;\n    }\n\
    \  } else {\n    return parseInt(s[minIndex]);\n  }\n}\n", "  return  Math.round(value)\n\
    }", "  let nearest = '';\n  let distance1 = 0;\n  let distance2 = 0;\n  let distance\
    \ = 0;\n  let res = '';\n  if(value.indexOf('.') == -1){\n    return value;\n\
    \  }else{\n    nearest = value.slice(0, value.indexOf('.'));\n    distance1 =\
    \ parseFloat(value.slice(value.indexOf('.')));\n    distance2 = 1 - distance1;\n\
    \    if(distance1 >= distance2){\n      res = parseInt(nearest) + 1;\n    }else{\n\
    \      res = parseInt(nearest);\n    }\n  }\n  return res;\n}\n", "    return\
    \ Math.round(value);\n}", "  var num = parseFloat(value);\n  if(Number.isInteger(num)){\n\
    \    return num;\n  }else{\n    return Math.round(num);\n  }\n}", "    let arr\
    \ = value.split(\".\");\n    if(arr[1] === \"5\"){\n        return parseInt(arr[0])\
    \ + 1;\n    }else{\n        return parseInt(arr[0]);\n    }\n}\n", "  if (value.includes('.')){\n\
    \    let valueArray = value.split('.');\n    if (valueArray[1][0] >= 5){\n   \
    \   return Number(valueArray[0]) + 1;\n    } else {\n      return Number(valueArray[0]);\n\
    \    }\n  } else {\n    return Number(value);\n  }\n}", "  return Math.round(parseFloat(value));\n\
    }\n", "  let valueOf = parseFloat(value);\n  if(valueOf - Math.floor(valueOf)\
    \ === 0.5){\n    return Math.ceil(valueOf);\n  }\n  return Math.round(valueOf);\n\
    }", "    if(Math.floor(value) === value){\n        return value;\n    }\n    else\
    \ if(value < 0){\n        return Math.ceil(value);\n    }\n    else{\n       \
    \ return Math.floor(value);\n    }\n}", "\tlet numArr = value.split(\"\");\n\t\
    let periodIndex = numArr.indexOf(\".\");\n\tlet int = parseInt(numArr.splice(0,\
    \ periodIndex).join(\"\"));\n\tlet decimal = parseInt(numArr.splice(1).join(\"\
    \"));\n\tif(decimal >= 5){\n\t\tint += 1;\n\t}\n\treturn int;\n}\n", "  return\
    \ Math.round(value);\n}", "  if (value % 1 === 0) {\n    return value;\n  } else\
    \ if (value < 0) {\n    return Math.ceil(value);\n  } else {\n    return Math.floor(value);\n\
    \  }\n}", "    return Math.round(parseFloat(value));\n}", "    let number = parseFloat(value);\n\
    \    return number > 0 ? Math.ceil(number) : Math.floor(number);\n}\n", "  return\
    \ Math.round(value);\n}\n", "    let num=parseFloat(value);\n    if(Math.abs(Math.ceil(num)-num)>Math.abs(Math.floor(num)-num)){\n\
    \        return Math.floor(num);\n    }else{\n        return Math.ceil(num);\n\
    \    }\n}", "    let num = Number(value);\n    let floor = Math.floor(num);\n\
    \    let ceil = Math.ceil(num);\n    let count = Math.abs(num - floor);\n    let\
    \ count2 = Math.abs(num - ceil);\n    if(count < count2){\n        return floor;\n\
    \    }else{\n        return ceil;\n    }\n}", "    var int1 = parseInt(value);\n\
    \    var int2 = parseInt(value)+1;\n    if (value - int1 >= 0.5){\n        return\
    \ int2;\n    } else {\n        return int1;\n    }\n}", "    // your code here\n\
    }\n", "    return Math.round(value);\n}", "  let result = Math.round(value);\n\
    \  return result;\n}", "    // value = value.toString();\n    // if(value.includes('.')){\n\
    \    //     let num = value.split('.')[0];\n    //     let decimal = value.split('.')[1][0];\n\
    \    //     if(decimal >= 5){\n    //         return parseInt(num) + 1;\n    //\
    \     }else{\n    //         return parseInt(num);\n    //     }\n    // }else{\n\
    \    //     return parseInt(value);\n    // }\n    return Math.round(value);\n\
    }", "    if(value.includes('.')){\n        let newValue = value.split('.')[0];\n\
    \        let decValue = value.split('.')[1];\n        if(decValue[0] === '5'){\n\
    \            newValue++;\n        }\n        return parseInt(newValue);\n    }\n\
    \    return parseInt(value);\n}", "  return Math.round(value);\n}", "  //find\
    \ the decimal\n  var decimal = parseFloat(value) % 1;\n  //if the decimal is less\
    \ than .5 round down, else round up\n  if(decimal < .5){\n    return parseInt(value);\n\
    \  } else {\n    return Math.ceil(parseFloat(value));\n  }\n}\n", "    return\
    \ Number(value.slice(0, value.indexOf('.'))) + Math.round(value.slice(value.indexOf('.'),\
    \ value.length))\n}\n", "\tif(typeof value === 'string'){\n\t\treturn Number(value);\n\
    \t}else{\n\t\treturn 'this is not a string'\n\t}\n}\n", "  var value1 = Math.round(value);\n\
    \  var value2 = Math.floor(value);\n  var value3 = Math.ceil(value);\n  if (value\
    \ % 1 === 0){\n    return value;\n  }\n  else {\n    if (value - value2 > value3\
    \ - value){\n      return value3;\n    }\n    else {\n      return value2;\n \
    \   }\n  }\n}", "  let number = parseFloat(value)\n  if(number % 1 == 0){\n  \
    \  return number\n  }else if (number % 1 < 0.5){\n    return Math.floor(number)\n\
    \  }else if (number % 1 > 0.5){\n    return Math.ceil(number)\n  }\n}\n", "  \
    \  let newValue = Math.floor(Math.abs(value));\n    if(value > 0){\n        if(value\
    \ - newValue < 0.5){\n            return newValue;\n        }else{\n         \
    \   return newValue + 1;\n        }\n    }else{\n        if(value - newValue >=\
    \ -0.5){\n            return newValue;\n        }else{\n            return newValue\
    \ - 1;\n        }\n    }\n}", "  return Math.round(value);\n}", "    let number\
    \ = Math.round(Number(value));\n    return number;\n}", "    return Math.round(value);\n\
    }", "    value = parseFloat(value);\n    let num = value - value.toFixed(0);\n\
    \    if(Math.abs(num) > 0.5){\n        return value > 0 ? value.toFixed(0) - 1\
    \ : value.toFixed(0) + 1;\n    }else{\n        return value > 0 ? value.toFixed(0)\
    \ : value.toFixed(0) - 1;\n    }\n}", "  return value % 1 > 0.5 ? Math.ceil(value)\
    \ : Math.floor(value);\n}\n", "  return value;\n}\n\nclosest_integer('14.5');\n\
    closest_integer('-14.5');\nclosest_integer('29.8');\nclosest_integer('-13.25');\n\
    closest_integer('14.23');\nclosest_integer('-22.27');\nclosest_integer('-10.6');\n\
    closest_integer('-15.6');\nclosest_integer('0.76');\nclosest_integer('-0.1');\n\
    closest_integer('-0.5');\nclosest_integer('0.5');\nclosest_integer('-2.7');\n\
    closest_integer('-0.8');\nclosest_integer('1.5');\nclosest_integer('3.3');\nclosest_integer('-3.3');\n\
    closest_integer('-0.2');\nclosest_integer('-0.9');\nclosest_integer('5.5');\n\
    closest_integer('-5.5');\nclosest_integer('-0.2');\nclosest_integer('-0.9');\n\
    closest_integer('-0.2');\nclosest_integer('-0.8');\nclosest_integer('4.4');\n\
    closest_integer('2.6');\nclosest_integer('-4.4');\nclosest_integer('-0.6');\n\
    closest_integer('-0.1');\nclosest_integer('-0.6');\nclosest_integer('-0.6');\n\
    closest_integer('-0.6');\nclosest_integer('5.5');\nclosest_integer('-5.5');\n\
    closest_integer('-0.8');\nclosest_integer('0.8');\nclosest_integer('-6.2');\n\
    closest_integer('-6.4');\nclosest_integer('-6.4');\nclosest_integer('-6.2');\n\
    closest_integer('-6.2');\nclosest_integer('0.9');\n", "  return value - value\
    \ % 1\n}", "  return Math.round(parseFloat(value));\n}\n", "    var whole = Math.floor(value);\n\
    \    var error1 = value - whole;\n    var error2 = value - whole - 1;\n    if(Math.abs(error1)\
    \ < Math.abs(error2)){\n        return whole;\n    }\n    else{\n        return\
    \ whole - 1;\n    }\n}\n", "  return Math.round(value);\n}\n", "    let numbers\
    \ = value.split('.');\n    if(numbers[1] === '5') {\n        if(value.includes('-'))\
    \ {\n            return Number(numbers[0]) - 1;\n        }\n        return Number(numbers[0])\
    \ + 1;\n    }\n    return Math.round(Number(value));\n}\n", "    let float = parseFloat(value);\n\
    \    if(Math.round(float) === float) return float;\n    if(float - Math.floor(float)\
    \ > 0.5) return Math.ceil(float);\n    return Math.floor(float);\n}\n", "    if(value\
    \ % 1 === 0){\n        return value;\n    }\n    return value > 0 ? Math.ceil(value)\
    \ : Math.floor(value);\n}", "  return Math.round(value);\n}", "  var decimal =\
    \ Number(value) % 1;\n  // console.log(decimal);\n  if(decimal < 0.5){\n    return\
    \ Number(value) - decimal;\n  } else {\n    return Number(value) + (1 - decimal);\n\
    \  }\n}\n", "    return parseInt(value);\n}\n", "  return value >= 0 ? Math.ceil(value)\
    \ : Math.floor(value);\n}\n", "  var value = parseFloat(value);\n  return Math.round(value);\n\
    }", "    value = Number(value);\n    let floor = Math.floor(value);\n    let ceil\
    \ = Math.ceil(value);\n    if (floor === ceil){\n        return floor;\n    }\
    \ else if (Math.abs(floor - value) === Math.abs(ceil - value)){\n        return\
    \ floor;\n    } else if (Math.abs(floor - value) < Math.abs(ceil - value)){\n\
    \        return floor;\n    } else if (Math.abs(floor - value) > Math.abs(ceil\
    \ - value)){\n        return ceil;\n    }\n}", "    return Math.round(value);\n\
    }", "    return Math.round(value);\n}", "\tlet num = parseFloat(value)\n\tlet\
    \ int = Math.round(num)\n\tif(int == num) return int\n\tif(int > num) return int-1\n\
    \tif(int < num) return int+1\n}", "  return Number(value.toFixed(0));\n}", " \
    \   var f = Math.floor(value);\n    var c = Math.ceil(value);\n    return (value\
    \ - f > c - value) ? c : f;\n}\n", "  var number = parseFloat(value);\n  if(number\
    \ === Math.round(number)){\n    return number;\n  }\n  var splitNumbers = number.toString().split('.');\n\
    \  if(parseInt(splitNumbers[1][0]) < 5){\n    return parseInt(splitNumbers[0]);\n\
    \  }\n  else{\n    return parseInt(splitNumbers[0]) + 1;\n  }\n}\n", "  let split\
    \ = value.split('.');\n  if(split[1][0] >= 5){\n    return parseInt(split[0])\
    \ + 1;\n  }\n  return parseInt(split[0]);\n}", "    if(typeof value !== 'string'){\n\
    \        return value;\n    }\n\n    const val = Number(value);\n    const decimal\
    \ = val - Math.floor(val);\n    if(decimal < 0.5){\n        return Math.floor(val);\n\
    \    }\n    else{\n        return Math.ceil(val);\n    }\n}", "    if(Number.isInteger(value)){\n\
    \        return value;\n    }else{\n        value = value.split(\".\");\n    \
    \    if(value[1]>5){\n            return Number(value[0])+1;\n        }else{\n\
    \            return Number(value[0]);\n        }\n    }\n}", "  return parseInt(value)\
    \ + (value > 0 ? 0.5 : -0.5);\n}", "  let x = parseFloat(value);\n  if(x%1 ===\
    \ 0){\n    return x;\n  }\n  else{\n    let f = Math.floor(x);\n    let c = Math.ceil(x);\n\
    \    if((x-f)>(c-x)){\n      return c;\n    }\n    else{\n      return f;\n  \
    \  }\n  }\n}", "    if(typeof value === \"string\"){\n        return Math.round(value);\n\
    \    }else{\n        return \"Not a string\";\n    }\n}", "  return parseInt(value)\n\
    }\n", "  return Math.round(parseFloat(value));\n}", "    var arr = value.split(\"\
    .\");\n    var int = parseInt(arr[0]);\n    var dec = parseInt(arr[1]);\n    if(dec>=5){\n\
    \        return int + 1;\n    }\n    else{\n        return int;\n    }\n}", " \
    \ return Math.round(value);\n}\n", "  var num = parseFloat(value);\n  return Math.round(num);\n\
    }", "  return Math.round(value);\n}", "    var interger = Math.round(parseFloat(value));\n\
    \    return interger;\n}\n", "  var string = value.toString();\n  var num = Number(string);\n\
    \  var add = num % 1;\n  if(add >= 0.5){\n    add = Math.ceil(num);\n  }else{\n\
    \    add = Math.floor(num);\n  }\n  return add;\n}", "  var num = parseFloat(value);\n\
    \  return Math.round(num);\n}\nclosest_integer(\"14.5\");\nclosest_integer(\"\
    -14.5\");\n", "    value = parseFloat(value);\n    var rem = value % 1;\n    if(rem\
    \ === 0.5){\n        return parseInt(value) + 1;\n    }\n    else if(rem === -0.5){\n\
    \        return parseInt(value) - 1;\n    }\n    else if(rem > 0.5){\n       \
    \ return parseInt(value) + 1;\n    }\n    else if(rem < -0.5){\n        return\
    \ parseInt(value) - 1;\n    }\n    else{\n        return parseInt(value);\n  \
    \  }\n}", "    let val = parseFloat(value);\n    let int = Math.round(val);\n\
    \    if(val > 0){\n        if(val - int < 0.5){\n            return int;\n   \
    \     }\n        else{\n            return int + 1;\n        }\n    }\n    else{\n\
    \        if(val - int < -0.5){\n            return int - 1;\n        }\n     \
    \   else{\n            return int;\n        }\n    }\n}\n", "  let a = Math.floor(value)\n\
    \  let b = Math.ceil(value)\n  if(value-a < b-value){\n    return a\n  }\n  return\
    \ b\n}", "    return Math.round(value);\n}\n", "    let number = Number(value);\n\
    \    let whole = Math.floor(number);\n    if(number - whole >= 0.5){\n       \
    \ return whole + 1;\n    }\n    return whole;\n}\n", "    let number = Number(value);\n\
    \    let next = number + 1;\n    let prev = number - 1;\n    if(number % 1 ===\
    \ 0){\n        return number;\n    }\n    if(value.startsWith('-')){\n       \
    \ if((Math.abs(number - prev)) < (Math.abs(number - next))){\n            return\
    \ prev;\n        }\n        return next;\n    }\n    if((Math.abs(number - prev))\
    \ < (Math.abs(number - next))){\n        return prev;\n    }\n    return next;\n\
    }", "  let num = parseFloat(value);\n  return Math.round(num);\n}\n", "  var number\
    \ = parseFloat(value);\n  return Math.round(number);\n}\n", "  var pre = parseInt(value);\n\
    \  var post = parseInt(value);\n  if(value - pre >= 0.5){\n    post += 1;\n  }\n\
    \  else{\n    pre -= 1;\n  }\n  if(Math.abs(value - pre) < Math.abs(value - post)){\n\
    \    return pre;\n  }\n  else{\n    return post;\n  }\n}", "  return Math.round(parseFloat(value))\n\
    }", "    if(value<0){\n        if(value<-1){\n            if(Math.floor(value)\
    \ < value){\n                return Math.floor(value)\n            }else{\n  \
    \              return Math.floor(value)-1\n            }\n        }else{\n   \
    \         return Math.floor(value)-1\n        }\n    }else{\n        if(value>1){\n\
    \            if(Math.floor(value) < value){\n                return Math.floor(value)+1\n\
    \            }else{\n                return Math.floor(value)\n            }\n\
    \        }else{\n            return Math.floor(value)\n        }\n    }\n}", " \
    \   value = Number(value);\n    return Math.round(value);\n}", "    let closest\
    \ = Math.round(value);\n    if(value % 1 == 0){\n        return value;\n    }\n\
    \    else if(value < 0 && value % 1 != 0){\n        closest = Math.ceil(value);\n\
    \    }\n    else if(value > 0 && value % 1 != 0){\n        closest = Math.floor(value);\n\
    \    }\n    return closest;\n}\n", "    return Math.round(parseFloat(value));\n\
    }", "    var num = parseFloat(value);\n    if(num % 1 === 0) return num;\n   \
    \ return (num + (num - Math.floor(num) > 0.5 ? 1 : -1));\n}\n", "  let distance\
    \ = 0;\n  let array = value.split('');\n  let num = Number(array.slice(0, array.indexOf('.')).join(''));\n\
    \  if(array[array.indexOf('.') + 1] > 4){\n    num += 1;\n  }\n  console.log(num);\n\
    \  return num;\n}\nclosest_integer(\"14.5\"); //15\nclosest_integer(\"-14.5\"\
    ); //-15\nclosest_integer(\"-4.5\"); //-5\nclosest_integer(\"-4.7\"); //-5\nclosest_integer(\"\
    14.3\"); //14\nclosest_integer(\"14.8\"); //15\nclosest_integer(\"14.1\"); //14\n\
    closest_integer(\"-14.1\"); //-14\nclosest_integer(\"-14.9\"); //-15\nclosest_integer(\"\
    14.5\"); //15\nclosest_integer(\"14.9\"); //15\nclosest_integer(\"-4.0\"); //-4\n\
    closest_integer(\"-4.5\"); //-5\nclosest_integer(\"-14.0\"); //-14\nclosest_integer(\"\
    -14.5\"); //-15\nclosest_integer(\"-14.9\"); //-15\nclosest_integer(\"-14.0\"\
    ); //-14\nclosest_integer(\"-14.5\"); //-15\nclosest_integer(\"-14.9\"); //-15\n\
    closest_integer(\"-15.1\"); //-15\nclosest_integer(\"-15.5\"); //-16\nclosest_integer(\"\
    -15.9\"); //-16\nclosest_integer(\"4.0\"); //4\nclosest_integer(\"4.5\"); //5\n\
    closest_integer(\"14.0\"); //14\nclosest_integer(\"14.5\"); //15\nclosest_integer(\"\
    14.9\"); //15\nclosest_integer(\"15.1\"); //15\nclosest_integer(\"15.5\"); //16\n\
    closest_integer(\"15.9\"); //16\nclosest_", "   return Math.round(value);\n}\n\
    \nclosest_integer(\"14.4\");\n", "  var targetNum = parseFloat(value);\n  var\
    \ closerNum = Math.round(targetNum);\n  var difference = closerNum - targetNum;\n\
    \  var closestNum = Math.abs(closerNum - targetNum);\n  var floorNum = Math.floor(targetNum);\n\
    \  var floorDiff = floorNum - targetNum;\n  var floorAbs = Math.abs(floorDiff);\n\
    \  var ceilingNum = Math.ceil(targetNum);\n  var ceilingDiff = ceilingNum - targetNum;\n\
    \  var ceilingAbs = Math.abs(ceilingDiff);\n  if(closestNum > floorAbs && closestNum\
    \ > ceilingAbs){\n    if(difference > 0){\n      return floorNum;\n    }else{\n\
    \      return ceilingNum;\n    }\n  }else if(floorAbs > closestNum && floorAbs\
    \ > ceilingAbs){\n    return floorNum;\n  }else if(ceilingAbs > closestNum &&\
    \ ceilingAbs > floorAbs){\n    return ceilingNum;\n  }else{\n    return closerNum;\n\
    \  }\n}\n", "    let num = Number(value);\n    let result = Math.round(num);\n\
    \    return result;\n}\n", "    let int = Number(value)\n    let r = Math.round(int)\n\
    \    if(r-int < 0.5 && r-int > -0.5){\n        return r\n    }else if(r-int <\
    \ 0.5 && r-int < -0.5){\n        return int - 1\n    }else if(r-int > 0.5 && r-int\
    \ > -0.5){\n        return int + 1\n    }\n}", "  return Math.round(value);\n}",
  "  let num = Number(value);\n  let floorNum = Math.floor(num);\n  let ceilNum =\
    \ Math.ceil(num);\n  let floorDiff = Math.abs(num - floorNum);\n  let ceilDiff\
    \ = Math.abs(num - ceilNum);\n  return floorDiff > ceilDiff ? ceilNum : floorNum;\n\
    }", "  return Math.round(value);\n}", "\tlet num = Number(value);\n\tif (num -\
    \ Math.floor(num) === 0.5){\n\t\tif (num >= 0){\n\t\t\treturn Math.ceil(num);\n\
    \t\t} else {\n\t\t\treturn Math.floor(num);\n\t\t}\n\t} else {\n\t\treturn Math.round(num);\n\
    \t}\n}", "\tvalue = parseFloat(value);\n\tif(value < 0){\n\t\tvalue = Math.ceil(value);\n\
    \t}else{\n\t\tvalue = Math.floor(value);\n\t}\n\treturn value;\n}", "  return\
    \ value.length === value.indexOf('.') + 1 ? Math.round(value) :\n    value.length\
    \ === value.indexOf('.') + 2 ? Math.round(value) :\n      value.slice(0, value.indexOf('.'))\n\
    }", "let numberToReturn = 0;\nlet index = 0;\nlet valueToReturn = 0;\nlet array\
    \ = value.split(\"\");\nfor(let i = 0; i < array.length; i++){\n if(array[i] ===\
    \ \".\"){\n   index = i;\n }\n}\nlet array2 = [];\nfor(let i = 0; i < index; i++){\n\
    \ array2.push(parseInt(array[i]));\n}\nnumberToReturn = parseInt(array2.join(\"\
    \"));\nvalueToReturn = numberToReturn;\nif(array[index + 1] !== undefined){\n\
    \  if(parseInt(array[index + 1]) >= 5){\n    numberToReturn += 1;\n  }\n}\nlet\
    \ numberToReturn2 = 0;\nlet array3 = [];\nfor(let i = 0; i < index; i++){\n array3.push(parseInt(array[i]));\n\
    }\nnumberToReturn2 = parseInt(array3.join(\"\"));\nif(array[index + 1] !== undefined){\n\
    \  if(parseInt(array[index + 1]) < 5){\n    numberToReturn2 -= 1;\n  }\n}\nlet\
    \ numberToReturn3 = 0;\nlet array4 = [];\nfor(let i = 0; i < index; i++){\n array4.push(parseInt(array[i]));\n\
    }\nnumberToReturn3 = parseInt(array4.join(\"\"));\nlet numberToReturn4 = 0;\n\
    let array5 = [];\nfor(let i = 0; i < index; i++){\n array5.push(parseInt(array[i]));\n\
    }\nnumberToReturn4 = parseInt(array5.join(\"\"));\nif(array[index + 1] !== undefined){\n\
    \  if(parseInt(array[index + 1]) < 5){\n    numberToReturn4 -= 1;\n  }\n}\nlet\
    \ output = [];\noutput.push(numberToReturn3);\noutput.push(numberToReturn4);\n\
    output.push(numberToReturn);\noutput.push(numberToReturn2);\noutput.sort(function(a,\
    \ b){return a - b});\nfor(let i = 0;", "    let arr = [...value];\n    let float\
    \ = '';\n    let str = '';\n    let arrStr = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] === '.') break;\n        str += arr[i];\n    }\n  \
    \  for(let i = str.length + 1; i < arr.length; i++){\n        float += arr[i];\n\
    \    }\n    for(let i = 0; i < float.length; i++){\n        arrStr.push(float[i]);\n\
    \    }\n    let num = Number(str);\n    let num2 = Number(float);\n    if(num2\
    \ === 0){\n        return num;\n    }\n    if(num2 === 5){\n        return num2;\n\
    \    }\n    if(arrStr[0] < 5){\n        return num;\n    }else{\n        return\
    \ num + 1;\n    }\n}\n", "  let result = Math.round(value);\n  return result;\n\
    }\n", "  //your code here\n  let minus = Math.floor(value);\n  let plus = Math.ceil(value);\n\
    \  if(value - minus === 0.5) return minus - 1;\n  if(plus - value === 0.5) return\
    \ plus + 1;\n  if(Math.abs(value - minus) > Math.abs(plus - value)) return plus;\n\
    \  return minus;\n}", "    // your code here\n}\n", "    // look at the decimal\n\
    \    // if it is .5 or bigger then round up\n    // if it is .4 or smaller then\
    \ round down\n    // if it is .5 then round away from zero\n    let valueArray\
    \ = value.split(\".\");\n    if(valueArray[1] >= .5){\n        return parseInt(valueArray[0])\
    \ + 1;\n    } else if(valueArray[1] <= .4){\n        return parseInt(valueArray[0]);\n\
    \    } else {\n        if(valueArray[0] > 0){\n            return parseInt(valueArray[0])\
    \ + 1;\n        } else {\n            return parseInt(valueArray[0]) - 1;\n  \
    \      }\n    }\n}", "  return Math.round(value);\n}", "    if(is_decimal(value)){\n\
    \        var floor = Math.floor(value)\n        var ceil = Math.ceil(value)\n\
    \        var abs_floor = Math.abs(floor)\n        var abs_ceil = Math.abs(ceil)\n\
    \        if(abs_floor === abs_ceil){\n            return Math.sign(value) * abs_floor\n\
    \        }else if(abs_floor < abs_ceil){\n            return floor\n        }else{\n\
    \            return ceil\n        }\n    }else{\n        return value\n    }\n\
    }\n", "  if(value === \"0.0\"){\n    return 0;\n  }\n  let decimal = parseFloat(value.slice(value.indexOf(\"\
    .\")));\n  if(decimal < 0.5){\n    return Math.floor(parseFloat(value));\n  }\n\
    \  else if(decimal > 0.5){\n    return Math.ceil(parseFloat(value));\n  }\n  else\
    \ if(decimal === 0.5){\n    if(value[0] === \"-\"){\n      return Math.ceil(parseFloat(value));\n\
    \    }\n    else if(value[0] !== \"-\"){\n      return Math.floor(parseFloat(value));\n\
    \    }\n  }\n}", "    let index = value.indexOf('.');\n    if(Number(value[index+1])\
    \ >= 5){\n        return Number(value.substring(0,index)) + 1;\n    }\n    return\
    \ Number(value.substring(0,index));\n}\n", "    if(value%1==0){\n        return\
    \ value;\n    }\n    else if(value < 0){\n        return Math.ceil(value);\n \
    \   }\n    else{\n        return Math.floor(value);\n    }\n}", "    return Math.round(value);\n\
    }", "  let newValue = value.split(\".\");\n  if(newValue[1] >= 5){\n    newValue[0]\
    \ = parseInt(newValue[0]) + 1;\n  }\n  return parseInt(newValue[0]);\n}", "  \
    \  let number = parseFloat(value)\n    let integer = Math.floor(number)\n    let\
    \ decimal = number - integer\n    if(decimal > 0.5){\n        return integer +\
    \ 1\n    }else if(decimal < 0.5){\n        return integer\n    }else{\n      \
    \  return integer + (integer < 0 ? -1 : 1)\n    }\n}", "  if (value % 1 === 0)\
    \ {\n    return value;\n  } else if (value >= 0) {\n    let decimal = value -\
    \ Math.floor(value);\n    if (decimal < 0.5) {\n      return Math.floor(value);\n\
    \    } else {\n      return Math.ceil(value);\n    }\n  } else {\n    let decimal\
    \ = Math.ceil(value) - value;\n    if (decimal < 0.5) {\n      return Math.ceil(value);\n\
    \    } else {\n      return Math.floor(value);\n    }\n  }\n}\n", "    var newVal\
    \ = parseFloat(value);\n    if(newVal<0){\n        newVal = Math.ceil(newVal);\n\
    \    }\n    else{\n        newVal = Math.floor(newVal);\n    }\n    return newVal;\n\
    }", "    if(Math.abs(value)%1<0.5){\n        return Math.floor(value)\n    }\n\
    \    else{\n        return Math.ceil(value)\n    }\n}", "  return Math.round(value);\n\
    }", "  value = Math.round(value);\n  return value;\n}\nclosest_integer('-14.5');\n\
    \n", "  if (value > 0){\n    return Math.ceil(value);\n  }\n  else {\n    return\
    \ Math.floor(value);\n  }\n}", "  let result = parseInt(value, 10);\n  if (value\
    \ % 1 >= 0.5) {\n    result = Math.ceil(value);\n  } else {\n    result = Math.floor(value);\n\
    \  }\n  return result;\n}", "  value = +value;\n  let decimal = value - Math.floor(value);\n\
    \  if(decimal > 0.5){\n    return Math.ceil(value);\n  } else if(decimal < 0.5){\n\
    \    return Math.floor(value);\n  } else {\n    return Math.round(value);\n  }\n\
    }\n", "    return Math.round(parseFloat(value))\n}", "  if(value.indexOf('.')\
    \ === -1){\n    return Number(value);\n  }\n  let num = value.split('.');\n  if(num[1]\
    \ >= 5){\n    return Number(num[0]) + 1;\n  }\n  return Number(num[0]);\n}", "\t\
    return parseInt(value)\n}", "    let numVal = Number(value);\n    let numInt =\
    \ Math.round(numVal);\n    let numDiff = numInt - numVal;\n    let numDiffVal\
    \ = Math.abs(numDiff);\n    let closestNum = 0;\n    if(numDiffVal === 0.5){\n\
    \        if(numVal >= 0){\n            closestNum = numInt + 1;\n        }else{\n\
    \            closestNum = numInt - 1;\n        }\n    }else{\n        closestNum\
    \ = numInt;\n    }\n    return closestNum;\n}\n", "   return Math.round(value);\n\
    }", "    let realValue = parseFloat(value);\n    let sign = Math.sign(realValue);\n\
    \    realValue = Math.abs(realValue);\n    let roundValue = Math.round(realValue);\n\
    \    let difference = Math.abs(realValue - roundValue);\n    let floorValue =\
    \ Math.floor(realValue);\n    let floorDifference = Math.abs(realValue - floorValue);\n\
    \    if(difference > floorDifference){\n        roundValue = floorValue;\n   \
    \ }\n    return roundValue * sign;\n}", "    let ceil = Math.ceil(value);\n  \
    \  let floor = Math.floor(value);\n    let decimals = value - floor;\n    if(decimals\
    \ >= 0.5){\n        return ceil;\n    }\n    return floor;\n}", "\tvar arr = value.split('.');\n\
    \tvar num = arr[0];\n\tvar decimal = arr[1];\n\tvar result = Math.round(Number(num));\n\
    \tif(decimal >= 5){\n\t\tresult++;\n\t}\n\treturn result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

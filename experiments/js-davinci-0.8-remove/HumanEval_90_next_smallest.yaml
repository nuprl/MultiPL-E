name: HumanEval_90_next_smallest
language: js
prompt: "//You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\nfunction next_smallest(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = next_smallest;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5]),2);\n  assert.deepEqual(candidate([5,\
  \ 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([1, 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1,\
  \ 1]),undefined);\n  assert.deepEqual(candidate([-35, 34, 12, -45]),-35);\n}\n\n\
  test();"
completions: ["    let min = Math.min(...lst);\n    let output = Math.min(...lst.filter(e\
    \ => e != min));\n    return (output == Infinity) ? null : output;\n}\n", "  \
    \  if(lst.length>1){\n        let newLst=lst.sort(function(a,b){return a-b});\n\
    \        return newLst[1];\n    }\n    else return null;\n}", "    let min = Math.min(...lst);\n\
    \    let secondSmallest = lst.filter(num => num != min);\n    return Math.min(...secondSmallest);\n\
    }\n", "    lst.sort((a,b)=>a-b);\n    if(lst.length<2){\n        return null;\n\
    \    }\n    else{\n        return lst[1];\n    }\n}\n", "    var min=lst[0];\n\
    \    var min2=lst[0];\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]<min){\n\
    \            min2=min;\n            min=lst[i];\n        }\n        else if(lst[i]>min\
    \ && lst[i]<min2){\n            min2=lst[i];\n        }\n    }\n    if(min2==min){\n\
    \        return null;\n    }\n    return min2;\n}", "    let smallest = lst[0];\n\
    \    let secondSmallest = lst[1];\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            secondSmallest = smallest;\n    \
    \        smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest\
    \ && lst[i] > smallest){\n            secondSmallest = lst[i];\n        }\n  \
    \  }\n    return secondSmallest;\n}", "    if (lst.length < 3) return undefined;\n\
    \    else {\n        let min = Math.min(...lst);\n        let minIndex = lst.indexOf(min);\n\
    \        lst.splice(minIndex, 1);\n        return Math.min(...lst);\n    }\n}\n",
  "    var smalest = Math.min(...lst);\n    lst.splice(lst.indexOf(smalest),1);\n\
    \    var second_smallest = Math.min(...lst);\n    if(second_smallest === Infinity){\n\
    \        return null;\n    }else{\n        return second_smallest;\n    }\n}\n",
  "   if(lst.length <= 1){\n       return null;\n   }\n   let first = lst[0];\n  \
    \ let second = lst[1];\n   if(first < second){\n       [first, second] = [second,\
    \ first];\n   }\n   for(let i = 2; i < lst.length; i++){\n       if(lst[i] < first){\n\
    \           second = first;\n           first = lst[i];\n       }\n       else\
    \ if(lst[i] < second){\n           second = lst[i];\n       }\n   }\n   return\
    \ second;\n}", "    if (lst.length <= 1) return null;\n    let smallest = Math.min(...lst);\n\
    \    lst.splice(lst.indexOf(smallest), 1);\n    return Math.min(...lst);\n}",
  "    lst.sort((a,b)=>a-b);\n    let ans= lst[1];\n    return ans;\n}", "    let\
    \ smallest = lst[0];\n    let nextSmallest = null;\n    for(let i = 1; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            nextSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < nextSmallest){\n\
    \            nextSmallest = lst[i];\n        }\n    }\n    return nextSmallest;\n\
    }\n", "\tvar sorted = lst.sort(function(a,b){return a-b});\n\tif(sorted.length<=1){\n\
    \t\treturn null;\n\t}\n\telse{\n\t\treturn sorted[1];\n\t}\n}", "    let smallestNum\
    \ = lst[0];\n    let smallNum = null;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallestNum){\n            smallestNum = lst[i];\n      \
    \  }\n    }\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < smallNum\
    \ && lst[i] > smallestNum){\n            smallNum = lst[i];\n        }\n    }\n\
    \    return smallNum;\n}", "    let smallest = Math.min(...lst);\n    let secondSmallest\
    \ = Math.max(...lst);\n    for(let i=0; i<lst.length; i++){\n        if(lst[i]<secondSmallest\
    \ && lst[i]>smallest){\n            secondSmallest = lst[i];\n        }\n    }\n\
    \    if(secondSmallest == Math.max(...lst)){\n        return null;\n    }\n  \
    \  return secondSmallest;\n}", "    if (lst.length < 2) {\n        return null;\n\
    \    }\n    var min = lst[0];\n    var secondMin = lst[1];\n    for (var i = 1;\
    \ i < lst.length; i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n\
    \        }\n        if (lst[i] < secondMin && lst[i] > min) {\n            secondMin\
    \ = lst[i];\n        }\n    }\n    return secondMin;\n}", "   let new_list=lst.sort((a,b)=>a-b);\n\
    \   if(new_list.length>=2){\n       return new_list[1];\n   }\n   else return\
    \ null;\n}\n", "    let smallest = lst[0]\n    let secondSmallest = lst[1]\n \
    \   for(let i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n   \
    \         secondSmallest = smallest\n            smallest = lst[i]\n        }\n\
    \        else if(lst[i] < secondSmallest){\n            secondSmallest = lst[i]\n\
    \        }\n    }\n    return secondSmallest\n}\n", "    if (lst.length < 2) {\n\
    \        return None;\n    }\n    var min = Math.min(...lst);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    return Math.min(...lst);\n}", "    if(lst.length === 0) return undefined;\n\
    \    if(lst.length === 1) return undefined;\n    let min = Math.min(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    lst.splice(minIndex, 1);\n    return\
    \ Math.min(...lst);\n}\n", "    if(lst.length == 0){\n        return null;\n \
    \   }\n    var current = lst[0];\n    var second = lst[0];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] < current){\n            second = current;\n\
    \            current = lst[i];\n        }\n        else if(lst[i] < second &&\
    \ lst[i] > current){\n            second = lst[i];\n        }\n    }\n    if(current\
    \ == second){\n        return null;\n    }\n    return second;\n}\nvar test =\
    \ [5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,",
  "\tvar smallest = lst[0];\n\tvar next = null;\n\tvar smallestIndex = 0;\n\tfor(var\
    \ i = 1; i < lst.length; i++){\n\t\tif(lst[i] < smallest){\n\t\t\tnext = smallest;\n\
    \t\t\tsmallest = lst[i];\n\t\t\tsmallestIndex = i;\n\t\t}\n\t\telse if(lst[i]\
    \ < next || next == null){\n\t\t\tnext = lst[i];\n\t\t}\n\t}\n\tif(smallestIndex\
    \ > 0) return next;\n\treturn null;\n}\n\nnext_smallest([1,2,1,5,6,7,8,9]);\n\n",
  "  if(lst.length < 2){\n    return null;\n  }else{\n    var min = Math.min(...lst);\n\
    \    var index = lst.indexOf(min);\n    lst.splice(index, 1);\n    return Math.min(...lst);\n\
    \  }\n}\n", "    if (lst.length < 2) return null;\n    var min = Math.min(...lst);\n\
    \    var index = lst.indexOf(min);\n    if (index >= 0) lst.splice(index, 1);\n\
    \    return Math.min(...lst);\n}\n", "    if(lst.length < 2){\n        return\
    \ null;\n    }\n    let smallest = Math.min(...lst);\n    while(lst.indexOf(smallest)\
    \ > -1){\n        lst.splice(lst.indexOf(smallest), 1);\n    }\n    if(lst.length\
    \ < 1){\n        return null;\n    }\n    return Math.min(...lst);\n}\n", "  \
    \  var k = lst.sort((a,b)=>a-b);\n    return (k[1] === undefined)? null : k[1];\n\
    }", "    if(!lst.length)\n        return undefined;\n    var temp, i;\n    for(i\
    \ = 0; i < lst.length; i++){\n        for(var j = i + 1; j < lst.length; j++){\n\
    \            if(lst[i] > lst[j]){\n                temp = lst[i];\n          \
    \      lst[i] = lst[j];\n                lst[j] = temp;\n            }\n     \
    \   }\n    }\n    if(lst.length > 1)\n        return lst[1];\n    else\n     \
    \   return undefined;\n}", "    let min = Math.min(...lst);\n    let newLst =\
    \ [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] !== min){\n\
    \            newLst.push(lst[i]);\n        }\n    }\n    let second = Math.min(...newLst);\n\
    \    if(newLst.length > 0){\n        return second;\n    }else{\n        return\
    \ 'None';\n    }\n}", "  let sorted_lst = lst.sort((a,b) => a-b);\n  return sorted_lst[1];\n\
    }\nlet test_list = [1,9,7,12,3,10];", "    var smallest = Math.min(...lst);\n\
    \    var list=[];\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]!=smallest){\n\
    \            list.push(lst[i]);\n        }\n    }\n    return Math.min(...list);\n\
    }\n", "    var small = lst[0];\n    var next_small = 0;\n    for(var i = 1; i\
    \ < lst.length; i++){\n        if(lst[i] < small){\n            next_small = small;\n\
    \            small = lst[i];\n        }\n        else if(lst[i] < next_small &&\
    \ lst[i] != small){\n            next_small = lst[i];\n        }\n    }\n    if(next_small\
    \ != 0){\n        return next_small;\n    }\n    else{\n        return \"None\"\
    ;\n    }\n}\n", "    var newLst = lst.sort(function(a,b){return a-b});\n    var\
    \ newArr = [];\n    var num = 0;\n    for(var i = 0; i < newLst.length; i++){\n\
    \        if(i+1 < newLst.length && newLst[i] != newLst[i+1]){\n            newArr.push(newLst[i+1]);\n\
    \            num++;\n        }\n    }\n    if(num >= 2){\n        return newArr[1];\n\
    \    }else{\n        return null;\n    }\n}\n", "    let min = Math.min(...lst);\n\
    \    let second = Math.max(...lst);\n    let secondPos = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] === min){\n            continue;\n\
    \        }\n        if(lst[i] < second){\n            second = lst[i];\n     \
    \       secondPos = i;\n        }\n    }\n    return secondPos !== 0 ? lst[secondPos]\
    \ : null;\n}\n", "    if (lst.length == 1) {\n        return null;\n    }\n  \
    \  if (lst.length == 2) {\n        return lst[0];\n    }\n    let x;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        for (let j = 0; j < lst.length;\
    \ j++) {\n            if (lst[i] > lst[j]) {\n                x = lst[i];\n  \
    \              lst[i] = lst[j];\n                lst[j] = x;\n            }\n\
    \        }\n    }\n    return lst[1];\n}\n", "    var smallest = lst[0];\n   \
    \ var nextSmallest = null;\n    for(var i = 1; i < lst.length; i++){\n       \
    \ if(lst[i] > smallest){\n            nextSmallest = lst[i];\n            break;\n\
    \        }\n    }\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ > smallest && lst[i] < nextSmallest){\n            nextSmallest = lst[i];\n\
    \        }\n    }\n    return nextSmallest;\n}\n", "  var smallest = Math.min(...lst);\n\
    \  var next_smallest = Infinity;\n  for(var i = 0; i < lst.length; i++){\n   \
    \ if(lst[i] > smallest && lst[i] < next_smallest){\n      next_smallest = lst[i];\n\
    \    }\n  }\n  if(next_smallest == Infinity){\n    return null;\n  }\n  return\
    \ next_smallest;\n}", "    if(lst.length > 1){\n        lst.sort(function(a, b){return\
    \ a-b});\n        return lst[1];\n    }\n    return null;\n}\n", "    let max\
    \ = lst[0];\n    let sm = lst[0];\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > max){\n            max = lst[i];\n        }else if(lst[i]\
    \ < sm){\n            sm = lst[i];\n        }\n    }\n    return sm;\n}", "  \
    \  let smallest = null;\n    let secondSmallest = null;\n    for(let i=0; i<lst.length;\
    \ i++){\n        if(smallest === null){\n            smallest = lst[i];\n    \
    \    }\n        else if(lst[i] < smallest){\n            secondSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < secondSmallest\
    \ || secondSmallest === null){\n            secondSmallest = lst[i];\n       \
    \ }\n    }\n    return secondSmallest;\n}", "  var min = Math.min(...lst);\n \
    \ lst.splice(lst.indexOf(min), 1);\n  var nextMin = Math.min(...lst);\n  return\
    \ nextMin == Infinity ? null : nextMin;\n}\n", "    if(!lst.length || lst.length\
    \ < 2)\n        return null;\n    let smallest = 0;\n    let next_smallest = 1;\n\
    \    if(lst[smallest] > lst[next_smallest]){\n        smallest = 1;\n        next_smallest\
    \ = 0;\n    }\n    for(let i = 2; i < lst.length; i++){\n        if(lst[i] < lst[smallest]){\n\
    \            next_smallest = smallest;\n            smallest = i;\n        }\n\
    \        else if(lst[i] < lst[next_smallest]){\n            next_smallest = i;\n\
    \        }\n    }\n    return lst[next_smallest];\n}\n", "    let min = Math.min(...lst);\n\
    \    let sndMin = Math.max(...lst);\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < sndMin && lst[i] > min){\n            sndMin = lst[i];\n\
    \        }\n    }\n    return (sndMin === Math.max(...lst)) ? null : sndMin;\n\
    }", "    let min = Math.min(...lst)\n    lst.splice(lst.indexOf(min),1)\n    return\
    \ Math.min(...lst)\n}", "    var smallest = Math.min(...lst);\n    var filtered\
    \ = lst.filter(x => x !== smallest);\n    if(filtered.length == 0){\n        return\
    \ null;\n    }\n    else{\n        return Math.min(...filtered);\n    }\n}\n",
  "    if (lst.length == 1) return null;\n    var min = lst[0];\n    var newlst =\
    \ lst.filter(function(num){\n        return num > min;\n    });\n    return newlst.length\
    \ == 0 ? null : newlst.reduce(function(a,b){\n        return a < b ? a : b;\n\
    \    });\n}\n", "    let arr= lst.sort((a,b)=> a-b);\n    return arr[1];\n}",
  "  var min = lst[0];\n  var second = null;\n  for(var i = 1; i < lst.length; i++){\n\
    \    if(lst[i] < min){\n      second = min;\n      min = lst[i];\n    }else if(second\
    \ === null || lst[i] < second){\n      second = lst[i];\n    }\n  }\n  return\
    \ second;\n}\n", "\tvar min = Math.min.apply(Math, lst);\n\tvar min_index = lst.indexOf(min);\n\
    \tif (min_index == lst.length - 1) {\n\t\treturn null;\n\t}\n\tlst.splice(min_index,\
    \ 1);\n\treturn Math.min.apply(Math, lst);\n}\n", "    if(lst.length<2){\n   \
    \     return null;\n    }\n    lst.sort(function(a,b){return a-b});\n    return\
    \ lst[1];\n}", "  let min = lst[0];\n  let nextmin = Infinity;\n  for(let i =\
    \ 1; i < lst.length; i++){\n    if(lst[i] < min){\n      nextmin = min;\n    \
    \  min = lst[i];\n    }\n    else if(lst[i] < nextmin && lst[i] > min){\n    \
    \  nextmin = lst[i];\n    }\n  }\n  if(nextmin === Infinity){\n    return None;\n\
    \  }\n  return nextmin;\n}", "\tif(lst.length==0){\n\t\treturn null;\n\t}\n\t\
    var smallest=lst[0];\n\tvar second_smallest=lst[0];\n\tfor(var i=1;i<lst.length;i++){\n\
    \t\tif(lst[i]<smallest){\n\t\t\tsecond_smallest=smallest;\n\t\t\tsmallest=lst[i];\n\
    \t\t}\n\t\telse if(lst[i]<second_smallest && lst[i]!=smallest){\n\t\t\tsecond_smallest=lst[i];\n\
    \t\t}\n\t}\n\tif(second_smallest!=smallest){\n\t\treturn second_smallest;\n\t\
    }\n\telse{\n\t\treturn null;\n\t}\n}\nnext_smallest([-1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
  "    var newLst = [];\n    var index = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < lst[index]){\n            index = i;\n        }\n    }\n\
    \    newLst = lst.slice(0, index).concat(lst.slice(index + 1));\n    for(var j\
    \ = 0; j < newLst.length; j++){\n        if(newLst[j] < newLst[index]){\n    \
    \        index = j;\n        }\n    }\n    return newLst[index];\n}\nvar lst =\
    \ [17,2,3,14,9,11,0];", "    var min = lst[0];\n    var min2 = null;\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < min){\n            min2 =\
    \ min;\n            min = lst[i];\n        }\n        else if(lst[i] < min2 ||\
    \ min2 == null){\n            min2 = lst[i];\n        }\n    }\n    return min2;\n\
    }\n", "    return (lst.sort(function(a,b){return a-b;}))[1];\n}", "  // \uD544\
    \uC694\uD55C \uAC83: \uC694\uC18C\uAC12\uC774 \uAC00\uC7A5 \uC791\uC740 \uAC83\
    \uC744 \uCC3E\uACE0 \uADF8 \uB2E4\uC74C\uC73C\uB85C \uC791\uC740 \uAC83\uC744\
    \ \uCC3E\uC544\uC57C \uD55C\uB2E4.\n  // \uC815\uB82C\uD574\uC11C \uAC00\uC7A5\
    \ \uC791\uC740 \uAC83\uC744 \uCC3E\uACE0 \uADF8 \uB2E4\uC74C\uC73C\uB85C \uC791\
    \uC740 \uAC83\uC744 \uCC3E\uB294\uB2E4.\n\n  var result = null;\n  if(!lst ||\
    \ lst.length == 0){\n    return result;\n  }\n  lst.sort(function(a,b){return\
    \ a-b});\n  for(var i = 1; i < lst.length; i++){\n    if(lst[i] != lst[0]){\n\
    \      result = lst[i];\n      break;\n    }\n  }\n  return result;\n}\nvar lst\
    \ = [3, 2, 1, 2, 3];", "    if(lst.length<2){\n        return null;\n    }\n \
    \   let min = lst[0];\n    let secondMin = lst[1];\n    if(min>secondMin){\n \
    \       min = lst[1];\n        secondMin = lst[0];\n    }\n    for(let i=2;i<lst.length;i++){\n\
    \        if(lst[i]<min){\n            secondMin = min;\n            min = lst[i];\n\
    \        }else if(lst[i]<secondMin){\n            secondMin = lst[i];\n      \
    \  }\n    }\n    return secondMin;\n}\n", "  var sorted = lst.sort((a,b) => a-b);\n\
    \  if(sorted.length < 2){\n    return null;\n  }\n  return sorted[1];\n}\n", " \
    \   var smallest = null;\n    var second_smallest = null;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(smallest == null || lst[i] < smallest){\n\
    \            second_smallest = smallest;\n            smallest = lst[i];\n   \
    \     }\n        else if(second_smallest == null || lst[i] < second_smallest){\n\
    \            second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }\nvar lst = [1, 4, 10, 6, 8, 9, 2, 5];", "    if(lst.length<=1){\n        return\
    \ null;\n    }\n    var min1=lst[0];\n    var min2=lst[1];\n    for(var i=1;i<lst.length;i++){\n\
    \        if(lst[i]<min1){\n            min2=min1;\n            min1=lst[i];\n\
    \        }\n        else if(lst[i]<min2){\n            min2=lst[i];\n        }\n\
    \    }\n    return min2;\n}\n", "    let smallest = Math.min(...lst);\n    lst.splice(lst.indexOf(smallest),\
    \ 1);\n    return lst.length > 0 ? Math.min(...lst) : null;\n}\n", "    if(lst.length<2){\n\
    \        return None;\n    }\n    var min= Math.min(...lst);\n    var idx_min=lst.indexOf(min);\n\
    \    lst.splice(idx_min,1);\n    var min2= Math.min(...lst);\n    return min2;\n\
    }\n", "    if (lst.length <2) return null;\n    var min = Math.min(...lst);\n\
    \    var first= true;\n    var min2;\n    for (var i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] == min) continue;\n        if (first) {\n            min2\
    \ = lst[i];\n            first = false;\n        }\n        else{\n          \
    \  min2 = Math.min(min2, lst[i]);\n        }\n    }\n    return min2;\n}\n", " \
    \   var sm = lst[0];\n    var small = Math.min(...lst);\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] === small){\n            lst.splice(i,\
    \ 1);\n        }\n    }\n    var small2 = Math.min(...lst);\n    if(lst.length\
    \ == 0){\n        return undefined;\n    }\n    return small2;\n}", "    if(lst.length\
    \ < 2){\n        return null;\n    }\n    else{\n        var min = Math.min(...lst);\n\
    \        var minIndex = lst.indexOf(min);\n        lst.splice(minIndex, 1);\n\
    \        return Math.min(...lst);\n    }\n}\n", "    var smallest = 0, nextSmallest\
    \ = 0;\n    if(lst.length < 2){\n        return null;\n    }\n    smallest = lst[0];\n\
    \    nextSmallest = lst[1];\n    if(smallest > nextSmallest){\n        smallest\
    \ = lst[1];\n        nextSmallest = lst[0];\n    }\n    for(var i = 2; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            nextSmallest = smallest;\n\
    \            smallest = lst[i];\n        }\n        else if(lst[i] < nextSmallest){\n\
    \            nextSmallest = lst[i];\n        }\n    }\n    return nextSmallest;\n\
    }\n\nlst = [5, 2, 3, 7, 8, 1, 9, 10, 0, 4];", "    let min = Math.min(...lst);\n\
    \    let t = lst.filter(x => x > min);\n    return Math.min(...t);\n}", "    let\
    \ smallest = Math.min(...lst);\n    let index = lst.indexOf(smallest);\n    lst.splice(index,\
    \ 1);\n    let smallest2 = Math.min(...lst);\n    return smallest2;\n}\n", " \
    \ if (lst.length < 3) {\n    return null;\n  }\n  lst.sort(function(a, b){return\
    \ a-b});\n  return lst[1];\n}\n", "  if(lst.length < 2){\n    return null;\n \
    \ }\n  else{\n    var smallest = lst[0];\n    var second_smallest = null;\n  \
    \  for(var i = 1; i < lst.length; i++){\n      if(lst[i] < smallest){\n      \
    \  second_smallest = smallest;\n        smallest = lst[i];\n      }\n      else\
    \ if(lst[i] < second_smallest || second_smallest == null){\n        second_smallest\
    \ = lst[i];\n      }\n    }\n    return second_smallest;\n  }\n}\n", "  if(!lst\
    \ || lst.length < 2) return null;\n  var smallest = lst[0];\n  var next_smallest\
    \ = lst[1];\n  if(next_smallest < smallest){\n    smallest = next_smallest;\n\
    \    next_smallest = lst[0];\n  }\n  for(var i = 2; i < lst.length; i++){\n  \
    \  if(lst[i] < smallest){\n      next_smallest = smallest;\n      smallest = lst[i];\n\
    \    }\n    else if(lst[i] < next_smallest){\n      next_smallest = lst[i];\n\
    \    }\n  }\n  return next_smallest;\n}\n", "  if(lst.length < 2){\n    return\
    \ null;\n  }else{\n    var smallest = lst[0];\n    var secondSmallest = lst[1];\n\
    \    if(smallest > secondSmallest){\n      smallest = lst[1];\n      secondSmallest\
    \ = lst[0];\n    }\n    for(var i = 2; i < lst.length; i++){\n      if(lst[i]\
    \ < smallest){\n        secondSmallest = smallest;\n        smallest = lst[i];\n\
    \      }else if(lst[i] < secondSmallest){\n        secondSmallest = lst[i];\n\
    \      }\n    }\n    return secondSmallest;\n  }\n}", "    var newLst = lst.slice().sort(function(a,b){\n\
    \        return a-b;\n    });\n    console.log(newLst[1]);\n}\nnext_smallest([2,3,4,5,6,7,9,0,1]);\n",
  "    let newArray = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i+1]\
    \ && lst[i] !== lst[i+1]){\n            newArray.push(lst[i+1]);\n        }\n\
    \    }\n    if(newArray.length >= 2){\n        let min = newArray[0];\n      \
    \  for(let j = 0; j < newArray.length; j++){\n            if(newArray[j] < min){\n\
    \                min = newArray[j];\n            }\n        }\n        return\
    \ min;\n    }\n    return null;\n}", "    var secondSmallest = Infinity;\n   \
    \ var smallest = Infinity;\n    for(var i = 0; i < lst.length; i++){\n       \
    \ if(lst[i] <= smallest){\n            smallest = lst[i];\n        }else if(lst[i]\
    \ <= secondSmallest){\n            secondSmallest = lst[i];\n        }\n    }\n\
    \    if(secondSmallest == Infinity){\n        return null;\n    }\n    return\
    \ secondSmallest;\n}\n", "  var smallest = lst[0];\n  var next_smallest = Number.MAX_VALUE;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smallest){\n      next_smallest\
    \ = smallest;\n      smallest = lst[i];\n    }\n    else if(lst[i] < next_smallest\
    \ && lst[i] > smallest){\n      next_smallest = lst[i];\n    }\n  }\n  if(next_smallest\
    \ == Number.MAX_VALUE){\n    return null;\n  }\n  return next_smallest;\n}\n\n\
    var lst = [1,5,2,3,4,5];\n", "  return lst.sort((a,b)=>a-b)[1]\n}", "    let newArr\
    \ = [];\n    lst.forEach(function(item){\n        newArr.push(item);\n    });\n\
    \    newArr.sort(function(a,b){\n        return a-b;\n    });\n    return newArr[1];\n\
    }\n", "    var smallest = lst[0];\n    var next_smallest = false;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > smallest){\n            next_smallest\
    \ = lst[i];\n            break;\n        }\n    }\n    if(next_smallest){\n  \
    \      for(var i = 0; i < lst.length; i++){\n            if(lst[i] > smallest\
    \ && lst[i] < next_smallest){\n                next_smallest = lst[i];\n     \
    \       }\n        }\n    }\n    return next_smallest;\n}\n\nvar x = next_smallest([4,5,6,5,5,5,7,8,9]);",
  "    if(lst.length === 0){\n        return null;\n    }else if(lst.length === 1){\n\
    \        return null;\n    }else{\n        let sorted = lst.sort((a,b) => a-b);\n\
    \        return sorted[1];\n    }\n}", "  let min = Math.min(...lst)\n  lst.splice(lst.indexOf(min),\
    \ 1)\n  return Math.min(...lst)\n}", "    let small, next;\n    small = next =\
    \ Number.MAX_VALUE;\n    lst.forEach(i => {\n        if(i<small){\n          \
    \  next = small;\n            small = i;\n        }else if(i<next){\n        \
    \    next = i;\n        }\n    });\n    return next;\n}\n", "    var smallest\
    \ = lst[0];\n    var pos = 0;\n    var count = 0;\n    while(count < lst.length){\n\
    \        if(lst[count] < smallest){\n            smallest = lst[count];\n    \
    \        pos = count;\n        }\n        count++;\n    }\n    lst.splice(pos,\
    \ 1);\n    var smallest2 = lst[0];\n    var pos2 = 0;\n    var count2 = 0;\n \
    \   while(count2 < lst.length){\n        if(lst[count2] < smallest2){\n      \
    \      smallest2 = lst[count2];\n            pos2 = count2;\n        }\n     \
    \   count2++;\n    }\n    return smallest2;\n}", "    if(lst.length < 2){\n  \
    \      return \"You need at least 2 elements\"\n    }else if(lst.length == 2){\n\
    \        return lst[1]\n    }else{\n        var min = Math.min(...lst)\n     \
    \   lst.splice(lst.indexOf(min), 1)\n        return Math.min(...lst)\n    }\n\
    }\n", "  var result = [];\n  for(var i = 0; i < lst.length; i++){\n    for(var\
    \ j = 0; j < lst.length; j++){\n      if(lst[i] < lst[j]){\n        result.push(lst[i]);\n\
    \      }\n    }\n  }\n  if(result.length < 1){\n    return null;\n  }else{\n \
    \   var newArr = result.filter(function(elem, index, self) {\n    return index\
    \ === self.indexOf(elem);\n    })\n    return newArr[1];\n  }\n}", "  if (lst.length<2)\
    \ {\n    return null;\n  }\n  var max_val=lst[0];\n  var min_val=lst[0];\n  for\
    \ (var i=0;i<lst.length;i++){\n    if (lst[i]>max_val){\n      max_val=lst[i];\n\
    \    }\n    if (lst[i]<min_val){\n      min_val=lst[i];\n    }\n  }\n  var min_val_2;\n\
    \  for (var i=0;i<lst.length;i++){\n    if (lst[i]>min_val && lst[i]<max_val){\n\
    \      min_val_2=lst[i];\n    }\n  }\n  return min_val_2;\n}", "    var sort =\
    \ lst.sort(function(a,b){\n        return a-b;\n    });\n    if(sort.length <\
    \ 2){\n        return null;\n    }\n    else{\n        return sort[1];\n    }\n\
    }", "    let smallest = Math.min(...lst);\n    let smallestIndex = lst.indexOf(smallest);\n\
    \    let newLst = lst.splice(smallestIndex, 1);\n    let newLstSmallest = Math.min(...newLst);\n\
    \    return newLstSmallest;\n}\n", "    let sorted = lst.sort(function(a, b){return\
    \ a-b});\n    return sorted[1];\n}", "  var smlst = Infinity;\n  var nxtsmlst\
    \ = Infinity;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] < smlst){\n\
    \      nxtsmlst = smlst;\n      smlst = lst[i];\n    }\n    else if(lst[i] < nxtsmlst){\n\
    \      nxtsmlst = lst[i];\n    }\n  }\n  if(nxtsmlst == Infinity){\n    return\
    \ null;\n  }\n  return nxtsmlst;\n}\n", "    if(lst.length<2){\n        return\
    \ null;\n    }\n    lst.sort((a,b)=>a-b);\n    return lst[1];\n}\n", "    lst\
    \ = lst.sort((a,b)=>a-b);\n    if(lst.length<2){\n        return null;\n    }\n\
    \    return lst[1];\n}\n", "    lst = lst.sort(function(a,b){return a-b});\n \
    \   var result = lst[1];\n    return result;\n}\n\nvar lst = [5, 4, 3, 2, 1];",
  "    if(lst.length < 3){\n        return null;\n    }\n    let min = lst[0];\n \
    \   let sec = null;\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            sec = min;\n            min = lst[i];\n        }\n    \
    \    else if(lst[i] < sec || sec === null){\n            sec = lst[i];\n     \
    \   }\n    }\n    return sec;\n}", "    //if the list is empty return null\n \
    \   if(lst.length === 0){\n        return null;\n    }\n    //if the list has\
    \ only one element then return null\n    if(lst.length === 1){\n        return\
    \ null;\n    }\n    //if the list has more than one element\n    else{\n     \
    \   //sort the list\n        lst.sort();\n        //return the 2nd smallest element\
    \ of the list\n        return lst[1];\n    }\n}\n", "    if (lst.length === 0)\
    \ return null;\n    let sortedLst = lst.sort(function(a, b){return a-b});\n  \
    \  let smallest = sortedLst[0];\n    for (let i = 1; i < sortedLst.length; i++){\n\
    \        if (sortedLst[i] === smallest) continue;\n        else return sortedLst[i];\n\
    \    }\n    return null;\n}\n", "    if (lst.length<2){\n        return null;\n\
    \    }\n    let min1 = lst[0];\n    let min2 = lst[1];\n    if (min1>min2){\n\
    \        min1 = lst[1];\n        min2 = lst[0];\n    }\n    for (let i = 2; i\
    \ < lst.length; i++) {\n        if (lst[i]<min1){\n            min2 = min1;\n\
    \            min1 = lst[i];\n        }\n        else if (lst[i]<min2){\n     \
    \       min2 = lst[i];\n        }\n    }\n    return min2;\n}", "\treturn lst.sort(function(a,b){return\
    \ a-b;})[1];\n}", "    var currentSmallest = lst[0];\n    var secondSmallest =\
    \ null;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] < currentSmallest){\n\
    \            secondSmallest = currentSmallest;\n            currentSmallest =\
    \ lst[i];\n        }\n        else if(lst[i] < secondSmallest){\n            secondSmallest\
    \ = lst[i];\n        }\n    }\n    return secondSmallest;\n}\n\nnext_smallest([2,\
    \ 3, 6, 6, 5]);\n", "    let newArr = lst.sort(function(a,b){return a-b})\n  \
    \  return newArr[1]\n}", "  if (lst.length < 2) {\n    return null;\n  }\n  lst.sort((a,\
    \ b) => a - b);\n  return lst[1];\n}\n", "    return lst.sort((a,b)=>a-b)[1] ||\
    \ null;\n}", "    if(!lst) return;\n    var temp = lst.sort(function(a,b){return\
    \ a-b});\n    var small = temp[0];\n    var next_small = null;\n    for(var i\
    \ = 0; i < temp.length; i++){\n        if(temp[i] > small){\n            next_small\
    \ = temp[i];\n            break;\n        }\n    }\n    return next_small;\n}",
  "    \n    if(lst.length < 2){\n        return null;\n    }\n    else{\n       \
    \ var smallest = Math.min(...lst);\n        //var smallest = lst[0];\n       \
    \ var secondSmallest = null;\n        for(var i = 0; i < lst.length; i++){\n \
    \           if(lst[i] === smallest){\n                lst.splice(i, 1);\n    \
    \        }\n        }\n        secondSmallest = Math.min(...lst);\n        return\
    \ secondSmallest;\n    }\n}\n", "    if (lst.length < 2) {\n        return null;\n\
    \    }\n    var min = Math.min(...lst);\n    lst.splice(lst.indexOf(min), 1);\n\
    \    return Math.min(...lst);\n}\n", "    var min = Math.min(...lst);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    var result = Math.min(...lst);\n    return result;\n}\nvar a = [5,\
    \ 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8,\
    \ 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5,\
    \ 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1,\
    \ 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5,\
    \ 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3,\
    \ 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5,\
    \ 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8,\
    \ 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5,\
    \ 6, 1, 9, 5, 3, 3, 9, 5, 8, 8, 9, 5, 6, 1, 9, 5, 3, 3, 9,", "  var smallest =\
    \ lst[0];\n  var next_smallest = 0;\n  var length = lst.length;\n  for(i=0; i<length;\
    \ i++){\n    if(lst[i]<smallest){\n      next_smallest = smallest;\n      smallest\
    \ = lst[i];\n    }\n    else if(lst[i]<next_smallest && lst[i]>smallest){\n  \
    \    next_smallest = lst[i];\n    }\n  }\n  return next_smallest;\n}\n", "   \
    \ if(lst.length<2){\n        return null;\n    }\n    let min = lst[0];\n    let\
    \ nextMin = lst[1];\n    for(let i=1; i<lst.length; i++){\n        if(lst[i]<min){\n\
    \            nextMin = min;\n            min = lst[i];\n        }else if(lst[i]<nextMin){\n\
    \            nextMin = lst[i];\n        }\n    }\n    return nextMin;\n}\n", " \
    \ lst.sort((a,b)=>a-b);\n  return lst[1];\n}", "    var smallest = lst[0];\n \
    \   var smallest2 = lst[1];\n    for(var i = 0; i < lst.length; i++){\n      \
    \  if(lst[i] < smallest){\n            smallest2 = smallest;\n            smallest\
    \ = lst[i];\n        }\n        else if(lst[i] < smallest2){\n            smallest2\
    \ = lst[i];\n        }\n    }\n    return smallest2;\n}", "  var smallest = lst[0];\n\
    \  var secondSmallest = null;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < smallest){\n      secondSmallest = smallest;\n      smallest = lst[i];\n \
    \   } else if(lst[i] < secondSmallest || secondSmallest === null){\n      secondSmallest\
    \ = lst[i];\n    }\n  }\n  return secondSmallest;\n}", "    if(lst.length<3){\n\
    \        return null;\n    }\n    var first, second;\n    if(lst[0]<lst[1]){\n\
    \        first = lst[0];\n        second = lst[1];\n    }\n    else{\n       \
    \ first = lst[1];\n        second = lst[0];\n    }\n    for(var i=2; i<lst.length;\
    \ i++){\n        if(lst[i]<first){\n            second = first;\n            first\
    \ = lst[i];\n        }\n        else if(lst[i]<second){\n            second =\
    \ lst[i];\n        }\n    }\n    return second;\n}\n", "    var min=lst[0];\n\
    \    var min2=null;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]<min){\n\
    \            min2=min;\n            min=lst[i];\n        }\n        else if(lst[i]<min2){\n\
    \            min2=lst[i];\n        }\n    }\n    return min2;\n}", "    let sorted\
    \ = lst.sort((a,b)=>{\n        return a-b;\n    });\n    return sorted[1] || null;\n\
    }\n\nnext_smallest([11, 20, 3, 15, 5, 9, 7, 1, 4, 17]);", "    let lst2 = lst.sort(function(a,\
    \ b){return a-b});\n    let lst_new = lst2.filter(function(item, pos) {\n    \
    \    return lst2.indexOf(item) == pos;\n    });\n    let lst_new2 = lst_new.filter(Number);\n\
    \    let num1 = lst_new2[0];\n    let num2 = lst_new2[1];\n    let num3 = null;\n\
    \    for (let i = 0; i < lst_new2.length; i++){\n        if (lst_new2[i] != num1\
    \ && lst_new2[i] != num2){\n            num3 = lst_new2[i];\n            break;\n\
    \        }\n    }\n    return num3;\n}\n", "var arr=[];\n  if(lst.length<=1){\n\
    \    return null;\n  }\nfor(var i=0;i<lst.length;i++){\n  if(lst[i]>lst[i+1]){\n\
    \    arr.push(lst[i+1]);\n  }\n}\nif(arr.length===0){\n  return null;\n}\nreturn\
    \ arr.sort()[0];\n}", "  var secondLowest=0;\n  var lowest=lst[0];\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(lst[i]<lowest){\n      secondLowest=lowest;\n\
    \      lowest=lst[i];\n    }else if(lst[i]<secondLowest){\n      secondLowest=lst[i];\n\
    \    }\n  }\n  return secondLowest;\n}\n", "    let min, secondMin;\n    if(lst.length\
    \ < 2) return null;\n    min = Math.min(...lst);\n    lst.splice(lst.indexOf(min),\
    \ 1);\n    secondMin = Math.min(...lst);\n    return secondMin\n}\n", "\tlst.sort(function(a,b){return\
    \ a-b});\n\tconsole.log(lst);\n\treturn lst[1];\n}\nnext_smallest([2,2,2,2]);\n",
  "    // var arr = lst.sort((a,b)=> a-b);\n    // return arr[1];\n    \n    \n  \
    \  var min1 = min2 = Infinity;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(lst[i] < min1){\n            min2 = min1;\n            min1 = lst[i];\n\
    \        }\n        else if(lst[i] < min2 && lst[i] != min1){\n            min2\
    \ = lst[i];\n        }\n    }\n    if(min2 == Infinity){\n        return null;\n\
    \    }\n    return min2;\n}\nnext_smallest([2,4,6,3,2]);", "    if(lst.length\
    \ == 0) return null;\n    let min = lst[0];\n    let min2 = null;\n    for(let\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] <= min){\n            min2 =\
    \ min;\n            min = lst[i];\n        }\n        else if(lst[i] < min2 ||\
    \ min2 == null){\n            min2 = lst[i];\n        }\n    }\n    return min2;\n\
    }\n", "   if(lst.length<2){\n       return \"none\";\n   }\n   var smallest=lst[0];\n\
    \   var secondsmallest=lst[1];\n   for(var i=1;i<lst.length;i++){\n       if(lst[i]<smallest){\n\
    \           secondsmallest=smallest;\n           smallest=lst[i];\n       }\n\
    \       else if(lst[i]<secondsmallest){\n           secondsmallest=lst[i];\n \
    \      }\n   }\n   return secondsmallest;\n}\n", "    if (lst.length < 2) {\n\
    \        return null;\n    }\n    var smallest = Math.min(...lst);\n    var nextSmallest\
    \ = smallest;\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ == smallest) {\n            continue;\n        }\n        if (lst[i] < nextSmallest)\
    \ {\n            nextSmallest = lst[i];\n        }\n    }\n    return nextSmallest;\n\
    }\n", "    if (lst.length > 1){\n        let smallest = lst[0];\n        let next_smallest\
    \ = lst[1];\n        for (let i = 1; i < lst.length; i++){\n            if (lst[i]\
    \ < smallest){\n                next_smallest = smallest;\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < next_smallest){\n  \
    \              next_smallest = lst[i];\n            }\n        }\n        return\
    \ next_smallest;\n    }\n    else{\n        return null;\n    }\n}\n", "    if\
    \ (lst.length < 2) {\n        return null;\n    }\n    //first we find the smallest\n\
    \    var smallest = lst[0];\n    for (var i = 1; i < lst.length; i++) {\n    \
    \    if (lst[i] < smallest) {\n            smallest = lst[i];\n        }\n   \
    \ }\n    //then we find the 2nd smallest\n    var second_smallest = lst[0];\n\
    \    for (var i = 1; i < lst.length; i++) {\n        if (lst[i] > smallest &&\
    \ lst[i] < second_smallest) {\n            second_smallest = lst[i];\n       \
    \ }\n    }\n    if (second_smallest == lst[0]) {\n        return null;\n    }\n\
    \    return second_smallest;\n}\n", "    var new_lst = lst.sort(function(a,b){return\
    \ a-b});\n    var len = new_lst.length;\n    if(len < 2){\n        return null;\n\
    \    }\n    var smallest = new_lst[0];\n    for(var i = 0; i < len; i++){\n  \
    \      if(new_lst[i] != smallest){\n            return new_lst[i];\n        }\n\
    \    }\n}", "    var min = lst[0];\n    var min2 = Infinity;\n    for(var i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] < min){\n            min2 = min;\n\
    \            min = lst[i];\n        }\n        else if(lst[i] < min2 && lst[i]\
    \ != min){\n            min2 = lst[i];\n        }\n    }\n    if(min2 === Infinity){\n\
    \        return null;\n    }\n    return min2;\n}\n", "    var min = lst[0];\n\
    \    var index = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            min = lst[i];\n            index = i;\n        }\n    }\n\
    \    if(index < (lst.length - 1)){\n        return lst[index + 1];\n    }else{\n\
    \        return null;\n    }\n}", "    var min = Math.min(...lst);\n    var index\
    \ = lst.indexOf(min);\n    lst.splice(index, 1);\n    var min2 = Math.min(...lst);\n\
    \    return min2;\n}\n\nnext_smallest([2,3,4,5,6,8,1,1,1,1,1,1,10,9,8,8,8,7,7,6,5,4,3,3,3,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0])",
  "  let arr = lst.sort((a,b)=>a-b);\n  let newArr = arr.slice(1,arr.length-1);\n\
    \  let smallest = [];\n  for(let i=0; i<newArr.length; i++){\n    if(newArr[i]\
    \ !== newArr[i+1]){\n      smallest.push(newArr[i])\n    }\n  }\n  return smallest[0]\
    \ ? smallest[0] : null;\n}\n", "  var min = Math.min(...lst);\n  var minLst =\
    \ lst.filter(x => x != min);\n  return minLst.length ? Math.min(...minLst) : undefined;\n\
    }\n", "  var min = Math.min(...lst);\n  var secmin = null;\n  for(let i=0; i<lst.length;\
    \ i++){\n    if(min!=lst[i]){\n      if(secmin==null || secmin>lst[i]){\n    \
    \    secmin = lst[i];\n      }\n    }\n  }\n  return secmin;\n}\n\nvar test_lst1\
    \ = [1,3,7,3,9,2,7,8];", "  let sortedList = lst.sort(function(a, b){return a-b});\n\
    \  let smallestNum = sortedList[0];\n  let secondSmallest = sortedList[1];\n \
    \ if(smallestNum === secondSmallest){\n    return null;\n  }else{\n    return\
    \ secondSmallest;\n  }\n}\n\nlet case1 = [4,4,4,4];\nlet case2 = [4,4,4,4,2];\n\
    let case3 = [2,1,3,4,5];\n", "  var min = null;\n  var sec = null;\n  if(!lst){\n\
    \    return null;\n  }\n  if(lst.length < 2){\n    return null;\n  }\n  min =\
    \ lst[0];\n  sec = lst[1];\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ < min){\n      sec = min;\n      min = lst[i];\n    }else if(lst[i] < sec){\n\
    \      sec = lst[i];\n    }\n  }\n  return sec;\n}\n", "    if(!lst || lst.length\
    \ < 2) return null;\n    let min = Math.min(...lst);\n    let min_index = lst.indexOf(min);\n\
    \    lst.splice(min_index, 1);\n    return Math.min(...lst);\n}\n", "    var len\
    \ = lst.length;\n    var flag = true;\n    var smallest = 0;\n    var nextSmallest\
    \ = 0;\n    var smallestFound = false;\n    var nextSmallestFound = false;\n \
    \   for(var i = 0; i < len; i++){\n        if(flag){\n            smallest = lst[i];\n\
    \            flag = false;\n        }\n        if(smallest > lst[i]){\n      \
    \      smallest = lst[i];\n            smallestFound = true;\n        }\n    }\n\
    \    flag = true;\n    for(var i = 0; i < len; i++){\n        if(flag){\n    \
    \        nextSmallest = lst[i];\n            flag = false;\n        }\n      \
    \  if(lst[i] > smallest && nextSmallest > lst[i]){\n            nextSmallest =\
    \ lst[i];\n            nextSmallestFound = true;\n        }\n    }\n    if(smallestFound\
    \ && nextSmallestFound){\n        return nextSmallest;\n    }else{\n        return\
    \ null;\n    }\n}\n\nvar lst = [\n    7, \n    2, \n    3, \n    1, \n    2, \n\
    \    7, \n    9, \n    4, \n    0, \n    3, \n    5, \n    8, \n    1, \n    7,\
    \ \n    6, \n    8, \n    9, \n    4, \n    5, \n    3, \n    3, \n    0, \n \
    \   6, \n    1, \n    9, \n    3, \n    5, \n    6, \n    4, \n    6, \n    9,\
    \ \n    6, \n    1, \n    3, \n    1, \n    4, \n    5, \n    3, \n    6, \n \
    \   8, \n    4, \n    5, \n    2, \n    7, \n    5, \n    6, \n    0, \n    3,\
    \ \n    8, \n    3", "    if (lst.length === 0){\n        return null;\n    }\n\
    \    let smallest = lst[0];\n    let second_smallest = null;\n    for (let i =\
    \ 1; i < lst.length; i++){\n        if (lst[i] < smallest){\n            second_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }\n        else if ((lst[i]\
    \ < second_smallest || second_smallest === null) && lst[i] !== smallest){\n  \
    \          second_smallest = lst[i];\n        }\n    }\n    return second_smallest;\n\
    }", "    return lst.sort((a,b)=>a-b)[1]\n}", "    if(lst.length < 2){\n      \
    \  return null;\n    }\n    var tmp = lst[0];\n    var tmp2 = lst[1];\n    for(var\
    \ i = 1; i < lst.length; i++){\n        if(lst[i] < tmp){\n            tmp2 =\
    \ tmp;\n            tmp = lst[i];\n        }else if(lst[i] < tmp2){\n        \
    \    tmp2 = lst[i];\n        }\n    }\n    return tmp2;\n}\n", "    if(lst.length\
    \ < 2){\n        return false;\n    }\n    var min = Math.min(...lst);\n    var\
    \ min_index = lst.indexOf(min);\n    lst.splice(min_index, 1);\n    return Math.min(...lst);\n\
    }\n\n", "    if(lst.length <= 1){\n        return null;\n    }\n    var sorted\
    \ = lst.sort(function(a,b){return a-b});\n    return sorted[1];\n}\n", "    var\
    \ min = lst[0];\n    var secondMin = Number.MAX_VALUE;\n    for(var i = 1; i <\
    \ lst.length; i++){\n        if(lst[i] < min){\n            secondMin = min;\n\
    \            min = lst[i];\n        }\n        else if(lst[i] < secondMin && lst[i]\
    \ > min){\n            secondMin = lst[i];\n        }\n    }\n    if(secondMin\
    \ == Number.MAX_VALUE){\n        return null;\n    }\n    return secondMin;\n}",
  "    if (lst.length < 2) {\n        return null;\n    }\n    var sorted = lst.sort(function(a,\
    \ b){return a-b});\n    return sorted[1];\n}\n", "    if(!lst.length) return null;\n\
    \    var first = Number.MAX_VALUE;\n    var second = Number.MAX_VALUE;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] <= first){\n            second\
    \ = first;\n            first = lst[i];\n        }else if(lst[i] < second){\n\
    \            second = lst[i];\n        }\n    }\n    return second;\n}\n\nvar\
    \ lst = [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,",
  "    let currMin = Math.min(...lst);\n    return lst.filter(num => num !== currMin).length\
    \ > 0 ? Math.min(...lst.filter(num => num !== currMin)) : null;\n}\n", "  if (lst.length\
    \ < 2) return null;\n  var sortedList = lst.sort(function(a,b){return a-b});\n\
    \  return sortedList[1];\n}\nnext_smallest([5,4,3,2,1])\n", "\tvar min=Math.min.apply(null,lst)\n\
    \tlst.splice(lst.indexOf(min),1)\n\treturn Math.min.apply(null,lst)\n}", "   \
    \ var smallest =lst[0];\n    var second_smallest = null;\n    for(var i=1;i<lst.length;i++){\n\
    \        if(lst[i]<smallest){\n            second_smallest = smallest;\n     \
    \       smallest = lst[i];\n        }\n        else if(lst[i]<second_smallest\
    \ && lst[i]>smallest){\n            second_smallest = lst[i];\n        }\n   \
    \ }\n    return second_smallest;\n}\n", "    var smallest=lst[0]\n    var j=0\n\
    \    for(var i=0;i<lst.length;i++){\n        if(lst[i]<smallest){\n          \
    \  smallest=lst[i]\n            j=i\n        }\n    }\n    lst.splice(j,1)\n \
    \   var smallest2=lst[0]\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]<smallest2){\n\
    \            smallest2=lst[i]\n        }\n    }\n    if(smallest2===smallest){\n\
    \        return undefined\n    }\n    return smallest2\n}", "    var min = lst[0];\n\
    \    var min_index = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            min = lst[i];\n            min_index = i;\n        }\n\
    \    }\n    var second_min = lst[min_index + 1];\n    for(var i = min_index +\
    \ 1; i < lst.length; i++){\n        if(lst[i] < second_min){\n            second_min\
    \ = lst[i];\n        }\n    }\n    return second_min;\n}", "    let newLst = lst.sort((a,b)=>a-b);\n\
    \    if(newLst.length > 1){\n        return newLst[1];\n    }else{\n        return\
    \ null;\n    }\n}", "    var nextSmallest;\n    var small = 0;\n    if(lst ===\
    \ []){\n        return null;\n    }\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < lst[small]){\n            small = i;\n        }\n    }\n\
    \    var smallest = lst[small];\n    for(var k = 0; k < lst.length; k++){\n  \
    \      if(lst[k] > smallest && (nextSmallest === undefined || lst[k] < nextSmallest)){\n\
    \            nextSmallest = lst[k];\n        }\n    }\n    return nextSmallest;\n\
    }\n", "    if(lst.length < 2){\n        return null;\n    }\n    var min = lst[0];\n\
    \    var min2 = lst[1];\n    for(var i = 1; i < lst.length; i++){\n        if(lst[i]\
    \ < min){\n            min2 = min;\n            min = lst[i];\n        }\n   \
    \     else if(lst[i] < min2){\n            min2 = lst[i];\n        }\n    }\n\
    \    return min2;\n}\n", "    let smallest = 0;\n    let secondSmallest = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n  \
    \          secondSmallest = smallest;\n            smallest = lst[i];\n      \
    \  }\n        else if(lst[i] < secondSmallest){\n            secondSmallest =\
    \ lst[i];\n        }\n    }\n    return secondSmallest;\n}", "    var min = lst[0];\n\
    \    var second_min = lst[1];\n    for(var i = 1; i < lst.length; i++){\n    \
    \    if(lst[i] < min){\n            second_min = min;\n            min = lst[i];\n\
    \        }\n        else if(lst[i] < second_min && lst[i] > min){\n          \
    \  second_min = lst[i];\n        }\n    }\n    if(second_min == lst[1])\n    \
    \    return undefined;\n    return second_min;\n}\n", "   if(lst === undefined\
    \ || lst.length < 2) {\n      return null;\n   }\n\n   let smallest = lst[0];\n\
    \   let secondSmallest = lst[1];\n\n   if(lst.length > 1) {\n      for(let i =\
    \ 1; i < lst.length; i++) {\n         if(lst[i] < smallest) {\n            secondSmallest\
    \ = smallest;\n            smallest = lst[i];\n         } else if(lst[i] < secondSmallest)\
    \ {\n            secondSmallest = lst[i];\n         }\n      }\n   }\n\n   return\
    \ secondSmallest;\n}\n", "    var smallest = lst[0];\n    var smallest1;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n     \
    \       smallest = lst[i];\n        }\n    }\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest1 && lst[i] != smallest){\n            smallest1\
    \ = lst[i];\n        }\n    }\n    if(smallest1 == undefined){\n        return\
    \ null;\n    }\n    return smallest1;\n}", "    let arr = lst.sort((a,b)=>a-b);\n\
    \    return arr[1] || null;\n}\n", "    var k = 0;\n    var k1 = 0;\n    var min\
    \ = Math.min.apply(null, lst);\n    var min_index = lst.indexOf(min);\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] > min && lst[i] < k ||\
    \ lst[i] > min && k == 0) {\n            k = lst[i];\n            k1 = i;\n  \
    \      }\n    }\n    if (min_index == k1){\n        return k\n    } else {\n \
    \       return \"None\"\n    }\n}", "    if(lst.length < 2){\n        return null;\n\
    \    }\n    let first = lst[0];\n    let second = null;\n    for(let i = 1; i\
    \ < lst.length; i++){\n        if(lst[i] < first){\n            second = first;\n\
    \            first = lst[i];\n        }\n        else if(lst[i] < second){\n \
    \           second = lst[i];\n        }\n    }\n    return second;\n}", "    let\
    \ flag=false;\n    let ind=0;\n    for(let i=0;i<lst.length;i++){\n        let\
    \ min=lst[i];\n        let second_min=false;\n        for(let j=0;j<lst.length;j++){\n\
    \            if(min>lst[j] && i!=j){\n                min=lst[j];\n          \
    \      second_min=true;\n                ind=j;\n            }\n        }\n  \
    \      if(second_min && i!=ind){\n            return lst[ind];\n        }\n  \
    \  }\n    return null;\n}\n", "    var min=null;\n    var min2=null;\n    for(var\
    \ i=0;i<lst.length;i++){\n        if(lst[i]<min || min===null){\n            min2=min;\n\
    \            min=lst[i];\n        }\n        else if(lst[i]<min2 || min2===null){\n\
    \            min2=lst[i];\n        }\n    }\n    return min2;\n}", "    var firstSmallest\
    \ = Math.min(...lst);\n    var firstSmallestIndex = lst.indexOf(firstSmallest);\n\
    \    var lstWithoutFirstSmallest = [...lst.slice(0, firstSmallestIndex), ...lst.slice(firstSmallestIndex\
    \ + 1)];\n    return Math.min(...lstWithoutFirstSmallest);\n}", "    lst.sort((a,b)=>a-b);\n\
    \    for(let i=0;i<lst.length;i++){\n        if(lst[i] != lst[i+1]){\n       \
    \     return lst[i+1];\n        }\n    }\n    return null;\n}\n", "    let smallest\
    \ = lst[0];\n    let sec_smallest = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < smallest){\n            sec_smallest = smallest;\n      \
    \      smallest = lst[i];\n        }\n        else if(lst[i] < sec_smallest){\n\
    \            sec_smallest = lst[i];\n        }\n    }\n    return sec_smallest;\n\
    }", "    var s=Infinity;\n    var s2=Infinity;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(lst[i]<s){\n            s2=s;\n            s=lst[i];\n        }\n\
    \        else if(lst[i]<s2 && lst[i]!=s){\n            s2=lst[i];\n        }\n\
    \    }\n    if(s2==Infinity){\n        return null;\n    }\n    return s2;\n}",
  "  let smallest = Math.min(...lst);\n  lst.splice(lst.indexOf(smallest), 1);\n \
    \ return lst.length === 0 ? null : Math.min(...lst);\n}\n", "    if(lst === null\
    \ || lst.length < 2){\n        return null;\n    }\n    let min = Math.min(...lst);\n\
    \    let minIndex = lst.indexOf(min);\n    let minCount = 0;\n    let secMin =\
    \ null;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] === min){\n\
    \            minCount++;\n        }else if(secMin === null || lst[i] < secMin){\n\
    \            secMin = lst[i];\n        }\n    }\n    if(minCount === 1){\n   \
    \     return secMin;\n    }else{\n        for(let i = 0; i < lst.length; i++){\n\
    \            if(lst[i] > min && lst[i] < secMin){\n                secMin = lst[i];\n\
    \            }\n        }\n        return secMin;\n    }\n}", "    if(lst.length\
    \ < 2){\n        return null;\n    }\n    let min = lst[0];\n    let secondMin\
    \ = lst[1];\n    for(let i = 1; i < lst.length; i++){\n        if(lst[i] < min){\n\
    \            secondMin = min;\n            min = lst[i];\n        }\n        else\
    \ if(lst[i] < secondMin){\n            secondMin = lst[i];\n        }\n    }\n\
    \    return secondMin;\n}\n", "    let min = Math.min(...lst);\n    let index\
    \ = lst.indexOf(min);\n    lst.splice(index, 1);\n    if(lst.length === 0){\n\
    \        return null;\n    }\n    return Math.min(...lst);\n}", "    let smallest\
    \ = null;\n    let secondSmallest = null;\n    for(let i=0; i<lst.length; i++){\n\
    \        if(smallest === null){\n            smallest = lst[i];\n        }else\
    \ if(secondSmallest === null){\n            if(lst[i] < smallest){\n         \
    \       secondSmallest = smallest;\n                smallest = lst[i];\n     \
    \       }else{\n                secondSmallest = lst[i];\n            }\n    \
    \    }else{\n            if(lst[i] < smallest){\n                secondSmallest\
    \ = smallest;\n                smallest = lst[i];\n            }else if(lst[i]\
    \ < secondSmallest){\n                secondSmallest = lst[i];\n            }\n\
    \        }\n    }\n    return secondSmallest;\n}\n", "    let secondSmallest =\
    \ Math.min(...lst)\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ < secondSmallest && lst[i] !== Math.min(...lst)){\n            secondSmallest\
    \ = lst[i]\n        }\n    }\n    return secondSmallest\n}\n", "    var min =\
    \ Math.min(...lst)\n    var remove = lst.indexOf(min)\n    lst.splice(remove,1)\n\
    \    var secondmin = Math.min(...lst)\n    return secondmin\n}", "    var len\
    \ = lst.length;\n    if(len > 1){\n        var min = Math.min(...lst);\n     \
    \   var min_index = lst.indexOf(min);\n        lst.splice(min_index, 1);\n   \
    \     var next_min = Math.min(...lst);\n        return next_min;\n    }\n    else{\n\
    \        return null;\n    }\n\n}", "    let arr = lst.filter(function(num){\n\
    \        return num > Math.min(...lst);\n    });\n    if(arr.length === 0){\n\
    \        return null;\n    }\n    else{\n        return Math.min(...arr);\n  \
    \  }\n}", "    let second = Number.MAX_VALUE;\n    let first = Number.MAX_VALUE;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < first){\n     \
    \       second = first;\n            first = lst[i];\n        }\n        else\
    \ if(lst[i] < second && lst[i] > first){\n            second = lst[i];\n     \
    \   }\n    }\n    if(first == Number.MAX_VALUE){\n        return null;\n    }\n\
    \    else if(second == Number.MAX_VALUE){\n        return null;\n    }\n    else{\n\
    \        return second;\n    }\n}", "    let smallest = lst[0];\n    let nextSmallest\
    \ = lst[1];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n\
    \            nextSmallest = smallest;\n            smallest = lst[i];\n      \
    \  }\n        else if(lst[i] < nextSmallest && lst[i] > smallest){\n         \
    \   nextSmallest = lst[i];\n        }\n    }\n    return nextSmallest;\n}", " \
    \   let smallest = lst[0];\n    let next_smallest = lst[1];\n    let n = lst.length;\n\
    \    for(let i = 2; i < n; i++){\n        if(lst[i] < smallest){\n           \
    \ smallest = lst[i];\n        }\n        else if(lst[i] < next_smallest){\n  \
    \          next_smallest = lst[i];\n        }\n    }\n    return next_smallest;\n\
    }\n", "    let smallest = lst[0];\n    let next_smallest = lst[1];\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] < smallest){\n            next_smallest\
    \ = smallest;\n            smallest = lst[i];\n        }else if(lst[i] < next_smallest){\n\
    \            next_smallest = lst[i];\n        }\n    }\n    return next_smallest;\n\
    }\n\nlet next_smallest_test = [1,3,5,7,9,2,4,6,8,10];", "    if (lst.length ===\
    \ 0) return;\n    let min = Math.min(...lst)\n    lst.splice(lst.indexOf(min),\
    \ 1)\n    return Math.min(...lst)\n}", "    var newArray=[]\n    for(var i=0;\
    \ i<lst.length; i++){\n        if(lst[i]<lst[1]){\n            newArray.push(lst[i])\n\
    \        }\n    }\n    return newArray[1]\n}", "    var result = lst[0];\n   \
    \ var smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n        if(smallest\
    \ > lst[i]){\n            smallest = lst[i];\n        }\n        if(lst[i] < result\
    \ && lst[i] > smallest){\n            result = lst[i];\n        }\n    }\n   \
    \ if(result == lst[0]){\n        return null;\n    }\n    return result;\n}\n",
  "    let smallest = Math.min(...lst)\n    if(lst.length > 1){\n        lst.splice(lst.indexOf(smallest),\
    \ 1)\n        return Math.min(...lst)\n    }else{\n        return null\n    }\n\
    }\nnext_smallest([2, 3, 4, 5, 6, 7, 1])\n", "    lst.sort(function(a,b){return\
    \ a-b});\n    var smallest = lst[0];\n    for(var i = 1; i < lst.length; i++){\n\
    \        if(lst[i] > smallest){\n            return lst[i];\n        }\n    }\n\
    \    return null;\n}\n\nvar my_list = [7,3,19,40,4,7,1];\nvar result = next_smallest(my_list);",
  "  let sum = lst.sort((a,b)=>{return a-b})\n  let num = 0\n  for(let i =0; i<sum.length;\
    \ i++){\n    if(sum[i]!==num){\n      num = sum[i]\n      return num\n    }\n\
    \  }\n  return null\n}\nnext_smallest([7,0,5,2,7,9,0,1,0,1,2,3,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7",
  "    var sorted = lst.sort(function(a,b){\n        return a-b;\n    });\n    var\
    \ smallest = lst[0];\n    for(var i = 0; i < lst.length; i++){\n        if(sorted[i]\
    \ > smallest){\n            return sorted[i];\n        }\n    }\n    return null;\n\
    }", "    if(lst.length == 1){\n        return null;\n    }\n    var min = Math.min(...lst);\n\
    \    var min_index = lst.indexOf(min);\n    var new_lst = lst.slice(0, min_index).concat(lst.slice(min_index\
    \ + 1));\n    return Math.min(...new_lst);\n}\n", "    var smallest = null;\n\
    \    var second_smallest = null;\n    for(var i = 0; i < lst.length; i++){\n \
    \       if(smallest == null){\n            smallest = lst[i];\n        }\n   \
    \     else if(second_smallest == null){\n            if(lst[i] < smallest){\n\
    \                second_smallest = smallest;\n                smallest = lst[i];\n\
    \            }\n            else{\n                second_smallest = lst[i];\n\
    \            }\n        }\n        else{\n            if(lst[i] < smallest){\n\
    \                second_smallest = smallest;\n                smallest = lst[i];\n\
    \            }\n            else if(lst[i] < second_smallest){\n             \
    \   second_smallest = lst[i];\n            }\n        }\n    }\n    return second_smallest;\n\
    }\n", "    return lst.sort((a,b)=>a-b)[1]\n}", "    lst.sort(function(a,b){\n\
    \        return a-b;\n    });\n    if(lst.length <=1){\n        return \"None\"\
    ;\n    }\n    return lst[1];\n}", "  var dup = lst.slice(0).sort(function(a,b){return\
    \ a-b});\n  var ans = [];\n  for(var i = 0; i < dup.length; i++){\n    if(lst.indexOf(dup[i])\
    \ != lst.lastIndexOf(dup[i])){\n      ans.push(dup[i]);\n    }\n  }\n  if(ans.length\
    \ > 0){\n    return ans[0];\n  }\n  return undefined;\n}", "    var sortedList\
    \ = lst.sort((a,b) => a-b);\n    if(sortedList.length < 2){\n        return null;\n\
    \    }\n    return sortedList[1];\n}\n", "    if (lst.length == 1){\n        return\
    \ None;\n    } else {\n        let min = lst[0];\n        let max = lst[0];\n\
    \        for (let i = 0; i < lst.length; i++){\n            if (lst[i] < min){\n\
    \                min = lst[i];\n            }\n            if (lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n        if (min == max){\n\
    \            return None;\n        } else {\n            let current = max;\n\
    \            for (let i = 0; i < lst.length; i++){\n                if (lst[i]\
    \ < current && lst[i] > min){\n                    current = lst[i];\n       \
    \         }\n            }\n            return current;\n        }\n    }\n}",
  "    if (lst.length < 2) {\n        return null;\n    }\n    let min_ind = 0;\n\
    \    let min = lst[0];\n    let second = lst[1];\n    for (let i = 1; i < lst.length;\
    \ i++) {\n        if (lst[i] < min) {\n            second = min;\n           \
    \ min = lst[i];\n            min_ind = i;\n        } else if (lst[i] < second\
    \ && lst[i] != min) {\n            second = lst[i];\n        }\n    }\n    return\
    \ second;\n}\n", "    if(!lst || lst.length<2) return undefined;\n    let min\
    \ = lst[0];\n    let min2 = lst[1];\n    for(let i=1; i<lst.length; i++){\n  \
    \      if(lst[i]<min){\n            min2 = min;\n            min = lst[i];\n \
    \       }\n        else if(lst[i]<min2 && lst[i]!=min){\n            min2 = lst[i];\n\
    \        }\n    }\n    return min2;\n}", "    return lst.sort((a,b)=> a-b)[1]\n\
    }\nnext_smallest([2,5,7,8,1])//2\nnext_smallest([9,7,6,5,4,3,2,1])//2\nnext_smallest([5,5,5,5,5,5,5,5])//None\n",
  "    lst.sort(function(a,b){return a-b});\n    return lst[1];\n}", "    // First\
    \ sort the array, then return the 2nd element\n    if(lst.length < 2){\n     \
    \   return null;\n    }else{\n        let arr = lst.sort(function(a, b){return\
    \ a-b});\n        return arr[1];\n    }\n}", "  var min = 0;\n  var nextmin =\
    \ 0;\n  for(var i =0; i<lst.length; i++){\n    if(lst[i] < min){\n      nextmin\
    \ = min;\n      min = lst[i];\n    }else if(lst[i] < nextmin){\n      nextmin\
    \ = lst[i];\n    }\n  }\n  return nextmin;\n}\n", "    var maxVal=Math.max.apply(null,lst);\n\
    \    var index;\n    var maxi=lst.indexOf(maxVal);\n    var n=lst.splice(maxi,1);\n\
    \    var minVal=Math.min.apply(null,lst);\n    return minVal;\n}\nnext_smallest([1,2,3,4,5]);",
  "    var copy = lst.slice(0);\n    copy.sort(function(a,b){\n        return a-b;\n\
    \    });\n    if(copy.length>1){\n        return copy[1];\n    }\n    return null;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

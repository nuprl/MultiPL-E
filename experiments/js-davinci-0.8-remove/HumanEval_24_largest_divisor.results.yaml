language: js
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  //initialize a counter, i\n\
    \  let i = n-1;\n  //while i is greater than 1, check to see if n divides i\n\
    \  while(i > 1){\n    if(n % i === 0){\n      //if it does, return i\n      return\
    \ i;\n    }\n    //otherwise, decrement i\n    i--;\n  }\n  //if i is 1, then\
    \ n is prime, so return 1\n  return 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 2;\n    for(let\
    \ i = 2; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpezk5rnhl.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpezk5rnhl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=0; i < n; i++){\n\t\t\
    if(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmps90atke2.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps90atke2.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let divisor = n-1;\n  while(divisor\
    \ > 0){\n    if(n % divisor === 0){\n      return divisor;\n    } else {\n   \
    \   divisor -= 1;\n    }\n  }\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    //Type your answer here\n\
    \    var ans = 0;\n    for(var i = n-1; i > 0; i--){\n        if(n % i == 0){\n\
    \            ans = i;\n            break;\n        }\n    }\n    return ans;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = 2;\n  if (n ==\
    \ 1){\n    return 1;\n  }\n  while (n > divisor){\n    if (n % divisor == 0){\n\
    \      return divisor;\n    }\n    else{\n      divisor++;\n    }\n  }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpb2dfepvg.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpb2dfepvg.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    //Start count at 0, if n is\
    \ not a prime number, increment until it finds a number\n    var count = 0;\n\
    \    //If n is a prime number, return undefined\n    if(prime(n)){\n        return\
    \ undefined;\n    }\n    //If n is not a prime number, increment count by 1 until\
    \ n is divisible by count\n    for(count = 0; n % count != 0; count++){\n    \
    \    console.log(count);\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvgdejf40.js:6\n    if(prime(n)){\n    ^\n\nReferenceError: prime\
    \ is not defined\n    at largest_divisor (/tmp/tmpvgdejf40.js:6:5)\n    at test\
    \ (/tmp/tmpvgdejf40.js:20:20)\n    at Object.<anonymous> (/tmp/tmpvgdejf40.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor--;\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n - 1;\n   \
    \ while(divisor > 0){\n        if(n % divisor == 0){\n            break;\n   \
    \     }\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(let i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n - 1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet divisor = n-1;\n\twhile(n%divisor\
    \ != 0){\n\t\tdivisor--;\n\t}\n\treturn divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar res = 0;\n\tfor(var i =\
    \ n-1; i>0; i--){\n\t\tif(n%i == 0){\n\t\t\tres = i;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var factor = n-1;\n    while(factor\
    \ > 0){\n        if(n % factor == 0){\n            return factor;\n        }\n\
    \        factor--;\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i >= 1; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 1;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(n % i === 0){\n            largest = i;\n \
    \       }\n    }\n    return largest;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjkefbinf.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkefbinf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n === 0) return false;\n\
    \    var largest = 2;\n    var divisor = 1;\n    while(divisor <= n / 2){\n  \
    \      if(n % divisor === 0){\n            largest = divisor;\n        }\n   \
    \     divisor++;\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var res = 0;\n    for(var\
    \ i = 1; i <= Math.floor(n/2); i++){\n        if(n % i == 0) res = i;\n    }\n\
    \    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 1;\n\
    \    for(let i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nlargest_divisor(25);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  return Math.max.apply(null,\
    \ divisors(n));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpv7rle3ki.js:3\n  return Math.max.apply(null, divisors(n));\n  \
    \                ^\n\nReferenceError: divisors is not defined\n    at largest_divisor\
    \ (/tmp/tmpv7rle3ki.js:3:19)\n    at test (/tmp/tmpv7rle3ki.js:11:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpv7rle3ki.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor -= 1;\n  }\n  return divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = 1; i < n; i++){\n\
    \t\tif(n % i == 0){\n\t\t\tbig_divisor = i;\n\t\t}\n\t}\n\treturn big_divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i >= 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  //start with n-1, and keep decrementing\n\
    \  var divisor = n-1;\n  while(n%divisor!==0){\n    divisor--;\n  }\n  return\
    \ divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n == 0)\n    return 0;\n\
    \  for(var i = n - 1; i > 0; i--){\n    if(n % i == 0)\n      return i;\n  }\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar max = 1;\n\tif(n==1){\n\t\
    \treturn max;\n\t}else{\n\t\tfor(var i=2; i<n; i++){\n\t\t\tif(n%i == 0){\n\t\t\
    \t\tmax = i;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=n-1;i>0;i--){\n\t\tif(n%i\
    \ == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    //Largest number that divides\
    \ n evenly is n-1\n    //Check each number up to n-1 to see if it divides evenly\n\
    \    var i;\n    for(i=n-1; i>0; i--){\n        if (n%i == 0){\n            break;\n\
    \        }\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 1;\n\
    \    for(let i = 2; i <= n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpnsg43ik8.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnsg43ik8.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n - 1; i > 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = 1;\n\tvar largest\
    \ = 1;\n\twhile(divisor < n){\n\t\tif(n % divisor == 0){\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = n-1;\n\tfor(var\
    \ i = divisor; i>= 1; i--){\n\t\tif(n%i === 0){\n\t\t\tdivisor = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn divisor;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    divisor = n - 1;\n    while(n\
    \ % divisor !== 0){\n        divisor = divisor - 1;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    //Answers\n    const ans1\
    \ = n - 1;\n    const ans2 = n % 2;\n    const ans3 = n % 3;\n    const ans4 =\
    \ n % 4;\n    const ans5 = n % 5;\n    const ans6 = n % 6;\n    const ans7 = n\
    \ % 7;\n    const ans8 = n % 8;\n    const ans9 = n % 9;\n    const ans10 = n\
    \ % 10;\n    //Question\n    console.log(\"Question: For a given number n, find\
    \ the largest number that divides n evenly, smaller than n\");\n    //Output Answer\n\
    \    console.log(\"Answer 1: \" + ans1);\n    console.log(\"Answer 2: \" + ans2);\n\
    \    console.log(\"Answer 3: \" + ans3);\n    console.log(\"Answer 4: \" + ans4);\n\
    \    console.log(\"Answer 5: \" + ans5);\n    console.log(\"Answer 6: \" + ans6);\n\
    \    console.log(\"Answer 7: \" + ans7);\n    console.log(\"Answer 8: \" + ans8);\n\
    \    console.log(\"Answer 9: \" + ans9);\n    console.log(\"Answer 10: \" + ans10);\n\
    }\nlargest_divisor(10);\n\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmprwjra8e7.js:37:10)\n    at\
    \ Object.<anonymous> (/tmp/tmprwjra8e7.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'Question: For a given number n, find the largest number that divides n
    evenly, smaller than n

    Answer 1: 9

    Answer 2: 0

    Answer 3: 1

    Answer 4: 2

    Answer 5: 0

    Answer 6: 4

    Answer 7: 3

    Answer 8: 2

    Answer 9: 1

    Answer 10: 0

    Question: For a given number n, find the largest number that divides n evenly,
    smaller than n

    Answer 1: 2

    Answer 2: 1

    Answer 3: 0

    Answer 4: 3

    Answer 5: 3

    Answer 6: 3

    Answer 7: 3

    Answer 8: 3

    Answer 9: 3

    Answer 10: 3

    '
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var arr = [];\n  for(var i =\
    \ 1; i < n; i++){\n    if(n % i === 0){\n      arr.push(i);\n    }\n  }\n  console.log(arr[arr.length\
    \ - 1]);\n}\nlargest_divisor(15);\nlargest_divisor(17);\nlargest_divisor(199);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpt3npw2g9.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpt3npw2g9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '5

    1

    1

    1

    '
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i!==0){\n\
    \        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var d = n-1;\n    while(d\
    \ > 0){\n        if(n % d == 0){\n            return d;\n        }\n        d--;\n\
    \    }\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar res = 1;\n\tfor(var i =\
    \ 2; i < n; i++){\n\t\tif(n % i == 0){\n\t\t\tres = i;\n\t\t}\n\t}\n\treturn res;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var j = 0;\n    var answer\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        if(n % i == 0){\n           \
    \ j = i;\n            if(j > answer){\n                answer = j;\n         \
    \   }\n        }\n    }\n    return answer;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 0;\n    for(let\
    \ i = 1; i < n; i++){\n        if(n % i === 0){\n            largest = i;\n  \
    \      }\n    }\n    return largest;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n === 1) return 0;\n  for(var\
    \ i = n - 1; i > 0; i--){\n    if(n % i === 0) return i;\n  }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest;\n    for(var\
    \ i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            largest = i;\n\
    \            break;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n === 1) return 0;\n  \
    \  if(n === 2) return 1;\n    let i = 2;\n    while(i < n){\n        if(n % i\
    \ === 0) return i;\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7q1awrwb.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7q1awrwb.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 0;\n    for(var\
    \ i = 0; i <= n; i++){\n        if(n % i === 0){\n            largest = i;\n \
    \       }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpc8yz96hp.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc8yz96hp.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=n-1;i>0;i--){\n\t\tif(n%i==0){\n\
    \t\t\tconsole.log(i);\n\t\t\tbreak;\n\t\t}\n\t}\n}\nlargest_divisor(8);\n\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpmxwmp7wx.js:18:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmxwmp7wx.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4

    1

    '
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var div = 2;\n    while(n%div!=0){\n\
    \        div++;\n    }\n    return div;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpke7bha51.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpke7bha51.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\treturn n % 2 === 0 ? largest_divisor(n/2)\
    \ : n == 1 ? 1 : largest_divisor(n - 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmphevqmql4.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphevqmql4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(typeof n != \"number\"\
    ){\n        throw \"Invalid argument\";\n    }\n    var i = n-1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i--;\n\
    \    }\n    return 0;\n}\n\ntry{\n    console.log(largest_divisor(5));\n    console.log(largest_divisor(10));\n\
    \    console.log(largest_divisor(15));\n    console.log(largest_divisor(20));\n\
    \    console.log(largest_divisor(25));\n    console.log(largest_divisor(1));\n\
    \    console.log(largest_divisor(0));\n    console.log(largest_divisor(1.5));\n\
    \    console.log(largest_divisor(\"a\"));\n}\ncatch(err){\n    console.log(err);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    5

    5

    10

    5

    0

    0

    0.5

    Invalid argument

    '
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar greatest_divisor = -1;\n\
    \tfor(var i = n - 1; i > 0; i--){\n\t\tif(n % i == 0){\n\t\t\tgreatest_divisor\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn greatest_divisor;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n - 1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = 1;\n  var sqrt\
    \ = Math.sqrt(n);\n  for(var i = 2; i < sqrt; i++){\n    if(n % i == 0){\n   \
    \   divisor = i;\n    }\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpkfppqznz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkfppqznz.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar i = n - 1;\n\twhile(i >\
    \ 0){\n\t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t\ti--;\n\t}\n}\n\nlargest_divisor(15);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nlargest_divisor(10);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar temp = n;\n\tvar flag =\
    \ 0;\n\tfor(var i = n-1; i>0; i--){\n\t\tif(temp%i == 0){\n\t\t\treturn i;\n\t\
    \t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n            break;\n        }\n    }\n    return largest_divisor;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=n-1;i>=0;i--){\n\t\tif(n%i==0){\n\
    \t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=n-1;i>0;i--){\n\t\tif(n%i==0){\n\
    \t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tif(n == 1) return 1;\n\t\n\t\
    for(var i = n-1; i > 0; i--){\n\t\tif(n % i == 0) return i;\n\t}\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nlargest_divisor(1000);\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet x = 2;\n\tfor(; n%x != 0;\
    \ x++);\n\treturn x;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpd8xg2vff.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpd8xg2vff.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let i = Math.floor(n/2);\n\
    \    let largest_divisor = 1;\n    for(i; i > 0; i--){\n        if(n % i === 0){\n\
    \            largest_divisor = i;\n            break;\n        }\n    }\n    return\
    \ largest_divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  divisor = n - 1;\n  while (n\
    \ % divisor !== 0 && divisor > 0){\n    divisor -= 1;\n  }\n  return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n - 1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor=n-1;\n    while(n%divisor!==0){\n\
    \        divisor--;\n    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tif(n == 0) return 0;\n\tif(n\
    \ == 1) return 1;\n\t\n\tvar curr = n - 1;\n\twhile(curr > 0){\n\t\tif(n % curr\
    \ == 0)\n\t\t\treturn curr;\n\t\tcurr--;\n\t}\n\treturn 1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n == 0){\n    return 0;\n\
    \  }\n  var divisor = n - 1;\n  while(divisor > 0){\n    if(n % divisor == 0){\n\
    \      return divisor;\n    }\n    divisor -= 1;\n  }\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nlargest_divisor(35) //5\n\
    largest_divisor(25) //5\nlargest_divisor(18) //6\nlargest_divisor(5) //1\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 1; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let i = n - 1;\n    while(i\
    \ > 0){\n        if(n % i == 0){\n            return i;\n        }\n        i\
    \ -= 1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar i = n-1;\n\twhile(n%i !==\
    \ 0){\n\t\ti--;\n\t}\n\treturn i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let x = Math.ceil(n/2);\n  let\
    \ check = 1;\n  while(check>0){\n    if(n%x == 0){\n      check = 0;\n    }\n\
    \    else{\n      x--;\n    }\n  }\n  return x;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\t//Find the highest divisor\n\
    \tfor(var i = n-1; i > 0; i--){\n\t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\
    \t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = 1; i < n; i++){\n\
    \t\tif(n % i == 0){\n\t\t\tconsole.log(i);\n\t\t}\n\t}\n}\nlargest_divisor(25);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmp90ty94mh.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp90ty94mh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    5

    1

    '
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 0;\n\
    \    for(let i = 1; i <= n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3evzr9um.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3evzr9um.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlargest_divisor = 1;\n\tfor(i=2;\
    \ i<n; i++){\n\t\tif(n%i == 0){\n\t\t\tlargest_divisor = i;\n\t\t}\n\t}\n\treturn\
    \ largest_divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let greatest = 0;\n  for(let\
    \ i = 1; i < n; i++){\n    if(n % i === 0){\n      greatest = i;\n    }\n  }\n\
    \  return greatest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  largest_divisor = 0;\n  for\
    \ (i = 1; i < n; i++){\n    if (n % i == 0){\n      largest_divisor = i;\n   \
    \ }\n  }\n  return largest_divisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n==1){\n        return\
    \ 1;\n    }\n    var i=1;\n    while(i<n){\n        if(n%i==0){\n            var\
    \ j=i;\n        }\n        i++;\n    }\n    return j;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let num = Math.floor(n/2);\n\
    \    while(num>0){\n        if(n%num === 0){\n            return num;\n      \
    \  }\n        num--;\n    }\n    return 1;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  return n - n % 2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp5izy_kou.js:11:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5izy_kou.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar largest_divisor = 0;\n\t\
    for(var i = 0; i < n; i++){\n\t\tif(n % i == 0){\n\t\t\tlargest_divisor = i;\n\
    \t\t}\n\t}\n\treturn largest_divisor;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest;\n    for(var\
    \ i = n-1; i>0; i--){\n        if(n%i == 0){\n            largest = i;\n     \
    \       break;\n        }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n - 1;\n    while(n\
    \ % i !== 0){\n        i--;\n    }\n    return i;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n == 0) return 0;\n   \
    \ var largest_divisor = 0;\n    for(var i = n - 1; i > 1; i--){\n        if(n\
    \ % i == 0){\n            largest_divisor = i;\n            break;\n        }\n\
    \    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_32092k2.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_32092k2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n===1) return 1;\n    let\
    \ p = 2;\n    while(n%p!==0){\n        p++;\n    }\n    return p;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp1fnyrp_2.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1fnyrp_2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i > 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i >= 1; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(let i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n - 1; i > 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  // if n is prime, return 1\n\
    \  if (is_prime(n)) return 1;\n  //if n is not prime, return the largest prime\
    \ number smaller than n\n  else {\n    return largest_prime_factor(n);\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9it3_5_t.js:4\n  if (is_prime(n)) return 1;\n  ^\n\nReferenceError:\
    \ is_prime is not defined\n    at largest_divisor (/tmp/tmp9it3_5_t.js:4:3)\n\
    \    at test (/tmp/tmp9it3_5_t.js:16:20)\n    at Object.<anonymous> (/tmp/tmp9it3_5_t.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n === 0) return 0;\n  \
    \  for(var i = Math.floor(n/2); i > 0; i--){\n        if(n % i === 0) return i;\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar largest_divisor = 0;\n\t\
    for(var i = n-1; i > 1; i--){\n\t\tif(n % i == 0){\n\t\t\tlargest_divisor = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3nsii2xc.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3nsii2xc.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    largest = 1;\n    for(var\
    \ i = 2; i < n; i++){\n        if(n % i == 0){\n            largest = i;\n   \
    \     }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tif(n==0){\n\t\treturn n;\n\t\
    }\n\tfor(var i=n-1;i>0;i--){\n\t\tif(n%i==0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = Math.floor(n/2);\
    \ i > 0; i--){\n\t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 0;\n    for(let\
    \ i = 1; i < n; i++){\n        if(n % i === 0){\n            largest = i;\n  \
    \      }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n % 2 === 0){\n       \
    \ return n / 2;\n    }\n    for(var i = 3; i < n; i+=2){\n        if(n % i ===\
    \ 0){\n            return n / i;\n        }\n    }\n    return 1;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = 2;\n  while(n\
    \ > divisor){\n    if(n % divisor == 0){\n      return divisor;\n    } else {\n\
    \      divisor++;\n    }\n  }\n  return 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpwaahuoy0.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwaahuoy0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i\
    \ !== 0 && i>0){\n        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 1;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(n % i === 0){\n            largest = i;\n \
    \       }\n    }\n    return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6trvjb74.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6trvjb74.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest_divisor = 1;\n\
    \    for(var i = 1; i < n; i++){\n        if(n % i == 0){\n            largest_divisor\
    \ = i;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n - 1; i > 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var flag = true;\n    var\
    \ largest_divisor = 2;\n    while(flag) {\n        if (n % largest_divisor ===\
    \ 0) {\n            flag = false;\n        } else {\n            largest_divisor\
    \ += 1;\n        }\n    }\n    return largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp05gxjnaa.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp05gxjnaa.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    return !(n % (n-1)) ? n-1\
    \ : largest_divisor(n-1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpifxb1xue.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpifxb1xue.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n;\n    for(i = n-1;\
    \ i>0; i--){\n        if(n%i==0){\n            break;\n        }\n    }\n    return\
    \ i;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let divisor = n-1;\n    while(n%divisor\
    \ !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var max = 0;\n  for(var i =\
    \ 1; i < n; i++){\n    if(n % i == 0){\n      max = i;\n    }\n  }\n  return max;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n == 1){\n        return\
    \ 1;\n    }\n    let divisor = n - 1;\n    while(n % divisor != 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let divisor = 2;\n  while(n\
    \ > divisor){\n    if(n % divisor == 0){\n      return n / divisor;\n    }\n \
    \   else{\n      divisor++;\n    }\n  }\n  return 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(i=n-1;i>=0;i--){\n\t\tif(n%i===0){\n\
    \t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n<2){\n    return false;\n\
    \  }\n  if(n===2){\n    return 1;\n  }\n  for(var i=Math.floor(n/2);i>1;i--){\n\
    \    if(n%i===0){\n      return i;\n    }\n  }\n  return 1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(let i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest = 0;\n    for(let\
    \ i = n-1; i > 0; i--){\n        if(n % i === 0){\n            largest = i;\n\
    \            break;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n - 1; i > 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let divisor = n-1;\n    while(n%divisor!==0){\n\
    \        divisor--;\n    }\n    return divisor;\n}\n\nlargest_divisor(10);\n\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar ld = 0;\n\tfor(var i = n-1;\
    \ i > 0; i--){\n\t\tif(n % i == 0){\n\t\t\tld = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\
    \treturn ld;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n-1; i >= 2; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 0;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpctheo15q.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpctheo15q.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n == 0){\n    return 1;\n\
    \  }\n  for(var i = n-1; i > 0; i--){\n    if(n % i == 0){\n      return i;\n\
    \    }\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largestDivisor = 1;\n\
    \    for(let i = 1; i < n; i++){\n        if( n % i === 0){\n            largestDivisor\
    \ = i;\n        }\n    }\n    return largestDivisor;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let i = 1;\n    while(i <\
    \ n){\n        if(n % i == 0){\n            num = i;\n        }\n        i++;\n\
    \    }\n    return num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n-1; i >= 1; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = 1; i < n; i++){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpvbqf660a.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvbqf660a.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let divisor = 2;\n  let largest_divisor\
    \ = 1;\n  while(n > 1){\n    if(n % divisor == 0){\n      largest_divisor = divisor;\n\
    \      n = n / divisor;\n    }\n    else{\n      divisor++;\n    }\n  }\n  return\
    \ largest_divisor;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvb4e926a.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvb4e926a.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var result = 0;\n    var candidate\
    \ = n;\n    while(candidate > 1){\n        if(n % candidate == 0){\n         \
    \   result = candidate;\n            break;\n        }\n        candidate--;\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpdy8huf5b.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdy8huf5b.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  //find the largest number that\
    \ divides n evenly\n  if(n%2 == 0){\n    n = n/2;\n  }\n  var divisor = n;\n \
    \ while(n%divisor != 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpyo8nvwds.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyo8nvwds.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    //Generate sequence of numbers\
    \ from 1 to n\n    var seq = [];\n    for(var i = 1; i < n; i++){\n        seq.push(i);\n\
    \    }\n    //Filter numbers that divide n evenly\n    seq = seq.filter(function(item){return\
    \ n % item === 0;});\n    //Return last item of filtered array\n    return seq[seq.length\
    \ - 1];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var max = 0;\n    for(var\
    \ i = n-1; i > 0; i--){\n        if(n % i == 0){\n            max = i;\n     \
    \       break;\n        }\n    }\n    return max;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n - 1; i > 0;\
    \ i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar divisor = 2;\n\tvar limit\
    \ = Math.floor(Math.sqrt(n));\n\tvar largest = 1;\n\twhile(divisor <= limit){\n\
    \t\tif(n % divisor == 0){\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor += 1;\n\
    \t}\n\treturn largest;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm49z_bra.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm49z_bra.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(n%divisor\
    \ != 0){\n        divisor = divisor - 1;\n    }\n    return divisor;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    for(; i\
    \ > 0; i--){\n        if(n % i == 0){\n            return i;\n        }\n    }\n\
    \    return -1;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n;\n    while(divisor\
    \ > 0){\n        if(n % divisor == 0){\n            return divisor;\n        }\n\
    \        divisor--;\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpszh1ci9m.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpszh1ci9m.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var largest = 1;\n    if(n\
    \ < 1){\n        return NaN;\n    }\n    for(var i = 2; i < n; i++){\n       \
    \ if(n % i === 0){\n            largest = i;\n        }\n    }\n    return largest;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tvar div = Math.floor(n/2);\n\
    \tfor(var i = div; i > 1; i--){\n\t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\
    \t}\n\treturn 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 1; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let largest_divisor = 0;\n\
    \    for(let i = n-1; i > 1; i--){\n        if(n % i === 0){\n            largest_divisor\
    \ = i;\n            break;\n        }\n    }\n    return largest_divisor;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppc0m3406.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppc0m3406.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var i = n-1;\n    while(n%i!==0){\n\
    \        i--;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let divisor = n-1;\n    let\
    \ num = n;\n    for(let i = 2; i <= divisor; i++){\n        if(num % i === 0){\n\
    \            divisor = num / i;\n            break;\n        }\n    }\n    return\
    \ divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8p4esx5u.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8p4esx5u.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n==1){\n        return\
    \ 1;\n    }\n    if(n%2==0){\n        return largest_divisor(n/2);\n    }\n  \
    \  for(let i=3;i<=Math.sqrt(n);i+=2){\n        if(n%i==0){\n            return\
    \ largest_divisor(n/i);\n        }\n    }\n    return n;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsvxwmhhl.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsvxwmhhl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  let num = n - 1;\n  let max;\n\
    \  while(num > 0){\n    if(n % num === 0){\n      max = num;\n      break;\n \
    \   }\n    num -= 1;\n  }\n  return max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var array = [];\n    for(var\
    \ i = 1; i < n; i++){\n        if(n % i === 0){\n            array.push(i);\n\
    \        }\n    }\n    var max = array[0];\n    for(var i = 1; i < array.length;\
    \ i++){\n        if(array[i] > max){\n            max = array[i];\n        }\n\
    \    }\n    return max;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i > 0; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var large = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        if(n % i == 0 && i > large){\n            large\
    \ = i;\n        }\n    }\n    return large;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(let i = n-1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n\n   \
    \ while(n%divisor !== 0){\n        divisor--;\n    }\n    return divisor;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = 0;\n  for(var\
    \ i = n - 1; i > 0; i--){\n    if(n % i === 0){\n      divisor = i;\n      break;\n\
    \    }\n  }\n  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n%2==0){\n        return\
    \ n/2;\n    }\n    else{\n        var arr = Array.from(Array(n), (x,i) => i+1);\n\
    \        var divided = arr.filter(x => n%x==0);\n        return divided[divided.length-2];\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\t\n\tvar largest_divisor = 1;\n\
    \tfor(var i = 2; i <= n/2; i++){\n\t\tif(n % i == 0){\n\t\t\tlargest_divisor =\
    \ i;\n\t\t}\n\t}\n\treturn largest_divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n==0){\n    return \"error\"\
    ;\n  }\n  var i = n-1;\n  while(i>0){\n    if(n%i == 0){\n      return i;\n  \
    \  }\n    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n-1; i >= 0; i--){\n\
    \        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = 2;\n  while(n>divisor){\n\
    \    if(n%divisor == 0){\n      return divisor;\n    }else{\n      divisor++;\n\
    \    }\n  }\n  return 1;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpk2ch7tsr.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpk2ch7tsr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n - 1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  if(n % 2 === 0){\n    return\
    \ n / 2;\n  }\n  else if(n % 3 === 0){\n    return n / 3;\n  }\n  else if(n %\
    \ 5 === 0){\n    return n / 5;\n  }\n  else if(n % 7 === 0){\n    return n / 7;\n\
    \  }\n  else{\n    return n - 1;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    let divisor = n - 1;\n   \
    \ while(n % divisor !== 0) {\n        divisor--;\n    }\n    return divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var i = 1\n  var largest_divisor\
    \ = 0\n  while (i < n){\n    if (n % i == 0){\n      largest_divisor = i\n   \
    \ }\n    i ++\n  }\n  return largest_divisor\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tlet i = n;\n\twhile(i > 0){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t\ti--;\n\t}\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpixxfgfnw.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpixxfgfnw.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var divisor = n-1;\n  while(n%divisor\
    \ !== 0){\n    divisor--;\n  }\n  return divisor;\n}\n\nlargest_divisor(15);\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\t//If n is 0, then 0 is the largest\
    \ divisor\n\tif(n === 0){\n\t\treturn 0;\n\t}\n\t//If n is negative, then find\
    \ the largest divisor of its positive counterpart\n\tif(n < 0){\n\t\treturn largest_divisor(-n);\n\
    \t}\n\t//For the first iteration, test if 2 is a divisor\n\tvar divisor = 2;\n\
    \twhile(divisor <= n){\n\t\tif(n % divisor === 0){\n\t\t\tn = n / divisor;\n\t\
    \t}\n\t\telse{\n\t\t\tdivisor = divisor + 1;\n\t\t}\n\t}\n\treturn divisor;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp22526sxo.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp22526sxo.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  var i = 2;\n  while(n % i !=\
    \ 0){\n    i++;\n  }\n  return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmppb1oa_y0.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppb1oa_y0.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var divisor = n-1;\n    while(divisor\
    \ > 0){\n        if(n % divisor == 0){\n            return divisor;\n        }\n\
    \        divisor -= 1;\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n\tfor(var i = n - 1; i > 0; i--){\n\
    \t\tif(n % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n  for(var i = n - 1; i > 0; i--){\n\
    \    if(n % i === 0){\n      return i;\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n%2===0){\n        return\
    \ n/2;\n    }\n    else{\n        return n-1;\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpj1r7vttu.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj1r7vttu.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(let i = n - 1; i > 0;\
    \ i--){\n        if(n % i === 0){\n            return i;\n        }\n    }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    for(var i = n-1; i >= 1; i--){\n\
    \        if(n % i == 0){\n            return i;\n        }\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821024
- exit_code: 1
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    if(n < 2){\n        return\
    \ 1;\n    }\n    if(n <= 3){\n        return n - 1;\n    }\n    if(n % 2 == 0){\n\
    \        return n / 2;\n    }\n    if(n % 3 == 0){\n        return n / 3;\n  \
    \  }\n    if(n % 5 == 0){\n        return n / 5;\n    }\n    return n - 1;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp4xnu7nir.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4xnu7nir.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821025
- exit_code: 0
  program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfunction largest_divisor(n){\n    var val = parseInt(n);\n \
    \   var div = val - 1;\n    while(val % div !== 0){\n        div--;\n    }\n \
    \   return div;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821025

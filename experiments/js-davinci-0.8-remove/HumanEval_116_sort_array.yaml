name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    let binOnes = [];\n    arr.forEach(el => {\n        let bin = el.toString(2);\n\
    \        let count = 0;\n        for (let i = 0; i < bin.length; i++) {\n    \
    \        if (bin[i] === '1') count++;\n        }\n        binOnes.push({num: el,\
    \ numOnes: count});\n    });\n    let sorted = binOnes.sort((a, b) => {\n    \
    \    if (a.numOnes < b.numOnes) return -1;\n        if (a.numOnes > b.numOnes)\
    \ return 1;\n        return a.num - b.num;\n    });\n    return sorted.map(el\
    \ => el.num);\n}\nsort_array([0, 1, 10, 2, 100, 3, 1000, 4, 10000, 5, 100000,\
    \ 6, 1000000, 7, 10000000, 8, 100000000, 9, 1000000000]);\n", "  //your code here\n\
    }\n", "   function bin_str(n){\n     var binary = n.toString(2);\n     return\
    \ binary.split('').reduce(function(a,b){\n       return Number(a) + Number(b);\n\
    \     });\n   }\n   return arr.sort(function(a,b){\n     var binA = bin_str(a);\n\
    \     var binB = bin_str(b);\n     if(binA === binB){\n       return a - b;\n\
    \     } else {\n       return binA - binB;\n     }\n   });\n}", "    let obj =\
    \ arr.map(item => [item, (item.toString(2).match(/1/g) || []).length]);\n    let\
    \ sorted = obj.sort((a, b) => {\n        return a[1] - b[1] || a[0] - b[0];\n\
    \    });\n    return sorted.map(item => item[0]);\n}", "    return arr.sort((a,b)=>{\n\
    \        let binaryA = a.toString(2);\n        let binaryB = b.toString(2);\n\
    \        if(binaryA.split('1').length<binaryB.split('1').length){\n          \
    \  return -1;\n        }\n        else if(binaryA.split('1').length>binaryB.split('1').length){\n\
    \            return 1;\n        }\n        else{\n            return a-b;\n  \
    \      }\n    })\n}", '// var a = arr.sort(function(a,b){', "  //sort array of\
    \ integers based on how many ones they have in their binary representation\n \
    \ return arr.sort(function(a,b){\n    a = a.toString(2);\n    b = b.toString(2);\n\
    \    var c = a.match(/1/g);\n    var d = b.match(/1/g);\n    if (c==null){c=0}else{c=c.length}\n\
    \    if (d==null){d=0}else{d=d.length}\n    if (c > d){return 1}\n    else if\
    \ (c < d){return -1}\n    else{\n      if (a>b){return 1}\n      else if (a<b){return\
    \ -1}\n      else{return 0}\n    }\n  });\n}", "    arr.sort(function(a,b){\n\
    \        if(countOnes(a)===countOnes(b)){\n            return a-b;\n        }\n\
    \        return countOnes(a)-countOnes(b);\n    });\n    return arr;\n}\n", " \
    \ var sort_arr = arr.sort(function(a,b){\n    var bin_a = a.toString(2).split(\"\
    \").filter(function(e){\n      return e === \"1\";\n    }).length;\n    var bin_b\
    \ = b.toString(2).split(\"\").filter(function(e){\n      return e === \"1\";\n\
    \    }).length;\n    if(bin_a > bin_b){\n      return 1;\n    }else if(bin_a <\
    \ bin_b){\n      return -1;\n    }else{\n      return a-b;\n    }\n  });\n  return\
    \ sort_arr;\n}\n", "  return arr.sort(function(a,b){\n    return (a%2==0)-(b%2==0)||(a%2==1)-(b%2==1)\n\
    \  })\n}", "    let binNum = arr.map(num => {\n        return {\n            value:\
    \ num,\n            ones: num.toString(2).split('').filter(n => n == 1).length\n\
    \        }\n    });\n    binNum.sort((a, b) => a.ones - b.ones);\n    return binNum.map(num\
    \ => num.value);\n}", "  return arr.sort(function(a,b){\n    return a.toString(2).replace(/0/g,'').length\
    \ - b.toString(2).replace(/0/g,'').length || a - b\n  })\n}\n", "    var sorted_array\
    \ = [];\n    var sorted_array_ones = [];\n    var sorted_array_zeros = [];\n \
    \   var index;\n    for(var i = 0; i < arr.length; i++){\n        var binary =\
    \ arr[i].toString(2);\n        var count = 0;\n        for(var j = 0; j < binary.length;\
    \ j++){\n            if(binary[j] == 1){\n                count++;\n         \
    \   }\n        }\n        if(count == 0){\n            sorted_array_zeros.push(arr[i]);\n\
    \        }\n        else{\n            index = get_index(sorted_array_ones, count);\n\
    \            sorted_array_ones.splice(index, 0, arr[i]);\n        }\n    }\n \
    \   sorted_array = sorted_array_ones.concat(sorted_array_zeros);\n    return sorted_array;\n\
    }\n", "    return arr.sort((a,b)=>{\n        let ones = [];\n        ones.push(a.toString(2).split('1').length-1);\n\
    \        ones.push(b.toString(2).split('1').length-1);\n        if(ones[0] !==\
    \ ones[1]){\n            return ones[0] - ones[1];\n        }\n        return\
    \ a - b;\n    });\n}", "  const sorted = arr.sort((a, b) => {\n    const aBinary\
    \ = a.toString(2);\n    const bBinary = b.toString(2);\n    const aOneCount =\
    \ aBinary.match(/1/g) || [];\n    const bOneCount = bBinary.match(/1/g) || [];\n\
    \    if (aOneCount.length === bOneCount.length) {\n      return a - b;\n    }\n\
    \    return aOneCount.length - bOneCount.length;\n  });\n  return sorted;\n}\n\
    \nsort_array([0, 10, 15, 8, 7, 6, 5, 4, 3, 2, 1]);", "    // if(arr.length ===\
    \ 0) return arr;\n    // let result = [];\n    // let sortedArr = arr.sort((a,b)\
    \ => a - b).filter(x => x !== 0);\n    // let counter = 0;\n    // for(let i =\
    \ 0; i < sortedArr.length; i++){\n    //     counter = 0;\n    //     for(let\
    \ j = 0; j < sortedArr[i].toString(2).length; j++){\n    //         if(sortedArr[i].toString(2)[j]\
    \ === '1') counter++;\n    //     }\n    //     result.push({num: sortedArr[i],\
    \ count: counter});\n    // }\n    // result.sort((a,b) => a.count - b.count);\n\
    \    // return result.map(x => x.num);\n    let arr2 = arr.sort( (a,b) => a -\
    \ b).filter(x => x !== 0);\n    let counter = 0;\n    let countOnes = [];\n  \
    \  for(let i = 0; i < arr2.length; i++){\n        counter = 0;\n        for(let\
    \ j = 0; j < arr2[i].toString(2).length; j++){\n            if(arr2[i].toString(2)[j]\
    \ === '1') counter++;\n        }\n        countOnes.push({num: arr2[i], count:\
    \ counter});\n    }\n    countOnes.sort((a,b) => a.count - b.count);\n    return\
    \ countOnes.map(x => x.num);\n}\n", "  return arr.sort(function(a,b){\n    let\
    \ aOnes = a.toString(2).split('1').length - 1;\n    let bOnes = b.toString(2).split('1').length\
    \ - 1;\n    if(aOnes === bOnes){\n      return a - b;\n    }\n    return aOnes\
    \ - bOnes;\n  });\n}", "  return arr.sort(function(a,b){\n    return ((a.toString(2).match(/1/g)\
    \ || []).length - (b.toString(2).match(/1/g) || []).length) || (a - b);\n  });\n\
    }\n", "    var list = [];\n    var zeros = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var count = 0;\n        for(var j = 0; j < arr[i].toString(2).length;\
    \ j++){\n            if(arr[i].toString(2)[j] == 1){\n                count++;\n\
    \            }\n        }\n        list.push([count, arr[i]]);\n    }\n    list.sort(function(a,\
    \ b){\n        if(a[0] < b[0]){\n            return -1;\n        }else if(a[0]\
    \ > b[0]){\n            return 1;\n        }else{\n            if(a[1] < b[1]){\n\
    \                return -1;\n            }else if(a[1] > b[1]){\n            \
    \    return 1;\n            }else{\n                return 0;\n            }\n\
    \        }\n    });\n    for(var i = 0; i < list.length; i++){\n        zeros.push(list[i][1]);\n\
    \    }\n    return zeros;\n}", "  let result = [];\n  let sortArr = arr.sort((a,b)\
    \ => {\n    return a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length;\n\
    \  });\n  for (let i = 0; i < sortArr.length; i++) {\n    if (sortArr[i] !== sortArr[i\
    \ + 1]) {\n      result.push(sortArr[i]);\n    } else {\n      result.push(sortArr[i],\
    \ sortArr[i + 1]);\n      i += 1;\n    }\n  }\n  return result;\n}\n", "    //return\
    \ sorted array\n    return arr.sort((a,b)=>a.toString(2).replace(/0/g,'').length\
    \ - b.toString(2).replace(/0/g,'').length || a-b);\n}", "  var arr2 = arr.map(function(item){\n\
    \    item = item.toString(2).split('').sort().join('');\n    item = item.split('').reverse().join('');\n\
    \    return item;\n  });\n  var arr3 = arr2.map(function(item){\n    item = parseInt(item,\
    \ 2);\n    return item;\n  });\n  arr3.sort(function(a, b){\n    return a - b;\n\
    \  });\n  var arr4 = arr3.map(function(item){\n    item = item.toString(2);\n\
    \    return item;\n  });\n  var arr5 = arr4.map(function(item){\n    item = item.split('').reverse().join('');\n\
    \    item = parseInt(item, 2);\n    return item;\n  });\n  return arr5;\n}", " \
    \   let sorted = arr.sort((a,b) => {\n        a = a.toString(2).split('1').length\
    \ - 1;\n        b = b.toString(2).split('1').length - 1;\n        return a - b\
    \ !== 0 ? a - b : a - b;\n    });\n    return sorted;\n}\n", "    var binaryArray\
    \ = arr.map(function(num){\n        return num.toString(2);\n    })\n    binaryArray.sort(function(a,b){\n\
    \        var onesInA = 0;\n        var onesInB = 0;\n        for(var i = 0; i\
    \ < a.length; i++){\n            if(a[i] === '1'){\n                onesInA++;\n\
    \            }\n        }\n        for(var j = 0; j < b.length; j++){\n      \
    \      if(b[j] === '1'){\n                onesInB++;\n            }\n        }\n\
    \        if(onesInA === onesInB){\n            return a - b;\n        }\n    \
    \    return onesInA - onesInB;\n    })\n    binaryArray = binaryArray.map(function(num){\n\
    \        return parseInt(num, 2);\n    })\n    return binaryArray;\n}", "  arr.sort(function(a,b){\n\
    \    let b1 = (a).toString(2).split(\"\").filter(c => c == \"1\").length;\n  \
    \  let b2 = (b).toString(2).split(\"\").filter(c => c == \"1\").length;\n    if(b1\
    \ === b2){\n      return a - b;\n    }\n    return b1 - b2;\n  });\n  return arr;\n\
    }\n", "  let i = 0;\n  let result = [];\n  arr.forEach(function(element){\n  \
    \  result.push([element, element.toString(2).match(/1/g).length]);\n  });\n  result.sort(function(a,\
    \ b){\n    if(a[1] > b[1]){\n      return 1;\n    }\n    if(a[1] < b[1]){\n  \
    \    return -1;\n    }\n    if(a[1] === b[1]){\n      if(a[0] > b[0]){\n     \
    \   return 1;\n      }\n      if(a[0] < b[0]){\n        return -1;\n      }\n\
    \    }\n  });\n  result.forEach(function(element){\n    arr[i] = element[0];\n\
    \    i++;\n  });\n  return arr;\n}\n", "    arr.sort(function(a,b){\n        var\
    \ binA = a.toString(2).match(/1/g).length;\n        var binB = b.toString(2).match(/1/g).length;\n\
    \        if(binA===binB){\n            return a-b;\n        }\n        return\
    \ binA-binB;\n    });\n    return arr;\n}", "  // sort by binary digit, but preserve\
    \ index\n  var sorted = arr.map(function(x, index) {\n    return [x, index];\n\
    \  }).sort(function(a, b) {\n    var a1 = (a[0] >>> 0).toString(2);\n    var b1\
    \ = (b[0] >>> 0).toString(2);\n    return a1.split('1').length - b1.split('1').length\
    \ || a[0] - b[0];\n  });\n  // restore order\n  var result = [];\n  for (var i\
    \ = 0; i < sorted.length; i++) {\n    result[sorted[i][1]] = sorted[i][0];\n \
    \ }\n  return result;\n}\n", "    const sorted = arr.sort((a, b) => (a.toString(2).match(/1/g)\
    \ || []).length - (b.toString(2).match(/1/g) || []).length)\n    return sorted\n\
    }", "    return arr.sort((a,b)=>\n    ((a.toString(2).match(/1/g)||[]).length-(b.toString(2).match(/1/g)||[]).length)||(a-b));\n\
    }\n", "\tvar onesArr = [];\n\tfor(var i = 0; i < arr.length; i++){\n\t\tonesArr.push(arr[i].toString(2).split('').filter(function(x){return\
    \ x == 1;}).length);\n\t}\n\tvar copy = [];\n\tcopy = arr.slice();\n\tcopy.sort(function(a,b){return\
    \ a-b;});\n\tfor(var j = 0; j < arr.length; j++){\n\t\tfor(var k = 0; k < arr.length;\
    \ k++){\n\t\t\tif(onesArr[j] == onesArr[k] && j != k){\n\t\t\t\tcopy.splice(j,\
    \ 0, arr[k]);\n\t\t\t\tcopy.splice(k+1, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn copy;\n\
    }", "  //enter code here\n}\n", "  var holder = [];\n  var final = [];\n  for(var\
    \ i = 0; i < arr.length; i++){\n    var binary = arr[i].toString(2);\n    var\
    \ binaryArray = binary.split('');\n    var counter = 0;\n    for(var j = 0; j\
    \ < binaryArray.length; j++){\n      if(binaryArray[j] === '1'){\n        counter++;\n\
    \      }\n    }\n    holder.push([arr[i],counter]);\n  }\n  console.log(holder);\n\
    \  var sorted = holder.sort(function(a,b){\n    return a[1] - b[1];\n  });\n \
    \ for(var k = 0; k < sorted.length; k++){\n    final.push(sorted[k][0]);\n  }\n\
    \  return final;\n}", "    return arr.sort((a,b)=>(a.toString(2).split(1).length-1)-(b.toString(2).split(1).length-1)||a-b)\n\
    }", "    const compare = (a, b) => a.num - b.num;\n    const sort_num = (a, b)\
    \ => b.num - a.num;\n    let res = [];\n    for (let i = 0; i < arr.length; i++)\
    \ {\n        res.push({'val': arr[i], 'num': arr[i].toString(2).split('').filter(el\
    \ => el === '1').length});\n    }\n    return res.sort(compare).sort(sort_num).map(el\
    \ => el.val);\n}\n", "    return arr.sort((a,b)=>{\n      const a1 = (a.toString(2).match(/1/g)\
    \ || []).length;\n      const b1 = (b.toString(2).match(/1/g) || []).length;\n\
    \      return a1 - b1 == 0 ? a - b : a1 - b1;\n    });\n}\n", "    var result\
    \ = [];\n    while(result.length < arr.length){\n        var maxOnes = 0;\n  \
    \      var maxValue = 0;\n        for(var i = 0; i < arr.length; i++){\n     \
    \       var currentValue = arr[i];\n            if(currentValue != null){\n  \
    \              var currentOnes = onesInBinary(currentValue);\n               \
    \ if(currentOnes > maxOnes){\n                    maxOnes = currentOnes;\n   \
    \                 maxValue = currentValue;\n                }\n              \
    \  else if(currentOnes == maxOnes){\n                    if(currentValue > maxValue){\n\
    \                        maxValue = currentValue;\n                    }\n   \
    \             }\n            }\n        }\n        result.push(maxValue);\n  \
    \      arr[arr.indexOf(maxValue)] = null;\n    }\n    return result;\n}\n", " \
    \ let zeros = arr.map(x => {\n    let binary = (x).toString(2);\n    return {\n\
    \      val: x,\n      ones: binary.split('').reduce((acc, curr) => {\n       \
    \ if (curr === '1') {\n          acc++;\n        }\n        return acc;\n    \
    \  }, 0)\n    }\n  });\n  return zeros.sort((a, b) => {\n    if (a.ones > b.ones)\
    \ {\n      return 1;\n    } else if (a.ones < b.ones) {\n      return -1;\n  \
    \  } else {\n      if (a.val > b.val) {\n        return 1;\n      } else if (a.val\
    \ < b.val) {\n        return -1;\n      } else {\n        return 0;\n      }\n\
    \    }\n  }).map(x => x.val);\n}\n", "    var sorted = arr.sort(function(a,b){\n\
    \        return (getOnes(a)-getOnes(b) || a-b);\n    });\n    return sorted;\n\
    }\n", "    function numOnes(num){\n        var converted = num.toString(2);\n\
    \        var count = 0;\n        for(var i = 0; i < converted.length; i++){\n\
    \            if(converted[i] === '1') count++;\n        }\n        return count;\n\
    \    }\n    arr.sort(function(a,b){\n        if(numOnes(a) === numOnes(b)){\n\
    \            return a - b;\n        }\n        return numOnes(a) - numOnes(b);\n\
    \    });\n    return arr;\n}", "  var oneCountSort = function(a,b){\n    var numOfOnes\
    \ = function(num){\n      var binaryStr = num.toString(2);\n      var counter\
    \ = 0;\n      for(var i = 0; i < binaryStr.length; i++){\n        if(binaryStr[i]\
    \ === '1'){\n          counter++;\n        }\n      }\n      return counter;\n\
    \    };\n    var a1s = numOfOnes(a);\n    var b1s = numOfOnes(b);\n    if(a1s\
    \ === b1s){\n      return a - b;\n    } else {\n      return a1s - b1s;\n    }\n\
    \  };\n  return arr.sort(oneCountSort);\n}", "    arr.sort(function(a,b){\n  \
    \      if(a.toString(2).split(\"1\").length > b.toString(2).split(\"1\").length){\n\
    \            return 1;\n        }\n        else if(a.toString(2).split(\"1\").length\
    \ < b.toString(2).split(\"1\").length){\n            return -1;\n        }\n \
    \       else if(a.toString(2).split(\"1\").length == b.toString(2).split(\"1\"\
    ).length){\n            if(a > b){\n                return 1;\n            }\n\
    \            else if(a < b){\n                return -1;\n            }\n    \
    \        else{\n                return 0;\n            }\n        }\n    });\n\
    \    return arr;\n}", "    //Your code here\n    //arr.sort(function(a,b){return\
    \ a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length})\n    return\
    \ arr.sort(function(a,b){\n        return b.toString(2).match(/1/g).length ==\
    \ a.toString(2).match(/1/g).length ? b - a : b.toString(2).match(/1/g).length\
    \ - a.toString(2).match(/1/g).length;\n    });\n}\n", "  const str = arr.map(el\
    \ => el.toString(2));\n  const arr1 = [];\n  str.forEach(el => arr1.push(el.match(/1/g).length));\n\
    \  const result = [...arr];\n  result.sort((a, b) => {\n    if (arr1[arr.indexOf(a)]\
    \ > arr1[arr.indexOf(b)]) {\n      return 1;\n    } else if (arr1[arr.indexOf(a)]\
    \ < arr1[arr.indexOf(b)]) {\n      return -1;\n    } else {\n      return a >\
    \ b ? 1 : -1;\n    }\n  });\n  return result;\n}\n", "  arr.sort(function(a,b){\n\
    \    aBin = a.toString(2);\n    bBin = b.toString(2);\n    if(aBin.split(1).length\
    \ > bBin.split(1).length){\n      return 1;\n    }else if(aBin.split(1).length\
    \ < bBin.split(1).length){\n      return -1;\n    }else{\n      return a-b;\n\
    \    }\n  });\n  return arr;\n}", "    return arr.sort((a,b)=>a.toString(2).split('').filter(char=>char==1).length-b.toString(2).split('').filter(char=>char==1).length).sort((a,b)=>a-b)\n\
    }\n", "  var newArr = arr.map(function(val){\n    var binary = val.toString(2).split('');\n\
    \    var onz = binary.reduce(function(acc, curr){\n      if(curr === '1'){\n \
    \       acc++;\n      }\n      return acc;\n    }, 0);\n    return onz + ':' +\
    \ val;\n  });\n  newArr.sort();\n  return newArr.map(function(val){\n    return\
    \ +val.split(':')[1];\n  });\n}", "  var arr2 = [];\n  var arr3 = [];\n  for(var\
    \ i = 0; i < arr.length; i++){\n    arr2.push(arr[i].toString(2));\n  }\n  arr2.sort(function(a,b){\n\
    \    return b.length - a.length;\n  });\n  var temp = arr2[0].length;\n  for(var\
    \ j = 0; j < arr2.length; j++){\n    if(arr2[j].length === temp){\n      arr3.push(parseInt(arr2[j],2));\n\
    \    }\n    else{\n      temp = arr2[j].length;\n      arr3.sort(function(a,b){\n\
    \        return a - b;\n      });\n      arr2[j] = arr3;\n      arr3 = [];\n \
    \   }\n  }\n  arr3.sort(function(a,b){\n    return a - b;\n  });\n  arr2[arr2.length\
    \ - 1] = arr3;\n  var arr4 = [];\n  for(var i = 0; i < arr2.length; i++){\n  \
    \  if(typeof arr2[i] === 'object'){\n      for(var j = 0; j < arr2[i].length;\
    \ j++){\n        arr4.push(arr2[i][j]);\n      }\n    }\n    else{\n      arr4.push(arr2[i]);\n\
    \    }\n  }\n  return arr4;\n}", "    arr.sort(function(a,b){\n        return\
    \ getOnes(a) === getOnes(b) ? a - b : getOnes(a) - getOnes(b);\n    });\n    return\
    \ arr;\n}\n", "    let arr1 = arr.slice();\n    let arr2 = arr.map(function(elem){\n\
    \        return Number(elem.toString(2));\n    });\n    arr2.sort(function(a,b){\n\
    \        let countA = (a + '').split('1').length - 1;\n        let countB = (b\
    \ + '').split('1').length - 1;\n        return countA - countB;\n    });\n   \
    \ for(let i = 0; i < arr2.length; i++){\n        arr2[i] = Number(arr2[i].toString(10));\n\
    \    }\n    return arr2;\n}", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2).split('');\n        let bBin = b.toString(2).split('');\n  \
    \      let aOnes = 0;\n        let bOnes = 0;\n        aBin.forEach(a=>{\n   \
    \         if(a === '1'){\n                aOnes++;\n            }\n        });\n\
    \        bBin.forEach(b=>{\n            if(b === '1'){\n                bOnes++;\n\
    \            }\n        });\n        return aOnes === bOnes ? a - b : aOnes -\
    \ bOnes;\n    });\n}", "    arr.sort(function(a,b){\n        return (a.toString(2).split('1').length-1)-(b.toString(2).split('1').length-1)\n\
    \    })\n    return arr\n}", "    return arr.sort((a,b)=>a.toString(2).replace(/0/g,\
    \ '').length - b.toString(2).replace(/0/g, '').length || a - b);\n}\n", "    var\
    \ numbers = arr.map(function(num){\n        var toBinary = num.toString(2).match(/1/g).length;\n\
    \        return toBinary;\n    });\n    var the_final = numbers.map(function(num,\
    \ index){\n        var value = arr[index];\n        return [num, value];\n   \
    \ });\n    the_final.sort(function(a, b){\n        return a[0] - b[0];\n    });\n\
    \    var fin = the_final.map(function(num){\n        return num[1];\n    });\n\
    \    return fin;\n}\n", "    //your code here\n    return arr.sort((a,b)=>{\n\
    \      let aOne = a.toString(2).split('1').length-1;\n      let bOne = b.toString(2).split('1').length-1;\n\
    \      if(aOne===bOne){\n        return a-b;\n      }\n      return aOne-bOne;\n\
    \    });\n}", "  return arr.sort((a,b) => {\n    return Number(a.toString(2).replace(/0/g,\
    \ '').length) - Number(b.toString(2).replace(/0/g, '').length) || a - b;\n  });\n\
    }", "    //console.log(arr);\n    //let result = arr.sort(function(a,b){\n   \
    \     //return Number(a.toString(2).split(1).length) - Number(b.toString(2).split(1).length);\n\
    \    //});\n    //console.log(result);\n    return arr.sort(function(a,b){\n \
    \       let result = Number(a.toString(2).split(1).length) - Number(b.toString(2).split(1).length);\n\
    \        if(result == 0){\n            return a - b;\n        }else{\n       \
    \     return result;\n        }\n    });\n}\n", "  //return arr.sort((a,b) =>\
    \ {return ones(a) === ones(b) ? a - b : ones(a) - ones(b)});\n  return arr.sort((a,b)\
    \ => ones(a) === ones(b) ? a - b : ones(a) - ones(b));\n}\n", "    arr.sort(function(a,b){\n\
    \        let intA = (a >>> 0).toString(2).split('').filter(function(c){return\
    \ c === '1'}).length;\n        let intB = (b >>> 0).toString(2).split('').filter(function(c){return\
    \ c === '1'}).length;\n        if(intA === intB){\n            return a - b;\n\
    \        }\n        return intA - intB;\n    });\n    return arr;\n}", "    arr.sort(function(a,b){\n\
    \        if(numberOfOnes(a) == numberOfOnes(b))\n            return a - b;\n \
    \       else\n            return numberOfOnes(a) - numberOfOnes(b);\n    });\n\
    \    return arr;\n}\n", "  let resArr = [];\n  arr.forEach(elem => resArr.push(toBinary(elem)));\n\
    \  resArr.sort(sortByOne);\n  resArr.forEach((elem, i) => resArr[i] = elem[0]);\n\
    \  return resArr;\n}", "  return arr.sort(function(a,b){\n    return a.toString(2).split('1').length\
    \ - b.toString(2).split('1').length || a - b;\n  });\n}\n", "  // Sort the array\
    \ based on decimal value.\n  var sorted_arr = arr.sort(function(a, b){return a\
    \ - b});\n  // Convert array elements to strings.\n  for (var i = 0; i < sorted_arr.length;\
    \ i++) {\n    sorted_arr[i] = sorted_arr[i].toString();\n  }\n  // Sort the array\
    \ based on the number of ones.\n  sorted_arr.sort(function(a, b){\n    var a_ones\
    \ = a.match(/1/g);\n    var b_ones = b.match(/1/g);\n    // If the number of ones\
    \ is equal, sort based on decimal value.\n    if (a_ones.length === b_ones.length)\
    \ {\n      return a - b;\n    }\n    return a_ones.length - b_ones.length;\n \
    \ });\n  // Convert array elements back to numbers.\n  for (var i = 0; i < sorted_arr.length;\
    \ i++) {\n    sorted_arr[i] = parseInt(sorted_arr[i]);\n  }\n  return sorted_arr;\n\
    }", "    arr.sort(function(a,b){\n        var binA = a.toString(2).match(/1/g)\
    \ ? a.toString(2).match(/1/g).length : 0;\n        var binB = b.toString(2).match(/1/g)\
    \ ? b.toString(2).match(/1/g).length : 0;\n        return binA - binB || a - b;\n\
    \    });\n    return arr;\n}", "    arr.sort(function(a,b){\n        let binA\
    \ = (a >>> 0).toString(2);\n        let binB = (b >>> 0).toString(2);\n      \
    \  let numA = 0;\n        let numB = 0;\n        for(let i = 0; i < binA.length;\
    \ i++){\n            if(binA[i] === '1'){\n                numA++;\n         \
    \   }\n        }\n        for(let i = 0; i < binB.length; i++){\n            if(binB[i]\
    \ === '1'){\n                numB++;\n            }\n        }\n        if(numA\
    \ < numB){\n            return -1;\n        }else if(numA > numB){\n         \
    \   return 1;\n        }else{\n            return a - b;\n        }\n    });\n\
    \    return arr;\n}", "    return arr.sort((a,b)=>a.toString(2).split('').filter(x=>x==='1').length-b.toString(2).split('').filter(x=>x==='1').length)\n\
    }", "  return arr.sort(function(a,b){\n    a = a.toString(2);\n    b = b.toString(2);\n\
    \    return a.split('').filter(function(t){return t==='1'}).length - b.split('').filter(function(t){return\
    \ t==='1'}).length || a-b\n  })\n}\n", "    return arr.sort((a,b)=>{\n       \
    \ return a.toString(2).split('').filter(v=> v === '1').length - b.toString(2).split('').filter(v=>\
    \ v === '1').length || a - b;\n    })\n}", "  let arr1 = [];\n  let num = '';\n\
    \  let str = '';\n  for(let i = 0; i < arr.length; i++){\n    str = arr[i].toString(2);\n\
    \    for(let j = 0; j < str.length; j++){\n      if(str[j] === '1'){\n       \
    \ num += '1';\n      }\n    }\n    arr1.push(+num);\n    num = '';\n  }\n  return\
    \ arr1.sort((a, b) => a - b);\n}\nsort_array([1, 31, 512, 4]);", "  //...\n  \
    \  const  toBinary = arr.map(n => n.toString(2))\n        .sort((a, b) => a.split(1).length\
    \ - b.split(1).length || a - b)\n        .map(b => Number.parseInt(b, 2));\n \
    \  return toBinary;\n}\n", "  arr.sort(function(a,b){\n    if ( (a.toString(2).match(/1/g)\
    \ || []).length === (b.toString(2).match(/1/g) || []).length )\n      return a-b;\n\
    \    else\n      return (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length;\n  });\n  return arr;\n}\n", "  return arr.sort(function(a,b){\n\
    \    var bina = (a).toString(2);\n    var binb = (b).toString(2);\n    var counta\
    \ = bina.split(\"1\").length-1;\n    var countb = binb.split(\"1\").length-1;\n\
    \    if(counta < countb){\n      return -1;\n    }\n    else if(counta > countb){\n\
    \      return 1;\n    }\n    else{\n      if(a < b){\n        return -1;\n   \
    \   }\n      else if(a > b){\n        return 1;\n      }\n      else{\n      \
    \  return 0;\n      }\n    }\n  });\n}", "    arr.sort(function(a,b){\n      \
    \  return a>b;\n    });\n    var obj=[];\n    for(var i=0;i<arr.length;i++){\n\
    \        var binary=arr[i].toString(2);\n        var count=0;\n        for(var\
    \ j=0;j<binary.length;j++){\n            if(binary[j]==1){\n                count++;\n\
    \            }\n        }\n        obj.push({count:count,decimal:arr[i]});\n \
    \   }\n    obj.sort(function(a,b){\n        if(a.count==b.count){\n          \
    \  return a.decimal-b.decimal;\n        }\n        return a.count-b.count;\n \
    \   });\n    for(var i=0;i<obj.length;i++){\n        arr[i]=obj[i].decimal;\n\
    \    }\n    return arr;\n}", "    arr.sort(function(a,b){\n        if(binaryOnes(a)===binaryOnes(b)){\n\
    \            return a-b;\n        }else{\n            return binaryOnes(a)-binaryOnes(b);\n\
    \        }\n    });\n    return arr;\n}", "    let binaryArr = [];\n    let counterArr\
    \ = [];\n    arr.forEach(function(element) {\n        binaryArr.push(element.toString(2));\n\
    \    });\n    binaryArr.forEach(function(element) {\n        let counter = 0;\n\
    \        for (let i = 0; i < element.length; i++) {\n            if (element[i]\
    \ === '1') {\n                counter++;\n            }\n        }\n        counterArr.push(counter);\n\
    \    });\n    let finalArr = [];\n    for (let i = 0; i < counterArr.length; i++)\
    \ {\n        let minValue = Math.min(...counterArr);\n        let index = counterArr.indexOf(minValue);\n\
    \        finalArr.push(arr[index]);\n        counterArr.splice(index, 1);\n  \
    \      arr.splice(index, 1);\n    }\n    return finalArr;\n}", "  const ones =\
    \ arr.map(a => a.toString(2).match(/1/g));\n  return arr.sort((a, b) => {\n  \
    \  let onesA = ones[arr.indexOf(a)];\n    let onesB = ones[arr.indexOf(b)];\n\
    \    if(onesA === null && onesB === null) return a - b;\n    if(onesA === null)\
    \ return 1;\n    if(onesB === null) return -1;\n    if(onesA.length === onesB.length)\
    \ return a - b;\n    return onesA.length - onesB.length;\n  });\n}", "    let\
    \ result = [];\n    let len = arr.length;\n    let sorted = arr.sort((a,b) =>\
    \ ones(a) - ones(b) || a - b);\n    for (let i = 0; i < len; i++) {\n        result.push(sorted[i]);\n\
    \    }\n    return result;\n}", "//Make a copy of arr\n  var answer = arr.slice();\n\
    \  //sort the array by ones, then sort by the value if there is a tie\n  answer.sort(function(a,b){\n\
    \    var aBinary = getBinary(a);\n    var bBinary = getBinary(b);\n    if(ones(aBinary)\
    \ < ones(bBinary)){\n      return -1;\n    }\n    else if(ones(aBinary) > ones(bBinary)){\n\
    \      return 1;\n    }\n    else{\n      if(a < b){\n        return -1;\n   \
    \   }\n      else if(a > b){\n        return 1;\n      }\n      else{\n      \
    \  return 0;\n      }\n    }\n  });\n  return answer;\n}\n", "  let ones_arr =\
    \ []\n  for (let i=0; i<arr.length; i++){\n    let count_ones = 0\n    let binary\
    \ = arr[i].toString(2)\n    for (let j=0; j<binary.length; j++){\n      if (binary[j]\
    \ === '1'){\n        count_ones++\n      }\n    }\n    ones_arr.push(count_ones)\n\
    \  }\n  let ones_sorted = ones_arr.slice().sort()\n  let sorted_arr = []\n  for\
    \ (let i=0; i<ones_sorted.length; i++){\n    let idx = ones_arr.indexOf(ones_sorted[i])\n\
    \    sorted_arr.push(arr[idx])\n    ones_arr[idx] = -1\n  }\n  return sorted_arr\n\
    }\n", "  return arr.sort(function(a,b){\n    var binA = (a >>> 0).toString(2);\n\
    \    var binB = (b >>> 0).toString(2);\n    return binA.split('1').length - binB.split('1').length\
    \ || a - b;\n  });\n}\n", '//  if(arr.length == 0){return [];}', "  var binaryArr\
    \ = [];\n  for (i = 0; i < arr.length; i++) {\n    binaryArr.push(binarify(arr[i]));\n\
    \  }\n  return binaryArr.sort(function(a, b) {\n    if (a.ones === b.ones) {\n\
    \      return a.decimal - b.decimal;\n    } else {\n      return a.ones - b.ones;\n\
    \    }\n  });\n}", "    let ones = {};\n    let bin = [];\n    let final = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        if(arr[i] !== 0){\n       \
    \     bin.push(arr[i].toString(2));\n        } else {\n            bin.push(0);\n\
    \        }\n    }\n    for(let j = 0; j < bin.length; j++){\n        if(ones[bin[j].match(/1/g).length]\
    \ === undefined){\n            ones[bin[j].match(/1/g).length] = [];\n       \
    \ }\n        ones[bin[j].match(/1/g).length].push(arr[j]);\n    }\n    for(let\
    \ j = 0; j < bin.length; j++){\n        if(ones[j] !== undefined){\n         \
    \   ones[j].sort((a, b) => a - b);\n            final = final.concat(ones[j]);\n\
    \        }\n    }\n    return final;\n}", "    return arr.sort((a,b)=>{\n    \
    \    let binA = parseInt(a,10).toString(2).split('').filter(e=>e=='1').length;\n\
    \        let binB = parseInt(b,10).toString(2).split('').filter(e=>e=='1').length;\n\
    \        return binA>binB?1:(binA<binB?-1:(a>b?1:-1));\n    });\n}", "    arr.sort(function(a,b){\n\
    \        var x=a.toString(2).split('1').length;\n        var y=b.toString(2).split('1').length;\n\
    \        return x===y?a-b:x-y;\n    });\n    return arr;\n}\n", "  var sortArray=[];\n\
    \  for(var i=0;i<arr.length;i++){\n    var bin = arr[i].toString(2).split(\"\"\
    );\n    var result = 0;\n    for(var j=0;j<bin.length;j++){\n      if(bin[j]==1){\n\
    \        result++;\n      }\n    }\n    sortArray.push([result,arr[i]]);\n  }\n\
    \  sortArray.sort(function(a,b){\n    if(a[0]>b[0]){\n      return 1;\n    }else\
    \ if(a[0]<b[0]){\n      return -1;\n    }else if(a[0]==b[0]){\n      if(a[1]>b[1]){\n\
    \        return 1;\n      }else if(a[1]<b[1]){\n        return -1;\n      }else\
    \ if(a[1]==b[1]){\n        return 0;\n      }\n    }\n  });\n  var resultArray=[];\n\
    \  for(var i=0;i<sortArray.length;i++){\n    resultArray.push(sortArray[i][1]);\n\
    \  }\n  return resultArray;\n}", "    let arr1 = arr.map(item => item.toString(2).split('').filter(ch\
    \ => ch === '1').length);\n    return arr.sort((a, b) => {\n        if (arr1[arr.indexOf(a)]\
    \ === arr1[arr.indexOf(b)]) return a - b;\n        return arr1[arr.indexOf(a)]\
    \ - arr1[arr.indexOf(b)];\n    });\n}\n", "    arr.sort(function(a,b){\n     \
    \   return (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length\n    })\n    return arr\n}\n", "  //return binary sorted array\n\
    \  return arr.sort(function(a,b){\n    var binA = a.toString(2);\n    var binB\
    \ = b.toString(2);\n    if(countOne(binA) == countOne(binB)){\n      return a-b;\n\
    \    }\n    return countOne(binA) - countOne(binB);\n  });\n}", "    arr.sort(function(a,b){\n\
    \        //\"10101\"\n        let strA = a.toString(2);\n        let strB = b.toString(2);\n\
    \        let lenA = strA.split(\"1\").length - 1;\n        let lenB = strB.split(\"\
    1\").length - 1;\n        if(lenA > lenB){\n            return 1;\n        }\n\
    \        else if(lenA < lenB){\n            return -1;\n        }\n        else{\n\
    \            return a - b;\n        }\n    });\n    return arr;\n}", "    var\
    \ ans = [];\n    for(let i=0; i<arr.length; i++){\n        var count = 0;\n  \
    \      var num = arr[i];\n        while(num>0){\n            if(num%2===1){\n\
    \                count++;\n            }\n            num = Math.floor(num/2);\n\
    \        }\n        ans.push([count, arr[i]]);\n    }\n    ans.sort(function(a,b){\n\
    \        if(a[0]===b[0]){\n            return a[1]-b[1];\n        }\n        return\
    \ a[0]-b[0];\n    });\n    var ans2 = [];\n    for(let i=0; i<ans.length; i++){\n\
    \        ans2.push(ans[i][1]);\n    }\n    return ans2;\n}", "  var asc = arr.sort(function(a,b){\n\
    \    if(ones(a) === ones(b)) {\n      return a-b;\n    }\n    return ones(a) -\
    \ ones(b);\n  });\n  return asc;\n}\n", "    return arr.sort((a,b)=>a.toString(2).split('').filter(e=>e=='1').length-b.toString(2).split('').filter(e=>e=='1').length\
    \ || a-b)\n}", "    //Sort the array\n    // for(var i = 0; i < arr.length - 1;\
    \ i++){\n    //     for(var j = i + 1; j < arr.length; j++){\n    //         if(countOnes(arr[i])\
    \ > countOnes(arr[j])){\n    //             var temp = arr[i];\n    //       \
    \      arr[i] = arr[j];\n    //             arr[j] = temp;\n    //         }\n\
    \    //     }\n    // }\n    return arr.sort(function(a, b){\n        if(countOnes(a)\
    \ < countOnes(b)){\n            return -1;\n        }\n        if(countOnes(a)\
    \ > countOnes(b)){\n            return 1;\n        }\n        if(countOnes(a)\
    \ === countOnes(b)){\n            if(a < b){\n                return -1;\n   \
    \         }\n            if(a > b){\n                return 1;\n            }\n\
    \        }\n        return 0;\n    });\n\n}", "  return arr.sort(function(a,b){\n\
    \    var aBin = (a >>> 0).toString(2);\n    var bBin = (b >>> 0).toString(2);\n\
    \    var aCount = aBin.split(\"1\").length-1;\n    var bCount = bBin.split(\"\
    1\").length-1;\n    if(aCount > bCount){\n      return 1;\n    }\n    else if(aCount\
    \ < bCount){\n      return -1;\n    }\n    else if(aCount === bCount){\n     \
    \ if(a > b){\n        return 1;\n      }\n      else if(a < b){\n        return\
    \ -1;\n      }\n      else{\n        return 0;\n      }\n    }\n  });\n}\n", " \
    \ let maxValue = Math.max(...arr);\n  let maxLength = maxValue.toString(2).length;\n\
    \  //create an array with binary values of numbers\n  let binary = [];\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    binary.push(arr[i].toString(2).padStart(maxLength,\
    \ '0'));\n  }\n  //get number of 1s for each number\n  let counts = [];\n  for\
    \ (let i = 0; i < binary.length; i++) {\n    let temp = binary[i].split('');\n\
    \    let count = 0;\n    for (let i = 0; i < temp.length; i++) {\n      if (temp[i]\
    \ === '1') {\n        count++;\n      }\n    }\n    counts.push(count);\n  }\n\
    \  //create an object that holds arrays with info\n  let object = {};\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (object[counts[i]]) {\n      object[counts[i]].push(arr[i]);\n\
    \    } else {\n      object[counts[i]] = [arr[i]];\n    }\n  }\n  //sort object\
    \ by number of 1s and sort arrays by decimal value if needed\n  for (let key in\
    \ object) {\n    if (object[key].length > 1) {\n      object[key].sort((a, b)\
    \ => a - b);\n    }\n  }\n  //put it all together and return the result\n  let\
    \ result = [];\n  for (let key in object) {\n    for (let i = 0; i < object[key].length;\
    \ i++) {\n      result.push(object[key][i]);\n    }\n  }\n  return result;\n}",
  "    return arr.sort((a,b)=>{\n        let x = a.toString(2).split('1').length;\n\
    \        let y = b.toString(2).split('1').length;\n        return x - y === 0\
    \ ? a - b : x - y;\n    });\n}\n", "    var binArr = [];\n    var base10 = [];\n\
    \    var sortArr = [];\n    for(var i = 0; i < arr.length; i++){\n        var\
    \ num = arr[i];\n        var bin = Number(num).toString(2);\n        binArr.push(bin);\n\
    \        base10.push(num);\n    }\n    for(var j = 0; j < binArr.length; j++){\n\
    \        var numOfOne = 0;\n        for(var k = 0; k < binArr[j].length; k++){\n\
    \            if(binArr[j][k] === '1'){\n                numOfOne++;\n        \
    \    }\n        }\n        sortArr.push(numOfOne);\n    }\n    var result = [];\n\
    \    var sorted = sortArr.sort(function(a, b){return a-b});\n    for(var i = 0;\
    \ i < sorted.length; i++){\n        var index = sortArr.indexOf(sorted[i]);\n\
    \        sortArr[index] = null;\n        var num = base10[index];\n        result.push(num);\n\
    \    }\n    return result;\n}", "  // add your code here\n  function numberOfOnes(num){\n\
    \    var binary = num.toString(2);\n    return binary.split(\"\").filter(item\
    \ => item === \"1\").length;\n  }\n  return arr.sort((a,b) => numberOfOnes(a)\
    \ - numberOfOnes(b) || a - b);\n}\n", "    if (arr.length === 0) return arr;\n\
    \    else {\n        return arr.sort(function(a, b) {\n            // Get number\
    \ of 1s in binary representation for a and b\n            var countA = (a >>>\
    \ 0).toString(2).match(/1/g).length;\n            var countB = (b >>> 0).toString(2).match(/1/g).length;\n\
    \            // console.log(a, b, countA, countB);\n            if (countA < countB)\
    \ return -1;\n            else if (countA > countB) return 1;\n            else\
    \ if (a < b) return -1;\n            else if (a > b) return 1;\n            else\
    \ return 0;\n        });\n    }\n}", "  var o=[]\n  var numbers=[]\n  var result=[]\n\
    \  for(var i=0;i<arr.length;i++){\n    var x=0\n    var str=arr[i].toString(2)\n\
    \    for(var j=0;j<str.length;j++){\n      if(str[j]===\"1\") x++\n    }\n   \
    \ if(o[x]===undefined){\n      o[x]=[arr[i]]\n    }else{\n      o[x].push(arr[i])\n\
    \    }\n  }\n  for(var k=0;k<o.length;k++){\n    if(o[k]!==undefined){\n     \
    \ o[k].sort(function(a,b){return a-b})\n      result=result.concat(o[k])\n   \
    \ }\n  }\n  return result\n}", "  return arr.sort(function(a,b){\n    var aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    var bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    return aBin > bBin ? 1 : aBin < bBin ? -1 : a > b\
    \ ? 1 : -1;\n  });\n}\n", "  var obj = {};\n  var arr1 = [];\n  var arr2 = [];\n\
    \  var arr3 = [];\n  var arr4 = [];\n  var arr5 = [];\n  var arr6 = [];\n  var\
    \ arr7 = [];\n  var arr8 = [];\n  var arr9 = [];\n  var arr10 = [];\n  var arr11\
    \ = [];\n  var arr12 = [];\n  var arr13 = [];\n  var arr14 = [];\n  var arr15\
    \ = [];\n  var arr16 = [];\n  var arr17 = [];\n  var arr18 = [];\n  var arr19\
    \ = [];\n  var arr20 = [];\n  var arr21 = [];\n  var arr22 = [];\n  var arr23\
    \ = [];\n  var arr24 = [];\n  var arr25 = [];\n  var arr26 = [];\n  var arr27\
    \ = [];\n  var arr28 = [];\n  var arr29 = [];\n  var arr30 = [];\n  var arr31\
    \ = [];\n  var arr32 = [];\n  for(var i = 0; i < arr.length; i++){\n    var binary\
    \ = arr[i].toString(2);\n    var count = 0;\n    for(var j = 0; j < binary.length;\
    \ j++){\n      if(binary[j] === '1'){\n        count++;\n      }\n    }\n    if(obj[count]\
    \ !== undefined){\n      obj[count].push(arr[i]);\n    }else{\n      obj[count]\
    \ = [arr[i]];\n    }\n  }\n  for(var i = 0; i < arr.length; i++){\n    var binary\
    \ = arr[i].toString(2);\n    var count = 0;\n    for(var j = 0; j < binary.length;\
    \ j++){\n      if(binary[j] === '1'){\n        count++;\n      }\n    }\n    if(count\
    \ === 0){\n      arr1.push(arr[i]);\n    }else if(count === 1){\n      arr2.push(arr[i]);\n\
    \    }else if(count === 2){\n      arr3.push(arr[i]);\n    }else if(count ===\
    \ 3){\n     ", "  let map = new Map()\n  let result = []\n  for(let i = 0; i <\
    \ arr.length; i++){\n    if(map.has(arr[i])) map.set(arr[i], map.get(arr[i]) +\
    \ 1)\n    else map.set(arr[i], 1)\n  }\n  map = new Map([...map.entries()].sort((a,\
    \ b) => a[1] - b[1]))\n  for(let [key, value] of map){\n    for(let i = 0; i <\
    \ value; i++){\n      result.push(key)\n    }\n  }\n  return result\n}\n", " \
    \ return arr.sort((a,b)=>(a.toString(2).split('1').length)-(b.toString(2).split('1').length)||a-b);\n\
    }", "    let h ={};\n    let temp = 0;\n    for(let i=0;i<arr.length;i++){\n \
    \       temp = arr[i].toString(2).split('').filter(x=>x=='1').length;\n      \
    \  if(h[temp] == undefined){\n            h[temp] = [arr[i]];\n        }else{\n\
    \            h[temp].push(arr[i]);\n        }\n    }\n    let len = Object.keys(h).length;\n\
    \    let arr1 = [];\n    for(let i=0;i<len;i++){\n        arr1.push(h[i].sort((a,b)=>a-b));\n\
    \    }\n    return arr1.flat();\n}\n", "  var sorted = arr.sort(function(a,b){\n\
    \    var strA = (a >>> 0).toString(2);\n    var strB = (b >>> 0).toString(2);\n\
    \    var countA = strA.split('1').length - 1;\n    var countB = strB.split('1').length\
    \ - 1;\n    if(countA === countB){\n      return a - b;\n    }\n    return countA\
    \ - countB;\n  });\n  return sorted;\n}", "    var ones = [], num = [], res =\
    \ [];\n    for(var i = 0; i < arr.length; i++){\n        ones.push(arr[i].toString(2).split('').filter(x\
    \ => x == 1).length);\n        num.push(arr[i]);\n    }\n    for(var j = 0; j\
    \ < arr.length; j++){\n        var max = Math.max(...ones);\n        res.push(num[ones.indexOf(max)]);\n\
    \        ones[ones.indexOf(max)] = -1;\n    }\n    return res;\n}\n", "  return\
    \ arr.sort(function(a,b){\n    var decA = a;\n    var binA = (a >>> 0).toString(2);\n\
    \    var onesA = binA.match(/1/g).length;\n    var decB = b;\n    var binB = (b\
    \ >>> 0).toString(2);\n    var onesB = binB.match(/1/g).length;\n    if(onesA\
    \ < onesB){\n      return -1;\n    }\n    else if(onesA > onesB){\n      return\
    \ 1;\n    }\n    else if(onesA === onesB){\n      if(decA < decB){\n        return\
    \ -1;\n      }\n      else if(decA > decB){\n        return 1;\n      }\n    \
    \  else if(decA === decB){\n        return 0;\n      }\n    }\n  });\n}", "  \
    \  arr.sort(function(a,b){\n        let binA = a.toString(2);\n        let binB\
    \ = b.toString(2);\n        let countA = 0;\n        let countB = 0;\n       \
    \ for(let i = 0; i < binA.length; i++){\n            if(binA[i] === '1'){\n  \
    \              countA++;\n            }\n        }\n        for(let i = 0; i <\
    \ binB.length; i++){\n            if(binB[i] === '1'){\n                countB++;\n\
    \            }\n        }\n        if(countA === countB){\n            return\
    \ a - b;\n        }\n        return countA - countB;\n    });\n    return arr;\n\
    }\n", "  let map = arr.map(x => [x, x.toString(2).split('').filter(y => y == 1).length])\n\
    \  return map.sort((a, b) => a[1] > b[1] ? 1 : a[1] < b[1] ? -1 : a[0] > b[0]\
    \ ? 1 : -1).map(x => x[0])\n}\n", "  arr.sort(function(a,b){\n    var binA = a.toString(2);\n\
    \    var binB = b.toString(2);\n    var countA = (binA.match(/1/g) || []).length;\n\
    \    var countB = (binB.match(/1/g) || []).length;\n    if(countA == countB){\n\
    \      return a-b;\n    }\n    return countA-countB;\n  });\n  return arr;\n}\n\
    \nsort_array([13,11,15]);//, [15,13,11])", "  let arr1 = [];\n  let str1 = '';\n\
    \  let str2 = '';\n  let result = [];\n  let result1 = [];\n  let result2 = [];\n\
    \  let i = 0;\n  let y = 0;\n  let m = 0;\n  let n = 0;\n  let a = 0;\n  let b\
    \ = 0;\n  let c = 0;\n  let d = 0;\n  if (arr.length == 0) return arr;\n  for\
    \ (let x = 0; x < arr.length; x++) {\n    for (let num = arr[x]; num > 0; num\
    \ = Math.floor(num / 2)) {\n      str1 += num % 2;\n    }\n    arr1.push(str1);\n\
    \    str1 = '';\n  }\n  for (let k = 0; k < arr1.length; k++) {\n    for (let\
    \ p = 0; p < arr1[k].length; p++) {\n      if (arr1[k][p] == 1) i++;\n    }\n\
    \    result.push(i);\n    i = 0;\n  }\n  for (let r = 0; r < result.length; r++)\
    \ {\n    if (result[r] == result[0]) {\n      result1.push(arr[r]);\n    }\n \
    \ }\n  while (y < result1.length) {\n    m = result1[y];\n    n = y;\n    for\
    \ (let z = y + 1; z < result1.length; z++) {\n      if (result1[z] < m) {\n  \
    \      m = result1[z];\n        n = z;\n      }\n    }\n    result1[n] = result1[y];\n\
    \    result1[y] = m;\n    y++;\n  }\n  for (let r = 0; r < result.length; r++)\
    \ {\n    if (result[r] == result[0]) {\n      result2.push(arr[r]);\n    }\n \
    \ }\n  for (let w = 0; w < result1.length; w++) {\n    for (let q = 0; q < result2.length;\
    \ q++) {", "  var binaryMap = [];\n  var res = [];\n  for(var i = 0; i < arr.length;\
    \ i++){\n    binaryMap.push(getBinaryLength(arr[i]));\n  }\n  binaryMap.sort(function(a,b){return\
    \ a-b});\n  for(var j = 0; j < binaryMap.length; j++){\n    res.push(arr[binaryMap[j][0]]);\n\
    \  }\n  return res;\n}", "    return arr.sort((a,b)=>{\n        let countA = [...a.toString(2)].filter(el=>el==1).length;\n\
    \        let countB = [...b.toString(2)].filter(el=>el==1).length;\n        if(countA!=countB){\n\
    \            return countA-countB;\n        }else{\n            return a-b;\n\
    \        }\n    })\n}\n", "    let result = arr.sort((a,b) => {\n        let binaryA\
    \ = a.toString(2);\n        let binaryB = b.toString(2);\n        if (countOne(binaryA)\
    \ === countOne(binaryB)) {\n            return a-b;\n        }\n        return\
    \ countOne(binaryA) - countOne(binaryB);\n    });\n    return result;\n}\n", " \
    \ arr.sort(compare);\n  return arr;\n}", "    // your code here\n    var binaryArr\
    \ = [];\n    var onesArr = [];\n    var sortedArr = [];\n    var finalArr = [];\n\
    \    for(var i = 0; i < arr.length; i++){\n        binaryArr.push(arr[i].toString(2).split('').map(Number));\n\
    \    }\n    for(var j = 0; j < binaryArr.length; j++){\n        onesArr.push(binaryArr[j].reduce(function(prev,\
    \ curr){\n            return prev + curr;\n        }));\n    }\n    for(var k\
    \ = 0; k < onesArr.length; k++){\n        if(!sortedArr[onesArr[k]]){\n      \
    \      sortedArr[onesArr[k]] = [];\n        }\n        sortedArr[onesArr[k]].push(arr[k]);\n\
    \    }\n    for(var l = 0; l < sortedArr.length; l++){\n        if(sortedArr[l]){\n\
    \            sortedArr[l].sort(function(a, b){\n                return a - b;\n\
    \            });\n            finalArr = finalArr.concat(sortedArr[l]);\n    \
    \    }\n    }\n    return finalArr;\n}\n", "\tvar bin = [];\n\tfor(var i = 0;\
    \ i < arr.length; i++){\n\t\tbin.push(arr[i].toString(2));\n\t}\n\tconsole.log(bin);\n\
    \t\n\tfor(var i = 0; i < bin.length; i++){\n\t\tvar counter = 0;\n\t\tvar nums\
    \ = bin[i].split('');\n\t\t\n\t\tfor(var j = 0; j < nums.length; j++){\n\t\t\t\
    if(nums[j] == 1){\n\t\t\t\tcounter++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tbin[i] = [counter,\
    \ bin[i]];\n\t}\n\tconsole.log(bin);\n\tbin.sort(function(a, b){\n\t\treturn a[0]\
    \ - b[0];\n\t});\n\t\n\tfor(var i = 0; i < bin.length; i++){\n\t\tbin[i] = parseInt(bin[i][1],\
    \ 2);\n\t}\n\t\n\treturn bin;\n}\n", "    let checker = [];\n    let result =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        checker.push(arr[i].toString(2).split(\"\
    \").filter(x => x === \"1\").length);\n    }\n    checker.forEach((x, index) =>\
    \ {\n        result.push({num: arr[index], amount: x});\n    });\n    result.sort((a,\
    \ b) => a.amount - b.amount);\n    let answer = [];\n    result.forEach(x => answer.push(x.num));\n\
    \    return answer;\n}\n", "  // your code here\n  return arr.sort(function(a,b){\n\
    \    a = a.toString(2);\n    b = b.toString(2);\n    return a.split(1).length\
    \ - b.split(1).length;\n  });\n}\n", "    let len = arr.length;\n    let list\
    \ = [];\n    for(let i = 0; i < len; i++){\n        let num = arr[i];\n      \
    \  let ones = 0;\n        while(num){\n            ones += num%2;\n          \
    \  num = Math.floor(num/2);\n        }\n        if(!list[ones]) list[ones] = [];\n\
    \        list[ones].push(arr[i]);\n    }\n    let result = [];\n    list.forEach(function(item){\n\
    \        if(item){\n            result = result.concat(item.sort(function(a,b){return\
    \ a-b}));\n        }\n    });\n    return result;\n}\n", "  arr.sort(function(a,b){\n\
    \    a = a.toString(2);\n    b = b.toString(2);\n    var aOne = a.split('1').length-1;\n\
    \    var bOne = b.split('1').length-1;\n    if(aOne > bOne){\n      return 1;\n\
    \    }else if(aOne < bOne){\n      return -1;\n    }else{\n      return a - b;\n\
    \    }\n  });\n  return arr;\n}\n", "    let myArr = arr.slice();\n    myArr.sort((a,b)\
    \ => {\n        let countA = (a.toString(2).match(/1/g) || []).length;\n     \
    \   let countB = (b.toString(2).match(/1/g) || []).length;\n        if (countA\
    \ === countB) {\n            return a - b;\n        } else {\n            return\
    \ countA - countB;\n        }\n    });\n    return myArr;\n}\n", "  arr.sort(function(a,b){\n\
    \    if(numberOfOnes(a) < numberOfOnes(b)){\n      return -1;\n    }\n    else\
    \ if(numberOfOnes(a) > numberOfOnes(b)){\n      return 1;\n    }\n    else{\n\
    \      if(a < b){\n        return -1;\n      }\n      else if(a > b){\n      \
    \  return 1;\n      }\n      else{\n        return 0;\n      }\n    }\n  });\n\
    \  return arr;\n}", "  return arr.sort(function(a,b){\n    var abin = Number(a).toString(2);\n\
    \    var bbin = Number(b).toString(2);\n    if(abin.match(/1/g).length > bbin.match(/1/g).length){\n\
    \      return 1;\n    }\n    else if(abin.match(/1/g).length < bbin.match(/1/g).length){\n\
    \      return -1;\n    }\n    else{\n      return a-b;\n    }\n  });\n}", "  return\
    \ arr.sort(function(a,b){\n    if (a.toString(2).split(1).length-1 != b.toString(2).split(1).length-1){\n\
    \      return a.toString(2).split(1).length-1 - b.toString(2).split(1).length-1;\n\
    \    } else {\n      return a - b;\n    }\n  });\n}", "    let map = {}\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let count = 0\n        let temp = arr[i]\n\
    \        while(temp){\n            if(temp & 1) count++\n            temp = temp\
    \ >> 1\n        }\n        map[count] ? map[count].push(arr[i]) : map[count] =\
    \ [arr[i]]\n    }\n    let keys = Object.keys(map)\n    let values = Object.values(map)\n\
    \    keys.sort((a,b) => a - b)\n    let res = []\n    for(let i = 0; i < keys.length;\
    \ i++){\n        let temp = values[i]\n        temp.sort((a,b) => a - b)\n   \
    \     res = res.concat(temp)\n    }\n    return res\n}", "  return arr.sort(\n\
    \    function(a,b){\n      var a_ones = a.toString(2).split('1').length - 1;\n\
    \      var b_ones = b.toString(2).split('1').length - 1;\n      if(a_ones == b_ones){\n\
    \        return a - b;\n      }\n      return a_ones - b_ones;\n    }\n  );\n}",
  "  let arrayOfOnes = []\n  let arrayOfBinaries = []\n  let sortedArray = []\n  arr.forEach(element\
    \ => arrayOfOnes.push(element.toString(2).split(\"1\").length-1))\n  arr.forEach(element\
    \ => arrayOfBinaries.push(element.toString(2)))\n  arrayOfOnes.forEach((element,\
    \ index) => sortedArray.push({'ones': element, 'binary': arrayOfBinaries[index],\
    \ 'decimal': arr[index]}))\n  sortedArray.sort((a, b) => {\n    if (a.ones > b.ones)\
    \ {\n      return 1\n    } else if (a.ones < b.ones) {\n      return -1\n    }\
    \ else {\n      if (a.decimal > b.decimal) {\n        return 1\n      } else if\
    \ (a.decimal < b.decimal) {\n        return -1\n      } else {\n        return\
    \ 0\n      }\n    }\n  })\n  return sortedArray.map(element => element.decimal)\n\
    }\n", "    var array = arr.sort(function(a,b){\n        a = a.toString(2);\n \
    \       b = b.toString(2);\n        if(a.match(/1/g) === null) a = 0;\n      \
    \  else a = a.match(/1/g).length;\n        if(b.match(/1/g) === null) b = 0;\n\
    \        else b = b.match(/1/g).length;\n        if(a===b) return arr.indexOf(a)\
    \ - arr.indexOf(b);\n        else return a-b;\n    });\n    return array;\n}\n\
    sort_array([0, 3, 2, 4, 5]);\n", "  return arr.sort(function(a,b){\n    a = a.toString(2).split('').filter(a\
    \ => a == 1).length;\n    b = b.toString(2).split('').filter(a => a == 1).length;\n\
    \    return a - b || a - b;\n  });\n}\n", "    let sort=arr.sort((a,b)=>a-b)\n\
    \    let newArr=[];\n    let dup=arr.filter((num,index)=>{\n        return arr.indexOf(num)!==index\n\
    \    })\n    let unique=arr.filter((num,index)=>{\n        return arr.indexOf(num)===index\n\
    \    })\n    for(let n of unique){\n      newArr.push(n)\n    }\n    for(let n\
    \ of dup){\n      newArr.push(n)\n    }\n    return newArr\n  }", "  var bin =\
    \ []\n  var ones = []\n  var final = []\n  for(var i = 0; i < arr.length; i++){\n\
    \    bin.push(arr[i].toString(2))\n    ones.push(bin[i].split('').filter(function(i){return\
    \ i == '1'}).length)\n  }\n  var sorted = ones.slice().sort(function(a,b){return\
    \ a - b})\n  for(var j = 0; j < arr.length; j++){\n    var geti = sorted.indexOf(ones[j])\n\
    \    final[geti] = arr[j]\n    sorted[geti] = 'found'\n  }\n  return final\n}",
  "  let result = [];\n  let map = {};\n  //looking for the ones in the binary representation\n\
    \  for(let i=0; i<arr.length; i++){\n    let binary = arr[i].toString(2);\n  \
    \  let ones = binary.match(/1/g);\n    map[arr[i]] = ones;\n  }\n  //sorting them\
    \ in the map\n  let keys = Object.keys(map);\n  keys.sort((a,b)=>{\n    if(map[a].length\
    \ === map[b].length){\n      return a-b;\n    }\n    return map[a].length - map[b].length;\n\
    \  });\n  //create the new array\n  for(let i=0; i<keys.length; i++){\n    result.push(parseInt(keys[i]));\n\
    \  }\n  return result;\n}\n", "  if(arr.length === 0) return [];\n  let sorted\
    \ = [];\n  while(arr.length > 0){\n    let most = arr.reduce((a, b) => oneCount(a)\
    \ > oneCount(b) ? a : b);\n    let index = arr.indexOf(most);\n    sorted.push(most);\n\
    \    arr.splice(index, 1);\n  }\n  return sorted;\n}\n", "    let sortedArray\
    \ = []\n    let arrayOfOnes = []\n    for(let i = 0; i < arr.length; i++){\n \
    \       let number = arr[i]\n        let binary = number.toString(2)\n       \
    \ let sum = 0\n        for(let j = 0; j < binary.length; j++){\n            let\
    \ binaryNumber = binary[j]\n            if(binaryNumber === '1'){\n          \
    \      sum++\n            }\n        }\n        arrayOfOnes.push(sum)\n    }\n\
    \    console.log(arrayOfOnes)\n    // return sortedArray\n}\n", "  if(arr.length\
    \ === 0) return [];\n  let sortd = arr.sort((a,b) => {\n    let a2 = (a).toString(2);\n\
    \    let b2 = (b).toString(2);\n    let a1s = a2.split('').filter(e => e == '1').length;\n\
    \    let b1s = b2.split('').filter(e => e == '1').length;\n    return a1s - b1s\
    \ === 0 ? a - b : a1s - b1s;\n  });\n  return sortd;\n}\nsort_array([0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\
    \ 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,\
    \ 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\
    \ 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\
    \ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\
    \ 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,\
    \ 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131,\
    \ 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,\
    \ 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,\
    \ 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,\
    \ 180, 181, 182", "    let newArr = arr.slice();\n    newArr.sort((a,b) => {\n\
    \        let aBin = (a).toString(2);\n        let bBin = (b).toString(2);\n  \
    \      let aOnes = aBin.split('').filter(elem => elem === '1').length;\n     \
    \   let bOnes = bBin.split('').filter(elem => elem === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        } else {\n         \
    \   return aOnes - bOnes;\n        }\n    });\n    return newArr;\n}\n", "   \
    \ //your code here\n    return arr.sort((a,b)=>(a.toString(2).split('').filter(x=>x==1).length-b.toString(2).split('').filter(x=>x==1).length)||(a-b))\n\
    }", "  arr.sort(function(a,b){\n    if ( (a >>> 0).toString(2).match(/1/g).length\
    \ < (b >>> 0).toString(2).match(/1/g).length ) {\n      return -1;\n    }\n  \
    \  if ( (a >>> 0).toString(2).match(/1/g).length > (b >>> 0).toString(2).match(/1/g).length\
    \ ) {\n      return 1;\n    }\n    if ( (a >>> 0).toString(2).match(/1/g).length\
    \ == (b >>> 0).toString(2).match(/1/g).length ) {\n      if ( a < b ) {\n    \
    \    return -1;\n      }\n      if ( a > b ) {\n        return 1;\n      }\n \
    \   }\n  });\n  return arr;\n}\n", "    var sorted = [];\n    var unSorted = [...arr];\n\
    \    var binOneCount = [];\n    var binOneCountSorted = [];\n    for(var i = 0;\
    \ i < arr.length; i++){\n        binOneCount.push(getOnesCount(arr[i]));\n   \
    \ }\n    binOneCountSorted = binOneCount.slice(0).sort();\n    while(binOneCountSorted.length\
    \ > 0){\n        var n = binOneCountSorted.pop();\n        var index = binOneCount.indexOf(n);\n\
    \        sorted.push(unSorted[index]);\n        binOneCount.splice(index, 1);\n\
    \        unSorted.splice(index, 1);\n    }\n    return sorted;\n}\n", "  arr.sort(function(a,b){\n\
    \    let aOnes = (a >>> 0).toString(2).split('1').length - 1;\n    let bOnes =\
    \ (b >>> 0).toString(2).split('1').length - 1;\n    return aOnes === bOnes ? a\
    \ - b : aOnes - bOnes;\n  });\n  return arr;\n}\n", "    var dict = {};\n    for\
    \ (var i = 0; i < arr.length; i++) {\n        var binary = arr[i].toString(2);\n\
    \        var one = 0;\n        for (var j = 0; j < binary.length; j++) {\n   \
    \         if (binary[j] == 1) {\n                one += 1;\n            }\n  \
    \      }\n        if (dict[one] == undefined) {\n            dict[one] = [arr[i]];\n\
    \        } else {\n            dict[one].push(arr[i]);\n        }\n    }\n   \
    \ var ans = [];\n    var num = Object.keys(dict);\n    num.sort(function(a, b)\
    \ {\n        return a - b;\n    });\n    for (var k = 0; k < num.length; k++)\
    \ {\n        dict[num[k]].sort(function(a, b) {\n            return a - b;\n \
    \       });\n        ans = ans.concat(dict[num[k]]);\n    }\n    return ans;\n\
    }", "    return arr.sort((a,b)=>{\n    var ones = (x) => x.toString(2).split('1').length-1;\n\
    \    return ones(a)===ones(b)?a-b:ones(a)-ones(b);\n    });\n}\n", "  let oneCount\
    \ = [], result = [];\n  arr.forEach(element => {\n    let counter = 0;\n    let\
    \ arr2 = element.toString(2).split('').map(Number);\n    console.log(arr2);\n\
    \    arr2.forEach(element => {\n      if(element == 1){\n        counter++;\n\
    \      }\n    });\n    oneCount.push(counter);\n  });\n  console.log(oneCount);\n\
    }\nsort_array([6, 5, 3, 2, 8, 10, 9]);\n", "    return arr.sort((a,b)=> a.toString(2).replace(/0/g,\
    \ '').length - b.toString(2).replace(/0/g, '').length || a - b)\n}", "    let\
    \ res = arr.sort((a,b)=>{\n        let aBin = a.toString(2), bBin = b.toString(2),\
    \ aOnes = 0, bOnes = 0;\n        for(let i=0; i<aBin.length; i++){\n         \
    \   if(aBin[i] === '1') aOnes++;\n        }\n        for(let i=0; i<bBin.length;\
    \ i++){\n            if(bBin[i] === '1') bOnes++;\n        }\n        if(aOnes\
    \ > bOnes) return 1;\n        else if(aOnes < bOnes) return -1;\n        else{\n\
    \            if(a>b) return 1;\n            else if(a<b) return -1;\n        \
    \    else return 0;\n        }\n    });\n    return res;\n}\n", "    return arr.sort((a,b)=>{\n\
    \        a = a.toString(2).split('1').length;\n        b = b.toString(2).split('1').length;\n\
    \        return a - b || a - b;\n    })\n}", "  return arr.sort(function(a,b){\n\
    \    var arr1= (a).toString(2).split('');\n    var arr2= (b).toString(2).split('');\n\
    \    if(arr1.filter(function(x){return x=='1'}).length===arr2.filter(function(x){return\
    \ x=='1'}).length){\n      return a-b;\n    }\n    return arr1.filter(function(x){return\
    \ x=='1'}).length-arr2.filter(function(x){return x=='1'}).length;\n  });\n}",
  "// Your code goes here\n  if (arr.length === 0) {\n    return [];\n  }\n  let bin\
    \ = [];\n  for (let i = 0; i < arr.length; i++) {\n    let str = arr[i].toString(2);\n\
    \    bin.push(str);\n  }\n  let sortBin = bin.slice().sort();\n  let results =\
    \ [];\n  let count = [];\n  for (let j = 0; j < sortBin.length; j++) {\n    if\
    \ (sortBin[j+1] === sortBin[j]) {\n      count.push(arr[j]);\n    } else {\n \
    \     results.push(arr[j]);\n      count.sort(function(a, b) {\n        return\
    \ a - b;\n      });\n      results = results.concat(count);\n      count = [];\n\
    \    }\n  }\n  return results;\n}\n", "  arr.sort(function(a,b){\n    a = a.toString(2).split('').filter(function(n){return\
    \ n==1;}).length;\n    b = b.toString(2).split('').filter(function(n){return n==1;}).length;\n\
    \    return a < b ? -1 : a == b ? (a-b) : 1;\n  });\n  return arr;\n}", "    let\
    \ newArr = arr.map(element => (element >>> 0).toString(2).split('').reduce((a,b)\
    \ => {return +a + +b;}, 0)).sort((a,b) => {return a - b;});\n    return newArr.map(element\
    \ => {\n        let index = newArr.indexOf(element);\n        newArr.splice(index,\
    \ 1);\n        return arr[index];\n    });\n}\n", "  arr.sort(function(a,b){\n\
    \    var binNumA = a.toString(2);\n    var binNumB = b.toString(2);\n    var numOfOnesA\
    \ = 0;\n    var numOfOnesB = 0;\n    for(var i = 0; i < binNumA.length; i++){\n\
    \      if(binNumA[i] == 1){\n        numOfOnesA += 1;\n      }\n    }\n    for(var\
    \ i = 0; i < binNumB.length; i++){\n      if(binNumB[i] == 1){\n        numOfOnesB\
    \ += 1;\n      }\n    }\n    if(numOfOnesA == numOfOnesB){\n      return a - b;\n\
    \    }\n    return numOfOnesA - numOfOnesB;\n  });\n  return arr;\n}\n", "   \
    \ return arr.sort((a,b)=>{\n      return (a.toString(2).split('1').length - b.toString(2).split('1').length)\
    \ || (a-b)\n    })\n  }\n  \n  // Test.assertSimilar(sort_array([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10]), [1, 2, 4, 8, 3, 5, 6, 9, 10, 7])\n  // Test.assertSimilar(sort_array([10,\
    \ 100, 1000, 10000]), [10, 100, 10000, 1000])", "  arr.sort(function(a,b){\n \
    \   a = a.toString(2).split('').filter(x => x == '1').length;\n    b = b.toString(2).split('').filter(x\
    \ => x == '1').length;\n    return a-b;\n  });\n  return arr;\n}\nsort_array([10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,\
    \ 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]);\n", "  return arr.sort(function(a,b){\n\
    \    if(num_ones(a) === num_ones(b)){\n      return a - b;\n    }\n    return\
    \ num_ones(a) - num_ones(b);\n  });\n}\n", "  let ones = [];\n  let nums = [];\n\
    \  let sorted = [];\n  arr.forEach(num => {\n    ones.push(num.toString(2).split(\"\
    1\").length-1);\n    nums.push(num);\n  });\n  ones.forEach((one, index) => {\n\
    \    if (one === 0) {\n      sorted.push(nums[index]);\n      nums.splice(index,\
    \ 1);\n      ones.splice(index, 1);\n    }\n  });\n  ones.forEach((one, index)\
    \ => {\n    if (one === 1) {\n      sorted.push(nums[index]);\n      nums.splice(index,\
    \ 1);\n      ones.splice(index, 1);\n    }\n  });\n  ones.forEach((one, index)\
    \ => {\n    if (one === 2) {\n      sorted.push(nums[index]);\n      nums.splice(index,\
    \ 1);\n      ones.splice(index, 1);\n    }\n  });\n  return sorted;\n}\n", " \
    \  return arr.sort(function(a,b){\n     if(getNumberOfOnes(a)===getNumberOfOnes(b)){\n\
    \       return a-b;\n     }\n     return getNumberOfOnes(a)-getNumberOfOnes(b);\n\
    \   });\n}\n", "  var ar = [];\n  var obj = [];\n  var res = [];\n  var tmp =\
    \ 0;\n  arr.forEach(function(value){\n    tmp = (value >>> 0).toString(2).match(/1/g);\n\
    \    if(tmp){\n      tmp = tmp.length;\n    }else{\n      tmp = 0;\n    }\n  \
    \  ar.push(tmp);\n    obj.push({tmp:tmp, value:value});\n  });\n  obj.sort(function(a,b){\n\
    \    if(a.tmp === b.tmp){\n      return a.value - b.value;\n    }else{\n     \
    \ return a.tmp - b.tmp;\n    }\n  });\n  obj.forEach(function(v){\n    res.push(v.value);\n\
    \  });\n  return res;\n}\nsort_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);", "   \
    \ arr.sort(function(a,b){\n        var A = a.toString(2).match(/1/g).length;\n\
    \        var B = b.toString(2).match(/1/g).length;\n        if(A < B) return -1;\n\
    \        if(A > B) return 1;\n        return a-b;\n    });\n    return arr;\n}",
  "    arr.sort(function(a,b){\n        a = a.toString(2).match(/1/g).length;\n  \
    \      b = b.toString(2).match(/1/g).length;\n        return a-b || a-b;\n   \
    \ });\n    return arr;\n}", "  arr.sort(function(a,b){\n  if(a.toString(2).match(/1/g).length\
    \ > b.toString(2).match(/1/g).length){\n  return 1\n  }\n  else if(a.toString(2).match(/1/g).length\
    \ < b.toString(2).match(/1/g).length){\n  return -1\n  }\n  else if(a > b){\n\
    \  return 1\n  }\n  else if(a < b){\n  return -1\n  }\n  })\n  return arr\n  }",
  "  if(arr.length === 0) return arr;\n  let oneCount = [];\n  let indexes = [];\n\
    \  arr.forEach((num,i) => {\n    let count = 0;\n    let binary = num.toString(2);\n\
    \    for(let i = 0; i < binary.length; i++){\n      if(binary[i] === '1') count++;\n\
    \    }\n    oneCount.push(count);\n    indexes.push(i);\n  });\n  let result =\
    \ [];\n  while(result.length < arr.length){\n    let leastOnes = Math.min(...oneCount);\n\
    \    let i = oneCount.indexOf(leastOnes);\n    oneCount.splice(i,1);\n    result.push(arr[indexes[i]]);\n\
    \    indexes.splice(i,1);\n  }\n  return result;\n}", "    arr.sort(function(a,b){\n\
    \        return (a.toString(2).split(\"1\").length - b.toString(2).split(\"1\"\
    ).length) || a - b;\n    });\n    return arr;\n}\n", "  let ones_arr = arr.map(a\
    \ => a.toString(2).split('').reduce((x, y) => x + (y === '1'), 0));\n  let max_ones\
    \ = Math.max(...ones_arr);\n  let ones_dict = {};\n  for (let i = 0; i <= max_ones;\
    \ i++) {\n    ones_dict[i] = arr.filter((val, index) => ones_arr[index] === i);\n\
    \  }\n  let res = [];\n  for (let i = 0; i <= max_ones; i++) {\n    res = res.concat(ones_dict[i]);\n\
    \  }\n  return res;\n}\n", "    return arr.sort((a,b)=>a.toString(2).split('1').length-b.toString(2).split('1').length);\n\
    }\n", "    arr.sort(function(a,b){\n        return (a.toString(2).match(/1/g)||[]).length-(b.toString(2).match(/1/g)||[]).length\n\
    \    })\n    return arr\n}\n", "  return arr.sort(function(a,b){\n    if(numOnes(a)\
    \ < numOnes(b)){\n      return -1;\n    }else if(numOnes(a) > numOnes(b)){\n \
    \     return 1;\n    }else{\n      return a-b;\n    }\n  });\n}\n", "  arr.sort(function(a,b){\n\
    \    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    if(aBin.match(/1/g)\
    \ == null && bBin.match(/1/g) == null) return a - b;\n    if(aBin.match(/1/g)\
    \ == null) return -1;\n    if(bBin.match(/1/g) == null) return 1;\n    if(aBin.match(/1/g).length\
    \ < bBin.match(/1/g).length) return -1;\n    if(aBin.match(/1/g).length > bBin.match(/1/g).length)\
    \ return 1;\n    return a - b;\n  });\n  return arr;\n}\n", "    let result =\
    \ [];\n    let ones = [];\n    let zeros = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        let binary = arr[i].toString(2);\n        if (binary.match(/1/g))\
    \ {\n            ones.push(arr[i]);\n        } else {\n            zeros.push(arr[i]);\n\
    \        }\n    }\n    ones.sort((a, b) => (a.toString(2).match(/1/g) || []).length\
    \ - (b.toString(2).match(/1/g) || []).length);\n    result = ones.concat(zeros);\n\
    \    return result;\n}\n", "\tlet nums = [];\n\tarr.forEach(function(n){\n\t\t\
    let res = n.toString(2).split('').filter(function(el){\n\t\t\treturn el === '1';\n\
    \t\t});\n\t\tnums.push([n, res.length]);\n\t});\n\tnums.sort(function(a, b){\n\
    \t\tif(a[1] !== b[1]){\n\t\t\treturn a[1] - b[1];\n\t\t}\n\t\treturn a[0] - b[0];\n\
    \t});\n\treturn nums.map(function(arr){\n\t\treturn arr[0];\n\t});\n}\n", "  return\
    \ arr.sort(function(a,b){\n    let bitsA = a.toString(2).split('').filter(function(x){return\
    \ x===\"1\"}).length;\n    let bitsB = b.toString(2).split('').filter(function(x){return\
    \ x===\"1\"}).length;\n    if(bitsA>bitsB){\n      return 1;\n    }\n    else\
    \ if(bitsA<bitsB){\n      return -1;\n    }\n    else if(bitsA===bitsB){\n   \
    \   if(a>b){\n        return 1;\n      }\n      else if(a<b){\n        return\
    \ -1;\n      }\n      else{\n        return 0;\n      }\n    }\n  });\n}", " \
    \ arr.sort(function(a,b){\n    let aOne = a.toString(2).split('').filter(function(val){return\
    \ val === '1'}).length\n    let bOne = b.toString(2).split('').filter(function(val){return\
    \ val === '1'}).length\n    return aOne === bOne ? a - b : aOne - bOne\n  })\n\
    \  return arr\n}\n", "    // your solution\n    arr.sort(function(a,b){\n    \
    \    a = a.toString(2).match(/1/g).length;\n        b = b.toString(2).match(/1/g).length;\n\
    \        return a-b;\n    });\n    return arr;\n}", "  return arr.sort(function(a,b){\n\
    \    var onesA = a.toString(2).split('').filter(function(el){return el === '1'}).length;\n\
    \    var onesB = b.toString(2).split('').filter(function(el){return el === '1'}).length;\n\
    \    if(onesA > onesB){\n      return 1;\n    }\n    else if(onesA < onesB){\n\
    \      return -1;\n    }\n    else{\n      return a - b;\n    }\n  });\n}", " \
    \ return arr.sort(function(a,b){\n    if(~(a ^ b).toString(2).indexOf('1')){\n\
    \      return a.toString(2).split('').filter(function(item){\n        return item\
    \ === '1';\n      }).length - b.toString(2).split('').filter(function(item){\n\
    \        return item === '1';\n      }).length;\n    }\n    return a - b;\n  });\n\
    }", "    var nums = arr.slice(0);\n    nums.sort(function(a,b){\n        var aBin\
    \ = a.toString(2);\n        var bBin = b.toString(2);\n        if(getNumOnes(aBin)\
    \ > getNumOnes(bBin)){\n            return 1;\n        }\n        else if(getNumOnes(aBin)\
    \ < getNumOnes(bBin)){\n            return -1;\n        }\n        else{\n   \
    \         if(a > b){\n                return 1;\n            }\n            else\
    \ if(a < b){\n                return -1;\n            }\n            else{\n \
    \               return 0;\n            }\n        }\n    });\n    return nums;\n\
    }\n", "  var base = 2;\n  var sorted = arr.sort(function(a,b){\n    var aOnes\
    \ = countOnes(a);\n    var bOnes = countOnes(b);\n    return (aOnes < bOnes) ?\
    \ -1 : (aOnes > bOnes) ? 1 : (a-b);\n  });\n  return sorted;\n}\n", "    return\
    \ arr.sort((a,b)=>{\n        let binA = a.toString(2);\n        let binB = b.toString(2);\n\
    \        let countA = countBinaryOnes(binA);\n        let countB = countBinaryOnes(binB);\n\
    \        return countA == countB ? a - b : countA - countB;\n    });\n}\n", " \
    \   return arr.sort((a,b)=>a.toString(2).replace(/0/g,'').length - b.toString(2).replace(/0/g,'').length\
    \ || a-b)\n}\n", "    function toBinary(element){\n        var binArr = [];\n\
    \        var binEl = element.toString(2);\n        for(var i = 0; i < binEl.length;\
    \ i++){\n            binArr.push(parseInt(binEl[i]));\n        }\n        return\
    \ binArr;\n    }\n    var binRepr = [];\n    var newArr = [];\n    for(var i =\
    \ 0; i < arr.length; i++){\n        binRepr.push(toBinary(arr[i]));\n    }\n \
    \   var indexes = [];\n    for(var i = 0; i < binRepr.length; i++){\n        var\
    \ el = binRepr[i];\n        indexes.push(el.reduce(function(sum, current){\n \
    \           return sum + current;\n        }));\n    }\n    var sortedIndexes\
    \ = indexes.slice().sort(function(a, b){\n        return a - b;\n    });\n   \
    \ for(var i = 0; i < sortedIndexes.length; i++){\n        for(var j = 0; j < indexes.length;\
    \ j++){\n            if(sortedIndexes[i] === indexes[j]){\n                newArr.push(arr[j]);\n\
    \                indexes[j] = -1;\n            }\n        }\n    }\n    return\
    \ newArr;\n}", "    let sortedArray = arr.sort((a,b) => {\n        if (counterOnes(a)\
    \ == counterOnes(b)){\n            return a - b;\n        } else {\n         \
    \   return counterOnes(a) - counterOnes(b);\n        }\n    });\n    return sortedArray;\n\
    }\n", "  var outArr = [];\n  for (i = 0; i < arr.length; i++) {\n    var count\
    \ = 0;\n    for (j = 0; j < arr[i].toString(2).length; j++) {\n      if (arr[i].toString(2)[j]\
    \ == 1) {\n        count += 1;\n      }\n    }\n    if (outArr[count] == undefined)\
    \ {\n      outArr[count] = [];\n    }\n    outArr[count].push(arr[i]);\n  }\n\
    \  var result = [];\n  for (i = 0; i < outArr.length; i++) {\n    if (outArr[i]\
    \ != undefined) {\n      result = result.concat(outArr[i].sort(function(a, b){return\
    \ a-b}));\n    }\n  }\n  return result;\n}", "  let numbers = [], result = [];\n\
    \  for(let i = 0; i < arr.length; i++){\n    numbers.push(arr[i].toString(2).split('').filter(a\
    \ => a == '1').length);\n  }\n  for(let i = 0; i < numbers.length; i++){\n   \
    \ let temp = [], temp2 = [];\n    for(let j = 0; j < numbers.length; j++){\n \
    \     if(numbers[j] == i){\n        temp.push(arr[j]);\n        temp2.push(j);\n\
    \      }\n    }\n    if(temp.length){\n      temp.sort((a, b) => a - b);\n   \
    \   temp2.forEach(el => result.push(temp.shift()));\n    }\n  }\n  return result;\n\
    }", "  var array = [];\n  for (var i = 0; i < arr.length; i++) {\n    var str\
    \ = arr[i].toString(2);\n    var count = 0;\n    for (var j = 0; j < str.length;\
    \ j++) {\n      if (str[j] === '1') count += 1;\n    }\n    array.push({value:\
    \ arr[i], ones: count});\n  }\n  array.sort(function(a, b) {\n    if (a.ones >\
    \ b.ones) return 1;\n    if (a.ones < b.ones) return -1;\n    if (a.value > b.value)\
    \ return 1;\n    if (a.value < b.value) return -1;\n    return 0;\n  });\n  var\
    \ result = [];\n  for (var i = 0; i < array.length; i++) {\n    result.push(array[i].value);\n\
    \  }\n  return result;\n}", "    return arr.sort((a,b)=>{\n        let aOne =\
    \ countOne(a), bOne = countOne(b);\n        if(aOne !== bOne)\n            return\
    \ aOne - bOne;\n        else\n            return a - b;\n    });\n}", "\tconst\
    \ map = new Map();\n\tconst res = [];\n\tconst oneNum = (arr) => {\n\t\treturn\
    \ (arr >>> 0).toString(2).split('').filter(x => x === '1').length;\n\t};\n\tfor\
    \ (let i = 0; i < arr.length; i++) {\n\t\tlet currentOnes = oneNum(arr[i]);\n\t\
    \tif (!map.has(currentOnes)) map.set(currentOnes, [arr[i]]);\n\t\telse map.get(currentOnes).push(arr[i]);\n\
    \t}\n\tfor (let [k, v] of map) {\n\t\tres.push(...v.sort((a, b) => a - b));\n\t\
    }\n\treturn res;\n}", "\tif(arr.length==0) return [];\n\tvar ones={};\n\tvar zeros={};\n\
    \tvar ret=[];\n\tfor(var i=0;i<arr.length;i++){\n\t\tif(arr[i]==0) ret.push(arr[i]);\n\
    \t\telse{\n\t\t\tvar temp=(arr[i]).toString(2);\n\t\t\tvar num=temp.split(\"\"\
    ).filter(function(val){return val===\"1\"}).length;\n\t\t\tif(!ones[num]){\n\t\
    \t\t\tones[num]=[];\n\t\t\t}\n\t\t\tones[num].push(arr[i]);\n\t\t}\n\t}\n\tvar\
    \ keys=Object.keys(ones);\n\tfor(var i=0;i<keys.length;i++){\n\t\tones[keys[i]].sort(function(a,b){return\
    \ a-b});\n\t\tfor(var j=0;j<ones[keys[i]].length;j++){\n\t\t\tret.push(ones[keys[i]][j]);\n\
    \t\t}\n\t}\n\treturn ret;\n}", "    return arr.sort((x,y)=>{\n        let xOne\
    \ = x.toString(2).split('').filter(x=>x==1).length;\n        let yOne = y.toString(2).split('').filter(x=>x==1).length;\n\
    \        if(xOne>yOne) return 1;\n        if(xOne<yOne) return -1;\n        if(xOne==yOne)\
    \ return x-y;\n    })\n}\n", "    const sorter = (a, b) => {\n        const aOnes\
    \ = a.toString(2).match(/1/g) || [];\n        const bOnes = b.toString(2).match(/1/g)\
    \ || [];\n        if (aOnes.length === bOnes.length) {\n            return a -\
    \ b;\n        }\n        return aOnes.length - bOnes.length;\n    };\n    return\
    \ arr.sort(sorter);\n}", "  return arr.sort(function(a,b){\n    if(a.toString(2).match(/1/g)\
    \ === null)\n      return -1;\n    if(b.toString(2).match(/1/g) === null)\n  \
    \    return 1;\n    return a.toString(2).match(/1/g).length - b.toString(2).match(/1/g).length\
    \ || a - b;\n  });\n}", "  return arr.sort(function(a,b){\n  a = a.toString(2).match(/1/g).length;\n\
    \  b = b.toString(2).match(/1/g).length;\n  return a - b || a.localeCompare(b);\n\
    });\n}", "  return arr.sort(function(a,b){\n    var countA = countOnes(a)\n  \
    \  var countB = countOnes(b)\n    if(countA === countB){\n      return a-b\n \
    \   }\n    return countA-countB\n  })\n}", "  return arr.sort( (a,b) => (a.toString(2).match(/1/g)\
    \ || []).length \n                          - (b.toString(2).match(/1/g) || []).length\
    \ )\n}\n", "  //Your code here\n  //Find the binary value of each element and\
    \ the number of 1s\n  //Sort the array by number of 1s\n  //for duplicates, sort\
    \ by value\n  let result = arr.map(function(element) {\n    let bin = element.toString(2);\n\
    \    return [element, bin, bin.split('').filter(function(x) { return x == '1';\
    \ }).length];\n  }).sort(function(a, b) {\n    return a[2] === b[2] ? a[0] - b[0]\
    \ : a[2] - b[2];\n  });\n  return result.map(function(x) { return x[0]; });\n}",
  "    arr.sort(function(a,b){\n        var A = a.toString(2).match(/1/g);\n     \
    \   var B = b.toString(2).match(/1/g);\n        return (A && A.length || 0) -\
    \ (B && B.length || 0) || a - b;\n    });\n    return arr;\n}", "  return arr.sort(function(a,b){\n\
    \    return onesInBinary(a) - onesInBinary(b) || a - b;\n  });\n}\n", "    return\
    \ arr.sort((a,b)=>a.toString(2).split('').filter(n=>n==='1').length-b.toString(2).split('').filter(n=>n==='1').length||a-b)\n\
    }", "  arr.sort(function(a,b){\n    var onesA = (a).toString(2).split('1').length\
    \ - 1;\n    var onesB = (b).toString(2).split('1').length - 1;\n    if(onesA ===\
    \ onesB){\n      return a - b;\n    } else {\n      return onesA - onesB;\n  \
    \  }\n  });\n  return arr;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

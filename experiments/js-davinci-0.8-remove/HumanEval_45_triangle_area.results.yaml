language: js
name: HumanEval_45_triangle_area
results:
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area = 0.5 * a * h;\n    return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area = (a * h)/2;\n    return area;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        console.log('The\
    \ values a and h must be bigger than 0');\n        return -1;\n    }\n    var\
    \ result = a * h / 2;\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    let area = a * h / 2;\n    return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (1/2 * a * h);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  if(a && h){\n    if(a > 0 && h > 0){\n      var area\
    \ = (a * h) / 2;\n      return area;\n    }else{\n      return \"a and h must\
    \ be bigger than 0.\";\n    }\n  }else{\n    return \"a and h are required.\"\
    ;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n \
    \ assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a < 0 || h < 0){\n        console.log('Incorrect\
    \ data');\n    } else {\n        return a*h/2;\n    }\n}\n\nvar a = 3;\nvar h\
    \ = 2;\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return ((a * h) / 2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return ((a * h) / 2).toFixed(2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\nif(a>0 && h>0){\nreturn (a*h)/2;\n}\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return Math.round((a * h) / 2);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n7.5\n    at test (/tmp/tmpafw8lll4.js:11:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpafw8lll4.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 7.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (typeof a == 'number' && typeof h == 'number')\
    \ {\n        return a * h / 2;\n    }\n    else {\n        throw new Error('One\
    \ of arguments is not a number.');\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  var x;\n  x = 0.5 * a * h;\n  return x;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a > 0 && h > 0){\n        return a * h / 2;\n \
    \   } else {\n        return \"Values should be > 0.\";\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar area = (a * h)/2;\n\treturn area;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    let result = a * h / 2;\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    //Your code here\n    return (a*h)/2;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a > 0 && h > 0){\n        return a * h / 2;\n\
    \    }\n    else{\n        console.log(\"Wrong data\");\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a > 0 && h > 0){\n        return a * h / 2;\n \
    \   }\n    else return \"Nieprawid\u0142owe dane\";\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  var tri_area = (a * h)/2;\n  return tri_area;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area = a * h / 2;\n    return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area;\n    if (typeof(a)==\"number\" && typeof(h)==\"\
    number\"){\n        if(a>0 && h>0){\n            area = a*h/2;\n            return\
    \ area;\n        }else{\n            return \"This can't be a triangle\";\n  \
    \      }\n    }else{\n        return \"Side and high are not numbers\";\n    }\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a < 0 || h < 0){\n        return -1;\n    } else\
    \ {\n        return (a * h) / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n   return(a*h)/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        return 'Triangle\
    \ doesn\\'t exist';\n    } else {\n        return a * h / 2;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return(a*h/2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar area = (a * h) / 2;\n\treturn area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif(a > 0 && h > 0){\n\t\treturn a * h / 2;\n\t}\n\t\
    return \"Invalid input.\";\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif (a <= 0 || h <= 0){\n\t\treturn \"Nieprawid\u0142\
    owe dane\";\n\t} else {\n\t\treturn a*h/2;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  var x = a*h;\n  var y = x/2;\n  return y;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area = (a * h)/2;\n    return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        return \"Wrong input!\"\
    ;\n    }\n    return a * h / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\ntriangle_area(10, 25);\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    let area = (a*h)/2;\n    return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        return \"Nieprawid\u0142\
    owe dane\";\n    } else {\n        return a*h/2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar a = side * high;\n\treturn a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4lq_wtul.js:3\n\tvar a = side * high;\n\t        ^\n\nReferenceError:\
    \ side is not defined\n    at triangle_area (/tmp/tmp4lq_wtul.js:3:10)\n    at\
    \ test (/tmp/tmp4lq_wtul.js:12:20)\n    at Object.<anonymous> (/tmp/tmp4lq_wtul.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(typeof a === 'number' && typeof h === 'number'){\n\
    \        return ((a * h) / 2);\n    }\n    return -1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var result = (a * h)/2;\n    console.log(\"The area\
    \ of the triangle is: \" + result);\n    return result;\n}\ntriangle_area(12,\
    \ 3);\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'The area of the triangle is: 18

    The area of the triangle is: 7.5

    The area of the triangle is: 2

    The area of the triangle is: 40

    '
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n   return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\nvar area = triangle_area(4,6);\n\
    alert(\"Triangle area = \" + area);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp30w5fccz.js:6\nalert(\"Triangle area = \" + area);\n^\n\nReferenceError:\
    \ alert is not defined\n    at Object.<anonymous> (/tmp/tmp30w5fccz.js:6:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (1/2)*a*h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a > 0 && h > 0){\n    return Math.round((a * h)\
    \ / 2);\n    }\n    else{\n    return \"invalid values\";\n    }\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n7.5\n    at test (/tmp/tmpc88k3med.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc88k3med.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 7.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\nif (a <= 0 || h <= 0) {\n  return \"You need to put numbers\
    \ higher than 0\";\n}\n  var area = a * h / 2;\n  return area;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (typeof(a) != \"number\" || typeof(h) != \"number\"\
    ) {\n        return undefined;\n    } else {\n        return (1/2 * a * h);\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n \
    \ assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n   return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 1/2 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a < 0 || h < 0){\n        return 'Negative side\
    \ is not allowed.';\n    }\n    else{\n        return a * h / 2;\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nvar a = prompt(\"Enter side:\");\n\
    var h = prompt(\"Enter height:\");\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptq1rwrw0.js:5\nvar a = prompt(\"Enter side:\");\n        ^\n\n\
    ReferenceError: prompt is not defined\n    at Object.<anonymous> (/tmp/tmptq1rwrw0.js:5:9)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(isNaN(a) || isNaN(h)){\n        return \"Please\
    \ enter a valid number\"\n    }\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var result = a * h / 2;\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        console.log(\"A triangle\
    \ has to have both sides and high to be shown!\");\n    } else {\n        return\
    \ a * h / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (1/2)*a*h;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  let area = (a * h) / 2;\n  return area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  var area = a * h / 2;\n  return area;\n}\ntriangle_area(10,\
    \ 10);\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h/2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (typeof a !== \"number\" || typeof h !== \"number\"\
    ){\n        return -1;\n    } else {\n        return a * h / 2;\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a > 0 && h > 0){\n        return ((a * h) / 2);\n\
    \    }\n    else {\n        return -1;\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a < 0 || h < 0){\n        return -1;\n    }\n \
    \   else{\n        return a * h / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a <= 0 || h <= 0){\n        return 'Nieprawid\u0142\
    owe dane';\n    } else {\n        return a*h/2;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h/2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    let S = (a * h) / 2;\n    return S;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\ntriangle_area(10,12);\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar result = (a * h)/2;\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  if(a === undefined || h === undefined) return null;\n\
    \  if(typeof a !== 'number' || typeof h !== 'number') return null;\n  if(a < 0\
    \ || h < 0) return null;\n  return (a * h) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif (a < 0 || h < 0){\n\t\treturn -1;\n\t} else {\n\t\
    \treturn (a * h / 2);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return (1/2)*a*h;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return ((a * h) / 2).toFixed(2);\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    //Body\n    return (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (1/2 * a * h);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar area = (a * h) / 2;\n\tconsole.log(area);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n7.5\n    at test (/tmp/tmpzu3qm47b.js:12:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpzu3qm47b.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 7.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '7.5

    '
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var area;\n    if(a < 0 || h < 0){\n        console.log(\"\
    Please, enter positive numbers\");\n    }\n    else{\n        area = a * h / 2;\n\
    \        console.log(\"Triangle field with base a: \" + a + \" and height h: \"\
    \ + h + \" is equal to: \" + area);\n    }\n}\ntriangle_area(10, 15);\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n7.5\n    at test (/tmp/tmp286fmpaa.js:19:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp286fmpaa.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 7.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'Triangle field with base a: 10 and height h: 15 is equal to: 75

    Triangle field with base a: 5 and height h: 3 is equal to: 7.5

    '
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    //a->length of a side, h->high\n    //area = a*h/2\n\
    \    if(a && h){\n        return (a*h)/2;\n    }else{\n        return -1;\n  \
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif(a<=0 || h<=0){\n\t\treturn -1;\n\t}else{\n\t\treturn\
    \ (a*h)/2;\n\t}\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n\
    \  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  if (a <= 0 || h <= 0) {\n    return \"This triangle\
    \ has no area.\";\n  } else {\n    return a * h / 2;\n  }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a<=0 || h<=0){\n        return(\"error\")\n   \
    \ }else{\n        return(a*h/2)\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a == h && a == 0){\n        console.log(\"You must\
    \ enter a value to calculate area.\")\n    }\n    else{\n        return a * h\
    \ / 2;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n\
    \  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tvar area = (a * h) / 2;\n\treturn area;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    // TODO return area of a triangle;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = triangle_area;\n\
    \  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n\
    \  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n7.5\n    at test (/tmp/tmp06nuh0aq.js:11:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp06nuh0aq.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 7.5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if(a<=0||h<=0){\n        return \"not a triangle\"\
    ;\n    }\n    else{\n        return a*h/2;\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (1/2 * a * h);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    if (a <= 0 || h <= 0) {\n        return \"You can't\
    \ build a triangle.\";\n    } else {\n        return a * h / 2;\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 1/2 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif(a<=0 || h<=0){\n\t\treturn -1;\n\t}\n\treturn a*h/2;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 1/2 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var result = (a * h) / 2;\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return 0.5 * a * h;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\tif (a <= 0 || h <= 0){\n\t\treturn \"Wrong data\";\n\
    \t}\n\treturn a*h/2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    var result = (a * h) / 2;\n    return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = triangle_area;\n  assert.deepEqual(candidate(5, 3),7.5);\n  assert.deepEqual(candidate(2,\
    \ 2),2.0);\n  assert.deepEqual(candidate(10, 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n  return ((a * h) / 2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h) / 2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return a*h/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n    return (a * h)/2;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "//Given length of a side and high return area for a triangle.\nfunction\
    \ triangle_area(a, h){\n\treturn (a*h)/2;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(5,\
    \ 3),7.5);\n  assert.deepEqual(candidate(2, 2),2.0);\n  assert.deepEqual(candidate(10,\
    \ 8),40.0);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015

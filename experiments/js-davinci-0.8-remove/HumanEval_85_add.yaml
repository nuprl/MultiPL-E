name: HumanEval_85_add
language: js
prompt: "//Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n// Examples:\nfunction add(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = add;\n  assert.deepEqual(candidate([4, 88]),88);\n  assert.deepEqual(candidate([4,\
  \ 5, 6, 7, 2, 122]),122);\n  assert.deepEqual(candidate([4, 0, 6, 7]),0);\n  assert.deepEqual(candidate([4,\
  \ 4, 6, 8]),12);\n}\n\ntest();"
completions: ["    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n      \
    \  if(i % 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    let arr = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n      \
    \      arr.push(lst[i]);\n        }\n    }\n    return arr.reduce((a, b) => a\
    \ + b, 0);\n}", "    var evenSum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(i % 2 != 0 && lst[i] % 2 == 0){\n            evenSum += lst[i];\n\
    \        }\n    }\n    return evenSum;\n}", "    return lst.filter((_, i) => i\
    \ % 2).reduce((a, b) => a + b, 0);\n}\n", "  var sum = 0;\n  var i = 0;\n  while(i\
    \ < lst.length){\n    if (lst[i] % 2 == 0 && i % 2 == 1){\n      sum += lst[i];\n\
    \    }\n    i++;\n  }\n  return sum;\n}", "    var sum = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "  var sum = 0;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 ===\
    \ 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i] % 2\
    \ == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}", " \
    \   let ans = 0;\n    for(let i = 1; i < lst.length; i+=2){\n        if(lst[i]\
    \ % 2 === 0){\n            ans += lst[i];\n        }\n    }\n    return ans;\n\
    }\n", "    let lstEven = lst.filter(function(number){\n        return number %\
    \ 2 === 0;\n    });\n    let lstOdd = lstEven.filter(function(number, i){\n  \
    \      return i % 2 !== 0;\n    });\n    let sum = lstOdd.reduce(function(a, b){\n\
    \        return a + b;\n    });\n    return sum;\n}", "  var sum = 0;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 != 0 && lst[i] % 2 == 0){\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nadd([2,3,4,5,6]); //returns\
    \ 7\nadd([-1,0,1]); //returns 0\nadd([1,2,3,4,5,6,7,8,9,10]); //returns 20", " \
    \   let res = 0;\n    for(let i = 1; i < lst.length; i+=2){\n        if(lst[i]\
    \ % 2 === 0){\n            res += lst[i];\n        }\n    }\n    return res;\n\
    }", "  return lst.reduce((acc, current, index) => {\n    if (index % 2 == 1 &&\
    \ current % 2 == 0)\n      return acc + current;\n    return acc;\n  }, 0);\n\
    }\n", "  let newArr = [];\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0){\n      newArr.push(lst[i]);\n    }\n  }\n  return\
    \ newArr.reduce((a,b) => a + b);\n}\n", "    let counter = 0;\n    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i ++){\n        if(lst[i] % 2 === 0 && counter\
    \ % 2 !== 0){\n            sum += lst[i];\n        }\n        counter ++;\n  \
    \  }\n    return sum;\n}", "    if(lst.length == 0){\n        return 0;\n    }\n\
    \    let i = 0;\n    let sum = 0;\n    while(i < lst.length){\n        if(lst[i]\
    \ % 2 == 0 && i % 2 == 1){\n            sum += lst[i];\n        }\n        i++;\n\
    \    }\n    return sum;\n}", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    var sum = 0;\n    for(var i = 1;\
    \ i < lst.length; i += 2){\n        if(lst[i] % 2 === 0){\n            sum +=\
    \ lst[i];\n        }\n    }\n    return sum;\n}", "  return lst.filter((_,i)=>i%2!=0).filter(x=>x%2==0).reduce((a,b)=>a+b)\n\
    }\n", "    let arr =[];\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 != 0 && lst[i] % 2 == 0){\n            arr.push(lst[i]);\n        }\n  \
    \  }\n    return arr.reduce((a,b) => a + b);\n}", "  var sum = 0;\n  for(var i\
    \ = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n     \
    \ sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n \
    \           sum += lst[i];\n        }\n    }\n    return sum;\n}", "    var sum\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i]\
    \ % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}",
  "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(i % 2 != 0 && lst[i]\
    \ % 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "  return\
    \ lst.filter((value,index)=>index%2!==0&&value%2===0).reduce((a,b)=>a+b,0)\n}",
  "    let sum = 0;\n    for(i=0; i<lst.length; i++){\n        if(lst[i]%2==0 && i%2==1){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}", "    let result\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 1 && lst[i]\
    \ % 2 === 0){\n            result += lst[i];\n        }\n    }\n    return result;\n\
    }", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 == 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n", "    let res = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            res += lst[i];\n\
    \        }\n    }\n    return res;\n}\n", "  var result = 0;\n  for(var i = 0;\
    \ i < lst.length; i++){\n    if(i % 2 === 1 && lst[i] % 2 === 0){\n      result\
    \ += lst[i];\n    }\n  }\n  return result;\n}\n", "    var sum = 0;\n    var arr\
    \ = [];\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 == 0\
    \ && i % 2 == 1){\n            arr.push(lst[i]);\n        }\n    }\n    for(var\
    \ i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return sum;\n\
    }\n", "  return lst.reduce((a, e, i) => i % 2 && e % 2 == 0 ? a + e : a, 0);\n\
    }\n", "let sum =0;\nfor(let i=0; i<lst.length; i++){\n    if(lst[i]%2==0 && i%2!=0){\n\
    \        sum = sum + lst[i];\n    }\n}\nreturn sum;\n}\nlst = [2,2,2,2,2,2,2,1,1,1,1,1,1,1];",
  "    var result = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0){\n            result += lst[i];\n        }\n    }\n\
    \    return result;\n}", "    var result = 0;\n    for(var i = 0; i < lst.length;\
    \ i++) {\n        if (i % 2 != 0 && lst[i] % 2 == 0) {\n            result +=\
    \ lst[i];\n        }\n    }\n    return result;\n}\n", "    let y=0;\n    for(let\
    \ i=0;i<lst.length;i++){\n        if(i%2!==0 && lst[i]%2===0){\n            y+=lst[i];\n\
    \        }\n    }\n    return y;\n}", "    let result = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n      \
    \      result += lst[i];\n        }\n    }\n    return result;\n}\n", "   return\
    \ lst.reduce((acc,curr,i)=>{\n    return  i%2 ? acc+curr : acc; \n   },0)\n}",
  "  let total = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 ===\
    \ 0 && i % 2 !== 0){\n      total += lst[i];\n    }\n  }\n  return total;\n}",
  "    let newList = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0){\n            newList.push(lst[i])\n        }\n  \
    \  }\n    return newList.reduce((a, b) => a + b, 0)\n}\n", "  var total = 0;\n\
    \  var i = 1;\n  while(i < lst.length){\n    if(lst[i] % 2 === 0){\n      total\
    \ += lst[i];\n    }\n    i += 2;\n  }\n  return total;\n}", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 1 && lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}",
  "    var output = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2\
    \ !== 0 && lst[i] % 2 === 0){\n            output += lst[i];\n        }\n    }\n\
    \    return output;\n}", "   var temp = lst.filter(x => x % 2 === 0);\n   var\
    \ temp2 = temp.filter((_,i) => i % 2 === 1);\n   return temp2.reduce((a,b) =>\
    \ a + b, 0);\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(i % 2 != 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n   \
    \     }\n    }\n    return sum;\n}", "var sum=0;\nfor(var i=0;i<lst.length;i++){\n\
    if(i%2!=0 && lst[i]%2==0){\n    sum=sum+lst[i];\n    }\n}\nreturn sum;\n}", " \
    \   let newList = []\n    for(let i = 1; i < lst.length; i+=2){\n        if(lst[i]\
    \ % 2 === 0){\n            newList.push(lst[i])\n        }\n    }\n    let sum\
    \ = newList.reduce((a, b) => a + b, 0)\n    return sum\n}", "    if(lst.length\
    \ == 0){\n        return 0;\n    }\n    if(lst.length % 2 == 0){\n        lst.splice(lst.length/2,\
    \ 1);\n    }\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n   \
    \     if(i % 2 == 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n       \
    \ }\n    }\n    return sum;\n}", "    var sum = 0;\n    for(var i = 1; i < lst.length;\
    \ i+=2){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "return lst.reduce((a,b,i)=>i%2==1?a+b:a,0)\n\
    }", "    //Map out even nums\n    const even = lst.filter(val => {\n        return\
    \ val % 2 === 0;\n    });\n    //filter out evens at odd indices\n    const oddInd\
    \ = even.filter((val, i) => {\n        return i % 2 === 1;\n    });\n    //return\
    \ the sum of oddInd\n    return oddInd.reduce((a, b) => {\n        return a +\
    \ b;\n    });\n}", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(i % 2 == 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;\n}", "    let result = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n        \
    \    result += lst[i];\n        }\n    }\n    return result;\n}\n", "    let sum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }\n", "   return lst.filter((e, i) => (i % 2 === 1) && (e % 2 === 0)).reduce((acc,curr)\
    \ => acc + curr, 0);\n}", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(i % 2 != 0 && lst[i] % 2 == 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(i\
    \ % 2 === 1 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i = 1; i < lst.length; i+=2){\n \
    \       if(lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n\
    \    return sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i+=2){\n\
    \    if(lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n\
    }\n", "    if(lst === undefined || lst.length == 0){\n        return 0;\n    }\n\
    \    if(lst.length == 1){\n        return lst[0];\n    }\n    var result = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i] % 2\
    \ == 0){\n            result += lst[i];\n        }\n    }\n    return result;\n\
    }\n", "    \n    var addEven = 0;\n    for(i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ == 0 && i%2 == 1){\n            addEven += lst[i];\n        }\n    }\n    return\
    \ addEven;\n}\n", "  var arr = [];\n  for(var i = 0; i < lst.length; i++){\n \
    \   if(lst[i] % 2 === 0 && i % 2 !== 0){\n      arr.push(lst[i]);\n    }\n  }\n\
    \  return arr.reduce(function(a,b){\n    return a + b;\n  });\n}", "  var sum\
    \ = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] %\
    \ 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\nadd([1, 2, 3,\
    \ 4, 5]); // 2\nadd([-1, 2, -3, 4, -5]); // -2\nadd([1, 2, 3, 4, -5]); // 0\n\
    add([0, 2, 3, 4, -5]); // 2\nadd([1, 2, 3, 4, -5, -6]); // 0\nadd([5, 5, 5, 5,\
    \ 5]); // 0\nadd([1, 1, 1, 1, 1]); // 0\nadd([0, 0, 0, 0, 0]); // 0\nadd([-1,\
    \ -1, -1, -1, -1]); // 0\nadd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]); // 20\nadd([11,\
    \ 22, 33, 44, 55, 66, 77, 88, 99, 110]); // 110\nadd([0, 0, 1, 1, 0, 0, 1, 1,\
    \ 0, 0]); // 0\nadd([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]); // 0\nadd([-1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1]); // 0\nadd([-1, -1, -1, 1, 1, 1, -1, -1, -1, 1]); //\
    \ 0\nadd([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1, -1, -1, -1, -", "    return lst.reduce((acc, curr, index) => {\n   \
    \     if (index % 2 != 0 && curr % 2 == 0) acc += curr;\n        return acc;\n\
    \    }, 0);\n}", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n   \
    \ if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n  \
    \      if(i % 2 !== 0 && lst[i] % 2 === 0){\n           sum += lst[i];\n     \
    \   }\n    }\n    return sum;\n}\n", "  // happy coding!\n  let sum = 0;\n  for(let\
    \ i = 0; i < lst.length; i++) {\n    if(lst[i] % 2 === 0 && i % 2 !== 0) {\n \
    \     sum += lst[i];\n    }\n  }\n  return sum;\n}", "    let lst2 = [];\n   \
    \ for(let i = 0; i < lst.length; i++){\n        if (i % 2 !== 0 && lst[i] % 2\
    \ === 0){\n            lst2.push(lst[i]);\n        }\n    }\n    return lst2.reduce((a,b)\
    \ => a + b, 0);\n}", "    const result = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0 && i % 2 !== 0){\n            result.push(lst[i]);\n\
    \        }\n    }\n    return result;\n}", "    let result = 0;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n \
    \           result += lst[i];\n        }\n    }\n    return result;\n}\n", " \
    \   var evens = lst.filter(function(num,index){\n        return index % 2 ===\
    \ 1 && num % 2 === 0;\n    });\n    var sum = evens.reduce(function(acc,num){\n\
    \        return acc + num;\n    },0);\n    return sum;\n}", "    \n    let sum\
    \ = 0;\n    \n    for(let i = 0; i < lst.length; i++) {\n        if(lst[i] % 2\
    \ === 0 && i % 2 !== 0) {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "    var total = 0;\n    for(var i = 0; i < lst.length; i++) {\n \
    \       if (i % 2 != 0 && lst[i] % 2 == 0) {\n            total += lst[i];\n \
    \       }\n    }\n    return total;\n}\n", "  \n  let sum = 0;\n  for(let i =\
    \ 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum\
    \ += lst[i];\n    }\n  }\n  return sum;\n}", "    let output = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n\
    \            output += lst[i];\n        }\n    }\n    return output;\n}", "  \
    \  let result = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2\
    \ !== 0 && lst[i] % 2 === 0){\n            result += lst[i];\n        }\n    }\n\
    \    return result;\n}", "    let evens = lst.filter(i => i % 2 === 0)\n    let\
    \ odds = lst.filter(i => i % 2 !== 0)\n    let newArr = [];\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 !== 0){\n            newArr.push(evens.shift())\n\
    \        }else{\n            newArr.push(odds.shift())\n        }\n    }\n   \
    \ return newArr.reduce((a,b) => a + b)\n}\n", "    var sum = 0;\n    var i = 1;\n\
    \    while(i < lst.length){\n        if(lst[i] % 2 == 0){\n            sum +=\
    \ lst[i];\n        }\n        i += 2;\n    }\n    return sum;\n}\nvar lst = [3,\
    \ 8, 12, 5, 15, 21, 20, 24, 35];", "    let result = lst.filter((element, index)\
    \ => {\n        return element % 2 === 0 && index % 2 !== 0;\n    });\n    return\
    \ result.reduce((acc, curr) => {\n        return acc + curr;\n    });\n}", " \
    \   return lst.filter((element, index) => index % 2 == 1 && element % 2 == 0).reduce((acc,\
    \ val) => acc + val, 0);\n  }", " let addedOddNum = 0;\n for(let i = 1; i < lst.length;\
    \ i++){\n    if(i % 2 === 1 && lst[i] % 2 === 0){\n    addedOddNum += lst[i];\n\
    \   }\n }\n return addedOddNum;\n}", "    let counter = 0;\n    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0 && counter\
    \ % 2 === 1){\n            sum += lst[i];\n        }\n        counter++;\n   \
    \ }\n    return sum;\n}", "  return lst.reduce((tot,item,index)=>tot+((index%2\
    \ === 0 && item%2 === 1)?item:0),0)\n}", "    var sum = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if (i % 2 != 0 && lst[i] % 2 == 0){\n       \
    \     sum += lst[i];\n        }\n    }\n    return sum;\n}\n", "    let result\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i]\
    \ % 2 === 0){\n            result += lst[i];\n        }\n    }\n    return result;\n\
    }", "    let output = 0;\n    for(i=0; i<lst.length; i++){\n        if(lst[i]%2==0\
    \ && i%2 != 0){\n            output += lst[i];\n        }\n    }\n    return output;\n\
    }\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n   \
    \ }\n    return sum;\n}", "    let arr = []\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 === 0 && i % 2 !== 0){\n            arr.push(lst[i])\n\
    \        }\n    }\n    return arr.reduce((a,b) => a + b)\n}", "  let sum = 0;\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 ===\
    \ 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i] % 2\
    \ == 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !==\
    \ 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "    return lst.filter((a, b) => b % 2 != 0).filter(a => a % 2 ==\
    \ 0).reduce((a, b) => a + b, 0)\n}", "let sum = 0;\nfor(let i = 0; i < lst.length;\
    \ i++){\n  if(lst[i] % 2 === 0 && i % 2 !== 0){\n    sum += lst[i];\n  }\n}\n\
    return sum;\n}", "    return lst.reduce((acc,v,i)=>{\n        if(i%2!==0 && v%2===0){\n\
    \            return acc+=v;\n        }else{\n            return acc;\n       \
    \ }\n    },0)\n}\n", "    let newArr = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n            newArr.push(lst[i]);\n\
    \        }\n    }\n    return newArr.reduce((acc, cv) => acc + cv);\n}\n\nadd([1,3,4,4,4,7,8,8,8,9,9,9,9,9,9,9,9,9,10,11,12]);//\
    \ 20", "    let count =0;\n    for(let i=0; i<lst.length; i++){\n        if(lst[i]%2==0\
    \ && i%2!=0){\n            count+=lst[i];\n        }\n    }\n    return count;\n\
    }\n", "  let newArr = [];\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0){\n      newArr.push(lst[i]);\n    }\n  }\n  return\
    \ newArr.reduce((a, b) => a + b);\n}", "    let result = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n      \
    \      result += lst[i];\n        }\n    }\n    return result;\n}", "    let odd_even\
    \ = lst.filter((num,index) => index % 2 !== 0 && num % 2 === 0)\n    console.log(odd_even)\n\
    \    return odd_even.reduce((a, b) => a + b, 0)\n}\n", "  let output = [];\n \
    \ for(let i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n\
    \      output.push(lst[i]);\n    }\n  }\n  return output;\n}", "    let e = 0;\n\
    \    let odd = 0;\n    let even = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0){\n            e++;\n            if(e % 2 === 0){\n\
    \                even = even + lst[i];\n            }\n        }\n        else{\n\
    \            odd = odd + lst[i];\n        }\n    }\n    return odd + even;\n}",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !==\
    \ 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "    return lst.filter((x,i)=>i%2===1).reduce((a,b)=>a+b);\n}", " \
    \ lst.push(0);\n  for(var i = 0; i < lst.length; i++){\n    if(i % 2 == 1){\n\
    \      lst[lst.length - 1] += lst[i];\n    }\n  }\n  return lst[lst.length - 1];\n\
    }", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n", "    return lst.filter((el, i) => i % 2 !== 0 && el\
    \ % 2 === 0).reduce((a, b) => a + b, 0);\n}", "    // let odd = [];\n    // let\
    \ i = 1;\n    // let sum = 0;\n    // while(i < lst.length){\n    //     if(lst[i]\
    \ % 2 === 0){\n    //         odd.push(lst[i]);\n    //     }\n    //     i +=\
    \ 2;\n    // }\n    // for(let n of odd){\n    //     sum += n;\n    // }\n  \
    \  // return sum;\n    return lst.filter((val, ind) => ind % 2 === 1 && val %\
    \ 2 === 0).reduce((acc, val) => acc + val, 0);\n}\n", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}", "    var sum\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2 != 0 && lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }", "  return lst.filter((x, i) => i % 2 !== 0 && x % 2 === 0).reduce((x, y) =>\
    \ x + y, 0);\n}", "    var result = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0 && i % 2 === 1){\n            result += lst[i];\n\
    \        }\n    }\n    return result;\n}\n", "  let result = 0;\n  for(let i =\
    \ 0; i < lst.length; i++){\n    if(i % 2 === 1 && lst[i] % 2 === 0){\n      result\
    \ += lst[i];\n    }\n  }\n  return result;\n}", "    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n\
    \            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nlet nums\
    \ = [2,4,5,8,10,11,15];\nlet nums2 = [6,8,6,9,12,11,16];", "  return lst.filter((e,i)=>e%2==0&&i%2==1).reduce((a,b)=>a+b,0)\n\
    }", "  var final = [];\n  for(var i = 0; i < lst.length; i++){\n    if(i % 2 ===\
    \ 1 && lst[i] % 2 === 0){\n      final.push(lst[i]);\n    }\n  }\n  return final;\n\
    }", "  return lst.filter((x,i)=> i%2==1).reduce((a,b)=>a+b)\n}\nadd([0,1,2,3,4,5,6,7,8,9,10])//\
    \ 30\nadd([1,2,3,4,5,6,7,8,9,10])// 30\nadd([0,1,2,3,4,5,6,7,8,9])// 35\nadd([1,3,5,7,9])//\
    \ 25\nadd([0,2,4,6,8,10])// 30\nadd([0,2,4,6,8,9,10])// 35\nadd([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])//\
    \ 110\n", "  var result = 0;\n  for(var i = 0; i < lst.length; i++) {\n    if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0) {\n      result += lst[i];\n    }\n  }\n  return result;\n\
    }\nadd([11,4,1,6,8,10,15,12,20,7,14,17,19,23,9,25,26,33,21,28,29,31,3,2,5,30,32,27,35,34,24,13,22,18,16]);",
  "    let newArray = [];\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0 && i % 2 !== 0){\n            newArray.push(lst[i]);\n        }\n\
    \    }\n    return newArray.reduce((a, b) => a + b, 0);\n}\n", "    let result\
    \ = 0;\n    for(let i = 1; i < lst.length; i+=2){\n        if(lst[i] % 2 === 0){\n\
    \            result += lst[i];\n        }\n    }\n    return result;\n}\n", " \
    \  return lst.filter((n, i) => i % 2 === 1 && n % 2 === 0).reduce((total, next)\
    \ => total + next);\n}\n\nvar lst = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20];",
  "  var evens = lst.filter(function(num, index){\n    return (num % 2 === 0 && index\
    \ % 2 !== 0);\n  });\n  return evens.reduce(function(prev, curr){\n    return\
    \ prev + curr;\n  });\n}\n", "  return lst.filter((_, i) => i % 2 == 1).filter(num\
    \ => num % 2 == 0).reduce((a,b) => a + b, 0)\n}\n", "  var total = 0;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n   \
    \   total += lst[i];\n    }\n  }\n  return total;\n}", "  var result = 0;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n   \
    \   result += lst[i];\n    }\n  }\n  return result;\n}\n", "  var total = 0;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 ===\
    \ 0){\n      total += lst[i];\n    }\n  }\n  return total;\n}", "    let sum =\
    \ 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !== 0 && lst[i]\
    \ % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n\
    }", "  let total = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] %\
    \ 2 === 0 && i % 2 !== 0){\n      total += lst[i];\n    }\n  }\n  return total;\n\
    }\n", "   return lst.filter((el,i)=>i%2===1).reduce((a,b)=>a+b,0)\n}\n", "   \
    \ let nums = [];\n    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0 && i % 2 !== 0){\n            nums.push(lst[i]);\n\
    \        }\n    }\n    for(let i = 0; i < nums.length; i++){\n        sum += nums[i];\n\
    \    }\n    return sum;\n}\n", "  let arr = [];\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(lst[i] % 2 === 0 && i % 2 === 1){\n      arr.push(lst[i]);\n \
    \   }\n  }\n  return arr.reduce((a, b) => a + b, 0);\n}", "    let count = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 0 && i %\
    \ 2 !== 0){\n            count += lst[i];\n        }\n    }\n    return count;\n\
    }\n", "    let even = lst.filter(x => x % 2 === 0);\n    let odd = lst.filter(x\
    \ => x % 2 !== 0);\n    return even.reduce((a, b) => a + b, 0) + odd.reduce((a,\
    \ b) => a + b, 0);\n}\n", "  let i = 0;\n  let sum = 0;\n  while(i < lst.length){\n\
    \    if(lst[i] % 2 === 0 && i % 2 !== 0){\n      sum += lst[i];\n    }\n    i++;\n\
    \  }\n  return sum;\n}", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;\n}", "    var total = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(i % 2 !== 0 && lst[i] % 2 === 0){\n            total += lst[i];\n\
    \        }\n    }\n    return total;\n}", "    let sum = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 != 0 && lst[i] % 2 === 0){\n       \
    \     sum += lst[i];\n        }\n    }\n    return sum;\n}", "  var sum = 0;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(i % 2 !== 0 && lst[i] % 2 ===\
    \ 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n\nadd([1,2,4,5]);",
  "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if (i % 2 !=\
    \ 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "  let sum = 0;\n  for(let i = 0; i < lst.length; i+=2){\n    if(lst[i]\
    \ % 2 === 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}\n", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 != 0 &&\
    \ lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "    let total = 0;\n    for(let i = 0; i < lst.length; i++) {\n \
    \       if(i % 2 == 1 && lst[i] % 2 == 0) {\n            total += lst[i];\n  \
    \      }\n    }\n    return total;\n}", "  let added = 0;\n  for(let i = 0; i\
    \ < lst.length; i++){\n    if(lst[i] % 2 === 0 && i % 2 !== 0){\n      added +=\
    \ lst[i];\n    }\n  }\n  return added;\n}\n\nadd([1,2,3,4,5,6]);\n", "    \n \
    \   let sum=0;\n    \n     for(let i=0;i<lst.length;i++){\n         if((lst[i]%2)===0\
    \ && i%2===1){\n            sum=sum+lst[i];\n         }\n     }\n     return sum;\n\
    \   }", "    let result = 0;\n    for(let i = 0; i < lst.length; i++){\n     \
    \   if(i % 2 != 0 && lst[i] % 2 == 0){\n            result += lst[i];\n      \
    \  }\n    }\n    return result;\n}", "  const result = lst.filter((num, index)\
    \ => {\n    return index % 2 !== 0 && num % 2 === 0;\n  });\n  return result.reduce((acc,\
    \ curr) => acc + curr);\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 === 1 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}", "    var even = 0;\n    for(var i = 0; i < lst.length;\
    \ i++) {\n        if(lst[i] % 2 === 0 && i % 2 === 1) {\n            even += lst[i];\n\
    \        }\n    }\n    return even;\n}", "  let even = [];\n  let odd = [];\n\
    \  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0){\n      even.push(lst[i]);\n\
    \    } else {\n      odd.push(lst[i]);\n    }\n  }\n  let result = even.reduce((acc,\
    \ num) => acc + num, 0);\n  let result2 = odd.reduce((acc, num) => acc + num,\
    \ 0);\n  return result + result2;\n}\nadd([1,2,3,4,5,6,7,8,9]); // 17\nadd([5,4,6,9,1,8,8,10,12]);\
    \ // 52\nadd([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]); // 115\n",
  "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(i % 2 ==\
    \ 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let list = lst.filter((x,i) => x % 2 === 0 && i % 2 === 1).reduce((acc,curr)\
    \ => acc + curr);\n    console.log(list);\n  }\n  \n  add([1,2,3,4,5]); //6\n\
    \  add([0,1,2,3,4,5]); //6\n  add([1,2,2,4,5]); //6", "  let arr = [];\n  for(let\
    \ i = 1; i < lst.length; i+=2){\n    if(lst[i] % 2 === 0){\n      arr.push(lst[i]);\n\
    \    }\n  }\n  if(arr.length === 0){\n    return 0;\n  }\n  return arr.reduce((a,\
    \ b) => a + b);\n}\n", "   let sum = 0;\n   for(let i = 1; i < lst.length; i+=2){\n\
    \       if(lst[i] % 2 === 0){\n           sum += lst[i];\n       }\n   }\n   return\
    \ sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n      \
    \  }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i <\
    \ lst.length; i+= 2){\n        if(lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n      \
    \      sum += lst[i];\n        }\n    }\n    return sum;\n}\n\nlet result = add([1,2,3,4,5,6,7,8,9,10]);",
  "    let even = []\n    for(let i = 0; i < lst.length; i+=2){\n        if(lst[i]\
    \ % 2 === 0){\n            even.push(lst[i])\n        }\n    }\n    console.log(even)\n\
    \    let sum = 0\n    for(let i = 0; i < even.length; i++){\n        sum += even[i]\n\
    \    }\n    return sum\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 == 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "  if(lst.length===0){\n    return 0;\n\
    \  }\n  let sum=0;\n  for(let i=0;i<lst.length;i++){\n    if(i%2===1&&lst[i]%2===0){\n\
    \      sum+=lst[i];\n    }\n  }\n  return sum;\n}", "    return lst.filter((e,i)=>i%2!=0).filter(e=>e%2==0).reduce((a,b)=>a+b)\n\
    }", "\tlet out = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(i % 2 == 1\
    \ && lst[i] % 2 == 0){\n\t\t\tout += lst[i];\n\t\t}\n\t}\n\treturn out;\n}", " \
    \   return lst.filter((_,i)=>i%2).reduce((x,y)=>x+y,0)\n}", "  return lst.filter((x,i)=>i%2!=0).reduce((a,b)=>a+b);\n\
    }", "    let total = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i\
    \ % 2 !== 0 && lst[i] % 2 === 0){\n            total += lst[i];\n        }\n \
    \   }\n    return total;\n}", "  let answer = 0;\n  let currNum = 0;\n  let currIndex\
    \ = 0;\n  for(var i = 0; i < lst.length; i++){\n    currNum = lst[i];\n    currIndex\
    \ = i + 1;\n    if(currNum % 2 === 0 && currIndex % 2 !== 0){\n      answer +=\
    \ currNum;\n    }\n  }\n  return answer;\n}\n\nadd([1,2,3,4,5,6,7,8,9,10])", " \
    \   let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 !=\
    \ 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n  \
    \      if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;\n}", "  var evens = lst.filter(function(num,index){\n\
    \    return (num % 2 === 0 && index % 2 === 1);\n  });\n  return evens.reduce(function(acc,curr){\n\
    \    return acc + curr;\n  },0);\n}\nadd([1,2,3,4,5,6]); // 9\nadd([1,2,3,4,5,6,7,8,9]);\
    \ // 20\nadd([-1,2,-3,4,-5,6]); // 2\nadd([-1,2,-3,4,-5,6,7,8,9]); // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0]);\
    \ // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0]); // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0,0]);\
    \ // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0,0,0]); // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0,0,0,0]);\
    \ // 22\nadd([1,2,3,4,5,6,7,8,9,0,0,0,0,0,1]); // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0,0,0,0,0]);\
    \ // 22\nadd([-1,2,-3,4,-5,6,7,8,9,0,0,0,0,0,0,0]); // 22\nadd([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
  "  let sum = 0;\n  for(let i = 0; i < lst.length; i+=2){\n    if(lst[i] % 2 ===\
    \ 0){\n      sum += lst[i];\n    }\n  }\n  return sum;\n}", "    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 1 && lst[i] %\
    \ 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return sum;\n}",
  "    \n    return lst.filter((e,i)=>i%2!==0 && e%2===0).reduce((a,b)=>a+b,0)\n}",
  "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if (i % 2 !=\
    \ 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n  \
    \      if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n    \
    \    }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n        \
    \    sum += lst[i];\n        }\n    }\n    return sum;\n}", "    return lst.reduce((sum,n,index)=>{\n\
    \        if(index%2!==0 && n%2===0){\n            return sum+n\n        }\n  \
    \      return sum\n    },0)\n}\n", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 != 0 && lst[i] % 2 == 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    // your code here\n    \n  }\nTest.assertEquals(add([2,2,2,2,2,2,6,8,10]),\
    \ 20)\nTest.assertEquals(add([-8, -10, -12, -14, 0, 14, 12, 10, 8]), -20)", " \
    \   let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 ===\
    \ 1 && lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    let result = 0;\n    for(let i = 0; i < lst.length; i++){\n\
    \        if(i % 2 !== 0 && lst[i] % 2 === 0){\n            result += lst[i];\n\
    \        }\n    }\n    return result;\n}", "  return lst.filter((e,i)=>i%2==1).reduce((a,b)=>a+b);\n\
    }\nadd([1,2,3,4]); //2\nadd([4,4,4,4,4]); //8\nadd([0,0,0,0,1]); //0", "    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 != 0 &&\
    \ lst[i] % 2 === 0){\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n    \
    \    if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n      \
    \  }\n    }\n    return sum;\n}", "    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++) {\n        if(i % 2 === 1 && lst[i] % 2 === 0) {\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "  var arr = [];\n  var sum = 0;\n  for(var\
    \ i = 0; i < lst.length; i++){\n    if(lst[i] % 2 === 0 && i % 2 !== 0){\n   \
    \   arr.push(lst[i]);\n    }\n  }\n  for(var j = 0; j < arr.length; j++){\n  \
    \  sum += arr[j];\n  }\n  return sum;\n}\nadd([1,2,3,4]);", "  var res = 0;\n\
    \  for(var i = 0; i < lst.length; i++) {\n    if(i % 2 != 0 && lst[i] % 2 == 0)\
    \ {\n      res += lst[i];\n    }\n  }\n  return res;\n}", "    return lst.filter((e,\
    \ index) => (index % 2 !== 0) && (e % 2 === 0)).reduce((e1, e2) => e1 + e2);\n\
    }", "    // let evenSum = 0;\n    // let oddSum = 0;\n    let i = 0;\n    let\
    \ res = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(i % 2 === 0 &&\
    \ lst[i] % 2 === 0){\n            res += lst[i];\n        }\n    }\n    return\
    \ res;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n  \
    \      if (i % 2 == 1 && lst[i] % 2 == 0){\n            sum += lst[i];\n     \
    \   }\n    }\n    return sum;\n}\n", "  var sum = 0;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n\
    \  }\n  return sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(i % 2 !== 0 && lst[i] % 2 === 0){\n            sum += lst[i];\n\
    \        }\n    }\n    return sum;\n}", "    // let result = lst.filter((val,index)=>{\n\
    \    //     return index % 2 !== 0\n    // })\n    // let sum = 0;\n    // result.forEach(elem=>{\n\
    \    //     if(elem % 2 === 0){\n    //         sum += elem\n    //     }\n  \
    \  // })\n    // return sum;\n    return lst.filter((val,index)=>index % 2 !==\
    \ 0 && val % 2 === 0).reduce((acc,curr)=>acc+curr)\n}\n", "    var sum = 0;\n\
    \    for(var i = 1; i < lst.length; i+=2){\n        if(lst[i] % 2 === 0){\n  \
    \          sum += lst[i];\n        }\n    }\n    return sum;\n}", "    return\
    \ lst.filter((x,i)=>i%2===1&&x%2===0).reduce((x,y)=>x+y)\n  }\n  \n  // console.log(add([0,1,2,3,4,5]))\
    \ //6\n  // console.log(add([1,2,3,4,5])) //2\n  // console.log(add([6,10,12,16,18]))\
    \ //24\n  \n  \n  // 23. Simple Fun #225: Reverse Letter\n  //Given a string str,\
    \ reverse it omitting all non-alphabetic characters.\n  // Examples:\n  function\
    \ reverseLetter(str){\n    return str.split('').filter(x=>x.match(/[a-z]/i)).reverse().join('')\n\
    \  }\n  \n  // console.log(reverseLetter(\"krishan\")) //\"nahsirk\"\n  // console.log(reverseLetter(\"\
    ultr53o?n\")) //\"nortlu\"\n  // console.log(reverseLetter(\"ab23c\")) //\"cba\"\
    \n  // console.log(reverseLetter(\"krish21an\")) //\"nahsirk\"\n  \n  \n  // 24.\
    \ Simple Fun #226: Array Previous Less\n  //Given array of integers, for each\
    \ position i, search among the previous positions for the last (from the left)\
    \ position that contains a smaller value. Store this value at position i in the\
    \ answer. If no such value can be found, store -1 instead.\n  // Examples:\n \
    \ function prevLess(a){\n    return a.map((x,i)=>(i===0)?-1:a.slice(0,i).slice(-1)[0]||-1)\n\
    \  }\n  \n  // console.log(prevLess([3,5,2,4,5])) // [-1,3,-1,2,4]\n  // console.log(prevLess([-1,-2,-3,-4,-5]))\
    \ // [-1,-1,-1,-1,-1]\n  // console.log(prevLess([3,5,2,4,5])) // [-1,3,-1,2,4]\n\
    \  // console.", "    let sum = 0;\n    let count = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(i % 2 === 1 && lst[i] % 2 === 0){\n          \
    \  sum += lst[i];\n            count++;\n        }\n    }\n    return count ===\
    \ 0 ? 0 : sum;\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(lst[i] % 2 === 0 && i % 2 !== 0){\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;\n}", "    return lst.reduce((sum,x,i)=> sum + x%2 === 1 && i%2\
    \ === 0 ? x : 0,0)\n}\n", "  let sum = 0;\n  for(let i = 0; i < lst.length; i++){\n\
    \    if(i % 2 !== 0 && lst[i] % 2 === 0){\n      sum += lst[i];\n    }\n  }\n\
    \  return sum;\n}", "  const lst2 = lst.filter((num, i) => num % 2 === 0 && i\
    \ % 2 !== 0);\n  return lst2.reduce((num, prev) => prev + num, 0);\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

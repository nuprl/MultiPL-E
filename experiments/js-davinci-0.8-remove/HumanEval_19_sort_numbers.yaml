name: HumanEval_19_sort_numbers
language: js
prompt: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\nfunction sort_numbers(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
  three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
  \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
  ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
  \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
completions: ["    return numbers.split(' ').sort(function(a, b){\n        return\
    \ convertNum(a) - convertNum(b);\n    }).join(' ');\n}\n", "    var num_map =\
    \ {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_array = numbers.split('\
    \ ');\n    var num_array_sort = num_array.sort(function(a, b){\n        return\
    \ num_map[a] - num_map[b];\n    });\n    return num_array_sort.join(' ');\n}\n",
  "  var map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n \
    \ };\n  var result = numbers.split(' ');\n  result.sort(function(a, b){\n    if(map[a]\
    \ > map[b]){\n      return 1;\n    } else if(map[a] < map[b]){\n      return -1;\n\
    \    } else {\n      return 0;\n    }\n  });\n  return result.join(' ');\n}\n",
  "    var nums = numbers.split(' ');\n    var stringArr = [];\n    var sortedArr\
    \ = [];\n    var sortedNumbers = '';\n    var numbersObj = {\n        zero: 0,\n\
    \        one: 1,\n        two: 2,\n        three: 3,\n        four: 4,\n     \
    \   five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n        nine:\
    \ 9\n    };\n    for (var i = 0; i < nums.length; i++) {\n        stringArr.push(numbersObj[nums[i]]);\n\
    \    }\n    sortedArr = stringArr.sort(function(a, b){return a-b});\n    for (var\
    \ x = 0; x < sortedArr.length; x++) {\n        for (var key in numbersObj) {\n\
    \            if (numbersObj[key] === sortedArr[x]) {\n                sortedNumbers\
    \ += key + ' ';\n            }\n        }\n    }\n    return sortedNumbers.slice(0,\
    \ -1);\n}\n", "    numbers = numbers.split(' ');\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        numbers[i] = numberals[numbers[i]];\n    }\n    numbers.sort(function(a,\
    \ b){return a - b});\n    for(var i = 0; i < numbers.length; i++){\n        numbers[i]\
    \ = numberals_array[numbers[i]];\n    }\n    return numbers.join(' ');\n}", " \
    \ numbers = numbers.split(' ');\n  var numbersLength = numbers.length;\n  var\
    \ sortedNumbers = [];\n  var smallestNumber = 0;\n  var nextSmallestNumber = 0;\n\
    \  var nextSmallestNumberIndex = 0;\n  var numberValue = 0;\n  var nextNumberValue\
    \ = 0;\n  for (var i = 0; i < numbersLength; i++) {\n    smallestNumber = 0;\n\
    \    for (var j = 0; j < numbers.length; j++) {\n      numberValue = numberToInteger(numbers[j]);\n\
    \      if (j < numbers.length - 1) {\n        nextNumberValue = numberToInteger(numbers[j\
    \ + 1]);\n      }\n      if (numberValue < nextNumberValue) {\n        smallestNumber\
    \ = numberValue;\n        nextSmallestNumber = nextNumberValue;\n        nextSmallestNumberIndex\
    \ = j + 1;\n      } else {\n        smallestNumber = nextNumberValue;\n      \
    \  nextSmallestNumber = numberValue;\n        nextSmallestNumberIndex = j;\n \
    \     }\n    }\n    sortedNumbers.push(integerToNumber(smallestNumber));\n   \
    \ numbers.splice(nextSmallestNumberIndex, 1);\n  }\n  return sortedNumbers.join('\
    \ ');\n}\n", "  var dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  var result = [];\n  numbers = numbers.split('\
    \ ');\n  for(var i = 0; i < numbers.length; i++){\n    result.push(dict[numbers[i]]);\n\
    \  }\n  result.sort(function(a,b){return a-b});\n  for(var i = 0; i < result.length;\
    \ i++){\n    var num = result[i];\n    for(var key in dict){\n      if(dict[key]\
    \ == num){\n        result[i] = key;\n      }\n    }\n  }\n  return result.join('\
    \ ');\n}\n", "  var zero = ['z', 'e', 'r', 'o'];\n  var one = ['o', 'n', 'e'];\n\
    \  var two = ['t', 'w', 'o'];\n  var three = ['t', 'h', 'r', 'e', 'e'];\n  var\
    \ four = ['f', 'o', 'u', 'r'];\n  var five = ['f', 'i', 'v', 'e'];\n  var six\
    \ = ['s', 'i', 'x'];\n  var seven = ['s', 'e', 'v', 'e', 'n'];\n  var eight =\
    \ ['e', 'i', 'g', 'h', 't'];\n  var nine = ['n', 'i', 'n', 'e'];\n  var answer\
    \ = numbers.split(' ');\n  var temp = [];\n  for(var i = 0; i < answer.length;\
    \ i++){\n    var current = answer[i];\n    var current_count = 0;\n    for(var\
    \ j = 0; j < answer[i].length; j++){\n      var letter = answer[i][j];\n     \
    \ if(zero.indexOf(letter) !== -1){\n        current_count += zero.indexOf(letter);\n\
    \      }\n      if(one.indexOf(letter) !== -1){\n        current_count += one.indexOf(letter);\n\
    \      }\n      if(two.indexOf(letter) !== -1){\n        current_count += two.indexOf(letter);\n\
    \      }\n      if(three.indexOf(letter) !== -1){\n        current_count += three.indexOf(letter);\n\
    \      }\n      if(four.indexOf(letter) !== -1){\n        current_count += four.indexOf(letter);\n\
    \      }\n      if(five.indexOf(letter) !== -1){\n        current_count += five.indexOf(letter);\n\
    \      }\n      if(six.indexOf(letter) !== -1){\n        current_count += six.indexOf(letter);\n\
    \      }\n      if(seven.indexOf(letter) !== -1){\n        current_count += seven.",
  "  const numbers_map = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three':\
    \ 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight':\
    \ 8,\n    'nine': 9\n  };\n  const numbers_array = numbers.split(' ');\n  numbers_array.sort((a,\
    \ b) => numbers_map[a] - numbers_map[b]);\n  return numbers_array.join(' ');\n\
    }\n", "\tvar nums = numbers.split(' ');\n\tnums.sort(function(a,b){return numeral_to_int(a)\
    \ - numeral_to_int(b)});\n\tvar sort_str = '';\n\tfor(var i=0; i<nums.length;\
    \ i++){\n\t\tsort_str += nums[i] + ' ';\n\t}\n\treturn sort_str.slice(0, sort_str.length-1);\n\
    }\n", "\tvar nums = numbers.split(' ');\n\tvar numObj = {zero: 0, one: 1, two:\
    \ 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9};\n\treturn\
    \ nums.sort(function(a, b){\n\t\treturn numObj[a] - numObj[b];\n\t}).join(' ');\n\
    }\n\n", "\treturn numbers.split(' ').sort(function(a,b){return NUMERALS.indexOf(a)\
    \ - NUMERALS.indexOf(b)}).join(' ');\n}\n\n", "  // turn string into an array\n\
    \  // sort the array\n  // compare each element to a condition and return their\
    \ number if so\n  // join the sorted array\n  // return sorted array\n  let sorted\
    \ = numbers.split(' ').sort(function(a, b){\n    if (a == 'zero') { return -1\
    \ }\n    if (b == 'zero') { return 1 }\n    if (a == 'one') { return -1 }\n  \
    \  if (b == 'one') { return 1 }\n    if (a == 'two') { return -1 }\n    if (b\
    \ == 'two') { return 1 }\n    if (a == 'three') { return -1 }\n    if (b == 'three')\
    \ { return 1 }\n    if (a == 'four') { return -1 }\n    if (b == 'four') { return\
    \ 1 }\n    if (a == 'five') { return -1 }\n    if (b == 'five') { return 1 }\n\
    \    if (a == 'six') { return -1 }\n    if (b == 'six') { return 1 }\n    if (a\
    \ == 'seven') { return -1 }\n    if (b == 'seven') { return 1 }\n    if (a ==\
    \ 'eight') { return -1 }\n    if (b == 'eight') { return 1 }\n    if (a == 'nine')\
    \ { return -1 }\n    if (b == 'nine') { return 1 }\n  })\n  return sorted.join('\
    \ ')\n}\n\n", "    let nums = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    let numbersArr = numbers.split(\"\
    \ \");\n    let result = [];\n    for(let i = 0; i < numbersArr.length; i++){\n\
    \        for(let j = 0; j < nums.length; j++){\n            if(numbersArr[i] ===\
    \ nums[j]){\n                result.push(j);\n            }\n        }\n    }\n\
    \    for(let i = 0; i < result.length; i++){\n        for(let j = i + 1; j < result.length;\
    \ j++){\n            if(result[i] > result[j]){\n                let temp = result[i];\n\
    \                result[i] = result[j];\n                result[j] = temp;\n \
    \           }\n        }\n    }\n    let answer = [];\n    for(let i = 0; i <\
    \ result.length; i++){\n        answer.push(nums[result[i]]);\n    }\n    return\
    \ answer.join(\" \");\n}\n", "  var numeralMap = {'zero': 0, 'one': 1, 'two':\
    \ 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine':\
    \ 9};\n  var numeralArr = numbers.split(' ');\n  var numericArr = numeralArr.map(function(val){\n\
    \    return numeralMap[val];\n  });\n  numericArr.sort(function(a, b){\n    return\
    \ a - b;\n  });\n  return numericArr.map(function(val){\n    for(var numeral in\
    \ numeralMap){\n      if(numeralMap[numeral] === val){\n        return numeral;\n\
    \      }\n    }\n  }).join(' ');\n}\n", "  const nums = {\n    'zero': 0,\n  \
    \  'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  }\n  return\
    \ numbers.split(' ').sort((a, b) => nums[a] - nums[b]).join(' ')\n}\n", "  let\
    \ nums = numbers.split(' ');\n  let numsInt = [];\n  for (let i = 0; i < nums.length;\
    \ i++) {\n    switch (nums[i]) {\n      case 'zero':\n        numsInt.push(0);\n\
    \        break;\n      case 'one':\n        numsInt.push(1);\n        break;\n\
    \      case 'two':\n        numsInt.push(2);\n        break;\n      case 'three':\n\
    \        numsInt.push(3);\n        break;\n      case 'four':\n        numsInt.push(4);\n\
    \        break;\n      case 'five':\n        numsInt.push(5);\n        break;\n\
    \      case 'six':\n        numsInt.push(6);\n        break;\n      case 'seven':\n\
    \        numsInt.push(7);\n        break;\n      case 'eight':\n        numsInt.push(8);\n\
    \        break;\n      case 'nine':\n        numsInt.push(9);\n        break;\n\
    \    }\n  }\n  numsInt.sort((a, b) => a - b);\n  for (let i = 0; i < numsInt.length;\
    \ i++) {\n    switch (numsInt[i]) {\n      case 0:\n        numsInt[i] = 'zero';\n\
    \        break;\n      case 1:\n        numsInt[i] = 'one';\n        break;\n\
    \      case 2:\n        numsInt[i] = 'two';\n        break;\n      case 3:\n \
    \       numsInt[i] = 'three';\n        break;\n      case 4:\n        numsInt[i]\
    \ = 'four';\n        break;\n      case 5:\n        numsInt[i] = 'five';\n   \
    \     break;\n      case 6:\n        numsInt[i] = 'six';\n        break;\n   \
    \   case 7:\n        numsInt[i] = 'seven';\n        break;\n      case 8:\n  \
    \      numsInt[i] = 'eight';\n        break;\n      case 9:\n        numsInt[i]\
    \ = 'nine';\n        break", "    const numbers_list = ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n    numbers = numbers.split('\
    \ ');\n    numbers.sort((a, b) => {\n        if (numbers_list.indexOf(a) < numbers_list.indexOf(b))\
    \ {\n            return -1;\n        }\n        else if (numbers_list.indexOf(a)\
    \ > numbers_list.indexOf(b)) {\n            return 1;\n        }\n        else\
    \ {\n            return 0;\n        }\n    });\n    return numbers.join(' ');\n\
    }\n", "  var numString = numbers.split(\" \");\n  var numArray = numString.map(function(element){\n\
    \    return numObject[element];\n  });\n  numArray.sort(function(a,b){\n    return\
    \ a-b;\n  });\n  var sortedString = numArray.map(function(element){\n    for(var\
    \ key in numObject){\n      if(numObject[key] === element){\n        return key;\n\
    \      }\n    }\n  });\n  return sortedString.join(\" \");\n}\n", "  //Your code\
    \ here\n  var numbers = numbers.split(\" \");\n  var sortArr = [];\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    if(numbers[i] == \"zero\") sortArr.push(0);\n\
    \    if(numbers[i] == \"one\") sortArr.push(1);\n    if(numbers[i] == \"two\"\
    ) sortArr.push(2);\n    if(numbers[i] == \"three\") sortArr.push(3);\n    if(numbers[i]\
    \ == \"four\") sortArr.push(4);\n    if(numbers[i] == \"five\") sortArr.push(5);\n\
    \    if(numbers[i] == \"six\") sortArr.push(6);\n    if(numbers[i] == \"seven\"\
    ) sortArr.push(7);\n    if(numbers[i] == \"eight\") sortArr.push(8);\n    if(numbers[i]\
    \ == \"nine\") sortArr.push(9);\n  }\n  sortArr.sort(function(a,b){\n    return\
    \ a - b;\n  });\n  var solution = \"\";\n  for(var j = 0; j < sortArr.length;\
    \ j++){\n    if(sortArr[j] == 0) solution += \"zero \";\n    if(sortArr[j] ==\
    \ 1) solution += \"one \";\n    if(sortArr[j] == 2) solution += \"two \";\n  \
    \  if(sortArr[j] == 3) solution += \"three \";\n    if(sortArr[j] == 4) solution\
    \ += \"four \";\n    if(sortArr[j] == 5) solution += \"five \";\n    if(sortArr[j]\
    \ == 6) solution += \"six \";\n    if(sortArr[j] == 7) solution += \"seven \"\
    ;\n    if(sortArr[j] == 8) solution += \"eight \";\n    if(sortArr[j] == 9) solution\
    \ += \"nine \";\n  }\n  return solution.trim();\n}\n\n", "  let numberalObject\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  }\n  return numbers.split(' ').sort((a, b) => {\n    return numberalObject[a]\
    \ - numberalObject[b];\n  }).join(' ');\n}\n\n", "    let nums = numbers.split('\
    \ ');\n    return nums.sort((a,b) => {\n        return get_number(a) - get_number(b);\n\
    \    }).join(' ');\n}\n", "    let num_list = numbers.split(' ');\n    let nums\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    let sorted = num_list.sort((a,b) => {return nums[a]\
    \ - nums[b]});\n    return sorted.join(' ');\n}\n", "    var numbers_arr = numbers.split('\
    \ ');\n    var numbers_obj = {\n        'zero': 0,\n        'one': 1,\n      \
    \  'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n  \
    \      'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    var result = [];\n    for (var i = 0; i < numbers_arr.length; i++)\
    \ {\n        result.push(numbers_obj[numbers_arr[i]]);\n    }\n    result.sort(function(a,\
    \ b){return a - b});\n    for (var i = 0; i < result.length; i++) {\n        for\
    \ (var prop in numbers_obj) {\n            if (numbers_obj[prop] === result[i])\
    \ {\n                result[i] = prop;\n            }\n        }\n    }\n    return\
    \ result.join(' ');\n}\n", "    // Write your solution here\n    const dictionary\
    \ = {\n        'zero':0,\n        'one':1,\n        'two':2,\n        'three':3,\n\
    \        'four':4,\n        'five':5,\n        'six':6,\n        'seven':7,\n\
    \        'eight':8,\n        'nine':9\n    }\n    const numsArr = numbers.split('\
    \ ');\n    const numsArrArr = numsArr.map(item => dictionary[item]);\n    numsArrArr.sort((a,b)\
    \ => a-b);\n    return numsArrArr.join(' ');\n}\n", "  return numbers.split('\
    \ ').sort(function(a, b){\n    return parseInt(numberals[a]) > parseInt(numberals[b]);\n\
    \  }).join(' ');\n}\n", "    var nums = numbers.split(' ');\n    var sorted =\
    \ nums.sort((a,b) => numValues[a] - numValues[b]);\n    return sorted.join(' ');\n\
    }\n", "  var numObject = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n   \
    \ 'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n\
    \    'eight': 8,\n    'nine': 9\n  };\n  var numList = numbers.split(' ');\n \
    \ var sortedNums = numList.sort(function(a, b){\n    return numObject[a] - numObject[b];\n\
    \  });\n  var result = sortedNums.join(' ');\n  return result;\n}\n", "\tvar index\
    \ = {\n\t\t'zero': 0,\n\t\t'one': 1,\n\t\t'two': 2,\n\t\t'three': 3,\n\t\t'four':\
    \ 4,\n\t\t'five': 5,\n\t\t'six': 6,\n\t\t'seven': 7,\n\t\t'eight': 8,\n\t\t'nine':\
    \ 9\n\t};\n\tvar res = numbers.split(' ').sort(function(a, b){\n\t\treturn index[a]\
    \ - index[b];\n\t});\n\treturn res.join(' ');\n}\n", "  var numHash = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  return numbers.split('\
    \ ').sort(function(a, b){\n    return numHash[a] - numHash[b];\n  }).join(' ');\n\
    }", "  let numArr = numbers.split(' ');\n  let numObject = {\n    'zero': 0,\n\
    \    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  let result\
    \ = numArr.map(x => numObject[x]).sort(function(a, b){return a-b}).map(x => Object.keys(numObject).find(key\
    \ => numObject[key] === x));\n  return result.join(' ');\n}", "  let obj = {zero:0,\
    \ one:1, two:2, three:3, four:4, five:5, six:6, seven:7, eight:8, nine:9};\n \
    \ let arr = numbers.split(' ');\n  let num = arr.map(function(num){\n    return\
    \ obj[num];\n  });\n  num.sort((a,b) => a-b);\n  return num.map(function(x){\n\
    \    for(let prop in obj){\n      if(obj[prop] === x){\n        return prop;\n\
    \      }\n    }\n  }).join(' ');\n}\n", "  let numbers_array = numbers.split('\
    \ ');\n  numbers_array.sort((a, b) => {\n    switch(a){\n      case 'zero':\n\
    \        return -1;\n      case 'one':\n        return (b==='zero' ? 1 : -1);\n\
    \      case 'two':\n        return (b==='zero' || b==='one' ? 1 : -1);\n     \
    \ case 'three':\n        return (b==='zero' || b==='one' || b==='two' ? 1 : -1);\n\
    \      case 'four':\n        return (b==='zero' || b==='one' || b==='two' || b==='three'\
    \ ? 1 : -1);\n      case 'five':\n        return (b==='zero' || b==='one' || b==='two'\
    \ || b==='three' || b==='four' ? 1 : -1);\n      case 'six':\n        return (b==='zero'\
    \ || b==='one' || b==='two' || b==='three' || b==='four' || b==='five' ? 1 : -1);\n\
    \      case 'seven':\n        return (b==='zero' || b==='one' || b==='two' ||\
    \ b==='three' || b==='four' || b==='five' || b==='six' ? 1 : -1);\n      case\
    \ 'eight':\n        return (b==='zero' || b==='one' || b==='two' || b==='three'\
    \ || b==='four' || b==='five' || b==='six' || b==='seven' ? 1 : -1);\n      case\
    \ 'nine':\n        return (b==='zero' || b==='one' || b==='two' || b==='three'\
    \ || b==='four' || b==='five' || b==='six' || b==='seven' || b==='eight' ? 1 :\
    \ -1);\n    }\n  });\n  return numbers_array.join(' ');\n}", "    let sortArr\
    \ = numbers.split(' ').sort((a,b) => {\n        //1 one to nine nine\n       \
    \ let numHash = {\n            'zero': 0,\n            'one': 1,\n           \
    \ 'two': 2,\n            'three': 3,\n            'four': 4,\n            'five':\
    \ 5,\n            'six': 6,\n            'seven': 7,\n            'eight': 8,\n\
    \            'nine': 9\n        }\n        return numHash[a] - numHash[b];\n \
    \   })\n    return sortArr.join(' ');\n}", "  // The numberal_to_number object\
    \ is needed here to convert from a numberal to a number.\n  var numberal_to_number\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var number_array = numbers.split(' ');\n  // The array needs to be\
    \ sorted numerically, not alphabetically.\n  number_array.sort(function(a, b){\n\
    \    return numberal_to_number[a] - numberal_to_number[b];\n  });\n  return number_array.join('\
    \ ');\n}", "    numbers = numbers.split(' ');\n    const strNum = new Map();\n\
    \    strNum.set('zero', 0);\n    strNum.set('one', 1);\n    strNum.set('two',\
    \ 2);\n    strNum.set('three', 3);\n    strNum.set('four', 4);\n    strNum.set('five',\
    \ 5);\n    strNum.set('six', 6);\n    strNum.set('seven', 7);\n    strNum.set('eight',\
    \ 8);\n    strNum.set('nine', 9);\n    numbers.sort((a, b) => strNum.get(a) -\
    \ strNum.get(b));\n    return numbers.join(' ');\n}", "    var numObj = {\n  \
    \      zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n       \
    \ four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight:\
    \ 8,\n        nine: 9\n    };\n    var sorted = numbers.split(' ').sort(function(a,\
    \ b){\n        return numObj[a] - numObj[b];\n    });\n    return sorted.join('\
    \ ');\n}\n", "  //PLACE YOUR CODE HERE\n  var num_array = numbers.split(\" \"\
    );\n  var num_dict = {\"zero\":0, \"one\":1, \"two\":2, \"three\":3, \"four\"\
    :4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9};\n  var num_array_num\
    \ = [];\n  for (var i = 0; i < num_array.length; i++) {\n    var num = num_array[i];\n\
    \    num_array_num.push(num_dict[num]);\n  }\n  num_array_num.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < num_array_num.length; i++) {\n    num_array_num[i]\
    \ = num_array[num_array_num[i]];\n  }\n  return num_array_num.join(\" \");\n}\n\
    \n", "  var numObj = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9\n  };\n  var numbersArr = numbers.split(' ');\n  var numbersIntArr = [];\n\
    \  for (var i = 0; i < numbersArr.length; i++) {\n    numbersIntArr.push(numObj[numbersArr[i]]);\n\
    \  }\n  numbersIntArr.sort(function(a, b){return a-b});\n  for (var j = 0; j <\
    \ numbersIntArr.length; j++) {\n    numbersIntArr[j] = numObj[numbersIntArr[j]];\n\
    \  }\n  return numbersIntArr.join(' ');\n}\n", "    const nums = numbers.split('\
    \ ');\n    //convert to numerical\n    const numNums = nums.map(num => {\n   \
    \     switch(num){\n            case 'zero':\n                return 0;\n    \
    \        case 'one':\n                return 1;\n            case 'two':\n   \
    \             return 2;\n            case 'three':\n                return 3;\n\
    \            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    });\n    //sort\n    const sorted = numNums.sort((a,b) => a -\
    \ b);\n    //convert back to words\n    const sortedWords = sorted.map(num =>\
    \ {\n        switch(num){\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    });\n    return sortedWords.join(' ');\n}\n", "  return numbers.split('\
    \ ').sort((a, b) => +NUMERALS.indexOf(a) - +NUMERALS.indexOf(b)).join(' ');\n}",
  "\tvar nums = numbers.split(' ');\n\tvar dict = {'zero':0, 'one':1, 'two':2, 'three':3,\
    \ 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n\tvar sorted\
    \ = nums.sort(function(a,b){\n\t\tif(dict[a] > dict[b]){\n\t\t\treturn 1;\n\t\t\
    }\n\t\tif(dict[a] < dict[b]){\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t});\n\
    \treturn sorted.join(' ');\n}\n", "  return numbers.split(' ').sort((a, b) =>\
    \ {\n    return numberals[a] - numberals[b];\n  }).join(' ');\n}\n", "    // code\
    \ here\n    let numberMap = new Map();\n    numberMap.set('zero', 0);\n    numberMap.set('one',\
    \ 1);\n    numberMap.set('two', 2);\n    numberMap.set('three', 3);\n    numberMap.set('four',\
    \ 4);\n    numberMap.set('five', 5);\n    numberMap.set('six', 6);\n    numberMap.set('seven',\
    \ 7);\n    numberMap.set('eight', 8);\n    numberMap.set('nine', 9);\n\n    let\
    \ splitNumbers = numbers.split(' ');\n    let sortedNumbers = [];\n    for (let\
    \ number of splitNumbers) {\n        sortedNumbers.push(numberMap.get(number));\n\
    \    }\n    sortedNumbers.sort((a, b) => a - b);\n    return sortedNumbers.join('\
    \ ');\n}\n", "    let numMap = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    }\n    let numArr\
    \ = numbers.split(' ').map(num => numMap[num]);\n    return numArr.sort((a, b)\
    \ => a - b).map(num => {\n        switch(num){\n            case 0:\n        \
    \        return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n        }\n    }).join(' ');\n}\n", "  var numObject\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9};\n  var numArr = numbers.split(' ');\n  var\
    \ numArrInt = [];\n  for (var i = 0; i < numArr.length; i++) {\n    numArrInt.push(numObject[numArr[i]]);\n\
    \  }\n  numArrInt.sort(function(a, b){return a-b});\n  var nums = '';\n  for (var\
    \ j = 0; j < numArrInt.length; j++) {\n    nums += numArrInt[j].toString();\n\
    \  }\n  return nums;\n}\n", "    var numStr = [\"zero\", \"one\", \"two\", \"\
    three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\n    var\
    \ numArr = numbers.split(\" \");\n    numArr.sort(function(a, b){\n        return\
    \ numStr.indexOf(a) - numStr.indexOf(b);\n    });\n    return numArr.join(\" \"\
    );\n}\n", "  const numNames = [\n    'zero',\n    'one',\n    'two',\n    'three',\n\
    \    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine'\n\
    \  ];\n  let numArr = numbers.split(' ');\n  for (let i = 0; i < numArr.length;\
    \ i++) {\n    for (let j = 0; j < numArr.length; j++) {\n      if (numNames.indexOf(numArr[i])\
    \ < numNames.indexOf(numArr[j])) {\n        let temp = numArr[i];\n        numArr[i]\
    \ = numArr[j];\n        numArr[j] = temp;\n      }\n    }\n  }\n  return numArr.join('\
    \ ');\n}\n", "    let rv = '';\n    let numbers_arr = numbers.split(' ');\n  \
    \  let number_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n\
    \        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    numbers_arr.sort((a,\
    \ b) => {\n        if (number_map[a] < number_map[b]) return -1;\n        if (number_map[a]\
    \ > number_map[b]) return 1;\n        return 0;\n    });\n    return numbers_arr.join('\
    \ ');\n}\n", "\tvar s = numbers.split(' ');\n\tvar obj = {\n\t\tzero: 0,\n\t\t\
    one: 1,\n\t\ttwo: 2,\n\t\tthree: 3,\n\t\tfour: 4,\n\t\tfive: 5,\n\t\tsix: 6,\n\
    \t\tseven: 7,\n\t\teight: 8,\n\t\tnine: 9\n\t};\n\tvar arr = [];\n\tfor(var i\
    \ = 0; i < s.length; i++){\n\t\tarr.push(obj[s[i]]);\n\t}\n\tarr.sort(function(a,\
    \ b){\n\t\treturn a - b;\n\t});\n\tvar result = '';\n\tfor(var key in obj){\n\t\
    \tfor(var j = 0; j < arr.length; j++){\n\t\t\tif(obj[key] === arr[j]){\n\t\t\t\
    \tresult += key + ' ';\n\t\t\t}\n\t\t}\n\t}\n\treturn result.trim();\n}", "  \
    \  var nums = numbers.split(' ')\n    for(var i = 0; i < nums.length; i++){\n\
    \        switch(nums[i]){\n            case 'zero':\n                nums[i] =\
    \ 0;\n                break;\n            case 'one':\n                nums[i]\
    \ = 1;\n                break;\n            case 'two':\n                nums[i]\
    \ = 2;\n                break;\n            case 'three':\n                nums[i]\
    \ = 3;\n                break;\n            case 'four':\n                nums[i]\
    \ = 4;\n                break;\n            case 'five':\n                nums[i]\
    \ = 5;\n                break;\n            case 'six':\n                nums[i]\
    \ = 6;\n                break;\n            case 'seven':\n                nums[i]\
    \ = 7;\n                break;\n            case 'eight':\n                nums[i]\
    \ = 8;\n                break;\n            case 'nine':\n                nums[i]\
    \ = 9;\n                break;\n        }\n    }\n    nums.sort((a,b) => a - b);\n\
    \    return nums.join(' ');\n}", "  return convert_to_numbers(numbers).sort((a,b)\
    \ => a-b).join(' ');\n}\n", "    var numbers = numbers.split(' ');\n    var reverse_dict\
    \ = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7,\
    \ 'eight':8, 'nine':9};\n    numbers.sort(function(a,b){\n        return reverse_dict[a]\
    \ - reverse_dict[b];\n    });\n    return numbers.join(' ');\n}\n", "  let map\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  }\n  return numbers.split(' ').sort((a, b) => map[a] - map[b]).join(' ')\n\
    }\n", "    var numbersArray = numbers.split(\" \");\n    numbersArray.sort(function(a,\
    \ b){\n        return numberToInteger(a) - numberToInteger(b);\n    });\n    return\
    \ numbersArray.join(\" \");\n}\n", "  //your code here\n  var numHash = {\n  \
    \  zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  numbers\
    \ = numbers.split(' ');\n  var arr = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    arr.push(numHash[numbers[i]]);\n  }\n  console.log(arr);\n  arr.sort(function(a,\
    \ b) {\n    return a - b;\n  });\n  console.log(arr);\n  var string = '';\n  for\
    \ (var j = 0; j < arr.length; j++) {\n    for (var key in numHash) {\n      if\
    \ (numHash[key] === arr[j]) {\n        string += ' ' + key;\n      }\n    }\n\
    \  }\n  return string.trim();\n}\n", "  var numobj = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var nums = numbers.split('\
    \ ');\n  nums.sort(function(a, b){\n    return numobj[a] - numobj[b];\n  });\n\
    \  var output = [];\n  for(var i = 0; i < nums.length; i++){\n    output.push(Number(numobj[nums[i]]));\n\
    \  }\n  return output.join(' ');\n}\n", "  \n    let num = {\n        'zero':0,\n\
    \        'one':1,\n        'two':2,\n        'three':3,\n        'four':4,\n \
    \       'five':5,\n        'six':6,\n        'seven':7,\n        'eight':8,\n\
    \        'nine':9\n      }\n      return numbers.split(' ').sort((a,b)=>num[a]-num[b]).join('\
    \ ')\n    }", "    let numMap = {\n        'zero': 0,\n        'one': 1,\n   \
    \     'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n\
    \        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    }\n    let numList = numbers.split(' ');\n    numList.sort((a, b) =>\
    \ numMap[a] - numMap[b]);\n    return numList.join(' ');\n}\n", "    let number_map\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    let sorted_array = numbers.split('\
    \ ').sort((a, b) => number_map[a] - number_map[b]);\n    return sorted_array.join('\
    \ ');\n}\n", "    let array = numbers.split(' ');\n    let result = array.sort((a,\
    \ b) => a.valueOf() - b.valueOf());\n    return result.join(' ');\n}\n", "  var\
    \ numArr = numbers.split(' ');\n  var wordToNum = {\n    'zero':0,\n    'one':1,\n\
    \    'two':2,\n    'three':3,\n    'four':4,\n    'five':5,\n    'six':6,\n  \
    \  'seven':7,\n    'eight':8,\n    'nine':9\n  };\n  var nums = [];\n  for(var\
    \ num in numArr){\n    nums.push(wordToNum[numArr[num]]);\n  }\n  nums.sort(function(a,b){return\
    \ a-b});\n  var numToWord = {\n    0:'zero',\n    1:'one',\n    2:'two',\n   \
    \ 3:'three',\n    4:'four',\n    5:'five',\n    6:'six',\n    7:'seven',\n   \
    \ 8:'eight',\n    9:'nine'\n  };\n  var numWords = [];\n  for(var num in nums){\n\
    \    numWords.push(numToWord[nums[num]]);\n  }\n  return numWords.join(' ');\n\
    }\n", "    var numbers_list = numbers.split(' ');\n    var numbers_sorted = numbers_list.sort();\n\
    \    return numbers_sorted.join(' ');\n}\n", "    const numerals = {\n       \
    \ zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    }\n    const numArr = numbers.split(' ').map(num => {\n\
    \        return numerals[num]\n    })\n    numArr.sort((a, b) => {\n        return\
    \ a - b\n    })\n    return numArr.join(' ')\n}\n", "  let numberArray = numbers.split('\
    \ ')\n  let numObj = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9\n  }\n  let sorted = numberArray.sort((a, b) => {\n    return numObj[a] -\
    \ numObj[b]\n  })\n  return sorted.join(' ')\n}\n", "    const words = numbers.split('\
    \ ');\n    const numbersObject = {\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    };\n    const translateNumbers = words.map(word => numbersObject[word]);\n\
    \    const sortedNumbers = translateNumbers.sort((a, b) => a - b);\n    const\
    \ finalWords = sortedNumbers.map(number => Object.keys(numbersObject).find(key\
    \ => numbersObject[key] === number));\n    return finalWords.join(' ');\n}\n\n\
    module.exports = sort_numbers;", "  \treturn numbers.split(' ').sort(function(a,\
    \ b){\n  \t\treturn numeral_to_int(a) - numeral_to_int(b);\n  \t}).join(' ');\n\
    }", "  var numArray = numbers.split(' ');\n  var numDict = {};\n  var numSorted\
    \ = [];\n  var result = '';\n  var choices = ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'];\n  var i;\n  for (i = 0; i < choices.length;\
    \ i++){\n    numDict[choices[i]] = i;\n  }\n  for (i = 0; i < numArray.length;\
    \ i++){\n    numSorted.push(numDict[numArray[i]]);\n  }\n  numSorted.sort(function(a,\
    \ b){return a - b});\n  for (i = 0; i < numSorted.length; i++){\n    result +=\
    \ choices[numSorted[i]] + ' ';\n  }\n  return result.slice(0, -1);\n}\n", "  let\
    \ numeral_choices = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'];\n  let values = numbers.split(' ');\n  let numeral_indices\
    \ = [];\n  for (let i = 0; i < values.length; i++) {\n    numeral_indices.push(numeral_choices.indexOf(values[i]));\n\
    \  }\n  numeral_indices.sort(sortNumber);\n  let output = [];\n  for (let i =\
    \ 0; i < numeral_indices.length; i++) {\n    output.push(numeral_choices[numeral_indices[i]]);\n\
    \  }\n  return output.join(' ');\n}\n", "    var numList = numbers.split(\" \"\
    );\n    var numConvert = [];\n    var numSort = [];\n    for (var i = 0; i < numList.length;\
    \ i++){\n        numConvert.push(toDigit(numList[i]));\n    }\n    numSort = numConvert.sort(sortNumber);\n\
    \    for (var i = 0; i < numSort.length; i++){\n        numSort[i] = toWord(numSort[i]);\n\
    \    }\n    return numSort.join(\" \");\n}\n", "  //convert string to array of\
    \ nums\n  let numString = numbers.split(' ');\n  let nums = [];\n  //if string\
    \ is a number, push to nums\n  for(let i = 0; i < numString.length; i++){\n  \
    \  if(!isNaN(numString[i])){\n      nums.push(numString[i]);\n    }\n  }\n  //sort\
    \ array of nums from smallest to largest\n  nums.sort((a, b) => a - b);\n  return\
    \ nums.join(' ');\n}\n", "  const nums = numbers.split(' ');\n  return nums.sort((a,\
    \ b) => map[a] - map[b]).join(' ');\n}\n", "    //valid_nums is an object with\
    \ the numbers mapped to their corresponding integer value\n    const valid_nums\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9};\n    var numArray = numbers.split(' ');\n\
    \    var numSort = [];\n    var nums = [];\n    for(let i = 0; i < numArray.length;\
    \ i++){\n        if(numArray[i] in valid_nums){\n            numSort.push(valid_nums[numArray[i]]);\n\
    \        }else{\n            return 'invalid number(s)';\n        }\n    }\n \
    \   numSort.sort(function(a, b){return a - b});\n    for(let j = 0; j < numSort.length;\
    \ j++){\n        for(let k in valid_nums){\n            if(numSort[j] === valid_nums[k]){\n\
    \                nums.push(k);\n            }\n        }\n    }\n    return nums.join('\
    \ ');\n}\n", "  return numbers.split(' ').sort((a, b) => \n  (a === 'zero' ? 0\
    \ : \n    a === 'one' ? 1 : \n      a === 'two' ? 2 : \n        a === 'three'\
    \ ? 3 : \n          a === 'four' ? 4 : \n            a === 'five' ? 5 : \n   \
    \           a === 'six' ? 6 : \n                a === 'seven' ? 7 : \n       \
    \           a === 'eight' ? 8 : \n                    a === 'nine' ? 9 : 10) -\n\
    \  (b === 'zero' ? 0 : \n    b === 'one' ? 1 : \n      b === 'two' ? 2 : \n  \
    \      b === 'three' ? 3 : \n          b === 'four' ? 4 : \n            b ===\
    \ 'five' ? 5 : \n              b === 'six' ? 6 : \n                b === 'seven'\
    \ ? 7 : \n                  b === 'eight' ? 8 : \n                    b === 'nine'\
    \ ? 9 : 10)\n    ).join(' ');\n}\n", "  var arr = numbers.split(' ');\n  var sorted\
    \ = arr.sort(function(a, b){\n    return getNumber(a) - getNumber(b);\n  });\n\
    \  var string = '';\n  for(var i = 0; i < sorted.length; i++){\n    string +=\
    \ sorted[i] + ' ';\n  }\n  return string.trim();\n}\n", "\tvar numbersArray =\
    \ numbers.split(\" \");\n\t//console.log(numbersArray);\n\tvar numStringArray\
    \ = [];\n\tvar numString = \"\";\n\tvar ordered = [];\n\tvar j = 0;\n\t\n\tvar\
    \ numberTable = {\n\t\t'zero': 0,\n\t\t'one': 1,\n\t\t'two': 2,\n\t\t'three':\
    \ 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t'six': 6,\n\t\t'seven': 7,\n\t\t'eight':\
    \ 8,\n\t\t'nine': 9\n\t};\n\t\n\t//console.log(numberTable.five);\n\t\n\tfor (var\
    \ i = 0; i < numbersArray.length; i++){\n\t\tvar num = numberTable[numbersArray[i]];\n\
    \t\t\n\t\tnumStringArray.push(num);\n\t\t//console.log(numStringArray);\n\t}\n\
    \t\n\t\n\tnumStringArray.sort(function(a, b){return a-b});\n\t//console.log(numStringArray);\n\
    \t//console.log(numbersArray);\n\t\n\t\n\tfor (var i = 0; i < numStringArray.length;\
    \ i++){\n\t\tfor (var k = 0; k < numbersArray.length; k++){\n\t\t\tif (numStringArray[i]\
    \ == numberTable[numbersArray[k]]){\n\t\t\t\tordered[j] = numbersArray[k];\n\t\
    \t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tfor (var i = 0; i < ordered.length; i++){\n\
    \t\tnumString += ordered[i] + \" \";\n\t}\n\t\n\tconsole.log(numString);\n\t\n\
    \treturn numString;\n}\n\nsort_numbers(\"zero one three five two four seven eight\
    \ six nine\");\n\n", "  let numMap = {\n    'zero': 0,\n    'one': 1,\n    'two':\
    \ 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven':\
    \ 7,\n    'eight': 8,\n    'nine': 9\n  }\n  return numbers.split(' ').sort((a,\
    \ b) => numMap[a] - numMap[b]).join(' ')\n}\n", "    var numRef = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var arr = numbers.split(' ');\n    arr.sort(function(a,\
    \ b){\n        return numRef[a] - numRef[b];\n    });\n    return arr.join(' ');\n\
    }", "    let nums = numbers.split(' ')\n    let num_hash = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    }\n    let num_hash_inv = {\n        0: 'zero',\n\
    \        1: 'one',\n        2: 'two',\n        3: 'three',\n        4: 'four',\n\
    \        5: 'five',\n        6: 'six',\n        7: 'seven',\n        8: 'eight',\n\
    \        9: 'nine'\n    }\n    let nums_sorted = nums.map(str => num_hash[str]).sort((a,b)\
    \ => a - b)\n    return nums_sorted.map(num => num_hash_inv[num]).join(' ')\n\
    }\n", "  if(numbers.length < 3) return numbers;\n  numbers = numbers.split(' ');\n\
    \  var nums = numbers.map(function(n){\n    return numsTable[n];\n  });\n  var\
    \ sorted = nums.sort(function(a,b){return a-b;});\n  return sorted.map(function(s){\n\
    \    return revNumsTable[s];\n  }).join(' ');\n}\n", "  var numbers_array = numbers.split('\
    \ ');\n  var dic = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  var result = \"\";\n  var result_array\
    \ = [];\n  for(var i = 0; i < numbers_array.length; i++){\n    result_array.push(dic[numbers_array[i]]);\n\
    \  }\n  result_array.sort(function(a,b){return a-b});\n  for(var i = 0; i < result_array.length;\
    \ i++){\n    for(var j in dic){\n      if(dic[j] == result_array[i]){\n      \
    \  result += j + \" \";\n      }\n    }\n  }\n  return result.trim();\n}\n", " \
    \   var arr = numbers.split(' ')\n    var newArr = []\n    for(var i = 0; i <\
    \ arr.length; i++){\n        switch(arr[i]){\n            case 'zero':\n     \
    \           newArr.push(0)\n                break;\n            case 'one':\n\
    \                newArr.push(1)\n                break;\n            case 'two':\n\
    \                newArr.push(2)\n                break;\n            case 'three':\n\
    \                newArr.push(3)\n                break;\n            case 'four':\n\
    \                newArr.push(4)\n                break;\n            case 'five':\n\
    \                newArr.push(5)\n                break;\n            case 'six':\n\
    \                newArr.push(6)\n                break;\n            case 'seven':\n\
    \                newArr.push(7)\n                break;\n            case 'eight':\n\
    \                newArr.push(8)\n                break;\n            case 'nine':\n\
    \                newArr.push(9)\n                break;\n        }\n    }\n  \
    \  var result = newArr.sort(function(a,b){return a-b})\n    var str = ''\n   \
    \ for(var i = 0; i < result.length; i++){\n        switch(result[i]){\n      \
    \      case 0:\n                str += 'zero '\n                break;\n     \
    \       case 1:\n                str += 'one '\n                break;\n     \
    \       case 2:\n                str += 'two '\n                break;\n     \
    \       case 3:\n                str += 'three '\n                break;\n   \
    \         case 4:\n                str += 'four '\n                break;\n  \
    \          case 5:\n                str += 'five '\n                break;\n \
    \           case 6:\n                str += 'six '\n                break;\n \
    \           case 7:\n                str += 'seven '\n                break;\n\
    \            case 8:\n                str += 'eight '\n                break;\n\
    \            case 9:\n                str += 'nine '\n                break;\n\
    \        }\n    }\n    return str\n}\n", "  let arr = numbers.split(' ');\n  let\
    \ nums = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n  \
    \  'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n\
    \    'nine': 9\n  };\n  arr.sort((a, b) => nums[a] - nums[b]);\n  return arr.join('\
    \ ');\n}\n", "  var numbersInOrder = ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'];\n  numbers = numbers.split(' ');\n  numbers.sort(function(a,\
    \ b){\n    return numbersInOrder.indexOf(a) - numbersInOrder.indexOf(b);\n  });\n\
    \  return numbers.join(' ');\n}\n", "    numbers = numbers.split(' ');\n    numbers.sort(\
    \ (a,b) => {return convertToNum(a) - convertToNum(b)} );\n    return numbers.join('\
    \ ');\n}\n", "  return numbers.split(' ').sort((a, b) => {\n    const numbers\
    \ = {\n      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four:\
    \ 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return numbers[a] - numbers[b];\n  }).join(' ');\n}\n", "\tvar\
    \ numArr = numbers.split(' ');\n\tvar finalArr = [];\n\tvar finalStr = '';\n\t\
    var nums = {\n\t\t\"zero\": 0,\n\t\t\"one\": 1,\n\t\t\"two\": 2,\n\t\t\"three\"\
    : 3,\n\t\t\"four\": 4,\n\t\t\"five\": 5,\n\t\t\"six\": 6,\n\t\t\"seven\": 7,\n\
    \t\t\"eight\": 8,\n\t\t\"nine\": 9\n\t};\n\tfor (var i = 0; i < numArr.length;\
    \ i++) {\n\t\tfinalArr.push(nums[numArr[i]]);\n\t}\n\tfinalArr.sort(function(a,\
    \ b){return a-b});\n\tfor (var i = 0; i < finalArr.length; i++) {\n\t\tfor (key\
    \ in nums) {\n\t\t\tif (nums[key] === finalArr[i]) {\n\t\t\t\tfinalStr += key\
    \ + ' ';\n\t\t\t}\n\t\t}\n\t}\n\treturn finalStr.trim();\n}\n", "  // numbers\
    \ is a string of space-delimited numberals\n  return numbers.split(' ').sort((a,\
    \ b) => numeral_map[a] - numeral_map[b]).join(' ');\n}\n", "    numbers = numbers.split('\
    \ ');\n    const num_arr = {\n        'zero': 0,\n        'one': 1,\n        'two':\
    \ 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six':\
    \ 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n  \
    \  numbers.sort((a, b) => num_arr[a] - num_arr[b]);\n    return numbers.join('\
    \ ');\n}", "    // Check for an empty string\n    if(numbers === ''){\n      \
    \  return numbers;\n    }\n    // Check for only one number\n    if(numbers.indexOf('\
    \ ') === -1){\n        return numbers;\n    }\n    // Split the string into an\
    \ array\n    let numArray = numbers.split(' ');\n    // Convert array to numbers\n\
    \    numArray = numArray.map(Number);\n    // Sort the numbers\n    numArray.sort(function(a,\
    \ b){return a-b});\n    // Convert sorted array back to string\n    numArray =\
    \ numArray.map(String);\n    // Return string\n    return numArray.join(' ');\n\
    }\n", "    const numStrings = numbers.split(' ')\n    const nums = numStrings.map(num\
    \ => {\n        if (num === 'zero') return 0\n        if (num === 'one') return\
    \ 1\n        if (num === 'two') return 2\n        if (num === 'three') return\
    \ 3\n        if (num === 'four') return 4\n        if (num === 'five') return\
    \ 5\n        if (num === 'six') return 6\n        if (num === 'seven') return\
    \ 7\n        if (num === 'eight') return 8\n        if (num === 'nine') return\
    \ 9\n    })\n    nums.sort((a, b) => a - b)\n    const sorted = nums.map(num =>\
    \ {\n        if (num === 0) return 'zero'\n        if (num === 1) return 'one'\n\
    \        if (num === 2) return 'two'\n        if (num === 3) return 'three'\n\
    \        if (num === 4) return 'four'\n        if (num === 5) return 'five'\n\
    \        if (num === 6) return 'six'\n        if (num === 7) return 'seven'\n\
    \        if (num === 8) return 'eight'\n        if (num === 9) return 'nine'\n\
    \    })\n    return sorted.join(' ')\n}\n", "  return numbers.split(' ').sort((a,\
    \ b) => numberals[a] - numberals[b]).join(' ');\n}\n", "  let numbersArr = numbers.split('\
    \ ');\n  let numObj = {zero: 0, one: 1, two: 2, three: 3, four: 4, five: 5, six:\
    \ 6, seven: 7, eight: 8, nine: 9};\n  return numbersArr.sort((a, b) => numObj[a]\
    \ - numObj[b]).join(' ');\n}\n", "\tconst numObj = {\n\t\t'zero': 0,\n\t\t'one':\
    \ 1,\n\t\t'two': 2,\n\t\t'three': 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t'six':\
    \ 6,\n\t\t'seven': 7,\n\t\t'eight': 8,\n\t\t'nine': 9\n\t}\n\tconst nums = numbers.split('\
    \ ');\n\tconst numsArr = nums.map(x => numObj[x]);\n\tnumsArr.sort((a, b) => a\
    \ - b);\n\treturn numsArr.map(x => Object.keys(numObj).find(key => numObj[key]\
    \ === x)).join(' ');\n}\n", "  let numToNum = {\n    zero: 0,\n    one: 1,\n \
    \   two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  }\n  let nums = numbers.split(' ');\n  let\
    \ numNums = [];\n  for (let i = 0; i < nums.length; i++) {\n    numNums.push(numToNum[nums[i]]);\n\
    \  }\n  numNums.sort((a, b) => a - b);\n  let numWords = [];\n  for (let i = 0;\
    \ i < numNums.length; i++) {\n    for (let key in numToNum) {\n      if (numToNum[key]\
    \ === numNums[i]) {\n        numWords.push(key);\n      }\n    }\n  }\n  return\
    \ numWords.join(' ');\n}\n", "    let num = numbers.split(' ');\n    num.sort((a,b)\
    \ => {\n        let nums = {\n            zero: 0,\n            one: 1,\n    \
    \        two: 2,\n            three: 3,\n            four: 4,\n            five:\
    \ 5,\n            six: 6,\n            seven: 7,\n            eight: 8,\n    \
    \        nine: 9\n        }\n        return nums[a] - nums[b];\n    });\n    return\
    \ num.join(' ');\n}\n", "    var numArray = numbers.split(\" \");\n    var ans\
    \ = \"\";\n    for(var i = 0; i < numArray.length; i++){\n        for(var j =\
    \ 0; j < numArray.length - 1; j++){\n            if(convert_to_number(numArray[j])\
    \ > convert_to_number(numArray[j+1])){\n                var temp = numArray[j];\n\
    \                numArray[j] = numArray[j+1];\n                numArray[j+1] =\
    \ temp;\n            }\n        }\n    }\n    for(var i = 0; i < numArray.length;\
    \ i++){\n        ans += numArray[i] + \" \";\n    }\n    return ans;\n}\n", " \
    \   var numbers_arr = numbers.split(' ');\n    var numbers_obj = {};\n    var\
    \ sorted_numbers = [];\n    for(var i = 0; i < numbers_arr.length; i++){\n   \
    \     if(!numbers_obj[numbers_arr[i]]){\n            numbers_obj[numbers_arr[i]]\
    \ = 1;\n        }\n        else{\n            numbers_obj[numbers_arr[i]]++;\n\
    \        }\n    }\n    for(var j = 0; j < numbers_arr.length; j++){\n        if(numbers_obj['zero']){\n\
    \            numbers_obj['zero']--;\n            sorted_numbers.push('zero');\n\
    \        }\n        else if(numbers_obj['one']){\n            numbers_obj['one']--;\n\
    \            sorted_numbers.push('one');\n        }\n        else if(numbers_obj['two']){\n\
    \            numbers_obj['two']--;\n            sorted_numbers.push('two');\n\
    \        }\n        else if(numbers_obj['three']){\n            numbers_obj['three']--;\n\
    \            sorted_numbers.push('three');\n        }\n        else if(numbers_obj['four']){\n\
    \            numbers_obj['four']--;\n            sorted_numbers.push('four');\n\
    \        }\n        else if(numbers_obj['five']){\n            numbers_obj['five']--;\n\
    \            sorted_numbers.push('five');\n        }\n        else if(numbers_obj['six']){\n\
    \            numbers_obj['six']--;\n            sorted_numbers.push('six');\n\
    \        }\n        else if(numbers_obj['seven']){\n            numbers_obj['seven']--;\n\
    \            sorted_numbers.push('seven');\n        }\n        else if(numbers_obj['eight']){\n\
    \            numbers_obj['eight']--;\n            sorted_numbers.push('eight');\n\
    \        }\n        else if(numbers_obj['nine']){\n            numbers_obj['nine']--;\n\
    \            sorted_numbers.push('nine');\n        }\n", "  return numbers.split('\
    \ ').sort((a, b) => numeralToInt(a) - numeralToInt(b)).join(' ');\n}\n", "  var\
    \ dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six':\
    \ 6, 'seven': 7, 'eight': 8, 'nine': 9};\n  return numbers.split(' ').sort(function(a,\
    \ b){return dict[a] - dict[b]}).join(' ');\n}", "  var dict = {\"zero\":0, \"\
    one\":1, \"two\":2, \"three\":3, \"four\":4, \"five\":5, \"six\":6, \"seven\"\
    :7, \"eight\":8, \"nine\":9};\n  return numbers.split(\" \").sort(function(a,b){return\
    \ dict[a]-dict[b]}).join(\" \");\n}\n", "    let numberStr = numbers.split(' ');\n\
    \    let numberInt = [];\n    let results = \"\";\n    let numToString = {\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9};\n    for(let i = 0; i < numberStr.length;\
    \ i++){\n        let numString = numberStr[i];\n        let numInt = numToString[numString];\n\
    \        numberInt.push(numInt);\n    }\n    numberInt.sort(function(a, b){return\
    \ a-b});\n    for(let i = 0; i < numberInt.length; i++){\n        if(i === numberInt.length\
    \ - 1){\n            results += numberInt[i];\n        } else {\n            results\
    \ += numberInt[i] + \" \";\n        }\n    }\n    return results;\n}\n", "\tlet\
    \ numbersArr = numbers.split(' ');\n\tlet numObj = {\n\t\tzero: 0,\n\t\tone: 1,\n\
    \t\ttwo: 2,\n\t\tthree: 3,\n\t\tfour: 4,\n\t\tfive: 5,\n\t\tsix: 6,\n\t\tseven:\
    \ 7,\n\t\teight: 8,\n\t\tnine: 9\n\t};\n\tlet numArr = [];\n\tnumbersArr.forEach(number\
    \ => {\n\t\tnumArr.push(numObj[number]);\n\t});\n\tlet sortedArr = numArr.sort((a,\
    \ b) => a - b);\n\tconsole.log(sortedArr);\n\tlet sortedObj = {\n\t\t0: 'zero',\n\
    \t\t1: 'one',\n\t\t2: 'two',\n\t\t3: 'three',\n\t\t4: 'four',\n\t\t5: 'five',\n\
    \t\t6: 'six',\n\t\t7: 'seven',\n\t\t8: 'eight',\n\t\t9: 'nine'\n\t};\n\tlet sortedStr\
    \ = '';\n\tsortedArr.forEach(number => {\n\t\tsortedStr += sortedObj[number] +\
    \ ' ';\n\t});\n\tconsole.log(sortedStr);\n\treturn sortedStr;\n}\n", "    let\
    \ numArray = numbers.split(' ');\n    for(let i = 0; i < numArray.length; i++){\n\
    \        if(numArray[i] == 'zero') numArray[i] = 0;\n        if(numArray[i] ==\
    \ 'one') numArray[i] = 1;\n        if(numArray[i] == 'two') numArray[i] = 2;\n\
    \        if(numArray[i] == 'three') numArray[i] = 3;\n        if(numArray[i] ==\
    \ 'four') numArray[i] = 4;\n        if(numArray[i] == 'five') numArray[i] = 5;\n\
    \        if(numArray[i] == 'six') numArray[i] = 6;\n        if(numArray[i] ==\
    \ 'seven') numArray[i] = 7;\n        if(numArray[i] == 'eight') numArray[i] =\
    \ 8;\n        if(numArray[i] == 'nine') numArray[i] = 9;\n    }\n    numArray.sort((a,b)\
    \ => a - b);\n    for(let i = 0; i < numArray.length; i++){\n        if(numArray[i]\
    \ == 0) numArray[i] = 'zero';\n        if(numArray[i] == 1) numArray[i] = 'one';\n\
    \        if(numArray[i] == 2) numArray[i] = 'two';\n        if(numArray[i] ==\
    \ 3) numArray[i] = 'three';\n        if(numArray[i] == 4) numArray[i] = 'four';\n\
    \        if(numArray[i] == 5) numArray[i] = 'five';\n        if(numArray[i] ==\
    \ 6) numArray[i] = 'six';\n        if(numArray[i] == 7) numArray[i] = 'seven';\n\
    \        if(numArray[i] == 8) numArray[i] = 'eight';\n        if(numArray[i] ==\
    \ 9) numArray[i] = 'nine';\n    }\n    return numArray.join(' ');\n}\n", "  var\
    \ sorted_numbers = [];\n  var numeral_array = numbers.split(\" \");\n  for (var\
    \ i = 0; i < numeral_array.length; i++) {\n    if (numeral_array[i] === \"zero\"\
    ) {\n      sorted_numbers.push(0);\n    } else if (numeral_array[i] === \"one\"\
    ) {\n      sorted_numbers.push(1);\n    } else if (numeral_array[i] === \"two\"\
    ) {\n      sorted_numbers.push(2);\n    } else if (numeral_array[i] === \"three\"\
    ) {\n      sorted_numbers.push(3);\n    } else if (numeral_array[i] === \"four\"\
    ) {\n      sorted_numbers.push(4);\n    } else if (numeral_array[i] === \"five\"\
    ) {\n      sorted_numbers.push(5);\n    } else if (numeral_array[i] === \"six\"\
    ) {\n      sorted_numbers.push(6);\n    } else if (numeral_array[i] === \"seven\"\
    ) {\n      sorted_numbers.push(7);\n    } else if (numeral_array[i] === \"eight\"\
    ) {\n      sorted_numbers.push(8);\n    } else if (numeral_array[i] === \"nine\"\
    ) {\n      sorted_numbers.push(9);\n    }\n  }\n  sorted_numbers.sort(function(a,\
    \ b){return a-b});\n  return sorted_numbers;\n}\n", "  var sorted_num = [];\n\
    \  var to_number = function(number_word){\n    var numeral_num = {\n      'zero':\
    \ 0,\n      'one': 1,\n      'two': 2,\n      'three': 3,\n      'four': 4,\n\
    \      'five': 5,\n      'six': 6,\n      'seven': 7,\n      'eight': 8,\n   \
    \   'nine': 9\n    };\n    return numeral_num[number_word];\n  };\n  var number_words\
    \ = numbers.split(' ');\n  number_words.forEach(function(number_word){\n    sorted_num.push(to_number(number_word));\n\
    \  });\n  sorted_num.sort(function(a, b){\n    return a - b;\n  });\n  number_words\
    \ = sorted_num.map(function(number){\n    for(var key in numeral_num){\n     \
    \ if(numeral_num[key] === number){\n        return key;\n      }\n    }\n  });\n\
    \  return number_words.join(' ');\n}\n", "\tlet num_arr = numbers.split(' ');\n\
    \tlet dict = {\n\t\t'zero': 0,\n\t\t'one': 1,\n\t\t'two': 2,\n\t\t'three': 3,\n\
    \t\t'four': 4,\n\t\t'five': 5,\n\t\t'six': 6,\n\t\t'seven': 7,\n\t\t'eight': 8,\n\
    \t\t'nine': 9\n\t};\n\tfor(let i = 0; i < num_arr.length; i++){\n\t\tnum_arr[i]\
    \ = dict[num_arr[i]];\n\t}\n\tnum_arr.sort((a, b) => a - b);\n\tfor(let i = 0;\
    \ i < num_arr.length; i++){\n\t\tlet num = num_arr[i];\n\t\tfor(let key in dict){\n\
    \t\t\tif(dict[key] === num){\n\t\t\t\tnum_arr[i] = key;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn num_arr.join(' ');\n}\n", "  let nums = numbers.split(' ')\n  let map\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  }\n  nums.sort((a,\
    \ b) => map[a] - map[b])\n  return nums.join(' ')\n}\n", "    const numbersDict\
    \ = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    }\n    const result = numbers.split('\
    \ ').map(num => numbersDict[num]).sort((a, b) => a - b);\n    return result.map(num\
    \ => num === 0 ? 'zero' : num.toString());\n}\n", "  var map = { 'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9 };\n  var numbers_list = numbers.split(' ');\n  numbers_list.sort(function(a,\
    \ b){\n    return map[a] - map[b];\n  });\n  return numbers_list.join(' ');\n\
    }\n", "\t\n\t//use obj.hasOwnProperty(key) to know if a value exists in an object.\n\
    \tvar numberals = {\n\t\tzero: 0,\n\t\tone: 1,\n\t\ttwo: 2,\n\t\tthree: 3,\n\t\
    \tfour: 4,\n\t\tfive: 5,\n\t\tsix: 6,\n\t\tseven: 7,\n\t\teight: 8,\n\t\tnine:\
    \ 9\n\t};\n\t\n\tnumbers = numbers.split(' ');\n\tvar numeral_numbers = [];\n\t\
    \n\tfor(var i = 0; i < numbers.length; i++){\n\t\tif(numberals.hasOwnProperty(numbers[i])){\n\
    \t\t\tnumeral_numbers.push(numberals[numbers[i]]);\n\t\t}\n\t}\n\t\n\tvar sorted_numbers\
    \ = numeral_numbers.sort(function(a, b){\n\t\treturn a - b;\n\t});\n\t\n\tvar\
    \ result = '';\n\t\n\tfor(var i = 0; i < sorted_numbers.length; i++){\n\t\tfor(key\
    \ in numberals){\n\t\t\tif(numberals[key] === sorted_numbers[i]){\n\t\t\t\tresult\
    \ += key + ' ';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result.trim();\n\t\n}\n", " \
    \ const numMap = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three':\
    \ 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight':\
    \ 8,\n    'nine': 9\n  }\n  const numArr = numbers.split(' ');\n  const sorted\
    \ = numArr.sort((a, b) => numMap[a] - numMap[b]);\n  return sorted.join(' ');\n\
    }\n", "    let nums = numbers.split(' ');\n    let conversion = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    let res = nums.map(n => conversion[n]).sort((a,\
    \ b) => a - b);\n    return res.map(n => Object.keys(conversion).find(key => conversion[key]\
    \ === n)).join(' ');\n}\n", "  // splitting into a list\n  numbers_to_sort = numbers.split(\"\
    \ \");\n  // dictionary of roman numerals to numbers\n  sort_dict = {\n    'zero':\
    \ 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five':\
    \ 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n \
    \ // Sort using cmp option\n  numbers_to_sort.sort(function(a, b){\n    return\
    \ sort_dict[a] - sort_dict[b];\n  });\n  return numbers_to_sort.join(\" \");\n\
    }\n", "  var numberMap = new Map();\n  numberMap.set('zero', 0);\n  numberMap.set('one',\
    \ 1);\n  numberMap.set('two', 2);\n  numberMap.set('three', 3);\n  numberMap.set('four',\
    \ 4);\n  numberMap.set('five', 5);\n  numberMap.set('six', 6);\n  numberMap.set('seven',\
    \ 7);\n  numberMap.set('eight', 8);\n  numberMap.set('nine', 9);\n  var nums =\
    \ numbers.split(' ');\n  for(let i = 0; i < nums.length; i++){\n    nums[i] =\
    \ numberMap.get(nums[i]);\n  }\n  nums.sort(function(a, b){\n    return a - b;\n\
    \  });\n  for(let i = 0; i < nums.length; i++){\n    switch(nums[i]){\n      case\
    \ 0:\n        nums[i] = 'zero';\n        break;\n      case 1:\n        nums[i]\
    \ = 'one';\n        break;\n      case 2:\n        nums[i] = 'two';\n        break;\n\
    \      case 3:\n        nums[i] = 'three';\n        break;\n      case 4:\n  \
    \      nums[i] = 'four';\n        break;\n      case 5:\n        nums[i] = 'five';\n\
    \        break;\n      case 6:\n        nums[i] = 'six';\n        break;\n   \
    \   case 7:\n        nums[i] = 'seven';\n        break;\n      case 8:\n     \
    \   nums[i] = 'eight';\n        break;\n      case 9:\n        nums[i] = 'nine';\n\
    \        break;\n    }\n  }\n  return nums.join(' ');\n}\n", "  var arr = numbers.split('\
    \ ');\n  for(var i = 0; i < arr.length; i++){\n    if(arr[i] == 'zero'){\n   \
    \   arr[i] = 0;\n    }\n    else if(arr[i] == 'one'){\n      arr[i] = 1;\n   \
    \ }\n    else if(arr[i] == 'two'){\n      arr[i] = 2;\n    }\n    else if(arr[i]\
    \ == 'three'){\n      arr[i] = 3;\n    }\n    else if(arr[i] == 'four'){\n   \
    \   arr[i] = 4;\n    }\n    else if(arr[i] == 'five'){\n      arr[i] = 5;\n  \
    \  }\n    else if(arr[i] == 'six'){\n      arr[i] = 6;\n    }\n    else if(arr[i]\
    \ == 'seven'){\n      arr[i] = 7;\n    }\n    else if(arr[i] == 'eight'){\n  \
    \    arr[i] = 8;\n    }\n    else if(arr[i] == 'nine'){\n      arr[i] = 9;\n \
    \   }\n  }\n  arr.sort(function(a, b){return a-b});\n  var num = [];\n  for(var\
    \ i = 0; i < arr.length; i++){\n    if(arr[i] == 0){\n      num.push('zero');\n\
    \    }\n    else if(arr[i] == 1){\n      num.push('one');\n    }\n    else if(arr[i]\
    \ == 2){\n      num.push('two');\n    }\n    else if(arr[i] == 3){\n      num.push('three');\n\
    \    }\n    else if(arr[i] == 4){\n      num.push('four');\n    }\n    else if(arr[i]\
    \ == 5){\n      num.push('five');\n    }\n    else if(arr[i] == 6){\n      num.push('six');\n\
    \    }\n    else if(arr[i] == 7){\n      num.push('seven');", "\tnumbers = numbers.split('\
    \ ');\n\tvar num_mapping = {\n\t\t'zero': 0,\n\t\t'one': 1,\n\t\t'two': 2,\n\t\
    \t'three': 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t'six': 6,\n\t\t'seven': 7,\n\
    \t\t'eight': 8,\n\t\t'nine': 9\n\t};\n\tnumbers.sort(function(a, b){\n\t\treturn\
    \ num_mapping[a] - num_mapping[b];\n\t});\n\treturn numbers.join(' ');\n}\n",
  "    var numbers_hash = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five':\
    \ 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9};\n    numbers = numbers.split('\
    \ ');\n    numbers.sort(function(a, b){return numbers_hash[a] - numbers_hash[b]});\n\
    \    return numbers.join(' ');\n}\n", "    if(!numbers) return '';\n    return\
    \ numbers.split(' ').sort((a,b) => convert_to_numeral(a) - convert_to_numeral(b)).join('\
    \ ');\n}\n", "  var numArr = numbers.split(' ');\n  var alphaArr = [];\n  var\
    \ numObj = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six':\
    \ 6, 'seven': 7, 'eight': 8, 'nine': 9};\n  for (var i = 0; i < numArr.length;\
    \ i++) {\n    alphaArr.push(numObj[numArr[i]]);\n  }\n  alphaArr.sort(function(a,\
    \ b){return a-b});\n  console.log(alphaArr);\n  var sorted = '';\n  for (var i\
    \ = 0; i < alphaArr.length; i++) {\n    for (var key in numObj) {\n      if (numObj[key]\
    \ === alphaArr[i]) {\n        sorted += key + ' ';\n      }\n    }\n  }\n  console.log(sorted);\n\
    \  return sorted;\n}\n\nsort_numbers('zero three one two four eight six seven\
    \ five nine');", "    numbers = numbers.split(' ');\n    var sorted = numbers.sort((a,b)\
    \ => {\n        return numbers[a] - numbers[b];\n    });\n    return sorted.join('\
    \ ');\n}\n", "\tlet nums = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"\
    five\", \"six\", \"seven\", \"eight\", \"nine\"];\n\treturn numbers.split(\" \"\
    ).sort((a, b) => nums.indexOf(a) - nums.indexOf(b)).join(\" \");\n}\n", "  const\
    \ sortMap = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n\
    \    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight':\
    \ 8,\n    'nine': 9\n  }\n  let sorted = numbers.split(' ').sort((a, b) => sortMap[a]\
    \ - sortMap[b]);\n  return sorted.join(' ');\n}\n", "  return numbers.split('\
    \ ').sort((a, b) => numbers_to_numbers[a] - numbers_to_numbers[b]).join(' ');\n\
    }\n", "\tvar num_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9};\n\tvar num_array = numbers.split('\
    \ ');\n\tvar out_num_array = [];\n\tfor (var i=0; i<num_array.length; i++){\n\t\
    \tout_num_array.push(num_dict[num_array[i]]);\n\t}\n\tout_num_array.sort(function(a,b){return\
    \ a-b});\n\tfor (var i=0; i<out_num_array.length; i++){\n\t\tfor (key in num_dict){\n\
    \t\t\tif (num_dict[key] == out_num_array[i]){\n\t\t\t\tout_num_array[i] = key;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn out_num_array.join(' ');\n}\n", "  //your code goes\
    \ here!\n  var nums = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9\n  };\n  var res = \"\";\n  numbers.split(\" \").sort(function(a, b){\n  \
    \  return nums[a] - nums[b];\n  }).forEach(function(num){\n    res += num + \"\
    \ \";\n  });\n  return res.trim();\n}\n", "  var numArray = numbers.split(' ');\n\
    \  var numWords = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'];\n  var numValues = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  var\
    \ sorted = [];\n  var returned = '';\n  for (var i = 0; i < numArray.length; i++)\
    \ {\n    sorted.push(numValues[numWords.indexOf(numArray[i])]);\n  }\n  sorted.sort(function(a,\
    \ b){return a-b});\n  for (var j = 0; j < sorted.length; j++) {\n    returned\
    \ += numWords[numValues.indexOf(sorted[j])] + ' ';\n  }\n  return returned.trim();\n\
    }\n", "  var nums = numbers.split(' ');\n  var nums_sorted = nums.sort();\n  return\
    \ nums_sorted.join(' ');\n}\n", "\tvar obj = {\n\t\tzero: 0,\n\t\tone: 1,\n\t\t\
    two: 2,\n\t\tthree: 3,\n\t\tfour: 4,\n\t\tfive: 5,\n\t\tsix: 6,\n\t\tseven: 7,\n\
    \t\teight: 8,\n\t\tnine: 9\n\t};\n\tvar numbers_array = numbers.split(' ');\n\t\
    var numbers_array_to_sort = [];\n\tfor (var i = 0; i < numbers_array.length; i++)\
    \ {\n\t\tnumbers_array_to_sort.push(obj[numbers_array[i]]);\n\t}\n\tnumbers_array_to_sort.sort(function(a,\
    \ b){return a-b});\n\tvar sorted_numbers = [];\n\tfor (var j = 0; j < numbers_array_to_sort.length;\
    \ j++) {\n\t\tfor (var k in obj) {\n\t\t\tif (obj[k] === numbers_array_to_sort[j])\
    \ {\n\t\t\t\tsorted_numbers.push(k);\n\t\t\t}\n\t\t}\n\t}\n\treturn sorted_numbers.join('\
    \ ');\n}\n", "    let numeral = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n    return numbers.split('\
    \ ').sort((a,b)=>numeral[a]-numeral[b]).join(' ')\n}\n", "  var num_array = numbers.split(\"\
    \ \")\n  num_array.sort(function(a,b){\n    var a_num = convert_numeral(a)\n \
    \   var b_num = convert_numeral(b)\n    return a_num - b_num\n  })\n  return num_array.join(\"\
    \ \")\n}\n", "\tvar numberValues = {\"zero\":0, \"one\":1, \"two\":2, \"three\"\
    :3, \"four\":4, \"five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9}\n\
    \tvar result = numbers.split(\" \").sort(function(a,b){return numberValues[a]\
    \ - numberValues[b]});\n\treturn result.join(\" \");\n}", "  const num_string\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  }\n  let\
    \ num_arr = numbers.split(' ')\n  for (let i = 0; i < num_arr.length; i++) {\n\
    \    if (num_string[num_arr[i]] == undefined) {\n      return 'Invalid Input'\n\
    \    }\n  }\n  return num_arr.sort((a, b) => num_string[a] - num_string[b]).join('\
    \ ')\n}\n", "  var nums = numbers.split(' ');\n  var nums = nums.sort(function(a,\
    \ b){return getNumber(a) - getNumber(b)});\n  var res = \"\";\n  for(i=0; i<nums.length;\
    \ i++){\n    res += getNumber(nums[i]) + \" \";\n  }\n  return res;\n}\n", "\t\
    var numArr = numbers.split(' ');\n\tvar numDic = {'zero':0, 'one':1, 'two':2,\
    \ 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n\t\
    var sorted = numArr.sort(function(a,b){\n\t\treturn numDic[a] - numDic[b];\n\t\
    });\n\treturn sorted.join(' ');\n}\n", "  // string of numbers\n  const nums =\
    \ numbers.split(' ');\n  const map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n\
    \    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight:\
    \ 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => map[a] - map[b]);\n\
    \  return sorted.join(' ');\n}\n", "  var num_list = numbers.split(' ');\n  var\
    \ num_obj = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n\
    \    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight':\
    \ 8,\n    'nine': 9\n  };\n  var num_arr = [];\n  num_list.forEach(function(num){\n\
    \    num_arr.push(num_obj[num]);\n  });\n  num_arr.sort(function(a, b){return\
    \ a-b});\n  var sorted_nums = [];\n  num_arr.forEach(function(num){\n    for(var\
    \ numeral in num_obj){\n      if(num_obj[numeral] == num){\n        sorted_nums.push(numeral);\n\
    \      }\n    }\n  });\n  return sorted_nums.join(' ');\n}", "    var nums = numbers.split('\
    \ ');\n    var sort_nums = nums.sort(function(a, b){\n        return a - b;\n\
    \    });\n    return sort_nums.join(' ');\n}\n", "  var nums = numbers.split('\
    \ ');\n  var numsToReturn = [];\n  var zero = 'zero';\n  var one = 'one';\n  var\
    \ two = 'two';\n  var three = 'three';\n  var four = 'four';\n  var five = 'five';\n\
    \  var six = 'six';\n  var seven = 'seven';\n  var eight = 'eight';\n  var nine\
    \ = 'nine';\n  for(var i = 0; i < nums.length; i++){\n    if(nums[i] === zero){\n\
    \      numsToReturn.push(zero);\n    }\n    if(nums[i] === one){\n      numsToReturn.push(one);\n\
    \    }\n    if(nums[i] === two){\n      numsToReturn.push(two);\n    }\n    if(nums[i]\
    \ === three){\n      numsToReturn.push(three);\n    }\n    if(nums[i] === four){\n\
    \      numsToReturn.push(four);\n    }\n    if(nums[i] === five){\n      numsToReturn.push(five);\n\
    \    }\n    if(nums[i] === six){\n      numsToReturn.push(six);\n    }\n    if(nums[i]\
    \ === seven){\n      numsToReturn.push(seven);\n    }\n    if(nums[i] === eight){\n\
    \      numsToReturn.push(eight);\n    }\n    if(nums[i] === nine){\n      numsToReturn.push(nine);\n\
    \    }\n  }\n  return numsToReturn.join(' ');\n}\n", "  let numberArray = numbers.split('\
    \ ');\n  let numberMap = new Map([['zero', 0], ['one', 1], ['two', 2], ['three',\
    \ 3], ['four', 4], ['five', 5], ['six', 6], ['seven', 7], ['eight', 8], ['nine',\
    \ 9]]);\n  let numbersArray = [];\n  for (let number of numberArray) {\n    numbersArray.push(numberMap.get(number));\n\
    \  }\n  let sortedNumbers = numbersArray.sort((a, b) => a - b);\n  let sortedNumbersString\
    \ = '';\n  for (let sortedNumber of sortedNumbers) {\n    sortedNumbersString\
    \ += sortedNumber + ' ';\n  }\n  return sortedNumbersString.trim();\n}\n", " \
    \   // parse string into an array of strings\n    var array_numbers = numbers.split(\"\
    \ \");\n    console.log(array_numbers);\n    var sorted_array = array_numbers.sort(function(a,\
    \ b){\n        return number_dictionary[a] - number_dictionary[b];\n    });\n\
    \    return sorted_array.join(\" \");\n}\n", "\tvar numHash = { 'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9\
    \ };\n\tvar stringArray = numbers.split(' ');\n\tvar numberArray = [];\n\tfor\
    \ (var i = 0; i < stringArray.length; i++) {\n\t\tnumberArray.push(numHash[stringArray[i]]);\n\
    \t}\n\tnumberArray.sort(function(a,b){return a-b});\n\tstringArray = [];\n\tfor\
    \ (var i = 0; i < numberArray.length; i++) {\n\t\tfor (var key in numHash) {\n\
    \t\t\tif (numHash[key] === numberArray[i]) {\n\t\t\t\tstringArray.push(key);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn stringArray.join(' ');\n}\n", "  var convert = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var numSort = numbers.split(' ').sort(function(a, b){return convert[a]\
    \ - convert[b]});\n  return numSort.join(' ');\n}\n", "  let nums = numbers.split('\
    \ ')\n  let numstr = nums.map(function(num){\n    switch(num){\n      case 'zero':\n\
    \        return 0\n      case 'one':\n        return 1\n      case 'two':\n  \
    \      return 2\n      case 'three':\n        return 3\n      case 'four':\n \
    \       return 4\n      case 'five':\n        return 5\n      case 'six':\n  \
    \      return 6\n      case 'seven':\n        return 7\n      case 'eight':\n\
    \        return 8\n      case 'nine':\n        return 9\n    }\n  })\n  numstr.sort(function(a,b){\n\
    \    return a-b\n  })\n  return numstr.join(' ')\n}\n", "  //final answer\n  var\
    \ answer='';\n  //split the array into an array of strings\n  var arr = numbers.split('\
    \ ');\n  //store the numbers in string form, not number form\n  var toSort=['one','two','three','four','five','six','seven','eight','nine','zero'];\n\
    \  //first sort the array\n  var sorted = arr.sort();\n  //loop through the array\
    \ and compare the indexOf the value in the toSort array with the index in the\
    \ sorted array\n  for(var i=0;i<sorted.length;i++){\n    for(var j=0;j<toSort.length;j++){\n\
    \      if(toSort.indexOf(sorted[i])===j){\n        answer=answer+' '+sorted[i];\n\
    \      }\n    }\n  }\n  return answer.trim();\n}", "  let nums = {\n    'zero':\
    \ 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five':\
    \ 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  }\n  //console.log(nums['zero']);\n\
    \  let arr = numbers.split(' ');\n  let sortArr = [];\n  for(let i = 0; i < arr.length;\
    \ i++){\n    sortArr.push(nums[arr[i]]);\n  }\n  sortArr.sort(function(a, b){return\
    \ a-b});\n  let output = '';\n  for(let i = 0; i < sortArr.length; i++){\n   \
    \ for(let key in nums){\n      if(nums[key] === sortArr[i]){\n        output =\
    \ output + ' ' + key;\n      }\n    }\n  }\n  output = output.trim();\n  return\
    \ output;\n}\n", "  var nums = numbers.split(' ');\n  for(var i = 0; i < nums.length;\
    \ i++){\n    nums[i] = switch_numeral(nums[i]);\n  }\n  nums.sort(function(a,\
    \ b){\n    return a - b;\n  });\n  for(var j = 0; j < nums.length; j++){\n   \
    \ nums[j] = reverse_switch_numeral(nums[j]);\n  }\n  return nums.join(' ');\n\
    }\n", "  var words = numbers.split(' ');\n  var numbers = [];\n  for(var i = 0;\
    \ i < words.length; i++){\n    if(words[i] === 'zero') numbers.push(0);\n    if(words[i]\
    \ === 'one') numbers.push(1);\n    if(words[i] === 'two') numbers.push(2);\n \
    \   if(words[i] === 'three') numbers.push(3);\n    if(words[i] === 'four') numbers.push(4);\n\
    \    if(words[i] === 'five') numbers.push(5);\n    if(words[i] === 'six') numbers.push(6);\n\
    \    if(words[i] === 'seven') numbers.push(7);\n    if(words[i] === 'eight') numbers.push(8);\n\
    \    if(words[i] === 'nine') numbers.push(9);\n  }\n  numbers.sort(function(a,\
    \ b){return a - b});\n  for(var i = 0; i < numbers.length; i++){\n    if(numbers[i]\
    \ === 0) numbers[i] = 'zero';\n    if(numbers[i] === 1) numbers[i] = 'one';\n\
    \    if(numbers[i] === 2) numbers[i] = 'two';\n    if(numbers[i] === 3) numbers[i]\
    \ = 'three';\n    if(numbers[i] === 4) numbers[i] = 'four';\n    if(numbers[i]\
    \ === 5) numbers[i] = 'five';\n    if(numbers[i] === 6) numbers[i] = 'six';\n\
    \    if(numbers[i] === 7) numbers[i] = 'seven';\n    if(numbers[i] === 8) numbers[i]\
    \ = 'eight';\n    if(numbers[i] === 9) numbers[i] = 'nine';\n  }\n  return numbers.join('\
    \ ');\n}\n", "  // need to use regex to check if the input contains values that\
    \ are not valid?\n  // if (/^[^0-9]+$/.test(numbers)) {\n  //   return 'Invalid\
    \ input';\n  // }\n  // split the string into an array of numbers\n  let arr =\
    \ numbers.split(' ');\n  // sort the numbers in ascending order\n  let sorted\
    \ = arr.sort((a, b) => {\n    let map = {\n      'zero': 0,\n      'one': 1,\n\
    \      'two': 2,\n      'three': 3,\n      'four': 4,\n      'five': 5,\n    \
    \  'six': 6,\n      'seven': 7,\n      'eight': 8,\n      'nine': 9\n    };\n\
    \    return map[a] - map[b];\n  });\n  // return a space-delimited string of the\
    \ numbers\n  return sorted.join(' ');\n}\n", "   return numbers.split(' ').sort(function(a,b){return\
    \ num_to_numeral(a) > num_to_numeral(b);}).join(' ');\n}\n", "  return numbers.split('\
    \ ').sort(function(a, b){\n    return convert_to_number(a) - convert_to_number(b);\n\
    \  }).join(' ');\n}\n", "  var order = ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'];\n  return numbers.split(' ').sort(function(a,\
    \ b){\n    return order.indexOf(a) - order.indexOf(b);\n  }).join(' ');\n}\n",
  "    //I believe this is a case where it is easiest to work with a dictionary\n\
    \    let nums = {\"zero\":0, \"one\":1, \"two\":2, \"three\":3, \"four\":4, \"\
    five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9};\n    //Our output\
    \ will be a string, so declare it\n    let output = \"\";\n    //Split the numbers\
    \ into an array\n    numbers = numbers.split(\" \");\n    //Create a new array\
    \ of the number values\n    let num_values = numbers.map(function(n){\n      \
    \  return nums[n];\n    });\n    //Sort the array\n    num_values.sort(function(a,b){\n\
    \        return a-b;\n    });\n    //Map the sorted numbers back to their words\n\
    \    for(let i=0; i<num_values.length; i++){\n        for(let key in nums){\n\
    \            if(nums[key]==num_values[i]){\n                output += key + \"\
    \ \";\n            }\n        }\n    }\n    //Remove the extra space at the end\n\
    \    output = output.substring(0, output.length-1);\n    return output;\n}\n\n\
    module.exports = {\n    number_to_word: number_to_word,\n    word_to_number: word_to_number,\n\
    \    sort_numbers: sort_numbers\n};", "    let numArray = numbers.split(' ');\n\
    \    let numObj = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five':\
    \ 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    let numList = [];\n   \
    \ for (let i = 0; i < numArray.length; i++){\n        numList.push(numObj[numArray[i]]);\n\
    \    }\n    numList.sort(function(a, b){return a-b});\n    for (let i = 0; i <\
    \ numList.length; i++){\n        for (let key in numObj){\n            if (numObj[key]\
    \ === numList[i]){\n                numList[i] = key;\n            }\n       \
    \ }\n    }\n    return numList.join(' ');\n}", "  const num_map = {zero: 0, one:\
    \ 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight: 8, nine: 9};\n\
    \  const num_array = numbers.split(' ');\n  return num_array.sort((a, b) => {\n\
    \    return num_map[a] - num_map[b];\n  }).join(' ');\n}\n\n", "    return numbers.split('\
    \ ').sort((a,b) => number_to_name(a) - number_to_name(b)).join(' ');\n}", "  var\
    \ nums = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n  \
    \  'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n\
    \    'nine': 9\n  };\n  var sortable = numbers.split(' ').map(function(n){\n \
    \   return nums[n];\n  }).sort(function(a, b){\n    return a - b;\n  });\n  return\
    \ sortable.map(function(n){\n    for(var key in nums){\n      if(nums[key] ===\
    \ n){\n        return key;\n      }\n    }\n  }).join(' ');\n}\n", "  let nums\
    \ = numbers.split(' ');\n  let numHash = {\n    zero: 0,\n    one: 1,\n    two:\
    \ 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n\
    \    eight: 8,\n    nine: 9\n  };\n  let sorted = nums.sort((a, b) => numHash[a]\
    \ - numHash[b]);\n  return sorted.join(' ');\n}", "  var validNumbers = ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n \
    \ var numWords = numbers.split(' ');\n  var nums = [];\n  numWords.forEach(function(numWord){\n\
    \    if(validNumbers.indexOf(numWord) > -1){\n      nums.push(validNumbers.indexOf(numWord));\n\
    \    }\n  });\n  return nums.sort().map(function(num){\n    return validNumbers[num];\n\
    \  }).join(' ');\n}\n", "  var num = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n  return numbers.split('\
    \ ').sort(function(a,b){\n    return num[a] - num[b];\n  }).join(' ');\n}\n",
  "\t// convert input string to array\n\tvar to_array = numbers.split(\" \");\n\t\
    // parse each item of the array, add it to the sorted array, then sort the sorted\
    \ array\n\tvar sorted_array = [];\n\tfor (var i = 0; i < to_array.length; i++)\
    \ {\n\t\tswitch (to_array[i]) {\n\t\t\tcase \"zero\":\n\t\t\t\tsorted_array.push(0);\n\
    \t\t\t\tbreak;\n\t\t\tcase \"one\":\n\t\t\t\tsorted_array.push(1);\n\t\t\t\tbreak;\n\
    \t\t\tcase \"two\":\n\t\t\t\tsorted_array.push(2);\n\t\t\t\tbreak;\n\t\t\tcase\
    \ \"three\":\n\t\t\t\tsorted_array.push(3);\n\t\t\t\tbreak;\n\t\t\tcase \"four\"\
    :\n\t\t\t\tsorted_array.push(4);\n\t\t\t\tbreak;\n\t\t\tcase \"five\":\n\t\t\t\
    \tsorted_array.push(5);\n\t\t\t\tbreak;\n\t\t\tcase \"six\":\n\t\t\t\tsorted_array.push(6);\n\
    \t\t\t\tbreak;\n\t\t\tcase \"seven\":\n\t\t\t\tsorted_array.push(7);\n\t\t\t\t\
    break;\n\t\t\tcase \"eight\":\n\t\t\t\tsorted_array.push(8);\n\t\t\t\tbreak;\n\
    \t\t\tcase \"nine\":\n\t\t\t\tsorted_array.push(9);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\
    \t\t\t\tsorted_array.push(0);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tsorted_array.sort(function(a,\
    \ b){return a-b});\n\t// convert sorted array back to string\n\tvar sorted_string\
    \ = sorted_array.toString();\n\t// convert string to returnable format\n\tvar\
    \ to_return = sorted_string.replace(/,/g, \" \");\n\treturn to_return;\n}\n",
  "    var digits = numbers.split(' ');\n    var numbers = [];\n    var sorted = [];\n\
    \    for (i = 0; i < digits.length; i++){\n        switch (digits[i]){\n     \
    \       case 'zero':\n                numbers.push(0);\n                break;\n\
    \            case 'one':\n                numbers.push(1);\n                break;\n\
    \            case 'two':\n                numbers.push(2);\n                break;\n\
    \            case 'three':\n                numbers.push(3);\n               \
    \ break;\n            case 'four':\n                numbers.push(4);\n       \
    \         break;\n            case 'five':\n                numbers.push(5);\n\
    \                break;\n            case 'six':\n                numbers.push(6);\n\
    \                break;\n            case 'seven':\n                numbers.push(7);\n\
    \                break;\n            case 'eight':\n                numbers.push(8);\n\
    \                break;\n            case 'nine':\n                numbers.push(9);\n\
    \                break;\n        }\n    }\n    for (i = 0; i < numbers.length;\
    \ i++){\n        for (j = i + 1; j < numbers.length; j++){\n            if (numbers[i]\
    \ > numbers[j]){\n                var temp = numbers[i];\n                numbers[i]\
    \ = numbers[j];\n                numbers[j] = temp;\n            }\n        }\n\
    \    }\n    for (i = 0; i < numbers.length; i++){\n        switch (numbers[i]){\n\
    \            case 0:\n                sorted.push('zero');\n                break;\n\
    \            case 1:\n                sorted.push('one');\n                break;\n\
    \            case 2:\n                sorted.push('two');\n                break;\n\
    \            case 3:\n                sorted.push('three');\n                break;\n\
    \            case 4:\n                sorted.push('four');\n                break;\n\
    \            case 5:\n                sorted.push('five');\n                break;\n\
    \            case 6:\n                sorted.push('six');\n                break;\n\
    \            case 7:\n                sorted.push('seven');\n                break;\n\
    \            case 8:\n                sorted.push('eight');\n                break;\n\
    \            case 9:\n               ", "    var sortArr = numbers.split(' ');\n\
    \    return sortArr.sort(function(a,b){\n        if(translate(a) < translate(b)){\n\
    \            return -1;\n        }\n        if(translate(a) > translate(b)){\n\
    \            return 1;\n        }\n        return 0;\n    }).join(' ');\n}\n",
  "  let number_map = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three':\
    \ 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight':\
    \ 8,\n    'nine': 9\n  };\n  return numbers.split(' ').sort((a, b) => {\n    return\
    \ number_map[a] - number_map[b];\n  }).join(' ');\n}\n", "  var obj = {\n    'zero':\
    \ 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five':\
    \ 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n \
    \ var numArray = numbers.split(' ');\n  var numArrayInt = numArray.map(function(item)\
    \ {\n    return obj[item];\n  });\n  numArrayInt.sort(function(a, b) {\n    return\
    \ a - b;\n  });\n  var sortedString = numArrayInt.map(function(num) {\n    for\
    \ (key in obj) {\n      if (obj[key] === num) {\n        return key;\n      }\n\
    \    }\n  });\n  return sortedString.join(' ');\n}\n", "  let splitNumbers = numbers.split('\
    \ ');\n  let numberObject = {};\n  let numberArray = [];\n  for (i = 0; i < splitNumbers.length;\
    \ i++) {\n    if(splitNumbers[i] == 'zero'){\n      numberObject[0] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'one'){\n      numberObject[1] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'two'){\n      numberObject[2] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'three'){\n      numberObject[3] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'four'){\n      numberObject[4] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'five'){\n      numberObject[5] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'six'){\n      numberObject[6] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'seven'){\n      numberObject[7] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'eight'){\n      numberObject[8] = splitNumbers[i];\n\
    \    } else if (splitNumbers[i] == 'nine'){\n      numberObject[9] = splitNumbers[i];\n\
    \    }\n  }\n  numberArray = Object.values(numberObject).join(' ');\n  return\
    \ numberArray;\n}\n", "  // Your code goes here\n  \n  var nums = numbers.split(\"\
    \ \");\n  var nums2 = []\n  for (var i=0; i<nums.length; i++){\n    if (nums[i]\
    \ == \"zero\"){\n      nums2.push(0);\n    }\n    else if (nums[i] == \"one\"\
    ){\n      nums2.push(1);\n    }\n    else if (nums[i] == \"two\"){\n      nums2.push(2);\n\
    \    }\n    else if (nums[i] == \"three\"){\n      nums2.push(3);\n    }\n   \
    \ else if (nums[i] == \"four\"){\n      nums2.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums2.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums2.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n      nums2.push(7);\n\
    \    }\n    else if (nums[i] == \"eight\"){\n      nums2.push(8);\n    }\n   \
    \ else if (nums[i] == \"nine\"){\n      nums2.push(9);\n    }\n  }\n  nums2.sort(function(a,\
    \ b){return a-b});\n  var nums3 = []\n  for (var i=0; i<nums2.length; i++){\n\
    \    if (nums2[i] == 0){\n      nums3.push(\"zero\");\n    }\n    else if (nums2[i]\
    \ == 1){\n      nums3.push(\"one\");\n    }\n    else if (nums2[i] == 2){\n  \
    \    nums3.push(\"two\");\n    }\n    else if (nums2[i] == 3){\n      nums3.push(\"\
    three\");\n    }\n    else if (nums2[i] == 4){\n      nums3.push(\"four\");\n\
    \    }\n", "  let nums = numbers.split(' ');\n  return nums.sort((a, b) => {\n\
    \    if (a == 'zero') a = 0;\n    if (a == 'one') a = 1;\n    if (a == 'two')\
    \ a = 2;\n    if (a == 'three') a = 3;\n    if (a == 'four') a = 4;\n    if (a\
    \ == 'five') a = 5;\n    if (a == 'six') a = 6;\n    if (a == 'seven') a = 7;\n\
    \    if (a == 'eight') a = 8;\n    if (a == 'nine') a = 9;\n    if (b == 'zero')\
    \ b = 0;\n    if (b == 'one') b = 1;\n    if (b == 'two') b = 2;\n    if (b ==\
    \ 'three') b = 3;\n    if (b == 'four') b = 4;\n    if (b == 'five') b = 5;\n\
    \    if (b == 'six') b = 6;\n    if (b == 'seven') b = 7;\n    if (b == 'eight')\
    \ b = 8;\n    if (b == 'nine') b = 9;\n    return a - b;\n  }).join(' ');\n}\n",
  "  //TODO: implement me\n}\n", "    return numbers.split(' ').sort(function(a, b){\n\
    \        return numberals[a] - numberals[b];\n    }).join(' ');\n}\n", "  var\
    \ sortedArray = numbers.split(' ').sort(function(a, b){\n    return fromWordToNum(a)\
    \ - fromWordToNum(b);\n  });\n  return sortedArray.join(' ');\n}\n\n\nvar numbers\
    \ = 'three eight five zero four nine one seven six two';", "  numbers = numbers.split('\
    \ ');\n  var one = numbers.indexOf('one');\n  var two = numbers.indexOf('two');\n\
    \  var three = numbers.indexOf('three');\n  var four = numbers.indexOf('four');\n\
    \  var five = numbers.indexOf('five');\n  var six = numbers.indexOf('six');\n\
    \  var seven = numbers.indexOf('seven');\n  var eight = numbers.indexOf('eight');\n\
    \  var nine = numbers.indexOf('nine');\n  var zero = numbers.indexOf('zero');\n\
    \  var sorted_numbers = '';\n  for (var i = zero; i < numbers.length; i++) {\n\
    \    if (i == one || i == two || i == three || i == four || i == five || i ==\
    \ six || i == seven || i == eight || i == nine || i == zero) {\n      sorted_numbers\
    \ += numbers[i] + ' ';\n    }\n  }\n  return sorted_numbers.trim();\n}", "   \
    \ var numbers_array = numbers.split(\" \");\n    var number_names = [\"zero\"\
    , \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"\
    , \"nine\"];\n    var sorted_array = numbers_array.sort(function(a, b){\n    \
    \    return number_names.indexOf(a) - number_names.indexOf(b);\n    });\n    return\
    \ sorted_array.join(\" \");\n}\n\nmodule.exports = {\n    is_palindrome: is_palindrome,\n\
    \    is_isogram: is_isogram,\n    sort_numbers: sort_numbers\n};", "\tvar array\
    \ = numbers.split(\" \");\n\tvar nums = array.map(function(a){\n\t\tswitch(a){\n\
    \t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\
    \t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\
    \t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\
    \t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\
    \t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\
    \t}\n\t});\n\tvar sorted = nums.sort(function(a,b){\n\t\treturn a-b;\n\t});\n\t\
    var words = sorted.map(function(a){\n\t\tswitch(a){\n\t\t\tcase 0:\n\t\t\t\treturn\
    \ 'zero';\n\t\t\tcase 1:\n\t\t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn\
    \ 'two';\n\t\t\tcase 3:\n\t\t\t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn\
    \ 'four';\n\t\t\tcase 5:\n\t\t\t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn\
    \ 'six';\n\t\t\tcase 7:\n\t\t\t\treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn\
    \ 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn 'nine';\n\t\t}\n\t});\n\tvar ans = words.join(\"\
    \ \");\n\treturn ans;\n}", "  let numberals = {\n    'zero': 0,\n    'one': 1,\n\
    \    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n\
    \    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  }\n  return numbers.split('\
    \ ').sort((a, b) => numberals[a] - numberals[b]).join(' ')\n}\n", "  var converted\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9};\n  var numList = numbers.split(' ');\n \
    \ var numNums = [];\n  for (var num in numList){\n    numNums.push(converted[numList[num]]);\n\
    \  }\n  numNums.sort(function(a, b){return a-b});\n  for (var num in numNums){\n\
    \    numList[num] = Object.keys(converted)[numNums[num]];\n  }\n  return numList.join('\
    \ ');\n}\n", "\tvar num = numbers.split(' ');\n\tvar nums = ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\tvar inNums = [];\n\
    \tvar outNums = [];\n\tvar outStr = '';\n\tfor(var i = 0; i < num.length; i++){\n\
    \t\tinNums.push(nums.indexOf(num[i]));\n\t}\n\tinNums.sort(function(a, b){return\
    \ a-b});\n\tfor(var i = 0; i < inNums.length; i++){\n\t\toutNums.push(nums[inNums[i]]);\n\
    \t}\n\tfor(var i = 0; i < outNums.length; i++){\n\t\toutStr += outNums[i];\n\t\
    \tif(i != outNums.length - 1){\n\t\t\toutStr += ' ';\n\t\t}\n\t}\n\treturn outStr;\n\
    }\n", "  //Split numbers by spaces\n  var numbersSplit = numbers.split(\" \");\n\
    \  //Initialize empty array to hold sorted numbers\n  var numbersSorted = [];\n\
    \  //Loop over each number\n  for (var num in numbersSplit){\n    //If the number\
    \ matches one of the words in the dictionary, then it should get translated.\n\
    \    if (numbersSplit[num] in number_words){\n      //Add the translated number\
    \ to the array holding the sorted numbers\n      numbersSorted.push(number_words[numbersSplit[num]]);\n\
    \    }\n  }\n  //Sort the array of numbers\n  numbersSorted.sort(function(a, b){return\
    \ a-b});\n  //Initialize empty array to hold the translated version of the numbers\
    \ in the proper order\n  var numbersSortedTranslated = [];\n  //Loop over each\
    \ number in the sorted array\n  for (var num in numbersSorted){\n    //Loop over\
    \ each number in the dictionary\n    for (var d in number_words){\n      //If\
    \ the dictionary number is the same as the sorted number\n      if (number_words[d]\
    \ == numbersSorted[num]){\n        //Add the translated number to the translated\
    \ array\n        numbersSortedTranslated.push(d);\n      }\n    }\n  }\n  //Turn\
    \ the translated array into a string\n  var numbersSortedTranslatedString = numbersSortedTranslated.join(\"\
    \ \");\n  //Return the string\n  return numbersSortedTranslatedString;\n}\n",
  "  var num_map = {\"zero\":0, \"one\":1, \"two\":2, \"three\":3, \"four\":4, \"\
    five\":5, \"six\":6, \"seven\":7, \"eight\":8, \"nine\":9};\n  var num_list =\
    \ numbers.split(\" \");\n  var sorted_nums = [];\n  for(var i = 0; i < num_list.length;\
    \ i++){\n    var num = num_list[i];\n    if(num_map[num] == undefined){\n    \
    \  return \"invalid input\";\n    }else{\n      sorted_nums.push(num_map[num]);\n\
    \    }\n  }\n  sorted_nums.sort(function(a,b){return a-b});\n  for(var i = 0;\
    \ i < sorted_nums.length; i++){\n    sorted_nums[i] = get_word(sorted_nums[i]);\n\
    \  }\n  return sorted_nums.join(\" \");\n}\n", "\tvar map = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n\
    \tnumbers = numbers.split(' ');\n\tfor(var i = 0; i < numbers.length; i++){\n\t\
    \tnumbers[i] = map[numbers[i]];\n\t}\n\tnumbers.sort(function(a,b){return a-b});\n\
    \tfor(var i = 0; i < numbers.length; i++){\n\t\tnumbers[i] = Object.keys(map)[numbers[i]];\n\
    \t}\n\treturn numbers.join(' ');\n}\n", "\tvar nums = numbers.split(' '),\n\t\t\
    m = {zero: 0, one: 1, two: 2, three: 3, four: 4, five: 5, six: 6, seven: 7, eight:\
    \ 8, nine: 9},\n\t\tsorted = nums.sort(function(a, b){return m[a] - m[b];});\n\
    \treturn sorted.join(' ');\n}\n", "  var ref = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  return numbers.split(' ').sort(function(a,\
    \ b){\n    return ref[a] - ref[b];\n  }).join(' ');\n}\n", "  var num_dict = {\n\
    \    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n\
    \    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var num_arr = numbers.split(' ');\n  var ans = num_arr.sort(function(a,\
    \ b){return num_dict[a] - num_dict[b]});\n  return ans.join(' ');\n}\n", "  const\
    \ ord = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n   \
    \ 'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n\
    \    'nine': 9\n  }\n  let list = numbers.split(' ');\n  list.sort((a, b) => ord[a]\
    \ - ord[b]);\n  return list.join(' ');\n}\n", "  var num_map = {zero:0, one:1,\
    \ two:2, three:3, four:4, five:5, six:6, seven:7, eight:8, nine:9};\n  var num_arr\
    \ = numbers.split(' ');\n  num_arr.sort(function(a,b){return num_map[a] - num_map[b]});\n\
    \  return num_arr.join(' ');\n}\n", "  return numbers.split(' ').sort((a, b) =>\
    \ number_to_numeral[a] - number_to_numeral[b]).join(' ');\n}\n", "    var nums\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"];\n    var inp = numbers.split(\" \");\n    var out = [];\n\
    \    for(var i = 0; i < inp.length; i++){\n        out.push(nums.indexOf(inp[i]));\n\
    \    }\n    out.sort(function(a, b){return a-b});\n    for(var i = 0; i < out.length;\
    \ i++){\n        out[i] = nums[out[i]];\n    }\n    return out.join(\" \");\n\
    }\n", "  // map the numbers to their numerical equivalent\n  let nums = numbers.split('\
    \ ').map( (n) => {\n    switch(n){\n      case 'zero':\n        return 0;\n  \
    \    case 'one':\n        return 1;\n      case 'two':\n        return 2;\n  \
    \    case 'three':\n        return 3;\n      case 'four':\n        return 4;\n\
    \      case 'five':\n        return 5;\n      case 'six':\n        return 6;\n\
    \      case 'seven':\n        return 7;\n      case 'eight':\n        return 8;\n\
    \      case 'nine':\n        return 9;\n    }\n  });\n  // sort the array of numbers\n\
    \  let sortedNums = nums.sort( (a,b) => {\n    return a - b;\n  });\n  // map\
    \ back to their string representations\n  return sortedNums.map( (n) => {\n  \
    \  switch(n){\n      case 0:\n        return 'zero';\n      case 1:\n        return\
    \ 'one';\n      case 2:\n        return 'two';\n      case 3:\n        return\
    \ 'three';\n      case 4:\n        return 'four';\n      case 5:\n        return\
    \ 'five';\n      case 6:\n        return 'six';\n      case 7:\n        return\
    \ 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n        return\
    \ 'nine';\n    }\n  }).join(' ');\n}\n", "    const NUMBERAL_MAP = {\n       \
    \ 'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n    \
    \    'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9\n    };\n    return numbers.split(' ').sort((a,\
    \ b) => NUMBERAL_MAP[a] - NUMBERAL_MAP[b]).join(' ');\n}", "    var num_dict =\
    \ {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three':\
    \ 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven':\
    \ 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var num_words = numbers.split('\
    \ ');\n    var num_array = [];\n    var val;\n    for (var i = 0; i < num_words.length;\
    \ i++){\n        val = num_dict[num_words[i]];\n        num_array.push(val);\n\
    \    }\n    num_array.sort(function(a, b){\n        return a - b;\n    });\n \
    \   var sorted_num_array = [];\n    for (var key in num_dict){\n        for (var\
    \ i = 0; i < num_array.length; i++){\n            if (num_dict[key] === num_array[i]){\n\
    \                sorted_num_array.push(key);\n            }\n        }\n    }\n\
    \    return sorted_num_array.join(' ');\n}\n", "\tvar numStr = ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n\tvar numberList\
    \ = numbers.split(' ');\n\t// Sort the string from smallest to largest\n\tnumberList.sort(function(a,\
    \ b){\n\t\treturn numStr.indexOf(a) - numStr.indexOf(b);\n\t});\n\treturn numberList.join('\
    \ ');\n}\n", "  const numeralMap = {\n    'zero': 0,\n    'one': 1,\n    'two':\
    \ 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven':\
    \ 7,\n    'eight': 8,\n    'nine': 9\n  };\n  let numsArray = numbers.split('\
    \ ');\n  let numsArrayNumeral = numsArray.map(word => numeralMap[word]);\n  let\
    \ sortedNumsArray = numsArrayNumeral.sort((a, b) => a - b);\n  let sortedNumsString\
    \ = sortedNumsArray.map(num => numeralMap[num]);\n  return sortedNumsString.join('\
    \ ');\n}\n", "  let num_map = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4,\
    \ 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n  let num_array = numbers.split('\
    \ ')\n  let sorted_num_array = num_array.sort((a,b) => {\n    return num_map[a]\
    \ - num_map[b]\n  })\n  return sorted_num_array.join(' ')\n}\n", "  numbers =\
    \ numbers.split(' ');\n  var nums = {\n    \"zero\": 0,\n    \"one\": 1,\n   \
    \ \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\"\
    : 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  var sortedNums\
    \ = numbers.sort(function(a, b){\n    return nums[a] - nums[b];\n  });\n  return\
    \ sortedNums.join(' ');\n}\n", "  var num = numbers.split(' ');\n  var obj = {};\n\
    \  var result = '';\n  for(var i = 0; i < num.length; i++){\n    if(num[i] ===\
    \ 'zero'){\n      obj[0] = num[i];\n    } else if(num[i] === 'one'){\n      obj[1]\
    \ = num[i];\n    } else if(num[i] === 'two'){\n      obj[2] = num[i];\n    } else\
    \ if(num[i] === 'three'){\n      obj[3] = num[i];\n    } else if(num[i] === 'four'){\n\
    \      obj[4] = num[i];\n    } else if(num[i] === 'five'){\n      obj[5] = num[i];\n\
    \    } else if(num[i] === 'six'){\n      obj[6] = num[i];\n    } else if(num[i]\
    \ === 'seven'){\n      obj[7] = num[i];\n    } else if(num[i] === 'eight'){\n\
    \      obj[8] = num[i];\n    } else if(num[i] === 'nine'){\n      obj[9] = num[i];\n\
    \    }\n  }\n  var keys = Object.keys(obj);\n  keys.sort(function(a, b){\n   \
    \ return a - b;\n  });\n  for(var j = 0; j < keys.length; j++){\n    result +=\
    \ obj[keys[j]] + ' ';\n  }\n  return result.trim();\n}\n", "    let numeral_map\
    \ = {\n        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n\
    \        four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n    \
    \    eight: 8,\n        nine: 9\n    };\n    let nums = numbers.split(' ');\n\
    \    let numbers_array = [];\n    for(let i=0; i<nums.length; i++){\n        numbers_array.push(numeral_map[nums[i]]);\n\
    \    }\n    numbers_array.sort(function(a, b){return a-b});\n    for(let i=0;\
    \ i<numbers_array.length; i++){\n        numbers_array[i] = Object.keys(numeral_map).find(key\
    \ => numeral_map[key] === numbers_array[i]);\n    }\n    return numbers_array.join('\
    \ ');\n}\n", "    return numbers.split(' ').sort((a,b) => numeral_map[a]-numeral_map[b]).join('\
    \ ');\n}\n", "  // sort the given numbers\n  // return the sorted numbers\n  \n\
    \  var numbers = numbers.split(' ');\n  var sortedNumerals = [];\n  var sortedNumbers\
    \ = [];\n  var numerals = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n  \
    \  'three': 3,\n    'four': 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n\
    \    'eight': 8,\n    'nine': 9\n  };\n  \n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    sortedNumerals.push(numerals[numbers[i]]);\n  }\n  \n  sortedNumerals.sort(function(a,\
    \ b) {\n    return a - b;\n  });\n  \n  for (var i = 0; i < sortedNumerals.length;\
    \ i++) {\n    for (var key in numerals) {\n      if (numerals[key] === sortedNumerals[i])\
    \ {\n        sortedNumbers.push(key);\n      }\n    }\n  }\n  \n  return sortedNumbers.join('\
    \ ');\n}\n", "  var nums = {zero:0, one:1, two:2, three:3, four:4, five:5, six:6,\
    \ seven:7, eight:8, nine:9};\n  var result = [];\n  var arr = numbers.split('\
    \ ');\n  arr.forEach(function(num){\n    result.push(nums[num]);\n  });\n  return\
    \ result.sort().map(function(num){\n    for(var n in nums){\n      if(nums[n]\
    \ === num){\n        return n;\n      }\n    }\n  }).join(' ');\n}\n", "  var\
    \ numLookup = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6,\
    \ 'seven':7, 'eight':8, 'nine':9};\n  var nums = numbers.split(' ');\n  var nums1\
    \ = [];\n  for(var i = 0; i < nums.length; i++){\n    nums1.push(numLookup[nums[i]]);\n\
    \  }\n  nums1.sort(function(a,b){return a-b});\n  for(var j = 0; j < nums1.length;\
    \ j++){\n    nums1[j] = nums[nums1[j]];\n  }\n  return nums1.join(' ');\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_107_even_odd_palindrome
language: js
prompt: "//Given a positive integer n, return a tuple that has the number of even\
  \ and odd\n// integer palindromes that fall within the range(1, n), inclusive.\n\
  // Example 1:\n// Explanation:\n// Integer palindrome are 1, 2, 3. one of them is\
  \ even, and two of them are odd.\n// Example 2:\n// Explanation:\n// Integer palindrome\
  \ are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n\
  // Note:\n// 1. 1 <= n <= 10^3\n// 2. returned tuple has the number of even and\
  \ odd integer palindromes respectively.\nfunction even_odd_palindrome(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = even_odd_palindrome;\n  assert.deepEqual(candidate(123),[8, 13]);\n  assert.deepEqual(candidate(12),[4,\
  \ 6]);\n  assert.deepEqual(candidate(3),[1, 2]);\n  assert.deepEqual(candidate(63),[6,\
  \ 8]);\n  assert.deepEqual(candidate(25),[5, 6]);\n  assert.deepEqual(candidate(19),[4,\
  \ 6]);\n  assert.deepEqual(candidate(9),[4, 5]);\n  assert.deepEqual(candidate(1),[0,\
  \ 1]);\n}\n\ntest();"
completions: ["  if(!n || n < 1 || n > 10**3)\n    return [];\n  let c1 = 0, c2 =\
    \ 0;\n  for(let i = 1; i <= n; i++){\n    let s = `${i}`;\n    let l = 0, r =\
    \ s.length - 1;\n    while(l < r){\n      if(s[l] !== s[r])\n        break;\n\
    \      l++;\n      r--;\n    }\n    if(l >= r){\n      if(i % 2 === 0)\n     \
    \   c1++;\n      else\n        c2++;\n    }\n  }\n  return [c1, c2];\n}", "  \
    \  let odd = 0, even = 0;\n    for(let i = 1; i <= n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}", "  let even = 0;\n  let\
    \ odd = 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i.toString().length\
    \ % 2 === 0){\n        even += 1;\n      } else {\n        odd += 1;\n      }\n\
    \    }\n  }\n  return [even, odd];\n}\n", "    var count_even = 0;\n    var count_odd\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        if(is_palindrome(i)){\n     \
    \       if(i%2 == 0){\n                count_even++;\n            }else{\n   \
    \             count_odd++;\n            }\n        }\n    }\n    return [count_even,\
    \ count_odd];\n}\n", "  let odd = 0;\n  let even = 0;\n  for(let i = 1; i <= n;\
    \ i++){\n    if(is_palindrome(i.toString())){\n      if(i % 2 === 0){\n      \
    \  even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "  let [even, odd] = [0, 0];\n  for(let i = 1; i <= n; i++){\n\
    \    if(isPalindrome(i)){\n      if(i % 2 === 0){\n        even++;\n      } else\
    \ {\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n", "    var\
    \ even = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        var num\
    \ = i.toString();\n        if(num === num.split('').reverse().join('')){\n   \
    \         num.length % 2 === 0 ? even++ : odd++;\n        }\n    }\n    return\
    \ [even, odd];\n}", "\tlet even = 0;\n\tlet odd = 0;\n\tfor(let i = 1; i <= n;\
    \ i++){\n\t\tif(is_palindrome(i)){\n\t\t\ti % 2 === 0 ? even++ : odd++;\n\t\t\
    }\n\t}\n\treturn [even, odd];\n}\n", "  let even = 0;\n  let odd = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i % 2 === 0){\n   \
    \     even++;\n      } else {\n        odd++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n;\
    \ i++){\n        let current = i.toString();\n        if(current.length % 2 ===\
    \ 0){\n            let left = 0;\n            let right = current.length - 1;\n\
    \            while(left < right){\n                if(current[left] === current[right]){\n\
    \                    left++;\n                    right--;\n                }\n\
    \                else{\n                    break;\n                }\n      \
    \      }\n            if(left >= right){\n                even++;\n          \
    \  }\n        }\n        else{\n            let left = 0;\n            let right\
    \ = current.length - 1;\n            while(left < right){\n                if(current[left]\
    \ === current[right]){\n                    left++;\n                    right--;\n\
    \                }\n                else{\n                    break;\n      \
    \          }\n            }\n            if(left >= right){\n                odd++;\n\
    \            }\n        }\n    }\n    return [even, odd];\n}", "  var odd = 0;\n\
    \  var even = 0;\n  for(var i = 1; i <= n; i++){\n    var string = i.toString();\n\
    \    if(string === string.split('').reverse().join('')){\n      if(string.length\
    \ % 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}", "  let even = 0;\n  let odd = 0;\n  for(let i\
    \ = 1; i <= n; i++){\n    let str = String(i);\n    let len = str.length;\n  \
    \  if(len === 1){\n      odd++;\n    }else if(len === 2){\n      if(str[0] ===\
    \ str[1]){\n        even++;\n      }else{\n        odd++;\n      }\n    }else{\n\
    \      if(str[0] === str[len - 1]){\n        if(str[0] === str[len - 2]){\n  \
    \        even++;\n        }else{\n          odd++;\n        }\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "  if(typeof n !== 'number' || n <= 0) return\
    \ false;\n  let even = 0;\n  let odd = 0;\n  let s = n.toString();\n  let start\
    \ = Math.pow(10, s.length - 1);\n  let i = start;\n  while(i <= n){\n    if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n      if(i.toString().length\
    \ % 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \    i++;\n  }\n  return [even, odd];\n}", "    var evenCount = 0;\n    var oddCount\
    \ = 0;\n    for(var i = 0; i < n; i++){\n        if(isPalindrome(i)){\n      \
    \      if(i % 2 === 0){\n                evenCount++;\n            } else {\n\
    \                oddCount++;\n            }\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n;\
    \ i++){\n    if(is_palindrome(i)){\n      if(i % 2 === 0){\n        even++;\n\
    \      } else {\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n\
    }\n", "  var even = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(i\
    \ == 1){\n      odd++;\n    }\n    if(is_palindrome(i)){\n      if(i % 2 == 0){\n\
    \        even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  console.log(`even\
    \ : ${even}`);\n  console.log(`odd : ${odd}`);\n}\n", "    let odd = 0;\n    let\
    \ even = 0;\n    for(let i = 1; i <= n; i++){\n        const numString = i.toString();\n\
    \        if(numString === numString.split('').reverse().join('')){\n         \
    \   if(numString.length % 2 === 0){\n                even++;\n            } else\
    \ {\n                odd++;\n            }\n        }\n    }\n    return [even,\
    \ odd];\n}", "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n;\
    \ i++){\n        if(is_palindrome(i)){\n            if(i % 2 === 0){\n       \
    \         even++;\n            }else{\n                odd++;\n            }\n\
    \        }\n    }\n    return [even, odd];\n}\n", "\tvar even = 0,\n\t\todd =\
    \ 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tif(i.toString() === i.toString().split('').reverse().join('')){\n\
    \t\t\ti % 2 === 0 ? even++ : odd++;\n\t\t}\n\t}\n\treturn [even, odd];\n}", " \
    \   let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n      \
    \  if(isPalindrome(i)){\n            if(i % 2 == 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "\tvar o = 0, e = 0;\n\tfor(var i = 1; i <= n; i++){\n\
    \t\tvar s = i.toString(), l = s.length;\n\t\tif(l == 1)\n\t\t\te++;\n\t\telse\
    \ if(l == 2){\n\t\t\tif(s[0] == s[1])\n\t\t\t\te++;\n\t\t\telse\n\t\t\t\to++;\n\
    \t\t}\n\t\telse{\n\t\t\tvar p = true;\n\t\t\tfor(var j = 0; j < l / 2; j++){\n\
    \t\t\t\tif(s[j] != s[l - j - 1]){\n\t\t\t\t\tp = false;\n\t\t\t\t\tbreak;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t\tif(p)\n\t\t\t\te++;\n\t\t\telse\n\t\t\t\to++;\n\t\t}\n\t\
    }\n\treturn [e, o];\n}\n", "    if(n <= 0)\n        return;\n    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 == 0)\n                even++;\n            else\n     \
    \           odd++;\n        }\n    }\n    return [even, odd];\n}\n", "    if(n\
    \ < 0){\n        return null;\n    }\n    if(n === 0){\n        return [0, 0];\n\
    \    }\n    let evenCount = 0;\n    let oddCount = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n     \
    \           evenCount++;\n            } else {\n                oddCount++;\n\
    \            }\n        }\n    }\n    return [evenCount, oddCount];\n}\n", " \
    \ //i :=\n  // var evens = 0;\n  // var odds = 0;\n  // for(var i = 0; i < n;\
    \ i++){\n  //   var num = i.toString();\n  //   var rev = num.split('').reverse().join('');\n\
    \  //   if(num === rev){\n  //     num % 2 === 0 ? evens++ : odds++;\n  //   }\n\
    \  // }\n  // return [evens, odds];\n  return [\n    Math.floor(n / 2),\n    Math.ceil(n\
    \ / 2)\n  ];\n}\n", "  if(!Number.isInteger(n) || n < 1 || n > 1000) return;\n\
    \  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n\
    \      i.toString().length % 2 === 0 ? even++ : odd++;\n    }\n  }\n  return [even,\
    \ odd];\n}", "  var a = [0,0];\n  var s = 0;\n  while(n>0){\n    var t = n%10;\n\
    \    s = s*10 + t;\n    n = Math.floor(n/10);\n  }\n  n = s;\n  while(n>0){\n\
    \    var t = n%10;\n    if(t%2==0){\n      a[0]++;\n    }else{\n      a[1]++;\n\
    \    }\n    n = Math.floor(n/10);\n  }\n  return a;\n}\n", "  let even = 0, odd\
    \ = 0;\n  for(let i = 1; i <= n; i++){\n    let str = i.toString();\n    if(str.length\
    \ === 1) even++;\n    else if(str.length % 2 === 0) {\n      let left = str.slice(0,\
    \ str.length/2);\n      let right = str.slice(str.length/2, str.length);\n   \
    \   if(left === right.split('').reverse().join(''))\n        even++;\n    }\n\
    \    else {\n      let left = str.slice(0, str.length/2);\n      let right = str.slice(str.length/2\
    \ + 1, str.length);\n      if(left === right.split('').reverse().join(''))\n \
    \       odd++;\n    }\n  }\n  return [even, odd];\n}", "\tvar odds = 0;\n\tvar\
    \ evens = 0;\n\tfor(var i = 1; i <= n; i++){\n\t\tif(i < 10){\n\t\t\tevens++;\n\
    \t\t}else if(i % 10 === 0){\n\t\t\tcontinue;\n\t\t}else{\n\t\t\tif(is_palindrome(i)){\n\
    \t\t\t\tif(i % 2 === 0){\n\t\t\t\t\tevens++;\n\t\t\t\t}else{\n\t\t\t\t\todds++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn [evens, odds];\n}", "    return [even_palindrome(n),\
    \ odd_palindrome(n)];\n}\n", "  const even_count = 0;\n  const odd_count = 0;\n\
    \  const numberString = n.toString();\n  for(let i = 0; i < numberString.length;\
    \ i++){\n    if(numberString[i] === numberString[numberString.length - 1 - i]){\n\
    \      if(numberString[i] % 2 === 0){\n        even_count++;\n      } else {\n\
    \        odd_count++;\n      }\n    }\n  }\n  return [even_count, odd_count];\n\
    }\n", "    var result = [0,0];\n    for(let i = 1; i <= n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                result[0]++;\n            } else {\n                result[1]++;\n\
    \            }\n        }\n    }\n    return result;\n}", "\tvar arr = [];\n\t\
    var num = 1;\n\tvar odd = 0;\n\tvar even = 0;\n\tfor(var i = 0; i <= n; i++){\n\
    \t\tnum = i.toString();\n\t\t// arr.push(num);\n\t\t// console.log(num);\n\t\t\
    // console.log(num[0]);\n\t\t// console.log(num[num.length-1]);\n\t\tif(num[0]\
    \ == num[num.length-1]){\n\t\t\tarr.push(num);\n\t\t\tconsole.log(num);\n\t\t\t\
    console.log(num[0]);\n\t\t\tconsole.log(num[num.length-1]);\n\t\t\tconsole.log(num.length);\n\
    \t\t\tif(num.length % 2 == 0){\n\t\t\t\teven += 1;\n\t\t\t}\n\t\t\telse{\n\t\t\
    \t\todd += 1;\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(arr);\n\treturn [even, odd];\n\
    }\n\neven_odd_palindrome(11);", "    let even = 0;\n    let odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n            if(i % 2 ===\
    \ 0){\n                even++;\n            }else{\n                odd++;\n \
    \           }\n        }\n    }\n    return [even, odd];\n}\n", "    let evens\
    \ = 0;\n    let odds = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i.toString())){\n\
    \            if(i % 2 === 0){\n                evens++;\n            } else {\n\
    \                odds++;\n            }\n        }\n    }\n    return [evens,\
    \ odds];\n}\n", "    var even = 0;\n    var odd = 0;\n    for(var i = 1; i <=\
    \ n; i++){\n        var digit = i.toString().split('');\n        if(digit.length\
    \ % 2 == 0){\n            var length = digit.length / 2;\n            var j =\
    \ length - 1;\n            var k = length;\n            while(j >= 0 && k < digit.length){\n\
    \                if(digit[j] != digit[k]){\n                    break;\n     \
    \           }\n                j--;\n                k++;\n            }\n   \
    \         if(j < 0 && k == digit.length){\n                even++;\n         \
    \   }\n        }else{\n            var length = Math.floor(digit.length / 2);\n\
    \            var j = length - 1;\n            var k = length + 1;\n          \
    \  while(j >= 0 && k < digit.length){\n                if(digit[j] != digit[k]){\n\
    \                    break;\n                }\n                j--;\n       \
    \         k++;\n            }\n            if(j < 0 && k == digit.length){\n \
    \               odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    function isPalindrome(number){\n        let numberToString = number.toString();\n\
    \        let palindrome = numberToString.split('').reverse().join('');\n     \
    \   return (numberToString === palindrome);\n    }\n    let even = 0;\n    let\
    \ odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n \
    \           if(i % 2 === 0){\n                even++;\n            }else{\n  \
    \              odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "    let even = 0;\n    let odd = 0;\n    let total = 0;\n    while(n > 0){\n\
    \        let digit = n % 10;\n        total = total * 10 + digit;\n        n =\
    \ Math.floor(n / 10);\n    }\n    let new_num = total;\n    while(new_num > 0){\n\
    \        if(new_num % 2 === 0){\n            even += 1;\n        } else {\n  \
    \          odd += 1;\n        }\n        new_num = Math.floor(new_num / 10);\n\
    \    }\n    return [even, odd];\n}", "\tvar even = 0;\n\tvar odd = 0;\n\tvar arr\
    \ = [];\n\tfor(let i = 1; i <= n; i++){\n\t\tarr.push(i);\n\t}\n\tvar rev = arr.reverse();\n\
    \tfor(let i = 0; i < arr.length; i++){\n\t\tif(arr[i] == rev[i]){\n\t\t\tif(arr[i]\
    \ % 2 == 0){\n\t\t\t\teven++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\todd++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn [even, odd];\n}", "    //return [even, odd]\n}\n", "    var\
    \ even_count = 0;\n    var odd_count = 0;\n    for(let i = 0; i <= n; i++){\n\
    \        if(is_palindrome(i)){\n            if(is_even(i)){\n                even_count++;\n\
    \            }\n            else{\n                odd_count++;\n            }\n\
    \        }\n    }\n    return [even_count, odd_count];\n}\n", "  if(n < 1) return\
    \ []\n  if(n === 1) return [0, 1]\n  if(n === 2) return [1, 1]\n  if(n === 3)\
    \ return [1, 2]\n  let even_count = 1, odd_count = 1\n  for(let i = 3; i <= n;\
    \ i++){\n    let num_str = i.toString()\n    let left = 0, right = num_str.length\
    \ - 1\n    while(left < right){\n      if(num_str[left] !== num_str[right]) break\n\
    \      left++\n      right--\n    }\n    if(left >= right){\n      i % 2 === 0\
    \ ? even_count++ : odd_count++\n    }\n  }\n  return [even_count, odd_count]\n\
    }", "    //use \"i\" to loop number\n    //use \"j\" to loop number\n    //use\
    \ \"sum\" to count even number\n    //use \"even\" to count odd number\n    let\
    \ even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        let reverseStr\
    \ = i.toString().split(\"\").reverse().join(\"\");\n        if(i == reverseStr){\n\
    \            if(i % 2 == 0){\n                even += 1;\n            }else{\n\
    \                odd += 1;\n            }\n        }\n    }\n    return [even,\
    \ odd];\n}", "  var even=0;\n  var odd=0;\n  for(var i=1;i<=n;i++){\n    if(isPalindrome(i)){\n\
    \      if(i%2===0){\n        even++;\n      }else{\n        odd++;\n      }\n\
    \    }\n  }\n  return [even,odd];\n}", "\tlet result = [0, 0];\n\tfor(let i =\
    \ 1; i <= n; i++){\n\t\tif(i === parseInt(i.toString().split('').reverse().join(''))){\n\
    \t\t\tif(i % 2 === 0){\n\t\t\t\tresult[0]++;\n\t\t\t}else{\n\t\t\t\tresult[1]++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    let even = 0;\n    let odd =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n       \
    \     let num = i.toString().split('').length;\n            if(num % 2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}\n", "    var even = 0;\n\
    \    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        if(is_palindrome(i.toString())){\n\
    \            if(i.toString().length % 2 === 0){\n                even += 1;\n\
    \            } else {\n                odd += 1;\n            }\n        }\n \
    \   }\n    return [even, odd];\n}\n", "\tvar output = [0,0];\n\tfor(var i = 1;\
    \ i <= n; i++){\n\t\tvar s = i.toString();\n\t\tif(isPalindrome(s)){\n\t\t\tif(i\
    \ % 2 == 0){\n\t\t\t\toutput[0]++;\n\t\t\t}else{\n\t\t\t\toutput[1]++;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn output;\n}\n", "    var even = 0;\n    var odd = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        if(is_palin(i)){\n            i.toString().length\
    \ % 2 === 0 ? even++ : odd++;\n        }\n    }\n    return [even, odd];\n}\n",
  "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i<=n; i++){\n    if(is_palindrome(i)){\n\
    \      if(i%2 === 0){\n        even++;\n      }else{\n        odd++;\n      }\n\
    \    }\n  }\n  return [even, odd];\n}", "    var count = [0,0];\n    var num =\
    \ n.toString();\n    var numLength = num.length;\n    var middle = Math.floor(numLength/2);\n\
    \    if(numLength === 1){\n        if(n%2){\n            count[1] = 1;\n     \
    \   }else{\n            count[0] = 1;\n        }\n    }else{\n        for(var\
    \ i = 1; i <= n; i++){\n            var check = i.toString();\n            var\
    \ checkLength = check.length;\n            var middleC = Math.floor(checkLength/2);\n\
    \            if(checkLength % 2 === 0){\n                var start;\n        \
    \        var end;\n                var reverse = '';\n                var j =\
    \ 0;\n                while(j < middleC){\n                    start = check[j];\n\
    \                    end = check[checkLength - 1 - j];\n                    reverse\
    \ = reverse + end;\n                    j++;\n                }\n            \
    \    if(start + reverse === check){\n                    if(check[middleC]%2){\n\
    \                        count[1]++;\n                    }else{\n           \
    \             count[0]++;\n                    }\n                }\n        \
    \    }else{\n                var start;\n                var end;\n          \
    \      var reverse = '';\n                var j = 0;\n                while(j\
    \ < middleC){\n                    start = check[j];\n                    end\
    \ = check[checkLength - 1 - j];\n                    reverse = reverse + end;\n\
    \                    j++;\n                }\n                if(start + reverse\
    \ === check){\n                    if(check[middleC]%2){\n                   \
    \     count[1]++;\n                    }else{\n                        count[0]++;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return count;\n}\n", "    let isEven;\n    let num = n;\n    let oc = 0;\n\
    \    let ec = 0;\n    while(num>0){\n        if(isPalindrome(num)){\n        \
    \    if(num%2==0){\n                ec++;\n            }else{\n              \
    \  oc++;\n            }\n        }\n        num--;\n    }\n    return [ec,oc];\n\
    }\n", "    // Write your code here\n    var evenCount = 0;\n    var oddCount =\
    \ 0;\n    for(var i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n       \
    \     if(i % 2 === 0){\n                evenCount++;\n            } else {\n \
    \               oddCount++;\n            }\n        }\n    }\n    return [evenCount,\
    \ oddCount];\n}\n", "  let odd = 0;\n  let even = 0;\n  for(let i = 1; i <= n;\
    \ i++){\n    if(isPalindrome(i)){\n      i % 2 === 0 ? even++ : odd++;\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    function is_palindrome(num){\n       \
    \ return num.toString() === num.toString().split('').reverse().join('');\n   \
    \ }\n    var evens = 0;\n    var odds = 0;\n    for(var i = 1; i <= n; i++){\n\
    \        if(is_palindrome(i)){\n            if(i % 2 === 0){\n               \
    \ evens++;\n            } else {\n                odds++;\n            }\n   \
    \     }\n    }\n    return [evens, odds];\n}", "    let odd = Math.floor(n/11);\n\
    \    let even = Math.floor(n/10);\n    return [even, odd];\n}\n", "  var even\
    \ = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(is_palindrome(i.toString())){\n\
    \      if(i % 2 === 0){\n        even += 1;\n      }else{\n        odd += 1;\n\
    \      }\n    }\n  }\n  return [even, odd];\n}", "  let even_pals = 0;\n  let\
    \ odd_pals = 0;\n  for(let i = 1; i <= n; i++){\n    if(i === parseInt(i.toString().split('').reverse().join(''))){\n\
    \      i % 2 === 0 ? even_pals++ : odd_pals++;\n    }\n  }\n  return [even_pals,\
    \ odd_pals];\n}", "\tvar result = [0, 0];\n\tif(n < 0) return result;\n\tfor(var\
    \ i = 1; i <= n; i++){\n\t\tif(is_palindrome(i)){\n\t\t\tif(i % 2 == 0) result[0]++;\n\
    \t\t\telse result[1]++;\n\t\t}\n\t}\n\treturn result;\n}", "  let even = 0, odd\
    \ = 0;\n  for(let i = 1; i <= n; i++){\n    if(i === reverse(i)){\n      if(i\
    \ % 2 === 0){\n        even++;\n      }else{\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    // I: positive integer\n    // O: Tuple\n\
    \    // C: In place\n    // E: n=1\n    let result=[0,0];\n    for(let i=1;i<=n;i++){\n\
    \        if(isPalindrome(i)){\n            i%2==0?result[0]++:result[1]++;\n \
    \       }\n    }\n    return result;\n}\n", "  //your code here\n}", "    let\
    \ len = Math.floor(Math.log10(n))+1;\n    let odd = 0;\n    let even = 0;\n  \
    \  for(let i = 1; i<=len; i++){\n        if(i%2==0){\n            even += Math.pow(10,i/2);\n\
    \        }else{\n            odd += Math.pow(10,(i-1)/2);\n        }\n    }\n\
    \    return [even, odd];\n}\n", "    let even = 0, odd = 0;\n    for(let i = 1;\
    \ i <= n; i++){\n        if(is_palindrome(i)){\n            if(i % 2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}\n", "    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(i.toString() ===\
    \ i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                even += 1;\n            }else{\n                odd += 1;\n \
    \           }\n        }\n    }\n    return [even, odd];\n}", "    let arr = [0,\
    \ 0];\n    // loop through all numbers\n    for(let i = 1; i <= n; i++){\n   \
    \     // check if palindrome, first add number to reversed number\n        let\
    \ rev = i + reverse(i);\n        // check if palindrome\n        if(reverse(rev)\
    \ === rev){\n            // if palindrome, check if even/odd\n            if(i\
    \ % 2 === 0){\n                arr[0]++;\n            }\n            else{\n \
    \               arr[1]++;\n            }\n        }\n    }\n    return arr;\n}",
  "    if(n<1 || n>1000) return \"Error : n should be within 1 to 1000\";\n    if(n<=9)\
    \ return [0,1];\n    var even=0, odd=0;\n    var power = Math.pow(10,Math.floor(Math.log10(n)));\n\
    \    var temp=n;\n    while(n>0){\n        if(n<10) {\n            n--;\n    \
    \        temp--;\n            odd++;\n            n=temp;\n            n=Math.floor(n/10);\n\
    \            temp=n;\n            even++;\n            continue;\n        }\n\
    \        if(Math.floor(n/power)==n%10){\n            n=Math.floor(n%power/10);\n\
    \            temp=n;\n            even++;\n            odd++;\n        }else{\n\
    \            n=Math.floor(n/10);\n            temp=n;\n        }\n    }\n    return\
    \ [even,odd];\n}", "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i\
    \ <= n; i++){\n        if(is_palindrome(i)){\n            i.toString().length\
    \ % 2 === 0 ? even++ : odd++;\n        }\n    }\n    return [even, odd];\n}\n",
  "    //YOUR CODE HERE\n    return [0,0];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n     \
    \       if(i % 2 == 0){\n                even++;\n            } else {\n     \
    \           odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    if(n === 1) return [0,1];\n    let count = 0;\n    let odd = 0;\n \
    \   let even = 0;\n    while(count <= n){\n        if(count < 10){\n         \
    \   count++;\n            odd++;\n        }\n        else if(count >= 10 && count\
    \ < 100){\n            if(count % 11 === 0){\n                count += 11;\n \
    \               odd++;\n            }\n            else{\n                count\
    \ += 1;\n            }\n        }\n        else if(count >= 100 && count < 1000){\n\
    \            let unit = count % 10;\n            let ten = (count % 100 - unit)\
    \ / 10;\n            let hundred = (count - ten - unit) / 100;\n            if(unit\
    \ === ten && ten === hundred){\n                count += 1;\n                odd++;\n\
    \            }\n            else if(unit === ten){\n                count += 11;\n\
    \                odd++;\n            }\n            else{\n                count\
    \ += 1;\n            }\n        }\n        else{\n            break;\n       \
    \ }\n    }\n    even = count - odd;\n    return [even, odd];\n}\n", "\n}", " \
    \   let result = [0, 0];\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            i % 2 === 0 ? result[0]++ : result[1]++;\n        }\n    }\n    return\
    \ result;\n}\n", "\tvar map = {};\n\tfor(var i = 1; i <= n; i++){\n\t\tif(i.toString()\
    \ == i.toString().split('').reverse().join('')){\n\t\t\tif(i % 2 == 0){\n\t\t\t\
    \tmap['even'] = map['even'] || 0;\n\t\t\t\tmap['even']++;\n\t\t\t} else {\n\t\t\
    \t\tmap['odd'] = map['odd'] || 0;\n\t\t\t\tmap['odd']++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn [map['even'] || 0, map['odd'] || 0];\n}", "    if(n === 1) return [0,\
    \ 1];\n    let arr = Array(n+1).fill(true);\n    arr[0] = false;\n    arr[1] =\
    \ false;\n    for(let i = 2; i <= Math.sqrt(n); i++){\n        if(arr[i]){\n \
    \           for(let j = i * i; j <= n; j += i){\n                arr[j] = false;\n\
    \            }\n        }\n    }\n    let odd = 0;\n    let even = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(arr[i]){\n            if(i.toString().length\
    \ % 2 === 0){\n                even++;\n            } else {\n               \
    \ odd++;\n            }\n        }\n    }\n    return [even, odd];\n}\n", "  let\
    \ even=0;\n  let odd=0;\n  for(let i=1;i<=n;i++){\n    let num=i;\n    let rev_num=0;\n\
    \    while(num>0){\n      let rem=num%10;\n      rev_num=rev_num*10+rem;\n   \
    \   num=parseInt(num/10);\n    }\n    if(rev_num==i){\n      if(i%2==0){\n   \
    \     even++;\n      }\n      else{\n        odd++;\n      }\n    }\n  }\n  return\
    \ {even,odd};\n}", "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n;\
    \ i++){\n    if(i % 10 === 0){\n      continue;\n    }\n    if(isPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        even++;\n      } else {\n        odd++;\n   \
    \   }\n    }\n  }\n  return [even, odd];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n     \
    \       if(i % 2 == 0){\n                even += 1;\n            }else{\n    \
    \            odd += 1;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    let num_palindromes = { odd: 0, even: 0 };\n    for(let i = 1; i <=\
    \ n; i++){\n        if(is_palindrome(i)){\n            if(i % 2 === 0){\n    \
    \            num_palindromes.even++;\n            } else {\n                num_palindromes.odd++;\n\
    \            }\n        }\n    }\n    return num_palindromes;\n}", "    var even\
    \ = 0, odd = 0;\n    //get all palindromes:\n    var palindromes = [];\n    for(var\
    \ i = 1; i <= n; i++){\n        var num = i.toString().split('');\n        if(num.length\
    \ === 1) palindromes.push(i);\n        if(num.length === 2){\n            if(num[0]\
    \ === num[1]) palindromes.push(i);\n        }\n        if(num.length > 2){\n \
    \           if(num[0] === num[num.length-1]){\n                var first = num.slice(0,num.length-1).join('');\n\
    \                var second = num.slice(1,num.length).join('');\n            \
    \    if(first === second) palindromes.push(i);\n            }\n        }\n   \
    \ }\n    //now we have all the palindromes, now we will check even and odd:\n\
    \    for(var x = 0; x < palindromes.length; x++){\n        if(palindromes[x] %\
    \ 2 === 0) even++;\n        else odd++;\n    }\n    return [even, odd];\n}\n",
  "    let odd_even = [0, 0];\n    for(let i = 1; i <= n; i++){\n        let i_str\
    \ = String(i);\n        let rev_i_str = i_str.split('').reverse().join('');\n\
    \        if(i_str === rev_i_str){\n            let i_int = parseInt(i_str);\n\
    \            if(i_int % 2 == 0){\n                odd_even[0]++;\n           \
    \ } else {\n                odd_even[1]++;\n            }\n        }\n    }\n\
    \    return odd_even;\n}", "  var count = [0,0];\n  for(var i = 1; i <= n; i++){\n\
    \    if(is_palindrome(i)){\n      if(i % 2 === 0){\n        count[0]++;\n    \
    \  }else{\n        count[1]++;\n      }\n    }\n  }\n  return count;\n}", "  \
    \  // let even = 0, odd = 0;\n    // while(n > 0){\n    //     let temp = n, tempStr\
    \ = \"\", reversedStr = \"\";\n    //     while(temp > 0){\n    //         tempStr\
    \ += temp % 10;\n    //         temp = Math.floor(temp / 10);\n    //     }\n\
    \    //     reversedStr = tempStr;\n    //     if(tempStr === reversedStr){\n\
    \    //         tempStr.length % 2 === 0 ? even++ : odd++;\n    //     }\n   \
    \ //     n--;\n    // }\n    // return [even, odd];\n    // console.log(even,\
    \ odd);\n    let even = 0, odd = 0;\n    while(n > 0){\n        let strNum = n.toString(),\
    \ reversedNum = strNum.split(\"\").reverse().join(\"\");\n        if(strNum ===\
    \ reversedNum){\n            strNum.length % 2 === 0 ? even++ : odd++;\n     \
    \   }\n        n--;\n    }\n    return [even, odd];\n}\n", "    let odd = 0;\n\
    \    let even = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 === 0){\n                even++;\n            }else{\n \
    \               odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }", "    var even_count = 0;\n    var odd_count = 0;\n    //loop through 1 to\
    \ n\n    for(var i = 1; i <= n; i++){\n        var is_palindrome = true;\n   \
    \     //use string to loop through the first half of digits,\n        //only odd\
    \ length numbers will have a middle digit\n        for(var j = 0; j < Math.floor(String(i).length\
    \ / 2); j++){\n            //check if first and last, second and second to last,\n\
    \            //and so on, are equal\n            if(String(i)[j] != String(i)[String(i).length\
    \ - 1 - j]){\n                is_palindrome = false;\n                break;\n\
    \            }\n        }\n        //if palindrome\n        if(is_palindrome){\n\
    \            //add to even_count if even, otherwise add to odd_count\n       \
    \     if(i % 2 == 0){\n                even_count++;\n            }\n        \
    \    else{\n                odd_count++;\n            }\n        }\n    }\n  \
    \  return [even_count, odd_count];\n}\n", "  var even = 0;\n  var odd = 0;\n \
    \ for(var i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n      if(i.toString().length\
    \ % 2 == 0){\n        even++;\n      }else{\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "  var even = 0;\n  var odd = 0;\n  for(var\
    \ i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n      if(is_even(i)){\n   \
    \     even++;\n      } else {\n        odd++;\n      }\n    }\n  }\n  return [even,\
    \ odd];\n}\n", "    let count_odd=0;\n    let count_even=0;\n    for(let i=1;i<=n;i++){\n\
    \        if(isPalindrome(i)){\n            if(i%2==0){\n                count_even++;\n\
    \            }\n            else{\n                count_odd++;\n            }\n\
    \        }\n    }\n    return [count_even,count_odd];\n}", "    let odd = 0, even\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n     \
    \       if(i % 2 === 0){\n                even++;\n            }else{\n      \
    \          odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    var even_count = 0;\n    var odd_count = 0;\n    for(var i = 1; i <=\
    \ n; i++){\n        if(is_palindrome(i)){\n            if(i % 2 == 0){\n     \
    \           even_count += 1;\n            }else{\n                odd_count +=\
    \ 1;\n            }\n        }\n    }\n    return [even_count, odd_count];\n}\n",
  "  let odd_count = Math.floor(n/11) * 2;\n  let even_count = n % 11 === 0 ? 0 :\
    \ 1;\n  return [even_count, odd_count];\n}", "    var numEven = 0;\n    var numOdd\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        var str = \"\" + i;\n      \
    \  if(str.length == 1){\n            numOdd++;\n        }\n        if(str.length\
    \ == 2){\n            if(str[0] == str[1]){\n                numEven++;\n    \
    \        }\n            else{\n                numOdd++;\n            }\n    \
    \    }\n        if(str.length % 2 == 0){\n            var mid = str.length / 2;\n\
    \            var substring = str.substring(0, mid);\n            if(substring\
    \ == str.substring(mid, str.length)){\n                numEven++;\n          \
    \  }\n            else{\n                numOdd++;\n            }\n        }\n\
    \        if(str.length % 2 == 1){\n            var mid = (str.length + 1) / 2;\n\
    \            var substring = str.substring(0, mid - 1);\n            if(substring\
    \ == str.substring(mid, str.length)){\n                numEven++;\n          \
    \  }\n            else{\n                numOdd++;\n            }\n        }\n\
    \    }\n    return [numEven, numOdd];\n}\n", "    var odd = 0, even = 0;\n   \
    \ //coding and coding....\n    for(var i = 1; i<=n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i%2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return [even, odd];\n}\n", "\treturn [1, 1]\n}",
  "  let even = 0;\n  let odd = 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n\
    \      if(i.toString().length % 2 === 0){\n        even++;\n      }else{\n   \
    \     odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n", "    if(n <= 1)\
    \ return [0,0];\n    //only one odd palindrome \n    let ans = [Math.pow(10,n.toString().length\
    \ - 1) - 1, 1];\n    for(let i = 0; i < n.toString().length - 1; i++){\n     \
    \   ans[0] += Math.pow(10,i);\n        ans[1] += Math.pow(10,i);\n    }\n    if(!isPalindrome(n)){\n\
    \        ans[1]--;\n    }else{\n        ans[0]--;\n    }\n    return ans;\n}",
  "    let num = 0;\n    let num1 = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ let s = i.toString();\n        let s1 = s.split('').reverse().join('');\n  \
    \      if(s == s1){\n            if(i % 2 == 0){\n                num++;\n   \
    \         }\n            else{\n                num1++;\n            }\n     \
    \   }\n    }\n    return [num, num1];\n}", "    var even = 0;\n    var odd = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        if(i % 2 === 0){\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return [even, odd];\n\
    }", "    let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       let str = i.toString();\n        if(str.length === 1){\n            odd++;\n\
    \        }\n        else if(str.length === 2){\n            if(str[0] === str[1]){\n\
    \                even++;\n            }\n            else{\n                odd++;\n\
    \            }\n        }\n        else{\n            if(str[0] === str[str.length\
    \ - 1]){\n                even++;\n            }\n            else{\n        \
    \        odd++;\n            }\n        }\n    }\n    return [even, odd];\n}\n",
  "  let is_palindrome = function(str){\n    for(let i = 0; i <= str.length/2; i++){\n\
    \      if(str[i] !== str[str.length - i - 1]){\n        return false;\n      }\n\
    \    }\n    return true;\n  }\n  let num_even = 0;\n  let num_odd = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(is_palindrome(i.toString())){\n      i.toString().length\
    \ % 2 === 0 ? num_even++ : num_odd++;\n    }\n  }\n  return [num_even, num_odd];\n\
    }", "    //counter to keep track of the even count and odd count.\n    let even_count\
    \ = 0, odd_count = 0;\n    //loop through the numbers from 1 to n.\n    for(let\
    \ i = 1; i <= n; i++){\n        //check if the number is a palindrome and if it\
    \ is even,\n        //increment the even_count by 1.\n        if(is_palindrome(i)\
    \ && i % 2 === 0){\n            even_count++;\n        }\n        //check if the\
    \ number is a palindrome and if it is odd,\n        //increment the odd_count\
    \ by 1.\n        else if(is_palindrome(i) && i % 2 !== 0){\n            odd_count++;\n\
    \        }\n    }\n    //return a tuple containing the even count and odd count.\n\
    \    return [even_count, odd_count];\n}\n", "  var even = 0;\n  var odd = 0;\n\
    \  if(n>=0 && n<=1000){\n    for(var i=1; i<=n; i++){\n      if(i<10){\n     \
    \   even++;\n      }\n      else if(i>=10 && i<100){\n        if(i%11==0){\n \
    \         even++;\n        }\n        else{\n          odd++;\n        }\n   \
    \   }\n      else if(i>=100 && i<1000){\n        if(i%11==0){\n          even++;\n\
    \        }\n        else{\n          odd++;\n        }\n      }\n    }\n  }\n\
    \  return [even, odd];\n}", "    let odd = 0, even = 0;\n    for(let i = 1; i\
    \ <= n; i++){\n        let reversed = i.toString().split('').reverse().join('');\n\
    \        if(reversed == i){\n            if(i % 2 === 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "    if(n<1)return [0,0];\n    let even = 0;\n \
    \   let odd = 0;\n    for(let i=1;i<=n;i++){\n        if(isPalindrome(i)){\n \
    \           if(i%2==0)even++;\n            else odd++;\n        }\n    }\n   \
    \ return [even,odd];\n}\n", "  if(n < 1 || n > 1000) return;\n  let odd = 0;\n\
    \  let even = 0;\n  for(let i = 1; i <= n; i++){\n    if(i < 10){\n      even++;\n\
    \    }else if(i % 10 === 0){\n      continue;\n    }else{\n      let reversed\
    \ = reverse(i);\n      if(i === reversed){\n        let length = getLength(i);\n\
    \        if(length % 2 === 0){\n          even++;\n        }else{\n          odd++;\n\
    \        }\n      }\n    }\n  }\n  return [even, odd];\n}", "    let result =\
    \ [0, 0];\n    if(n < 1 || n > Math.pow(10, 3))\n        return result;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(i % 2 === 0){\n            let i_str = i.toString();\n\
    \            let i_rev = i_str.split('').reverse().join('');\n            if(i_str\
    \ === i_rev)\n                result[0] += 1;\n        }\n        else{\n    \
    \        let i_str = i.toString();\n            let i_rev = i_str.split('').reverse().join('');\n\
    \            if(i_str === i_rev)\n                result[1] += 1;\n        }\n\
    \    }\n    return result;\n}\n", "    // nums[0] : number of even palindromes\n\
    \    // nums[1] : number of odd palindromes\n    let nums = [0, 0];\n    // single\
    \ numbers are also palindromes\n    if(n > 0) {\n        nums[1]++;\n    }\n \
    \   // check all numbers from 11 up to n\n    for(let i = 11; i <= n; i++) {\n\
    \        // if palindrome and even, add to even_nums\n        if(is_palindrome(i)\
    \ && i % 2 === 0) {\n            nums[0]++;\n        }\n        // if palindrome\
    \ and odd, add to odd_nums\n        else if(is_palindrome(i) && i % 2 === 1) {\n\
    \            nums[1]++;\n        }\n    }\n    return nums;\n}", "  var evens\
    \ = 0;\n  var odds = 0;\n  for(var i = 1; i <= n; i++){\n    if(i.toString() ===\
    \ i.toString().split('').reverse().join('')){\n      if(i.toString().length %\
    \ 2 === 0){\n        evens++;\n      }else{\n        odds++;\n      }\n    }\n\
    \  }\n  return [evens, odds];\n}", "  var even = 0;\n  var odd = 0;\n  if(n ==\
    \ 1){\n    return [0,1];\n  }\n  if(n == 2){\n    return [1,1];\n  }\n  for(var\
    \ i = 1; i <= n; i++){\n    var num = i.toString();\n    if(num == num.split('').reverse().join('')){\n\
    \      if(num.length % 2 == 0){\n        even++;\n      }\n      else{\n     \
    \   odd++;\n      }\n    }\n  }\n  return [even, odd];\n}", "    if(n == null)\
    \ return new Array(0, 0);\n    if(n < 1) return new Array(0, 0);\n    if(n ==\
    \ 1) return new Array(1, 0);\n    let count = [0, 0];\n    for(let i = 1; i <=\
    \ n; i++){\n        let str = i.toString();\n        let strlen = str.length;\n\
    \        if(strlen == 1) {\n            count[1]++;\n            continue;\n \
    \       }\n        if(strlen % 2 == 0){\n            if(is_palindrome(str)){\n\
    \                count[0]++;\n            }\n        }else{\n            if(is_palindrome(str)){\n\
    \                count[1]++;\n            }\n        }\n    }\n    return count;\n\
    }", "    let array = [];\n    let obj = {};\n    for(let i = 1; i <= n; i++){\n\
    \        if(i.toString() === i.toString().split('').reverse().join('')){\n   \
    \         array.push(i);\n        }\n    }\n    for(let i = 0; i < array.length;\
    \ i++){\n        if(array[i] % 2 == 0){\n            if(obj.hasOwnProperty('even')){\n\
    \                obj['even'] = obj['even'] + 1;\n            }\n            else{\n\
    \                obj['even'] = 1;\n            }\n        }\n        else{\n \
    \           if(obj.hasOwnProperty('odd')){\n                obj['odd'] = obj['odd']\
    \ + 1;\n            }\n            else{\n                obj['odd'] = 1;\n  \
    \          }\n        }\n    }\n    console.log(obj);\n}\neven_odd_palindrome(113);",
  "    const evenCount = Math.floor(n / 10) + Math.floor(n / 100) * 9;\n    const\
    \ oddCount = Math.floor(n / 11) * 2;\n    return [evenCount, oddCount];\n}\n",
  "    let one = 0;\n    let two = 0;\n    let arr = [];\n    let hash = {};\n   \
    \ for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            arr.push(i);\n\
    \        }\n    }\n    arr.forEach(ele => {\n        if(ele % 2 == 0){\n     \
    \       hash[1] = (hash[1] || 0) + 1;\n        }else{\n            hash[2] = (hash[2]\
    \ || 0) + 1;\n        }\n    })\n    function isPalindrome(num){\n        let\
    \ rev = 0;\n        let rem = 0;\n        let n = num;\n        while(num > 0){\n\
    \            rem = num % 10;\n            rev = rev * 10 + rem;\n            num\
    \ = Math.floor(num / 10);\n        }\n        return n == rev;\n    }\n    return\
    \ [hash[1], hash[2]];\n}\n", "    var evens = 0;\n    var odds = 0;\n    for(var\
    \ i = 1; i <= n; i++){\n        var str = i.toString();\n        var is_palindrome\
    \ = true;\n        for(var j = 0; j < str.length / 2; j++){\n            if(str[j]\
    \ != str[str.length - 1 - j]){\n                is_palindrome = false;\n     \
    \           break;\n            }\n        }\n        if(is_palindrome){\n   \
    \         if(i % 2 == 0){\n                evens++;\n            }\n         \
    \   else{\n                odds++;\n            }\n        }\n    }\n    return\
    \ [evens, odds];\n}", "    let even_palindrome = 0;\n    let odd_palindrome =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        let str = i.toString();\n    \
    \    if(str.length == 1){\n            odd_palindrome++;\n        }else if(str.length\
    \ % 2 == 0){\n            let isPalindrome = true;\n            for(let j = 0;\
    \ j < str.length/2; j++){\n                if(str[j] != str[str.length - 1 - j]){\n\
    \                    isPalindrome = false;\n                    break;\n     \
    \           }\n            }\n            if(isPalindrome){\n                even_palindrome++;\n\
    \            }\n        }else{\n            let isPalindrome = true;\n       \
    \     for(let j = 0; j < Math.floor(str.length/2); j++){\n                if(str[j]\
    \ != str[str.length - 1 - j]){\n                    isPalindrome = false;\n  \
    \                  break;\n                }\n            }\n            if(isPalindrome){\n\
    \                odd_palindrome++;\n            }\n        }\n    }\n    return\
    \ [even_palindrome, odd_palindrome];\n}", "    let even = 0;\n    let odd = 0;\n\
    \    let num = 1;\n    while(num <= n){\n        if(is_palindrome(num)){\n   \
    \         if(num % 2 === 0){\n                even++;\n            }else{\n  \
    \              odd++;\n            }\n        }\n        num++;\n    }\n    return\
    \ [even, odd];\n}", "\n}", "    var odd_count = 0;\n    var even_count = 0;\n\
    \    for(var i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n           \
    \ if(i % 2 == 0){\n                even_count++;\n            }\n            else{\n\
    \                odd_count++;\n            }\n        }\n    }\n    return [even_count,\
    \ odd_count];\n}", "    let res = [0, 0];\n    for(let i = 1; i <= n; i++){\n\
    \        if(is_palindrome(i)){\n            if(i % 2 === 0){\n               \
    \ res[0]++;\n            }else{\n                res[1]++;\n            }\n  \
    \      }\n    }\n    return res;\n}\n", "\n}", "  if(n === null || n === undefined)\
    \ return;\n  if(n < 1 || n > 1000) return;\n  let odd = 0;\n  let even = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i.toString().length\
    \ % 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    let even_count = 0;\n    let odd_count\
    \ = 0;\n    // To check if a number is palindrome or not, we just need to reverse\
    \ the number and check if it is equal to the original number or not.\n    // We\
    \ can do this using modulus operator.\n    for(let i = 1; i <= n; i++){\n    \
    \    // If a number is a single digit number, then it will be palindrome.\n  \
    \      if(i < 10){\n            even_count++;\n        }\n        // If a number\
    \ is a two digit number and its first digit is same as its last digit.\n     \
    \   else if(i >= 10 && i < 100 && i % 11 === 0){\n            even_count++;\n\
    \        }\n        // If a number is a three digit number and its first and last\
    \ digit are same.\n        else if(i >= 100 && i < 1000 && i % 10 === (i / 100)\
    \ % 10){\n            even_count++;\n        }\n        // For all other cases,\
    \ when the number has more than 3 digits, we just need to check if the number\
    \ is palindrome or not.\n        else if(is_palindrome(i)){\n            // If\
    \ the number is a palindrome, then check if it is even or odd and increment the\
    \ appropriate counter.\n            (i % 2 === 0)? even_count++ : odd_count++;\n\
    \        }\n    }\n    return [even_count, odd_count];\n}\n", "  let even = 0;\n\
    \  let odd = 0;\n  //exception case\n  if(n < 1 || n > 1000){\n    return null;\n\
    \  }\n  //loop through the range\n  for(let i = 1; i <= n; i++){\n    let string\
    \ = i.toString();\n    //check if palindrome\n    if(string === string.split('').reverse().join('')){\n\
    \      //check if even\n      if(i % 2 === 0){\n        even++;\n      }\n   \
    \   else{\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n", " \
    \ if(n < 1) return [0, 0];\n  let evenCount = 0;\n  let oddCount = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(i % 2 == 0){\n    \
    \    evenCount++;\n      } else {\n        oddCount++;\n      }\n    }\n  }\n\
    \  return [evenCount, oddCount];\n}\n", "    // return [countOfEven, countOfOdd]\n\
    \    var countOfEven = 0;\n    var countOfOdd = 0;\n    for(var i = 1; i <= n;\
    \ i++){\n        if(palindrome(i)){\n            if(even_number(i)){\n       \
    \         countOfEven += 1;\n            }else{\n                countOfOdd +=\
    \ 1;\n            }\n        }\n    }\n    return [countOfEven, countOfOdd];\n\
    }\n", "    // n : positive integer\n    // return : a tuple that has the number\
    \ of even and odd integer palindromes\n    // Time Complexity :\n    // Space\
    \ Complexity :\n    // Elegant Solution :\n\n    let even = 0, odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 ===\
    \ 0){\n                even++;\n            } else {\n                odd++;\n\
    \            }\n        }\n    }\n    return [even, odd];\n}\n", "\tvar even =\
    \ Math.floor(n/2) + Math.floor(n/10);\n\tif(n%2 == 0) even--;\n\tvar odd = n -\
    \ even;\n\treturn [even, odd];\n}\n", "    var result = [0,0];\n\n    for(var\
    \ i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n            result[(i %\
    \ 2)]++;\n        }\n    }\n\n    return result;\n}\n", "  let evenCount = 0;\n\
    \  let oddCount = 0;\n  for(let i = 1; i <= n; i++){\n    if(Number(i.toString().split('').reverse().join(''))\
    \ == i){\n      if(i % 2 == 0){\n        evenCount++;\n      }else{\n        oddCount++;\n\
    \      }\n    }\n  }\n  return [evenCount, oddCount];\n}", "    let even_palindrome_count\
    \ = 0;\n    let odd_palindrome_count = 0;\n    let result = [];\n    for(let i\
    \ = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 === 0){\n\
    \                even_palindrome_count++;\n            } else {\n            \
    \    odd_palindrome_count++;\n            }\n        }\n    }\n    result.push(even_palindrome_count);\n\
    \    result.push(odd_palindrome_count);\n    return result;\n}\n", "    let counts\
    \ = {even: 0, odd: 0};\n    if(n === 1) return counts;\n    for(let i = 1; i <=\
    \ n; i++){\n        let reversed = reverse(i.toString());\n        if(reversed\
    \ === i.toString()){\n            if(i.toString().length % 2 === 0){\n       \
    \         counts.even++;\n            } else {\n                counts.odd++;\n\
    \            }\n        }\n    }\n    return counts;\n}\n", "    var result =\
    \ {\n        even: 0,\n        odd: 0\n    };\n    for(var i = 1; i <= n; i++){\n\
    \        if(isPalindrome(i)){\n            if(i.toString().length % 2 == 0){\n\
    \                result.even++;\n            }else{\n                result.odd++;\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let odd = 0;\n\
    \    let even = 0;\n    for(let i = 1; i <= n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }\n    }\n    return `(${even}, ${odd})`;\n}\n", "    let evens\
    \ = 0;\n    let odds = 0;\n    let num = '';\n    let num_rev = '';\n    for(let\
    \ i = 1; i <= n; i++){\n        num = i.toString();\n        num_rev = num.split('').reverse().join('');\n\
    \        if(num === num_rev){\n            if(i % 2 === 0){\n                evens++;\n\
    \            }else{\n                odds++;\n            }\n        }\n    }\n\
    \    return {evens, odds};\n}", "    let even = 0;\n    let odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 ===\
    \ 0){\n                even++;\n            }else{\n                odd++;\n \
    \           }\n        }\n    }\n    return [even, odd];\n}\n", "\tvar even =\
    \ 0, odd = 0;\n\tvar str = \"\";\n\tfor(var i = 1; i <= n; i++){\n\t\tstr = i.toString();\n\
    \t\tif(str.length == 1){\n\t\t\todd++;\n\t\t}\n\t\telse if(str.length == 2){\n\
    \t\t\tif(str[0] == str[1]){\n\t\t\t\teven++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\todd++;\n\
    \t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(str[0] == str[str.length - 1]){\n\t\t\t\t\
    even++;\n\t\t\t}\n\t\t\telse{\n\t\t\t\todd++;\n\t\t\t}\n\t\t}\n\t}\n\treturn [even,\
    \ odd];\n}", "    let even = 0, odd = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       if(is_palindrome(i)){\n            if(is_even(i)){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "    let even = 0;\n    let odd = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            if(i % 2 ===\
    \ 0){\n                even++;\n            }else{\n                odd++;\n \
    \           }\n        }\n    }\n    return [even, odd];\n}\n", "\tlet palindrome_count\
    \ = 0;\n\tlet even_count = 0;\n\tlet odd_count = 0;\n\tfor(let i = 1; i <= n;\
    \ i++){\n\t\tlet digits = Math.floor(Math.log10(i)) + 1;\n\t\tif(digits === 1){\n\
    \t\t\tpalindrome_count++;\n\t\t\teven_count++;\n\t\t}\n\t\telse if(digits ===\
    \ 2){\n\t\t\tif(i % 11 === 0){\n\t\t\t\tpalindrome_count++;\n\t\t\t\tif(i % 2\
    \ === 0){\n\t\t\t\t\teven_count++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\todd_count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tlet first_half = Math.floor(i / Math.pow(10,\
    \ digits / 2));\n\t\t\tlet reversed_first_half = Number(first_half.toString().split('').reverse().join(''));\n\
    \t\t\tlet last_half = i % Math.pow(10, digits / 2);\n\t\t\tif(first_half === reversed_first_half\
    \ && last_half === reversed_first_half){\n\t\t\t\tpalindrome_count++;\n\t\t\t\t\
    if(i % 2 === 0){\n\t\t\t\t\teven_count++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t\
    odd_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn [even_count, odd_count];\n\
    }", "    var even = 0, odd = 0;\n    if(n<=0) return [even, odd];\n    for(var\
    \ i=1; i<=n; i++){\n        if(is_palindrome(i)){\n            if(i%2===0) even++;\n\
    \            else odd++;\n        }\n    }\n    return [even, odd];\n}\n", " \
    \ let even=0, odd=0;\n  for(let i=1; i<=n; i++){\n    if(palindrome(i)){\n   \
    \   if(!(i%2)) even++;\n      else odd++;\n    }\n  }\n  return [even, odd];\n\
    }", "    let arr = [];\n    for(let i = 1; i <= n; i++){\n        if(palindrome(i)){\n\
    \            arr.push(i);\n        }\n    }\n    return [arr.filter(x => x % 2\
    \ === 0).length, arr.filter(x => x % 2 !== 0).length];\n}", "    let even = 0;\n\
    \    let odd = 0;\n    for(let i = 1; i <= n; i++){\n        if(i == 1){\n   \
    \         odd++;\n        }else if(i == 2){\n            even++;\n        }else\
    \ if(isPalindrome(i)){\n            if(i.toString().length % 2 == 0){\n      \
    \          even++;\n            }else{\n                odd++;\n            }\n\
    \        }\n    }\n    return [even, odd];\n}", "  // your code here\n}", "  \
    \  let even = 0;\n    let odd = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ if(palindrome(i)){\n            i.toString().length % 2 === 0 ? even++ : odd++;\n\
    \        }\n    }\n    return [even, odd];\n}\n", "\n}", "    if(n <= 1) return\
    \ [0, 0];\n    let cntEven = cntOdd = 0;\n    for(let i = 1; i <= n; i++){\n \
    \       let str = String(i);\n        if(str === str.split('').reverse().join('')){\n\
    \            if(str.length % 2 === 0)\n                cntEven++;\n          \
    \  else\n                cntOdd++;\n        }\n    }\n    return [cntEven, cntOdd];\n\
    }\n", "    var arr = [],\n        odd = 0,\n        even = 0;\n    for(var i =\
    \ 1; i <= n; i++){\n        arr.push(i);\n    }\n    arr.forEach(function(element){\n\
    \        if(isPalindrome(element)){\n            element % 2 === 0 ? even++ :\
    \ odd++;\n        }\n    });\n    console.log(\"Odd: \", odd);\n    console.log(\"\
    Even: \", even);\n}\neven_odd_palindrome(1000);", "  var result = [];\n  var even\
    \ = 0;\n  var odd = 0;\n  for(var i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n\
    \      if(isEven(i)){\n        even++;\n      } else {\n        odd++;\n     \
    \ }\n    }\n  }\n  result.push(even);\n  result.push(odd);\n  return result;\n\
    }\n", "    let evens = 0, odds = 0;\n    for(let i = 1; i <= n; i++){\n      \
    \  i === parseInt(i.toString().split('').reverse().join('')) ? i % 2 === 0 ? evens++\
    \ : odds++ : null;\n    }\n    return [evens, odds];\n}\n", "  let even = 0;\n\
    \  let odd = 0;\n  for(let i = 1; i <= n; i++){\n    let isPalindrome = true;\n\
    \    let num = i;\n    let rev = 0;\n    while(num > 0){\n      let digit = num\
    \ % 10;\n      rev = rev * 10 + digit;\n      num = Math.floor(num / 10);\n  \
    \  }\n    if(rev !== i){\n      isPalindrome = false;\n    }\n    if(isPalindrome){\n\
    \      if(i % 2 === 0){\n        even++;\n      } else {\n        odd++;\n   \
    \   }\n    }\n  }\n  return [even, odd];\n}", "  let even_palindrome = 0;\n  let\
    \ odd_palindrome = 0;\n  for(let i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n\
    \      if(i % 2 === 0){\n        even_palindrome++;\n      }else{\n        odd_palindrome++;\n\
    \      }\n    }\n  }\n  return [even_palindrome, odd_palindrome];\n}", "  var\
    \ evens = 0;\n  var odds = 0;\n  for(var i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n\
    \      if(i % 2 === 0){\n        evens++;\n      } else {\n        odds++;\n \
    \     }\n    }\n  }\n  return [evens, odds];\n}\n", "  var even = 0;\n  var odd\
    \ = 0;\n  for(var i = 1; i <= n; i++){\n    if(i === reverse(i)){\n      if(i\
    \ % 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "    let even_count = 0;\n    let odd_count\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        let is_palindrome = true;\n\
    \        for(let j = 0; j < i.toString().length / 2; j++){\n            if(i.toString()[j]\
    \ !== i.toString()[i.toString().length - 1 - j]){\n                is_palindrome\
    \ = false;\n                break;\n            }\n        }\n        if(is_palindrome){\n\
    \            i.toString().length % 2 === 0 ? even_count++ : odd_count++;\n   \
    \     }\n    }\n    return [even_count, odd_count];\n}\n", "\t//let even = 0,\
    \ odd = 0;\n\t//for(let i = 1; i <= n; i++){\n\t//\tlet str = i.toString();\n\t\
    //\tlet rev = str.split('').reverse().join('');\n\t//\tif(str === rev){\n\t//\t\
    \tif(i % 2 === 0){\n\t//\t\t\teven++;\n\t//\t\t}else{\n\t//\t\t\todd++;\n\t//\t\
    \t}\n\t//\t}\n\t//}\n\t//return [even, odd];\n\t//const is_palindrome = (n) =>\
    \ {\n\t//\treturn n.toString() === n.toString().split('').reverse().join('');\n\
    \t//};\n\t//const is_even = (n) => {\n\t//\treturn n % 2 === 0;\n\t//};\n\t//const\
    \ even = [...Array(n+1).keys()].filter(is_palindrome).filter(is_even).length;\n\
    \t//const odd = [...Array(n+1).keys()].filter(is_palindrome).filter(n => !is_even(n)).length;\n\
    \t//return [even, odd];\n\t//let even = 0, odd = 0;\n\t//for(let i = 1; i <= n;\
    \ i++){\n\t//\tif(is_palindrome(i)){\n\t//\t\tif(is_even(i)){\n\t//\t\t\teven++;\n\
    \t//\t\t}else{\n\t//\t\t\todd++;\n\t//\t\t}\n\t//\t}\n\t//}\n\t//return [even,\
    \ odd];\n\tconst is_palindrome = (n) => {\n\t\treturn n.toString() === n.toString().split('').reverse().join('');\n\
    \t};\n\tconst is_even = (n) => {\n\t\treturn n % 2 === 0;\n\t};\n\tconst even\
    \ = [...Array(n+1).keys()].filter(is_palindrome).filter(is_even).length;\n\tconst\
    \ odd = [...Array(n+1).keys()].filter(is_palindrome", "    let odd = 0;\n    let\
    \ even = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n\
    \            if(i % 2 == 0){\n                even++;\n            }else{\n  \
    \              odd++;\n            }\n        }\n    }\n    return [even, odd];\n\
    }\n", "    function isPalindrome(a){\n        if(a.toString() === a.toString().split('').reverse().join('')){\n\
    \            return true;\n        }\n        return false;\n    }\n    var odd_palindrome\
    \ = 0;\n    var even_palindrome = 0;\n    for(var i = 1; i <= n; i++){\n     \
    \   if(isPalindrome(i)){\n            if(i % 2 === 0){\n                even_palindrome++;\n\
    \            }\n            else{\n                odd_palindrome++;\n       \
    \     }\n        }\n    }\n    return [even_palindrome, odd_palindrome];\n}\n\
    var test = even_odd_palindrome(15);", "  let even = 0;\n  let odd = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(check_palindrome(i)){\n      if(i.toString().length\
    \ % 2 === 0){\n        even++;\n      } else {\n        odd++;\n      }\n    }\n\
    \  }\n  return [even, odd];\n}\n", "\tlet even = 0;\n\tlet odd = 0;\n\tfor(let\
    \ i = 1; i <= n; i++){\n\t\tif(n % 2 == 0){\n\t\t\teven++;\n\t\t} else {\n\t\t\
    \todd++;\n\t\t}\n\t}\n\treturn [even, odd];\n}", "  let even = 0;\n  let odd =\
    \ 0;\n  for(let i = 1; i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        even++;\n      }else{\n        odd++;\n     \
    \ }\n    }\n  }\n  return `${even} ${odd}`;\n}\n", "\tvar result = {\n\t\teven:\
    \ 0,\n\t\todd: 0\n\t};\n\tfor(var i = 1; i <= n; i++){\n\t\tif(check_palindrome(i)){\n\
    \t\t\tif(i % 2 == 0){\n\t\t\t\tresult.even++;\n\t\t\t}else{\n\t\t\t\tresult.odd++;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn result;\n}", "    var even_count = 0;\n    var odd_count\
    \ = 0;\n    var str = \"\";\n    for(var i = 1; i <= n; i++){\n        str = i.toString();\n\
    \        if(str == str.split(\"\").reverse().join(\"\")){\n            if(i %\
    \ 2 == 0){\n                even_count++;\n            }else{\n              \
    \  odd_count++;\n            }\n        }\n    }\n    return [even_count, odd_count];\n\
    }", "    var evens = 0, odds = 0;\n    for(var i = 1; i <= n; i++){\n        if(i.toString()\
    \ === i.toString().split('').reverse().join('')){\n            if(i % 2 === 0){\n\
    \                evens += 1;\n            } else {\n                odds += 1;\n\
    \            }\n        }\n    }\n    return [evens, odds];\n}\n", "  var output\
    \ = [0,0];\n  for(var i = 1; i <= n; i++){\n    var str = \"\" + i;\n    if(str.length\
    \ > 1){\n      var first = str.substring(0, str.length - 1);\n      var second\
    \ = str.substring(str.length - 1, str.length);\n      if(first == second.split(\"\
    \").reverse().join(\"\")){\n        if(i % 2 === 0){\n          output[0]++;\n\
    \        }else{\n          output[1]++;\n        }\n      }\n    }else{\n    \
    \  if(i % 2 === 0){\n        output[0]++;\n      }else{\n        output[1]++;\n\
    \      }\n    }\n  }\n  return output;\n}", "    let evens = 0;\n    let odds\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n    \
    \        i%2 === 0 ? evens++ : odds++;\n        }\n    }\n    return [evens, odds];\n\
    }\n", "  const even = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1];\n  const odd = [0, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1];\n  const result = [0, 0];\n  for(let i = 10; i <= n; i++){\n\
    \    let num = i;\n    let rev = 0;\n    while(num > 0){\n      rev = rev * 10\
    \ + num % 10;\n      num = Math.floor(num / 10);\n    }\n    num = i;\n    let\
    \ count = 0;\n    while(num !== rev){\n      num = Math.floor(num / 10);\n   \
    \   rev = Math.floor(rev / 10);\n      count++;\n    }\n    if(count === 0){\n\
    \      result[0] += even[i % 10];\n      result[1] += odd[i % 10];\n    }else\
    \ if(count % 2 === 0){\n      result[0] += even[i % 10] + even[rev % 10];\n  \
    \    result[1] += odd[i % 10] + odd[rev % 10];\n    }else{\n      result[0] +=\
    \ even[i % 10] + odd[rev % 10];\n      result[1] += odd[i % 10] + even[rev % 10];\n\
    \    }\n  }\n  return result;\n}\n", "    if(n <= 1){\n        return [0,0];\n\
    \    }\n    let odd_palindrome = 0;\n    let even_palindrome = 0;\n    for(let\
    \ i = 0; i < n; i++){\n        if(is_palindrome(i)){\n            i.toString().length\
    \ % 2 == 0 ? even_palindrome++ : odd_palindrome++;\n        }\n    }\n    return\
    \ [even_palindrome, odd_palindrome];\n}", "  let even=0, odd=0;\n  for(let i=1;\
    \ i<=n; i++){\n    if(isPalindrome(i)){\n      if(i%2===0){\n        even++;\n\
    \      }else{\n        odd++;\n      }\n    }\n  }\n  return [even, odd];\n}\n",
  "    let odd = 0;\n    let even = 0;\n    let nums = [];\n    for(let i = 1; i <=\
    \ n; i++){\n        nums.push(i);\n    }\n    let palindromes = nums.filter(isPalindrome);\n\
    \    palindromes.forEach(num => {\n        if(num % 2 === 0){\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    });\n    return [even, odd];\n\
    }\n", "    let even_count = 0;\n    let odd_count = 0;\n    for(let i = 1; i <=\
    \ n; i++){\n        let str = i.toString();\n        let isPalindrome = true;\n\
    \        for(let j = 0; j < Math.floor(str.length / 2); j++){\n            if(str[j]\
    \ !== str[str.length - 1 - j]){\n                isPalindrome = false;\n     \
    \           break;\n            }\n        }\n        if(isPalindrome){\n    \
    \        if(str.length % 2 === 0){\n                even_count++;\n          \
    \  }else{\n                odd_count++;\n            }\n        }\n    }\n   \
    \ return [even_count, odd_count];\n}\n", "    var count_even=0,count_odd=0;\n\
    \    for(var i=1;i<=n;i++){\n        var palindrome=i.toString().split(\"\").reverse().join(\"\
    \");\n        if(palindrome==i)\n        {\n            if(palindrome.length%2==0)\n\
    \            {\n                count_even++;\n            }\n            else{\n\
    \                count_odd++;\n            }\n        }\n    }\n    return [count_even,count_odd];\n\
    }", "    let even = 0;\n    let odd = 0;\n    let one = n.toString().length;\n\
    \    let two = n.toString().length - 1;\n    let three = n.toString().length -\
    \ 2;\n    if(n.toString().length === 1){\n        return [0,1];\n    }\n    for(let\
    \ i = 0; i < n.toString().length; i++){\n        if(i === 0){\n            if(i.toString()\
    \ === n.toString()[i]){\n                even++;\n            }\n        }\n \
    \       if(i === 1){\n            if(i.toString() === n.toString()[i]){\n    \
    \            even++;\n            }\n        }\n        if(i >= 2){\n        \
    \    if(i === 2){\n                let first = n.toString()[one];\n          \
    \      let second = n.toString()[two];\n                let third = n.toString()[three];\n\
    \                let total = parseInt(first) + parseInt(second) + parseInt(third);\n\
    \                if(total % 2 === 0){\n                    even++;\n         \
    \       }\n                else{\n                    odd++;\n               \
    \ }\n            }\n            if(i > 2){\n                let first = n.toString()[one];\n\
    \                let second = n.toString()[two];\n                let third =\
    \ n.toString()[three];\n                let total = parseInt(first) + parseInt(second)\
    \ + parseInt(third);\n                total = total + i;\n                if(total\
    \ % 2 === 0){\n                    even++;\n                }\n              \
    \  else{\n                    odd++;\n                }\n            }\n     \
    \   }\n    }\n    return [even, odd];\n}\n", "  let even = 0;\n  let odd = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    let palindrome = i.toString().split('').reverse().join('');\n\
    \    if(palindrome === i.toString()){\n      if(i.toString().length % 2 === 0){\n\
    \        even++;\n      }else{\n        odd++;\n      }\n    }\n  }\n  return\
    \ [even, odd];\n}\n", "    let odd=0;\n    let even=0;\n    let palindrome=0;\n\
    \    for(let i=1;i<=n;i++){\n        if(i.toString()===i.toString().split('').reverse().join('')){\n\
    \            palindrome++;\n            if(i%2==0){\n                even++;\n\
    \            }\n            else{\n                odd++;\n            }\n   \
    \     }\n    }\n    return [even,odd];\n}", "    var even= 0, odd= 0;\n    var\
    \ counter= 1;\n    while(counter <= n){\n        if(is_palindrome(counter)){\n\
    \            (counter % 2 === 0)? even++ : odd++;\n        }\n        counter++;\n\
    \    }\n    return [even, odd];\n}\n", "  if(n <= 1) return [0,0];\n  var even_ctr\
    \ = 0;\n  var odd_ctr = 0;\n  for(var i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n\
    \      if(i.toString().length % 2 === 0){\n        even_ctr++;\n      } else {\n\
    \        odd_ctr++;\n      }\n    }\n  }\n  return [even_ctr, odd_ctr];\n}\n",
  "    var even = 0;\n    var odd = 0;\n    for(let i = 1; i <= n; i++){\n       \
    \ if(is_palindrome(i)){\n            if(i % 2 == 0){\n                even++;\n\
    \            }else{\n                odd++;\n            }\n        }\n    }\n\
    \    return [even, odd];\n}", "  let odd = 0, even = 0;\n  for(let i = 1; i <=\
    \ n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        even++;\n      } else {\n        odd++;\n   \
    \   }\n    }\n  }\n  return [even, odd];\n}", "    const pal = new Array(n+1).fill(true)\n\
    \    let even = 0\n    let odd = 0\n    pal[0] = false\n    pal[1] = false\n \
    \   for(let i = 2; i <= n; i++) {\n        if(pal[i]) {\n            if(i.toString().length\
    \ % 2 === 0) even++\n            else odd++\n            for(let j = i + i; j\
    \ <= n; j+=i) pal[j] = false\n        }\n    }\n    return [even, odd]\n}\n",
  "    function is_palindrome(input){\n        let input_array = input.toString().split('');\n\
    \        while(input_array.length > 1){\n            if(input_array.shift() !==\
    \ input_array.pop()){\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n    function is_even(input){\n        return input\
    \ % 2 === 0;\n    }\n    let even_num = 0;\n    let odd_num = 0;\n    for(let\
    \ i = 1; i <= n; i++){\n        if(is_palindrome(i)){\n            if(is_even(i)){\n\
    \                even_num += 1;\n            }else{\n                odd_num +=\
    \ 1;\n            }\n        }\n    }\n    return [even_num, odd_num];\n}", " \
    \ let even = 0;\n  let odd = 0;\n  let count = 0;\n  let count2 = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      if(count === 0){\n   \
    \     even++;\n        count++;\n      } else if(count === 1){\n        odd++;\n\
    \        count2++;\n      }\n    }\n  }\n  console.log(even, odd);\n}\n", "  \
    \  let odd=0,even=0;\n    let nums=[];\n    let str1=\"\";\n    let str2=\"\"\
    ;\n    for(let i=1;i<=n;i++){\n        nums.push(i);\n    }\n    for(let item\
    \ of nums){\n        str1=item.toString();\n        str2=item.toString().split(\"\
    \").reverse().join(\"\");\n        if(str1.length==1){\n            if(item%2==0){\n\
    \                even++;\n            }else{\n                odd++;\n       \
    \     }\n        }else if(str1.length==2){\n            if(str1===str2){\n   \
    \             if(item%2==0){\n                    even++;\n                }else{\n\
    \                    odd++;\n                }\n            }\n        }else{\n\
    \            if(str1==str2){\n                if(item%2==0){\n               \
    \     even++;\n                }else{\n                    odd++;\n          \
    \      }\n            }\n        }\n    }\n    return [even,odd];\n}\n", "   \
    \ if(n<=0){\n        return [0,0];\n    }\n    let res= [0,0];\n    for(let i=1;i<=n;i++){\n\
    \        if(isPalindrome(i)){\n            if(i%2==0){\n                res[0]++;\n\
    \            }else{\n                res[1]++;\n            }\n        }\n   \
    \ }\n    return res;\n}\n", "    let [even, odd] = [0, 0];\n    for(let i = 1;\
    \ i <= n; i++){\n        if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \            i % 2 === 0 ? even++ : odd++;\n        }\n    }\n    return [even,\
    \ odd];\n}", "    // return [count of even palindromes, count of odd palindromes]\n\
    }", "  let even_count = 0;\n  let odd_count = 0;\n  let nums = [];\n  for(let\
    \ i = 1; i <= n; i++){\n    nums.push(i);\n  }\n  for(let num of nums){\n    if(num\
    \ === num.toString().split('').reverse().join('')){\n      if(num % 2 === 0){\n\
    \        even_count++;\n      } else{\n        odd_count++;\n      }\n    }\n\
    \  }\n  return [even_count, odd_count];\n}\n", "    let even = 0;\n    let odd\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        let string_i = i.toString();\n\
    \        if(string_i === string_i.split('').reverse().join('')){\n           \
    \ if(string_i.length % 2 === 0){\n                even += 1;\n            }else{\n\
    \                odd += 1;\n            }\n        }\n    }\n    return [even,\
    \ odd];\n}\n", "  var evens = 0;\n  var odds = 0;\n  if(n < 0){\n    return [evens,\
    \ odds];\n  }\n  for(var i = 1; i <= n; i++){\n    if(i < 10){\n      if(i % 2\
    \ == 0){\n        evens++;\n      }\n      else{\n        odds++;\n      }\n \
    \   }\n    else{\n      if(isPalindrome(i)){\n        if(i % 2 == 0){\n      \
    \    evens++;\n        }\n        else{\n          odds++;\n        }\n      }\n\
    \    }\n  }\n  return [evens, odds];\n}\n", "    let res = [];\n    for(let i\
    \ = 1; i <= n; i++){\n        if(isPalindrome(i)){\n            res.push(i);\n\
    \        }\n    }\n    return res;\n}", "    //Your code here\n}", "    var even\
    \ = 0;\n    var odd = 0;\n    for(var i = 1; i <= n; i++){\n        var palindrome\
    \ = i + \"\";\n        var oddEven = true;\n        for(var j = 0; j < palindrome.length\
    \ / 2; j++){\n            if(palindrome[j] != palindrome[palindrome.length - 1\
    \ - j]){\n                oddEven = false;\n                break;\n         \
    \   }\n        }\n        if(oddEven){\n            if(palindrome.length % 2 ==\
    \ 0){\n                even++;\n            }\n            else{\n           \
    \     odd++;\n            }\n        }\n    }\n    return [even, odd];\n}\n",
  "    let even = 0;\n    let odd = 0;\n    let arr = [];\n    for(let i = 1; i <=\
    \ n; i++){\n        arr.push(i);\n    }\n    for(let j = 0; j < arr.length; j++){\n\
    \        let rev = (arr[j] + '').split('').reverse().join('');\n        if(arr[j]\
    \ == rev){\n            if(arr[j] % 2 == 0){\n                even++;\n      \
    \      } else {\n                odd++;\n            }\n        }\n    }\n   \
    \ return [even, odd];\n}\n", "  let even = 0, odd = 0;\n  for(let i = 1; i <=\
    \ n; i++){\n    if(String(i) === String(i).split('').reverse().join('')){\n  \
    \    if(i % 2 === 0){\n        even++;\n      } else {\n        odd++;\n     \
    \ }\n    }\n  }\n  return [even, odd];\n}\n", "  let result = [0, 0];\n  for(let\
    \ i = 1; i <= n; i++){\n    if(isPalindrome(i.toString())){\n      if(i % 2 ===\
    \ 0){\n        result[0]++;\n      } else {\n        result[1]++;\n      }\n \
    \   }\n  }\n  return result;\n}\n", "    function isPalindrome(n){\n        if(n\
    \ < 10) return true;\n        let m = n;\n        let r = 0;\n        while(m\
    \ > 0){\n            r = 10 * r + m % 10;\n            m = Math.floor(m / 10);\n\
    \        }\n        return r === n;\n    }\n    let count = 0;\n    let oddCount\
    \ = 0;\n    for(let i = 1; i <= n; i++){\n        if(isPalindrome(i)){\n     \
    \       if(i % 2 === 0) count++;\n            else oddCount++;\n        }\n  \
    \  }\n    return [count, oddCount];\n}\n", "  if(typeof n !== 'number' || n <\
    \ 1 || n > Math.pow(10, 3)) return;\n  let count_odd_palindrome = 0;\n  let count_even_palindrome\
    \ = 0;\n  for(let i = 1; i <= n; i++){\n    if(is_palindrome(i)){\n      if(is_even(i)){\n\
    \        count_even_palindrome++;\n      } else {\n        count_odd_palindrome++;\n\
    \      }\n    }\n  }\n  return [count_even_palindrome, count_odd_palindrome];\n\
    }\n", "  let even = 0, odd = 0;\n  for(let i = 1; i <= n; i++){\n    isPalindrome(i)\
    \ && i % 2 === 0 ? even++ : isPalindrome(i) && i % 2 !== 0 ? odd++ : \"\";\n \
    \ }\n  return [even, odd];\n}\n", "  let even = 0;\n  let odd = 0;\n  for(let\
    \ i = 1; i <= n; i++){\n    if(i.toString() === i.toString().split('').reverse().join('')){\n\
    \      if(i % 2 === 0){\n        even++;\n      } else {\n        odd++;\n   \
    \   }\n    }\n  }\n  return [even, odd];\n}\n", "  let even = 0;\n  let odd =\
    \ 0;\n  for(let i = 1; i <= n; i++){\n    if(isPalindrome(i)){\n      i % 2 ==\
    \ 0 ? even++ : odd++;\n    }\n  }\n  return [even, odd];\n}\n", "\tlet evens =\
    \ 0;\n\tlet odds = 0;\n\tfor(let i = 1; i <= n; i++){\n\t\tif(isPalindrome(i)){\n\
    \t\t\tif(isEven(i)){\n\t\t\t\tevens += 1;\n\t\t\t}else{\n\t\t\t\todds += 1;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn [evens, odds];\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

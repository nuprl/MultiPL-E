language: js
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar i;\n\tfor(i = 0; i < string.length - substring.length + 1;\
    \ i++){\n\t\tif(string.substring(i, substring.length + i) == substring){\n\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tlet\
    \ count = 0;\n\tlet index = 0;\n\twhile (index !== -1){\n\t\tindex = string.indexOf(substring,\
    \ index);\n\t\tif (index !== -1){\n\t\t\tcount++;\n\t\t\tindex++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(string.length\
    \ == 0 || substring.length == 0)\n\t\treturn 0;\n\tvar arr = string.split(substring);\n\
    \treturn arr.length - 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpx5xd_w_d.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5xd_w_d.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ regexp = new RegExp(substring, 'g');\n  return string.match(regexp).length;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp53v8z3z4.js:4\n  return string.match(regexp).length;\n        \
    \                     ^\n\nTypeError: Cannot read properties of null (reading\
    \ 'length')\n    at how_many_times (/tmp/tmp53v8z3z4.js:4:30)\n    at test (/tmp/tmp53v8z3z4.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmp53v8z3z4.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822155
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i <= string.length - substring.length; i++) {\n\
    \    if (string.substr(i, substring.length) == substring) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ re = new RegExp(substring, \"g\");\n  return string.match(re).length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpi_yf1l7o.js:4\n  return string.match(re).length;\n            \
    \             ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at how_many_times (/tmp/tmpi_yf1l7o.js:4:26)\n    at test (/tmp/tmpi_yf1l7o.js:12:20)\n\
    \    at Object.<anonymous> (/tmp/tmpi_yf1l7o.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822155
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ total = 0;\n  for(let i = 0; i <= string.length - substring.length; i++){\n\
    \    for(let j = 0; j < substring.length; j++){\n      if(string[i + j] !== substring[j]){\n\
    \        break;\n      }\n      if(j === substring.length - 1){\n        total++;\n\
    \      }\n    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ number = 0;\n  let index = 0;\n  while (index < string.length) {\n    if (string.substring(index,\
    \ index + substring.length) === substring) {\n      number++;\n      index +=\
    \ substring.length;\n    } else {\n      index++;\n    }\n  }\n  return number;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpuh7c20qd.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuh7c20qd.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i <= string.length; i++){\n        if(string.indexOf(substring,\
    \ i) === i){\n            count++;\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (substring.length > string.length) return 0;\n    if (substring.length === 0)\
    \ return 0;\n    var count = 0;\n    for (var i = 0; i < string.length; i++){\n\
    \        if (string.substring(i, i + substring.length) === substring){\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ times = 0;\n    while(true){\n        var index = string.indexOf(substring);\n\
    \        if(index != -1){\n            times += 1;\n            string = string.slice(index\
    \ + 1);\n        }\n        else{\n            break;\n        }\n    }\n    return\
    \ times;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(!string\
    \ || !substring){\n        return 0;\n    }\n    var count = 0;\n    var i;\n\
    \    for(i = 0; i <= string.length - substring.length; i++){\n        if(string.substring(i,\
    \ i + substring.length) === substring){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    string\
    \ = string.split('');\n    substring = substring.split('');\n    var lastIndex\
    \ = -1;\n    var count = 0;\n    for(var j = 0; j < substring.length; j++){\n\
    \        for(var i = 0; i < string.length; i++){\n            if(string[i] ===\
    \ substring[j]){\n                if(i > lastIndex){\n                    if(j\
    \ === 0){\n                        count++;\n                    }\n         \
    \           lastIndex = i;\n                    break;\n                }\n  \
    \          }\n        }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpf3sh1p_0.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf3sh1p_0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ counter = 0;\n  let length = substring.length;\n  for(let i = 0; i < string.length;\
    \ i++){\n    if(string.substring(i, i + length) === substring){\n      counter++;\n\
    \    }\n  }\n  return counter;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  for(let i = 0; i < string.length; i++){\n    if(string.substring(i,\
    \ i + substring.length) === substring){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var index = 0;\n    while(index < string.length){\n        var\
    \ pos = string.indexOf(substring, index);\n        if(pos == -1){\n          \
    \  break;\n        }else{\n            count++;\n            index = pos + 1;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  let i = 0;\n  while(i < string.length){\n    let temp = i;\n \
    \   let j = 0;\n    while(string[i] === substring[j]){\n      i++;\n      j++;\n\
    \      if(j === substring.length){\n        count++;\n        break;\n      }\n\
    \    }\n    i = temp;\n    i++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ counter = 0;\n    for(let i = 0; i <= string.length - substring.length; i++){\n\
    \        if(string.substring(i, i + substring.length) === substring){\n      \
    \      counter++;\n        }\n    }\n    return counter;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\treturn\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp2ykq7vid.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ykq7vid.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar subLen = substring.length;\n\tvar strLen = string.length;\n\
    \tfor(var i = 0; i < strLen; i++){\n\t\tif(string.substring(i, i + subLen) ==\
    \ substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(string.includes(substring)){\n\
    \t\tvar results = string.match(new RegExp(substring, \"g\"));\n\t\tconsole.log(results.length);\n\
    \t}\n\telse{\n\t\tconsole.log(0);\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpev6z3l0t.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpev6z3l0t.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    '
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string.substring(i,\
    \ i + substring.length) === substring){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //Get\
    \ the length of both string and substring.\n    var string_length = string.length;\n\
    \    var substring_length = substring.length;\n    //Count how many times the\
    \ substring is found in the string.\n    var count = 0;\n    for(var i = 0; i\
    \ < string_length; i++){\n        if(string.substring(i, i + substring_length)\
    \ == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ times = 0\n  for(let i = 0; i < string.length; i++){\n    for(let j = 0; j <\
    \ substring.length; j++){\n      if(string[i + j] === substring[j]){\n       \
    \ if(j === substring.length - 1){\n          times++\n        }\n      } else\
    \ {\n        break\n      }\n    }\n  }\n  return times\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar pos = string.indexOf(substring);\n\twhile(pos != -1){\n\t\t\
    count++;\n\t\tpos = string.indexOf(substring, pos + 1);\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ currentIndex = 0;\n  var count = 0;\n  while (currentIndex != -1) {\n    currentIndex\
    \ = string.indexOf(substring, currentIndex);\n    if (currentIndex != -1) {\n\
    \      count++;\n      currentIndex += substring.length;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpm4suctl7.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm4suctl7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  for(let i = 0; i < string.length; i++){\n    let sub = string.substring(i,i+substring.length);\n\
    \    if(sub === substring){\n      count++;\n    }\n  }\n  return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ substring_length = substring.length;\n    var sum = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        if(string.substring(i, i + substring_length)\
    \ == substring){\n            sum += 1;\n        }\n    }\n    return sum;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(substring\
    \ === ''){\n        return null;\n    }\n    var substringLength = substring.length;\n\
    \    var times = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string.substr(i,\
    \ substringLength) === substring){\n            times++;\n        }\n    }\n \
    \   return times;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  //Your\
    \ code goes here!\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpgej8suqi.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgej8suqi.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar string_index = 0;\n\tvar substring_index = 0;\n\twhile(string_index<string.length){\n\
    \t\tif(string[string_index]===substring[substring_index]){\n\t\t\tsubstring_index++;\n\
    \t\t\tif(substring_index===substring.length){\n\t\t\t\tcount++;\n\t\t\t\tsubstring_index\
    \ = 0;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tstring_index = string_index - substring_index;\n\
    \t\t\tsubstring_index = 0;\n\t\t}\n\t\tstring_index++;\n\t}\n\treturn count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpnmm_hoeq.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnmm_hoeq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ sum = 0, pos = 0;\n    while (true) {\n        pos = string.indexOf(substring,\
    \ pos);\n        if (pos >= 0) {\n            sum += 1;\n            pos += 1;\n\
    \        } else break;\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i < string.length; i++) {\n        if (string.substr(i,\
    \ substring.length) == substring) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(string.length\
    \ < substring.length)\n\t\treturn 0;\n\tlet count = 0;\n\tfor(let i = 0; i <=\
    \ string.length - substring.length; i++){\n\t\tif(string.substring(i, i + substring.length)\
    \ == substring)\n\t\t\tcount++;\n\t}\n\treturn count;\n}\n\n\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //replace\
    \ all cases of substring with \"*\"\n    var modified = string.replace(substring,\
    \ \"*\");\n    var count = (modified.split(\"*\").length - 1);\n\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp6k8mu8u5.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6k8mu8u5.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ times = 0;\n\tvar substring_length = substring.length;\n\tvar start_position\
    \ = 0;\n\tvar index = string.indexOf(substring, start_position);\n\twhile(index\
    \ != -1){\n\t\ttimes++;\n\t\tstart_position = index + substring_length;\n\t\t\
    index = string.indexOf(substring, start_position);\n\t}\n\treturn times;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp__c2c6oa.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp__c2c6oa.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  //your\
    \ code here\n  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n \
    \   if (string.substring(i, i + substring.length) === substring) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ times = 0;\n  for(var i = 0; i < string.length; i++){\n    var index = string.indexOf(substring,\
    \ i);\n    if(index !== -1){\n      times++;\n      i = index + 1;\n    } else\
    \ {\n      break;\n    }\n  }\n  return times;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ counter = 0;\n  let pos = string.indexOf(substring);\n  while (pos !== -1) {\n\
    \    counter++;\n    pos = string.indexOf(substring, pos + 1);\n  }\n  return\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  var index = string.indexOf(substring);\n  while (index >= 0) {\n\
    \    count++;\n    index = string.indexOf(substring, index + 1);\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(string.indexOf(substring)==-1){\n\
    \t\treturn 0;\n\t}\n\tvar times = 0;\n\tvar index = string.indexOf(substring);\n\
    \twhile(index!=-1){\n\t\ttimes++;\n\t\tindex = string.indexOf(substring, index+1);\n\
    \t}\n\treturn times;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  // Write\
    \ your code here\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpzdgjlwxb.js:12:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzdgjlwxb.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ reg = new RegExp(substring, \"g\");\n    return string.match(reg).length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp4a23wftx.js:4\n    return string.match(reg).length;\n         \
    \                   ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at how_many_times (/tmp/tmp4a23wftx.js:4:29)\n    at test (/tmp/tmp4a23wftx.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmp4a23wftx.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (string.length < substring.length) return 0;\n    let counter = 0;\n    for\
    \ (let i = 0; i < string.length; i++){\n        if (string.slice(i, i + substring.length)\
    \ === substring){\n            counter++;\n        }\n    }\n    return counter;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ split = string.split(substring);\n    return split.length - 1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpvyc9e2ti.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvyc9e2ti.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n   return\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmphatpk9j4.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphatpk9j4.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring)\n          \
    \  count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i < string.length; i++) {\n    for (var j = 0;\
    \ j < substring.length; j++) {\n      if (string[i+j] !== substring[j]) {\n  \
    \      break;\n      }\n      if (j == substring.length - 1) {\n        count++;\n\
    \      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ sub = substring;\n    var str = string;\n    var substring_length = sub.length;\n\
    \    var string_length = str.length;\n    var difference = string_length - substring_length;\n\
    \    var counter = 0;\n    for(var i = 0; i <= difference; i++){\n        if(sub\
    \ == str.substring(i, substring_length + i)){\n            counter += 1;\n   \
    \     }\n    }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ sum = 0;\n    let ind = string.indexOf(substring);\n    while(ind != -1){\n\
    \        ind = string.indexOf(substring, ind + 1);\n        sum++;\n    }\n  \
    \  return sum;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var n = string.indexOf(substring);\n    while (n != -1) {\n\
    \        count++;\n        n = string.indexOf(substring, n + 1);\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i < string.length; i++){\n        let found =\
    \ true;\n        for(let j = 0; j < substring.length; j++){\n            if(string[i\
    \ + j] !== substring[j]){\n                found = false;\n                break;\n\
    \            }\n        }\n        if(found){\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ x = 0;\n    let i = string.indexOf(substring);\n    while (i !== -1) {\n   \
    \     x++;\n        i = string.indexOf(substring, i + 1);\n    }\n    return x;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ counter = 0;\n    var length = substring.length;\n    var index = string.indexOf(substring);\n\
    \    while(index != -1){\n        counter++;\n        index = string.indexOf(substring,\
    \ index + length);\n    }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp7wvl6ex2.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7wvl6ex2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ parts = string.split(substring);\n\treturn parts.length-1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpbdre94_h.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbdre94_h.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ num = 0;\n\tvar last_index = -1;\n\tdo{\n\t\tlast_index = string.indexOf(substring,\
    \ last_index + 1);\n\t\tif(last_index !== -1){\n\t\t\tnum += 1;\n\t\t}\n\t}while(last_index\
    \ !== -1);\n\treturn num;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  for(let i = 0; i < string.length; i++){\n    if(string.substring(i,\
    \ i + substring.length) === substring){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nlet str = 'Tobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornott\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpnnsba0hx.js:12\nlet str = 'Tobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornottobeornott\n\
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i < string.length; i++) {\n    if (string.slice(i,\
    \ i + substring.length) == substring) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ string_length = string.length;\n\tvar substring_length = substring.length;\n\
    \tvar counter = 0;\n\tvar check = false;\n\tfor(var i = 0; i < string_length;\
    \ i++){\n\t\tfor(var j = 0; j < substring_length; j++){\n\t\t\tcheck = false;\n\
    \t\t\tif(string[i+j] !== substring[j]){\n\t\t\t\tcheck = true;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif(check === false){\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let length = substring.length;\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(string.substring(i, i + length) === substring){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ n = 0;\n    var pos = 0;\n    while (true) {\n        pos = string.indexOf(substring,\
    \ pos);\n        if (pos != -1) {\n            n++;\n            pos += substring.length;\n\
    \        } else {\n            break;\n        }\n    }\n    return (n);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpeac94caz.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeac94caz.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ substring_length = substring.length;\n    var num_overlaping_cases = 0;\n  \
    \  var is_overlaping = false;\n    var length = string.length;\n    var i;\n \
    \   var j;\n    for(i = 0; i < length; i++){\n        if(string[i] === substring[0]){\n\
    \            is_overlaping = true;\n            j = 0;\n            while(is_overlaping\
    \ && j < substring_length){\n                if(string[i + j] !== substring[j]){\n\
    \                    is_overlaping = false;\n                }\n             \
    \   j++;\n            }\n            if(is_overlaping){\n                num_overlaping_cases++;\n\
    \            }\n        }\n    }\n    return num_overlaping_cases;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ l=substring.length;\n    var count=0;\n    for(var i=0;i<string.length;i++){\n\
    \        if(string.substring(i,i+l)==substring){\n            count++;\n     \
    \   }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var sub_len = substring.length;\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.substr(i, sub_len) == substring){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let stop = string.length - substring.length;\n    for(let i\
    \ = 0; i <= stop; i++){\n        if(string.substring(i, i + substring.length)\
    \ === substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar i = 0;\n\twhile(i < string.length){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t\ti += substring.length;\n\
    \t\t}\n\t\telse{\n\t\t\ti++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpayfdj7tr.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpayfdj7tr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n   var\
    \ count = 0;\n   for (i=0; i<string.length;i++){\n     if (string.substring(i,i+substring.length)==substring){\n\
    \       count++;\n     }\n   }\n   return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ regex = new RegExp(substring, 'g');\n  return string.match(regex).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpqvxsazik.js:4\n  return string.match(regex).length;\n         \
    \                   ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at how_many_times (/tmp/tmpqvxsazik.js:4:29)\n    at test (/tmp/tmpqvxsazik.js:12:20)\n\
    \    at Object.<anonymous> (/tmp/tmpqvxsazik.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ n = 0;\n    var pos = 0;\n    var l = substring.length;\n    \n    while (true)\
    \ {\n        pos = string.indexOf(substring, pos);\n        if (pos > -1) {\n\
    \            n++;\n            pos += l;\n        } else {\n            break;\n\
    \        }\n    }\n    return (n);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpml7b_fb1.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpml7b_fb1.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ re = new RegExp(substring, \"g\");\n\tvar match = string.match(re);\n\treturn\
    \ match.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpa_fblk9k.js:5\n\treturn match.length;\n\t             ^\n\nTypeError:\
    \ Cannot read properties of null (reading 'length')\n    at how_many_times (/tmp/tmpa_fblk9k.js:5:15)\n\
    \    at test (/tmp/tmpa_fblk9k.js:13:20)\n    at Object.<anonymous> (/tmp/tmpa_fblk9k.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(string.indexOf(substring)==-1){\n\
    \t\treturn 0;\n\t}\n\telse{\n\t\tvar count = 1;\n\t\tvar string_temp = string.substring(string.indexOf(substring)+substring.length);\n\
    \t\twhile(string_temp.indexOf(substring)!=-1){\n\t\t\tcount++;\n\t\t\tstring_temp\
    \ = string_temp.substring(string_temp.indexOf(substring)+substring.length);\n\t\
    \t}\n\t\treturn count;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp3heyogja.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3heyogja.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = string.match(new RegExp(substring, \"g\"));\n\treturn count.length;\n\
    }\n\nvar substring = \"P\";\nvar string = \"PPaPPPPPPPPPPPPPPPPP\";\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptoo_ew3g.js:4\n\treturn count.length;\n\t             ^\n\nTypeError:\
    \ Cannot read properties of null (reading 'length')\n    at how_many_times (/tmp/tmptoo_ew3g.js:4:15)\n\
    \    at test (/tmp/tmptoo_ew3g.js:14:20)\n    at Object.<anonymous> (/tmp/tmptoo_ew3g.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i <= string.length - substring.length; i++){\n\
    \        if(string.substring(i, i + substring.length) === substring){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  for (let i = 0; i < string.length; i++){\n    for (let j = 0;\
    \ j < substring.length; j++){\n      if (string[i + j] != substring[j]){\n   \
    \     break;\n      }\n      if (j == substring.length - 1){\n        count++;\n\
    \      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (substring === \"\"){\n        return \"Infinity\";\n    }\n    var times =\
    \ 0;\n    for (var i = 0; i <= string.length; i++){\n        if (string.substring(i,\
    \ substring.length + i) === substring){\n            times += 1;\n        }\n\
    \    }\n    return times;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i <= string.length - substring.length; i++){\n\t\
    \tif(string.substring(i, i + substring.length) == substring){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  var newString = \"\";\n  for(var i = 0; i < string.length; i++){\n\
    \    newString += string[i];\n    if(newString.includes(substring)){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpjsx5s316.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjsx5s316.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ i = 0;\n    let count = 0;\n    while(i < string.length){\n        let temp\
    \ = string.indexOf(substring, i);\n        if(temp !== -1){\n            count++;\n\
    \            i = temp + 1;\n        }else{\n            break;\n        }\n  \
    \  }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ index = 0;\n    var count = 0;\n    while (true){\n        index = string.indexOf(substring,\
    \ index);\n        if (index != -1){\n            count++;\n            index\
    \ += substring.length;\n        } else {\n            break;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpaz7sg1dk.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaz7sg1dk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ len = string.length;\n    var sublen = substring.length;\n    var count = 0;\n\
    \    for(var i = 0; i < len; i++){\n        if(string.slice(i, i + sublen) ==\
    \ substring){\n            count++;\n        }\n    }\n    return count;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  if (substring\
    \ === \"\") return null;\n  let count = 0;\n  for (let i = 0; i < string.length;\
    \ i++){\n    if (string.slice(i, i + substring.length) === substring){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = string.match(new RegExp(substring, \"g\"));\n  return count ? count.length\
    \ : 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpytds2mhr.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpytds2mhr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    return\
    \ string.match(new RegExp(substring, 'g')).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpoqg3eroi.js:3\n    return string.match(new RegExp(substring, 'g')).length;\n\
    \                                                   ^\n\nTypeError: Cannot read\
    \ properties of null (reading 'length')\n    at how_many_times (/tmp/tmpoqg3eroi.js:3:52)\n\
    \    at test (/tmp/tmpoqg3eroi.js:11:20)\n    at Object.<anonymous> (/tmp/tmpoqg3eroi.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var last = -1;\n    while(string.indexOf(substring, last + 1)\
    \ != -1){\n        last = string.indexOf(substring, last + 1);\n        count++;\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ arr = [];\n\tvar start = 0;\n\twhile(string.indexOf(substring, start) != -1){\n\
    \t\tarr.push(string.indexOf(substring, start));\n\t\tstart = string.indexOf(substring,\
    \ start) + 1;\n\t}\n\treturn arr.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ times = 0;\n    let index = 0;\n    while(index<string.length){\n        let\
    \ current = string.indexOf(substring, index);\n        if(current!=-1){\n    \
    \        times+=1;\n            index = current+1;\n        }else{\n         \
    \   break;\n        }\n    }\n    return times;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var index = 0;\n    while ((index = string.indexOf(substring,\
    \ index + 1)) != -1) {\n        count++;\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpumxag_u9.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpumxag_u9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar index = 0;\n\twhile(string.indexOf(substring, index) !== -1){\n\
    \t\tindex = string.indexOf(substring, index) + 1;\n\t\tcount++;\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var string_length = string.length;\n    var substring_length\
    \ = substring.length;\n    var stop_loop = string_length - substring_length;\n\
    \    for(var i = 0; i <= stop_loop; i++){\n        if(string.substring(i, i +\
    \ substring_length) == substring){\n            count++;\n        }\n    }\n \
    \   return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ n = 0;\n    var pos = 0;\n    var step = substring.length;\n\n    while (true)\
    \ {\n        pos = string.indexOf(substring, pos);\n        if (pos >= 0) {\n\
    \            n++;\n            pos += step;\n        } else break;\n    }\n  \
    \  return n;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpisl9czwn.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpisl9czwn.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ count = 0;\n  let start = 0;\n  while(string.indexOf(substring, start) !== -1){\n\
    \    count++;\n    start = string.indexOf(substring, start) + 1;\n  }\n  return\
    \ count;\n}\n\nhow_many_times(\"hehehehehehehehehehehehehehe\", \"he\"); // 14\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ regex = new RegExp(substring,\"g\");\n  var matches = string.match(regex);\n\
    \  if(matches == null){\n    return 0;\n  }\n  return matches.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmphvbputhk.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphvbputhk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar index = string.indexOf(substring);\n\twhile(index >= 0){\n\
    \t\tcount++;\n\t\tindex = string.indexOf(substring, index + 1);\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ substrings_count = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string.substr(i,\
    \ substring.length) == substring){\n      substrings_count++;\n    }\n  }\n  return\
    \ substrings_count;\n}\nvar how_many_times_answer = how_many_times(\"hello, the\
    \ world's greatest hello\", \"hello\");\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let string_counter = 0;\n    let substring_counter = 0;\n  \
    \  while(string_counter < string.length){\n        if(string[string_counter] ==\
    \ substring[substring_counter]){\n            substring_counter++;\n         \
    \   if(substring_counter == substring.length){\n                count++;\n   \
    \             substring_counter = 0;\n            }\n        }\n        else{\n\
    \            substring_counter = 0;\n        }\n        string_counter++;\n  \
    \  }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpgn0ypxw6.js:29:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgn0ypxw6.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ parts = string.split(substring);\n  return parts.length - 1;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpmojz321o.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmojz321o.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    const\
    \ result = string.match(new RegExp(substring, 'g'));\n    return result === null\
    \ ? 0 : result.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpqfvw4pss.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqfvw4pss.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\t//Write\
    \ your code here\n\n};\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpdyo3btvc.js:12:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpdyo3btvc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ times = 0;\n    var index = 0;\n    for(var i = 0; i<string.length; i++){\n\
    \        if(string[i] === substring[index]){\n            if(index === 0){\n \
    \               var index_start = i;\n            }\n            index++;\n  \
    \          if(index === substring.length){\n                var index_end = i;\n\
    \                index = 0;\n                i = index_start;\n              \
    \  times++;\n            }\n        }else{\n            index = 0;\n        }\n\
    \    }\n    return times;\n}\n\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n   var\
    \ a= 0, pos= 0;\n   while(true){\n      pos= string.indexOf(substring, pos);\n\
    \      if(pos>=0){ a++; pos+= substring.length;}\n      else{return a;}\n   }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpx7yum0hk.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx7yum0hk.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ counter = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string.substring(i,\
    \ i + substring.length) == substring){\n            counter++;\n        }\n  \
    \  }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ index = 0;\n    var count = 0;\n    while (index < string.length) {\n      \
    \  if (string.indexOf(substring, index) === index) {\n            count += 1;\n\
    \            index += substring.length;\n        } else {\n            index +=\
    \ 1;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp3szryn1z.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3szryn1z.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ str = string.split(substring).length - 1;\n    return str;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpq7uld1gz.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq7uld1gz.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ regex = new RegExp(substring, \"g\");\n  return string.match(regex).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpq2h3y2_k.js:4\n  return string.match(regex).length;\n         \
    \                   ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at how_many_times (/tmp/tmpq2h3y2_k.js:4:29)\n    at test (/tmp/tmpq2h3y2_k.js:12:20)\n\
    \    at Object.<anonymous> (/tmp/tmpq2h3y2_k.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ a = string.split(substring)\n  return a.length - 1\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmprkrqhcc5.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprkrqhcc5.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ lastIndex = 0, \n        count = 0;\n    \n    while(lastIndex != -1){\n   \
    \     lastIndex = string.indexOf(substring,lastIndex);\n        \n        if(lastIndex\
    \ != -1){\n            count++;\n            lastIndex += substring.length;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpq4yk02hh.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq4yk02hh.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ sub_length = substring.length;\n    var match_array = string.match(new RegExp(substring,\
    \ 'g'));\n    if(match_array != null){\n        return match_array.length;\n \
    \   }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp3nnzq9zz.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3nnzq9zz.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var str_len = string.length;\n    var sub_len = substring.length;\n\
    \    for(var i = 0; i < str_len; i++){\n        if(string.substring(i, i + sub_len)\
    \ == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ matches = string.match(new RegExp(substring, \"g\"));\n    return matches ?\
    \ matches.length : 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp9ay2uvmf.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9ay2uvmf.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ substring = new RegExp(substring,\"g\");\n    return string.match(substring)\
    \ ? string.match(substring).length : 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpncvd1yja.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpncvd1yja.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //count\
    \ occurences\n    var count = 0;\n    var pos = string.indexOf(substring);\n \
    \   while (pos !== -1) {\n        count++;\n        pos = string.indexOf(substring,\
    \ pos + 1);\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let offset = 0;\n    while (true) {\n        offset = string.indexOf(substring,\
    \ offset);\n        if (offset >= 0) {\n            count++;\n            offset\
    \ += substring.length;\n        } else {\n            break;\n        }\n    }\n\
    \    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpqp46btcz.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqp46btcz.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(substring.length\
    \ > string.length){\n\t\treturn 0;\n\t}else{\n\t\tlet count = 0;\n\t\tlet i =\
    \ 0;\n\t\twhile(i < string.length - substring.length){\n\t\t\tif(string.slice(i,\
    \ i + substring.length) === substring){\n\t\t\t\tcount++;\n\t\t\t\ti += substring.length;\n\
    \t\t\t}else{\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpifeu55be.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpifeu55be.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = string.split(substring).length - 1;\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpwl_qh8z0.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwl_qh8z0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ n = 0;\n    var pos = 0;\n    while (true) {\n        pos = string.indexOf(substring,\
    \ pos);\n        if (pos > -1) {\n            n++;\n            pos += substring.length;\n\
    \        } else {\n            break;\n        }\n    }\n    return (n);\n}\n\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpf08_tpfy.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf08_tpfy.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(string.length\
    \ < substring.length){\n        return 0;\n    }\n    var count = 0;\n    for(var\
    \ i = 0; i < string.length - substring.length + 1; i++){\n        if(string.substring(i,\
    \ i + substring.length) == substring){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //Write\
    \ code here\n    let result = 0;\n    let start = 0;\n    let end = substring.length;\n\
    \    while(end <= string.length){\n        if(string.slice(start, end) === substring){\n\
    \            result++;\n        }\n        start++;\n        end++;\n    }\n \
    \   return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\treturn\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp2ykq7vid.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ykq7vid.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i <= string.length; i++) {\n    if (string.substring(i,\
    \ i + substring.length) == substring) {\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    string.split(substring).length\
    \ - 1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpuppjgirw.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpuppjgirw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ re = new RegExp(substring, \"g\");\n\treturn (string.match(re) || []).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp1i2c6d3x.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1i2c6d3x.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var index = string.indexOf(substring);\n    while(index != -1){\n\
    \        count++;\n        index = string.indexOf(substring, index + 1);\n   \
    \ }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i < string.length; i++) {\n        if (string.substr(i,\
    \ substring.length) == substring)\n            count++;\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ counter = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string.substring(i,\
    \ i + substring.length) === substring){\n            counter++;\n        }\n \
    \   }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i <= string.length - substring.length; i++)\
    \ {\n        if (string.substr(i, substring.length) == substring) {\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822155
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let i = 0;\n    while(string.indexOf(substring, i) !== -1){\n\
    \        count++;\n        i = string.indexOf(substring, i) + 1;\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tif(!string\
    \ || !substring) return 0;\n\t\n\tvar count = 0;\n\tvar index = 0;\n\twhile(index\
    \ < string.length){\n\t\tindex = string.indexOf(substring, index);\n\t\tif(index\
    \ == -1) return count;\n\t\tindex++;\n\t\tcount++;\n\t}\n\treturn count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ regex = new RegExp(substring,\"g\");\n\treturn string.match(regex).length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpd4yyq82g.js:4\n\treturn string.match(regex).length;\n\t       \
    \                   ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at how_many_times (/tmp/tmpd4yyq82g.js:4:28)\n    at test (/tmp/tmpd4yyq82g.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpd4yyq82g.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\treturn\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp2ykq7vid.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ykq7vid.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ i = 0;\n    var count = 0;\n    while(i < string.length){\n        if(string.slice(i,\
    \ i + substring.length) == substring){\n            count++;\n            i +=\
    \ substring.length;\n        }\n        else{\n            i++;\n        }\n \
    \   }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpc7z7rzcj.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpc7z7rzcj.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tstring\
    \ = string.toLowerCase();\n\tsubstring = substring.toLowerCase();\n\tvar count\
    \ = 0;\n\tvar last_found = 0;\n\twhile((last_found = string.indexOf(substring,\
    \ last_found)) != -1){\n\t\tlast_found = last_found + substring.length;\n\t\t\
    count++;\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpn3wa8pio.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn3wa8pio.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ regexp = new RegExp(substring,\"g\");\n\treturn string.match(regexp).length;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp98gqcc2e.js:4\n\treturn string.match(regexp).length;\n\t      \
    \                     ^\n\nTypeError: Cannot read properties of null (reading\
    \ 'length')\n    at how_many_times (/tmp/tmp98gqcc2e.js:4:29)\n    at test (/tmp/tmp98gqcc2e.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmp98gqcc2e.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ s_length = string.length;\n    var sub_length = substring.length;\n    var times\
    \ = 0;\n    for(var i = 0; i <= s_length - sub_length; i++){\n        if(string.substring(i,i+sub_length)\
    \ == substring){\n            times++;\n        }\n    }\n    return times;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i < string.length; i++) {\n    var tempSubstring\
    \ = string.substring(i, substring.length + i);\n    if (tempSubstring === substring)\
    \ {\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let arr = string.split(substring);\n    count = arr.length-1;\n\
    \    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpalx_pm2l.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpalx_pm2l.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(string.indexOf(substring)===-1){\n\
    \        return 0;\n    }\n    if(string.indexOf(substring)!==-1){\n        //if\
    \ not -1, return 1, and recursively call the function with the rest of the string\
    \ without the found substring.\n        return 1 + how_many_times(string.slice(string.indexOf(substring)+substring.length),substring);\n\
    \    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpxcalthc9.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxcalthc9.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  return\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpy94ly1ez.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy94ly1ez.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ text = string;\n\tvar count = 0;\n\twhile(text.indexOf(substring) != -1){\n\t\
    \tcount++;\n\t\ttext = text.replace(substring, \"\");\n\t}\n\tconsole.log(count);\n\
    }\n\nhow_many_times(\"aabcdaabc\", \"abc\");\nhow_many_times(\"aabcdaabc\", \"\
    aa\");\nhow_many_times(\"aabcdaabc\", \"ac\");\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpgd48eq0k.js:20:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpgd48eq0k.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '2

    2

    0

    0

    '
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ result = 0;\n  var j = 0;\n  for(var i = 0; i < string.length; i++){\n    if(string[i]\
    \ === substring[j]){\n      j++;\n      if(j === substring.length){\n        result++;\n\
    \        j = 0;\n      }\n    }\n    else{\n      j = 0;\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmptk0gwnws.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmptk0gwnws.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //Write\
    \ code here\n    let count = 0;\n    let regExp = new RegExp(substring, 'gi');\n\
    \    let found = string.match(regExp);\n    return found ? found.length : 0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp40pi4vpp.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp40pi4vpp.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ res = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tres++;\n\t\t}\n\t}\n\treturn res;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.slice(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    while(string.indexOf(substring) !== -1){\n        string = string.replace(substring,\
    \ '');\n        count++;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp375cs6h9.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp375cs6h9.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i < string.length; i++){\n        for(let j =\
    \ 0; j < substring.length; j++){\n            if(string[i+j] !== substring[j]){\n\
    \                break;\n            }\n            if(j === substring.length\
    \ - 1){\n                count++;\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    let i = 0;\n    while(string.indexOf(substring, i) !== -1){\n\
    \        count++;\n        i = string.indexOf(substring, i) + 1;\n    }\n    return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  // console.log(substring,\
    \ string.substr(0, substring.length));\n  if(string.substr(0, substring.length)\
    \ !== substring){\n    return 0;\n  }\n  return 1 + how_many_times(string.substr(1),\
    \ substring);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmps0hq17o0.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps0hq17o0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  let\
    \ result = 0;\n  for (let i = 0; i < string.length; i++){\n    if (string.slice(i,\
    \ substring.length + i) === substring){\n      result++;\n    }\n  }\n  return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ result = 0;\n    for(i = 0; i < string.length; i++){\n        if(string.slice(i,\
    \ i + substring.length) == substring){\n            result++;\n        }\n   \
    \ }\n    return result;\n}\n\nhow_many_times(\"hello world\", \"o\"); //2\nhow_many_times(\"\
    hello world\", \"l\"); //3\nhow_many_times(\"how are you today?\", \"o\"); //3\n\
    how_many_times(\"how are you today?\", \"are\"); //1\nhow_many_times(\"how are\
    \ you today?\", \"how\"); //1\nhow_many_times(\"Abc\", \"A\"); //1\nhow_many_times(\"\
    Abc\", \"C\"); //1\nhow_many_times(\"\", \"C\"); //0\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  var i = 0;\n  while (string.indexOf(substring, i) > -1) {\n  \
    \  count++;\n    i = string.indexOf(substring, i) + 1;\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ sublength = substring.length;\n    var count = 0;\n    for(var i = 0; i < string.length\
    \ - sublength + 1; i++){\n        if(string.substr(i, sublength) == substring){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var start = 0;\n    while (string.indexOf(substring, start)\
    \ != -1) {\n        count++;\n        start = string.indexOf(substring, start)\
    \ + 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ count = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string.substring(i,\
    \ i + substring.length) === substring){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(string.indexOf(substring)\
    \ != -1){\n        var n = string.indexOf(substring);\n        var counter = 1;\n\
    \        var new_string = string.substring(n+1);\n        return counter + how_many_times(new_string,\
    \ substring);\n    }\n    else{\n        return 0;\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (string.length > substring.length){\n        return(string.split(substring).length\
    \ - 1);\n    }\n    else{\n        return 0;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpumst06r1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpumst06r1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ index=string.indexOf(substring);\n\tvar total=0;\n\twhile(index!=-1){\n\t\t\
    total+=1;\n\t\tindex=string.indexOf(substring,index+1);\n\t}\n\treturn total;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (string.length < substring.length) {\n        return 0;\n    }\n    var matching_substrings\
    \ = 0;\n    for (var i = 0; i < string.length; i++) {\n        var matching_string\
    \ = true;\n        for (var j = 0; j < substring.length; j++) {\n            if\
    \ (string[i + j] !== substring[j]) {\n                matching_string = false;\n\
    \                break;\n            }\n        }\n        if (matching_string)\
    \ {\n            matching_substrings++;\n        }\n    }\n    return matching_substrings;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ subLength = substring.length;\n    let count = 0;\n    let index = 0;\n    while\
    \ (index < string.length){\n        if (string.substring(index, index + subLength)\
    \ === substring){\n            count++;\n            index += subLength;\n   \
    \     }\n        else{\n            index++;\n        }\n    }\n    return count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmph9j7eu_p.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph9j7eu_p.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  if(substring\
    \ == \"\"){\n    return 0;\n  }\n  var count = 0;\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(string[i] == substring[0]){\n      var sub_index = 1;\n      for(var\
    \ j = i + 1; j < string.length; j++){\n        if(string[j] == substring[sub_index]){\n\
    \          sub_index += 1;\n        }\n        else{\n          break;\n     \
    \   }\n      }\n      if(sub_index == substring.length){\n        count += 1;\n\
    \      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //Make\
    \ sure we have lower case strings\n    string = string.toLowerCase();\n    substring\
    \ = substring.toLowerCase();\n    //Make sure we have non-empty strings\n    if(substring\
    \ == '' || string == ''){\n        return 'Please enter valid strings';\n    }\n\
    \n    //split string into array of characters\n    const arr_string = string.split('');\n\
    \    //const arr_substring = substring.split('');\n    let counter = 0;\n    for(let\
    \ i = 0; i < arr_string.length; i++){\n        let substring_counter = 0;\n  \
    \      for(let k = 0; k < substring.length; k++){\n            if(arr_string[i+k]\
    \ == substring[k]){\n                substring_counter ++;\n            }\n  \
    \      }\n        if(substring_counter == substring.length){\n            counter\
    \ ++;\n        }\n    }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Please enter\
    \ valid strings'\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_bnire_k.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_bnire_k.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Please enter\
    \ valid strings',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var current = 0;\n    while(current != -1){\n        current\
    \ = string.indexOf(substring, current);\n        if(current != -1){\n        \
    \    count++;\n            current += substring.length;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"\
    x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpx5ftazj0.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5ftazj0.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ found_times = 0;\n    var index = string.indexOf(substring);\n    while(index\
    \ >= 0){\n        found_times += 1;\n        index = string.indexOf(substring,\
    \ index + 1);\n    }\n    return found_times;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ output = 0;\n\tfor(var i = 0; i <= string.length - substring.length; i++){\n\
    \t\tvar found = true;\n\t\tfor(var j = 0; j < substring.length; j++){\n\t\t\t\
    if(string[i + j] != substring[j]){\n\t\t\t\tfound = false;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t\tif(found){\n\t\t\toutput++;\n\t\t}\n\t}\n\treturn output;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ times = 0;\n    for(let i = 0; i < string.length; i++){\n        if(string.slice(i,\
    \ i + substring.length) === substring){\n            times++;\n        }\n   \
    \ }\n    return times;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ i = 0;\n    var count = 0;\n    while(true){\n        i = string.indexOf(substring,\
    \ i);\n        if(i == -1){\n            break;\n        }\n        count += 1;\n\
    \        i += 1;\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  const\
    \ regex = new RegExp(substring, 'g');\n  const match = string.match(regex);\n\
    \  return match ? match.length : 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpfm390glr.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfm390glr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.substring(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ counter = 0;\n    let startIndex = 0;\n    let index;\n    if(string.includes(substring)){\n\
    \        while(string.includes(substring, startIndex)){\n            index = string.indexOf(substring,\
    \ startIndex);\n            counter += 1;\n            startIndex = index + 1;\n\
    \        }\n    }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    return\
    \ string.split(substring).length - 1;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpxkhficvl.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxkhficvl.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ arr = string.split(substring).length-1;\n    return arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpfbdze1kh.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfbdze1kh.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    for (var i = 0; i < string.length; i++) {\n        if (string.substr(i,\
    \ substring.length) == substring) {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ count = 0;\n  for (var i = 0; i <= string.length - substring.length; i++) {\n\
    \    if (string.substr(i, substring.length) == substring) {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\treturn\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp2ykq7vid.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ykq7vid.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822156
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\t//Initialize\
    \ the count with -1. Reason: If string is substring of itself. \n\tvar count =\
    \ -1;\n\t//Next instance position\n\tvar index = 0;\n\t//If string and substring\
    \ are empty\n\tif(string.length > 0 && substring.length > 0){\n\t\t//While we\
    \ have any next instance of substring\n\t\twhile((index = string.indexOf(substring,\
    \ index)) > -1){\n\t\t\t//Add 1 to count\n\t\t\tcount++;\n\t\t\t//Update index\n\
    \t\t\tindex += substring.length;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp167j8jzl.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp167j8jzl.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ res = string.match(new RegExp(substring, \"g\"));\n\treturn res ? res.length\
    \ : 0;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpgsx0ml6r.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgsx0ml6r.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tvar pos = string.indexOf(substring);\n\twhile(pos >= 0){\n\t\t\
    count += 1;\n\t\tpos = string.indexOf(substring, pos + 1);\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  var\
    \ num=0;\n  for(var i=0; i<string.length; i++){\n    if(string.slice(i, i+substring.length)\
    \ == substring){\n      num++;\n    }\n  }\n  return num;\n}\n\nhow_many_times(\"\
    hahahahaha\", \"aha\");\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    return\
    \ string.match(new RegExp(substring, 'g')).length;\n}\nhow_many_times('lol lol\
    \ lol', 'lol');\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpvmxxrrwl.js:3\n    return string.match(new RegExp(substring, 'g')).length;\n\
    \                                                   ^\n\nTypeError: Cannot read\
    \ properties of null (reading 'length')\n    at how_many_times (/tmp/tmpvmxxrrwl.js:3:52)\n\
    \    at test (/tmp/tmpvmxxrrwl.js:11:20)\n    at Object.<anonymous> (/tmp/tmpvmxxrrwl.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if(substring.length\
    \ == 0){\n        return null;\n    }\n\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        if(string.substring(i, i + substring.length)\
    \ == substring){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  //First\
    \ we will convert string to array\n  string = string.split(\"\");\n  //Second\
    \ we will convert substring to array and get its length\n  substring = substring.split(\"\
    \");\n  var substring_length = substring.length;\n  //Third we will create a counter\
    \ variable\n  var counter = 0;\n  //Fourth we will loop over the substring array\n\
    \  for(i=0; i<substring.length; i++){\n    //Fifth we will look for the first\
    \ substring letter in the array\n    if(string.indexOf(substring[i]) > -1){\n\
    \      //If we have found it, we will save the first index of this letter\n  \
    \    var substring_index = string.indexOf(substring[i]);\n      //Sixth we will\
    \ create a temporary subarray inside the string array\n      var temp_array =\
    \ string.slice(substring_index, substring_index+substring_length);\n      //Seventh\
    \ we will compare this subarray with substring array\n      if(temp_array.join(\"\
    \") == substring.join(\"\")){\n        //If it matchs, we will increase the counter\n\
    \        counter++;\n      }\n    }\n  }\n  //Finally we will return the counter\n\
    \  return counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpwdbtcb1x.js:35:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwdbtcb1x.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ result = 0;\n    for (var i = 0; i < string.length; i++) {\n        var loc\
    \ = string.indexOf(substring, i);\n        if (loc !== -1) {\n            result++;\n\
    \            i = loc;\n        }\n    }\n    return result;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ original = string;\n    var count = 0;\n    var pos = string.indexOf(substring);\n\
    \    while (pos >= 0) {\n        count += 1;\n        string = string.substring(pos\
    \ + 1);\n        pos = string.indexOf(substring);\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ a = 0;\n    var pos = 0;\n    while (pos !== -1) {\n        pos = string.indexOf(substring,pos);\n\
    \        if (pos !== -1) {\n            a++;\n            pos += substring.length;\n\
    \        }\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpq56vbn5z.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq56vbn5z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    //\
    \ your code here...\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp9ym5igi1.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp9ym5igi1.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var substring_length = substring.length;\n    var string_length\
    \ = string.length;\n    for(var i = 0; i < string_length; i++) {\n        if(string.substring(i,\
    \ i + substring_length) == substring) {\n            count++;\n        }\n   \
    \ }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tvar\
    \ count = 0;\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(string.slice(i,\
    \ i + substring.length) == substring){\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    let\
    \ regex = new RegExp(substring, 'g');\n    return (string.match(regex) || []).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp0jums1dv.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0jums1dv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n  if(string.includes(substring)){\n\
    \    let times = 0;\n    for(let i = 0; i < string.length; i++){\n      if(string.slice(i,\
    \ i + substring.length) === substring){\n        times++;\n      }\n    }\n  \
    \  return times;\n  }\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    if\
    \ (substring === \"\") {\n        return null;\n    }\n    var a = 0;\n    var\
    \ i = 0;\n    while (i <= string.length - substring.length) {\n        if (string.substring(i,i+substring.length)\
    \ == substring) {\n            a += 1;\n            i += substring.length - 1;\n\
    \        }\n        i += 1;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpy4qkvv9v.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy4qkvv9v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\tconsole.log(string.match(new\
    \ RegExp(substring, 'g')).length);\n}\n\nvar sentence = \"hello hello hello hello\"\
    ;\nvar word = \"hello\";\nhow_many_times(sentence, word);\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_r3nhq7s.js:3\n\tconsole.log(string.match(new RegExp(substring,\
    \ 'g')).length);\n\t                                                    ^\n\n\
    TypeError: Cannot read properties of null (reading 'length')\n    at how_many_times\
    \ (/tmp/tmp_r3nhq7s.js:3:54)\n    at test (/tmp/tmp_r3nhq7s.js:15:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp_r3nhq7s.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: '4

    '
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n\t//ask\
    \ user to enter a string\n\tvar string = prompt(\"Enter a string:\");\n\t//ask\
    \ user to enter a substring to find in the string\n\tvar substring = prompt(\"\
    Enter a substring:\");\n\t//initialize count\n\tvar count = 0;\n\t//find length\
    \ of string\n\tvar length = string.length;\n\t//find length of substring\n\tvar\
    \ sub_length = substring.length;\n\t//find index of first occurence of substring\
    \ in string\n\tvar index = string.indexOf(substring);\n\t//convert string to an\
    \ array\n\tvar array = string.split(\"\");\n\t//start for loop to search for substring\n\
    \tfor(var i = 0; i < length; i++){\n\t\t//check if index of substring is not -1\
    \ (not found)\n\t\tif(index != -1){\n\t\t\t//increment count by 1\n\t\t\tcount++;\n\
    \t\t\t//update index to find next occurence of substring in string\n\t\t\tindex\
    \ = string.indexOf(substring, index + sub_length);\n\t\t}\n\t}\n\t//print the\
    \ result\n\tconsole.log(\"The substring \\\"\" + substring + \"\\\" was found\
    \ \" + count + \" times in the string \\\"\" + string + \"\\\"\");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = how_many_times;\n\
    \  assert.deepEqual(candidate(\"\", \"x\"),0);\n  assert.deepEqual(candidate(\"\
    xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"cacacacac\", \"cac\"),4);\n\
    \  assert.deepEqual(candidate(\"john doe\", \"john\"),1);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp01sgppib.js:4\n\tvar string = prompt(\"Enter a string:\");\n\t\
    \             ^\n\nReferenceError: prompt is not defined\n    at how_many_times\
    \ (/tmp/tmp01sgppib.js:4:15)\n    at test (/tmp/tmp01sgppib.js:36:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp01sgppib.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 0
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var start_index = 0;\n    for(let i = 0; i < string.length;\
    \ i++){\n        if(string[i] == substring[0]){\n            for(let j = 0; j\
    \ < substring.length; j++){\n                if(string[i+j] != substring[j]){\n\
    \                    break;\n                }\n                else if(j == substring.length\
    \ - 1){\n                    count += 1;\n                }\n            }\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    var\
    \ count = 0;\n    var i = 0;\n    while (true) {\n        i = string.indexOf(substring,\
    \ i);\n        if (i != -1) {\n            i += substring.length;\n          \
    \  count++;\n        } else {\n            break;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\", \"x\"),0);\n\
    \  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmpxpf3punl.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxpf3punl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157
- exit_code: 1
  program: "//Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunction how_many_times(string, substring){\n    return\
    \ string.split(substring).length - 1;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = how_many_times;\n  assert.deepEqual(candidate(\"\
    \", \"x\"),0);\n  assert.deepEqual(candidate(\"xyxyxyx\", \"x\"),4);\n  assert.deepEqual(candidate(\"\
    cacacacac\", \"cac\"),4);\n  assert.deepEqual(candidate(\"john doe\", \"john\"\
    ),1);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n4\n    at test (/tmp/tmp0ug571ek.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ug571ek.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 4,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822157

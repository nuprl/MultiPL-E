name: HumanEval_71_triangle_area
language: js
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\nfunction triangle_area(a,\
  \ b, c){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = triangle_area;\n  assert.deepEqual(candidate(3, 4, 5),6.0);\n  assert.deepEqual(candidate(1,\
  \ 2, 10),-1);\n  assert.deepEqual(candidate(4, 8, 5),8.18);\n  assert.deepEqual(candidate(2,\
  \ 2, 2),1.73);\n  assert.deepEqual(candidate(1, 2, 3),-1);\n  assert.deepEqual(candidate(10,\
  \ 5, 7),16.25);\n  assert.deepEqual(candidate(2, 6, 3),-1);\n  assert.deepEqual(candidate(1,\
  \ 1, 1),0.43);\n  assert.deepEqual(candidate(2, 2, 10),-1);\n}\n\ntest();"
completions: ["    if(a>0 && b>0 && c>0){\n        if(a+b>c && a+c>b && b+c>a){\n\
    \            var p = (a+b+c)/2;\n            var A = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \            return A.toFixed(2);\n        }\n    }\n    return -1;\n}\n", " \
    \   let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    if(area <= 0){\n        return -1;\n    }\n    return Number(area.toFixed(2));\n\
    }", "    let perimeter = (a + b + c) / 2;\n    let area = Math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c));\n    return area > 0\
    \ ? +area.toFixed(2) : -1;\n}\n", "    let p = (a + b + c) / 2;\n    let s = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    return s ? s.toFixed(2) : -1;\n}\n", " \
    \   if ((a+b) > c && (a+c) > b && (b+c) > a){\n        let p = (a+b+c)/2;\n  \
    \      let result = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n        return Number(result.toFixed(2));\n\
    \    }\n    return -1;\n}", "    if (a+b>c && a+c>b && b+c>a){\n        return\
    \ Math.round(Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4*100)/100;\n    }\n\
    \    return -1;\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area < 0 ? -1 : Number(area.toFixed(2));\n\
    }\n", "    var s = (a + b + c) / 2;\n    var area = s*(s-a)*(s-b)*(s-c);\n   \
    \ return area > 0 ? Math.sqrt(area).toFixed(2) : -1;\n}", "  if (a+b>c && a+c>b\
    \ && b+c>a){\n    return Number((Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4).toFixed(2));\n\
    \  }\n  return -1;\n}\n", "  var s = (a + b + c) / 2;\n  var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n  return area;\n}\n", "  if(a+b>c && a+c>b\
    \ && b+c>a){\n    return +((a+b+c)/2*(Math.sqrt(((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c)))).toFixed(2);\n\
    \  } else {\n    return -1;\n  }\n}\n", "    if(a + b > c && a + c > b && b +\
    \ c > a){\n        return Number(((a + b + c) / 2).toFixed(2));\n    }else{\n\
    \        return -1;\n    }\n}", "    // pass in lengths of a, b, and c\n    //\
    \ return area of triangle\n    let p = (a + b + c) / 2;\n    let s = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    let x = s.toFixed(2);\n    if (s > 0) {\n\
    \        return Number(x);\n    } else {\n        return -1;\n    }\n}", "   \
    \ var s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n    if(a <= 0 || b <= 0 || c <= 0 || area <= 0){\n        return -1;\n\
    \    } else {\n        return Number(area.toFixed(2));\n    }\n}\n", "    let\
    \ s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    return area ? Math.round(area * 100) / 100 : -1;\n  }\n", "  let angle\
    \ = [];\n  if (a+b>c && a+c>b && b+c>a){\n    let p = (a+b+c)/2;\n    return Math.sqrt(p*(p-a)*(p-b)*(p-c)).toFixed(2);\n\
    \  } else {\n    return -1;\n  }\n}", "    let s = (a + b + c) / 2;\n    let area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (a + b > c && a + c >\
    \ b && b + c > a){\n        return area.toFixed(2);\n    }\n    return -1;\n}",
  "    if(a + b > c && a + c > b && b + c > a){\n      let s = (a + b + c) / 2;\n\
    \      let x = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n      return +(x.toFixed(2));\n\
    \    } else {\n      return -1;\n    }\n  }\n", "  if(a+b>c && a+c>b && b+c>a){\n\
    \    var s=(a+b+c)/2;\n    return Math.round(100*Math.sqrt(s*(s-a)*(s-b)*(s-c)))/100;\n\
    \  }\n  return -1;\n}", "   // if ((a + b) > c) {\n   //    var p = (a + b + c)\
    \ / 2;\n   //    return Math.round(Math.sqrt(p * (p - a) * (p - b) * (p - c))\
    \ * 100) / 100;\n   // } else {\n   //    return -1;\n   // }\n   //better way\n\
    \   var s = (a + b + c) / 2;\n   return (s > a && s > b && s > c) ? Math.round(Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100) / 100 : -1;\n}\n", "  if (a > 0 && b >\
    \ 0 && c > 0) {\n    if (a + b > c && a + c > b && b + c > a) {\n      return\
    \ +(((a + b + c) / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a\
    \ + b + c) / 2) - c)).toFixed(2);\n    }\n  }\n  return -1;\n}", "  if(a + b >\
    \ c && a + c > b && b + c > a){\n    return Math.round(0.5 * a * b * 100) / 100;\n\
    \  }\n  return -1;\n}\n", "    if(a + b > c && a + c > b && b + c > a){\n    \
    \    let s = (a + b + c) / 2;\n        let area = Math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        return parseFloat(area.toFixed(2));\n    }\n    return\
    \ -1;\n}", "    let s = (a + b + c) / 2;\n\n    if(s - a > 0 && s - b > 0 && s\
    \ - c > 0){\n        return +Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n\
    \    }\n    return -1;\n}\n", "    if(a > (b + c) || b > (a + c) || c > (a + b))\
    \ {\n        return -1;\n    } else {\n        let p = (a + b + c) / 2;\n    \
    \    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return area.toFixed(2);\n\
    \    }\n}", "    var p = (a + b + c) / 2;\n    var a = Math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c));\n    return Number.isInteger(a) ? a : -1;\n  }", "  let\
    \ s = (a + b + c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \  if (a <= 0 || b <= 0 || c <= 0) {\n    return -1;\n  }\n  else if (isNaN(area))\
    \ {\n    return -1;\n  }\n  else {\n    return area.toFixed(2);\n  }\n}\n", " \
    \   let p = (a + b + c) / 2;\n    let s = Math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n    return (a + b > c && a + c > b && b + c > a) ? +s.toFixed(2) : -1;\n\
    }\n", "    let area = ((a+b+c)/2);\n    if(area-a<=0 || area-b<=0 || area-c<=0){\n\
    \        return -1;\n    }\n    let x = area*(area-a)*(area-b)*(area-c);\n   \
    \ let y = Math.sqrt(x);\n    return y.toFixed(2);\n}\n", "    let s = (a + b +\
    \ c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if\
    \ (a + b > c && a + c > b && b + c > a) {\n      return +area.toFixed(2);\n  \
    \  } else {\n      return -1;\n    }\n}\n", "  if (a + b > c && a + c > b && b\
    \ + c > a) {\n    return +((a + b + c) / 2 * ((a + b + c) / 2 - a) * ((a + b +\
    \ c) / 2 - b) * ((a + b + c) / 2 - c)) ** 0.5\n  } else {\n    return -1\n  }\n\
    }\n", "    let s = (a + b + c) / 2;\n    if (s === a || s === b || s === c) return\
    \ -1;\n    return Number((Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2));\n\
    }", "    //calculate the sides\n    var perimeter = (a + b + c) / 2;\n    var\
    \ area = Math.sqrt(perimeter * (perimeter - a) * (perimeter - b) * (perimeter\
    \ - c));\n    if(isNaN(area)) return -1;\n    return +area.toFixed(2);\n}\n",
  "    // Your code here\n    let p = (a + b + c) / 2;\n    let area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    if (a + b > c && a + c > b && b + c > a)\
    \ {\n      return +area.toFixed(2);\n    } else {\n      return -1;\n    }\n}\n",
  "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    if (area === NaN || area === undefined || area === null) {\n\
    \        return -1;\n    } else {\n        return +area.toFixed(2);\n    }\n}",
  "    let perimeter = (a + b + c) / 2;\n    let area = Math.sqrt(perimeter * (perimeter\
    \ - a) * (perimeter - b) * (perimeter - c));\n    return !isNaN(area) ? Number(area.toFixed(2))\
    \ : -1;\n  }\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    if (area <= 0) {\n        return -1;\n    }\n\
    \    return Number(area.toFixed(2));\n}", "    var s = (a + b + c) / 2;\n    var\
    \ area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area;\n}", "\t\
    if (a+b>c && a+c>b && b+c>a){\n\t\tvar p = (a+b+c)/2;\n\t\tvar area = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \t\treturn area.toFixed(2);\n\t}\n\telse{\n\t\treturn -1;\n\t}\n}", "  // Add\
    \ code here\n  if (a + b > c && a + c > b && b + c > a) {\n    return Number((0.5\
    \ * (a + b + c)).toFixed(2));\n  }\n  return -1;\n}\n\nTest.assertEquals(triangle_area(2,2,2),\
    \ 1.73);\nTest.assertEquals(triangle_area(1,1,1), 0.43);\nTest.assertEquals(triangle_area(7,4,3),\
    \ -1);", "    // check if input is valid\n    if(a <= 0 || b <= 0 || c <= 0){\n\
    \        return -1;\n    }\n    // this formula works for any triangle\n    //\
    \ return area\n    // note: must round to 2 decimal places\n    let s = (a + b\
    \ + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ Number(area.toFixed(2));\n}", "    let sum = (a + b + c) / 2;\n    let area\
    \ = Math.sqrt(sum * (sum - a) * (sum - b) * (sum - c));\n    if(area > 0){\n \
    \     return +area.toFixed(2);\n    } else {\n      return -1;\n    }\n  }\n\n",
  "    let s = (a + b + c) / 2;\n    if(s < a || s < b || s < c) {\n        return\
    \ -1;\n    } else {\n        let area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        return Number.parseFloat(area).toFixed(2);\n    }\n}\n", "   \
    \ if ((a + b > c) && (a + c > b) && (b + c > a)) {\n        let s = (a + b + c)\
    \ / 2;\n        return (Math.sqrt(s * (s - a) * (s - b) * (s - c))).toFixed(2);\n\
    \    }\n    return -1;\n}", "    let s = (a + b + c) / 2;\n    let area = s *\
    \ (s - a) * (s - b) * (s - c);\n    if (area <= 0) {\n        return -1;\n   \
    \ } else {\n        return Math.sqrt(area).toFixed(2);\n    }\n  }\n  \n  console.log(triangle_area(5,\
    \ 3, 4)); // 6.00\n  console.log(triangle_area(1, 1, 2)); // -1\n  console.log(triangle_area(7,\
    \ 4, 5)); // 10.39\n  console.log(triangle_area(12, 12, 12)); // 62.83\n  console.log(triangle_area(6,\
    \ 10, 8)); // 24.00\n  console.log(triangle_area(3, 4, 5)); // 6.00\n  console.log(triangle_area(7,\
    \ 12, 8)); // -1\n  console.log(triangle_area(3, 4, 9)); // -1\n  console.log(triangle_area(7,\
    \ 8, 2)); // -1\n  console.log(triangle_area(13, 14, 29)); // -1\n  console.log(triangle_area(7,\
    \ 7, 7)); // 28.27\n  console.log(triangle_area(10, 10, 10)); // 43.30\n  console.log(triangle_area(3,\
    \ 4, 8)); // -1\n  console.log(triangle_area(5, 7, 9)); // 12.70\n  console.log(triangle_area(6,\
    \ 6, 6)); // 15.59\n  console.log(triangle_area(11, 11, 5)); // 30.62\n  console.log(triangle_area(8,\
    \ 8, 8)); // 34.20\n  console.log(triangle_area(5, 12, 13)); // 30.00\n  console.log(triangle_area(12,\
    \ 13, 14)); // 72.64\n  console.log(triangle_area(8, 15, 17)); // 60.24\n  console.log(triangle_area(11,\
    \ 12, 13", "    var area = -1;\n    if ((a + b > c) && (a + c > b) && (b + c >\
    \ a)){\n        var s = (a + b + c) / 2;\n        area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n    }\n    return Number(area.toFixed(2));\n}\n", "\t\
    if (a + b > c && a + c > b && b + c > a) {\n\t\tvar p = (a + b + c) / 2;\n\t\t\
    var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\t\treturn Math.round(area\
    \ * 100) / 100;\n\t} else {\n\t\treturn -1;\n\t}\n}", "    let sum = a + b + c;\n\
    \    if(sum <= 2 * Math.max(a, b, c)) return -1;\n    let p = sum / 2;\n    return\
    \ +Math.sqrt(p * (p - a) * (p - b) * (p - c)).toFixed(2);\n}\n", "    let x =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(x * (x - a) * (x - b) * (x - c));\n\
    \    return area > 0 ? +(area.toFixed(2)) : -1;\n}\n", "    const sides = [a,\
    \ b, c].sort();\n    if (sides[0] + sides[1] > sides[2]){\n        let semiPerimeter\
    \ = (a + b + c) / 2;\n        let area = Math.sqrt(semiPerimeter * (semiPerimeter\
    \ - a) * (semiPerimeter - b) * (semiPerimeter - c));\n        return Number(area.toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}\n", "  if(a + b > c && a + c > b &&\
    \ b + c > a){\n    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return Number(area.toFixed(2));\n  }\n  return\
    \ -1;\n}", "    if (a+b<c || a+c<b || b+c<a) {\n        return -1;\n    } else\
    \ {\n        return parseFloat((1/4*Math.sqrt((a+b+c)*(-a+b+c)*(a-b+c)*(a+b-c))).toFixed(2));\n\
    \    }\n  }\n", "    var s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return Number.isInteger(area) ? area : -1;\n\
    }\n", "    //your code here\n    var sum1 = a + b;\n    var sum2 = a + c;\n  \
    \  var sum3 = b + c;\n    if(sum1 > c && sum2 > b && sum3 > a){\n        var s\
    \ = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        return Math.round(area * 100) / 100;\n    }\n    else{\n   \
    \     return -1;\n    }\n}\n", "    if(a + b <= c || a + c <= b || b + c <= a){\n\
    \        return -1;\n    }\n    var s = (a + b + c) / 2;\n    var area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return Math.round(area * 100) / 100;\n}",
  "  if ( a + b > c && a + c > b && b + c > a ) {\n    return (a + b + c) / 2\n  }\
    \ else {\n    return -1\n  }\n}\n", "\tif (a + b <= c || a + c <= b || b + c <=\
    \ a) {\n\t\treturn -1;\n\t}\n\tvar s = (a + b + c) / 2;\n\tvar area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn Math.round(area * 100) / 100;\n}",
  "    let s = ((a + b + c) / 2);\n    let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return (a > 0 && b > 0 && c > 0 && a + b > c && a + c > b &&\
    \ b + c > a) ? Number(area.toFixed(2)) : -1;\n  }\n  console.log(triangle_area(5,\
    \ 6, 7));\n  console.log(triangle_area(2, 3, 4));\n  console.log(triangle_area(8,\
    \ 5, 7));\n  console.log(triangle_area(3, 4, -5));\n  console.log(triangle_area(7,\
    \ 12, 8));\n  console.log(triangle_area(3, 4, 5));\n  console.log(triangle_area(7,\
    \ 12, 8));\n  console.log(triangle_area(1, 2, 3));\n  console.log(triangle_area(5,\
    \ 6, 7));\n  console.log(triangle_area(3, 4, 10));\n  console.log(triangle_area(12,\
    \ 14, 15));\n  console.log(triangle_area(9, 9, 9));\n  console.log(triangle_area(8,\
    \ 15, 17));", "    let s = (a + b + c) / 2;\n    let triangleArea =  Math.sqrt(s*((s-a)*(s-b)*(s-c)));\n\
    \    if(triangleArea > 0){\n        return parseFloat(triangleArea.toFixed(2));\n\
    \    }\n    return -1;\n}", "    let perim = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(perim * (perim - a) * (perim - b) * (perim - c));\n    return Number.isInteger(area)\
    \ ? area : -1;\n  }\n", "    // const one = a;\n    // const two = b;\n    //\
    \ const three = c;\n    // let p = (one + two + three) / 2;\n    // let area =\
    \ Math.sqrt(p * (p - one) * (p - two) * (p - three));\n    // return area.toFixed(2);\n\
    \    if (a + b > c && a + c > b && b + c > a) {\n        return +(0.5 * Math.abs((a[0]\
    \ - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]))).toFixed(2);\n    }\
    \ else {\n        return -1;\n    }\n}", "    let s = (a + b + c) / 2;\n    let\
    \ area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area > 0 ? +area.toFixed(2)\
    \ : -1;\n}", "    let s = (a + b + c) / 2;\n\n    let area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n\n    return (Number.isInteger(area)) ? area : -1;\n\
    }\n", "    //validation for a triangle\n    if (a + b > c && a + c > b && b +\
    \ c > a){\n        var s = (a + b + c) / 2;\n        var area = Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        return area.toFixed(2);\n    } else {\n\
    \        return -1;\n    }\n}", "    var sides = [a, b, c];\n    var area = -1;\n\
    \    if(a > 0 && b > 0 && c > 0){\n        sides.sort(function(a, b){\n      \
    \      return a - b;\n        });\n        if(sides[0] + sides[1] > sides[2]){\n\
    \            area = .5 * sides[0] * sides[2];\n        }\n    }\n    return area.toFixed(2);\n\
    }", "    let p = (a + b + c) / 2;\n    let area = Math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c));\n    if (area === 0 || area < 0) {\n        return -1;\n    }\
    \ else {\n        return Number(area.toFixed(2));\n    }\n}\n", "\tif(a+b<c||a+c<b||b+c<a){\n\
    \t\treturn -1;\n\t}else{\n\t\treturn Math.round(100*(Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4))/100;\n\
    \t}\n\t\n}\n", "  if(a + b > c && a + c > b && b + c > a){\n    return +(((a +\
    \ b + c) / 2) * Math.sqrt(((a + b + c) / 2) - a) * Math.sqrt(((a + b + c) / 2)\
    \ - b) * Math.sqrt(((a + b + c) / 2) - c)).toFixed(2);\n  } else {\n    return\
    \ -1;\n  }\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n    return area > 0 ? area.toFixed(2) : -1;\n\
    }\n", "  return (a + b > c && a + c > b && b + c > a) ? (a + b + c) / 2 : -1;\n\
    }\n", "  if(a + b > c && a + c > b && b + c > a){\n    return Number((Math.sqrt((a\
    \ + b + c) * (-a + b + c) * (a - b + c) * (a + b - c)) / 4).toFixed(2));\n  }\n\
    \  return -1;\n}\n", "    let sum = (a + b + c) / 2;\n    let area = sum * (sum\
    \ - a) * (sum - b) * (sum - c);\n    return area < 0 ? -1 : Math.sqrt(area).toFixed(2);\n\
    }", "  return (a + b > c && a + c > b && b + c > a) ? Number((a + b + c) / 2).toFixed(2)\
    \ : -1;\n}\n", "    if(a > 0 && b > 0 && c > 0){\n      if((a + b) > c && (a +\
    \ c) > b && (b + c) > a){\n      var p = (a + b + c) / 2;\n      var s = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n      return +s.toFixed(2);\n      }else {\n\
    \        return -1;\n      }\n    }else {\n      return -1;\n    }\n  }\n", " \
    \   let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return area == 0 ? -1 : +area.toFixed(2);\n  }\n", "    var s\
    \ = (a + b + c) / 2;\n    var A = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if(A > 0){\n      return A.toFixed(2);\n    } else {\n      return -1;\n\
    \    }\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return (a < (b + c) && b < (a + c) && c < (a +\
    \ b)) ? Math.round(area * 100) / 100 : -1;\n}\n", "    var s = (a + b + c) / 2;\n\
    \    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return area %\
    \ 1 !== 0 ? parseFloat(area.toFixed(2)) : -1;\n}", "    var s = (a + b + c) /\
    \ 2;\n    var area =  Math.sqrt(s*((s-a)*(s-b)*(s-c)));\n    // area will be NaN\
    \ if the 3 sides cannot form a triangle\n    return area > 0 ? +area.toFixed(2)\
    \ : -1;\n}", "    // this is an example of a 'ternary operator'\n    let s = (a\
    \ + b + c) / 2;\n    let area = s * (s - a) * (s - b) * (s - c);\n    return (area\
    \ > 0) ? Math.sqrt(area).toFixed(2) : -1;\n}\n", "    // determine if valid triangle\n\
    \    if ((a + b) > c && (a + c) > b && (b + c) > a) {\n        // determine area\n\
    \        let s = (a + b + c) / 2;\n        let area = Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n        return +area.toFixed(2);\n    } else {\n      \
    \  return -1;\n    }\n}", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (isNaN(area)) {\n        return -1;\n\
    \    }\n    return Number((area).toFixed(2));\n}\n", "    let result = -1;\n \
    \   if(a + b > c && a + c > b && b + c > a){\n        let p = (a + b + c) / 2;\n\
    \        result = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    }\n    return\
    \ result.toFixed(2);\n}\n", "    let s = (a + b + c) / 2;\n    let res = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return Math.round(res * 100) / 100;\n}\n",
  "    let perimeter = (a + b + c) / 2;\n    let area = perimeter * (perimeter - a)\
    \ * (perimeter - b) * (perimeter - c);\n    return Math.sqrt(area) < 1 ? -1 :\
    \ +(Math.sqrt(area).toFixed(2));\n}\n", "    if(a+b>c && a+c>b && b+c>a){\n  \
    \      return ((a+b+c)/2)\n    }else{\n        return -1\n    }\n}", "    let\
    \ p = (a + b + c) / 2;\n    let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    return s > 0 ? +s.toFixed(2) : -1;\n}", "    if(a+b > c && a+c > b && b+c\
    \ > a){\n        var p = (a+b+c)/2;\n        var heron = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \        return Math.round(heron*100)/100;\n    }\n    return -1;\n}", "  let\
    \ arr = [];\n  arr.push(a, b, c);\n  arr.sort(function(a, b){return a-b});\n \
    \ if (arr[0] + arr[1] > arr[2]){\n    let p = (a + b + c)/2;\n    let area = Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
    \    return parseFloat(area.toFixed(2));\n  } else {\n    return -1;\n  }\n}",
  "    if (a > b + c || b > a + c || c > a + b) {\n        return -1;\n    } else\
    \ {\n        var s = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c));\n        return Math.round(area * 100) / 100;\n    }\n\
    }\n", "  var sides = [a, b, c].sort((a, b) => a - b);\n  if (sides[0] + sides[1]\
    \ > sides[2]) {\n    var p = (a + b + c) / 2;\n    return Math.round(100 * Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))) / 100;\n  }\n  return -1;\n}", "    let s =\
    \ (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if (Number.isInteger(area)) {\n        return area;\n    } else {\n     \
    \   return -1;\n    }\n}", "  let p = (a + b + c) / 2;\n  let s = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n  return (s > 0) ? +s.toFixed(2) : -1;\n}\n",
  "    // check if it is a valid triangle\n    if (a + b > c && a + c > b && b + c\
    \ > a) {\n      // use Heron's formula to calculate the area\n      var s = (a\
    \ + b + c) / 2;\n      var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \      return +area.toFixed(2);\n    } else {\n      return -1;\n    }\n  }\n\
    \  console.log(triangle_area(1,2,3)); // -1\n  console.log(triangle_area(2,2,1));\
    \ // 1.41\n  console.log(triangle_area(8,5,7)); // 20.83\n\n  //Given an array\
    \ of integers, return indices of the two numbers such that they add up to a specific\
    \ target.\n  //You may assume that each input would have exactly one solution,\
    \ and you may not use the same element twice.\n  function sum_two(nums, target)\
    \ {\n    // build a map of all nums to their indices\n    var map = {};\n    for\
    \ (var i = 0; i < nums.length; i++) {\n      map[nums[i]] = i;\n    }\n    //\
    \ loop through all indices\n    for (var i = 0; i < nums.length; i++) {\n    \
    \  // calculate the complement by subtracting nums[i] from the target\n      var\
    \ complement = target - nums[i];\n      // check if the complement exists\n  \
    \    if (map[complement] !== undefined && map[complement] !== i) {\n        return\
    \ [i, map[complement]];\n      }\n    }\n  }\n  console.log(sum_two([2, 7, 11,\
    \ 15], 9)); // [0, 1]\n\n  //Given a string, return the length of the longest\
    \ substring without repeating characters.\n  function lengthOfLongestSubstring(s)\
    \ {\n    let max = 0;\n    let current = 0;\n    let s_chars = s.split('');\n\
    \    let set = new Set();\n    for (let i = 0; i < s_chars", "    let array=[a,b,c].sort((a,b)=>a-b)\n\
    \    if (array[0]+array[1]>array[2]){\n        return +(0.5*array[0]*array[1]).toFixed(2)\n\
    \    }else{\n        return -1\n    }\n}\n", "\tif (a + b > c && a + c > b &&\
    \ b + c > a) {\n\t\tvar s = (a + b + c) / 2;\n\t\tvar area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFixed(2);\n\t\treturn area;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\n", "  const per = (a + b + c) / 2;\n  if (a + b > c && a + c >\
    \ b && b + c > a){\n    return Math.round(Math.sqrt(per * (per - a) * (per - b)\
    \ * (per - c)) * 100) / 100;\n  } else {\n    return -1;\n  }\n}\n", "    if ((a\
    \ + b > c) && (a + c > b) && (b + c > a)) {\n        var s = (a + b + c) / 2;\n\
    \        return Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100) /\
    \ 100;\n    } else {\n        return -1;\n    }\n}\n", "    if(a+b>c && a+c>b\
    \ && b+c>a){\n        let s = (a+b+c)/2;\n        return Math.round(Math.sqrt(s*(s-a)*(s-b)*(s-c))*100)/100;\n\
    \    }\n    return -1;\n}\n", "    return (a+b)>c && (a+c)>b && (b+c)>a ? +(0.5*(a+b)*c).toFixed(2)\
    \ : -1;\n  }\n\n  console.log(triangle_area(4,4,4));", "    var s = (a + b + c)\
    \ / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if (area\
    \ > 0) {\n        return area.toFixed(2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    return a + b > c && a + c > b && b + c > a ? +(a * (b + c)\
    \ / 2).toFixed(2) : -1;\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area;\n}\n", "    var s = (a + b\
    \ + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return\
    \ Number.isInteger(area) ? area : -1;\n}", "  // area = (1/2)bh\n  let s = (a\
    \ + b + c) / 2\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return\
    \ area\n}", "    if(a + b > c && a + c > b && b + c > a){\n        let s = (a\
    \ + b + c) / 2;\n        let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        return Number(area.toFixed(2));\n    }\n    return -1;\n}\n", "    var\
    \ s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n    if (area > 0) {\n        return area.toFixed(2);\n    } else {\n \
    \       return -1;\n    }\n}\n", "    let perimeter = a + b + c;\n    let semiperimeter\
    \ = perimeter / 2;\n    let area = Math.sqrt(semiperimeter * (semiperimeter -\
    \ a) * (semiperimeter - b) * (semiperimeter - c));\n    let result = (area < 0)\
    \ ? -1 : Number(area.toFixed(2));\n    return result;\n}\n", "    let s = (a +\
    \ b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  \
    \  return area > 0 ? +area.toFixed(2) : -1;\n}\n", "    let p = (a + b + c) /\
    \ 2;\n    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return area\
    \ > 0 ? Math.round(area * 100) / 100 : -1;\n}\n", "    if (a + b > c && a + c\
    \ > b && b + c > a) {\n        return Number(((a + b + c) / 2) * Math.sqrt(((a\
    \ + b + c) / 2) - a) * Math.sqrt(((a + b + c) / 2) - b) * Math.sqrt(((a + b +\
    \ c) / 2) - c)).toFixed(2);\n    } else {\n        return -1;\n    }\n}\n", " \
    \   // ...\n    if(a + b > c && a + c > b && b + c > a){\n        return (0.5\
    \ * a * b).toFixed(2);\n    }\n    return -1;\n}\n", "    var area = a + b + c;\n\
    \    if (area > 2 * Math.max(a, b, c)) {\n      return +(a * (b + c) / 2).toFixed(2);\n\
    \    } else {\n      return -1;\n    }\n  }\n\n\n  // Write a function called\
    \ calculateTip to calculate a tip on a bill", "    var semiperimeter = (a + b\
    \ + c) / 2;\n    var area = Math.sqrt(semiperimeter * (semiperimeter - a) * (semiperimeter\
    \ - b) * (semiperimeter - c));\n    return Number.isInteger(area) ? area : -1;\n\
    }\n", "  if (a < 0 || b < 0 || c < 0) {\n    return -1;\n  } else if (a + b <=\
    \ c || a + c <= b || b + c <= a) {\n    return -1;\n  } else {\n    var p = (a\
    \ + b + c) / 2;\n    var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\
    \    return +area.toFixed(2);\n  }\n}", "    if(isValidTriangle(a, b, c)){\n \
    \       var s = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a) * (s\
    \ - b) * (s - c));\n        return Number(area.toFixed(2));\n    }\n    return\
    \ -1;\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c));\n    return area > 0 ? +area.toFixed(2) : -1;\n}",
  "    if (a + b > c && a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n\
    \        let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return\
    \ +(area.toFixed(2));\n    } else {\n        return -1;\n    }\n}", "    let sides\
    \ = [a, b, c].sort((a, b) => a - b);\n    let [x, y, z] = sides;\n    return z\
    \ < (x + y) ? x * y / 2 : -1;\n}", "    var p = (a + b + c) / 2;\n    var area\
    \ = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return Number.isInteger(area)\
    \ ? area : -1;\n}", "    //the area of the triangle is half of the base times\
    \ the height\n    //the height of the triangle will be the distance between the\
    \ line of the base\n    //and the opposite point. to find the distance between\
    \ the point and the line\n    //we can use the distance formula with the point\
    \ and the line.\n    //\n    //\n    //(b+c-a)*(c+a-b)*(a+b-c)/(a+b+c)\n    var\
    \ s = (a+b+c)/2\n    var temp = s*(s-a)*(s-b)*(s-c)\n    if(temp<0){\n       \
    \ return -1\n    }\n    return Math.round(Math.sqrt(temp)*100)/100\n}", "    if(a+b>c\
    \ && a+c>b && b+c>a){\n        return +((a+b+c)/2*Math.sqrt(((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))).toFixed(2);\n\
    \    }\n    return -1;\n}\n", "    var s = (a + b + c) / 2;\n    var area =  Math.sqrt(s*((s-a)*(s-b)*(s-c)));\n\
    \    if (area > 0){\n        return parseFloat(area.toFixed(2));\n    } else {\n\
    \        return -1;\n    }\n}", "    let p = (a + b + c) / 2;\n    let area =\
    \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return area >= 0 ? +area.toFixed(2)\
    \ : -1;\n}\n", "    //find the largest number\n    let largest = Math.max(a, b,\
    \ c);\n    //find the sum of all other numbers that are not the largest\n    let\
    \ sum = a + b + c - largest;\n    //if the sum is greater than the largest, find\
    \ the area of the triangle\n    if(sum > largest){\n        let p = (a + b + c)\
    \ / 2;\n        return Number((Math.sqrt(p * (p - a) * (p - b) * (p - c))).toFixed(2));\n\
    \    } else{\n        return -1;\n    }\n}", "    let s = (a + b + c) / 2;\n \
    \   let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return (area >\
    \ 0) ? +area.toFixed(2) : -1;\n}\n", "    \n}", "    let s = (a + b + c) / 2;\n\
    \    if (s-a<=0 || s-b<=0 || s-c<=0) return -1;\n    let area = Math.sqrt(s *\
    \ (s-a) * (s-b) * (s-c));\n    return +area.toFixed(2);\n  }\n  triangle_area(2,3,4);\n\
    \  triangle_area(5,5,5);\n", "    var s = (a + b + c) / 2\n    var area = s *\
    \ (s - a) * (s - b) * (s - c)\n    if (area <= 0) {\n        return -1\n    }\
    \ else {\n        return +(Math.sqrt(area)).toFixed(2)\n    }\n}\n", "    let\
    \ sides = [a, b, c].sort((a, b) => a - b);\n    return sides[0] + sides[1] > sides[2]\
    \ ? Math.round(sides[0] + sides[1] + sides[2]) : -1;\n}", "  let s = (a + b +\
    \ c) / 2;\n  let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  return\
    \ area % 1 ? Number(area.toFixed(2)) : -1;\n}", "    if ((a + b > c) && (a + c\
    \ > b) && (b + c > a)) {\n        // Heron's formula https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \        var p = (a + b + c) / 2; // half perimeter\n        var area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        return area.toFixed(2);\n    }\n  \
    \  return -1;\n}\n", "\tif(a + b > c && a + c > b && b + c > a){\n\t\tvar s =\
    \ (a + b + c) / 2;\n\t\tvar result = (s * (s - a) * (s - b) * (s - c));\n\t\t\
    var area = Math.sqrt(result);\n\t\treturn parseFloat(area.toFixed(2));\n\t}\n\t\
    return -1;\n}", "    if (a+b>c && a+c>b && b+c>a){\n        return (1/2*(a*b))\n\
    \    }\n    else{\n        return -1\n    }\n}", "    let s = (a + b + c) / 2;\n\
    \    if (s * (s - a) * (s - b) * (s - c) > 0) {\n        return +Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFixed(2);\n    } else {\n        return -1;\n\
    \    }\n}", "    let longestSide = Math.max(a, b, c);\n    let shortestSide =\
    \ Math.min(a, b, c);\n    let middleSide = a + b + c - longestSide - shortestSide;\n\
    \    let perimeter = (longestSide + middleSide + shortestSide) / 2;\n    let area\
    \ = Math.sqrt(perimeter * (perimeter - longestSide) * (perimeter - middleSide)\
    \ * (perimeter - shortestSide));\n    if (area > 0){\n        return +area.toFixed(2);\n\
    \    }\n    return -1;\n}\n", "    if(a <= 0 || b <= 0 || c <= 0) return -1;\n\
    \    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c));\n    return parseFloat(area.toFixed(2));\n}\n", "  var s = (a +\
    \ b + c) / 2;\n  var area = s * (s - a) * (s - b) * (s - c);\n  if (area > 0)\
    \ {\n    return parseFloat(Math.sqrt(area).toFixed(2));\n  } else {\n    return\
    \ -1;\n  }\n}", "  let p = (a + b + c) / 2;\n  let area = Math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c));\n  if (area === 0) {\n    return -1;\n  } else {\n   \
    \ return +area.toFixed(2);\n  }\n}\n", "  var s = (a + b + c) / 2;\n  var area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n  if (area > 0) {\n    return\
    \ +area.toFixed(2);\n  } else {\n    return -1;\n  }\n}\n", "    let s = 0.5 *\
    \ (a + b + c);\n    let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n \
    \   let output = (area !== NaN) ? area.toFixed(2) : -1;\n    return output;\n\
    }\n", "    if( a + b > c && a + c > b && b + c > a ){\n        return (Number(((a\
    \ + b + c) / 2).toFixed(2)) - a) * (Number(((a + b + c) / 2).toFixed(2)) - b)\
    \ * (Number(((a + b + c) / 2).toFixed(2)) - c) * Number(((a + b + c) / 2).toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}", "    if(a + b > c && a + c > b &&\
    \ b + c > a){\n      return Math.round(100 * (a * Math.sqrt(b * b - a * a / 4)\
    \ / 2) / 100);\n    }\n    return -1;\n  }\n  \n  \n  \n  //Write a function that\
    \ returns the total sum of all the digits of a given integer. \n  //Use recursion.\n\
    \  function sumDigits(n) {\n    if(n === 0) return 0;\n    return sumDigits(Math.floor(n\
    \ / 10)) + n % 10;\n  }\n  \n  \n  \n  //Write a function that takes an integer\
    \ as input and returns an array \n  //of all factors of the number.\n  function\
    \ factors(n) {\n    let out = [];\n    for(let i = 1; i <= n; i++){\n      if(n\
    \ % i === 0) out.push(i);\n    }\n    return out;\n  }\n  \n  \n  \n  //Write\
    \ a function that takes in a positive integer and returns its factorial.\n  function\
    \ factorial(n) {\n    let out = 1;\n    while(n > 0){\n      out *= n;\n     \
    \ n--;\n    }\n    return out;\n  }\n  \n  \n  \n  //Write a function that returns\
    \ the largest integer in a given array.\n  function maxInteger(arr) {\n    return\
    \ Math.max(...arr);\n  }\n  \n  \n  \n  //Write a function that returns the arithmetic\
    \ mean of a given array.\n  function mean(arr) {\n    return arr.reduce((a, b)\
    \ => a + b) / arr.length;\n  }\n  \n  \n  \n  //Write a function that takes in\
    \ two strings and returns the number of times \n  //the first string is found\
    \ in the second string.\n  function countInString(str1, str2) {\n    let out =\
    \ 0;\n    for(let i = 0; i < str2.length; i++){\n      if(str2.substring(i, i\
    \ + str1.length) === str1) out++;\n    }\n   ", "  // return validTriangle(a,\
    \ b, c) ? ((a + b + c) / 2) : -1;\n  return validTriangle(a, b, c) ? triangleArea(a,\
    \ b, c) : -1;\n}", "    if(a <= 0 || b <= 0 || c <= 0){\n        return -1;\n\
    \    }\n    if((a + b > c) && (a + c > b) && (b + c > a)){\n        return (a\
    \ + b + c) / 2;\n    }\n    return -1;\n}", "    if(a + b > c && a + c > b &&\
    \ b + c > a){\n        let p = (a + b + c) / 2;\n        let area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n        return Number(area.toFixed(2));\n \
    \   } else {\n        return -1;\n    }\n}\n", "  let angles = []\n  angles.push(triangleAngle(a,\
    \ b, c))\n  angles.push(triangleAngle(a, c, b))\n  angles.push(triangleAngle(b,\
    \ c, a))\n  if (angles.includes(0)){\n    return -1\n  }\n  // p * (p - a) * (p\
    \ - b) * (p - c)\n  let p = (a + b + c) / 2\n  let area = Math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c))\n  return Number(area.toFixed(2))\n}\n", "  if(a + b >\
    \ c && a + c > b && b + c > a){\n    //Heron's formula for finding the area of\
    \ a triangle when the sides are given\n    var s = (a + b + c) / 2;\n    var area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    return parseFloat(area.toFixed(2));\n\
    \  } else {\n    return -1;\n  }\n}\n", "    var p = (a + b + c) / 2;\n\n    var\
    \ ar = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n\n    if (ar && ar > 0) {\n\
    \        return Number(ar.toFixed(2));\n    } else {\n        return -1;\n   \
    \ }\n}\n", "    // perimeter of triangle\n    let p = (a + b + c) / 2\n    //\
    \ area\n    let area = Math.sqrt(p * (p - a) * (p - b) * (p - c))\n    // check\
    \ if valid triangle\n    if (a + b > c && a + c > b && b + c > a) {\n        return\
    \ parseFloat(area.toFixed(2))\n    } else {\n        return -1\n    }\n}", " \
    \   var s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    if (a + b > c && a + c > b && b + c > a) {\n        return area.toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}", "    if(a + b > c && a + c > b &&\
    \ b + c > a){\n        return (a + b + c) / 2;\n    }\n    return -1;\n}\n", " \
    \   let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n    return (area > 0) ? parseFloat(area.toFixed(2)) : -1;\n}\n",
  "  var area = (a+b+c)/2;\n  var sqrd = Math.sqrt(area*(area-a)*(area-b)*(area-c));\n\
    \  if(a + b <= c || a + c <= b || b + c <= a){\n    return -1;\n  }\n  return\
    \ sqrd.toFixed(2);\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area > 0){\n        return +(area.toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}", "  var args = Array.prototype.slice.call(arguments)\n\
    \  var sorted_args = args.sort(function(a,b){return a-b})\n  if(sorted_args[0]\
    \ + sorted_args[1] > sorted_args[2]){\n    return 1/2 * sorted_args[0] * sorted_args[1]\n\
    \  } else {\n    return -1\n  }\n}\n", "    var s = (a + b + c) / 2;\n    return\
    \ Math.round(Math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100) / 100;\n}\n", " \
    \ var p = (a + b + c) / 2;\n  if (a + b > c && a + c > b && b + c > a) {\n   \
    \ return +Math.sqrt(p * (p - a) * (p - b) * (p - c)).toFixed(2);\n  }\n  return\
    \ -1;\n}\n", "    let sides = [a, b, c];\n    sides.sort((a, b) => a - b);\n \
    \   if (sides[0] + sides[1] > sides[2]) {\n        let p = (a + b + c) / 2;\n\
    \        return parseFloat((Math.sqrt(p * (p - a) * (p - b) * (p - c))).toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}", "  let arr = [a, b, c].sort((a,\
    \ b) => a - b)\n  if (arr[0] + arr[1] > arr[2]){\n    let p = (a + b + c) / 2\n\
    \    return +(Math.sqrt(p * (p - a) * (p - b) * (p - c)).toFixed(2))\n  }\n  return\
    \ -1\n}\n", "    var s = (a + b + c) / 2\n    var area = Math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    return area > 0 ? Number(area.toFixed(2)) : -1\n \
    \ }\n  // or \n  function triangle_area(a, b, c){\n    var p = (a + b + c) / 2;\n\
    \    var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return area >\
    \ 0 ? Number(area.toFixed(2)) : -1;\n  }\n", "  if(a+b>c && a+c>b && b+c>a){\n\
    \    return ((a+b+c)/2)\n  }else{\n    return -1\n  }\n}", "    var s=(a+b+c)/2;\n\
    \    var area=Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    if(s-a>0 && s-b>0 && s-c>0){\n\
    \        return area.toFixed(2);\n    }else{\n        return -1;\n    }\n}", " \
    \   let s = (a + b + c) / 2;\n    if (s > a && s > b && s > c) {\n        let\
    \ area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return Number(area.toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}", "    if (a + b > c && a + c > b\
    \ && b + c > a) {\n        return (1/2) * a * b\n    } else {\n        return\
    \ -1\n    }\n}", "    var area = a * b * c;\n    if(a+b>c && a+c>b && b+c>a){\n\
    \      return Math.round(area * 100) / 100;\n    }\n    else {\n      return -1;\n\
    \    }\n  }", "    var p = (a + b + c) / 2;\n    var area = Math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c));\n    return (a + b > c && a + c > b && b + c > a) ?\
    \ Math.round(area * 100) / 100 : -1;\n  }\n", "  if(isValidTriangle(a, b, c))\
    \ {\n    return Math.round(calculateTriangleArea(a, b, c) * 100) / 100;\n  }\n\
    \  return -1;\n}\n", "    let p = (a + b + c) / 2;\n    let area = Math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c));\n    return area >= 0 ? area.toFixed(2) : -1;\n\
    }", "    let area = 0;\n    let sumOfSides = 0;\n    if (a <= 0 || b <= 0 || c\
    \ <= 0) {\n        return -1;\n    } else {\n        sumOfSides = a + b + c;\n\
    \        if (sumOfSides <= 2 * Math.max(a, b, c)) {\n            return -1;\n\
    \        } else {\n            area = 0.5 * a * b * Math.sin(c * Math.PI / 180);\n\
    \            return area.toFixed(2);\n        }\n    }\n}\n", "  var triangle\
    \ = ((a + b + c) / 2)\n  var area = Math.sqrt(triangle * (triangle - a) * (triangle\
    \ - b) * (triangle - c));\n  var result = area.toFixed(2);\n  if(result <= 0)\
    \ {\n    return -1;\n  }\n  return Number(result);\n}\n", "    let p = (a + b\
    \ + c) / 2;\n    let s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n    return\
    \ s > 0 ? +s.toFixed(2) : -1;\n}\n", "    var a = parseFloat(a);\n    var b =\
    \ parseFloat(b);\n    var c = parseFloat(c);\n    if (a + b <= c || a + c <= b\
    \ || b + c <= a) {\n        return -1;\n    } else {\n        var p = (a + b +\
    \ c) / 2;\n        var area = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  \
    \      return +area.toFixed(2);\n    }\n}", "    var s=(a+b+c)/2;\n    var area\
    \ = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n    if (a+b<=c || a+c<=b || b+c<=a){\n  \
    \    return -1;\n    }\n    else{\n      return Math.round(area*100)/100;\n  \
    \  }\n}", "  var area = (1/2)*a*b*Math.sin(c);\n  return area;\n}\n", "    var\
    \ perimeter = (a + b + c) / 2;\n    var area = Math.sqrt(perimeter * (perimeter\
    \ - a) * (perimeter - b) * (perimeter - c));\n    var output = area.toFixed(2);\n\
    \    if (a + b > c && a + c > b && b + c > a) {\n      return output;\n    } else\
    \ {\n      return -1;\n    }\n}", "  // your code goes here...\n  var p = (a +\
    \ b + c) / 2;\n  var area = p * (p - a) * (p - b) * (p - c);\n  if (area < 0)\
    \ return -1;\n  area = Math.sqrt(area);\n  return Math.round(area * 100) / 100;\n\
    }", "    let p = (a + b + c) / 2;\n    let s = Math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c));\n    return s >= 0 ? Math.round(s * 100) / 100 : -1;\n}\n", "  \
    \  let p = (a + b + c) / 2;\n    let area = Math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c));\n    if(area > 0){\n        return Number(area.toFixed(2));\n    }\n\
    \    return -1;\n}\n", "    let x= a+b+c;\n    if (a<=0 || b<=0 || c<=0) return\
    \ -1;\n    if (a + b < c || a + c < b || b + c < a) return -1;\n    return Math.round(Math.sqrt(x*(x-a)*(x-b)*(x-c))*100)/100;\n\
    }", "    if(a + b > c && a + c > b && b + c > a){\n      return +(((a + b + c)\
    \ / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b + c) / 2)\
    \ - c)) ** 0.5\n    }\n    return -1\n  }\n", "    let area = -1;\n    if (a <=\
    \ 0 || b <= 0 || c <= 0) {\n        return area;\n    }\n    if (a + b > c &&\
    \ a + c > b && b + c > a) {\n        let s = (a + b + c) / 2;\n        area =\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return area.toFixed(2);\n\
    }\n", "    // check if the sum of two sides is greater than the third\n    if\
    \ ((a + b) > c && (a + c) > b && (b + c) > a) {\n        // plug in herons formula\n\
    \        var s = (a + b + c) / 2;\n        var area = Math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c));\n        // return the area of the triangle\n        return\
    \ Math.round(area * 100) / 100;\n    } else {\n        // return -1 if it doesn't\n\
    \        return -1;\n    }\n}\n", "    if (a <= 0 || b <= 0 || c <= 0) return\
    \ -1;\n    if (a + b <= c || a + c <= b || b + c <= a) return -1;\n    var s =\
    \ (a + b + c) / 2;\n    return Math.round(Math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c)) * 100) / 100;\n  }\n", "  let sides = [a, b, c];\n  sides.sort((a, b)\
    \ => a - b);\n  if(sides[0] + sides[1] <= sides[2]) {\n    return -1;\n  }\n \
    \ let p = (a + b + c) / 2;\n  return Number((Math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c))).toFixed(2));\n}", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    if (area > 0) {\n        return +area.toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}", "    // return s(s - a)(s - b)(s\
    \ - c) ** .5;\n    let s = (a + b + c) / 2;\n    let area = s * (s - a) * (s -\
    \ b) * (s - c);\n    if (area <= 0) {\n        return -1;\n    }\n    return area\
    \ ** .5;\n}\n", "    let s = (a + b + c) / 2;\n    let area = Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n    return Number.isInteger(area) ? area : -1;\n\
    }", "    if (a+b>c && a+c>b && b+c>a){\n        var s = (a+b+c)/2;\n        return\
    \ Math.sqrt(s*(s-a)*(s-b)*(s-c)).toFixed(2);\n    }\n    return -1;\n}\n", " \
    \   let m = (a + b + c) / 2;\n    let area = Math.sqrt(m * (m - a) * (m - b) *\
    \ (m - c));\n    if(a + b > c && a + c > b && b + c > a) {\n        return +(area.toFixed(2));\n\
    \    } else {\n        return -1;\n    }\n}\n", "    let max = Math.max(a, b,\
    \ c);\n    let min = Math.min(a, b, c);\n    let middle = a + b + c - max - min;\n\
    \    if (min + middle > max) {\n        return (min + middle) / 2;\n    } else\
    \ {\n        return -1;\n    }\n}", "    let s = (a + b + c) / 2;\n    let area\
    \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    if(isNaN(area)) return -1;\n\
    \    return Number(area.toFixed(2));\n}\n", "    if ((a+b > c) && (a+c > b) &&\
    \ (b+c > a)) {\n        const s = (a+b+c)/2;\n        const area = Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\
    \        return parseFloat(area.toFixed(2));\n    } else {\n        return -1;\n\
    \    }\n}\n", "  let sides = [a, b, c].sort((a, b) => a - b)\n  let result = (sides[0]\
    \ + sides[1] > sides[2]) ? sides[0] + sides[1] + sides[2] : -1\n  return result\n\
    }\n", "    //...\n}", "    if (a+b>c && a+c>b && b+c>a){\n        return parseFloat(((a+b+c)/2*(a+b-c)/2*(a-b+c)/2*(b+c-a)/2)**0.5).toFixed(2);\n\
    \    } else {\n        return -1;\n    }\n}\n", "  if(a < b + c && b < a + c &&\
    \ c < a + b){\n  return Number(((a + b + c) / 2 * ((a + b + c) / 2 - a) * ((a\
    \ + b + c) / 2 - b) * ((a + b + c) / 2 - c)) ** 0.5).toFixed(2);\n  } else {\n\
    \    return -1;\n  }\n}", "    if (a+b>c && a+c>b && b+c>a){\n      return Number(((a+b+c)/2)*(Math.sqrt(((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c))).toFixed(2);\n\
    \    }\n    else{\n      return -1;\n    }\n  }\n  console.log(triangle_area(3,4,5));",
  "    if(a + b > c && a + c > b && b + c > a){\n        return +(((a + b + c) / 2)\
    \ * Math.sqrt(((a + b + c) / 2) - a) * Math.sqrt(((a + b + c) / 2) - b) * Math.sqrt(((a\
    \ + b + c) / 2) - c)).toFixed(2);\n    }\n    return -1;\n}\n", "    let s = (a\
    \ + b + c) / 2;\n    if (a + b > c && a + c > b && b + c > a) {\n        return\
    \ +Math.sqrt(s * (s - a) * (s - b) * (s - c)).toFixed(2);\n    }\n    return -1;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

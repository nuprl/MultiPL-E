language: js
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return _.map(l, function(elem){return elem + 1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfn3wrth5.js:3\n  return _.map(l, function(elem){return elem + 1;});\n\
    \  ^\n\nReferenceError: _ is not defined\n    at incr_list (/tmp/tmpfn3wrth5.js:3:3)\n\
    \    at test (/tmp/tmpfn3wrth5.js:11:20)\n    at Object.<anonymous> (/tmp/tmpfn3wrth5.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var i, l2;\n  l2 = [];\n  for(i=0; i<l.length; i++){\n    l2.push(l[i]+1);\n\
    \  }\n  return l2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(item){\n        return item + 1;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  function incr(x){\n    return 1 + x;\n  }\n  return map(incr, l);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpoe2yokcv.js:6\n  return map(incr, l);\n  ^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmpoe2yokcv.js:6:3)\n    at test (/tmp/tmpoe2yokcv.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmpoe2yokcv.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(empty_list_Q(l)){\n        return l;\n    }else{\n        return cons(head(l)+1,\
    \ incr_list(tail(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpa81ly77f.js:3\n    if(empty_list_Q(l)){\n    ^\n\nReferenceError:\
    \ empty_list_Q is not defined\n    at incr_list (/tmp/tmpa81ly77f.js:3:5)\n  \
    \  at test (/tmp/tmpa81ly77f.js:15:20)\n    at Object.<anonymous> (/tmp/tmpa81ly77f.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar l1 = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tl1.push(l[i]+1);\n\t}\n\t\
    return l1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var res = [];\n  for(var i = 0; i < l.length; i++){\n    res.push(l[i] + 1);\n\
    \  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(x){\n\t\treturn x+1;\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(element){\n        return element + 1;\n    });\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var out = [];\n  for(var i = 0; i < l.length; i++){\n    out.push(l[i] + 1);\n\
    \  }\n  return out;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(x => x+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar i = 0;\n\tvar ret = [];\n\tfor(i=0;i<l.length;i++){\n\t\tret.push(l[i]+1);\n\
    \t}\n\treturn ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar res = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tres.push(l[i] + 1);\n\
    \t}\n\treturn res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn R.map(R.inc, l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcm2tat00.js:3\n\treturn R.map(R.inc, l);\n\t^\n\nReferenceError:\
    \ R is not defined\n    at incr_list (/tmp/tmpcm2tat00.js:3:2)\n    at test (/tmp/tmpcm2tat00.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpcm2tat00.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(element){\n        return (element+1);\n    });\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  let incr_l = [];\n  for(let i = 0; i < l.length; i++){\n    incr_l.push(l[i]\
    \ + 1);\n  }\n  return incr_l;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var l_new = l.slice();\n    for(var i = 0; i < l_new.length; i++){\n    \
    \    l_new[i] += 1;\n    }\n    return l_new;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var i, ret=[];\n  for(i=0;i<l.length;i++){\n    ret.push(l[i]+1);\n  }\n  return\
    \ ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tif(l.length==0){\n\t\treturn [];\n\t}\n\treturn cons(head(l)+1, incr_list(tail(l)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpty89go4o.js:6\n\treturn cons(head(l)+1, incr_list(tail(l)));\n\t\
    ^\n\nReferenceError: cons is not defined\n    at incr_list (/tmp/tmpty89go4o.js:6:2)\n\
    \    at test (/tmp/tmpty89go4o.js:15:20)\n    at Object.<anonymous> (/tmp/tmpty89go4o.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar result = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tresult.push(l[i]+1);\n\
    \t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var new_list = [];\n  for(var i=0; i<l.length; i++){\n    new_list.push(l[i]+1);\n\
    \  }\n  return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(l, function(e){return e+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjn2s0iuu.js:3\n  return map(l, function(e){return e+1;});\n  ^\n\
    \nReferenceError: map is not defined\n    at incr_list (/tmp/tmpjn2s0iuu.js:3:3)\n\
    \    at test (/tmp/tmpjn2s0iuu.js:11:20)\n    at Object.<anonymous> (/tmp/tmpjn2s0iuu.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    function f(l){\n        var a = [];\n        for(var i=0; i<l.length; i++){\n\
    \            a.push(l[i]+1);\n        }\n        return a;\n    }\n    return\
    \ f(l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(l === null){\n        return null;\n    }\n    return pair(head(l) + 1,\
    \ incr_list(tail(l)));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphucg1nx1.js:6\n    return pair(head(l) + 1, incr_list(tail(l)));\n\
    \    ^\n\nReferenceError: pair is not defined\n    at incr_list (/tmp/tmphucg1nx1.js:6:5)\n\
    \    at test (/tmp/tmphucg1nx1.js:14:20)\n    at Object.<anonymous> (/tmp/tmphucg1nx1.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var r = new Array(l.length);\n    for(var i = 0; i < l.length; i++){\n  \
    \      r[i] = l[i] + 1;\n    }\n    return r;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(incr, l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkd2w2mti.js:3\n  return map(incr, l);\n  ^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmpkd2w2mti.js:3:3)\n    at test (/tmp/tmpkd2w2mti.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpkd2w2mti.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(l.length == 0){\n        return l;\n    }\n    return cons(head(l) + 1,\
    \ incr_list(tail(l)));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqfqbwydo.js:6\n    return cons(head(l) + 1, incr_list(tail(l)));\n\
    \    ^\n\nReferenceError: cons is not defined\n    at incr_list (/tmp/tmpqfqbwydo.js:6:5)\n\
    \    at test (/tmp/tmpqfqbwydo.js:15:20)\n    at Object.<anonymous> (/tmp/tmpqfqbwydo.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(!nullp(l)){\n        return cons(car(l)+1, incr_list(cdr(l)));\n    }\n\
    \    return [];\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphqaff08s.js:3\n    if(!nullp(l)){\n    ^\n\nReferenceError: nullp\
    \ is not defined\n    at incr_list (/tmp/tmphqaff08s.js:3:5)\n    at test (/tmp/tmphqaff08s.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmphqaff08s.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar out_l = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tout_l.push(l[i] +\
    \ 1);\n\t}\n\treturn out_l;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(is_empty_list(l)){\n        return [];\n    } else {\n        return cons(head(l)\
    \ + 1, incr_list(tail(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp11530nd6.js:3\n    if(is_empty_list(l)){\n    ^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at incr_list (/tmp/tmp11530nd6.js:3:5)\n \
    \   at test (/tmp/tmp11530nd6.js:15:20)\n    at Object.<anonymous> (/tmp/tmp11530nd6.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var incr_l = [];\n  var i;\n  for(i = 0; i < l.length; i++){\n    incr_l.push(l[i]\
    \ + 1);\n  }\n  return incr_l;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar nl = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tnl.push(l[i]+1);\n\t}\n\t\
    return nl;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(l, function(el){\n        return el + 1;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpons7khue.js:3\n    return map(l, function(el){\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpons7khue.js:3:5)\n    at test\
    \ (/tmp/tmpons7khue.js:13:20)\n    at Object.<anonymous> (/tmp/tmpons7khue.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(1, function(x){return x+1;}, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdci_l03x.js:3\n    return map(1, function(x){return x+1;}, l);\n\
    \    ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmpdci_l03x.js:3:5)\n\
    \    at test (/tmp/tmpdci_l03x.js:11:20)\n    at Object.<anonymous> (/tmp/tmpdci_l03x.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar result = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tresult.push(l[i]\
    \ + 1);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tif(!l.length) return [];\n\treturn [head(l)+1].concat(incr_list(tail(l)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk6pia3b7.js:4\n\treturn [head(l)+1].concat(incr_list(tail(l)));\n\
    \t^\n\nReferenceError: head is not defined\n    at incr_list (/tmp/tmpk6pia3b7.js:4:2)\n\
    \    at test (/tmp/tmpk6pia3b7.js:13:20)\n    at Object.<anonymous> (/tmp/tmpk6pia3b7.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(v) { return v+1; });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \   return l.map(function(e){\n      return e+1;\n   });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(n){return n+1});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(function(x){return x+1;},l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2x4ossm6.js:3\n    return map(function(x){return x+1;},l);\n  \
    \  ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmp2x4ossm6.js:3:5)\n\
    \    at test (/tmp/tmp2x4ossm6.js:11:20)\n    at Object.<anonymous> (/tmp/tmp2x4ossm6.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  let res = [];\n  for(let i = 0; i < l.length; i++){\n    res.push(l[i] + 1);\n\
    \  }\n  return res;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(l.length === 0){\n    return l;\n  }\n  else {\n    var t = [];\n    t.push(l[0]\
    \ + 1);\n    return t.concat(incr_list(l.slice(1)));\n  }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp42adj3_7.js:3\n    return map(l, function(x){return x+1;});\n \
    \   ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmp42adj3_7.js:3:5)\n\
    \    at test (/tmp/tmp42adj3_7.js:11:20)\n    at Object.<anonymous> (/tmp/tmp42adj3_7.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(elem){return elem+1});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(increment, l);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuui9s5j1.js:3\n    return map(increment, l);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpuui9s5j1.js:3:5)\n    at test\
    \ (/tmp/tmpuui9s5j1.js:11:20)\n    at Object.<anonymous> (/tmp/tmpuui9s5j1.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(incr, l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpimqlyd5i.js:3\n    return map(incr, l);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpimqlyd5i.js:3:5)\n    at test\
    \ (/tmp/tmpimqlyd5i.js:11:20)\n    at Object.<anonymous> (/tmp/tmpimqlyd5i.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(add_1, l);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjtvsko20.js:3\n    return map(add_1, l);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpjtvsko20.js:3:5)\n    at test\
    \ (/tmp/tmpjtvsko20.js:11:20)\n    at Object.<anonymous> (/tmp/tmpjtvsko20.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var new_list = [];\n    for(var i = 0; i < l.length; i++){\n        new_list.push(l[i]\
    \ + 1);\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(function(x){return x+1;}, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6uhc67p_.js:3\n  return map(function(x){return x+1;}, l);\n  ^\n\
    \nReferenceError: map is not defined\n    at incr_list (/tmp/tmp6uhc67p_.js:3:3)\n\
    \    at test (/tmp/tmp6uhc67p_.js:11:20)\n    at Object.<anonymous> (/tmp/tmp6uhc67p_.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tfor(var i=0; i<l.length; i++){\n\t\tl[i]++;\n\t}\n\treturn l;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return Array.from(l, function(x) { return x+1; });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return a.map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg18ggkz0.js:3\n  return a.map(l, function(x){return x+1;});\n \
    \ ^\n\nReferenceError: a is not defined\n    at incr_list (/tmp/tmpg18ggkz0.js:3:3)\n\
    \    at test (/tmp/tmpg18ggkz0.js:11:20)\n    at Object.<anonymous> (/tmp/tmpg18ggkz0.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar ll = l.slice();\n\tfor(var i=0; i<ll.length; i++){\n\t\tll[i]++;\n\t}\n\t\
    return ll;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var result = new Array();\n    for(var i=0; i<l.length; i++){\n        result.push(l[i]+1);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return is_null(l)\n           ? null\n           : pair(head(l) + 1,\n  \
    \                incr_list(tail(l)));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7dctmpu8.js:3\n    return is_null(l)\n    ^\n\nReferenceError:\
    \ is_null is not defined\n    at incr_list (/tmp/tmp7dctmpu8.js:3:5)\n    at test\
    \ (/tmp/tmp7dctmpu8.js:14:20)\n    at Object.<anonymous> (/tmp/tmp7dctmpu8.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var new_list = [];\n    for(var e in l){\n        new_list.push(l[e]+1);\n\
    \    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(x){return x+1});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(l == NIL){\n        return NIL;\n    }else{\n        return PAIR(1 + CAR(l),\
    \ incr_list(CDR(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpups68311.js:3\n    if(l == NIL){\n            ^\n\nReferenceError:\
    \ NIL is not defined\n    at incr_list (/tmp/tmpups68311.js:3:13)\n    at test\
    \ (/tmp/tmpups68311.js:15:20)\n    at Object.<anonymous> (/tmp/tmpups68311.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tvar i = 0;\n\tfor(i = 0; i < l.length; i++)\n\t\tnew_list.push(l[i]\
    \ + 1);\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(function(e){return e+1;}, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5muyvyn5.js:3\n    return map(function(e){return e+1;}, l);\n \
    \   ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmp5muyvyn5.js:3:5)\n\
    \    at test (/tmp/tmp5muyvyn5.js:11:20)\n    at Object.<anonymous> (/tmp/tmp5muyvyn5.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var result = [];\n  for(var i = 0; i < l.length; i++){\n    result.push(l[i]\
    \ + 1);\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var r = new Array();\n  for(var i = 0; i < l.length; i++){\n    r.push(l[i]\
    \ + 1);\n  }\n  return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar i, len = l.length;\n\tvar result = new Array(len);\n\tfor(i=0; i<len; i++){\n\
    \t\tresult[i] = l[i] + 1;\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return null;\n  } else {\n    return pair(head(l) + 1,\
    \ incr_list(tail(l)));\n  }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyf061dgj.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmpyf061dgj.js:3:3)\n    at test (/tmp/tmpyf061dgj.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpyf061dgj.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var r = [];\n  for(var i=0; i<l.length; i++){\n    r.push(l[i]+1);\n  }\n \
    \ return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(x => x+1);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(l.length == 0){\n        return [];\n    }\n    else{\n        return\
    \ [l[0]+1].concat(incr_list(l.slice(1)));\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var i;\n  var l_incr = [];\n  for(i=0; i<l.length; i++){\n    l_incr.push(l[i]+1);\n\
    \  }\n  return l_incr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwjha1701.js:3\n\treturn map(l, function(x){return x+1;});\n\t^\n\
    \nReferenceError: map is not defined\n    at incr_list (/tmp/tmpwjha1701.js:3:2)\n\
    \    at test (/tmp/tmpwjha1701.js:11:20)\n    at Object.<anonymous> (/tmp/tmpwjha1701.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var a = [];\n    for(var i = 0; i < l.length; i++){\n        a.push(l[i]\
    \ + 1);\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return _.map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfw8x7luz.js:3\n    return _.map(l, function(x){return x+1;});\n\
    \    ^\n\nReferenceError: _ is not defined\n    at incr_list (/tmp/tmpfw8x7luz.js:3:5)\n\
    \    at test (/tmp/tmpfw8x7luz.js:11:20)\n    at Object.<anonymous> (/tmp/tmpfw8x7luz.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var new_list = [];\n  for(var k = 0; k < l.length; k++){\n    new_list.push(l[k]\
    \ + 1);\n  }\n  return new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar nl = [];\n\tfor(i=0;i<l.length;i++){\n\t\tnl.push(l[i]+1);\n\t}\n\treturn\
    \ nl;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var new_list = [];\n    for(var i = 0; i < l.length; i++){\n        new_list.push(l[i]\
    \ + 1);\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(incr_by_1);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuea6otp6.js:3\n\treturn l.map(incr_by_1);\n\t             ^\n\n\
    ReferenceError: incr_by_1 is not defined\n    at incr_list (/tmp/tmpuea6otp6.js:3:15)\n\
    \    at test (/tmp/tmpuea6otp6.js:11:20)\n    at Object.<anonymous> (/tmp/tmpuea6otp6.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(x){return x+1;});\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(incr_if_num, l);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4h0qbfyf.js:3\n  return map(incr_if_num, l);\n  ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmp4h0qbfyf.js:3:3)\n    at test\
    \ (/tmp/tmp4h0qbfyf.js:11:20)\n    at Object.<anonymous> (/tmp/tmp4h0qbfyf.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn list_map(function(x){ return x+1; }, l);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpgin84469.js:3\n\treturn list_map(function(x){ return x+1; }, l);\n\
    \t^\n\nReferenceError: list_map is not defined\n    at incr_list (/tmp/tmpgin84469.js:3:2)\n\
    \    at test (/tmp/tmpgin84469.js:10:20)\n    at Object.<anonymous> (/tmp/tmpgin84469.js:15:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var k = [];\n    for(var i = 0; i < l.length; i++){\n        k.push(l[i]\
    \ + 1);\n    }\n    return k;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return null;\n  } else {\n    return pair(head(l) + 1,\
    \ incr_list(tail(l)));\n  }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyf061dgj.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmpyf061dgj.js:3:3)\n    at test (/tmp/tmpyf061dgj.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpyf061dgj.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var l1 = l;\n    return l1.map(function(x){\n        return x + 1;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tvar i = 0;\n\twhile(i < l.length){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t\ti = i + 1;\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  let new_list = [];\n  for(let i=0; i<l.length; i++){\n    new_list.push(l[i]+1);\n\
    \  }\n  return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var incr_l = [];\n    var i;\n    for(i = 0; i < l.length; i++){\n      \
    \  incr_l.push(l[i] + 1);\n    }\n    return incr_l;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    let r=[];\n    for(let i=0;i<l.length;i++){\n        r.push(l[i]+1);\n  \
    \  }\n    return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(l, x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpre72d0b1.js:3\n  return map(l, x => x + 1);\n  ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpre72d0b1.js:3:3)\n    at test\
    \ (/tmp/tmpre72d0b1.js:11:20)\n    at Object.<anonymous> (/tmp/tmpre72d0b1.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return [...l].map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = new Array(l.length);\n\tfor(var i = 0; i < l.length; i++){\n\t\
    \tnew_list[i] = l[i] + 1;\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar ans = new Array();\n\tfor(var i=0; i<l.length; i++){\n\t\tans.push(parseInt(l[i])+1);\n\
    \t}\n\treturn ans;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var y = [];\n    for(var i=0; i<l.length; i++){\n        y.push(l[i]+1);\n\
    \    }\n    return y;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var new_list = [];\n  for(var i = 0; i < l.length; i++){\n    new_list.push(l[i]\
    \ + 1);\n  }\n  return new_list;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tnew_list.push(l[i]+1);\n\
    \t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return _.map(l, function(x){ return x + 1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp00j1u8cw.js:3\n    return _.map(l, function(x){ return x + 1;});\n\
    \    ^\n\nReferenceError: _ is not defined\n    at incr_list (/tmp/tmp00j1u8cw.js:3:5)\n\
    \    at test (/tmp/tmp00j1u8cw.js:11:20)\n    at Object.<anonymous> (/tmp/tmp00j1u8cw.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(function(x){ return x+1; }, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw_4h6mut.js:3\n    return map(function(x){ return x+1; }, l);\n\
    \    ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmpw_4h6mut.js:3:5)\n\
    \    at test (/tmp/tmpw_4h6mut.js:11:20)\n    at Object.<anonymous> (/tmp/tmpw_4h6mut.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  let new_list = [],\n      tmp;\n  for(let i=0; i<l.length; i++){\n    tmp =\
    \ l[i] + 1;\n    new_list.push(tmp);\n  }\n  return new_list;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return null;\n  } else {\n    return pair(head(l) + 1,\
    \ incr_list(tail(l)));\n  }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyf061dgj.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmpyf061dgj.js:3:3)\n    at test (/tmp/tmpyf061dgj.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpyf061dgj.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp42adj3_7.js:3\n    return map(l, function(x){return x+1;});\n \
    \   ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmp42adj3_7.js:3:5)\n\
    \    at test (/tmp/tmp42adj3_7.js:11:20)\n    at Object.<anonymous> (/tmp/tmp42adj3_7.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(l, function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp42adj3_7.js:3\n    return map(l, function(x){return x+1;});\n \
    \   ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmp42adj3_7.js:3:5)\n\
    \    at test (/tmp/tmp42adj3_7.js:11:20)\n    at Object.<anonymous> (/tmp/tmp42adj3_7.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return _.map(l, function(element){\n        return element + 1;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplnryqcus.js:3\n    return _.map(l, function(element){\n    ^\n\n\
    ReferenceError: _ is not defined\n    at incr_list (/tmp/tmplnryqcus.js:3:5)\n\
    \    at test (/tmp/tmplnryqcus.js:13:20)\n    at Object.<anonymous> (/tmp/tmplnryqcus.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var result = [];\n    for(var i = 0; i < l.length; i++){\n        result.push(l[i]\
    \ + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(function(element){\n    return element+1;\n  });\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar r = [];\n\tl.forEach(function(e){\n\t\tr.push(e+1);\n\t});\n\treturn r;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return [];\n  } else {\n    return pair(head(l) + 1, incr_list(tail(l)));\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpl6q8qwnk.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmpl6q8qwnk.js:3:3)\n    at test (/tmp/tmpl6q8qwnk.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpl6q8qwnk.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar li = l.length;\n\tvar rl = [];\n\tfor(var i = 0; i < li; i++){\n\t\trl.push(l[i]\
    \ + 1);\n\t}\n\treturn rl;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(l, incr_one);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvmec2z8a.js:3\n    return map(l, incr_one);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpvmec2z8a.js:3:5)\n    at test\
    \ (/tmp/tmpvmec2z8a.js:11:20)\n    at Object.<anonymous> (/tmp/tmpvmec2z8a.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var list = [];\n    for(var i = 0; i < l.length; i++){\n        list.push(l[i]\
    \ + 1);\n    }\n    return list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tfor(var i = 0; i < l.length; i++){\n\t\tl[i] = l[i] + 1;\n\t}\n\treturn l;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(l.length === 0){\n    return [];\n  }\n  return [l[0] + 1].concat(incr_list(l.slice(1)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return _.map(l, function(e){\n    return e + 1;\n  });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0cogeiv4.js:3\n  return _.map(l, function(e){\n  ^\n\nReferenceError:\
    \ _ is not defined\n    at incr_list (/tmp/tmp0cogeiv4.js:3:3)\n    at test (/tmp/tmp0cogeiv4.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmp0cogeiv4.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return [l[0]+1, l[1]+1, l[2]+1];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  NaN,\n  NaN,\n\
    \  NaN\n]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpcuz7yba3.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcuz7yba3.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ NaN, NaN,\
    \ NaN ],\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return is_null(l) ? [] : \n        pair(head(l) + 1, incr_list(tail(l)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpejum2wtv.js:3\n    return is_null(l) ? [] : \n    ^\n\nReferenceError:\
    \ is_null is not defined\n    at incr_list (/tmp/tmpejum2wtv.js:3:5)\n    at test\
    \ (/tmp/tmpejum2wtv.js:12:20)\n    at Object.<anonymous> (/tmp/tmpejum2wtv.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(x){return x+1});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(x){return x+1});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var ret_list = [];\n  for(var i = 0; i < l.length; i++){\n    ret_list.push(l[i]\
    \ + 1);\n  }\n  return ret_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return tl(l).map(function(e){return incr(e);});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg548mmq6.js:3\n  return tl(l).map(function(e){return incr(e);});\n\
    \  ^\n\nReferenceError: tl is not defined\n    at incr_list (/tmp/tmpg548mmq6.js:3:3)\n\
    \    at test (/tmp/tmpg548mmq6.js:11:20)\n    at Object.<anonymous> (/tmp/tmpg548mmq6.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(l, (x) => x + 1);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjognmnm7.js:3\n  return map(l, (x) => x + 1);\n  ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpjognmnm7.js:3:3)\n    at test\
    \ (/tmp/tmpjognmnm7.js:11:20)\n    at Object.<anonymous> (/tmp/tmpjognmnm7.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(i => i + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(el){\n        return el + 1;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var n = l.length;\n    var res = new Array(n);\n    for(var i=0; i<n; i++){\n\
    \        res[i] = l[i] + 1;\n    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var res = [];\n    for(var i = 0; i < l.length; i++){\n        res.push(l[i]\
    \ + 1);\n    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn map(l, function(element){\n\t\treturn element + 1;\n\t});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppnk7xec_.js:3\n\treturn map(l, function(element){\n\t^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmppnk7xec_.js:3:2)\n    at test\
    \ (/tmp/tmppnk7xec_.js:13:20)\n    at Object.<anonymous> (/tmp/tmppnk7xec_.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn list(...l.map(x => x+1));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7_7398ee.js:3\n\treturn list(...l.map(x => x+1));\n\t^\n\nReferenceError:\
    \ list is not defined\n    at incr_list (/tmp/tmp7_7398ee.js:3:2)\n    at test\
    \ (/tmp/tmp7_7398ee.js:11:20)\n    at Object.<anonymous> (/tmp/tmp7_7398ee.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var nl = [];\n  for(var x in l){\n    nl.push(l[x]+1);\n  }\n  return nl;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var result = [];\n    for(var i = 0; i < l.length; i++){\n        result.push(l[i]\
    \ + 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(l === null){\n    return null;\n  }else{\n    return pair(head(l) + 1, incr_list(tail(l)));\n\
    \  }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp96lq31_u.js:6\n    return pair(head(l) + 1, incr_list(tail(l)));\n\
    \    ^\n\nReferenceError: pair is not defined\n    at incr_list (/tmp/tmp96lq31_u.js:6:5)\n\
    \    at test (/tmp/tmp96lq31_u.js:14:20)\n    at Object.<anonymous> (/tmp/tmp96lq31_u.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn map(l, x => ++x);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6p8qb5mx.js:3\n\treturn map(l, x => ++x);\n\t^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmp6p8qb5mx.js:3:2)\n    at test\
    \ (/tmp/tmp6p8qb5mx.js:11:20)\n    at Object.<anonymous> (/tmp/tmp6p8qb5mx.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(x => x + 1);\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return null;\n  }else{\n    return pair(head(l) + 1, incr_list(tail(l)));\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0s5gl89i.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmp0s5gl89i.js:3:3)\n    at test (/tmp/tmp0s5gl89i.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmp0s5gl89i.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var a = [];\n  for(var x in l){\n    a.push(l[x]+1);\n  }\n  return a;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(el){\n        return el + 1;\n    });\n}\n\nvar v =\
    \ incr_list([2, 4, 5]);\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var l2 = [];\n    for(i = 0; i < l.length; i++){\n        l2.push(l[i] +\
    \ 1);\n    }\n    return l2;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tif(is_empty_list(l)){\n\t\treturn [];\n\t}else{\n\t\treturn pair(head(l) + 1,\
    \ incr_list(tail(l)));\n\t}\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7tvrcufv.js:3\n\tif(is_empty_list(l)){\n\t^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at incr_list (/tmp/tmp7tvrcufv.js:3:2)\n \
    \   at test (/tmp/tmp7tvrcufv.js:15:20)\n    at Object.<anonymous> (/tmp/tmp7tvrcufv.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar list = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tlist.push(incr(l[i]));\n\
    \t}\n\treturn list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpup3oqldc.js:5\n\t\tlist.push(incr(l[i]));\n\t\t     ^\n\nReferenceError:\
    \ incr is not defined\n    at incr_list (/tmp/tmpup3oqldc.js:5:8)\n    at test\
    \ (/tmp/tmpup3oqldc.js:16:20)\n    at Object.<anonymous> (/tmp/tmpup3oqldc.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return l.map(function(num){\n    return num + 1;\n  });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return List.map( x => x + 1, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxf18pw8s.js:3\n  return List.map( x => x + 1, l);\n  ^\n\nReferenceError:\
    \ List is not defined\n    at incr_list (/tmp/tmpxf18pw8s.js:3:3)\n    at test\
    \ (/tmp/tmpxf18pw8s.js:11:20)\n    at Object.<anonymous> (/tmp/tmpxf18pw8s.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(!l.rest){\n    return list(l.value + 1);\n  }\n  return list(l.value + 1,\
    \ incr_list(l.rest));\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjwvaas8a.js:4\n    return list(l.value + 1);\n    ^\n\nReferenceError:\
    \ list is not defined\n    at incr_list (/tmp/tmpjwvaas8a.js:4:5)\n    at test\
    \ (/tmp/tmpjwvaas8a.js:13:20)\n    at Object.<anonymous> (/tmp/tmpjwvaas8a.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar res = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tres.push(l[i] + 1);\n\
    \t}\n\treturn res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(increment, l);\n}\n\nincr_list([1, 2, 3]); // [2, 3, 4]\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuwxcwb7u.js:3\n    return map(increment, l);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpuwxcwb7u.js:3:5)\n    at Object.<anonymous>\
    \ (/tmp/tmpuwxcwb7u.js:6:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar new_list = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t}\n\treturn new_list;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar l_incr = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tl_incr.push(l[i]\
    \ + 1);\n\t}\n\treturn l_incr;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn l.map(function(val){return val+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn map(l, incr);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppqtlzv91.js:3\n\treturn map(l, incr);\n\t^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmppqtlzv91.js:3:2)\n    at test (/tmp/tmppqtlzv91.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmppqtlzv91.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var l_ = [];\n  for(var i = 0; i < l.length; i++){\n    l_.push(l[i] + 1);\n\
    \  }\n  return l_;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var nl = [];\n    for(var i=0; i<l.length; i++){\n        nl.push(l[i]+1);\n\
    \    }\n    return nl;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var new_list = [];\n    for(var i = 0; i < l.length; i++){\n        new_list.push(l[i]\
    \ + 1);\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var inc_l = [];\n    for(var i=0; i<l.length; i++){\n        inc_l.push(l[i]+1);\n\
    \    }\n    return inc_l;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return is_null(l)\n    ? l\n    : pair(head(l) + 1, incr_list(tail(l)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpbdzj5q9f.js:3\n    return is_null(l)\n    ^\n\nReferenceError:\
    \ is_null is not defined\n    at incr_list (/tmp/tmpbdzj5q9f.js:3:5)\n    at test\
    \ (/tmp/tmpbdzj5q9f.js:13:20)\n    at Object.<anonymous> (/tmp/tmpbdzj5q9f.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar list = l.slice();\n\tfor(i = 0; i < list.length; i++){\n\t\tlist[i]++;\n\
    \t}\n\treturn list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(x => x + 1, l);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprct369xs.js:3\n  return map(x => x + 1, l);\n  ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmprct369xs.js:3:3)\n    at test\
    \ (/tmp/tmprct369xs.js:11:20)\n    at Object.<anonymous> (/tmp/tmprct369xs.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(is_empty_list(l)){\n        return l;\n    }else{\n        return pair(head(l)\
    \ + 1, incr_list(tail(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9s692f1h.js:3\n    if(is_empty_list(l)){\n    ^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at incr_list (/tmp/tmp9s692f1h.js:3:5)\n \
    \   at test (/tmp/tmp9s692f1h.js:15:20)\n    at Object.<anonymous> (/tmp/tmp9s692f1h.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var res = [];\n    for(var i=0; i<l.length; i++){\n        res.push(l[i]+1);\n\
    \    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map_list(l, function(el){return el+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmvagwwmb.js:3\n    return map_list(l, function(el){return el+1;});\n\
    \    ^\n\nReferenceError: map_list is not defined\n    at incr_list (/tmp/tmpmvagwwmb.js:3:5)\n\
    \    at test (/tmp/tmpmvagwwmb.js:11:20)\n    at Object.<anonymous> (/tmp/tmpmvagwwmb.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar result = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tresult.push(l[i]\
    \ + 1);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(is_empty_list(l)){\n        return [];\n    } else {\n        return pair(head(l)\
    \ + 1, incr_list(tail(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7o0hwplq.js:3\n    if(is_empty_list(l)){\n    ^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at incr_list (/tmp/tmp7o0hwplq.js:3:5)\n \
    \   at test (/tmp/tmp7o0hwplq.js:15:20)\n    at Object.<anonymous> (/tmp/tmp7o0hwplq.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var i, result=[];\n    for(i=0; i<l.length; i++){\n        result.push(l[i]+1);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tif(l == null){\n\t\treturn null;\n\t}\n\treturn pair(head(l) + 1, incr_list(tail(l)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcxmfdsk_.js:6\n\treturn pair(head(l) + 1, incr_list(tail(l)));\n\
    \t^\n\nReferenceError: pair is not defined\n    at incr_list (/tmp/tmpcxmfdsk_.js:6:2)\n\
    \    at test (/tmp/tmpcxmfdsk_.js:14:20)\n    at Object.<anonymous> (/tmp/tmpcxmfdsk_.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(incr, l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkd2w2mti.js:3\n  return map(incr, l);\n  ^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmpkd2w2mti.js:3:3)\n    at test (/tmp/tmpkd2w2mti.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpkd2w2mti.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(add(1), l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplvkn_kwa.js:3\n  return map(add(1), l);\n  ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmplvkn_kwa.js:3:3)\n    at test\
    \ (/tmp/tmplvkn_kwa.js:11:20)\n    at Object.<anonymous> (/tmp/tmplvkn_kwa.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return l.map(function(x){return x+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(l == \"\"){\n    return [];\n  }else{\n    return add(1, head(l))::incr_list(tail(l));\n\
    \  }\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp8ozi2zd5.js:6\n    return add(1, head(l))::incr_list(tail(l));\n\
    \                          ^\n\nSyntaxError: Unexpected token ':'\n    at Object.compileFunction\
    \ (node:vm:360:18)\n    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  function incr(x){\n    return x + 1;\n  }\n  return map(incr, l);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjsxrpvgt.js:6\n  return map(incr, l);\n  ^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmpjsxrpvgt.js:6:3)\n    at test (/tmp/tmpjsxrpvgt.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmpjsxrpvgt.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tif(!l){\n\t\treturn l;\n\t}else{\n\t\tvar tmp = incr_list(l.next);\n\t\treturn\
    \ {v: l.v + 1, next: tmp};\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  next: undefined,\n\
    \  v: NaN\n}\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmp4pxzgi9z.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4pxzgi9z.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { v: NaN,\
    \ next: undefined },\n  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  return map(l,incr);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmploxvor40.js:3\n  return map(l,incr);\n  ^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmploxvor40.js:3:3)\n    at test (/tmp/tmploxvor40.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmploxvor40.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  if(is_null(l)){\n    return null;\n  } else {\n    return pair(head(l) + 1,\
    \ incr_list(tail(l)));\n  }\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyf061dgj.js:3\n  if(is_null(l)){\n  ^\n\nReferenceError: is_null\
    \ is not defined\n    at incr_list (/tmp/tmpyf061dgj.js:3:3)\n    at test (/tmp/tmpyf061dgj.js:15:20)\n\
    \    at Object.<anonymous> (/tmp/tmpyf061dgj.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return _.map(l, increment);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqsc603q8.js:3\n    return _.map(l, increment);\n    ^\n\nReferenceError:\
    \ _ is not defined\n    at incr_list (/tmp/tmpqsc603q8.js:3:5)\n    at test (/tmp/tmpqsc603q8.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpqsc603q8.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \t//Returns a new list with the elements incremented by 1\n\treturn _.map(l, function(v){return\
    \ v+1;});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2fqos3fl.js:4\n\treturn _.map(l, function(v){return v+1;});\n\t\
    ^\n\nReferenceError: _ is not defined\n    at incr_list (/tmp/tmp2fqos3fl.js:4:2)\n\
    \    at test (/tmp/tmp2fqos3fl.js:12:20)\n    at Object.<anonymous> (/tmp/tmp2fqos3fl.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var l1 = [];\n  for(var i = 0; i < l.length; i++){\n    l1.push(l[i] + 1);\n\
    \  }\n  return l1;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(is_empty_list(l)){\n        return [];\n    } else {\n        return pair(head(l)\
    \ + 1, incr_list(tail(l)));\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7o0hwplq.js:3\n    if(is_empty_list(l)){\n    ^\n\nReferenceError:\
    \ is_empty_list is not defined\n    at incr_list (/tmp/tmp7o0hwplq.js:3:5)\n \
    \   at test (/tmp/tmp7o0hwplq.js:15:20)\n    at Object.<anonymous> (/tmp/tmp7o0hwplq.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    var new_list = [];\n    for(var i = 0; i < l.length; i++){\n        new_list.push(l[i]\
    \ + 1);\n    }\n    return new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn map(incr, l);\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp55tajzic.js:3\n\treturn map(incr, l);\n\t^\n\nReferenceError: map\
    \ is not defined\n    at incr_list (/tmp/tmp55tajzic.js:3:2)\n    at test (/tmp/tmp55tajzic.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmp55tajzic.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \treturn _.map(l, function(n){return n+1;});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpt2124jsa.js:3\n\treturn _.map(l, function(n){return n+1;});\n\t\
    ^\n\nReferenceError: _ is not defined\n    at incr_list (/tmp/tmpt2124jsa.js:3:2)\n\
    \    at test (/tmp/tmpt2124jsa.js:11:20)\n    at Object.<anonymous> (/tmp/tmpt2124jsa.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar i;\n\tfor(i=0;i<l.length;i++){\n\t\tl[i]++;\n\t}\n\treturn l;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = incr_list;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3, 2, 1]),[4,\
    \ 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3,\
    \ 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar acc = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tacc.push(l[i]+1);\n\t}\n\
    \treturn acc;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    for(i = 0; i < l.length; i++){\n        l[i] += 1;\n    }\n    return l;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    let temp_list = l.split(',');\n    for(let i = 0; i < temp_list.length; i++){\n\
    \        temp_list[i] = parseInt(temp_list[i]) + 1;\n    }\n    return temp_list;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpw7qnl7n6.js:3\n    let temp_list = l.split(',');\n            \
    \          ^\n\nTypeError: l.split is not a function\n    at incr_list (/tmp/tmpw7qnl7n6.js:3:23)\n\
    \    at test (/tmp/tmpw7qnl7n6.js:15:20)\n    at Object.<anonymous> (/tmp/tmpw7qnl7n6.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar i = 0;\n\tvar new_list = [];\n\twhile(i < l.length){\n\t\tnew_list.push(l[i]\
    \ + 1);\n\t\ti = i + 1;\n\t}\n\treturn new_list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    if(l.length==0){\n        return [];\n    }\n    else{\n        return [l[0]+1].concat(incr_list(l.slice(1)));\n\
    \    }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \tvar res = [];\n\tfor(i=0;i<l.length;i++){\n\t\tres.push(l[i]+1);\n\t}\n\treturn\
    \ res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([3,\
    \ 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5, 2, 5, 2, 3, 3, 9, 0, 123]),[6,\
    \ 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var new_list = [];\n  for(var i=0; i<l.length; i++){\n    new_list.push(l[i]+1);\n\
    \  }\n  return new_list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821326
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(x => x + 1, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpy86blw5h.js:3\n    return map(x => x + 1, l);\n    ^\n\nReferenceError:\
    \ map is not defined\n    at incr_list (/tmp/tmpy86blw5h.js:3:5)\n    at test\
    \ (/tmp/tmpy86blw5h.js:11:20)\n    at Object.<anonymous> (/tmp/tmpy86blw5h.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327
- exit_code: 0
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \  var new_list = [];\n  l.forEach(function(el){\n    new_list.push(el+1);\n \
    \ });\n  return new_list;\n}\n\nvar my_list = [1, 2, 3];\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821327
- exit_code: 1
  program: "//Return list with elements incremented by 1.\nfunction incr_list(l){\n\
    \    return map(function(x){return x+1;}, l);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = incr_list;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([3, 2, 1]),[4, 3, 2]);\n  assert.deepEqual(candidate([5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]),[6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdgn4v64b.js:3\n    return map(function(x){return x+1;}, l);\n \
    \   ^\n\nReferenceError: map is not defined\n    at incr_list (/tmp/tmpdgn4v64b.js:3:5)\n\
    \    at test (/tmp/tmpdgn4v64b.js:11:20)\n    at Object.<anonymous> (/tmp/tmpdgn4v64b.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821327

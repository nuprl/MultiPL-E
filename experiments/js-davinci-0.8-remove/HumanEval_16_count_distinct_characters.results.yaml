language: js
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ a=string.toLowerCase();\n    var chars=a.split(\"\");\n    chars=chars.sort();\n\
    \    var distinct=[];\n    var counter=0;\n    for(var i=0;i<chars.length;i++){\n\
    \        if(chars[i]!=chars[i+1]){\n            distinct[counter]=chars[i];\n\
    \            counter++;\n        }\n    }\n    return distinct.length;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ uniqueChars = [...new Set(string.toLowerCase().split(''))];\n    return uniqueChars.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ newString = string.toLowerCase();\n    return new Set(newString).size;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tlet\
    \ char_map = {};\n\tlet len = string.length;\n\tfor(let i = 0; i < len; i++){\n\
    \t\tif(!char_map[string[i]]){\n\t\t\tchar_map[string[i]] = 1;\n\t\t}\n\t}\n\t\
    return Object.keys(char_map).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp56o5q63x.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp56o5q63x.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ char = {};\n\tfor (var i = 0; i < string.length; i++) {\n\t\tchar[string[i].toLowerCase()]\
    \ = true;\n\t}\n\treturn Object.keys(char).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var used_letters = {};\n  var arr = string.split(\"\");\n  for\
    \ (var i = 0; i < arr.length; i++) {\n    if (!used_letters[arr[i].toLowerCase()])\
    \ {\n      used_letters[arr[i].toLowerCase()] = true;\n      count++;\n    }\n\
    \  }\n  return count;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tstring\
    \ = string.toLowerCase();\n\treturn [...new Set(string)].length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ newArr = string.split(\"\").sort();\n\tvar counter = 1;\n\tfor(var i = 0; i\
    \ < newArr.length; i++){\n\t\tif(newArr[i] !== newArr[i+1]){\n\t\t\tcounter +=\
    \ 1;\n\t\t}\n\t}\n\treturn counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprnn26mmr.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprnn26mmr.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  //\
    \ 1. You need to make a string lowercase\n  // 2. You need to get rid of the spaces\n\
    \  // 3. You need to count the number of unique characters, not including the\
    \ spaces\n  // 4. Return the count\n  var result = 0;\n  var str = string.toLowerCase();\n\
    \  var noSpace = str.replace(/\\s/g, '');\n  var uniqueChar = noSpace.split('').sort().join('').match(/(.)\\\
    1*/g);\n  result = uniqueChar.length;\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpwof46kxj.js:11\n  result = uniqueChar.length;\n               \
    \       ^\n\nTypeError: Cannot read properties of null (reading 'length')\n  \
    \  at count_distinct_characters (/tmp/tmpwof46kxj.js:11:23)\n    at test (/tmp/tmpwof46kxj.js:20:20)\n\
    \    at Object.<anonymous> (/tmp/tmpwof46kxj.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ newArr = string.toLowerCase().split('');\n  let answer = newArr.filter(function(item,\
    \ pos){\n    return newArr.indexOf(item) == pos;\n  });\n  return answer.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ newString = [];\n  var count = 0;\n  for(var i = 0; i < string.length; i++){\n\
    \    if(newString.indexOf(string[i]) === -1){\n      newString.push(string[i]);\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpp4qfatai.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4qfatai.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    return string.split('').filter(function(val, index,\
    \ self){\n        return self.indexOf(val) === index;\n    }).length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ distinctChars=0;\n  var arrChar=string.split(\"\");\n  var arrUnique=[];\n \
    \ arrChar.forEach(function(char){\n    if (arrUnique.indexOf(char.toLowerCase())===-1){\n\
    \      arrUnique.push(char.toLowerCase());\n      distinctChars++;\n    }\n  });\n\
    \  return distinctChars;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ Array.from(new Set(string.toLowerCase().split(''))).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var characters = {};\n    string = string.toLowerCase();\n \
    \   for(var i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n\
    \        if(characters[char]){\n            characters[char]++;\n        } else\
    \ {\n            characters[char] = 1;\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ x = string.split('');\n  let y = [];\n  let count = 0;\n  for(let i = 0; i <\
    \ x.length; i++){\n    if(!y.includes(x[i].toLowerCase())){\n      y.push(x[i].toLowerCase());\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //Define\
    \ a dictionary to keep track of the number of each character type\n    var charDict\
    \ = {};\n    for(var i = 0; i < string.length; i++){\n        //Lowercase the\
    \ character since its case is irrelevant\n        var char = string[i].toLowerCase();\n\
    \        //If the character is already in the dictionary, increment its value\n\
    \        if(char in charDict){\n            charDict[char] += 1;\n        }\n\
    \        //Otherwise, the character is new, so add it and set its value to 1\n\
    \        else{\n            charDict[char] = 1;\n        }\n    }\n    //Return\
    \ the length of the dictionary as the count of distinct characters\n    return\
    \ Object.keys(charDict).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ list=string.split(\"\")\n    var arr=new Array();\n    var count=0;\n    list.forEach(letter=>{\n\
    \        if(!arr.includes(letter.toLowerCase())){\n            arr.push(letter.toLowerCase())\n\
    \            count++\n        }\n    })\n    return count\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ distinct = []\n  for (let i = 0; i < string.length; i++) {\n    if (!distinct.includes(string[i].toLowerCase()))\
    \ {\n      distinct.push(string[i].toLowerCase())\n    }\n  }\n  return distinct.length\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  string\
    \ = string.toLowerCase();\n  let distinct_characters = new Set();\n  for (let\
    \ i = 0; i < string.length; i++) {\n    distinct_characters.add(string[i]);\n\
    \  }\n  return distinct_characters.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ lowerCase = string.toLowerCase();\n    let characters = [];\n    let count =\
    \ 0;\n    for(let i = 0; i < lowerCase.length; i++){\n        if(!characters.includes(lowerCase[i])){\n\
    \            characters.push(lowerCase[i]);\n            count++;\n        }\n\
    \    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ characters = \"\";\n    for(var i = 0; i < string.length; i++){\n        if(characters.indexOf(string[i].toLowerCase())\
    \ == -1){\n            characters += string[i].toLowerCase();\n        }\n   \
    \ }\n    return characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ set = new Set(string.toLowerCase());\n\treturn set.size;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ clean = string.toLowerCase().replace(/\\s/g,'');\n  var arr = clean.split('');\n\
    \  var unique = [];\n  var count = 0;\n  for (var i = 0; i < arr.length; i++)\
    \ {\n    if (unique.indexOf(arr[i]) === -1) {\n      unique.push(arr[i]);\n  \
    \    count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpylq6h2sy.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpylq6h2sy.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ result = string.toLowerCase().split('').sort().join('').match(/(.)\\1*/g);\n\
    \treturn result.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmphtjgjfql.js:4\n\treturn result.length;\n\t              ^\n\nTypeError:\
    \ Cannot read properties of null (reading 'length')\n    at count_distinct_characters\
    \ (/tmp/tmphtjgjfql.js:4:16)\n    at test (/tmp/tmphtjgjfql.js:12:20)\n    at\
    \ Object.<anonymous> (/tmp/tmphtjgjfql.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ array = string.split(\"\");\n    var count = 0;\n    array.forEach(function(char){\n\
    \        var present = 0;\n        for(var i = 0; i < array.length; i++){\n  \
    \          if(char.toLowerCase() === array[i].toLowerCase()){\n              \
    \  present++;\n            }\n        }\n        if(present === 1){\n        \
    \    count++;\n        }\n    });\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpm1qrreg8.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm1qrreg8.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ new Set(string.toLowerCase().split('')).size;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ newString = string.toLowerCase();\n\tvar result = {};\n\tvar count = 0;\n\t\
    for (var i = 0; i < newString.length; i++) {\n\t\tif (result[newString[i]] ===\
    \ undefined) {\n\t\t\tresult[newString[i]] = 1;\n\t\t\tcount++;\n\t\t}\n\t}\n\t\
    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\n}\n\
    \nmodule.exports = {\n    count_distinct_characters\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpb7j_x0i_.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpb7j_x0i_.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').reduce(function(a,b){if(a.indexOf(b)<0)a.push(b);return\
    \ a;},[]).length;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //YOUR\
    \ CODE HERE\n    var chars = string.split('');\n    var lower = [];\n    for (var\
    \ i = 0; i < chars.length; i++) {\n        lower.push(chars[i].toLowerCase());\n\
    \    }\n    var unique = lower.filter(function(value, index, self) {\n       \
    \ return self.indexOf(value) === index;\n    });\n    return unique.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ str = string.toLowerCase();\n  var result = [];\n  for (var i = 0; i < str.length;\
    \ i++) {\n    var char = str.charAt(i);\n    if (result.indexOf(char) == -1) {\n\
    \      result.push(char);\n    }\n  }\n  return result.length;\n}\n\ncount_distinct_characters(\"\
    abcdefghijklmnopqrstuvwxyz\");\ncount_distinct_characters(\"abcd efgh\");\ncount_distinct_characters(\"\
    how many distinct characters in this sentence?\");\ncount_distinct_characters(\"\
    how many distinct characters in this sentence?\");\ncount_distinct_characters(\"\
    The quick brown fox jumps over the lazy dog\");\ncount_distinct_characters(\"\
    How many distinct characters in this sentence?\");\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique_chars_arr = [];\n    var arr = string.split('');\n    for(var i = 0;\
    \ i < arr.length; i++){\n        if(!unique_chars_arr.includes(arr[i].toLowerCase()))\n\
    \            unique_chars_arr.push(arr[i].toLowerCase());\n    }\n    return unique_chars_arr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //we\
    \ need to sort first to eliminate duplicates\n    var arr = string.split('').sort();\n\
    \    var obj = {};\n    for(var i = 0; i < arr.length; i++){\n        var count\
    \ = 1;\n        if(arr[i] !== arr[i+1]){\n            obj[arr[i]] = count;\n \
    \       }\n    }\n    return Object.keys(obj).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7bc3rwyu.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7bc3rwyu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ uniqueChars = [];\n  for (let i = 0; i < string.length; i++) {\n    let currentChar\
    \ = string[i].toLowerCase();\n    if (!uniqueChars.includes(currentChar)) {\n\
    \      uniqueChars.push(currentChar);\n    }\n  }\n  return uniqueChars.length;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ _.uniq(string.toLowerCase().split('')).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8ghdfr5z.js:3\n\treturn _.uniq(string.toLowerCase().split('')).length;\n\
    \t^\n\nReferenceError: _ is not defined\n    at count_distinct_characters (/tmp/tmp8ghdfr5z.js:3:2)\n\
    \    at test (/tmp/tmp8ghdfr5z.js:11:20)\n    at Object.<anonymous> (/tmp/tmp8ghdfr5z.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.length - string.toLowerCase().split('').filter(function(item, i, ar){\
    \ return ar.indexOf(item) === i; }).join('').length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpo4kr2ox1.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo4kr2ox1.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ lowerCase = string.toLowerCase();\n\tvar characters = lowerCase.split(\"\");\n\
    \tvar unique = [];\n\tvar counter = 0;\n\tvar tally = 0;\n\tfor (var i = 0; i\
    \ < characters.length; i++) {\n\t\tif(unique.indexOf(characters[i]) == -1){\n\t\
    \t\tunique.push(characters[i]);\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //\
    \ your code here\n    string = string.toLowerCase();\n    var result = string.split('').filter(function(letter,\
    \ index, arr){\n      return arr.indexOf(letter) === index;\n    });\n    return\
    \ result.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    string = string.toLowerCase();\n    while(string.length > 0){\n\
    \        string = string.replace(string[0], \"\");\n        count++;\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n13\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp9tdqf6lt.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9tdqf6lt.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 13,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ _.uniq(_.map(string.split(''),(ch)=>ch.toLowerCase())).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpnwo7t422.js:3\n  return _.uniq(_.map(string.split(''),(ch)=>ch.toLowerCase())).length;\n\
    \  ^\n\nReferenceError: _ is not defined\n    at count_distinct_characters (/tmp/tmpnwo7t422.js:3:3)\n\
    \    at test (/tmp/tmpnwo7t422.js:11:20)\n    at Object.<anonymous> (/tmp/tmpnwo7t422.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ arr = string.split('');\n  var len = arr.length;\n  var output = arr.filter(function(item,index){\n\
    \    return arr.indexOf(item) == index;\n  });\n  return output.length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpgwkznyb1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgwkznyb1.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ chars=[];\n  string=string.toLowerCase();\n  for(var i=0;i<string.length;i++){\n\
    \    if(!chars.includes(string[i])){\n      chars.push(string[i]);\n    }\n  }\n\
    \  return chars.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ upper = string.toUpperCase();\n    return(upper.split(\"\").filter(function(item,\
    \ pos, self) {\n        return self.indexOf(item) == pos;\n    }).length);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ result = {};\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ in result) {\n            result[string[i]] = result[string[i]] + 1;\n     \
    \   } else {\n            result[string[i]] = 1;\n        }\n    }\n    return\
    \ Object.keys(result).length;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp_7ius8dt.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_7ius8dt.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ Array.from(new Set(string.toLowerCase().split(''))).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822382
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ result = [];\n    for(let i = 0; i < string.length; i++){\n        if(!result.includes(string[i].toLowerCase())){\n\
    \            result.push(string[i].toLowerCase());\n        }\n    }\n    return\
    \ result.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ array = string.split(\"\");\n  var result = array.filter(function(elem, pos)\
    \ {\n    return array.indexOf(elem) == pos;\n  });\n  return result.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpjnckmmfp.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjnckmmfp.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ stringToLowerCase = string.toLowerCase();\n    let characters = stringToLowerCase.split('');\n\
    \    let mySet = new Set(characters);\n    return mySet.size;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var count = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr.indexOf(arr[i]) == i){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpu41eyqlj.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu41eyqlj.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ arr = string.split('');\n    let unique = [];\n    for(let i = 0; i < arr.length;\
    \ i++){\n        if(unique.indexOf(arr[i].toLowerCase()) === -1){\n          \
    \  unique.push(arr[i].toLowerCase());\n        }\n    }\n    return unique.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ sum = 0;\n    for(var i = 0; i < string.length; i++){\n        if(string.indexOf(string[i].toLowerCase())\
    \ == i){\n            sum++;\n        }\n    }\n    return sum;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ result = \"\";\n    let count = 0;\n    let char;\n    for(let i = 0; i < string.length;\
    \ i++){\n        char = string.charAt(i);\n        if(result.indexOf(char) < 0){\n\
    \            result += char;\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpf1e5g2dg.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf1e5g2dg.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ obj = {};\n\tvar count = 0;\n\tvar chars = string.split('');\n\tfor(var i =\
    \ 0; i < chars.length; i++){\n\t\tvar char = chars[i].toLowerCase();\n\t\tif(obj[char]\
    \ === undefined){\n\t\t\tobj[char] = 1;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar chars = {};\n\tfor(var i = 0; i < string.length; i++){\n\t\
    \tif(chars[string[i].toLowerCase()] === undefined){\n\t\t\tchars[string[i].toLowerCase()]\
    \ = true;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ newArray = string.toLowerCase().split(\"\");\n    var counter = 0;\n    var\
    \ list = [];\n    var results = 0;\n    for(var i = 0; i < newArray.length; i++){\n\
    \        if(newArray[i] != \" \"){\n            if(list.indexOf(newArray[i]) ==\
    \ -1){\n                counter += 1;\n                list.push(newArray[i]);\n\
    \            }\n        }\n    }\n    return counter;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp1_zwkuun.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1_zwkuun.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ length = string.length;\n    var seenChars = [];\n    var i;\n    for(i = 0;\
    \ i < length; i++){\n        var currentChar = string[i];\n        if(seenChars.indexOf(currentChar)\
    \ === -1){\n            seenChars.push(currentChar);\n        }\n    }\n    var\
    \ distinctCount = seenChars.length;\n    return distinctCount;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp44dn3fj4.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp44dn3fj4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ array = [...new Set(string.toLowerCase())];\n\treturn array.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    var charSet = new Set();\n    for(var i = 0; i\
    \ < string.length; i++){\n        charSet.add(string[i]);\n    }\n    return charSet.size;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ char_array = string.split(\"\");\n\tvar char_dict = {};\n\tchar_array.forEach(function(char){\n\
    \t\tchar_dict[char.toLowerCase()] = true;\n\t});\n\treturn Object.keys(char_dict).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ lowercaseString = string.toLowerCase();\n  var distinctCount = 0;\n  var distinctChars\
    \ = [];\n  for (var i = 0; i < lowercaseString.length; i++) {\n    if (distinctChars.indexOf(lowercaseString[i])\
    \ === -1) {\n      distinctChars.push(lowercaseString[i]);\n      distinctCount\
    \ += 1;\n    }\n  }\n  return distinctCount;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ result = {};\n    for (var i = 0; i < string.length; i++) {\n        var character\
    \ = string.charAt(i);\n        if (result[character]) {\n            result[character]++;\n\
    \        } else {\n            result[character] = 1;\n        }\n    }\n    return\
    \ Object.keys(result).length;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpilkacwls.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpilkacwls.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tstring\
    \ = string.toLowerCase();\n\tvar unique = new Set(string);\n\treturn unique.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ chars = string.toLowerCase().split('');\n    return [...new Set(chars)].length;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string=string.toLowerCase();\n\
    \    var set=new Set();\n    for(var i=0;i<string.length;i++){\n        set.add(string[i]);\n\
    \    }\n    return set.size;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ used = {};\n    var distinct = 0;\n    for (var i = 0; i < string.length; i++)\
    \ {\n        var l = string.charAt(i).toLowerCase();\n        if (used[l] == undefined)\
    \ {\n            used[l] = l;\n            distinct++;\n        }\n    }\n   \
    \ return distinct;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(item, i, ar){\n\t\treturn ar.indexOf(item)\
    \ === i;\n\t}).length;\n}\n\ncount_distinct_characters('abdac');\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.length - string.toLowerCase().split('').filter(function(char, i, string)\
    \ {\n        return string.indexOf(char) == i;\n    }).join('').length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmplkg0iygz.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplkg0iygz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ count = 0;\n  var strArr = string.split(\"\");\n  strArr.sort();\n  for(var\
    \ i = 0; i < strArr.length; i++){\n    if(strArr[i] !== strArr[i-1]){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqet59hl2.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqet59hl2.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ distinct_chars = new Set();\n  for (let i = 0; i < string.length; i++) {\n \
    \   if ( !distinct_chars.has(string[i].toLowerCase()) ) {\n      distinct_chars.add(string[i].toLowerCase());\n\
    \    }\n  }\n  return distinct_chars.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tlet\
    \ distinct_chars = [];\n\t\n\tlet lower_case_string = string.toLowerCase();\n\t\
    let chars = lower_case_string.split('');\n\t\n\tfor(let i = 0; i < chars.length;\
    \ i++){\n\t\tif(chars[i] != ' ' && !(chars[i] in distinct_chars)){\n\t\t\tdistinct_chars[chars[i]]\
    \ = 1;\n\t\t}\n\t}\n\t\n\treturn Object.keys(distinct_chars).length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp71qua4ci.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp71qua4ci.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ output = {};\n  var string = string.toLowerCase();\n  for (var i = 0; i < string.length;\
    \ i++) {\n    if (output[string[i]]){\n      output[string[i]]++;\n    }\n   \
    \ else {\n      output[string[i]] = 1;\n    }\n  }\n  return output;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{}\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp7rq1epws.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7rq1epws.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: {},\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(x,i,a){\n\t\treturn a.indexOf(x)\
    \ == i;\n\t}).length;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  string\
    \ = string.toLowerCase().split('').sort();\n  let count = 1;\n  for(let i = 0;\
    \ i < string.length - 1; i++){\n    if(string[i] !== string[i + 1]){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp1kt11gpj.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1kt11gpj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    var distinct = \"\";\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(distinct.indexOf(string[i]) == -1){\n            distinct\
    \ += string[i];\n        }\n    }\n    return distinct.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var arr = [];\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(arr.indexOf(string[i]) === -1){\n            arr.push(string[i]);\n\
    \        }\n    }\n    return arr.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ res = '';\n    for(var i = 0; i < string.length; i++){\n        if(res.indexOf(string[i].toLowerCase())\
    \ < 0 && res.indexOf(string[i].toUpperCase()) < 0){\n            res += string[i];\n\
    \        }\n    }\n    return res.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ [...new Set(string.toLowerCase())].length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ characters = string.toLowerCase().split('');\n  var counts = {};\n  characters.forEach(function(char){\n\
    \    if (counts[char]) {\n      counts[char]++;\n    } else {\n      counts[char]\
    \ = 1;\n    }\n  });\n  return Object.keys(counts).length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ array = string.split(\"\");\n    var count = 0;\n    for(var i = 0; i < array.length;\
    \ i++){\n        var add = true;\n        for(var j = 0; j < i; j++){\n      \
    \      if(array[i].toLowerCase() == array[j].toLowerCase()){\n               \
    \ add = false;\n            }\n        }\n        if(add){\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tif(string.length\
    \ == 0){\n\t\treturn 0;\n\t}\n\tvar low = string.toLowerCase();\n\tvar dict =\
    \ {};\n\tfor(var i = 0; i < low.length; i++){\n\t\tdict[low[i]] = 1;\n\t}\n\t\
    return Object.keys(dict).length;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ array = string.split(\"\").sort();\n    var count = 0;\n    for(var i = 0; i\
    \ < array.length; i++){\n        if(array[i] != array[i+1]){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpg0h0mw7g.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpg0h0mw7g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ characters = [];\n    for(let i = 0; i < string.length; i++){\n        if(characters.indexOf(string[i].toLowerCase())\
    \ == -1){\n            characters.push(string[i].toLowerCase());\n        }\n\
    \    }\n    return characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  //create\
    \ a hash to store the number of distinct characters\n  var distinct_hash = {};\n\
    \  //iterate over the string, if the character is not in the hash, set the character\
    \ to 1\n  //else, increment the count\n  for(var i = 0; i < string.length; i++){\n\
    \    var char = string[i].toLowerCase();\n    if(!distinct_hash[char]){\n    \
    \  distinct_hash[char] = 1;\n    }\n    else{\n      distinct_hash[char]++;\n\
    \    }\n  }\n  return Object.keys(distinct_hash).length;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ char_array = Array.from(string);\n    let distinct_char_array = [...new Set(char_array)];\n\
    \    return distinct_char_array.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7jm7tynb.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7jm7tynb.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ chars = string.toLowerCase().split('');\n    const charSet = new Set(chars);\n\
    \    return charSet.size;\n}\n\ncount_distinct_characters('asdfasdf') //4\n\n\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    arr = arr.map(function(char){\n        return char.toLowerCase();\n\
    \    });\n    return new Set(arr).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ \"\";\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp_w046j7j.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_w046j7j.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    string = string.toLowerCase();\n    for(var i = 0; i < string.length;\
    \ i++){\n        if(string.indexOf(string[i]) == i){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ number = 0;\n\tvar string_arr = string.split(\"\");\n\tvar new_arr = [];\n\t\
    var flag = false;\n\tfor(var i = 0; i < string_arr.length; i++){\n\t\tfor(var\
    \ j = 0; j < new_arr.length; j++){\n\t\t\tif(string_arr[i].toLowerCase() == new_arr[j].toLowerCase()){\n\
    \t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\tif(flag == false){\n\t\t\tnew_arr.push(string_arr[i]);\n\
    \t\t\tnumber++;\n\t\t}\n\t\tflag = false;\n\t}\n\treturn number;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ seen = {};\n    var count = 0;\n    for (var i = 0; i < string.length; i++)\
    \ {\n        if (!seen[string[i].toLowerCase()]) {\n            seen[string[i].toLowerCase()]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ charMap = {};\n  let characters = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    const lowerCaseLetter = string[i].toLowerCase();\n    if (!charMap[lowerCaseLetter])\
    \ {\n      charMap[lowerCaseLetter] = 1;\n      characters.push(lowerCaseLetter);\n\
    \    }\n  }\n  return characters.length;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar seen = {};\n\tfor (var i = 0; i < string.length; i++) {\n\t\
    \tvar letter = string[i].toLowerCase();\n\t\tif (!seen[letter]) {\n\t\t\tseen[letter]\
    \ = true;\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //\
    \ convert the string to lowercase\n    string = string.toLowerCase();\n    //\
    \ string array converted\n    var characters = string.split(\"\");\n    //distinct\
    \ characters count\n    var count = 0;\n    //check each character if it's in\
    \ the unique array \n    for(var i = 0; i < characters.length; i++){\n       \
    \ if(unique_characters.indexOf(characters[i]) == -1){\n            unique_characters.push(characters[i]);\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg_7j7spb.js:11\n        if(unique_characters.indexOf(characters[i])\
    \ == -1){\n        ^\n\nReferenceError: unique_characters is not defined\n   \
    \ at count_distinct_characters (/tmp/tmpg_7j7spb.js:11:9)\n    at test (/tmp/tmpg_7j7spb.js:25:20)\n\
    \    at Object.<anonymous> (/tmp/tmpg_7j7spb.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinctChars = 0;\n    var duplicates = {};\n    for (var i = 0; i < string.length;\
    \ i++) {\n        var currentChar = string[i].toLowerCase();\n        if (duplicates[currentChar]\
    \ === undefined) {\n            distinctChars++;\n            duplicates[currentChar]\
    \ = 1;\n        }\n    }\n    return distinctChars;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ chars = new Set();\n    for (let i = 0; i < string.length; i++) {\n        chars.add(string[i].toLowerCase());\n\
    \    }\n    return chars.size;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ result = 0;\n    string = string.toLowerCase();\n    var alpha = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for(var i = 0; i < alpha.length; i++){\n        if(string.indexOf(alpha[i])\
    \ !== -1){\n            result++;\n        }\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp7r2jaqbs.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7r2jaqbs.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').sort().join('').match(/(.)\\1*/g).length;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp86_ha4s3.js:3\n\treturn string.toLowerCase().split('').sort().join('').match(/(.)\\\
    1*/g).length;\n\t                                                            \
    \          ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at count_distinct_characters (/tmp/tmp86_ha4s3.js:3:72)\n    at test (/tmp/tmp86_ha4s3.js:10:20)\n\
    \    at Object.<anonymous> (/tmp/tmp86_ha4s3.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.length - string.toLowerCase().split('').filter(function(currentValue,\
    \ index, array){\n        return array.indexOf(currentValue) == index;\n    }).join('').length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpv1vo_e_p.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv1vo_e_p.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ count = 0;\n  let characters = string.toLowerCase().split('');\n  let charMap\
    \ = {};\n  for (let i = 0; i < characters.length; i++) {\n    if (!charMap[characters[i]])\
    \ {\n      charMap[characters[i]] = 1;\n      count++;\n    }\n  }\n  return count;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ num=0;\n    for(let i=0;i<string.length;i++){\n        if(!string.slice(i+1).includes(string[i])&&!string.slice(0,i).includes(string[i])){\n\
    \            num+=1;\n        }\n    }\n    return num;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp254ntsdb.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp254ntsdb.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ result = \"\";\n\tfor (var i = 0; i < string.length; i++) {\n\t\tvar stringUpper\
    \ = string[i].toUpperCase();\n\t\tif (result.indexOf(stringUpper) == -1) {\n\t\
    \t\tresult += stringUpper;\n\t\t}\n\t}\n\treturn result.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tstring\
    \ = string.toLowerCase();\n\tvar count = string.length;\n\tfor(var i = 0; i <\
    \ string.length; i++){\n\t\tfor(var j = i + 1; j < string.length; j++){\n\t\t\t\
    if(string[i] == string[j]){\n\t\t\t\tcount--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ lowercase_string = string.toLowerCase();\n    var result = '';\n    for (var\
    \ i = 0; i < lowercase_string.length; i++) {\n        if (result.indexOf(lowercase_string[i])\
    \ === -1) {\n            result += lowercase_string[i];\n        }\n    }\n  \
    \  return result.length;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.length - string.toLowerCase().split('').filter(function(item, i, ar){\
    \ return ar.indexOf(item) === i; }).join('').length;\n}\n\ncount_distinct_characters(\"\
    daDa\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4cakn8b3.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4cakn8b3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\t//initialize\
    \ count to 0\n\tvar count = 0;\n\t//create an array from the string\n\tvar chars\
    \ = string.split(\"\");\n\tvar uc = \"\";\n\t//iterate through each char\n\tfor(i\
    \ = 0; i < chars.length; i++){\n\t\t//make character uppercase\n\t\tvar ch = chars[i].toUpperCase();\n\
    \t\t//check if unique character string contains uppercase version of the character,\
    \ if not\n\t\tif(uc.indexOf(ch) < 0){\n\t\t\t//add uppercase version of character\
    \ to unique characters string\n\t\t\tuc += ch;\n\t\t\t//add 1 to count\n\t\t\t\
    count++;\n\t\t}\n\t}\n\t//return count\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ distinctCharacters = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        distinctCharacters.add(string[i].toLowerCase());\n    }\n    return\
    \ distinctCharacters.size;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //remove\
    \ space and change to lower case\n    var str = string.toLowerCase().replace(/\\\
    s/g, '');\n    var unique = '';\n    for (var i = 0; i < str.length; i++) {\n\
    \        if (unique.indexOf(str[i]) == -1) {\n            unique += str[i];\n\
    \        }\n    }\n    return unique.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqrueellq.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqrueellq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpp0d89zx9.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp0d89zx9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ [...new Set(string.toLowerCase())].length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ arr = [];\n    for(let i=0; i<string.length; i++){\n        if(!arr.includes(string[i].toLowerCase())){\n\
    \            arr.push(string[i].toLowerCase());\n        }\n    }\n    return\
    \ arr.length;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpp0d89zx9.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp0d89zx9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //lowercase\
    \ the string and convert it to an array\n    let arr = string.toLowerCase().split('');\n\
    \    //using set, the array will only contain distinct characters\n    let distinct\
    \ = new Set(arr);\n    //return size of set\n    return distinct.size;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ arr = string.split('');\n  return arr.filter((item, pos) => {\n    return arr.indexOf(item)\
    \ == pos;\n  }).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxs1a5xfh.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxs1a5xfh.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').filter(function(item, pos, self) {\n        return\
    \ self.indexOf(item) == pos;\n    }).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ length = string.length;\n    var array = [];\n    for(var i = 0; i < length;\
    \ i++){\n        if(array.indexOf(string[i].toLowerCase()) < 0){\n           \
    \ array.push(string[i].toLowerCase());\n        }\n    }\n    return array.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ characters = string.toLowerCase().split('');\n    return [...new Set(characters)].length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ lower = string.toLowerCase().split('').sort();\n\tvar count = 0;\n\tvar temp\
    \ = lower[0];\n\tfor(var i = 0; i < lower.length; i++){\n\t\tif(lower[i] != temp){\n\
    \t\t\tcount++;\n\t\t\ttemp = lower[i];\n\t\t}\n\t}\n\treturn count + 1;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpboozxd_1.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpboozxd_1.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ characters = string.split(\"\");\n\tvar uniqueCharacters = new Set(characters);\n\
    \treturn uniqueCharacters.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpzs8905qd.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzs8905qd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(value, index, self){\n\t\treturn\
    \ self.indexOf(value) === index;\n\t}).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ count = 0;\n\tvar found = false;\n\tvar arr = [];\n\t\n\tfor(var i = 0; i <\
    \ string.length; i++){\n\t\tif(i == 0){\n\t\t\tarr.push(string[i]);\n\t\t\tcount++;\n\
    \t\t}else{\n\t\t\tvar check = string[i].toLowerCase();\n\t\t\tfor(var j = 0; j\
    \ < arr.length; j++){\n\t\t\t\tif(check == arr[j].toLowerCase()){\n\t\t\t\t\t\
    found = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!found){\n\t\t\t\
    \tarr.push(string[i]);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tfound = false;\n\t\t\
    }\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ s = string.toLowerCase();\n    let output = 0;\n    let str = s.split('');\n\
    \    for(var i = 0; i < str.length; i++){\n        if(str.indexOf(str[i]) ===\
    \ i){\n            output++;\n        }\n    }\n    return output;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\t\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpwbcde7tx.js:12:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpwbcde7tx.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ result = 0;\n    var distinct = '';\n    string = string.toLowerCase();\n  \
    \  for(var i = 0; i < string.length; i++){\n        if(distinct.indexOf(string[i])\
    \ == -1){\n            distinct += string[i];\n            result++;\n       \
    \ }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ obj = {};\n    for(var i = 0; i < string.length; i++){\n        obj[string[i].toLowerCase()]\
    \ = true;\n    }\n    return Object.keys(obj).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ arr = string.split('');\n    const lowArr = arr.map(x => x.toLowerCase());\n\
    \    const unique = [...new Set(lowArr)];\n    return unique.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ unique = new Set(string.toLowerCase().split(''));\n    return unique.size;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ str = string.toLowerCase();\n\tvar arr = str.split(\"\");\n\tvar set = new Set(arr);\n\
    \treturn set.size;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    let counter = 0;\n    for(let i = 0; i < string.length;\
    \ i++){\n        let s = string.charAt(i);\n        if(string.indexOf(s) == i){\n\
    \            counter++;\n        }\n    }\n    return counter;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.split('').map(x => x.toLowerCase()).filter((x, index, self) => self.indexOf(x)\
    \ === index).length;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ stringArr = string.split('');\n  let count = 0;\n  let chars = [];\n  let charCheck;\n\
    \  for(let i = 0; i < stringArr.length; i++){\n    charCheck = stringArr[i].toLowerCase();\n\
    \    if(chars.indexOf(charCheck) === -1){\n      chars.push(charCheck);\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ map = {};\n\tfor(var i = 0; i < string.length; i++){\n\t\tvar key = string[i].toLowerCase();\n\
    \t\tif(!map[key]){\n\t\t\tmap[key] = true;\n\t\t}\n\t}\n\tvar count = 0;\n\tfor(var\
    \ key in map){\n\t\tcount++;\n\t}\n\treturn count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ string = string.toLowerCase();\n\treturn string.split(\"\").reduce(function(distinct,\
    \ char){\n\t\tif(distinct.indexOf(char) === -1){\n\t\t\tdistinct.push(char);\n\
    \t\t}\n\t\treturn distinct;\n\t}, []).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ str = string.toLowerCase().split('');\n    var charArray = []\n    for(var i\
    \ = 0; i < str.length; i++){\n        if(charArray.indexOf(str[i]) === -1){\n\
    \            charArray.push(str[i]);\n        }\n    }\n    return charArray.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(value, index, self){\n\t\treturn\
    \ self.indexOf(value) === index;\n\t}).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ result = new Set(string.toLowerCase().split('')).size;\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ new_str = string.toLowerCase();\n  var arr = new_str.split(\"\");\n  var count\
    \ = 0;\n  var holder = [];\n  for(var i = 0; i < arr.length; i++){\n    if(holder.indexOf(arr[i])\
    \ === -1){\n      holder.push(arr[i]);\n      count++;\n    }\n  }\n  return count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ lowercase_string = string.toLowerCase();\n\tvar characters = lowercase_string.split(\"\
    \");\n\tvar distinct_characters = {};\n\tvar distinct_characters_count = 0;\n\t\
    for (var i = 0; i < characters.length; i++) {\n\t\tif (!distinct_characters[characters[i]])\
    \ {\n\t\t\tdistinct_characters[characters[i]] = true;\n\t\t\tdistinct_characters_count++;\n\
    \t\t}\n\t}\n\treturn distinct_characters_count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ counter = 0;\n\tstring = string.toLowerCase();\n\tstring = string.split(\"\"\
    );\n\tvar arr = [];\n\tfor(var i = 0; i < string.length; i++){\n\t\tif(arr.indexOf(string[i])\
    \ === -1){\n\t\t\tarr.push(string[i]);\n\t\t\tcounter += 1;\n\t\t}\n\t}\n\treturn\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ [...new Set(string.toLowerCase())].length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ unique = \"\";\n    for (var i = 0; i < string.length; i++) {\n        if (unique.toLowerCase().indexOf(string[i].toLowerCase())\
    \ == -1) {\n            unique += string[i];\n        }\n    }\n    return unique.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ string.toLowerCase().split('').reduce(function(acc, char){\n    if (acc.indexOf(char)\
    \ < 0) {\n      acc.push(char);\n    }\n    return acc;\n  }, []).length;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').filter(function(character, index, string){\n\
    \        return string.indexOf(character) === index;\n    }).length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(item, pos, self) {\n\t    return\
    \ self.indexOf(item) == pos;\n\t}).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  if(string.length\
    \ === 0){\n    return 0;\n  }\n  string = string.toLowerCase();\n  var chars =\
    \ {};\n  for(var i = 0; i < string.length; i++){\n    chars[string[i]] = true;\n\
    \  }\n  return Object.keys(chars).length;\n}\n\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ arr = string.split('');\n  for(var i = 0; i < arr.length; i++){\n    for(var\
    \ j = i + 1; j < arr.length; j++){\n      if(arr[i].toLowerCase() === arr[j].toLowerCase()){\n\
    \        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr.length;\n\
    }\n\ncount_distinct_characters('abcd');\ncount_distinct_characters('abcdabcd');\n\
    count_distinct_characters('abcddefghijklmnaaa');\ncount_distinct_characters('abcdabcdabcdabcdabcdddddddd');\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ string.split('').map(x => x.toLowerCase()).filter((item, index, array) => array.indexOf(item)\
    \ === index).length;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var characters = string.toLowerCase().split('');\n    var usedCharacters\
    \ = [];\n    for(var i = 0; i < characters.length; i++){\n        if(usedCharacters.indexOf(characters[i])\
    \ === -1){\n            usedCharacters.push(characters[i]);\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ unique_characters = [];\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (unique_characters.indexOf(string[i].toLowerCase()) === -1) {\n      unique_characters.push(string[i].toLowerCase());\n\
    \    }\n  }\n  return unique_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ _.uniq(_.map(string.split(''), (char) => {\n        return char.toLowerCase();\n\
    \    })).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprydtnkrs.js:3\n    return _.uniq(_.map(string.split(''), (char)\
    \ => {\n    ^\n\nReferenceError: _ is not defined\n    at count_distinct_characters\
    \ (/tmp/tmprydtnkrs.js:3:5)\n    at test (/tmp/tmprydtnkrs.js:13:20)\n    at Object.<anonymous>\
    \ (/tmp/tmprydtnkrs.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ result = new Set();\n    for (let i=0; i<string.length; i++){\n        result.add(string[i].toLowerCase());\n\
    \    }\n    return result.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpp0d89zx9.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp0d89zx9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ count = 0;\n    var unique = \"\";\n    var lower_case = string.toLowerCase();\n\
    \    for(var i = 0; i < lower_case.length; i++){\n        if(unique.indexOf(lower_case[i])\
    \ == -1){\n            unique += lower_case[i];\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //put\
    \ all the characters into an array\n    var characters = string.split(\"\");\n\
    \    //remove duplicates\n    var distinct_characters = characters.filter(function(element,\
    \ index, array){\n        return array.indexOf(element) == index;\n    });\n \
    \   //return the size of the array\n    return distinct_characters.length;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqsjf689j.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqsjf689j.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ distinct_characters = \"\";\n    for(let i = 0; i < string.length; i++){\n \
    \       if(distinct_characters.indexOf(string[i].toLowerCase()) === -1){\n   \
    \         distinct_characters += string[i].toLowerCase();\n        }\n    }\n\
    \    return distinct_characters.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    let\
    \ counts = [];\n    for (let i = 0; i < string.length; i++) {\n        let count\
    \ = 0;\n        for (let j = 0; j < string.length; j++) {\n            if (string[i].toLowerCase()\
    \ === string[j].toLowerCase()) {\n                count++;\n            }\n  \
    \      }\n        if (counts.indexOf(count) === -1) {\n            counts.push(count);\n\
    \        }\n    }\n    return counts.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqv0fe9ku.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqv0fe9ku.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    if\
    \ (string.length === 0) {\n        return 0;\n    }\n    let stringArray = string.split('');\n\
    \    let uniqueArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n\
    \        let uniqueCount = uniqueArray.filter(x => x === stringArray[i].toLowerCase()).length;\n\
    \        if (uniqueCount === 0) {\n            uniqueArray.push(stringArray[i].toLowerCase());\n\
    \        }\n    }\n    return uniqueArray.length;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var obj = {};\n    for(var i = 0; i < string.length;\
    \ i++){\n        obj[string[i]] = (obj[string[i]] || 0) + 1;\n    }\n    return\
    \ Object.keys(obj).length;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ arr = string.split('');\n    var dict = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var value = arr[i].toLowerCase();\n        if(dict.indexOf(value)\
    \ === -1){\n            dict.push(value);\n        }\n    }\n    return dict.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\t//\
    \ Since there are only 26 letters in the alphabet, we can store the counts\n\t\
    // for each letter in an array of size 26.\n\tlet count = new Array(26).fill(0);\n\
    \t// Iterate through the string and increment the count\n\t// at the index of\
    \ the given character\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet index\
    \ = string.charCodeAt(i) - \"a\".charCodeAt(0);\n\t\tif (index < 0 || index >\
    \ 25) {\n\t\t\tindex = string.charCodeAt(i) - \"A\".charCodeAt(0);\n\t\t}\n\t\t\
    count[index]++;\n\t}\n\t// Count the distinct letters in the string\n\treturn\
    \ count.filter(c => c > 0).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpxxzi5wv5.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxxzi5wv5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //We\
    \ only want to count the distinct characters, so let's convert the string to an\
    \ array and sort it\n    var stringArr = string.split('').sort();\n    //We can\
    \ use a counter and the previous element to identify if the current element is\
    \ unique\n    var unique = 0;\n    var previous = \"\";\n    //We need to make\
    \ sure that we don't count the first element twice (i.e. if we have a 1 character\
    \ string)\n    var first = true;\n    for(var i = 0; i < stringArr.length; i++){\n\
    \        //If the first element is being traversed, only add 1 to the counter\n\
    \        if(first){\n            unique += 1;\n            first = false;\n  \
    \      }\n        //if the previous element does not equal the current element,\
    \ we have a unique element\n        if(previous != stringArr[i]){\n          \
    \  unique += 1;\n        }\n        //update the previous element\n        previous\
    \ = stringArr[i];\n    }\n    return unique;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpom8ya49r.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpom8ya49r.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.toLowerCase().split('').filter(function(elem, index, self){\n       \
    \ return index == self.indexOf(elem);\n    }).length;\n}\ncount_distinct_characters('abcd');//4\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ uniqueChars = new Set();\n  let caseInsensitiveString = string.toLowerCase();\n\
    \  for (let i = 0; i < caseInsensitiveString.length; i++) {\n    uniqueChars.add(caseInsensitiveString[i]);\n\
    \  }\n  return uniqueChars.size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\t//TODO:\
    \ implement me\n\tvar count = 0;\n\tvar obj = {};\n\tfor(var i = 0; i < string.length;\
    \ i++){\n\t\tif(!obj[string[i]]){\n\t\t\tobj[string[i]] = 1;\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\n\ncount_distinct_characters(\"aAaBbBB\"); //should\
    \ return 3\ncount_distinct_characters(\"abcde\"); //should return 5\ncount_distinct_characters(\"\
    \"); //should return 0\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp9dhw4hkk.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9dhw4hkk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tlet\
    \ chars = {};\n\tfor (let i = 0; i < string.length; i++) {\n\t\tlet char = string[i].toLowerCase();\n\
    \t\tif (!chars[char]) {\n\t\t\tchars[char] = 1;\n\t\t}\n\t}\n\treturn Object.keys(chars).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //\
    \ your code here\n    let n=string.toLowerCase().split('').sort().join('');\n\
    \    let letters=n.split('');\n    //console.log(letters);\n    let count=0;\n\
    \    for(let i=0;i<letters.length;i++){\n        if(letters[i]!==letters[i+1]){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    var count = 0;\n    var arr = {};\n    for(var\
    \ i = 0; i < string.length; i++){\n        if(arr[string[i]] === undefined){\n\
    \            arr[string[i]] = 1;\n            count++;\n        }\n    }\n   \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\treturn\
    \ string.toLowerCase().split('').filter(function(letter, index, array){\n\t\t\
    return array.indexOf(letter) == index;\n\t}).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ distinct_characters = [];\n\tfor (var i = 0; i < string.length; i++) {\n\t\t\
    var character = string[i].toLowerCase();\n\t\tif (distinct_characters.indexOf(character)\
    \ == -1) {\n\t\t\tdistinct_characters.push(character);\n\t\t}\n\t}\n\treturn distinct_characters.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpp0d89zx9.js:11:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp0d89zx9.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ str = string.toLowerCase();\n\tvar dict = {};\n\tvar num = 0;\n\tfor (var i\
    \ = 0; i < str.length; i++) {\n\t\tif (dict[str[i]] === undefined) {\n\t\t\tdict[str[i]]\
    \ = true;\n\t\t\tnum++;\n\t\t}\n\t}\n\treturn num;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ string.split('').filter(function(val, i, arr){\n    return arr.indexOf(val)\
    \ === i;\n  }).length;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n9\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpgno1yyye.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgno1yyye.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 9,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  let\
    \ charDict = {};\n  let count = 0;\n  for (let i = 0; i < string.length; i++)\
    \ {\n    if (!charDict[string[i].toLowerCase()]) {\n      charDict[string[i].toLowerCase()]\
    \ = true;\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ distinctCharacters = 0;\n\tvar charCount = 0;\n\tvar chars = string.split(\"\
    \");\n\tfor(var i = 0; i < chars.length; i++){\n\t\tvar character = chars[i];\n\
    \t\tfor(var j = 0; j < chars.length; j++){\n\t\t\tif(chars[j].toLowerCase() ===\
    \ character.toLowerCase()){\n\t\t\t\tcharCount++;\n\t\t\t}\n\t\t}\n\t\tif(charCount\
    \ == 1){\n\t\t\tdistinctCharacters++;\n\t\t}\n\t\tcharCount = 0;\n\t}\n\treturn\
    \ distinctCharacters;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmp4jaz6o9c.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4jaz6o9c.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ chars = string.toLowerCase().split('');\n    var distinct_chars = chars.filter(function(char,\
    \ index){\n        return chars.indexOf(char) == index;\n    });\n    return distinct_chars.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ uniqueCharacters = \"\";\n  for (var i = 0; i < string.length; i++) {\n    if\
    \ (uniqueCharacters.toLowerCase().indexOf(string[i].toLowerCase()) == -1) {\n\
    \      uniqueCharacters += string[i];\n    }\n  }\n  return uniqueCharacters.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  string\
    \ = string.toLowerCase();\n  var arr = string.split(\"\");\n  arr = arr.filter(function(elem,\
    \ pos) {\n      return arr.indexOf(elem) == pos;\n  });\n  return arr.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    string\
    \ = string.toLowerCase();\n    var arr = [];\n    var count = 0;\n    for(var\
    \ i = 0; i < string.length; i++){\n        var char = string.charAt(i);\n    \
    \    if(!arr.includes(char)){\n            arr.push(char);\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  string\
    \ = string.toLowerCase();\n  var data = {};\n  for(var i = 0; i < string.length;\
    \ i++){\n    if(!data[string[i]]){\n      data[string[i]] = 1;\n    }\n  }\n \
    \ return Object.keys(data).length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  string\
    \ = string.toLowerCase();\n  let set = new Set();\n  for(let i = 0; i < string.length;\
    \ i++){\n    set.add(string[i]);\n  }\n  return set.size;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    const\
    \ seen = new Set();\n    for (let i = 0; i < string.length; i++) {\n        seen.add(string[i].toLowerCase());\n\
    \    }\n    return seen.size;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ [...new Set(string.toLowerCase())].length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\ncount_distinct_characters('abacddbec');\n\
    count_distinct_characters('AbACCcAcB');\ncount_distinct_characters('12345654321');\n\
    count_distinct_characters('aaaaaaa');\ncount_distinct_characters('AaBbCcDd');\n\
    count_distinct_characters('123444444444444444444');\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ chars = string.toLowerCase().split('');\n\tvar unique_chars = chars.filter(function(char,\
    \ index){\n\t\treturn chars.indexOf(char) == index;\n\t});\n\treturn unique_chars.length;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ string.length - string.toLowerCase().split('').sort().join('').replace(/(.)\\\
    1+/g, '$1').length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n5\n    at test (/tmp/tmpqmsrg9pq.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqmsrg9pq.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 5,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ newArray = [];\n  for (var i = 0; i < string.length; i++) {\n    if (newArray.indexOf(string[i].toLowerCase())\
    \ === -1) {\n      newArray.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ newArray.length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ distinct = new Array();\n    for(i = 0; i < string.length; i++){\n        if(!contains(distinct,\
    \ string[i]))\n            distinct.push(string[i]);\n    }\n    return distinct.length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = count_distinct_characters;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abcde\"),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp91qko5rl.js:5\n        if(!contains(distinct, string[i]))\n   \
    \     ^\n\nReferenceError: contains is not defined\n    at count_distinct_characters\
    \ (/tmp/tmp91qko5rl.js:5:9)\n    at test (/tmp/tmp91qko5rl.js:17:20)\n    at Object.<anonymous>\
    \ (/tmp/tmp91qko5rl.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tlet\
    \ seen = new Set();\n\tfor (let char of string) {\n\t\tseen.add(char.toLowerCase());\n\
    \t}\n\treturn seen.size;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase();\n    var newStr = string.split(\"\").sort().join(\"\
    \");\n    var count = 1;\n    for(var i = 0; i < newStr.length; i++){\n      \
    \  if(newStr[i] != newStr[i+1]){\n            count++;\n        }\n    }\n   \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpl21iqtiz.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl21iqtiz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n\tvar\
    \ counter = 0;\n\tvar tempStr = string.toLowerCase();\n\tvar letters = [];\n\t\
    \n\tfor(var i = 0; i < tempStr.length; i++){\n\t\tif(letters.indexOf(tempStr[i])\
    \ === -1){\n\t\t\tletters.push(tempStr[i]);\n\t\t\tcounter++;\n\t\t}\n\t}\n\t\
    return counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    //1.\
    \ creating an array of the string\n    let arrayOfString = string.split(\"\");\n\
    \    //2. creating an empty array to store the distinct characters\n    let distinctCharacters\
    \ = [];\n    //3. iterating through the array of string to find distinct characters\n\
    \    for(let i = 0; i < arrayOfString.length; i++){\n        //3.1 declaring a\
    \ boolean to store whether the character is a distinct character or not\n    \
    \    let distinct = true;\n        //3.2 using a for loop to check whether the\
    \ character is distinct or not\n        for(let j = 0; j < distinctCharacters.length;\
    \ j++){\n            //3.2.1 if the character is not distinct then changing the\
    \ boolean to false\n            if(arrayOfString[i].toLowerCase() === distinctCharacters[j].toLowerCase()){\n\
    \                distinct = false;\n            }\n        }\n        //3.3 if\
    \ the character is distinct then pushing it to the distinctCharacters array\n\
    \        if(distinct){\n            distinctCharacters.push(arrayOfString[i]);\n\
    \        }\n    }\n    //4. returning the length of the distinctCharacters array\n\
    \    return distinctCharacters.length;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  var\
    \ character_set = {};\n  var result = 0;\n  string.split('').forEach(function(character){\n\
    \    if (!character_set[character.toLowerCase()]){\n      character_set[character.toLowerCase()]\
    \ = 1;\n      result += 1;\n    }\n  });\n  return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = count_distinct_characters;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abcde\"\
    ),5);\n  assert.deepEqual(candidate(\"abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"\
    aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"Jerry jERRY JeRRRY\"),5);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    return\
    \ new Set(string.toLowerCase().split('')).size;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822383
- exit_code: 0
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n  return\
    \ string.toLowerCase().split('').reduce(function(prev, curr, index, arr){\n  \
    \  if(prev.indexOf(curr) === -1){\n      prev.push(curr);\n    }\n    return prev;\n\
    \  }, []).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822384
- exit_code: 1
  program: "//Given a string, find out how many distinct characters (regardless of\
    \ case) does it consist of\nfunction count_distinct_characters(string){\n    var\
    \ string = string.toLowerCase().split('').sort().join('').match(/(.)\\1*/g);\n\
    \    var count = 0;\n    for (var i=0; i<string.length; i++){\n        count++;\n\
    \    }\n    return count;\n}\n\ncount_distinct_characters(\"abcabcabcdefab c a\
    \ oo ija ;a ;skmdals kn\");\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
    abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
    Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpj93iha2e.js:5\n    for (var i=0; i<string.length; i++){\n     \
    \                      ^\n\nTypeError: Cannot read properties of null (reading\
    \ 'length')\n    at count_distinct_characters (/tmp/tmpj93iha2e.js:5:28)\n   \
    \ at test (/tmp/tmpj93iha2e.js:18:20)\n    at Object.<anonymous> (/tmp/tmpj93iha2e.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822384

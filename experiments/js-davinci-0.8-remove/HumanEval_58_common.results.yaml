language: js
name: HumanEval_58_common
results:
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ != -1){\n            l3.push(l1[i]);\n        }\n    }\n    return unique(l3);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpjd5frblh.js:9\n    return unique(l3);\n    ^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpjd5frblh.js:9:5)\n    at test\
    \ (/tmp/tmpjd5frblh.js:17:20)\n    at Object.<anonymous> (/tmp/tmpjd5frblh.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return new Set([...l1].filter(x => l2.has(x)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3h0ut_3q.js:3\n    return new Set([...l1].filter(x => l2.has(x)));\n\
    \                                          ^\n\nTypeError: l2.has is not a function\n\
    \    at /tmp/tmp3h0ut_3q.js:3:43\n    at Array.filter (<anonymous>)\n    at common\
    \ (/tmp/tmp3h0ut_3q.js:3:28)\n    at test (/tmp/tmp3h0ut_3q.js:11:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp3h0ut_3q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return [...(new Set(l1.filter(e => l2.includes(e)).sort()))];\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  //helper function to sort uniques\n  function sortUnique(array) {\n\
    \    return array.filter(function(item, pos) {\n      return array.indexOf(item)\
    \ == pos;\n    })\n  }\n  //create new list of common items\n  let commonList\
    \ = l1.filter(x => l2.includes(x));\n  //use previous helper function to sort\
    \ uniques\n  commonList = sortUnique(commonList);\n  return commonList;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpchdg_nbl.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpchdg_nbl.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var c1 = intersection(l1, l2), c2 = intersection(l2, l1);\n  return\
    \ Union(c1, c2);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpsbh8ffim.js:3\n  var c1 = intersection(l1, l2), c2 = intersection(l2,\
    \ l1);\n           ^\n\nReferenceError: intersection is not defined\n    at common\
    \ (/tmp/tmpsbh8ffim.js:3:12)\n    at test (/tmp/tmpsbh8ffim.js:12:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpsbh8ffim.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l3 = [];\n\tl1.sort();\n\tl2.sort();\n\tfor(var i = 0; i < l1.length;\
    \ i++){\n\t\tif(l2.indexOf(l1[i]) > -1 && l3.indexOf(l1[i]) == -1){\n\t\t\tl3.push(l1[i]);\n\
    \t\t}\n\t}\n\treturn l3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn uniq(intersection(l1, l2)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpp8n40_qy.js:3\n\treturn uniq(intersection(l1, l2)).sort();\n\t\
    ^\n\nReferenceError: uniq is not defined\n    at common (/tmp/tmpp8n40_qy.js:3:2)\n\
    \    at test (/tmp/tmpp8n40_qy.js:11:20)\n    at Object.<anonymous> (/tmp/tmpp8n40_qy.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l3 = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ > -1 && l3.indexOf(l1[i]) == -1){\n\t\t\tl3.push(l1[i]);\n\t\t}\n\t}\n\treturn\
    \ l3;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3,\
    \ 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2,\
    \ 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmploe_1sfj.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmploe_1sfj.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return sorted(intersect(l1, l2));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpyqoyp3_c.js:3\n  return sorted(intersect(l1, l2));\n  ^\n\nReferenceError:\
    \ sorted is not defined\n    at common (/tmp/tmpyqoyp3_c.js:3:3)\n    at test\
    \ (/tmp/tmpyqoyp3_c.js:11:20)\n    at Object.<anonymous> (/tmp/tmpyqoyp3_c.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var x = [...new Set(l1)];\n    var y = [...new Set(l2)];\n    var\
    \ list = [];\n    for(var i = 0; i < x.length; i++){\n        for(var j = 0; j\
    \ < y.length; j++){\n            if(x[i] == y[j]){\n                list.push(x[i]);\n\
    \            }\n        }\n    }\n    return list;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjbwhtdh5.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjbwhtdh5.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return [...new Set(l1)].filter(e => l2.includes(e)).sort((a, b) =>\
    \ a - b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    //code\n    var newArr = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                newArr.push(l1[i]);\n            }\n        }\n    }\n    var\
    \ set = new Set(newArr);\n    var newArr = Array.from(set);\n    newArr.sort();\n\
    \    return newArr;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn Array.from(new Set(l1.filter(x => l2.includes(x)))).sort((a,\
    \ b) => a - b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l3 = [],\n        is_val = true;\n    if(l1.length == 0 || l2.length\
    \ == 0){\n        return [];\n    }\n    for(var i = 0; i < l1.length; i++){\n\
    \        is_val = true;\n        for(var j = 0; j < l2.length; j++){\n       \
    \     if(l1[i] === l2[j]){\n                for(var k = 0; k < l3.length; k++){\n\
    \                    if(l3[k] === l1[i]){\n                        is_val = false;\n\
    \                        break;\n                    }\n                }\n  \
    \              if(is_val){\n                    l3.push(l1[i]);\n            \
    \    }\n            }\n        }\n    }\n    return l3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpk8io62n9.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk8io62n9.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.intersection(l1, l2).sort(function(a, b){return a - b;});\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprw5fg6nt.js:3\n  return _.intersection(l1, l2).sort(function(a,\
    \ b){return a - b;});\n  ^\n\nReferenceError: _ is not defined\n    at common\
    \ (/tmp/tmprw5fg6nt.js:3:3)\n    at test (/tmp/tmprw5fg6nt.js:11:20)\n    at Object.<anonymous>\
    \ (/tmp/tmprw5fg6nt.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let common = [];\n  l1.forEach(function(element1){\n    l2.forEach(function(element2){\n\
    \      if(element1 == element2){\n        common.push(element1);\n      }\n  \
    \  });\n  });\n  return common.sort(function(a, b){return a-b});\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp4rc8vfg7.js:19:10)\n    at Object.<anonymous> (/tmp/tmp4rc8vfg7.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var ret = [];\n  var s1 = l1.slice(0).sort();\n  var s2 = l2.slice(0).sort();\n\
    \  for(var i = 0, j = 0; i < s1.length; i++){\n    if(s1[i] === s2[j]){\n    \
    \  ret.push(s1[i]);\n      j++;\n    }else if(s1[i] > s2[j]){\n      j++;\n  \
    \    i--;\n    }\n  }\n  return ret;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpflealo8n.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpflealo8n.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    l2.sort();\n    l1.sort();\n    return unique(l1.filter(function(val){\n\
    \        return val <= l2[l2.length-1] && l2.indexOf(val) >= 0;\n    }));\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphdh19yu9.js:5\n    return unique(l1.filter(function(val){\n   \
    \ ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmphdh19yu9.js:5:5)\n\
    \    at test (/tmp/tmphdh19yu9.js:15:20)\n    at Object.<anonymous> (/tmp/tmphdh19yu9.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var output = [];\n  var l1_sorted = l1.sort();\n  var l2_sorted = l2.sort();\n\
    \  var i = 0;\n  var j = 0;\n  while(i < l1_sorted.length && j < l2_sorted.length){\n\
    \    if(l1_sorted[i] == l2_sorted[j]){\n      output.push(l1_sorted[i]);\n   \
    \   i++;\n      j++;\n    }\n    else if(l1_sorted[i] < l2_sorted[j])\n      i++;\n\
    \    else\n      j++;\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_in1ek_j.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_in1ek_j.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var s = {};\n    for(var i = 0; i < l1.length; i++){\n        s[l1[i]]\
    \ = 0;\n    }\n    for(var i = 0; i < l2.length; i++){\n        if(s[l2[i]] !==\
    \ undefined){\n            s[l2[i]] += 1;\n        }\n    }\n    return Object.keys(s).sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '2',\n\
    \  '3',\n  '34',\n  '4',\n  '5',\n  '653'\n]\n\nshould loosely deep-equal\n\n\
    [\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp2q6k0ol_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2q6k0ol_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '1',\
    \   '2', '3',\n    '34',  '4', '5',\n    '653'\n  ],\n  expected: [ 1, 5, 653\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var set=new Set();\n    for(var i=0;i<l1.length;i++){\n        for(var\
    \ j=0;j<l2.length;j++){\n            if(l1[i]==l2[j]){\n                set.add(l1[i]);\n\
    \            }\n        }\n    }\n    return set.asList();\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk1v5ipgl.js:11\n    return set.asList();\n               ^\n\n\
    TypeError: set.asList is not a function\n    at common (/tmp/tmpk1v5ipgl.js:11:16)\n\
    \    at test (/tmp/tmpk1v5ipgl.js:19:20)\n    at Object.<anonymous> (/tmp/tmpk1v5ipgl.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var s = new Set(l1);\n  return [...new Set(l2.filter(x => s.has(x)))].sort((a,\
    \ b) => a - b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l = [];\n  l1.forEach(function(e){\n    l2.forEach(function(e2){\n\
    \      if(e == e2 && l.indexOf(e) < 0)\n        l.push(e);\n    });\n  });\n \
    \ return l.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return common1(common1(l1, l2), common1(l2, l1));\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp990c7hqn.js:3\n    return common1(common1(l1, l2), common1(l2,\
    \ l1));\n    ^\n\nReferenceError: common1 is not defined\n    at common (/tmp/tmp990c7hqn.js:3:5)\n\
    \    at test (/tmp/tmp990c7hqn.js:10:20)\n    at Object.<anonymous> (/tmp/tmp990c7hqn.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tl1 = _.sortBy(l1, _.identity);\n\tl2 = _.sortBy(l2, _.identity);\n\t\
    return _.intersection(l1, l2);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpclgeboem.js:3\n\tl1 = _.sortBy(l1, _.identity);\n\t^\n\nReferenceError:\
    \ _ is not defined\n    at common (/tmp/tmpclgeboem.js:3:2)\n    at test (/tmp/tmpclgeboem.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmpclgeboem.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return [...new Set(l1)].filter(e => new Set(l2).has(e));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmppyvzkb1z.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmppyvzkb1z.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(n) {return l2.indexOf(n) !== -1; }).sort(function(a,\
    \ b){return a-b;});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var uniques = [],\n      l1_arr = l1.split(' '),\n      l2_arr = l2.split('\
    \ ');\n  for(var i = 0; i < l1_arr.length; i++){\n    if(l2_arr.indexOf(l1_arr[i])\
    \ > -1){\n      uniques.push(l1_arr[i]);\n    }\n  }\n  return uniques.sort().join('\
    \ ');\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3,\
    \ 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2,\
    \ 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp722j7eha.js:4\n      l1_arr = l1.split(' '),\n                \
    \  ^\n\nTypeError: l1.split is not a function\n    at common (/tmp/tmp722j7eha.js:4:19)\n\
    \    at test (/tmp/tmp722j7eha.js:18:20)\n    at Object.<anonymous> (/tmp/tmp722j7eha.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn l1.filter(a => l2.includes(a));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpxhrr2ap7.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxhrr2ap7.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\t//Common elements between l1 and l2.\n\tvar com = new Set(l1.filter(function(e){\n\
    \t\treturn l2.indexOf(e) != -1;\n\t}));\n\t//sorted unique\n\treturn Array.from(com).sort(function(a,\
    \ b){\n\t\treturn a - b;\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tlet c = [];\n\tlet i = 0;\n\tlet j = 0;\n\tl1.sort();\n\tl2.sort();\n\
    \twhile(i < l1.length && j < l2.length){\n\t\tif(l1[i] < l2[j]){\n\t\t\ti++;\n\
    \t\t}\n\t\telse if(l1[i] > l2[j]){\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tif(c.length\
    \ == 0 || c[c.length - 1] != l1[i]){\n\t\t\t\tc.push(l1[i]);\n\t\t\t}\n\t\t\t\
    i++;\n\t\t\tj++;\n\t\t}\n\t}\n\treturn c;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmphy977uva.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmphy977uva.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(l2.has.bind(l2));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmptuc5yzrp.js:3\n    return l1.filter(l2.has.bind(l2));\n       \
    \                     ^\n\nTypeError: Cannot read properties of undefined (reading\
    \ 'bind')\n    at common (/tmp/tmptuc5yzrp.js:3:29)\n    at test (/tmp/tmptuc5yzrp.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmptuc5yzrp.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var res = [], s = new Set(l2);\n  for(var i=0; i<l1.length; i++){\n\
    \    if(s.has(l1[i])){\n      res.push(l1[i]);\n      s.delete(l1[i]);\n    }\n\
    \  }\n  return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpzz78itut.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzz78itut.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let l3 = [];\n  let c = concat(l1, l2);\n  l3 = c.filter(function(item,\
    \ index){\n    return c.indexOf(item) == index;\n  });\n  return l3.sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplea85c6h.js:4\n  let c = concat(l1, l2);\n          ^\n\nReferenceError:\
    \ concat is not defined\n    at common (/tmp/tmplea85c6h.js:4:11)\n    at test\
    \ (/tmp/tmplea85c6h.js:16:20)\n    at Object.<anonymous> (/tmp/tmplea85c6h.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var lc = [];\n  var i1 = 0;\n  var i2 = 0;\n  while(i1 < l1.length &&\
    \ i2 < l2.length){\n    if(l1[i1] == l2[i2]){\n      lc.push(l1[i1]);\n      i1\
    \ += 1;\n      i2 += 1;\n    }\n    else if(l1[i1] < l2[i2]){\n      i1 += 1;\n\
    \    }\n    else{\n      i2 += 1;\n    }\n  }\n  return lc;\n}\n\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpxq30mcx7.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxq30mcx7.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var c = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   c.push(l1[i]);\n            }\n        }\n    }\n    return c.filter(onlyUnique);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1e6cu24g.js:11\n    return c.filter(onlyUnique);\n            \
    \        ^\n\nReferenceError: onlyUnique is not defined\n    at common (/tmp/tmp1e6cu24g.js:11:21)\n\
    \    at test (/tmp/tmp1e6cu24g.js:19:20)\n    at Object.<anonymous> (/tmp/tmp1e6cu24g.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\t//If both lists are empty\n\tif(l1.length === 0 && l2.length === 0){\n\
    \t\treturn [];\n\t}\n\t//If only one list is empty\n\tif(l1.length === 0 || l2.length\
    \ === 0){\n\t\treturn [];\n\t}\n\treturn _.union(l1, l2);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp2epuvrlg.js:11\n\treturn _.union(l1, l2);\n\t^\n\nReferenceError:\
    \ _ is not defined\n    at common (/tmp/tmp2epuvrlg.js:11:2)\n    at test (/tmp/tmp2epuvrlg.js:18:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2epuvrlg.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn $.grep(l1, function(v){\n\t\treturn $.inArray(v, l2) != -1;\n\
    \t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5],\
    \ [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3,\
    \ 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2,\
    \ 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeg52iww2.js:3\n\treturn $.grep(l1, function(v){\n\t^\n\nReferenceError:\
    \ $ is not defined\n    at common (/tmp/tmpeg52iww2.js:3:2)\n    at test (/tmp/tmpeg52iww2.js:13:20)\n\
    \    at Object.<anonymous> (/tmp/tmpeg52iww2.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return _.uniq(sort(l1.concat(l2)));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpjjqftcrn.js:3\n    return _.uniq(sort(l1.concat(l2)));\n    ^\n\
    \nReferenceError: _ is not defined\n    at common (/tmp/tmpjjqftcrn.js:3:5)\n\
    \    at test (/tmp/tmpjjqftcrn.js:11:20)\n    at Object.<anonymous> (/tmp/tmpjjqftcrn.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    for(var i=0; i<l1.length; i++){\n        for(var\
    \ j=0; j<l2.length; j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpy76q3cfm.js:19:10)\n    at Object.<anonymous> (/tmp/tmpy76q3cfm.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var sorted1 = l1.sort(function(a, b){return a-b});\n  var sorted2 =\
    \ l2.sort(function(a, b){return a-b});\n  var uniq1 = uniq(sorted1);\n  var uniq2\
    \ = uniq(sorted2);\n  var len1 = uniq1.length;\n  var len2 = uniq2.length;\n \
    \ var com = [];\n  for(var i = 0; i < len1; i++){\n    for(var j = 0; j < len2;\
    \ j++){\n      if(uniq1[i] === uniq2[j]){\n        com.push(uniq1[i]);\n     \
    \ }\n    }\n  }\n  return com;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp_81b4ffr.js:5\n  var uniq1 = uniq(sorted1);\n              ^\n\n\
    ReferenceError: uniq is not defined\n    at common (/tmp/tmp_81b4ffr.js:5:15)\n\
    \    at test (/tmp/tmp_81b4ffr.js:25:20)\n    at Object.<anonymous> (/tmp/tmp_81b4ffr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return _.uniq(l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ != -1\n    }));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpxnc78qa9.js:3\n    return _.uniq(l1.filter(function(n) {\n    ^\n\
    \nReferenceError: _ is not defined\n    at common (/tmp/tmpxnc78qa9.js:3:5)\n\
    \    at test (/tmp/tmpxnc78qa9.js:13:20)\n    at Object.<anonymous> (/tmp/tmpxnc78qa9.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let result = []\n    let s1 = new Set(l1)\n    let s2 = new Set(l2)\n\
    \    for(let i of s1){\n        if(s2.has(i)){\n            result.push(i)\n \
    \       }\n    }\n    return result.sort((a,b) => a - b)\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(n) {\n    return l2.indexOf(n) !== -1;\n \
    \ }).sort(function(a, b) {\n    return a - b;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.sortBy(_.uniq(_.intersection(l1, l2)), function(num){ return\
    \ -num });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmphi_99fc4.js:3\n  return _.sortBy(_.uniq(_.intersection(l1, l2)),\
    \ function(num){ return -num });\n  ^\n\nReferenceError: _ is not defined\n  \
    \  at common (/tmp/tmphi_99fc4.js:3:3)\n    at test (/tmp/tmphi_99fc4.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmphi_99fc4.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    if (l1.length == 0) {\n\treturn [];\n    }\n    else if (l2.length\
    \ == 0) {\n\treturn [];\n    }\n    else {\n\tvar fst = l1[0];\n\tvar rest1 =\
    \ l1.slice(1);\n\tvar rest2 = l2.slice(1);\n\tif (fst < l2[0]) {\n\t    return\
    \ common(rest1, l2);\n\t}\n\telse if (fst > l2[0]) {\n\t    return common(l1,\
    \ rest2);\n\t}\n\telse {\n\t    return [fst].concat(common(rest1, rest2));\n\t\
    }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpkxjupk0t.js:30:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkxjupk0t.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar list=[];\n\tvar l2_temp=[];\n\tvar i=0;\n\t\n\twhile(i<l2.length){\n\
    \t\tl2_temp.push(l2[i]);\n\t\ti++;\n\t}\n\t\n\ti=0;\n\twhile(i<l1.length){\n\t\
    \tvar j=0;\n\t\twhile(j<l2_temp.length){\n\t\t\tif(l1[i]===l2_temp[j]){\n\t\t\t\
    \tlist.push(l1[i]);\n\t\t\t\tl2_temp.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t\tj++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\tlist.sort(function(a,b){return a-b;});\n\
    \treturn list;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return unique(l1.filter(x => l2.includes(x)));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5kul8bv4.js:3\n  return unique(l1.filter(x => l2.includes(x)));\n\
    \  ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmp5kul8bv4.js:3:3)\n\
    \    at test (/tmp/tmp5kul8bv4.js:11:20)\n    at Object.<anonymous> (/tmp/tmp5kul8bv4.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  if(l1.length === 0 || l2.length === 0) return [];\n  var temp = [];\n\
    \  var result = [];\n  if(l1.length > l2.length){\n    for(var i = 0; i < l1.length;\
    \ i++){\n      for(var j = 0; j < l2.length; j++){\n        if(l1[i] === l2[j])\
    \ temp.push(l1[i]);\n      }\n    }\n  }else{\n    for(var i = 0; i < l2.length;\
    \ i++){\n      for(var j = 0; j < l1.length; j++){\n        if(l2[i] === l1[j])\
    \ temp.push(l2[i]);\n      }\n    }\n  }\n  temp.sort();\n  var current = temp[0];\n\
    \  result.push(current);\n  for(var i = 1; i < temp.length; i++){\n    if(temp[i]\
    \ !== current){\n      current = temp[i];\n      result.push(current);\n    }\n\
    \  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var m1 = l1.slice().sort().reverse();\n    var m2 = l2.slice().sort().reverse();\n\
    \    var result = [];\n    for(var i=0; i<m1.length; i++){\n        for(var j=0;\
    \ j<m2.length; j++){\n            if(m1[i] === m2[j]){\n                result.push(m1[i]);\n\
    \                m2.splice(j, 1);\n                break;\n            }\n   \
    \     }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  5,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpzh3l286c.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzh3l286c.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653, 5,\
    \ 1 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var commonElements = new Set();\n  for(var i = 0; i < l1.length; i++){\n\
    \    for(var j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n       \
    \ commonElements.add(l1[i]);\n      }\n    }\n  }\n  return Array.from(commonElements).sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar x = l1.filter(function(val){\n\t\treturn l2.indexOf(val) != -1;\n\
    \t});\n\treturn unique(x);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpp1aza4qn.js:6\n\treturn unique(x);\n\t^\n\nReferenceError: unique\
    \ is not defined\n    at common (/tmp/tmpp1aza4qn.js:6:2)\n    at test (/tmp/tmpp1aza4qn.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmpp1aza4qn.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar s = {};\n\tvar a = [];\n\tl1.forEach(function(item){\n\t\ts[item]\
    \ = 1;\n\t});\n\tl2.forEach(function(item){\n\t\tif(s[item] === 1){\n\t\t\ta.push(item);\n\
    \t\t}\n\t});\n\treturn a.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmp285vbw1f.js:21:10)\n    at Object.<anonymous> (/tmp/tmp285vbw1f.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.sortBy(_.uniq(_.intersection(l1, l2)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2t4dy3va.js:3\n  return _.sortBy(_.uniq(_.intersection(l1, l2)));\n\
    \  ^\n\nReferenceError: _ is not defined\n    at common (/tmp/tmp2t4dy3va.js:3:3)\n\
    \    at test (/tmp/tmp2t4dy3va.js:11:20)\n    at Object.<anonymous> (/tmp/tmp2t4dy3va.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(element => l2.includes(element)).sort().filter((item,\
    \ index, self) => index === self.indexOf(item));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    l1.sort();\n    l2.sort();\n    var i = 0;\n    var j = 0;\n    var\
    \ result = [];\n    while(i < l1.length && j < l2.length){\n        if(l1[i] ==\
    \ l2[j]){\n            result.push(l1[i]);\n            i++;\n            j++;\n\
    \        }\n        else if(l1[i] < l2[j]){\n            i++;\n        }\n   \
    \     else{\n            j++;\n        }\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4yaue0dc.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4yaue0dc.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tl1.sort(compareInt);\n\tl2.sort(compareInt);\n\tvar sList = [];\n\t\
    var i = 0;\n\tvar j = 0;\n\twhile(i < l1.length && j < l2.length){\n\t\tif(l1[i]\
    \ == l2[j]){\n\t\t\tsList.push(l1[i]);\n\t\t\ti++;\n\t\t\tj++;\n\t\t}else if(l1[i]\
    \ < l2[j]){\n\t\t\ti++;\n\t\t}else{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn sList;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyofv6rte.js:3\n\tl1.sort(compareInt);\n\t        ^\n\nReferenceError:\
    \ compareInt is not defined\n    at common (/tmp/tmpyofv6rte.js:3:10)\n    at\
    \ test (/tmp/tmpyofv6rte.js:27:20)\n    at Object.<anonymous> (/tmp/tmpyofv6rte.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var common = [];\n  var d = {};\n  for(var i = 0; i < l1.length; i++){\n\
    \    d[l1[i]] = l1[i];\n  }\n  for(var i = 0; i < l2.length; i++){\n    if(d[l2[i]]\
    \ !== undefined){\n      common.push(l2[i]);\n    }\n  }\n  return common;\n}\n\
    \n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  1,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpw3f0x7f0.js:22:10)\n    at Object.<anonymous> (/tmp/tmpw3f0x7f0.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 1, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var result = []\n  for(var i = 0; i < l1.length; i++){\n    if(l2.indexOf(l1[i])\
    \ > -1 && result.indexOf(l1[i]) == -1){\n      result.push(l1[i])\n    }\n  }\n\
    \  return result.sort()\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.intersection(l1, l2).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpqza2dgs1.js:3\n\treturn _.intersection(l1, l2).sort();\n\t^\n\n\
    ReferenceError: _ is not defined\n    at common (/tmp/tmpqza2dgs1.js:3:2)\n  \
    \  at test (/tmp/tmpqza2dgs1.js:11:20)\n    at Object.<anonymous> (/tmp/tmpqza2dgs1.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn l1.filter(function(v){return l2.indexOf(v) !== -1});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmprcbfay3e.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmprcbfay3e.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l1= l1.sort(function(a,b){return a-b});\n\tvar l2= l2.sort(function(a,b){return\
    \ a-b});\n\tvar l3=[];\n\tvar i=0;\n\tvar j=0;\n\twhile (i<l1.length && j<l2.length){\n\
    \t\tif (l1[i]==l2[j]){\n\t\t\tl3.push(l1[i]);\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\
    \t\telse if (l1[i]<l2[j]){\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\tj++;\n\t\t}\n\t\
    }\n\treturn l3;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  //creates a sorted unique list of l1 and l2\n  function unique(l1, l2){\n\
    \    return l1.filter(function(i){\n      return l2.indexOf(i) >= 0;\n    });\n\
    \  }\n  //create a sorted list of l1 and l2\n  let l1u = l1.sort(function(a, b){return\
    \ a-b});\n  let l2u = l2.sort(function(a, b){return a-b});\n  //create a sorted\
    \ unique list of l1 and l2\n  let l1l2 = unique(l1u, l2u);\n  //creates a sorted\
    \ unique list of l2 and l1\n  let l2l1 = unique(l2u, l1u);\n  //returns the sorted\
    \ unique list of l1 and l2\n  return l1l2.sort(function(a, b){return a-b});\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let t1 = {};\n    let t2 = {};\n    let d = {};\n    l1.forEach(a\
    \ => t1[a] = true);\n    l2.forEach(a => t2[a] = true);\n    l1.forEach(a => {\n\
    \        if(t2[a]){\n            d[a] = true;\n        }\n    });\n    return\
    \ Object.keys(d).sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar result = [];\n\tvar length = Math.min(l1.length, l2.length);\n\t\
    var c = 0;\n\tvar d = 0;\n\tvar e = 0;\n\twhile(e < length){\n\t\tif(l1[c] < l2[d]){\n\
    \t\t\tc++;\n\t\t}else if(l1[c] > l2[d]){\n\t\t\td++;\n\t\t}else{\n\t\t\tresult[e++]\
    \ = l1[c++];\n\t\t\td++;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653,\n  undefined,\n\
    \  undefined,\n  undefined,\n  undefined,\n  undefined,\n  undefined\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp9vk7xuww.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9vk7xuww.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    653,\
    \       undefined,\n    undefined, undefined,\n    undefined, undefined,\n   \
    \ undefined\n  ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tlet c = l1.filter(element => l2.includes(element));\n\treturn Array.from(new\
    \ Set(c));\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmplxll3hrf.js:12:10)\n\
    \    at Object.<anonymous> (/tmp/tmplxll3hrf.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar commonElements = [];\n\tfor(i = 0; i < l1.length; i++){\n\t\tfor(j\
    \ = 0; j < l2.length; j++){\n\t\t\tif(l1[i] == l2[j]){\n\t\t\t\tcommonElements.push(l1[i]);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn commonElements.sort(function(a, b){return a-b});\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpoiifxljf.js:19:10)\n    at Object.<anonymous> (/tmp/tmpoiifxljf.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l3 = l1.filter(function(n) {\n        return l2.indexOf(n) !=\
    \ -1;\n    });\n    return l3.filter(function(elem, pos) {\n        return l3.indexOf(elem)\
    \ == pos;\n    });\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpb4mbu3ub.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb4mbu3ub.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var a = [];\n  for(var i = 0; i < l1.length; i++) {\n    if(l2.indexOf(l1[i])\
    \ != -1 && a.indexOf(l1[i]) < 0) {\n      a.push(l1[i]);\n    }\n  }\n  return\
    \ a.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var i, j, k,\n        m = [],\n        n = l1.length;\n    for(i =\
    \ 0; i < n; i++){\n        if(l2.indexOf(l1[i]) != -1){\n            m.push(l1[i]);\n\
    \        }\n    }\n    n = m.length;\n    for(i = 0; i < n; i++){\n        for(j\
    \ = i + 1; j < n; j++){\n            if(m[i] == m[j]){\n                for(k\
    \ = j; k < n; k++){\n                    m[k] = m[k + 1];\n                }\n\
    \                n--;\n                j--;\n            }\n        }\n    }\n\
    \    return m;\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp9ka6xfw9.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9ka6xfw9.js:38:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\t//Split the comma separated string into a list\n\tvar tempL1 = l1.split(\"\
    ,\");\n\tvar tempL2 = l2.split(\",\");\n\tvar size = tempL1.length > tempL2.length\
    \ ? tempL1.length : tempL2.length;\n\tvar commonElements = [];\n\t//Compare each\
    \ element of the lists and store the common elements in a new list.\n\tfor(var\
    \ i = 0; i < size; i++){\n\t\tfor(var j = 0; j < size; j++){\n\t\t\tif(tempL1[i]\
    \ == tempL2[j]){\n\t\t\t\tcommonElements.push(tempL1[i]);\n\t\t\t}\n\t\t}\n\t\
    }\n\t//Unique the list and then sort it.\n\tuniqueList = commonElements.filter(function(elem,\
    \ pos) {\n    \treturn commonElements.indexOf(elem) == pos;\n\t});\n\tuniqueList.sort();\n\
    \t//Return the sorted unique list of common elements.\n\treturn uniqueList;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpxuw26oz0.js:4\n\tvar tempL1 = l1.split(\",\");\n\t            \
    \    ^\n\nTypeError: l1.split is not a function\n    at common (/tmp/tmpxuw26oz0.js:4:18)\n\
    \    at test (/tmp/tmpxuw26oz0.js:29:20)\n    at Object.<anonymous> (/tmp/tmpxuw26oz0.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let obj = {};\n  let res = [];\n  for(let i = 0; i < l1.length; i++){\n\
    \    if(!obj[l1[i]]){\n      obj[l1[i]] = 1;\n    }\n  }\n  for(let i = 0; i <\
    \ l2.length; i++){\n    if(obj[l2[i]]){\n      res.push(l2[i]);\n      obj[l2[i]]\
    \ = 0;\n    }\n  }\n  return res.sort();\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return sortedUnique(l1.filter(v => l2.includes(v)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7lkhzecc.js:3\n  return sortedUnique(l1.filter(v => l2.includes(v)));\n\
    \  ^\n\nReferenceError: sortedUnique is not defined\n    at common (/tmp/tmp7lkhzecc.js:3:3)\n\
    \    at test (/tmp/tmp7lkhzecc.js:11:20)\n    at Object.<anonymous> (/tmp/tmp7lkhzecc.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn l1.filter(function(value){\n\t\treturn l2.indexOf(value) != -1;\n\
    \t}).sort(function(a, b){\n\t\treturn a - b;\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var d1 = dedup(l1);\n    var d2 = dedup(l2);\n    var result = [];\n\
    \    while(d1.length > 0 && d2.length > 0){\n        if(d1[0] < d2[0]){\n    \
    \        d1.shift();\n        }else if(d1[0] > d2[0]){\n            d2.shift();\n\
    \        }else{\n            result.push(d1.shift());\n            d2.shift();\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp6izzi63p.js:3\n    var d1 = dedup(l1);\n             ^\n\nReferenceError:\
    \ dedup is not defined\n    at common (/tmp/tmp6izzi63p.js:3:14)\n    at test\
    \ (/tmp/tmp6izzi63p.js:24:20)\n    at Object.<anonymous> (/tmp/tmp6izzi63p.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = []\n    l1.forEach(function(e){\n        if(l2.indexOf(e)\
    \ != -1){\n            result.push(e)\n        }\n    })\n    return result.sort()\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return Array.from(new Set(l1)).filter(x => l2.includes(x));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptcbwmgwm.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmptcbwmgwm.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   l.push(l1[i]);\n            }\n        }\n    }\n    return unique(l);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyj6dapix.js:11\n    return unique(l);\n    ^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpyj6dapix.js:11:5)\n    at test\
    \ (/tmp/tmpyj6dapix.js:19:20)\n    at Object.<anonymous> (/tmp/tmpyj6dapix.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    if(l1.length == 0 || l2.length == 0) return [];\n    return l1.filter(v\
    \ => l2.includes(v)).filter((v, i, a) => a.indexOf(v) === i).sort();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let obj = {};\n    let res = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        if(obj[l1[i]]) obj[l1[i]]++;\n        else obj[l1[i]] = 1;\n\
    \    }\n    for(let i = 0; i < l2.length; i++){\n        if(obj[l2[i]]) obj[l2[i]]++;\n\
    \        else obj[l2[i]] = 1;\n    }\n    for(let key in obj){\n        if(obj[key]\
    \ === 2) res.push(key);\n    }\n    return res.sort((a, b) => a - b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '653'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpp264i8mb.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp264i8mb.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '1', '653'\
    \ ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return new Set([...l1].filter(x => l2.has(x)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3h0ut_3q.js:3\n    return new Set([...l1].filter(x => l2.has(x)));\n\
    \                                          ^\n\nTypeError: l2.has is not a function\n\
    \    at /tmp/tmp3h0ut_3q.js:3:43\n    at Array.filter (<anonymous>)\n    at common\
    \ (/tmp/tmp3h0ut_3q.js:3:28)\n    at test (/tmp/tmp3h0ut_3q.js:11:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp3h0ut_3q.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821336
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(n) {\n    return l2.indexOf(n) !== -1;\n \
    \ }).sort(function(a, b) {\n    return a - b;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(value => -1 !== l2.indexOf(value));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpwe9089z9.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwe9089z9.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var list = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j\
    \ = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        list.push(l1[i]);\n\
    \      }\n    }\n  }\n  return list.sort().filter(function(item, pos, ary) {\n\
    \    return !pos || item != ary[pos - 1];\n  })\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    l1.sort();\n    l2.sort();\n    var r = [];\n    while(l1.length &&\
    \ l2.length){\n        if(l1[0] < l2[0]){\n            l1.shift();\n        }\n\
    \        else if(l1[0] > l2[0]){\n            l2.shift();\n        }\n       \
    \ else{\n            r.push(l1.shift());\n            l2.shift();\n        }\n\
    \    }\n    return r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpjhgptkss.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjhgptkss.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    var sorted1 = l1.sort();\n    var sorted2 =\
    \ l2.sort();\n    var total = l1.length + l2.length;\n    var index1 = 0;\n  \
    \  var index2 = 0;\n    for(var i = 0; i < total; i++){\n        var val1 = sorted1[index1];\n\
    \        var val2 = sorted2[index2];\n        if(index1 < sorted1.length && val1\
    \ < val2){\n            index1++;\n        }\n        else if(index2 < sorted2.length\
    \ && val2 < val1){\n            index2++;\n        }\n        else if(index1 <\
    \ sorted1.length && index2 < sorted2.length){\n            result.push(val1);\n\
    \            index1++;\n            index2++;\n        }\n        else{\n    \
    \        break;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp3i28f8qj.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3i28f8qj.js:41:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let n1 = l1.length;\n    let n2 = l2.length;\n    let l3 = [];\n \
    \   if(n1 == 0 || n2 == 0){\n        return l3;\n    }\n    let i = 0;\n    let\
    \ j = 0;\n    let count = 0;\n    let prev = null;\n    while(i < n1 && j < n2){\n\
    \        if(l1[i] == l2[j]){\n            if(prev == null || l1[i] != prev){\n\
    \                l3[count] = l1[i];\n                count++;\n              \
    \  prev = l1[i];\n            }\n            i++;\n            j++;\n        }\n\
    \        else if(l1[i] < l2[j]){\n            i++;\n        }\n        else{\n\
    \            j++;\n        }\n    }\n    return l3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp6zgfkgvl.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6zgfkgvl.js:44:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var ret = [];\n    for(var i=0; i<l1.length; i++){\n        for(var\
    \ j=0; j<l2.length; j++){\n            if(l1[i] == l2[j]){\n                ret.push(l1[i]);\n\
    \                break;\n            }\n        }\n    }\n    return ret.sort().unique();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp_of33pan.js:12\n    return ret.sort().unique();\n             \
    \         ^\n\nTypeError: ret.sort(...).unique is not a function\n    at common\
    \ (/tmp/tmp_of33pan.js:12:23)\n    at test (/tmp/tmp_of33pan.js:20:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp_of33pan.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn sorted(l1).filter(function(el){\n\t\treturn sorted(l2).indexOf(el)\
    \ >= 0;\n\t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmplhzwiu42.js:3\n\treturn sorted(l1).filter(function(el){\n\t^\n\n\
    ReferenceError: sorted is not defined\n    at common (/tmp/tmplhzwiu42.js:3:2)\n\
    \    at test (/tmp/tmplhzwiu42.js:13:20)\n    at Object.<anonymous> (/tmp/tmplhzwiu42.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.uniq(l1.concat(l2)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpv3qk5z66.js:3\n\treturn _.uniq(l1.concat(l2)).sort();\n\t^\n\n\
    ReferenceError: _ is not defined\n    at common (/tmp/tmpv3qk5z66.js:3:2)\n  \
    \  at test (/tmp/tmpv3qk5z66.js:11:20)\n    at Object.<anonymous> (/tmp/tmpv3qk5z66.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(i => l2.includes(i)).sort().filter((i,j,l) => i!=l[j-1]);\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn uniq(l1.filter(x => l2.includes(x)));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp5w4lucwo.js:3\n\treturn uniq(l1.filter(x => l2.includes(x)));\n\
    \t^\n\nReferenceError: uniq is not defined\n    at common (/tmp/tmp5w4lucwo.js:3:2)\n\
    \    at test (/tmp/tmp5w4lucwo.js:11:20)\n    at Object.<anonymous> (/tmp/tmp5w4lucwo.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return _.sortBy(_.uniq(_.intersection(l1, l2)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpb8rnfqiw.js:3\n    return _.sortBy(_.uniq(_.intersection(l1, l2)));\n\
    \    ^\n\nReferenceError: _ is not defined\n    at common (/tmp/tmpb8rnfqiw.js:3:5)\n\
    \    at test (/tmp/tmpb8rnfqiw.js:11:20)\n    at Object.<anonymous> (/tmp/tmpb8rnfqiw.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar common = new List();\n\tvar i = 0;\n\tvar j = 0;\n\twhile(i < l1.length\
    \ && j < l2.length){\n\t\tif(l1[i] == l2[j]){\n\t\t\tif(common.length == 0 ||\
    \ common[common.length - 1] != l1[i]){\n\t\t\t\tcommon.push(l1[i]);\n\t\t\t}\n\
    \t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\telse if(l1[i] < l2[j]){\n\t\t\ti++;\n\t\t}\n\
    \t\telse{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn common;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpdnjegds0.js:3\n\tvar common = new List();\n\t             ^\n\n\
    ReferenceError: List is not defined\n    at common (/tmp/tmpdnjegds0.js:3:15)\n\
    \    at test (/tmp/tmpdnjegds0.js:29:20)\n    at Object.<anonymous> (/tmp/tmpdnjegds0.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var len = Math.min(l1.length, l2.length);\n    var rs = new Array(len);\n\
    \    var pos = 0;\n    var i = 0;\n    while(i < len){\n        var num = l1[i];\n\
    \        if(l2.indexOf(num) >= 0){\n            rs[pos++] = num;\n        }\n\
    \        i++;\n    }\n    return rs.slice(0, pos);\n}\n\nmodule.exports = {\n\
    \    add:add,\n    sub:sub,\n    mul:mul,\n    div:div,\n    common:common\n};\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7xrmqu7d.js:18\n    add:add,\n        ^\n\nReferenceError: add\
    \ is not defined\n    at Object.<anonymous> (/tmp/tmp7xrmqu7d.js:18:9)\n    at\
    \ Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar r = [];\n\tvar l = l1.concat(l2);\n\tfor(var i = 0; i < l.length;\
    \ i++){\n\t\tif(l.lastIndexOf(l[i]) != i && r.indexOf(l[i]) == -1){\n\t\t\tr.push(l[i]);\n\
    \t\t}\n\t}\n\treturn r;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpohchfhff.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpohchfhff.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    //From l1 and l2, find the common elements, sort and return them in\
    \ an array.\n    //Using dot notation to reach the element inside an object.\n\
    \    var l3 = l1.filter(item => l2.indexOf(item) !== -1).sort((a, b) => a - b);\n\
    \    return l3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.sortBy(_.union(_.intersection(l1, l2)), function(item){\n \
    \   return -item;\n  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpu1owuoy0.js:3\n  return _.sortBy(_.union(_.intersection(l1, l2)),\
    \ function(item){\n  ^\n\nReferenceError: _ is not defined\n    at common (/tmp/tmpu1owuoy0.js:3:3)\n\
    \    at test (/tmp/tmpu1owuoy0.js:13:20)\n    at Object.<anonymous> (/tmp/tmpu1owuoy0.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  //TODO\n\n  var common_elements = new Set();\n\n  for(let i = 0; i <\
    \ l1.length; i++){\n    for(let j = 0; j < l2.length; j++){\n      if(l1[i] ==\
    \ l2[j]){\n        common_elements.add(l1[i]);\n      }\n    }\n  }\n\n  return\
    \ [...common_elements].sort();\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ !== -1){\n            l3.push(l1[i]);\n        }\n    }\n    return l3.filter(function(item,\
    \ pos) {\n        return l3.indexOf(item) == pos;\n    }).sort();\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  if(l1.length === 0 || l2.length === 0)\n    return [];\n  return l1.filter(function(n){\n\
    \    return l2.indexOf(n) !== -1;\n  }).sort(function(a, b){\n    return a - b;\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.concat(l2).sort().filter(function(i, pos, a){\n    return\
    \ a.indexOf(i) == pos;\n  });\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  121,\n\
    \  2,\n  3,\n  34,\n  4,\n  5,\n  653,\n  7,\n  9\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp1pnfdyii.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1pnfdyii.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 121,   2, 3, 34,\n    4,   5, 653, 7,  9\n  ],\n  expected: [ 1, 5, 653 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j =\
    \ 0; j < l2.length; j++){\n      if(l1[i] == l2[j]){\n        l.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l.sort(function(a, b){return a - b});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpwb7yy9fe.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwb7yy9fe.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(x){return l2.indexOf(x) > -1}).sort(function(a,b){return\
    \ a - b}).filter(function(x,i,self){return self.indexOf(x) === i})\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return [...new Set(l1)].filter(e => [...new Set(l2)].includes(e));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpi_66uwu8.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi_66uwu8.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let uniqueL1 = unique(l1);\n    let uniqueL2 = unique(l2);\n    let\
    \ results = [];\n    for(let i = 0; i < uniqueL1.length; i++){\n        if(uniqueL2.includes(uniqueL1[i])){\n\
    \            results.push(uniqueL1[i]);\n        }\n    }\n    return results;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp9z3082mm.js:3\n    let uniqueL1 = unique(l1);\n               \
    \    ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmp9z3082mm.js:3:20)\n\
    \    at test (/tmp/tmp9z3082mm.js:19:20)\n    at Object.<anonymous> (/tmp/tmp9z3082mm.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar result = [];\n\tvar i = 0;\n\tvar j = 0;\n\twhile (i < l1.length\
    \ && j < l2.length){\n\t\tif (l1[i] < l2[j]){\n\t\t\ti += 1;\n\t\t} else if (l1[i]\
    \ > l2[j]){\n\t\t\tj += 1;\n\t\t} else {\n\t\t\tresult.push(l1[i]);\n\t\t\ti +=\
    \ 1;\n\t\t\tj += 1;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpfq0wyciv.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfq0wyciv.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    l1.forEach(function(item){\n        var exists\
    \ = l2.indexOf(item);\n        if(exists >= 0 && result.indexOf(item) < 0){\n\
    \            result.push(item);\n        }\n    });\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpg3p3eocw.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg3p3eocw.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l1 = l1.sort(function(a, b){return a-b});\n\tvar l2 = l2.sort(function(a,\
    \ b){return a-b});\n\tvar l3 = l1.filter(function(n) {\n\t\treturn l2.indexOf(n)\
    \ !== -1;\n\t});\n\tl3 = [...new Set(l3)];\n\treturn l3;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ > -1){\n\t\t\tl.push(l1[i]);\n\t\t}\n\t}\n\treturn l.unique();\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmph9m5fu7c.js:9\n\treturn l.unique();\n\t         ^\n\nTypeError:\
    \ l.unique is not a function\n    at common (/tmp/tmph9m5fu7c.js:9:11)\n    at\
    \ test (/tmp/tmph9m5fu7c.js:17:20)\n    at Object.<anonymous> (/tmp/tmph9m5fu7c.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(e => l2.includes(e)).sort((a, b) => a - b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tl1 = uniq(l1);\n\tl2 = uniq(l2);\n\tvar common = [];\n\tfor(var i=0;\
    \ i<l1.length; i++){\n\t\tfor(var j=0; j<l2.length; j++){\n\t\t\tif(l1[i] == l2[j]){\n\
    \t\t\t\tcommon.push(l1[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn common;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmprc9t6u1o.js:3\n\tl1 = uniq(l1);\n\t^\n\nReferenceError: uniq is\
    \ not defined\n    at common (/tmp/tmprc9t6u1o.js:3:2)\n    at test (/tmp/tmprc9t6u1o.js:21:20)\n\
    \    at Object.<anonymous> (/tmp/tmprc9t6u1o.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar ret = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ >= 0 && ret.indexOf(l1[i]) < 0){\n\t\t\tret.push(l1[i]);\n\t\t}\n\t}\n\treturn\
    \ ret;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpeknjs_8m.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeknjs_8m.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar unique = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ > -1){\n\t\t\tunique.push(l1[i]);\n\t\t}\n\t}\n\treturn unique.sort();\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn sortUnique(l1.filter(a => l2.includes(a)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpry62tn3w.js:3\n\treturn sortUnique(l1.filter(a => l2.includes(a)));\n\
    \t^\n\nReferenceError: sortUnique is not defined\n    at common (/tmp/tmpry62tn3w.js:3:2)\n\
    \    at test (/tmp/tmpry62tn3w.js:11:20)\n    at Object.<anonymous> (/tmp/tmpry62tn3w.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.uniq(l1.concat(l2)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpv3qk5z66.js:3\n\treturn _.uniq(l1.concat(l2)).sort();\n\t^\n\n\
    ReferenceError: _ is not defined\n    at common (/tmp/tmpv3qk5z66.js:3:2)\n  \
    \  at test (/tmp/tmpv3qk5z66.js:11:20)\n    at Object.<anonymous> (/tmp/tmpv3qk5z66.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var set = new Set(l1);\n    var common = [];\n    for(var i=0; i<l2.length;\
    \ i++){\n        if(set.has(l2[i])){\n            common.push(l2[i]);\n      \
    \  }\n    }\n    return common.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmptobnoloo.js:18:10)\n    at Object.<anonymous> (/tmp/tmptobnoloo.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar common = [];\n\tvar l1 = unique(l1);\n\tvar l2 = unique(l2);\n\t\
    var len = l1.length > l2.length ? l1.length : l2.length;\n\tfor(var i = 0; i <\
    \ len; i++){\n\t\tif(l1[i] == l2[i]){\n\t\t\tcommon.push(l1[i]);\n\t\t}\n\t}\n\
    \treturn common;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpqtch1oof.js:4\n\tvar l1 = unique(l1);\n\t         ^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpqtch1oof.js:4:11)\n    at test\
    \ (/tmp/tmpqtch1oof.js:20:20)\n    at Object.<anonymous> (/tmp/tmpqtch1oof.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tl1 = sort(unique(l1));\n\tl2 = sort(unique(l2));\n\tvar res = [];\n\t\
    var i = 0;\n\tvar j = 0;\n\twhile(i < l1.length && j < l2.length){\n\t\tif(l1[i]\
    \ == l2[j]){\n\t\t\tres.push(l1[i]);\n\t\t\ti++;\n\t\t\tj++;\n\t\t}else if(l1[i]\
    \ < l2[j]){\n\t\t\ti++;\n\t\t}else{\n\t\t\tj++;\n\t\t}\n\t}\n\treturn res;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqgcw2c35.js:3\n\tl1 = sort(unique(l1));\n\t^\n\nReferenceError:\
    \ sort is not defined\n    at common (/tmp/tmpqgcw2c35.js:3:2)\n    at test (/tmp/tmpqgcw2c35.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmpqgcw2c35.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn uniq(l1.concat(l2).sort());\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpnn120ezp.js:3\n\treturn uniq(l1.concat(l2).sort());\n\t^\n\nReferenceError:\
    \ uniq is not defined\n    at common (/tmp/tmpnn120ezp.js:3:2)\n    at test (/tmp/tmpnn120ezp.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmpnn120ezp.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let set = new Set();\n  for(let i = 0; i < l1.length; i++){\n    if(l2.includes(l1[i])){\n\
    \      set.add(l1[i]);\n    }\n  }\n  return Array.from(set);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp2rk2njga.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2rk2njga.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return unique(l1.concat(l2).sort());\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpzhuzabi9.js:3\n    return unique(l1.concat(l2).sort());\n    ^\n\
    \nReferenceError: unique is not defined\n    at common (/tmp/tmpzhuzabi9.js:3:5)\n\
    \    at test (/tmp/tmpzhuzabi9.js:11:20)\n    at Object.<anonymous> (/tmp/tmpzhuzabi9.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(function(e){\n        return l2.indexOf(e) >= 0;\n\
    \    });\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpen3abp5a.js:12:10)\n\
    \    at Object.<anonymous> (/tmp/tmpen3abp5a.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var result = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var\
    \ j = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        result.push(l1[i]);\n\
    \      }\n    }\n  }\n  return result.sort().filter(function(item, pos, ary) {\n\
    \      return !pos || item != ary[pos - 1];\n  })\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    l1.forEach(function(i) {\n        if(l2.indexOf(i)\
    \ != -1) {\n            result.push(i);\n        }\n    });\n    return result.sort(function(a,\
    \ b) {\n        return a - b;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l3 = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j =\
    \ 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  var l4 = l3.filter(function(elem, pos) {\n    return l3.indexOf(elem)\
    \ == pos;\n  });\n  return l4.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var common = [];\n    var x;\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                common.push(l1[i]);\n            }\n        }\n    }\n    //return\
    \ unique sorted elements\n    common.sort();\n    common = common.filter(function(elem,\
    \ pos) {\n    return common.indexOf(elem) == pos;\n});\n    return common;\n}\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(val){\n    return l2.indexOf(val) >= 0;\n\
    \  }).sort().filter(function(val, i, l){\n    return i == 0 || val != l[i-1];\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    for(var i=0; i<l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ > -1 && result.indexOf(l1[i]) === -1){\n            result.push(l1[i]);\n  \
    \      }\n    }\n    return result.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar cmn = [];\n\t\n\tfor(var i = 0; i < l1.length; i++){\n\t\tvar ind\
    \ = l2.indexOf(l1[i]);\n\t\tif(ind != -1){\n\t\t\tcmn.push(l1[i]);\n\t\t\tl2.splice(ind,\
    \ 1);\n\t\t}\n\t}\n\t\n\treturn cmn;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptamdnyml.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmptamdnyml.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = [];\n    var l1 = l1.slice().sort();\n    var l2 = l2.slice().sort();\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                if(result.indexOf(l1[i])\
    \ == -1){\n                    result.push(l1[i]);\n                }\n      \
    \      }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn intersection(l1, l2).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpxx164r93.js:3\n\treturn intersection(l1, l2).sort();\n\t^\n\nReferenceError:\
    \ intersection is not defined\n    at common (/tmp/tmpxx164r93.js:3:2)\n    at\
    \ test (/tmp/tmpxx164r93.js:11:20)\n    at Object.<anonymous> (/tmp/tmpxx164r93.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var out = l1.filter(function(val){\n        return l2.indexOf(val)\
    \ >= 0;\n    });\n    return out.sort(function(a, b){\n        return a - b;\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn dedup(sort(l1.concat(l2)));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp2bk32qit.js:3\n\treturn dedup(sort(l1.concat(l2)));\n\t^\n\nReferenceError:\
    \ dedup is not defined\n    at common (/tmp/tmp2bk32qit.js:3:2)\n    at test (/tmp/tmp2bk32qit.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2bk32qit.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(function(elem) {\n        return l2.indexOf(elem)\
    \ > -1;\n    }).sort(function(a, b) {\n        return a - b;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let merged = merge(l1, l2);\n    //We need to remove duplicates of\
    \ the common elements;\n    return merged.filter((value, index, self) => {\n \
    \       return self.indexOf(value) === index;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpenqdzmp6.js:3\n    let merged = merge(l1, l2);\n              \
    \   ^\n\nReferenceError: merge is not defined\n    at common (/tmp/tmpenqdzmp6.js:3:18)\n\
    \    at test (/tmp/tmpenqdzmp6.js:15:20)\n    at Object.<anonymous> (/tmp/tmpenqdzmp6.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar l3 = [];\n\tfor(var i = 0; i < l1.length; i++){\n\t\tif(l2.indexOf(l1[i])\
    \ != -1){\n\t\t\tl3.push(l1[i]);\n\t\t}\n\t}\n\treturn unique(l3).sort();\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp02ucj_k7.js:9\n\treturn unique(l3).sort();\n\t^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmp02ucj_k7.js:9:2)\n    at test\
    \ (/tmp/tmp02ucj_k7.js:17:20)\n    at Object.<anonymous> (/tmp/tmp02ucj_k7.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.uniq(l1.concat(l2)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpv3qk5z66.js:3\n\treturn _.uniq(l1.concat(l2)).sort();\n\t^\n\n\
    ReferenceError: _ is not defined\n    at common (/tmp/tmpv3qk5z66.js:3:2)\n  \
    \  at test (/tmp/tmpv3qk5z66.js:11:20)\n    at Object.<anonymous> (/tmp/tmpv3qk5z66.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(x => l2.includes(x)).sort((a, b) => a - b).filter((item,\
    \ pos, ary) => !pos || item != ary[pos - 1]);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return _.uniq(l1.concat(l2)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpkc64wc_7.js:3\n    return _.uniq(l1.concat(l2)).sort();\n    ^\n\
    \nReferenceError: _ is not defined\n    at common (/tmp/tmpkc64wc_7.js:3:5)\n\
    \    at test (/tmp/tmpkc64wc_7.js:11:20)\n    at Object.<anonymous> (/tmp/tmpkc64wc_7.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn unique(sort(l1)).filter(function(e){\n\t\treturn unique(sort(l2)).indexOf(e)\
    \ != -1;\n\t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpqcbb7ukb.js:3\n\treturn unique(sort(l1)).filter(function(e){\n\t\
    ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmpqcbb7ukb.js:3:2)\n\
    \    at test (/tmp/tmpqcbb7ukb.js:13:20)\n    at Object.<anonymous> (/tmp/tmpqcbb7ukb.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    //Use of a set to get rid of duplicates.\n    return [...new Set(l1.filter(e\
    \ => l2.includes(e)))];\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpht2jswl6.js:12:10)\n\
    \    at Object.<anonymous> (/tmp/tmpht2jswl6.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar res = [];\n\tif(l1.length > l2.length){\n\t\tvar tmp = l1;\n\t\t\
    l1 = l2;\n\t\tl2 = tmp;\n\t}\n\tvar i = 0;\n\tvar j = 0;\n\twhile(i < l1.length\
    \ && j < l2.length){\n\t\tif(l1[i] < l2[j]){\n\t\t\ti++;\n\t\t}\n\t\telse if(l1[i]\
    \ > l2[j]){\n\t\t\tj++;\n\t\t}\n\t\telse{\n\t\t\tres.push(l1[i]);\n\t\t\ti++;\n\
    \t\t\tj++;\n\t\t}\n\t}\n\treturn res;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpyot5otyz.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyot5otyz.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn Array.from(new Set(l1.filter(e => l2.includes(e)))).sort((a,\
    \ b) => {\n\t\treturn a.localeCompare(b);\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: Exception
  stderr: "/tmp/tmp51hnne8x.js:4\n\t\treturn a.localeCompare(b);\n\t\t         ^\n\
    \nTypeError: a.localeCompare is not a function\n    at /tmp/tmp51hnne8x.js:4:12\n\
    \    at Array.sort (<anonymous>)\n    at common (/tmp/tmp51hnne8x.js:3:61)\n \
    \   at test (/tmp/tmp51hnne8x.js:13:20)\n    at Object.<anonymous> (/tmp/tmp51hnne8x.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l3 = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j =\
    \ 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        l3.push(l1[i]);\n\
    \      }\n    }\n  }\n  l3.sort();\n  return l3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmpjudk14dy.js:20:10)\n    at Object.<anonymous> (/tmp/tmpjudk14dy.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821336
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn unique(l1).filter(x => unique(l2).includes(x));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpa9yi51xr.js:3\n\treturn unique(l1).filter(x => unique(l2).includes(x));\n\
    \t^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmpa9yi51xr.js:3:2)\n\
    \    at test (/tmp/tmpa9yi51xr.js:11:20)\n    at Object.<anonymous> (/tmp/tmpa9yi51xr.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar b = l1.sort(), c = l2.sort(), d = [];\n\tfor(var i = 0; i < b.length;\
    \ i++){\n\t\tif(b[i] == c[i]) d.push(b[i]);\n\t}\n\treturn d;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpcwih3emk.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcwih3emk.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1 ],\n \
    \ expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.union(_.intersection(l1, l2));\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp8stpdety.js:3\n\treturn _.union(_.intersection(l1, l2));\n\t^\n\
    \nReferenceError: _ is not defined\n    at common (/tmp/tmp8stpdety.js:3:2)\n\
    \    at test (/tmp/tmp8stpdety.js:10:20)\n    at Object.<anonymous> (/tmp/tmp8stpdety.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var dict ={};\n    var commonList = [];\n    for(var i=0; i<l1.length;\
    \ i++){\n        dict[l1[i]] = 1;\n    }\n    for(var i=0; i<l2.length; i++){\n\
    \        if(dict[l2[i]] === 1){\n            commonList.push(l2[i]);\n       \
    \     dict[l2[i]] = 0;\n        }\n    }\n    return commonList.sort();\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var sortedL1 = l1.sort(function(a, b){return a-b});\n    var sortedL2\
    \ = l2.sort(function(a, b){return a-b});\n    var curr1 = 0;\n    var curr2 =\
    \ 0;\n    var common = [];\n    while (curr1 < sortedL1.length && curr2 < sortedL2.length){\n\
    \        if (sortedL1[curr1] < sortedL2[curr2]){\n            curr1++;\n     \
    \   }\n        else if (sortedL1[curr1] > sortedL2[curr2]){\n            curr2++;\n\
    \        }\n        else{\n            if (common.length === 0 || common[common.length-1]\
    \ !== sortedL1[curr1]){\n                common.push(sortedL1[curr1]);\n     \
    \       }\n            curr1++;\n            curr2++;\n        }\n    }\n    return\
    \ common;\n}\n\nmodule.exports = {\n    'filterMap': filterMap,\n    'common':\
    \ common\n};\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2,\
    \ 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmprsr1iu7c.js:27\n    'filterMap': filterMap,\n                 ^\n\
    \nReferenceError: filterMap is not defined\n    at Object.<anonymous> (/tmp/tmprsr1iu7c.js:27:18)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(n) {\n    return l2.indexOf(n) !== -1;\n \
    \ }).sort(function(a, b) {\n    return a - b;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l = l1.filter(function(n) {\n    return l2.indexOf(n) !== -1;\n\
    \  });\n  return l.sort(function(a, b){return a-b}).filter(function(elem, pos,\
    \ arr) {\n    return arr.indexOf(elem) == pos;\n  });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return Array.from(new Set(l1.filter(value => l2.includes(value))));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmps6e8ros6.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmps6e8ros6.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var s = [];\n    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ >= 0){\n            s.push(l1[i]);\n        }\n    }\n    return unique(s).sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfudf4k3a.js:9\n    return unique(s).sort();\n    ^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpfudf4k3a.js:9:5)\n    at test\
    \ (/tmp/tmpfudf4k3a.js:17:20)\n    at Object.<anonymous> (/tmp/tmpfudf4k3a.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn l1.filter(val => l2.includes(val)).sort().filter((item, i, arr)\
    \ => !i || item !== arr[i-1]);\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var sorted1 = l1.sort();\n  var sorted2 = l2.sort();\n  var l3 = [];\n\
    \  var a = 0;\n  var b = 0;\n  while (a < sorted1.length && b < sorted2.length){\n\
    \    if (sorted1[a] === sorted2[b]){\n      l3.push(sorted1[a]);\n      a++;\n\
    \      b++;\n    } else if (sorted1[a] < sorted2[b]){\n      a++;\n    } else\
    \ {\n      b++;\n    }\n  }\n  return l3;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpa6bbl_6_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa6bbl_6_.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(x => l2.includes(x)).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn _.union(_.intersection(l1, l2));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpdv_7krty.js:3\n\treturn _.union(_.intersection(l1, l2));\n\t^\n\
    \nReferenceError: _ is not defined\n    at common (/tmp/tmpdv_7krty.js:3:2)\n\
    \    at test (/tmp/tmpdv_7krty.js:11:20)\n    at Object.<anonymous> (/tmp/tmpdv_7krty.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn(unique(l1.concat(l2)));\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpo3z1ia9t.js:3\n\treturn(unique(l1.concat(l2)));\n\t^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpo3z1ia9t.js:3:2)\n    at test\
    \ (/tmp/tmpo3z1ia9t.js:10:20)\n    at Object.<anonymous> (/tmp/tmpo3z1ia9t.js:16:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.intersection(l1, l2);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp6q_7yy5w.js:3\n  return _.intersection(l1, l2);\n  ^\n\nReferenceError:\
    \ _ is not defined\n    at common (/tmp/tmp6q_7yy5w.js:3:3)\n    at test (/tmp/tmp6q_7yy5w.js:11:20)\n\
    \    at Object.<anonymous> (/tmp/tmp6q_7yy5w.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var result = new Set();\n    l1.forEach(function(item){\n        if(l2.includes(item)){\n\
    \            result.add(item);\n        }\n    });\n    return Array.from(result).sort();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    l1 = sort(l1);\n    l2 = sort(l2);\n    var i = 0;\n    var j = 0;\n\
    \    var result = [];\n    while(i < l1.length && j < l2.length){\n        if(l1[i]\
    \ == l2[j]){\n            result.push(l1[i]);\n            i++;\n            j++;\n\
    \        }else if(l1[i] < l2[j]){\n            i++;\n        }else{\n        \
    \    j++;\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpbboxqqfd.js:3\n    l1 = sort(l1);\n    ^\n\nReferenceError: sort\
    \ is not defined\n    at common (/tmp/tmpbboxqqfd.js:3:5)\n    at test (/tmp/tmpbboxqqfd.js:27:20)\n\
    \    at Object.<anonymous> (/tmp/tmpbboxqqfd.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(value){\n    return l2.indexOf(value) != -1\n\
    \  }).sort().filter(function(value, index, list){\n    return list.indexOf(value)\
    \ == index\n  })\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var i = 0, j = 0, k = 0, result = [], temp = [];\n  while(i < l1.length\
    \ && j < l2.length){\n    if(l1[i] < l2[j]){\n      i++;\n    }\n    else if(l1[i]\
    \ > l2[j]){\n      j++;\n    }\n    else{\n      if(temp.indexOf(l1[i]) === -1){\n\
    \        temp.push(l1[i]);\n        result[k++] = l1[i];\n      }\n      i++;\n\
    \      j++;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp_2urvrh8.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_2urvrh8.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\t//order the two lists\n\tl1 = qsort(l1);\n\tl2 = qsort(l2);\n\t//console.log(l1);\n\
    \t//console.log(l2);\n\t\n\t//Find common elements.\n\tvar len1 = l1.length;\n\
    \tvar len2 = l2.length;\n\tvar i = 0;\n\tvar j = 0;\n\tvar common = [];\n\twhile\
    \ (i < len1 && j < len2){\n\t\tif (l1[i] == l2[j]){\n\t\t\tcommon.push(l1[i]);\n\
    \t\t\ti++;\n\t\t\tj++;\n\t\t} else if (l1[i] < l2[j]){\n\t\t\ti++;\n\t\t} else\
    \ if (l1[i] > l2[j]){\n\t\t\tj++;\n\t\t}\n\t}\n\treturn common;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp0dcggjde.js:4\n\tl1 = qsort(l1);\n\t^\n\nReferenceError: qsort\
    \ is not defined\n    at common (/tmp/tmp0dcggjde.js:4:2)\n    at test (/tmp/tmp0dcggjde.js:34:20)\n\
    \    at Object.<anonymous> (/tmp/tmp0dcggjde.js:40:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  if (l1.length == 0 || l2.length == 0) return []\n  var output = [];\n\
    \  var pos1 = 0, pos2 = 0;\n  while (pos1 < l1.length && pos2 < l2.length){\n\
    \    var comp = compare(l1[pos1], l2[pos2]);\n    if (comp === 0){\n      output.push(l1[pos1]);\n\
    \      pos1++;\n      pos2++;\n    } else if (comp < 0){\n      pos1++;\n    }\
    \ else {\n      pos2++;\n    }\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpldqgpor4.js:7\n    var comp = compare(l1[pos1], l2[pos2]);\n  \
    \             ^\n\nReferenceError: compare is not defined\n    at common (/tmp/tmpldqgpor4.js:7:16)\n\
    \    at test (/tmp/tmpldqgpor4.js:26:20)\n    at Object.<anonymous> (/tmp/tmpldqgpor4.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var unique = unique(l1);\n  var common = [];\n  for(var i = 0; i < unique.length;\
    \ i++){\n    for(var j = 0; j < l2.length; j++){\n      if(unique[i] === l2[j]){\n\
    \        common.push(unique[i]);\n      }\n    }\n  }\n  return common;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpnpgru0qt.js:3\n  var unique = unique(l1);\n               ^\n\n\
    TypeError: unique is not a function\n    at common (/tmp/tmpnpgru0qt.js:3:16)\n\
    \    at test (/tmp/tmpnpgru0qt.js:20:20)\n    at Object.<anonymous> (/tmp/tmpnpgru0qt.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn unique(sort(l1.concat(l2)));\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpyb_47ps1.js:3\n\treturn unique(sort(l1.concat(l2)));\n\t^\n\nReferenceError:\
    \ unique is not defined\n    at common (/tmp/tmpyb_47ps1.js:3:2)\n    at test\
    \ (/tmp/tmpyb_47ps1.js:11:20)\n    at Object.<anonymous> (/tmp/tmpyb_47ps1.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.concat(l2).filter(function(item, pos, self) {\n    return\
    \ self.indexOf(item) == pos;\n  }).sort(function(a, b){\n    return a-b;\n  });\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5,\n  7,\n  9,\n  34,\n  121,\n  653\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpl6kkk3nd.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl6kkk3nd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2,  3,   4,   5,\n    7, 9, 34, 121, 653\n  ],\n  expected: [ 1, 5, 653 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var l3 = [];\n  for(var i=0; i<l1.length; i++){\n    if(l2.indexOf(l1[i])\
    \ != -1 && l3.indexOf(l1[i]) == -1){\n      l3.push(l1[i]);\n    }\n  }\n  return\
    \ l3.sort();\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(num){\n    return l2.indexOf(num) !== -1;\n\
    \  }).sort(function(a, b){\n    return a - b;\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tvar a1 = l1.split(\",\");\n\tvar a2 = l2.split(\",\");\n\tvar a3 = a1.concat(a2);\n\
    \tvar a4 = a3.sort();\n\tvar a5 = [];\n\tvar a6 = [];\n\tfor (var i = 0; i < a4.length;\
    \ i++) {\n\t\tif (a4[i] !== a4[i + 1] && a4[i] !== a4[i - 1]) {\n\t\t\ta5.push(a4[i]);\n\
    \t\t}\n\t}\n\ta5.sort(function(a, b){return a-b});\n\tfor (var j = 0; j < a5.length;\
    \ j++) {\n\t\ta6.push(parseInt(a5[j]));\n\t}\n\treturn a6;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpopcftlh7.js:3\n\tvar a1 = l1.split(\",\");\n\t            ^\n\n\
    TypeError: l1.split is not a function\n    at common (/tmp/tmpopcftlh7.js:3:14)\n\
    \    at test (/tmp/tmpopcftlh7.js:26:20)\n    at Object.<anonymous> (/tmp/tmpopcftlh7.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let temp1 = [...l1];\n    let temp2 = [...l2];\n    let result = temp1.filter(v\
    \ => temp2.includes(v));\n    return [...new Set(result)];\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653,\n\
    \  5\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp4wlp6xv4.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4wlp6xv4.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653,\
    \ 5 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return _.sortBy(_.uniq(_.intersection(l1, l2)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpb8rnfqiw.js:3\n    return _.sortBy(_.uniq(_.intersection(l1, l2)));\n\
    \    ^\n\nReferenceError: _ is not defined\n    at common (/tmp/tmpb8rnfqiw.js:3:5)\n\
    \    at test (/tmp/tmpb8rnfqiw.js:11:20)\n    at Object.<anonymous> (/tmp/tmpb8rnfqiw.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  //Code here.\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp9qa6rw7r.js:11:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9qa6rw7r.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var l = [...new Set(l1)].filter(x => new Set(l2).has(x));\n    return\
    \ l.sort((a, b) => a - b);\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var ret = [];\n  for(var i = 0; i < l1.length; i++){\n    for(var j\
    \ = 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        ret.push(l1[i]);\n\
    \      }\n    }\n  }\n  return _.uniq(ret).sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpybtvitnd.js:11\n  return _.uniq(ret).sort();\n  ^\n\nReferenceError:\
    \ _ is not defined\n    at common (/tmp/tmpybtvitnd.js:11:3)\n    at test (/tmp/tmpybtvitnd.js:19:20)\n\
    \    at Object.<anonymous> (/tmp/tmpybtvitnd.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var set = new Set(l1.concat(l2));\n    return Array.from(set).sort(function(a,\
    \ b){\n        return a - b;\n    });\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5,\n  7,\n  9,\n  34,\n  121,\n  653\n]\n\nshould loosely deep-equal\n\
    \n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmp7qzo2_65.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp7qzo2_65.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \ 2,  3,   4,   5,\n    7, 9, 34, 121, 653\n  ],\n  expected: [ 1, 5, 653 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let l = [];\n  for(let i = 0; i < l1.length; i++){\n    for(let j =\
    \ 0; j < l2.length; j++){\n      if(l1[i] === l2[j]){\n        l.push(l1[i]);\n\
    \      }\n    }\n  }\n  return l.sort((a, b) => a - b);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  5,\n  653\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at\
    \ test (/tmp/tmph2z3i9a5.js:18:10)\n    at Object.<anonymous> (/tmp/tmph2z3i9a5.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 5,\
    \ 653 ],\n  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  let common_list = []\n  for(let i = 0; i < l1.length; i++){\n    if(l2.includes(l1[i])\
    \ && !common_list.includes(l1[i])){\n      common_list.push(l1[i])\n    }\n  }\n\
    \  return common_list.sort()\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return unique(l1.filter(x => l2.includes(x)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmn9d3b5x.js:3\n    return unique(l1.filter(x => l2.includes(x)));\n\
    \    ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmpmn9d3b5x.js:3:5)\n\
    \    at test (/tmp/tmpmn9d3b5x.js:11:20)\n    at Object.<anonymous> (/tmp/tmpmn9d3b5x.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(function(item){\n    return l2.indexOf(item) >= 0;\n\
    \  }).sort().filter(function(item, index, a){\n    return a.indexOf(item) ===\
    \ index;\n  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653,\
    \ 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\treturn (l1.concat(l2)).sort().filter(function(value, index, arr){\n\t\
    \treturn (value == arr[index+1] && value != arr[index-1]);\n\t});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var count1 = count(l1);\n    var count2 = count(l2);\n    var common\
    \ = [];\n    for(var k in count1){\n        if(count2[k]){\n            common.push(parseInt(k));\n\
    \        }\n    }\n    return common.sort(function(a, b){return a-b});\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpughree16.js:3\n    var count1 = count(l1);\n                 ^\n\
    \nReferenceError: count is not defined\n    at common (/tmp/tmpughree16.js:3:18)\n\
    \    at test (/tmp/tmpughree16.js:18:20)\n    at Object.<anonymous> (/tmp/tmpughree16.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    let i = 0;\n    let j = 0;\n    let l3 = [];\n    while(i < l1.length\
    \ && j < l2.length){\n        if(l1[i] === l2[j]){\n            l3.push(l1[i]);\n\
    \            i++;\n            j++;\n        }\n        else if(l1[i] < l2[j]){\n\
    \            i++;\n        }\n        else{\n            j++;\n        }\n   \
    \ }\n    return l3;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3,\
    \ 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  653\n]\n\n\
    should loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmptem39t3v.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmptem39t3v.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var ret = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   ret.push(l1[i]);\n            }\n        }\n    }\n    ret.sort();\n    var\
    \ uRet = [];\n    for(var i = 0; i < ret.length; i++){\n        if(ret[i] != ret[i-1]){\n\
    \            uRet.push(ret[i]);\n        }\n    }\n    return uRet;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return unique(unique(l1).filter(value => unique(l2).includes(value)));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3h02lksk.js:3\n  return unique(unique(l1).filter(value => unique(l2).includes(value)));\n\
    \  ^\n\nReferenceError: unique is not defined\n    at common (/tmp/tmp3h02lksk.js:3:3)\n\
    \    at test (/tmp/tmp3h02lksk.js:11:20)\n    at Object.<anonymous> (/tmp/tmp3h02lksk.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.sortBy(_.uniq(_.intersection(l1, l2)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2t4dy3va.js:3\n  return _.sortBy(_.uniq(_.intersection(l1, l2)));\n\
    \  ^\n\nReferenceError: _ is not defined\n    at common (/tmp/tmp2t4dy3va.js:3:3)\n\
    \    at test (/tmp/tmp2t4dy3va.js:11:20)\n    at Object.<anonymous> (/tmp/tmp2t4dy3va.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821337
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    if(isEmpty(l1) || isEmpty(l2))\n        return null;\n    var l3 =\
    \ [];\n    var c1 = 0;\n    var c2 = 0;\n    while(c1 < l1.length && c2 < l2.length){\n\
    \        if(l1[c1] === l2[c2]){\n            l3.push(l1[c1]);\n            c1++;\n\
    \            c2++;\n        }\n        else if(l1[c1] < l2[c2])\n            c1++;\n\
    \        else\n            c2++;\n    }\n    return l3;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmp8_rk1q7y.js:3\n    if(isEmpty(l1) || isEmpty(l2))\n    ^\n\nReferenceError:\
    \ isEmpty is not defined\n    at common (/tmp/tmp8_rk1q7y.js:3:5)\n    at test\
    \ (/tmp/tmp8_rk1q7y.js:27:20)\n    at Object.<anonymous> (/tmp/tmp8_rk1q7y.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var lookup = {};\n  var result = [];\n  for(var i = 0; i < l1.length;\
    \ i++){\n    lookup[l1[i]] = 1;\n  }\n  for(var i = 0; i < l2.length; i++){\n\
    \    if(lookup[l2[i]] === 1){\n      result.push(l2[i]);\n      lookup[l2[i]]\
    \ = 2;\n    }\n  }\n  return result.sort(function(a, b){return a - b;});\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return sortedUnique(l1.filter(e => l2.includes(e)));\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyf6onqmj.js:3\n  return sortedUnique(l1.filter(e => l2.includes(e)));\n\
    \  ^\n\nReferenceError: sortedUnique is not defined\n    at common (/tmp/tmpyf6onqmj.js:3:3)\n\
    \    at test (/tmp/tmpyf6onqmj.js:11:20)\n    at Object.<anonymous> (/tmp/tmpyf6onqmj.js:17:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n\tl1 = l1.sort();\n\tl2 = l2.sort();\n\tvar i = 0;\n\tvar j = 0;\n\tvar\
    \ result = [];\n\tvar prev;\n\twhile (i < l1.length && j < l2.length){\n\t\tif\
    \ (l1[i] == l2[j]){\n\t\t\tif (prev != l1[i]){\n\t\t\t\tresult.push(l1[i]);\n\t\
    \t\t\tprev = l1[i];\n\t\t\t}\n\t\t\ti++;\n\t\t\tj++;\n\t\t} else if (l1[i] < l2[j]){\n\
    \t\t\ti++;\n\t\t} else {\n\t\t\tj++;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  653\n\
    ]\n\nshould loosely deep-equal\n\n[\n  1,\n  5,\n  653\n]\n    at test (/tmp/tmpnmte48az.js:31:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnmte48az.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 653 ],\n\
    \  expected: [ 1, 5, 653 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return l1.filter(v => l2.includes(v)).sort((a, b) => a - b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    var temp = [];\n    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ > -1 && temp.indexOf(l1[i]) == -1){\n            temp.push(l1[i]);\n       \
    \ }\n    }\n    return temp.sort();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  var map = {};\n  var res = [];\n  if (l1 === null || l2 === null) {\n\
    \    return res;\n  }\n  var curr1 = l1;\n  var curr2 = l2;\n  while (curr1 !==\
    \ null) {\n    map[curr1.data] = curr1.data;\n    curr1 = curr1.next;\n  }\n \
    \ while (curr2 !== null) {\n    if (map[curr2.data] !== undefined) {\n      res.push(curr2.data);\n\
    \    }\n    curr2 = curr2.next;\n  }\n  return res.sort();\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = common;\n\
    \  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1,\
    \ 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4,\
    \ 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8],\
    \ []),[]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp4eiwh_j7.js:11\n    map[curr1.data] = curr1.data;\n           \
    \   ^\n\nTypeError: Cannot read properties of undefined (reading 'data')\n   \
    \ at common (/tmp/tmp4eiwh_j7.js:11:15)\n    at test (/tmp/tmp4eiwh_j7.js:28:20)\n\
    \    at Object.<anonymous> (/tmp/tmp4eiwh_j7.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 1
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n  return _.uniq(sort(l1, l2));\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1,\
    \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
    \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
    \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\n\
    test();"
  status: ReferenceError
  stderr: "/tmp/tmpv2s5z0tq.js:3\n  return _.uniq(sort(l1, l2));\n  ^\n\nReferenceError:\
    \ _ is not defined\n    at common (/tmp/tmpv2s5z0tq.js:3:3)\n    at test (/tmp/tmpv2s5z0tq.js:10:20)\n\
    \    at Object.<anonymous> (/tmp/tmpv2s5z0tq.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659821338
- exit_code: 0
  program: "//Return sorted unique common elements for two lists.\nfunction common(l1,\
    \ l2){\n    return l1.filter(l => l2.includes(l)).sort((a, b) => a - b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1,\
    \ 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3,\
    \ 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n\
    \  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821338

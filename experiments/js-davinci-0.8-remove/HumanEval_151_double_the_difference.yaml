name: HumanEval_151_double_the_difference
language: js
prompt: "//Given a list of numbers, return the sum of squares of the numbers\n// in\
  \ the list that are odd. Ignore numbers that are negative or not integers.\n// If\
  \ the input list is empty, return 0.\nfunction double_the_difference(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5,\
  \ 4]),25);\n  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10,\
  \ -20, -30]),0);\n  assert.deepEqual(candidate([-1, -2, 8]),0);\n  assert.deepEqual(candidate([0.2,\
  \ 3, 5]),34);\n  assert.deepEqual(candidate([-9, -7, -5, -3, -1, 1, 3, 5, 7, 9]),165);\n\
  }\n\ntest();"
completions: ["    // Your code here\n    if(lst.length == 0){\n        return 0;\n\
    \    }\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 2 == 1){\n\
    \            lst[i] = Math.pow(lst[i], 2);\n        }\n        else{\n       \
    \     lst[i] = 0;\n        }\n    }\n    return lst.reduce((acc, val) => acc +\
    \ val);\n}\n", "    //YOUR CODE HERE\n    var sum_squares = 0;\n    for (var i\
    \ = 0; i < lst.length; i++){\n        if (typeof lst[i] === \"number\" && lst[i]\
    \ >= 0 && lst[i] % 2 === 1){\n            sum_squares += lst[i] * lst[i];\n  \
    \      }\n    }\n    return sum_squares;\n}", "    var maxValue = Math.max.apply(null,\
    \ lst);\n    var minValue = Math.min.apply(null, lst);\n    var result = (maxValue\
    \ - minValue) * 2;\n    return result;\n}", "    let sum = 0;\n    for(let i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] % 2 !== 0){\n            sum +=\
    \ lst[i] ** 2;\n        }\n    }\n    return sum;\n}", "  var result = [];\n \
    \ var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    var num = lst[i];\n\
    \    if(num % 2 == 1){\n      result.push(num * num);\n    }\n  }\n  for(var i\
    \ = 0; i < result.length; i++){\n    sum += result[i];\n  }\n  return sum;\n}\n",
  "  if(lst.length==0){\n    return 0;\n  }\n  var i;\n  var s=0;\n  for(i=0;i<lst.length;i++){\n\
    \    if(isOdd(lst[i]) && isInt(lst[i])){\n      s+=lst[i]*lst[i];\n    }\n  }\n\
    \  return s;\n}\n", "  var nums = lst.map(function(a){\n    if(a % 2 === 0){\n\
    \      return 0;\n    }\n    else if(typeof a != 'number'){\n      return 0;\n\
    \    }\n    else if(a < 0){\n      return 0;\n    }\n    else{\n      return a\
    \ * a;\n    }\n  });\n  var sum = nums.reduce(function(a, b){\n    return a +\
    \ b;\n  });\n  return sum;\n}\n", "    var diff = Math.abs(lst[0] - lst[1]);\n\
    \    return diff*2;\n}\n", "    if(lst.length == 0){\n        return 0;\n    }\n\
    \    var odds_squared = [];\n    var sum = 0;\n    for(i = 0; i < lst.length;\
    \ i++){\n        if((lst[i] % 2) != 0 && lst[i] > 0 && lst[i] % 1 == 0){\n   \
    \         sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n}\n", "    let\
    \ nlst = [];\n    let returnSum = 0;\n    for(let i=0; i<lst.length; i++){\n \
    \       if(lst[i]%2!=0 && lst[i]>0){\n            nlst.push(lst[i]*lst[i]);\n\
    \        }\n    }\n    for(let i=0; i<nlst.length; i++){\n        returnSum+=nlst[i];\n\
    \    }\n    return returnSum;\n}\n", "\tif(lst.length == 0){\n\t\treturn 0;\n\t\
    }\n\tvar total = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif(is_integer(lst[i])\
    \ && lst[i] >= 0 && lst[i] % 2 == 1){\n\t\t\ttotal += lst[i] * lst[i];\n\t\t}\n\
    \t}\n\treturn total;\n}\n\n", "\tfor(i=0; i<lst.length; i++){\n\t\tif(lst[i]%2===0){\n\
    \t\t\tlst[i]=lst[i]*2;\n\t\t}\n\t}\n\treturn lst;\n}\n\n", "  let lst_doubled\
    \ = lst.map(x => x * 2);\n  let lst_diff = [];\n  lst_doubled.map((x, idx) =>\
    \ lst_diff.push(x - lst[idx]));\n  return lst_diff;\n}\n", "    var nums = []\n\
    \    for (i=0; i<lst.length; i++){\n        if (typeof lst[i] == \"number\" &&\
    \ lst[i] > 0 && lst[i]%1 === 0) {\n            nums.push(lst[i])\n        }\n\
    \    }\n    var sum = 0\n    var diffs = []\n    for (i=0; i<nums.length; i++){\n\
    \        if (i != nums.length-1){\n            diffs.push(nums[i+1]-nums[i])\n\
    \        }\n    }\n    for (i=0; i<diffs.length; i++){\n        sum += diffs[i]\n\
    \    }\n    return sum\n}\n", "\tvar sum = 0;\n\tfor(var i = 0; i < lst.length;\
    \ i++){\n\t\tif(typeof lst[i] == \"number\" && lst[i] >= 0 && lst[i] % 2 !== 0){\n\
    \t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;\n}\n", "    var sum =\
    \ 0;\n    var counter = 0;\n    while (counter < lst.length){\n        if (lst[counter]\
    \ % 2 == 1){\n            sum += (lst[counter] * lst[counter]);\n        }\n \
    \       counter += 1;\n    }\n    return sum;\n}\n", "    //If lst is an empty\
    \ list, return 0.\n    if (lst.length === 0){\n        return 0;\n    }\n    //If\
    \ lst is not an empty list:\n    else{\n        //Create an array variable called\
    \ lst_of_squares. Set it equal to the result of calling the squares_of_odd_elems\
    \ function on lst.\n        var lst_of_squares = squares_of_odd_elems(lst);\n\
    \        //Create a variable called sum_of_squares and set it equal to the result\
    \ of calling the sum_of_elems function on lst_of_squares.\n        var sum_of_squares\
    \ = sum_of_elems(lst_of_squares);\n        //Return the result of calling the\
    \ square_of_sum function on sum_of_squares.\n        return square_of_sum(sum_of_squares);\n\
    \    }\n}\n", "    double = []\n    for (var i = 0; i < lst.length; i++) {\n \
    \       if(lst[i] > i) {\n            double.push(lst[i])\n        }\n    }\n\
    \    return double\n}", "    var x = 0;\n    var y = 0;\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i] % 2 == 0){\n            x = x + lst[i];\n\
    \        }\n        else{\n            y = y + lst[i];\n        }\n    }\n   \
    \ return 2 * (x - y);\n}\n", "    var max = Math.max(...lst);\n    var min = Math.min(...lst);\n\
    \    return 2 * (max - min);\n}\n\n", "\tconst sum_odd = Math.pow(add_odd(lst),\
    \ 2);\n\tconst sum_total = Math.pow(add_all(lst), 2);\n\treturn (sum_total - sum_odd);\n\
    }", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(isNaN(lst[i])\
    \ || lst[i] < 0 || !Number.isInteger(lst[i])){\n            continue;\n      \
    \  }\n        if(lst[i] % 2 === 1){\n            sum += lst[i] ** 2;\n       \
    \ }\n    }\n    return sum;\n}\n\n", "    var sum = 0;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] % 2 === 1 || lst[i] % 2 === -1){\n    \
    \        sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n", " \
    \ var new_list = []\n  var difference = 0\n  for (var i = 0; i < lst.length; i++){\n\
    \    for (var j = 0; j < lst.length; j++){\n      difference = lst[i] - lst[j]\n\
    \      if (i != j){\n        new_list.push(difference * 2)\n      }\n    }\n \
    \ }\n  return new_list\n}", "  var total = 0;\n  for (var i = 0; i < lst.length;\
    \ i++){\n    if (typeof lst[i] === \"number\" && lst[i] > 0 && lst[i] % 2 !==\
    \ 0){\n      total += lst[i] * lst[i];\n    }\n  }\n  return total;\n}\n\n", "var\
    \ a=0\nvar b=0\nfor(var i=0;i<lst.length;i++){\nif(typeof lst[i]=='number' &&\
    \ lst[i]%2!=0 && lst[i]>=0){\n  a=a+lst[i]\n}\nif(typeof lst[i]=='number' && lst[i]%2==0\
    \ && lst[i]>=0){\n  b=b+lst[i]\n}\n}\nreturn 2*(a-b)\n}\n", "\tvar result = [];\n\
    \tfor(var i = 0; i < lst.length; i++){\n\t\tvar item = lst[i];\n\t\tvar square\
    \ = item * item;\n\t\tresult.push(square);\n\t}\n\treturn result;\n}\n\n\n", " \
    \   function double_the_difference_helper(lst){\n        if(lst.length==0){\n\
    \            return(0);\n        }\n        else{\n            if(lst[0]%2==0){\n\
    \                return(double_the_difference_helper(lst.slice(1)));\n       \
    \     }\n            else{\n                return(Math.pow(lst[0],2)+double_the_difference_helper(lst.slice(1)));\n\
    \            }\n        }\n    }\n    return(double_the_difference_helper(lst));\n\
    }", "\tlet odd_squares = lst.filter(function(x){return x % 2 == 1 && Math.floor(x)\
    \ == x}).map(function(x){return x*x});\n\tlet total = 0;\n\tfor(let i in odd_squares){\n\
    \t\ttotal += odd_squares[i];\n\t}\n\treturn total;\n}\n", "  var diff=Math.abs(Math.max(...lst)-Math.min(...lst));\n\
    \  return 2*diff;\n}\n", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n\
    \    if(lst[i] % 2 != 0 && typeof lst[i] == \"number\" && lst[i] > 0){\n     \
    \ sum += lst[i]*lst[i];\n    }\n  }\n  return sum;\n}\n", "  let sum = 0;\n  let\
    \ odd_sum = 0;\n  for (let i = 0; i < lst.length; i++){\n    if (lst[i] > 0 &&\
    \ lst[i] % 1 === 0){\n      sum += lst[i];\n      if (lst[i] % 2 !== 0){\n   \
    \     odd_sum += lst[i] ** 2;\n      }\n    }\n  }\n  return (sum ** 2) - odd_sum;\n\
    }\n", "  var square_sum = 0;\n  for (i=0; i<lst.length; i++){\n    if (lst[i]%2!=0){\n\
    \      square_sum = square_sum + (lst[i]*lst[i]);\n    }\n  }\n  return square_sum;\n\
    }\n\n", "    if (lst.length == 0){\n        return 0;\n    }\n    else {\n   \
    \     var sum = 0;\n        for (var i = 0; i < lst.length; i++){\n          \
    \  if (lst[i] % 2 != 0){\n                sum += lst[i] * lst[i];\n          \
    \  }\n        }\n        return sum;\n    }\n}\n", "\tfor(var i = 0; i < lst.length;\
    \ i++){\n\t\tvar num = lst[i];\n\t\tif(!is_odd(num)){\n\t\t\tlst[i] = num * 2;\n\
    \t\t}\n\t}\n\treturn lst;\n}\n", "    var x = lst.filter(number => number % 2\
    \ != 0);\n    return x.reduce((a, b) => a + b, 0);\n}\n", "    var even_list =\
    \ [];\n    var odd_list = [];\n    var even = 0;\n    var odd = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 == 0){\n            even_list.push(lst[i]);\n\
    \        }\n        else{\n            odd_list.push(lst[i]);\n        }\n   \
    \ }\n    for(var i = 0; i < even_list.length; i++){\n        even += even_list[i];\n\
    \    }\n    for(var i = 0; i < odd_list.length; i++){\n        odd += odd_list[i];\n\
    \    }\n    return (even - odd) * 2;\n}\n", "var sum = 0;\nfor (var i = 0; i <\
    \ lst.length; i++){\n  if (lst[i] % 2 == 1){\n    sum += lst[i] * lst[i];\n  }\n\
    }\nreturn sum;\n}", "    // if the list is empty return 0\n    if (lst.length\
    \ < 1){\n        return 0;\n    }\n    // let sum = 0;\n    let new_list = [];\n\
    \    for (let i = 0; i < lst.length; i++){\n        // if the number is not an\
    \ integer or negative, then ignore it\n        if ((Number.isInteger(lst[i]) ==\
    \ false) || (lst[i] < 0)){\n            continue;\n        }\n        // if the\
    \ number is odd then square it and add it to the list\n        if (lst[i] % 2\
    \ == 1){\n            new_list.push(lst[i]**2);\n        }\n    }\n    // return\
    \ the sum of the list\n    return sum(new_list);\n}\n", "  lst = lst.map(function(a){return\
    \ a*a;});\n  var sum=0;\n  for(var i=0;i<lst.length;i++){\n    if(lst[i]%2!=0){\n\
    \      sum=sum+lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum = 0;\n \
    \   for(var i = 0; i < lst.length; i++){\n        if(typeof lst[i] === \"number\"\
    \ && lst[i] % 2 === 1){\n            sum += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum;\n}\n", "    return (lst.reduce((total, num) => total +\
    \ (num * num), 0));\n}\n", "    var diff = lst[0] - lst[lst.length-1];\n    return\
    \ 2*diff;\n}\n", "    var lst = [1,2,3,4,5];\n    var odd = [];\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(lst[i] % 2 !== 0){\n            odd.push(lst[i]\
    \ * lst[i]);\n        }\n    }\n    var sum = 0;\n    for(var j = 0; j < odd.length;\
    \ j++){\n        sum += odd[j];\n    }\n    return sum;\n}\n", "  var sum = 0;\n\
    \  for(var i = 0; i < lst.length; i++){\n    if(Math.abs(lst[i]) % 2 == 1 && Number.isInteger(lst[i])){\n\
    \      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "    //vars\n\
    \    var sum_pos = 0;\n    var sum_neg = 0;\n    var total_sum = 0;\n    var difference\
    \ = 0;\n    //Sum of positive numbers\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > 0){\n            sum_pos += lst[i];\n        }\n    }\n \
    \   //Sum of negative numbers\n    for(var x = 0; x < lst.length; x++){\n    \
    \    if(lst[x] < 0){\n            sum_neg += lst[x];\n        }\n    }\n    //total\
    \ of all numbers\n    total_sum = sum_pos + sum_neg;\n    //Difference\n    difference\
    \ = sum_pos - sum_neg;\n    //Double the difference\n    var double_difference\
    \ = difference * 2;\n    //Output\n    return double_difference;\n}", "  let sq\
    \ = [];\n  let odd = [];\n  lst.forEach(function(num){\n    if (num % 2 != 0){\n\
    \      odd.push(num);\n    }\n  });\n  if (odd.length == 0){\n    return 0;\n\
    \  }\n  odd.forEach(function(num){\n    sq.push(num * num);\n  });\n  return sq.reduce(function(a,\
    \ b){return a + b;}, 0);\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(!Number.isInteger(lst[i]) || lst[i] < 0){\n            continue;\n\
    \        }\n        if(lst[i] % 2 === 1){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n", "    let sum = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] % 2 == 1){\n            sum += lst[i]\
    \ ** 2;\n        }\n    }\n    return sum;\n}", "  return 2*lst.reduce((acc, item)\
    \ => acc += item*item, 0);\n}\n", "  let sum = 0;\n  for(let elem of lst){\n \
    \   if(Number.isInteger(elem) && elem >= 0){\n      if(elem % 2 == 1){\n     \
    \   sum += elem*elem;\n      }\n    }\n  }\n  return sum;\n}", "    //creating\
    \ an empty variable for diff\n    var diff = 0;\n    //loop through the list\n\
    \    for(var i = 0; i < lst.length; i++){\n        //if the value is a integer\
    \ (whole number) and greater than 0\n        if (Number.isInteger(lst[i]) && lst[i]\
    \ > 0){\n            //get the sum of diff so far and the square of lst[i]\n \
    \           diff += lst[i] ** 2;\n        }\n    }\n    //returns the sum of squares\
    \ of the numbers in the list that are odd\n    return diff;\n}\n", "    return\
    \ lst\n}", "    var even_sum = 0;\n    var odd_sum = 0;\n    for(var i = 0; i\
    \ < lst.length; i++){\n        if(lst[i]%2 == 0){\n            even_sum += lst[i]*lst[i];\n\
    \        }else{\n            odd_sum += lst[i]*lst[i];\n        }\n    }\n   \
    \ return (even_sum - odd_sum)*2;\n}\n", "  var sum=0;\n  for(var i=0;i<lst.length;i++){\n\
    \    if(lst[i]%2!=0){\n      sum+=lst[i]*lst[i];\n    }\n  }\n  return sum;\n\
    }\n", "    if(!lst.length){\n        return 0;\n    }\n\n    var diff = lst[0]\
    \ - lst[lst.length - 1];\n    var double_diff = diff * 2;\n    return double_diff;\n\
    }\n", "    // your code here\n    if(lst.length == 0){\n        return 0;\n  \
    \  }\n    return (lst[0] + lst[lst.length - 1]) * 2;\n}\n", "    var sum = 0;\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2 != 0){\n    \
    \        sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}", "   \
    \ let double = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 === 0){\n            double.push(lst[i])\n        }\n    }\n    return (Math.max(...double)\
    \ - Math.min(...double)) * 2\n}\n\nlet lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
  "    var max = Math.max(...lst);\n    var min = Math.min(...lst);\n    var diff\
    \ = max - min;\n    var result = diff * 2;\n    return result;\n}\n", "    var\
    \ total = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] % 2\
    \ === 1){\n            total += lst[i]*lst[i];\n        }\n    }\n    return total;\n\
    }\n", "    var total=0;\n    var total2=0;\n    for(var x=0;x<lst.length;x++){\n\
    \        if(typeof lst[x]!==\"number\"){\n            lst.splice(x,1);\n     \
    \       x--;\n        }\n    }\n    for(var x=0;x<lst.length;x++){\n        if(lst[x]>0){\n\
    \            total+=lst[x];\n        }\n    }\n    for(var x=0;x<lst.length;x++){\n\
    \        if(lst[x]<0){\n            total2+=lst[x];\n        }\n    }\n    return\
    \ total*2-total2;\n}\n", "    if(lst.length == 0){\n        return 0;\n    }\n\
    \    else{\n        var sq_array = lst.map(square_number);\n        var sum =\
    \ 0;\n        for(var i = 0; i < sq_array.length; i++){\n            if(sq_array[i]\
    \ % 2 != 0){\n                sum += sq_array[i];\n            }\n        }\n\
    \        return sum;\n    }\n}", "    if (lst.length == 0){\n        return 0;\n\
    \    }\n    else{\n        var num = 0;\n        var res = 0;\n        for (var\
    \ i = 0; i < lst.length; i++){\n            if (Number.isInteger(lst[i]) == true\
    \ && lst[i] > 0){\n                num = lst[i] * lst[i];\n                res\
    \ += num;\n            }\n        }\n        return res;\n    }\n}\n", "    var\
    \ sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(typeof lst[i]\
    \ == \"number\" && lst[i] >= 0){\n            if(lst[i] % 2 == 1){\n         \
    \       sum += Math.pow(lst[i], 2);\n            }\n        }\n    }\n    return\
    \ sum;\n}\n", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(typeof\
    \ lst[i] == \"number\" && lst[i] > 0 && lst[i] % 2 != 0){\n      sum += lst[i]\
    \ * lst[i];\n    }\n  }\n  return sum;\n}\n", "    if(lst.length<=0){\n      \
    \  return 0;\n    }\n    else{\n        let diff_list = lst.map(function(val,i,arr){\n\
    \            if(i==0){\n                return 0;\n            }\n           \
    \ else{\n                return val-arr[i-1];\n            }\n        });\n  \
    \      return diff_list.map(function(val){\n            return val*2;\n      \
    \  });\n    }\n}\n", "    var count = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(typeof lst[i] == \"number\" && lst[i] > 0){\n            count++;\n\
    \        }\n    }\n    if(count == 0){\n        return 0;\n    }\n    else if(count\
    \ % 2 == 0){\n        return 2*(lst[count/2] - lst[count/2 - 1]);\n    }\n   \
    \ else{\n        return 2*(lst[(count-1)/2]);\n    }\n}\n", "var sum=0;\n  for(var\
    \ i=0;i<lst.length;i++){\n    if(((typeof lst[i])==\"number\")&&(lst[i]%2==1)){\n\
    \      sum+=Math.pow(lst[i],2);\n    }\n  }\n  return sum;\n}", "\tvar result\
    \ = 0;\n\tfor(var i = 0; i < lst.length; i++) {\n\t\tif(lst[i] > 0 && lst[i] %\
    \ 2 != 0) {\n\t\t\tresult += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn result;\n\
    }\n", "    // your code here\n    let odd_list = lst.filter(ele => ele % 2 ===\
    \ 1);\n    let square_list = odd_list.map(ele => ele ** 2);\n    let sum = square_list.reduce((a,b)\
    \ => a + b, 0);\n    return sum;\n}\n", "    var sum=0;\n    var diff = 0;\n \
    \   var o_count = 0;\n    for(var i=0; i<lst.length; i++){\n        if(lst[i]%2\
    \ != 0){\n            o_count++;\n            sum = sum + lst[i]*lst[i];\n   \
    \     }\n    }\n    var e_count = lst.length - o_count;\n    diff = e_count -\
    \ o_count;\n    return diff*diff;\n}\n", "    var result = [];\n    for (var i\
    \ = 0; i < lst.length; i++) {\n        result.push(lst[i] * lst[i]);\n    }\n\
    \    return result;\n}\n", "\t// an array of doubles\n\tvar double_array = []\n\
    \tfor (i=0; i<lst.length; i++){\n\t\tdouble_array.push(lst[i]*2)\n\t}\n\t// an\
    \ array of differences\n\tvar diff_array = []\n\tfor (i=0; i<lst.length; i++){\n\
    \t\tdiff_array.push(double_array[i]-lst[i])\n\t}\n\t// the sum of differences\n\
    \tvar sum_diff = 0\n\tfor (i=0; i<lst.length; i++){\n\t\tsum_diff = sum_diff +\
    \ diff_array[i]\n\t}\n\treturn sum_diff\n}\n", "\tvar sum = 0;\n\tfor(var x =\
    \ 0; x < lst.length; x++){\n\t\tif(lst[x] > 0 && lst[x] % 2 == 1){\n\t\t\tsum\
    \ += lst[x]*lst[x];\n\t\t}\n\t}\n\treturn sum;\n}", "  return !isNaN(lst.reduce((acc,\
    \ c) => acc + (c % 2 === 0 ? c ** 2 : 0), 0)) ? lst.reduce((acc, c) => acc + (c\
    \ % 2 === 0 ? c ** 2 : 0), 0) : 0;\n}\n", "    // get the sum of the numbers,\
    \ and double it.\n    var sum = lst.reduce(function(acc, curr){\n        if(curr\
    \ % 2 !== 0){\n            acc = acc + curr;\n        }\n        return acc;\n\
    \    }, 0);\n    return sum * 2;\n}\n", "    var sum = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] % 2 == 1 && lst[i] > 0){\n        \
    \    sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n}\n", "    var\
    \ diff;\n    diff = lst[0] - lst[1];\n    if (diff < 0){\n        diff = diff\
    \ * -1;\n    }\n    return diff * 2;\n}\n", "    var sum = 0;\n    for(var i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] % 2 == 1 && lst[i] > 0){\n     \
    \       sum += Math.pow(lst[i], 2);\n        }\n    }\n    return sum;\n}\n",
  "    var i;\n    var tot=0;\n    for(i=0;i<lst.length;i++){\n        if(lst[i] %\
    \ 2 != 0){\n            tot +=lst[i]*lst[i];\n        }\n    }\n    return tot;\n\
    }\n", "    lst = lst.map(num => Math.pow(num, 2));\n    let result = lst.reduce((acc,\
    \ cur) => acc + cur, 0);\n    return result;\n}", "    var sum=0;\n    var answer\
    \ = 0;\n    if(lst.length==0){\n        return 0;\n    }\n    for(var i=0;i<lst.length;i++){\n\
    \        if(typeof lst[i] == \"number\" && lst[i]>0){\n            sum+=lst[i];\n\
    \        }\n    }\n    answer = sum*2;\n    return answer;\n}\n", "  var sum =\
    \ 0;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] % 2 != 0){\n     \
    \ sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}", "    // YOUR CODE\
    \ HERE\n    if(lst.length == 0){\n        return 0;\n    }\n    var a = lst[0];\n\
    \    var b = lst[1];\n    return (a - b) * (a - b);\n\n}\n", "  var doubles =\
    \ [];\n  var new_lst = [];\n  for (var i = 0; i < lst.length; i++) {\n    if (typeof\
    \ lst[i] == \"number\") {\n      if (lst[i] % 2 == 1) {\n        new_lst.push(lst[i]);\n\
    \      }\n    }\n  }\n  if (new_lst.length > 0) {\n    var min = new_lst[0];\n\
    \    var max = new_lst[0];\n    for (var i = 0; i < new_lst.length; i++) {\n \
    \     if (new_lst[i] < min) {\n        min = new_lst[i];\n      }\n      if (new_lst[i]\
    \ > max) {\n        max = new_lst[i];\n      }\n    }\n    return (max - min)\
    \ * 2;\n  }\n  else {\n    return 0;\n  }\n}", "\treturn lst.reduce((a, b) =>\
    \ a + (b < 0 ? b : 0), 0);\n}\n\n", "    var diff = 0;\n    var sum = 0;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(typeof lst[i] == \"number\"\
    \ && lst[i] >= 0 && lst[i]%1 === 0){\n            if(lst[i]%2 != 0){\n       \
    \         diff += lst[i]**2;\n            }\n            else{\n             \
    \   sum += lst[i];\n            }\n        }\n    }\n    return diff - sum;\n\
    }\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 == 1){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n  \
    \      if (typeof lst[i] === \"number\" && lst[i] % 2 === 1){\n            sum\
    \ += Math.pow(lst[i], 2);\n        }\n    }\n    return sum;\n}", "    var odds\
    \ = [];\n    var num = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ % 2 !== 0){\n            odds.push(lst[i]);\n        }\n    }\n    for(var j\
    \ = 0; j < odds.length; j++){\n        num += odds[j] * odds[j];\n    }\n    return\
    \ num;\n}\n", "    //return (lst) ? lst.map(v => v ** 2).reduce((a,b) => a + b)\
    \ : 0;\n    return (lst) ? lst.map(v => v ** 2).reduce((a,b) => a + b) : 0;\n\
    }\n", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(is_integer(lst[i])\
    \ && lst[i] >= 0){\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n\
    }", "    return Math.abs(lst[0] - lst[1]) * 2;\n}\n", "    return (Math.max(...lst)\
    \ - Math.min(...lst)) * 2;\n  }\n  console.log(double_the_difference([2, 3, 6,\
    \ 3, 4]));\n\n  //Write a function that receives an array of numbers and returns\
    \ the second smallest of them.\n  function second_smallest(lst){\n    lst.sort(function(a,\
    \ b){return a-b});\n    let i = lst[0];\n    while (lst[1] == i){\n      lst.shift();\n\
    \    }\n    return lst[1];\n  }\n  console.log(second_smallest([1, 2, 1, 2, 6,\
    \ 7, 8, 9, 2, 4]));\n\n  //Write a function that takes a list of positive integers,\
    \ and returns the largest integer that does not appear in the list.\n  function\
    \ missing_num(lst){\n    let a = [];\n    let b = Math.max(...lst);\n    for (i\
    \ = 1; i <= b; i++){\n      a.push(i);\n    }\n    return a.filter(x => !lst.includes(x))[0];\n\
    \  }\n  console.log(missing_num([2, 3, 5, 6, 1, 9, 10, 4]));\n\n  //Write a function\
    \ that takes a list of characters and returns the length of the longest substring\
    \ of consecutive equal characters.\n  function largest_equal_substring(lst){\n\
    \    let a = [];\n    let b = lst.join(\"\");\n    let c = \"\";\n    for (i =\
    \ 0; i < b.length; i++){\n      if (b[i] == b[i-1]){\n        c = c + b[i];\n\
    \      }\n      else{\n        c = b[i];\n      }\n      a.push(c);\n    }\n \
    \   a.sort(function(a, b){return b.length - a.length});\n    return a[0].length;\n\
    \  }\n  console.log(largest_equal_substring(['a', 'b', 'b', 'b', 'b', 'b', 'c',\
    \ 'c',", "    sum=0\n    for (var i=0; i<lst.length; i++){\n        if (lst[i]%2\
    \ == 0){\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n", " \
    \ var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(typeof lst[i] ===\
    \ \"number\" && lst[i] > 0 && lst[i] % 2 === 1){\n      sum += lst[i]*lst[i];\n\
    \    }\n  }\n  return sum;\n}\n", "\tlet twice_difference = 2 * (Math.max(...lst)\
    \ - Math.min(...lst));\n\treturn twice_difference;\n}\n", "    var newList = [];\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(typeof lst[i] !== \"number\"\
    ){\n            continue;\n        }\n        if(lst[i] < 0){\n            continue;\n\
    \        }\n        if(lst[i] % 2 == 0){\n            newList.push(lst[i] * 2);\n\
    \        }\n        else{\n            newList.push(lst[i] * 3);\n        }\n\
    \    }\n    return newList;\n}\n", "    var total = 0;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        var n = lst[i];\n        if(n % 2 === 1){\n     \
    \       total += n*n;\n        }\n    }\n    return total;\n}\n\n\n", "    //\
    \ Your code goes here\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i]%2!=0){\n            sum = sum + (lst[i]*lst[i]);\n        }\n\
    \    }\n    return sum;\n}\n", "    if(lst.length == 0){\n        return 0;\n\
    \    }\n    const squared = (x) => x*x;\n    const isOdd = (x) => x%2 !== 0;\n\
    \    const sum = (x,y) => x+y;\n    return lst.filter(isOdd).map(squared).reduce(sum);\n\
    }\n", "\tvar sum = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif(lst[i] %\
    \ 2 === 1){\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;\n}\n", " \
    \ var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] % 2 == 1){\n\
    \      sum += Math.pow(lst[i], 2);\n    }\n  }\n  return sum;\n}\n", "    //TODO\n\
    \    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        var lstitem\
    \ = lst[i];\n        if(lstitem % 2 == 1){\n            sum += lstitem * lstitem;\n\
    \        }\n    }\n    return sum;\n}\n", '// Given a list of numbers lst, return
    a new list that contains the', "    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        var x = Math.pow(lst[i], 2);\n        sum += x;\n    }\n    return\
    \ sum;\n}\n\n\n", "\t//Explain what this function does here\n\tif (lst == null\
    \ || lst.length == 0)\n\t\treturn 0;\n\treturn (Math.pow(lst[0], 2) - 2 * lst[0]\
    \ + 1) + double_the_difference(lst.slice(1));\n}\n", "    let k = 0;\n    for(let\
    \ i=0; i<lst.length; i++){\n        if(lst[i]%2 !== 0){\n            k += (lst[i]*lst[i]);\n\
    \        }\n    }\n    return k;\n}\nlet result = double_the_difference([5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5",
  "  var sum_the_list = lst.map(function(x){\n    if (x % 2 != 0){\n      x = Math.pow(x,\
    \ 2);\n    }\n    else{\n      x = 0;\n    }\n    return x;\n  });\n  return sum_the_list.reduce(function(acc,\
    \ x){\n    return acc + x;\n  }, 0);\n}\n", "    var max = 0\n    var min = 0\n\
    \    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n       \
    \     max = lst[i]\n        }\n        if(lst[i] < min){\n            min = lst[i]\n\
    \        }\n    }\n    var diff = max - min\n    return diff*2\n}\n", "    let\
    \ smallest = lst[0];\n    let largest = lst[0];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] < smallest){\n            smallest = lst[i];\n    \
    \    }\n        if(lst[i] > largest){\n            largest = lst[i];\n       \
    \ }\n    }\n    return (largest - smallest) * 2;\n}\n", "    var difference=0\n\
    \    if(lst.length==0){\n        return 0\n    }\n    else{\n        var sum_even=0\n\
    \        var sum_odd=0\n        for(i=0;i<lst.length;i++){\n            if(lst[i]%2==0){\n\
    \                sum_even=sum_even+lst[i]\n            }\n            else{\n\
    \                sum_odd=sum_odd+lst[i]\n            }\n        }\n        difference=sum_even-sum_odd\n\
    \        difference=difference*2\n        return difference\n    }\n}\n", "  \
    \  return lst.map(Math.abs).reduce((acc, cv) => cv > 10 ? acc + (cv - 10) * 2\
    \ : acc, 0);\n}\n\n", "  var squares = lst.map(x => Math.pow(x, 2));\n  return\
    \ squares.reduce((a, b) => a + b);\n}\n", "    var diff = lst[lst.length-1] -\
    \ lst[0];\n    return 2*diff;\n}\n", "  if (lst == []){\n    return 0;\n  }\n\
    \  else{\n    var sum = 0;\n    for (i = 0; i < lst.length; i++){\n      if (Math.abs(lst[i])\
    \ % 2 != 0){\n        sum += Math.pow(lst[i], 2);\n      }\n    }\n    return\
    \ sum;\n  }\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(typeof lst[i] == \"number\" && lst[i]%2 == 1){\n            sum +=\
    \ lst[i]*lst[i];\n        }\n    }\n    return sum;\n}", "\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < lst.length; i++){\n\t\tif(Math.floor(lst[i]) == lst[i] && lst[i]\
    \ % 2 != 0 && lst[i] > 0){\n\t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn\
    \ sum;\n}\n", "    return sum_of_squares_of_odd(lst) - sum_of_squares_of_even(lst);\n\
    }\n\n", "    const diff = difference(lst);\n    return 2 * diff;\n}\n", "  if\
    \ (lst.length === 0){\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i\
    \ < lst.length; i++){\n    if (lst[i] % 2 === 1){\n      sum += Math.pow(lst[i],\
    \ 2);\n    }\n  }\n  return sum;\n}\n", "    var even_sum = 0;\n    var odd_sum\
    \ = 0;\n    for(var i = 0; i < lst.length; i++) {\n        if(lst[i] % 2 === 0)\
    \ {\n            even_sum += lst[i];\n        } else {\n            odd_sum +=\
    \ lst[i];\n        }\n    }\n    return (even_sum - odd_sum) * 2;\n}\n", "  var\
    \ newList = [];\n  for(var i = 0; i < lst.length; i++){\n    if(typeof lst[i]\
    \ === \"number\" && lst[i] % 2 !== 0){\n      newList.push(lst[i] * lst[i]);\n\
    \    }\n  }\n  var sum = 0;\n  for(var j = 0; j < newList.length; j++){\n    sum\
    \ += newList[j];\n  }\n  return sum;\n}\n", "  var difference_sum = 0;\n  for\
    \ (var i = 0; i < lst.length; i++) {\n    difference_sum += lst[i] - i;\n  }\n\
    \  return difference_sum * 2;\n}\n", "    var sum = 0;\n    for(var i = 0; i <\
    \ lst.length; i++){\n        if(typeof lst[i] == \"number\" && lst[i] % 2 !==\
    \ 0 && lst[i] > 0){\n            sum += lst[i] ** 2;\n        }\n    }\n    return\
    \ sum;\n}\n", "    var lst2 = [];\n    for (var i = 0; i < lst.length; i++) {\n\
    \        lst2.push(lst[i]*2);\n    }\n    return lst2;\n}", "    if(lst.length\
    \ === 0){\n        return 0;\n    }\n    let squaredOddNums = [];\n    for(let\
    \ num of lst){\n        if(typeof num === 'number' && num % 2 !== 0 && num > 0){\n\
    \            let squared = num*num;\n            squaredOddNums.push(squared);\n\
    \        }\n    }\n    let sum = 0;\n    for(let num of squaredOddNums){\n   \
    \     sum += num;\n    }\n    return sum;\n}\n", "    //your code here\n    var\
    \ even=0;\n    var odd=0;\n    var sum=0;\n    for(i=0;i<lst.length;i++){\n  \
    \      if(lst[i]%2==0){\n            even+=lst[i];\n        }\n        else{\n\
    \            odd+=lst[i];\n        }\n    }\n    var diff=even-odd;\n    sum=Math.pow(diff,2);\n\
    \    return sum;\n}\n", "    lst.sort();\n    let m = lst[lst.length-1];\n   \
    \ let n = lst[0];\n    return (m-n)*2;\n}", "    var double_list = lst.map(d=>2*d);\n\
    \    //return 2*(Math.max(...lst)-Math.min(...lst));\n    return double_list;\n\
    }", "    let squares = [];\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if(typeof lst[i] === 'number' && lst[i] % 2 !== 0){\n            let square\
    \ = lst[i] * lst[i];\n            squares.push(square);\n        }\n    }\n  \
    \  let sum = 0;\n    for (let i = 0; i < squares.length; i++) {\n        sum +=\
    \ squares[i];\n    }\n    return sum;\n}\n", "  var sum_1 = 0;\n  var sum_2 =\
    \ 0;\n  for (var i = 0; i < lst.length; i++){\n    if (is_odd(lst[i])){\n    \
    \  sum_1 += (lst[i] * lst[i]);\n    }\n    else{\n      sum_2 += (lst[i] * lst[i]);\n\
    \    }\n  }\n  return sum_1 - sum_2;\n}\n", "    var odd_sum = 0\n    for (var\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] % 2 == 1 && lst[i] > 0) {\n\
    \            var square = Math.pow(lst[i], 2)\n            odd_sum += square\n\
    \        }\n    }\n    return odd_sum\n}\n", "  var sum = 0;\n  for(var x = 0;\
    \ x < lst.length; x++){\n    if(lst[x] % 2 == 1){\n      sum += lst[x] * lst[x];\n\
    \    }\n  }\n  return sum;\n}\n", "  var odd_list = [];\n  var even_list = [];\n\
    \  var answer = 0;\n  for (var i = 0; i < lst.length; i++){\n    if (lst[i] %\
    \ 2 === 0){\n      even_list.push(lst[i]);\n    }\n    else {\n      odd_list.push(lst[i]);\n\
    \    }\n  }\n  var odd_total = 0;\n  var even_total = 0;\n  for (var i = 0; i\
    \ < odd_list.length; i++){\n    odd_total += odd_list[i];\n  }\n  for (var i =\
    \ 0; i < even_list.length; i++){\n    even_total += even_list[i];\n  }\n  answer\
    \ = (odd_total - even_total) * 2;\n  return answer;\n}\n", "    var i = 0;\n \
    \   var sum = 0;\n    var new_list = [];\n    while (i < lst.length){\n      \
    \  if (lst[i] < 0 || lst[i] % 1 != 0){\n            i += 1;\n        }\n     \
    \   else{\n            sum += lst[i] ** 2;\n            i += 1;\n        }\n \
    \   }\n    return sum;\n}", "\tvar sum = 0;\n\tlst.forEach(function(val){\n\t\t\
    if(val%2 == 1){\n\t\t\tsum += val*val;\n\t\t}\n\t});\n\treturn sum;\n}", "   \
    \ var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] %\
    \ 2 != 0){\n            sum += lst[i] * lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n", "    //Return twice the difference between the largest and smallest\
    \ values\n    // in the list, or 0 if the list is empty.\n    if (lst.length ===\
    \ 0){\n        return 0;\n    }\n\n    var largest = lst[0];\n    var smallest\
    \ = lst[0];\n\n    for (var i = 0; i < lst.length; i++){\n        if (typeof lst[i]\
    \ === \"number\" && lst[i] >= 0 && lst[i] % 1 === 0){\n            if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n            if\
    \ (lst[i] < smallest){\n                smallest = lst[i];\n            }\n  \
    \      }\n    }\n\n    return 2 * (largest - smallest);\n}\n", "    return lst.reduce((a,\
    \ b) => a - b) * 2;\n}\n", "    var sum = 0;\n    var count = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(typeof lst[i] === \"number\" && !isNaN(lst[i])\
    \ && lst[i] > 0){\n            sum += lst[i];\n            count++;\n        }\n\
    \    }\n    if(count === 0){\n        return 0;\n    }\n    var mean = sum / count;\n\
    \    var diff = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(typeof\
    \ lst[i] === \"number\" && !isNaN(lst[i]) && lst[i] > 0){\n            diff +=\
    \ Math.abs(lst[i] - mean);\n        }\n    }\n    return 2 * diff;\n}\n", "  \
    \  if(lst.length == 0){\n        return 0;\n    }\n    var len = lst.length;\n\
    \    var sum = 0;\n    for(var i = 0; i < len; i++){\n        if(typeof lst[i]\
    \ != \"number\" || lst[i] < 0 || lst[i] % 1 != 0){\n            continue;\n  \
    \      }\n        if(lst[i] % 2 == 1){\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\n\n", "    var sum=0;\n    for(var i=0;i<lst.length;i++){\n\
    \        if(!(lst[i]%2==0)){\n            sum+=lst[i]*lst[i];\n        }\n   \
    \ }\n    return sum;\n}", "    var sum1 = 0;\n    var sum2 = 0;\n    for(var i\
    \ = 0; i < lst.length; i++){\n        if(typeof lst[i] === \"number\" && lst[i]\
    \ % 2 === 1){\n            sum1 += lst[i] * lst[i];\n        }\n        if(typeof\
    \ lst[i] === \"number\" && lst[i] % 2 === 0){\n            sum2 += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum1 - sum2;\n}\n\n", "    if (lst.length === 0){\n\
    \        return 0;\n    }\n    var sum = 0;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (typeof lst[i] === \"number\" && lst[i] > 0 && lst[i] % 2\
    \ == 1) {\n            sum += Math.pow(lst[i], 2);\n        }\n    }\n    return\
    \ sum;\n}\n\n", "    const doubled = lst.map(function(num){\n        return num\
    \ * 2;\n    });\n    const sub = doubled.reduce(function(a, b){\n        return\
    \ a - b;\n    });\n    return sub;\n}\n", "  var doubles = [];\n  if (lst.length\
    \ == 0){\n    return 0;\n  }\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] % 2 == 1){\n      doubles.push(lst[i]*lst[i]);\n    }\n  }\n  var sum\
    \ = 0;\n  for (var i = 0; i < doubles.length; i++){\n    sum += doubles[i];\n\
    \  }\n  return sum;\n}\n", "    // you write your code here\n    var odd = lst.filter(x\
    \ => x % 2 === 1);\n    var even = lst.filter(x => x % 2 === 0);\n    if (odd.length\
    \ === 0) {\n        return 0;\n    } else {\n        return (Math.max(...odd)\
    \ - Math.min(...odd)) * 2;\n    }\n    \n}\n\n", "    var sum = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] % 2 === 1 && typeof lst[i] ===\
    \ \"number\"){\n            sum += Math.pow(lst[i], 2);\n        }\n    }\n  \
    \  return sum;\n}\n", "    var diff = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 == 1){\n            diff += lst[i]*lst[i];\n        }\n\
    \    }\n    return diff;\n}\n\n", "    var squares = [];\n    var sum = 0;\n \
    \   for (i=0; i<lst.length; i++){\n        if (lst[i]%2 === 0 && typeof lst[i]\
    \ === \"number\"){\n            squares.push(lst[i]*lst[i]);\n        }\n    }\n\
    \    for (i=0; i<squares.length; i++){\n        sum += squares[i];\n    }\n  \
    \  return sum;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(typeof lst[i] == \"number\" && lst[i] % 2 == 1 && lst[i] > 0){\n \
    \           sum += Math.pow(lst[i], 2);\n        }\n    }\n    return sum;\n}\n",
  "\tvar sum = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif (lst[i] % 2 == 1){\n\
    \t\t\tsum += lst[i] * lst[i];\n\t\t}\n\t}\n\treturn sum;\n}", "    var sum = 0;\n\
    \    var evens = 0;\n    var odds = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 === 0 && lst[i] > 0){\n            evens += lst[i];\n \
    \       }\n        else if(lst[i] % 2 === 1 && lst[i] > 0){\n            odds\
    \ += lst[i];\n        }\n    }\n    sum = (evens - odds) * 2;\n    return sum;\n\
    }\n", "  var sum = 0;\n  for(i = 0; i < lst.length; i++){\n    if(Math.abs(lst[i])\
    \ % 2 != 0){\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n",
  "\tvar sum = 0;\n\tvar even_sq;\n\tvar odd_sq;\n\tfor(var i = 0; i < lst.length;\
    \ i++){\n\t\tif(lst[i] % 2 == 0){\n\t\t\teven_sq = lst[i] * lst[i];\n\t\t}\n\t\
    \telse{\n\t\t\todd_sq = lst[i] * lst[i];\n\t\t}\n\t}\n\tsum = odd_sq - even_sq;\n\
    \treturn sum;\n}", "    var sum_of_evens = 0;\n    var sum_of_odds = 0;\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] % 2 === 0){\n        \
    \    sum_of_evens += lst[i] * lst[i];\n        } else {\n            sum_of_odds\
    \ += lst[i] * lst[i];\n        }\n    }\n    return sum_of_evens - sum_of_odds;\n\
    }\n", "  var lst = [];\n  var total = 0;\n  var sqTotal = 0;\n  if (lst == [])\
    \ {\n    return 0;\n  }\n  else{\n    for (var i = 0; i < lst.length; i++) {\n\
    \      if (typeof lst[i] === \"number\" && lst[i] > 0) {\n        if (lst[i] %\
    \ 2 === 1) {\n          total += lst[i];\n        }\n      }\n    }\n    sqTotal\
    \ = total * total;\n    return sqTotal;\n  }\n}\n\n", "    return lst.map(function(num){return\
    \ num*2}).reduce(function(a,b){return a-b},0);\n}\n", "  var doubleDiff = 0;\n\
    \  if (lst.length > 0){\n    doubleDiff = (lst[0] - lst[lst.length - 1]) * 2;\n\
    \  }\n  return doubleDiff;\n}\n", "\tvar lst2 = lst.map(function(a){\n\t\treturn\
    \ a * 2;\n\t});\n\tvar sum = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\t\
    sum += lst2[i] - lst[i];\n\t}\n\treturn sum;\n}", "    return lst.map(x => x*2\
    \ - 10).filter(x => x > 0).reduce((x,y) => x+y, 0);\n}\n", "    // Write your\
    \ code here\n    var sum=0;\n    var newList=[];\n    if(lst.length==0){\n   \
    \     return 0;\n    }else{\n        for(i=0;i<lst.length;i++){\n            if(lst[i]%2==1){\n\
    \                newList.push(lst[i]*lst[i]);\n            }\n        }\n    \
    \    for(i=0;i<newList.length;i++){\n            sum+=newList[i];\n        }\n\
    \        return sum;\n    }\n}\n", "    return 0;\n}\n", "  if(lst.length ===\
    \ 0){\n    return 0;\n  }\n  var total = 0;\n  for(var i = 0; i < lst.length;\
    \ i++){\n    if(Math.abs(lst[i]) !== lst[i]){\n      continue;\n    }\n    if(lst[i]\
    \ % 2 === 1){\n      total += lst[i] * lst[i];\n    }\n  }\n  return total;\n\
    }\n", "    var odd = 0;\n    var even = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] % 2 == 0){\n            even += lst[i];\n        }else{\n\
    \            odd += lst[i];\n        }\n    }\n    return (odd - even) * 2;\n\
    }\n", "  var sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if (lst[i]\
    \ % 2 != 0){\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\n",
  "    \"USE STRICT\";\n    if (lst.length === 0){\n        return 0;\n    }\n   \
    \ var total = 0;\n    var lowest_number = lst[0];\n    var highest_number = lst[0];\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < lowest_number){\n\
    \            lowest_number = lst[i];\n        }\n        if (lst[i] > highest_number){\n\
    \            highest_number = lst[i];\n        }\n    }\n    var difference =\
    \ highest_number - lowest_number;\n    return 2 * difference;\n}\n", "  let sum\
    \ = 0;\n  for(let i = 0; i < lst.length; i++){\n    if(lst[i] % 2 == 1){\n   \
    \   sum += lst[i] ** 2;\n    }\n  }\n  return sum;\n}", "    var total = 0;\n\
    \    for(var i = 0; i < lst.length; i++) {\n        if (lst[i] > 0 && lst[i] %\
    \ 2 != 0) {\n            total += Math.pow(lst[i], 2);\n        }\n    }\n   \
    \ return total;\n}\n", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] % 2 != 0){\n            sum += lst[i]*lst[i];\n        }\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    let odd_value_sum = 0;\n\
    \    let even_value_sum = 0;\n    if(lst.length === 0){\n        return 0;\n \
    \   }\n    for(let i = 0; i < lst.length; i++){\n        if(typeof lst[i] ===\
    \ 'number' && lst[i] >= 0){\n            if(lst[i] % 2 !== 0){\n             \
    \   odd_value_sum += lst[i] * lst[i];\n            }\n            else{\n    \
    \            even_value_sum += lst[i] * lst[i];\n            }\n        }\n  \
    \  }\n    sum = odd_value_sum - even_value_sum;\n    return sum;\n}\n\n", "  var\
    \ sum = 0;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] % 2 == 1){\n\
    \      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n", "    var sum\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(typeof lst[i] ===\
    \ \"number\" && lst[i] % 2 === 1){\n            sum += Math.pow(lst[i], 2);\n\
    \        }\n    }\n    return sum;\n}\n", "    var num = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] % 2 == 1) {\n            num += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return num;\n}\n", "    let lst_length = lst.length;\n\
    \    if (lst_length === 0){\n        return 0;\n    }\n    let sum = 0;\n    for\
    \ (let i = 0; i < lst_length; i++){\n        let x = lst[i];\n        if (isInteger(x)\
    \ && x >= 0){\n            if (x % 2 === 1){\n                sum += x * x;\n\
    \            }\n        }\n    }\n    return sum;\n}\n", "    //declaring a variable\
    \ called new array to store the empty list\n    let new_array=[];\n    //using\
    \ the for each loop method\n    lst.forEach(function(array){\n        //storing\
    \ the square of the array in the new array\n        new_array.push(array*array);\n\
    \    });\n    //returning the sum of the new array\n    return new_array.reduce((a,b)=>a+b);\n\
    }", "    var lstSquared = lst.map(function(x){return x*x});\n    var lstSum =\
    \ lstSquared.reduce(function(x,y){return x+y});\n    var lstFiltered = lst.filter(function(x){return\
    \ x%2 == 1});\n    var lstFilteredSum = lstFiltered.reduce(function(x,y){return\
    \ x+y});\n    return lstSum - lstFilteredSum;\n}\n", "    if(lst.length==0){\n\
    \        return 0;\n    }\n    var a = lst.filter(function(x){return (x>0 && Number.isInteger(x));});\n\
    \    var b = a.filter(function(x){return (x%2==1);});\n    var ans = b.map(function(x){return\
    \ x*x;});\n    var c = 0;\n    for(var i = 0; i<ans.length; i++){\n        c =\
    \ c + ans[i];\n    }\n    return c;\n}\n", "    var sum = 0;\n    for(var i =\
    \ 0; i < lst.length; i++){\n        if(lst[i] % 2 != 0){\n            sum += lst[i]\
    \ ** 2;\n        }\n    }\n    return sum;\n}\n", "    var diff = 0;\n    var\
    \ sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        var diff = sum -\
    \ lst[i];\n        sum = 2 * diff;\n    }\n    return sum;\n}\n", "  var sum =\
    \ 0;\n  for(var i = 0; i < lst.length; i++){\n    if(lst[i] % 2 != 0){\n     \
    \ sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n", "    // Write your\
    \ code here\n    var lst1 = lst.filter(function(item){\n        return item %\
    \ 2 != 0;\n    });\n    var lst2 = lst1.map(function(item){\n        return item\
    \ * item;\n    });\n    return lst2.reduce(function(a,b){\n        return a +\
    \ b;\n    });\n}\n", "    var x = 0;\n    for(var i = 0; i < lst.length; i++){\n\
    \        x += lst[i] ** 2;\n    }\n    return x;\n}\n", "  return sum_pairs(lst,\
    \ square_list_iter(lst))*2;\n}\n", "  //initialize variables\n  var sum = 0;\n\
    \  var product = 0;\n  var difference = 0;\n  //loop through list\n  for(var i\
    \ = 0; i < lst.length; i++){\n    //add even numbers to sum\n    if(lst[i] % 2\
    \ == 0){\n      sum += lst[i];\n    }\n    //multiply odd numbers\n    else{\n\
    \      product += lst[i];\n    }\n  }\n  //calculate difference\n  difference\
    \ = Math.abs(sum - product);\n  //multiply by 2 and return the answer\n  return\
    \ 2 * difference;\n}\n", "    //Filter out negative numbers and floats\n    const\
    \ filtered_list = lst.filter(x => x >= 0 && x % 1 === 0);\n    let new_list =\
    \ filtered_list.map(x => x % 2 !== 0 ? Math.pow(x, 2) : 0);\n    return new_list.reduce((acc,\
    \ x) => acc + x, 0);\n\n}\n", "   var s=0;\n   if(lst.length>1){\n       lst.forEach(function(e){\n\
    \           if(e%2!=0)\n           s+=e*e;\n       });\n       return s;\n   }\n\
    \   else\n   return 0;\n}", "    var sum = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] >= 0 && lst[i] % 2 != 0){\n            sum += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n", "  var negative_values = lst.filter(function(num){\n\
    \    return num < 0;\n  });\n  var non_integers = lst.filter(function(num){\n\
    \    return !Number.isInteger(num);\n  });\n  var positive_integers = lst.filter(function(num){\n\
    \    return num >= 0 && Number.isInteger(num);\n  });\n  var odds = positive_integers.filter(function(num){\n\
    \    return num % 2 === 1;\n  });\n  var evens = positive_integers.filter(function(num){\n\
    \    return num % 2 === 0;\n  });\n  var sum_of_odds = odds.reduce(function(total,\
    \ num){\n    return total + num * num;\n  }, 0);\n  var sum_of_evens = evens.reduce(function(total,\
    \ num){\n    return total + num * num;\n  }, 0);\n  var difference = sum_of_odds\
    \ - sum_of_evens;\n  return difference * 2;\n}\n", "    return Math.abs(lst[0]\
    \ - lst[1]) * 2;\n}\n", "    var lst = lst.map(function(x){\n        return x\
    \ * 2\n    })\n    return lst.reduce(function(a,b){\n        return a - b\n  \
    \  })\n}", "  let double = lst.reduce((prev, curr) => prev + curr, 0);\n  double\
    \ = double * 2;\n  let diff = lst.reduce((prev, curr) => prev - curr, 0);\n  return\
    \ Math.abs(diff) * 2;\n}\n", "  // Your solution here.\n  var i,len,sum=0;\n \
    \ for(i=0,len=lst.length;i<len;i++){\n  \tif(lst[i]%2===1){\n  \t\tsum+=lst[i]*lst[i];\n\
    \  \t}\n  }\n  return sum;\n}\n", "  let sum = 0;\n  for(let i=0; i<lst.length;\
    \ i++){\n    if(lst[i]%2 !== 0){\n      sum += lst[i]**2;\n    }\n  }\n  return\
    \ sum;\n}", "    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n    \
    \    if(lst[i] % 2 != 0){\n            sum += lst[i]*lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\n", "    var last = lst[lst.length-1];\n    var first =\
    \ lst[0];\n    return (last - first) * 2;\n}\n", "    \"use strict\";\n    if\
    \ (lst.length === 0){\n        return 0;\n    }\n    var odd_numbers = [];\n \
    \   var result = 0;\n    for (var i = 0; i < lst.length; i++){\n        if (typeof\
    \ lst[i] === \"number\" && lst[i] % 2 !== 0){\n            odd_numbers.push(lst[i]);\n\
    \        }\n    }\n    for (var j = 0; j < odd_numbers.length; j++){\n       \
    \ result += odd_numbers[j]*odd_numbers[j];\n    }\n    return result;\n}\n", " \
    \   const lst2 = [];\n    for (let number of lst){\n        if (number%2 != 0){\n\
    \            lst2.push(number);\n        }\n    }\n    const diff = lst.length\
    \ - lst2.length;\n    return diff*2;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

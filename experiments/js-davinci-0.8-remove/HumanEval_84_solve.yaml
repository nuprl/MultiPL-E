name: HumanEval_84_solve
language: js
prompt: "//Given a positive integer N, return the total sum of its digits in binary.\n\
  // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
  // Output:\n// a string of binary number\nfunction solve(N){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
  110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
  1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
completions: ["    var sum = N.toString(2).split('').reduce((acc,val)=>{return acc\
    \ + Number(val)},0);\n    return sum;\n}\n", "    return Array.from(N.toString(2)).reduce((x,y)=>\
    \ x+parseInt(y),0)\n}\n", "  var bits = N.toString(2);\n  var finalSum = 0;\n\
    \  for (var i = 0; i < bits.length; i++) {\n    finalSum += Number(bits[i]);\n\
    \  }\n  return finalSum;\n}", "    //..\n    let array = N.toString(2).split('');\n\
    \    let arraySum = array.reduce((a,b) => a + +b, 0);\n    return arraySum;\n}",
  "    var bin = N.toString(2);\n    return bin.split('').reduce((sum, value) => +sum\
    \ + +value);\n}", "\tlet num = N.toString(2);\n\tlet sum = 0;\n\tfor(let i = 0;\
    \ i < num.length; i++){\n\t\tsum += Number(num[i]);\n\t}\n\treturn sum;\n}", " \
    \   let numInBinary =  N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < numInBinary.length; i++){\n        sum += parseInt(numInBinary[i]);\n    }\n\
    \    return sum;\n}", "   return parseInt(N.toString(2).split('').reduce((a, b)\
    \ => parseInt(a) + parseInt(b)));\n}\n\nN = 100", "  // convert N to binary\n\
    \  // then convert to string\n  // then turn it into an array\n  // then reduce\
    \ the array sum\n  return N.toString(2).split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n};\n", "  //get the number in binary. split up the number into\
    \ individual numbers and add them together\n  let binArr = (N).toString(2).split('');\n\
    \  let sum = 0;\n  for(let i = 0; i < binArr.length; i++){\n    sum = sum + parseInt(binArr[i]);\n\
    \  }\n  return sum;\n}", "  //..\n  var num = N.toString(2);\n  var sum = 0;\n\
    \  for (var i = 0; i < num.length; i++) {\n    sum += parseInt(num[i]);\n  }\n\
    \  return sum;\n}", "  //your code goes here\n  // convert given number to binary\n\
    \  let binary = Number(N).toString(2);\n  // convert binary to array\n  let a\
    \ = binary.split('');\n  // sum array\n  let sum = a.reduce((acc, curr) => Number(acc)\
    \ + Number(curr), 0);\n  return sum;\n}\n", "  let num = N.toString();\n  let\
    \ sum = 0;\n  for(let i = 0; i < num.length; i++){\n    sum += parseInt(num[i],\
    \ 10);\n  }\n  return sum.toString(2);\n}\n", "    //convert integer to binary\
    \ and the sum its digits\n    return N.toString(2).split('').reduce((a, b) =>\
    \ +a + +b);\n}", "    // Write your code here.\n    // Convert N to a binary number\
    \ string\n    let str = N.toString(2);\n    let sum = 0;\n    // loop over the\
    \ string and add the digits together\n    for (let i = 0; i < str.length; i++)\
    \ {\n        sum += parseInt(str[i]);\n    }\n    return sum;\n}\n", "    let\
    \ result = 0;\n    while(N != 0){\n        let temp = N%2;\n        N = (N-temp)/2;\n\
    \        result += temp;\n    }\n    return result;\n}", "  return N.toString(2).split('').reduce((a,b)\
    \ => +a + +b);\n}", "    // toString() converts the number N to a string\n   \
    \ // radix 2 converts the string to a binary number\n    // split() converts the\
    \ string into an array of strings\n    // map() converts each string to an integer\n\
    \    // reduce() adds each integer together\n    return N.toString(2).split('').map(x\
    \ => parseInt(x)).reduce((a,b) => a+b)\n}", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0);\n\
    }", "    return N.toString(2).split('').reduce((a,b)=>Number(a)+Number(b),0)\n\
    }", "  //..\n  let binary = N.toString(2);\n  let count = 0;\n  for(let i = 0;\
    \ i < binary.length; i++){\n    count += parseInt(binary[i]);\n  }\n  return count;\n\
    }", "    //..\n    return parseInt(N.toString(2).split('').reduce((a,b)=> parseInt(a)+parseInt(b)))\n\
    }", "  return N.toString(2).split('').reduce((acc,value)=>{return parseInt(acc)+parseInt(value)})\n\
    }\n\nsolve(10)", "  let result = 0;\n  while(N !== 0){\n    result += N % 2;\n\
    \    N = Math.floor(N / 2);\n  }\n  return result;\n}\n", "  let number = N.toString();\n\
    \  let answer = [];\n  for(var i = 0; i < number.length; i++){\n    answer.push(parseInt(number[i],\
    \ 10));\n  }\n  return answer.reduce((a, b) => a + b);\n}\nsolve(123)", "   return\
    \ (N >>> 0).toString(2).split('').reduce((r,v)=>r+v*1,0)\n};", "    return N.toString(2).split('').reduce((acc,\
    \ curr) => parseInt(acc) + parseInt(curr));\n}\n", "    // i want to convert a\
    \ number to binary, \n    // then convert that binary to a string\n    // then\
    \ split the string and iterate over it and sum it.\n    let binary = (N >>> 0).toString(2)\n\
    \    let sum = 0\n    binary.split('').forEach(num => sum += Number(num))\n  \
    \  return sum\n  }\n  //   console.log(solve(67))\n  //   console.log(solve(2))\n\
    \  //   console.log(solve(1))\n  //   console.log(solve(14))\n\n  //Given a string\
    \ of lowercase letters in the range ascii[a-z], determine a character that can\
    \ be removed to make the string a palindrome. There may be more than one solution,\
    \ but any will do. For example, if your string is \"bcbc\", you can either remove\
    \ 'b' at index 0 or 'c' at index 3. If the word is already a palindrome or there\
    \ is no solution, return -1. Otherwise, return the index of a character to remove.\n\
    \  // Example\n  //Variables:\n  //@inputString string\n  //Constraints: 3 \u2264\
    \ inputString.length \u2264 1000.\n  //Output:\n  //an integer, the index of the\
    \ character to remove or -1\n  function solve(inputString){\n    // for each character\
    \ we're going to keep a running total of the score of character(s) we're looking\
    \ at.\n    // so at index[i] we're going to be looking at index[i - 1] and index[i\
    \ + 1] and if they're the same we add 1.\n    // if at any point those don't match\
    \ then we subtract 1. \n    // then we'll keep track of the highest score. if\
    \ we get a score of 0 that means the word is a palindrome and we return -1. \n\
    \    // if we get a score that's less than the highest score we want to return\
    \ the index of the character that would give us that score.\n    // if we get\
    \ a score higher than the highest score, we want to update the highest score to\
    \ be that new score.\n    let highestScore = 0\n    let inputStringAsArray = inputString.split('')\n\
    \    for(", "  // Write your code here\n  // Split the number into a string\n\
    \  let number = N.toString()\n  // Turn that string into an array\n  let numArray\
    \ = number.split('')\n  // Since each element in the array is a string, I will\
    \ turn it into an integer\n  let numInt = numArray.map(Number)\n  // Add all the\
    \ values\n  let sum = numInt.reduce((total, num) => total + num)\n  // Turn the\
    \ total into binary\n  let sumBinary = sum.toString(2)\n  // Return it\n  return\
    \ sumBinary\n}\n", "    // Write your code here\n    var N = parseInt(N);\n  \
    \  return (N >>> 0).toString(2);\n};\n", "    let sum = 0;\n    let str = N.toString(2);\n\
    \    for(let i = 0; i < str.length; i++){\n        sum += Number(str[i]);\n  \
    \  }\n    return sum;\n}\n", "    //..\n    var sum = 0;\n    N = (N >>> 0).toString(2);\n\
    \    for (var i = 0; i < N.length; i++) {\n        if (N[i] == 1) {\n        \
    \    sum = sum + 1;\n        }\n    }\n    return sum;\n};", "    //Your code\
    \ goes here\n    // return the binary number. eg. for input 2, output 10.\n  \
    \  return parseInt(N,10).toString(2);\n}\nsolve(2);", "  // Write your code here\n\
    \  let str = N.toString(2)\n  let result = 0\n  for(let i = 0; i < str.length;\
    \ i++){\n      result += parseInt(str[i])\n  }\n  return result\n}", "    return\
    \ (N.toString(2).split('').reduce((a,b)=>{return parseInt(a)+parseInt(b)},0));\n\
    }", "    //..\n    return N.toString(2).split('').reduce((a, b) => +a + +b);\n\
    }\n", "    let arr = []\n    let str = ''\n    let sum = 0\n\n    while(N > 0){\n\
    \        let num = N % 2\n        arr.push(num)\n        N = Math.floor(N / 2)\n\
    \    }\n\n    for(let i = arr.length - 1; i >= 0; i--){\n        str += arr[i]\n\
    \    }\n\n    for(let char of str){\n        sum += parseInt(char)\n    }\n\n\
    \    return sum\n}\n", "  return N.toString(2).split('').reduce((a, b) => +a +\
    \ +b);\n}", "    //js - convert to binary\n    let binary = N.toString(2);\n \
    \   //js - convert to string array\n    let arr = binary.split('');\n    // reduce\
    \ array - add elements\n    let ans = arr.reduce((x,y) => parseInt(x) + parseInt(y));\n\
    \    return ans;\n}", "  return N.toString(2).split('').reduce((a,b) => +a + +b,\
    \ 0);\n}\n", "    //..\n  return N.toString(2).split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b), 0);\n}", "  let result = 0;\n  let binary = N.toString(2);\n\
    \  for (let i = 0; i < binary.length; i++) {\n    result += Number(binary[i]);\n\
    \  }\n  return result;\n}", "  let result = parseInt(N, 10).toString(2);\n  let\
    \ res = 0;\n  for(var i=0; i<result.length; i++){\n    res += parseInt(result[i]);\n\
    \  }\n  return res;\n}\n", "    const numToBinary = N.toString(2);\n    return\
    \ numToBinary.split('').reduce((acc, current) => acc + Number(current), 0);\n}",
  "    //..\n    var num = N.toString(2);\n    var sum = 0;\n    for(var i = 0; i\
    \ < num.length; i++){\n        sum += parseInt(num[i]);\n    }\n    return sum;\n\
    }", "    let result = N.toString(2).split('').reduce((acc,curr)=>acc+Number(curr),0);\n\
    \    return result;\n}\n", "    //Please change the input type here:\n    return\
    \ N.toString(2).split('').reduce((a,b)=> a*1 + b*1,0)\n}\nN = 89", "    let binary\
    \ = '';\n    let total = 0;\n    //turning a number into binary\n    while(N>0){\n\
    \        let divide = Math.floor(N/2);\n        let remain = N%2;\n        binary\
    \ = remain + binary;\n        N = divide;\n    }\n    //turning a binary string\
    \ into an array\n    let binaryArray = binary.split('');\n    //turning the array\
    \ of binary numbers into an array of integers\n    let intArray = binaryArray.map(Number);\n\
    \    // looping through the array and adding the numbers\n    for(let i = 0; i\
    \ < intArray.length; i++){\n        total += intArray[i];\n    }\n    return total;\n\
    }", "  let num = N.toString(2);\n  let count = 0;\n  for(let i = 0; i < num.length;\
    \ i++){\n    count += parseInt(num[i]);\n  }\n  return count;\n}\n", "  return\
    \ N.toString(2).split('').reduce((total,value)=>parseInt(total)+parseInt(value),0);\n\
    }", "    let result='';\n    let binary=N.toString(2);\n    for(let i=0;i<binary.length;i++){\n\
    \        result+=binary[i];\n    }\n    console.log(result);\n}\nsolve(5);", " \
    \   //coding and coding..\n    return N.toString(2).split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b));\n}", "  var count = 0;\n  var str = N.toString(2);\n\
    \  var nums = str.split('');\n  for(var i = 0; i < nums.length; i++){\n    count\
    \ += parseInt(nums[i]);\n  }\n  return count;\n}", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n\
    }\n", "  //..\n  return N.toString(2).split('').reduce((a,b) => +a + +b);\n}",
  "    let sum = 0\n    let bin = N.toString(2)\n    for(let i = 0; i < bin.length;\
    \ i++){\n        sum += Number(bin[i])\n    }\n    return sum\n}\n\nN = 5", " \
    \   let binaryNumber = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binaryNumber.length; i++){\n        sum += parseInt(binaryNumber[i]);\n  \
    \  }\n    return sum;\n}\n", "    // Write your code here\n    var sum = 0;\n\
    \    var array = [];\n    while(N > 0){\n        let bit = N % 2;\n        array.push(bit);\n\
    \        N = Math.floor(N / 2);\n    }\n    array.forEach(i => {\n        sum\
    \ += i;\n    });\n    return sum;\n}\nsolve(13);", "    let num = N.toString(2)\n\
    \    let arr = num.split('')\n    let sum = 0\n    for(let i = 0; i < arr.length;\
    \ i++){\n        sum += Number(arr[i])\n    }\n    return sum\n}\n", "    // Write\
    \ your code here\n    if(0 <= N && N <= 10000){\n        return(N.toString(2).split('').reduce((a,\
    \ b) => Number(a) + Number(b), 0))\n    }\n}\n", "    return N.toString(2).split('').reduce((sum,\
    \ n) => sum + Number(n), 0)\n}\n", "    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += Number(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let result =\
    \ [];\n    if(N == 0){\n        return 0;\n    }\n    while(N > 0){\n        if(N\
    \ % 2 == 0){\n            result.push(0);\n        }\n        else{\n        \
    \    result.push(1);\n        }\n        N = Math.floor(N / 2);\n    }\n    return\
    \ result.join('');\n}\n", "    //..\n    let binary = (N >>> 0).toString(2);\n\
    \    let result = 0;\n    for (let i = 0; i < binary.length; i++) {\n        result\
    \ += parseInt(binary[i]);\n    }\n    return result;\n}", "\treturn N.toString(2).split('').reduce((a,b)=>{return\
    \ parseInt(a)+parseInt(b)},0)\n}\n", "  return N.toString(2).split('').reduce((a,\
    \ b) => a + parseInt(b), 0);\n}\n", "    var result = 0;\n    var remainder;\n\
    \    while(N>0){\n        remainder = N%2;\n        N = Math.floor(N/2);\n   \
    \     result += remainder;\n    }\n    return result;\n}", "    let res = '';\n\
    \    while(N > 0){\n        res = N % 2 + res;\n        N = N >> 1;\n    }\n \
    \   return res;\n}\n", "  let theArray = [];\n  let theString = '';\n  while(N\
    \ > 0){\n    theArray.push(N % 2);\n    N = Math.floor(N / 2);\n  }\n  theArray.reverse();\n\
    \  for(let i = 0; i < theArray.length; i++){\n    theString += theArray[i];\n\
    \  }\n  let count = 0;\n  for(let i = 0; i < theString.length; i++){\n    if(theString[i]\
    \ === '1'){\n      count++;\n    }\n  }\n  return count;\n}\n", "  let binaryArr\
    \ = [];\n  while(N>0){\n      if(N%2 === 0){\n          binaryArr.push(0);\n \
    \     }else{\n          binaryArr.push(1);\n      }\n      N = parseInt(N/2);\n\
    \  }\n  let result = binaryArr.reverse().join('');\n  return result;\n}", "  \
    \  return N.toString(2).split('').reduce((a,b)=>{\n        return parseInt(a)\
    \ + parseInt(b);\n    });\n}\n", "    let binary = '';\n    let sum = 0;\n   \
    \ while(N > 0){\n        let remainder = N % 2;\n        N = Math.floor(N / 2);\n\
    \        binary = binary + remainder;\n    }\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += Number(binary[i]);\n    }\n    return sum;\n}", "    //..\n\
    \    return (N >>> 0).toString(2).split('').reduce((total, num) => {\n       \
    \ return total + parseInt(num)\n    }, 0)\n}", "    let str = N.toString(2);\n\
    \    return str.split('').reduce((acc, curr) => {\n        return parseInt(acc)\
    \ + parseInt(curr);\n    }, 0);\n}\n", "    const binaryString = N.toString(2);\n\
    \    let sum = 0;\n    for (let i = 0; i < binaryString.length; i++) {\n     \
    \   sum += parseInt(binaryString[i], 10);\n    }\n    return sum;\n}\n", "  //..\n\
    \  return N.toString(2).split('').reduce((a, b) => parseInt(a) + parseInt(b),\
    \ 0)\n}\n", "    //..\n    let r = N.toString(2).split('').reduce((a,b) => parseInt(a)\
    \ + parseInt(b));\n    return r;\n  }\n  console.log(solve(10));\n  //output:\
    \ '1010'", "    let binaryArr = []\n    while(N > 0){\n        binaryArr.push(N\
    \ % 2)\n        N = Math.floor(N / 2)\n    }\n    let total = 0\n    for(let i\
    \ = 0; i < binaryArr.length; i++){\n        total += binaryArr[i]\n    }\n   \
    \ return total\n}", "  return N.toString(2).split('').reduce((prev, curr) => parseInt(prev)\
    \ + parseInt(curr), 0);\n}\nsolve(10);", "  let current = N;\n  let sum = 0;\n\
    \  while(current > 0){\n    let rem = current % 2;\n    sum += rem;\n    current\
    \ = Math.floor(current / 2);\n  }\n  return sum;\n}\n\nsolve(5);\nsolve(12);\n\
    solve(30);\nsolve(18);\nsolve(19);\nsolve(10);\nsolve(9);\nsolve(11);\nsolve(16);\n\
    solve(17);\nsolve(2);\nsolve(1);\nsolve(8);\nsolve(7);\nsolve(6);\nsolve(3);\n\
    solve(4);\nsolve(9);\nsolve(99);\nsolve(77);\nsolve(23);\nsolve(0);\nsolve(2);\n\
    solve(3);\nsolve(4);\nsolve(5);\nsolve(6);\nsolve(7);\nsolve(8);\nsolve(9);\n\
    solve(10);\nsolve(11);\nsolve(12);\nsolve(13);\nsolve(14);\nsolve(15);\nsolve(16);\n\
    solve(17);\nsolve(18);\nsolve(19);\nsolve(20);\nsolve(21);\nsolve(22);\nsolve(23);\n\
    solve(24);\nsolve(25);\nsolve(26);\nsolve(27);\nsolve(28);\nsolve(29);\nsolve(30);\n\
    solve(31);\nsolve(32);\nsolve(33);\nsolve(34);\nsolve(35);\nsolve(36);\nsolve(37);\n\
    solve(38);\nsolve(39);\nsolve(40);\nsolve(41);\nsolve(42);\nsolve(43);\nsolve(44);\n\
    solve(45);\nsolve(46);\nsolve(47);\nsolve(48);\nsolve(49);\nsolve(50);\nsolve(51);\n\
    solve(52);\nsolve(53);\nsolve(54);\ns", "    //Write your code here\n    const\
    \ bin = (+N).toString(2);\n    return bin.split('').reduce((pre, cur) => (+pre)\
    \ + (+cur));\n}\n\nconst tests = [\n    {N: 17, expected: 3},\n    {N: 5, expected:\
    \ 2},\n    {N: 6, expected: 2},\n    {N: 14, expected: 3},\n    {N: 0, expected:\
    \ 0},\n    {N: 1, expected: 1},\n    {N: 8, expected: 1},\n    {N: 2, expected:\
    \ 1},\n    {N: 10, expected: 2},\n    {N: 100, expected: 4},\n    {N: 1000, expected:\
    \ 5},\n    {N: 10000, expected: 6},\n];\n\nconst isEqual = (a, b) =>\n    JSON.stringify(a)\
    \ === JSON.stringify(b);\n\ntests.forEach(({N, expected}, idx) => {\n    let result\
    \ = solve(N);\n    const isEqualResult = isEqual(result, expected);\n    console.log(\n\
    \        `Test ${idx + 1}:`,\n        isEqualResult ? '\u2713' : '\u274C',\n \
    \       !isEqualResult ? `-  ${result} \u2219 ${expected}` : '',\n    );\n});",
  "\treturn N.toString(2).split('').reduce((a,b)=>(a*1+b*1))\n}\n", "    // First\
    \ convert your number to string\n    let bin = Number(N).toString(2);\n    //convert\
    \ the string back to number, using map function to iterate over all elements in\
    \ your string, and then return the sum of them\n    let sum = bin.split('').map(Number).reduce((a,b)\
    \ => a+b);\n    return sum;\n}", "    return (N >>> 0).toString(2).split(\"\"\
    ).reduce((a,b) => parseInt(a) + parseInt(b));\n}\n", "    // take the number convert\
    \ it to a binary\n    // convert the binary to array\n    // add the numbers\n\
    \    // return the number\n    let bin = N.toString(2).split('').reduce((acc,\
    \ curr) => {\n        return acc += parseInt(curr);\n    }, 0);\n    return bin;\n\
    }", "  let result = 0;\n  let binN = N.toString(2);\n  console.log(binN);\n  for(let\
    \ i = 0; i < binN.length; i++){\n    result += parseInt(binN[i]);\n  }\n  return\
    \ result;\n}", "  let result = \"\";\n  let carry = 0;\n  while(N != 0){\n   \
    \ let remainder = N % 2;\n    remainder += carry;\n    carry = 0;\n    if(remainder\
    \ > 1){\n      carry = 1;\n      remainder -= 2;\n    }\n    result = remainder\
    \ + result;\n    N = Math.floor(N / 2);\n  }\n  if(carry == 1){\n    result =\
    \ carry + result;\n  }\n  return result;\n}\n", "    //..\n    let result = convertBinary(N);\n\
    \    let sum = 0;\n    for(let i = 0; i < result.length; i++){\n        if(result[i]\
    \ == 1){\n            sum += 1;\n        }\n    }\n    return sum;\n}", "    var\
    \ str = N.toString();\n    var arr = str.split('');\n    var len = arr.length;\n\
    \    var sum = 0;\n    for(var i = 0; i < len; i++){\n        sum += parseInt(arr[i]);\n\
    \    }\n    return sum.toString(2);\n}", "    // Write your code here\n    let\
    \ num = N\n    let binary = \"\"\n    let sum = 0\n    while(num>0){\n       \
    \ let remainder = num%2\n        binary = binary.concat(remainder)\n        sum\
    \ += remainder\n        num = parseInt(num/2)\n    }\n    return sum\n}", "  let\
    \ sum = 0;\n  while(N > 0){\n    sum += N % 2;\n    N = Math.floor(N / 2);\n \
    \ }\n  return sum;\n}", "    //..\n    let num = parseInt(N).toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < num.length; i++){\n        sum += parseInt(num[i]);\n\
    \    }\n    return sum;\n}", "  let total = 0;\n  let toBinary = N.toString(2).split('');\n\
    \  toBinary.forEach(num => total += parseInt(num));\n  return total;\n}", "  \
    \  var num = N.toString(2);\n    var sum = 0;\n    for(var i = 0; i < num.length;\
    \ i++){\n        sum += parseInt(num[i]);\n    }\n    return sum;\n}\n", "   \
    \ var binary = N.toString(2);\n    var total = 0;\n    for(var i = 0; i < binary.length;\
    \ i++){\n        total += parseInt(binary[i]);\n    }\n    return total;\n}",
  "    return (N >>> 0).toString(2).split(\"\").reduce((a,b) => parseInt(a) + parseInt(b));\n\
    \  }", "    let sum = 0;\n    let n = N.toString(2);\n    for(let i = 0; i < n.length;\
    \ i++){\n        sum += parseInt(n[i]);\n    }\n    return sum;\n}\n", "    var\
    \ sol = N.toString(2).split('').reduce((a,b) => +a + +b);\n    return sol;\n}",
  "    if (0 <= N <= 10000){\n        return (N.toString(2)).split(\"\").reduce((a,b)\
    \ => a+b);\n    }\n}", "    //..\n    var converted = N.toString(2)\n    var total\
    \ = 0\n    var split = converted.split('')\n    for(var i = 0; i < split.length;\
    \ i++){\n        total += parseInt(split[i])\n    }\n    return total\n}", " \
    \   //..\n};", "    return N.toString(2).split('').reduce((acc, x) => parseInt(acc)\
    \ + parseInt(x), 0)\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    var binary = \"\";\n    for(var i = N; i > 0;\
    \ i = (i - i % 2) / 2){\n        binary = i % 2 + binary;\n    }\n    var sum\
    \ = 0;\n    for(var j = 0; j < binary.length; j++){\n        sum += parseInt(binary[j]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    return Number(N.toString(2).split('').reduce((a,b)=>a+Number(b),0))\n\
    }", "    // Write your code here\n    if(N < 0 || N > 10000){\n        return\
    \ \"\";\n    }\n    else{\n        return N.toString(2).split('').reduce((acc,\
    \ curr) => acc + +curr, 0);\n    }\n}\n", "  //..\n  var digits = [];\n  var i\
    \ = 0;\n  while (N > 0) {\n    digits[i] = N % 2;\n    N = Math.floor(N / 2);\n\
    \    i++;\n  }\n  var mySum = 0;\n  for (i = 0; i < digits.length; i++) {\n  \
    \  mySum += digits[i];\n  }\n  return mySum;\n}\nsolve(4);", "    // convert N\
    \ to binary\n    let binaryNumber = (N >>> 0).toString(2);\n    // split number\
    \ into an array of digits\n    let binaryArray = binaryNumber.split('');\n   \
    \ // reduce the array of digits to a single number\n    let reduceBinary = binaryArray.reduce((total,\
    \ num) => total + Number(num), 0);\n    return reduceBinary\n}\n", "    return\
    \ N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n    }\n    console.log(solve(1234))\n\
    \    console.log(solve(634))\n    console.log(solve(7))\n    console.log(solve(0))\n\
    \    console.log(solve(1))\n    console.log(solve(2))\n    console.log(solve(3))\n\
    \    console.log(solve(4))\n    console.log(solve(5))\n    console.log(solve(6))\n\
    \    console.log(solve(7))\n    console.log(solve(8))\n    console.log(solve(9))\n\
    \    console.log(solve(10))\n    console.log(solve(11))\n    console.log(solve(12))\n\
    \    console.log(solve(13))\n    console.log(solve(14))\n    console.log(solve(15))\n\
    \    console.log(solve(16))\n    console.log(solve(17))\n    console.log(solve(18))\n\
    \    console.log(solve(19))\n    console.log(solve(20))\n    console.log(solve(21))\n\
    \    console.log(solve(22))\n    console.log(solve(23))\n    console.log(solve(24))\n\
    \    console.log(solve(25))\n    console.log(solve(26))\n    console.log(solve(27))\n\
    \    console.log(solve(28))\n    console.log(solve(29))\n    console.log(solve(30))\n\
    \    console.log(solve(31))\n    console.log(solve(32))\n    console.log(solve(33))\n\
    \    console.log(solve(34))\n    console.log(solve(35))\n    console.log(solve(36))\n\
    \    console.log(solve(37))\n    console.log(solve(38))\n    console.log(solve(39))\n\
    \    console", "    return N.toString(2).split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b));\n}", "    return N.toString(2).split('').reduce((a,b)=>+a+ +b);\n\
    }\n", "    return N.toString(2).split('').reduce((a,b)=>Number(a)+Number(b),0)\n\
    \  }", "  return N.toString(2).split('').reduce((acc, curr) => parseInt(acc) +\
    \ parseInt(curr), 0);\n}\n", "    return N.toString(2).split('').reduce((acc,\
    \ curr) => acc + +curr, 0)\n  }", "    let result = 0;\n    let arr = [];\n  \
    \  let num = N;\n    for(let i = 0; num>=1; i++){\n        let num1 = num % 2;\n\
    \        arr.push(num1);\n        num = (num-num1)/2;\n    }\n    for(let k =\
    \ 0; k<arr.length; k++){\n        result += arr[k];\n    }\n    return result;\n\
    }", "  let binary = N.toString(2)\n  let sum = 0\n  for(let i = 0; i < binary.length;\
    \ i++){\n    sum += Number(binary[i])\n  }\n  return sum\n}", "    // Write your\
    \ code here.\n    let res = [];\n    while(N > 0){\n        res.push(N % 2);\n\
    \        N = parseInt(N / 2);\n    }\n    let result = 0;\n    while(res.length\
    \ > 0){\n        result += res.pop();\n    }\n    return result;\n}\n", "  return\
    \ N.toString(2).split('').reduce((a, b) => parseInt(a) + parseInt(b), 0)\n}\n",
  "  return N.toString(2).split('').reduce((a,b) => Number(a) + Number(b), 0)\n}\n",
  "    // Write your code here\n    let sum =0;\n    let num = N.toString(2).split('');\n\
    \    for(let i =0; i<num.length; i++){\n        sum += parseInt(num[i]);\n   \
    \ }\n    return sum;\n}", "    let decToBin = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < decToBin.length; i++){\n        sum += parseInt(decToBin[i]);\n\
    \    }\n    return sum;\n}\n", "  // Write your code here\n  // Declare an array\
    \ to push binary numbers\n  let arr = [];\n  // Loop through the given number\n\
    \  while(N > 0){\n    // Push the remainder of N divided by 2\n    arr.push(N\
    \ % 2);\n    // Set N equal to the floor of itself divided by 2\n    N = Math.floor(N\
    \ / 2);\n  }\n  // Declare a variable to hold the result of adding arr's elements\n\
    \  let result = arr.reduce((a,b) => a + b);\n  // Return result\n  return result;\n\
    }\n", "    let binary = parseInt(N, 10).toString(2)\n    return binary.split('').reduce((acc,curr)=>acc+=parseInt(curr),0)\n\
    }\n", "  const binary = (N).toString(2);\n  return binary.split('').reduce((acc,\
    \ curr) => +acc + +curr);\n}\n", "  //..\n}\n", "    let binary = N.toString(2);\n\
    \    let total = 0;\n    for(let i = 0; i < binary.length; i++){\n        total\
    \ += parseInt(binary[i]);\n    }\n    return total;\n}", "  //..\n  let binary\
    \ = N.toString(2);\n  let sum = 0;\n  for (let i=0; i<binary.length; i++){\n \
    \   sum += Number(binary[i]);\n  }\n  return sum;\n}", "    return N.toString(2).split('').reduce((acc,curr)=>parseInt(acc)+parseInt(curr),0)\n\
    }\n", "  var sum=0;\n  var n=N.toString(2);\n  console.log(n);\n  for(var i=0;i<n.length;i++){\n\
    \    sum+=n[i]*1;\n  }\n  return sum;\n};\n\nvar N=13;", "  return N.toString(2).split('').reduce((a,b)=>\
    \ +a + +b);\n}\n\nmodule.exports = {\n  solve : solve,\n  info : 'http://www.codewars.com/kata/576bb71bbbcf0951d5000044/train/javascript'\n\
    }", "   var arr = [];\n   var str = \"\";\n   var a = N;\n   while(a > 0){\n \
    \      var b = a % 2;\n       a = Math.floor(a / 2);\n       arr.push(b);\n  \
    \ }\n   for(var i = arr.length - 1; i >= 0; i--){\n       str += arr[i];\n   }\n\
    \   var c = 0;\n   for(var j = 0; j < str.length; j++){\n       c += parseInt(str[j]);\n\
    \   }\n   return c;\n}\n", "    //..\n    return N.toString(2).split('').reduce((acc,\
    \ val) => Number(acc) + Number(val));\n  }\n", "    return (N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0));\n\
    }", "    return N.toString(2).split('').reduce((sum, e) => Number(sum) + Number(e));\n\
    };\n", "   return N.toString(2).split('').reduce((a,b)=>Number(a)+Number(b));\n\
    }\n", "    // Write your code here\n    return N.toString(2).split('').reduce((a,b)=>a+b*1,0)\n\
    }\n", "    let bin = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ bin.length; i++){\n        sum += parseInt(bin[i]);\n    }\n    return sum;\n\
    }", "    return (N >>> 0).toString(2).split('').reduce((a,b) => parseInt(a) +\
    \ parseInt(b), 0)\n}\nsolve(2)", "    let binary = (N >>> 0).toString(2);\n  \
    \  let result = 0;\n    for(let i = 0; i < binary.length; i++){\n        result\
    \ += parseInt(binary[i]);\n    }\n    return result;\n};\n\nsolve(15);", "   \
    \ return N.toString(2).split('').reduce((a, b) => +a + +b, 0);\n}", "    // Write\
    \ your code here\n    let result = 0;\n    let value = N.toString(2);\n    console.log(value);\n\
    \    for(let i = 0; i < value.length; i++){\n        result += parseInt(value[i]);\n\
    \    }\n    return result;\n}", "    //..\n    var num = N;\n    var str = '';\n\
    \    var binary = '';\n    var i = 0;\n    var sum = 0;\n    \n    while(num >=\
    \ 1){\n        str += num % 2;\n        num = Math.floor(num / 2);\n    }\n  \
    \  \n    while(i < str.length){\n        if(str[i] == 1){\n            sum +=\
    \ parseInt(str[i]);\n        }\n        i++;\n    }\n    \n    binary = str.split('').reverse().join('');\n\
    \    \n    console.log(binary);\n    console.log(sum);\n}", "    var sum=0;\n\
    \    var bin=N.toString(2);\n    for(var i=0;i<bin.length;i++){\n        sum+=parseInt(bin[i]);\n\
    \    }\n    return sum;\n}", "    let result = \"\";\n    let number = N;\n  \
    \  while(number > 0){\n        result = (number % 2) + result;\n        number\
    \ = Math.floor(number / 2);\n    }\n    let sumOfDigits = 0;\n    for(let i =\
    \ 0; i < result.length; i++){\n        sumOfDigits += Number(result[i]);\n   \
    \ }\n    return sumOfDigits;\n}", "  // Write your code here\n  // this code will\
    \ convert integer N into a binary number\n  // that will be converted into a string\n\
    \  let binary = (N >>> 0).toString(2);\n  // this code will convert the string\
    \ binary into an array\n  // so we can sum all the digits\n  let array = binary.split('');\n\
    \  // this code will sum all the elements of the array\n  // and will return the\
    \ final solution\n  return array.reduce((a, b) => parseInt(a) + parseInt(b), 0);\n\
    }\n", "    // convert the integer to a string\n    // convert the string to a\
    \ binary number\n    // add all digits\n    // return the answer\n    let string\
    \ = N.toString();\n    let number = parseInt(string, 10).toString(2);\n    let\
    \ sum = 0;\n    for (i = 0; i < number.length; i++){\n        sum += parseInt(number[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    let bin = N.toString(2);\n\
    \    for(let i = 0; i < bin.length; i++){\n        sum += Number(bin[i]);\n  \
    \  }\n    return sum;\n}\n", "    // Write your code here\n    var A = 0;\n  \
    \  var B = 1;\n    var C = 0;\n    var D = 0;\n    var E = 0;\n    var F = 0;\n\
    \    for (var i = 0; i < N; i++) {\n        D = A + B;\n        C = C + D % 10;\n\
    \        A = B;\n        B = D;\n    }\n    D = D.toString();\n    for (var i\
    \ = 0; i < D.length; i++) {\n        E = E + Number(D[i]);\n    }\n    F = E.toString();\n\
    \    return F[F.length - 1];\n}", "    let result = parseInt(N, 10).toString(2);\n\
    \    let total = 0;\n    for(let i = 0; i < result.length; i++){\n        total\
    \ += parseInt(result[i]);\n    }\n    return total;\n}\n", "    let dec = parseInt(N).toString(2)\n\
    \    let result = 0\n    for(let i = 0; i < dec.length; i++){\n        result\
    \ += parseInt(dec[i])\n    }\n    return result\n}\n", "    let count = 0\n  \
    \  let arr = N.toString(2).split('').map(Number)\n    for(let i = 0; i < arr.length;\
    \ i++){\n        count += arr[i]\n    }\n    return count\n}\n", "    // convert\
    \ to binary\n    const binary = Number(N).toString(2);\n    // sum the digits\n\
    \    let sum = 0;\n    for (let i = 0; i < binary.length; i++) {\n        sum\
    \ += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for(let i = 0; i < binary.length; i++){\n    sum += Number(binary[i]);\n\
    \  }\n  return sum;\n}", "    return parseInt(N.toString(2).split('').reduce((a,b)=>(a*1)+(b*1)));\n\
    };\n", "    let bin = N.toString(2)\n    let sum = 0\n    for(let i = 0; i < bin.length;\
    \ i++){\n        sum += parseInt(bin[i])\n    }\n    return sum\n}", "  let count\
    \ = 0;\n  let binary = N.toString(2).split('').map(function(item) {\n    return\
    \ parseInt(item, 10);\n  });\n  for (let i = 0; i < binary.length; i++) {\n  \
    \  count += binary[i];\n  }\n  return count;\n}", "    return N.toString(2).split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n}", "    // Write your code here\n   \
    \ \n    let number = N;\n    let binary = '';\n    if(number === 0){\n       \
    \ return '0';\n    }\n    while(number > 0){\n        binary = (number % 2) +\
    \ binary;\n        number = Math.floor(number / 2);\n    }\n    return binary;\n\
    };\n\nconst string = solve(8);", "    let result = (N >>> 0).toString(2)\n   \
    \ // >>> is a Bitwise operator called Zero-fill right shift.\n    // >>> will\
    \ only use zero bits to pad the left side of the number.\n    let sum = 0\n  \
    \  for (let number of result){\n        sum += Number(number)\n    }\n    return\
    \ sum\n}\n", "    let result = \"\";\n    let sum = 0;\n    let remainder = 0;\n\
    \    while(N > 0){\n        remainder = N % 2;\n        N = Math.floor(N / 2);\n\
    \        sum += remainder;\n        result = remainder + result;\n    }\n    return\
    \ result + \" \" + sum;\n}", "    //..\n    const n = N.toString(2);\n    const\
    \ nArray = n.split('');\n    const reducer = (accumulator, currentValue) => parseInt(accumulator)\
    \ + parseInt(currentValue);\n    return nArray.reduce(reducer);\n}", "    //..\n\
    \    let result = 0;\n    N = N.toString(2);\n    for(let i = 0; i < N.length;\
    \ i++){\n        result += parseInt(N[i]);\n    }\n    return result;\n}", " \
    \   let bin = N.toString(2);\n    let arr = bin.split('');\n    let result = 0;\n\
    \    for(let i = 0; i < arr.length; i++){\n        result += Number(arr[i]);\n\
    \    }\n    return result;\n}", "    let str = N.toString(2);\n    console.log(str);\n\
    \    let sum = 0;\n    for(i = 0; i < str.length; i++){\n        sum += Number(str[i]);\n\
    \    }\n    return sum;\n}\nsolve(26);", "    let binaryArray = [];\n    while(\
    \ N > 0){\n        let numBinary = N % 2;\n        binaryArray.push(numBinary);\n\
    \        N = parseInt(N / 2);\n    }\n    let totlaBinary = binaryArray.reverse().join('');\n\
    \    return totlaBinary;\n};\n", "    const binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n};", "    let sol = N.toString(2);\n    let arr = [];\n\
    \    for(let i = 0; i < sol.length; i++){\n        arr.push(sol[i]);\n    }\n\
    \    return arr.reduce((a, b) => {\n        return parseInt(a) + parseInt(b);\n\
    \    });\n}\n", "    let sum = 0;\n    let binArray = [];\n    while(N > 0){\n\
    \        let  remainder = N % 2;\n        N = Math.floor(N / 2);\n        binArray.push(remainder);\n\
    \    }\n    binArray.reverse();\n    for(let i = 0; i < binArray.length; i++){\n\
    \        sum += binArray[i];\n    }\n    return sum;\n}", "    // write your code\
    \ in JavaScript (Node.js 8.9.4)\n    let binaryNumber = '';\n    while(N !== 0){\n\
    \        if(N % 2 === 0){\n            binaryNumber = '0' + binaryNumber;\n  \
    \      } else {\n            binaryNumber = '1' + binaryNumber;\n        }\n \
    \       N = Math.floor(N / 2);\n    }\n    return binaryNumber;\n}\n", "    //\
    \ Write your code here.\n    const binary = N.toString(2);\n    let sum = 0;\n\
    \    for (let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "  return N.toString(2).split('').reduce((a, b) =>\
    \ parseInt(a) + parseInt(b), 0)\n}\n", "  var bin = decToBin(N);\n  return bin;\n\
    }\n", "    // Write your code here\n    return parseInt(N.toString(2).split('').reduce((acc,\
    \ currentValue) => {\n        return acc + parseInt(currentValue);\n    }, 0));\n\
    }\n", "    //we will return this\n    //convert to binary\n    let binaryNumber\
    \ = N.toString(2)\n    // break it up and sum up the numbers\n    let sum = binaryNumber.split('').reduce((a,b)\
    \ => Number(a) + Number(b))\n    return sum\n  }\n", "    return N.toString(2).split('').reduce((acc,\
    \ e) => acc + parseInt(e), 0);\n};\n", "  return N.toString(2).split('').reduce((a,b)\
    \ => +a + +b, 0);\n}\n", "  const bin = (N >>> 0).toString(2)\n  let sum = 0\n\
    \  for (let i = 0; i < bin.length; i++) {\n    sum += Number(bin[i])\n  }\n  return\
    \ sum\n}", "    return parseInt(N.toString(2).split('').reduce((a, b) => parseInt(a)\
    \ + parseInt(b)))\n};\n", "    let num = Number(N).toString(2);\n    let i = num.split(\"\
    \").reduce((a, b) => {return +a + +b});\n    return i;\n}\n", "    //..\n    return\
    \ parseInt(N.toString(2).split('').reduce((a,b)=>a+b));\n};", "    let bin = (N).toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < bin.length; i++){\n        sum += Number(bin[i]);\n\
    \    }\n    return sum;\n}", "  return N.toString(2).split('').reduce((a,b) =>\
    \ Number(a) + Number(b));\n}\n", "    let num = N;\n    let count = 0;\n    let\
    \ sum = 0;\n    while(num > 0){\n        if(num % 2 == 1){\n            sum +=\
    \ Math.pow(2, count);\n        }\n        count++;\n        num = Math.floor(num\
    \ / 2);\n    }\n    return sum;\n}\n", "  var s=\"\";\n  while(N>0){\n    s=N%2+s;\n\
    \    N=parseInt(N/2);\n  }\n  return parseInt(s,2);\n}", "    // create a variable\
    \ for the binary number\n    let num = N;\n    // create a variable for the sum\
    \ of the digits in binary number\n    let sum = 0;\n    // create a variable to\
    \ store the binary number\n    let store = 0;\n    // check if the number is a\
    \ valid number\n    if(N >= 0 && N <= 10000){\n      // while the number is greater\
    \ than 0\n      while(num > 0){\n        // store the remainder \n        store\
    \ = num % 2;\n        // add the remainder to the sum\n        sum += store;\n\
    \        // divide the number by 2\n        num = Math.floor(num / 2);\n     \
    \ }\n      // return the sum\n      return sum;\n    }\n  }\n  // Call the function\n\
    \  solve(40);", "  let result = '';\n  while(N>0){\n      result = N%2 + result;\n\
    \      N = Math.floor(N/2);\n  }\n  return result;\n}", "    let binario = (N).toString(2);\n\
    \    let suma = 0;\n    for(let i = 0; i < binario.length; i++){\n        suma\
    \ += parseInt(binario[i]);\n    }\n    return suma;\n}", "  return (N.toString(2).split('').reduce((a,b)\
    \ => parseInt(a) + parseInt(b)));\n}", "    //..\n    const binaryNum = parseInt(N,\
    \ 10).toString(2);\n    const sum = binaryNum.split('').reduce((acc, item) =>\
    \ acc + +item, 0);\n    return sum;\n}", "    let sum = 0;\n    let binary = \"\
    \";\n    while(N > 0){\n        binary = (N % 2) + binary;\n        N = Math.floor(N\
    \ / 2);\n    }\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "  return [...N.toString(2)].reduce((r, e) => r +\
    \ Number(e), 0)\n}\n", "    return N.toString(2).split('').reduce((acc,item)=>parseInt(acc)+parseInt(item),0);\n\
    }", "    // Write your code here\n    let binary = [];\n    while(N > 0){\n  \
    \      binary.push(N % 2);\n        N = Math.floor(N / 2);\n    }\n    return\
    \ binary.reduce((a, b) => a + b, 0);\n}\n", "    let result = 0;\n    let x =\
    \ N.toString(2);\n    for(let i = 0; i < x.length; i++){\n      result += parseInt(x[i]);\n\
    \    }\n    return result;\n  }", "    let total = 0;\n    if(N === 0) return\
    \ 0;\n    while(N > 0){\n        let remainder = N % 2;\n        N = Math.floor(N\
    \ / 2);\n        total += remainder;\n    }\n    return total;\n}\n", "    return\
    \ N.toString(2).split('').reduce((prev, current) => parseInt(prev) + parseInt(current));\n\
    \  }\n  solve(12);", "    //..\n    return Number.parseInt(N,10).toString(2).split('').reduce((a,b)=>Number(a)+Number(b),0);\n\
    }", "    // write your code in JavaScript (Node.js 8.9.4)\n    let binaryNumber\
    \ = N.toString(2);\n    let result = 0;\n    let number = 0;\n    for(let i =\
    \ 0; i < binaryNumber.length; i++){\n        if(parseInt(binaryNumber[i])){\n\
    \            result += parseInt(binaryNumber[i]);\n        }\n    }\n    return\
    \ result;\n}", "    // Your code here\n    let num = parseInt(N, 10);\n    let\
    \ bin = num.toString(2);\n    let total = 0;\n    for (let i=0; i<bin.length;\
    \ i++){\n        total += parseInt(bin[i]);\n    }\n    return total;\n}\n", " \
    \   var total = 0;\n    var binary = N.toString(2);\n    var totalSum = 0;\n \
    \   for(var i = 0; i < binary.length; i++){\n        totalSum += parseInt(binary[i]);\n\
    \    }\n    return totalSum;\n}\n\nvar result = solve(5);"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

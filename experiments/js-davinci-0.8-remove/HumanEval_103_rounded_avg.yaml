name: HumanEval_103_rounded_avg
language: js
prompt: "//You are given two positive integers n and m, and your task is to compute\
  \ the\n// average of the integers from n through m (including n and m). \n// Round\
  \ the answer to the nearest integer and convert that to binary.\n// If n is greater\
  \ than m, return -1.\n// Example:\nfunction rounded_avg(n, m){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = rounded_avg;\n  assert.deepEqual(candidate(1, 5),\"0b11\");\n  assert.deepEqual(candidate(7,\
  \ 13),\"0b1010\");\n  assert.deepEqual(candidate(964, 977),\"0b1111001010\");\n\
  \  assert.deepEqual(candidate(996, 997),\"0b1111100100\");\n  assert.deepEqual(candidate(560,\
  \ 851),\"0b1011000010\");\n  assert.deepEqual(candidate(185, 546),\"0b101101110\"\
  );\n  assert.deepEqual(candidate(362, 496),\"0b110101101\");\n  assert.deepEqual(candidate(350,\
  \ 902),\"0b1001110010\");\n  assert.deepEqual(candidate(197, 233),\"0b11010111\"\
  );\n  assert.deepEqual(candidate(7, 5),-1);\n  assert.deepEqual(candidate(5, 1),-1);\n\
  \  assert.deepEqual(candidate(5, 5),\"0b101\");\n}\n\ntest();"
completions: ["    if(n > m){\n        return -1;\n    }\n    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = Math.round(sum\
    \ / (m - n + 1));\n    return avg.toString(2);\n}", "  if (n>m) return -1;\n \
    \ var sum = 0;\n  for (var i = n; i <= m; i++) {\n    sum += i;\n  }\n  return\
    \ (Math.round(sum/(m-n+1))).toString(2);\n}", "  if (n > m) return -1;\n  return\
    \ Math.round((n + m) / 2).toString(2);\n}", "    let sum = 0\n    for(let i =\
    \ n; i<=m; i++){\n        sum += i\n    }\n    let result = Math.round(sum/(m-n+1))\n\
    \    let bin = result.toString(2)\n    return bin\n}\n", "\tif (n > m) {\n\t\t\
    return -1;\n\t} else {\n\t\tvar average = Math.round((n + m) / 2);\n\t\treturn\
    \ average.toString(2);\n\t}\n}", "    if(n>m){\n        return -1;\n    }\n  \
    \  var total = 0;\n    for(var i = n; i <= m; i++){\n        total += i;\n   \
    \ }\n    var avg = Math.round(total / (m-n+1));\n    return avg.toString(2);\n\
    }", "    //your code here!\n    var avg = ((n + m) / 2) % 1;\n    avg = avg >\
    \ 0.5 ? avg = Math.ceil((n + m) / 2) : avg = Math.floor((n + m) / 2);\n    var\
    \ binary = avg.toString(2);\n    if (n > m) {\n        return -1;\n    } else\
    \ {\n        return binary;\n    }\n  }\n", "  var average = Math.round((n + m)\
    \ / 2);\n  return average > m ? -1 : average.toString(2);\n}\n", "    let avg\
    \ = Math.round((n + m) / 2);\n    let binary = avg.toString(2);\n    return binary\n\
    }", "let avg = Math.round((n+m)/2);\nreturn avg.toString(2);\n}", "   //your code\
    \ here\n   var avg = Math.round((n + m) / 2);\n   return avg.toString(2);\n}",
  "    n > m ? -1 : Math.round((n + m) / 2).toString(2);\n}", "    if(n<=m){\n   \
    \ var average =  Math.round(((n+m)/2));\n    var binary = (average >>> 0).toString(2);\n\
    \    return binary;\n    }\n    else{\n        return -1;\n    }\n}", "  let avg;\n\
    \  if(n > m){\n    return -1;\n  }\n  let sum = 0;\n  let count = 0;\n  while(n\
    \ <= m){\n    sum += n;\n    count += 1;\n    n += 1;\n  }\n  avg = sum / count;\n\
    \  avg = Math.round(avg);\n  return avg.toString(2);\n}", "    var num=Math.round((n+m)/2)\n\
    \    if(n>m){\n        return -1\n    }else{\n        return num.toString(2)\n\
    \    }\n}", "    if(n > m){\n        return -1;\n    }\n    let sum = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let rounded = Math.round(sum\
    \ / (m - n + 1));\n    return rounded.toString(2);\n}\n", "    let sum = 0;\n\
    \    let count = 0;\n    if(n > m){\n        return -1;\n    }else if(n === m){\n\
    \        return n.toString(2);\n    }else{\n        for(i = n; i <= m; i++){\n\
    \            sum += i;\n            count++;\n        }\n        let average =\
    \ sum / count;\n        let rounded = Math.round(average);\n        return rounded.toString(2);\n\
    \    }\n}", "  if (n > m) return -1;\n  var a = n + m;\n  var n = a / 2;\n  var\
    \ b = Math.round(n);\n  var c = b.toString(2);\n  return c;\n}\n", "    if(n >\
    \ m){\n        return -1;\n    }\n    else{\n        let arr = [];\n        let\
    \ sum = 0;\n        for(let i = n; i <= m; i++){\n            arr.push(i);\n \
    \           sum += i;\n        }\n        return toBinary(Math.round(sum / arr.length));\n\
    \    }\n}", "  let num = Math.round((n + m) / 2);\n  return num.toString(2);\n\
    }\n", "  //the average of n and m rounded down to the nearest integer\n  var avg\
    \ = Math.floor((n + m) / 2);\n  //convert the integer to binary\n  return avg.toString(2);\n\
    }", "    if(n > m){\n        return -1;\n    }else{\n        let sum = 0;\n  \
    \      for(let i = n; i <= m; i++){\n            sum += i;\n        }\n      \
    \  return (Math.round(sum / (m - n + 1))).toString(2);\n    }\n}", "    if(n >\
    \ m){\n        return -1;\n    }\n    let arr = [];\n    for(let i = n; i <= m;\
    \ i++){\n        arr.push(i);\n    }\n    let sum = arr.reduce((a,b) => a + b,\
    \ 0);\n    let avg = Math.round(sum / arr.length);\n    return avg.toString(2);\n\
    }", "  if (n > m) return -1;\n  var result = Math.round((n + m) / 2);\n  return\
    \ result.toString(2);\n}\n", "    if(n > m){\n        return -1;\n    }else if(n\
    \ === m){\n        return n.toString(2);\n    }else{\n        var avg = Math.round((n\
    \ + m) / 2);\n        return avg.toString(2);\n    }\n}\n", "    if(n > m){\n\
    \        return -1;\n    } else {\n        let average = Math.round((n + m) /\
    \ 2);\n        return average.toString(2);\n    }\n}\n", "  var sum = 0;\n  if(n\
    \ > m){\n    return -1;\n  }\n  for(var i = n; i <= m; i++){\n    sum += i;\n\
    \  }\n  return (Math.round(sum/(m-n+1))).toString(2);\n}", "  //n=9, m=19\n  //n=5,\
    \ m=15\n  //n=5, m=5\n  //n=10, m=5\n  if(n>m){\n    return -1;\n  }\n  var result\
    \ = ((n+m)/2);\n  var avg = Math.round(result);\n  var binary = avg.toString(2);\n\
    \  console.log(binary);\n}\n\nrounded_avg(9,19);", "    if(n > m){\n        return\
    \ -1;\n    }\n    let binaryStr = Math.round((n + m) / 2).toString(2);\n    return\
    \ parseInt(binaryStr);\n}", "  if (n > m) return -1;\n  let result = (n + m) /\
    \ 2;\n  let binary = result.toString(2);\n  return binary;\n}\n", "  if (n > m)\
    \ return -1;\n  let sum = 0;\n  for (let i = n; i <= m; i++){\n    sum += i;\n\
    \  }\n  return Number(sum / (m - n + 1)).toString(2);\n}", "    if(n > m){\n \
    \       return -1;\n    } else {\n        let sum = 0;\n        for(let i = n;\
    \ i <= m; i++){\n            sum += i;\n        }\n        let avg = Math.round(sum/(m-n+1));\n\
    \        return avg.toString(2);\n    }\n}", "    var total = 0;\n    var count\
    \ = 0;\n    var avg = 0;\n    var rounded = 0;\n    if(n > m){\n        return\
    \ -1;\n    }\n    for(var i = n; i <= m; i++){\n        total += i;\n        count++;\n\
    \    }\n    avg = total / count;\n    rounded = Math.round(avg);\n    return rounded.toString(2);\n\
    }\n", "    let arr = [n, m];\n    if (n>m){\n        return -1;\n    }\n    let\
    \ sum = arr.reduce((num1, num2) => num1 + num2, 0);\n    let avg = Math.round(sum\
    \ / arr.length);\n    let bin = avg.toString(2);\n    return bin;\n}", "  var\
    \ a = 0;\n  if (n > m) {\n    return -1;\n  }\n  for (var i = n; i <= m; i++)\
    \ {\n    a += i;\n  }\n  var avg = Math.round(a / (m - n + 1));\n  return avg.toString(2);\n\
    }", "  let total = 0;\n  for(let i = n; i <= m; i++){\n    total += i;\n  }\n\
    \  const avg = Math.round(total / (m - n + 1));\n  return avg.toString(2);\n}\n",
  "  if (n > m) return -1;\n  return parseInt(Math.round((n + m) / 2).toString(2));\n\
    }", "    if(n > m){\n        return -1;\n    }\n    const add = n + m;\n    const\
    \ divide = add / 2;\n    const rounded = Math.round(divide);\n    const binary\
    \ = rounded.toString(2);\n    return binary;\n}\n", "  if (n > m) return -1;\n\
    \  const avg = Math.round((n + m) / 2);\n  return avg.toString(2);\n}\n", "  \
    \  var total = 0;\n    for(var i = n; i <= m; i++){\n        total += i;\n   \
    \ }\n    var avg = Math.round(total / (m - n + 1));\n    return parseInt(avg,\
    \ 10).toString(2);\n}\n", "  if (n > m) return -1;\n  let sum = 0;\n  for (let\
    \ i = n; i <= m; i++) {\n    sum += i;\n  }\n  let avg = sum / (m - n + 1);\n\
    \  return parseInt(avg.toFixed(0)).toString(2);\n}", "    let arr = [];\n    if(n\
    \ > m){\n        return -1;\n    }\n    for(let i = n; i <= m; i++){\n       \
    \ arr.push(i);\n    }\n    let sum = arr.reduce((acc, curr) => acc + curr, 0);\n\
    \    return parseInt(sum / arr.length).toString(2);\n}\n", "  if (n > m) return\
    \ -1;\n  var sum = 0;\n  for (var i = n; i <= m; i++) {\n    sum += i;\n  }\n\
    \  return Math.round(sum / (m - n + 1)).toString(2);\n}", "  if (n > m) return\
    \ -1;\n  let average = Math.round((n + m) / 2);\n  return average.toString(2);\n\
    }\n", "    let sum = 0;\n    let counter = 0;\n    let avg = 0;\n    for(let i\
    \ = n; i <= m; i++){\n        sum += i;\n        counter++;\n    }\n    avg =\
    \ Math.round(sum / counter);\n    return avg.toString(2);\n}", "  var sum = 0;\n\
    \  if(n > m){\n    return -1;\n  }\n  for(var i = n; i <= m; i++){\n    sum +=\
    \ i;\n  }\n  var avg = Math.round(sum/(m-n+1));\n  return avg.toString(2);\n}",
  "  if (n > m) return -1;\n  let sum = 0;\n  for (let i = n; i <= m; i++) {\n   \
    \ sum += i;\n  }\n  const avg = Math.round(sum / (m - n + 1));\n  return avg.toString(2);\n\
    }", "    // multiply by 3 to round to the nearest integer\n    const avg = Math.round((n\
    \ + m) / 2 * 3) / 3;\n    if (n < m) {\n        return parseInt(avg, 10).toString(2);\n\
    \    } else {\n        return -1;\n    }\n};", "  if (n > m) return -1;\n  return\
    \ Math.round((n + m) / 2).toString(2);\n}", "  let decimal = Math.round((n + m)\
    \ / 2);\n  if (n > m) {\n    return -1;\n  } else {\n    return decimal.toString(2);\n\
    \  }\n}", "    var x = Math.round((n + m) / 2);\n    var binary = x.toString(2);\n\
    \    return x > m ? -1 : binary;\n}", "  if (n > m) return -1;\n  let sum = 0;\n\
    \  for (let i = n; i <= m; i++){\n    sum += i;\n  }\n  return parseInt(sum /\
    \ (m - n + 1)).toString(2);\n}", "\tif (n > m) {\n\t\treturn -1;\n\t}\n\tvar x\
    \ = (n + m) / 2;\n\tx = Math.round(x);\n\tvar y = x.toString(2);\n\treturn y;\n\
    }\n", "    let sum = 0;\n    let count = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n        count++;\n    }\n    let avg = Math.round(sum / count);\n\
    \    return avg.toString(2);\n}", "    return (n>m) ? -1 : (Math.round((n+m)/2)).toString(2);\n\
    \  }\n  \n  //Test.assertEquals(rounded_avg(3, 1), '11');\n  //Test.assertEquals(rounded_avg(4,\
    \ -5), '-101');\n  //Test.assertEquals(rounded_avg(10, 10), '10');\n  \n  ////////////////////////////////////////////\n\
    \  \n  // 7.\n  // In the world of SEO (Search Engine Optimization), there are\
    \ certain \n  // important keywords that web pages try to include. \n  // Write\
    \ a function that takes an array of keywords, \n  // and a string of text, and\
    \ returns an integer representing the number \n  // of keywords from the array\
    \ that are present in the text.", "    if(n>m){\n        return -1;\n    }\n \
    \   let x=0;\n    for(let i=n;i<=m;i++){\n        x=x+i;\n    }\n    let r=(x/(m-n+1));\n\
    \    r=Math.round(r);\n    r=r.toString(2);\n    return r;\n}", "    var avg =\
    \ Math.round((n + m) / 2);\n    return avg > 0 ? avg.toString(2) : -1;\n}\n",
  "    if(n > m){\n        return -1;\n    }\n    let result = Math.round((n + m)\
    \ / 2);\n    return result.toString(2);\n}\n", "    var n = n+1;\n    var m =\
    \ m-1;\n    var t = [];\n    for(n; n<=m; n++){\n        t.push(n);\n    }\n \
    \   var t = t.reduce(function(a,b){\n        return a+b;\n    });\n    return\
    \ t/t.length;\n\n}", "    var sum = 0;\n    var count = 0;\n    var avg = 0;\n\
    \    for(var i = n; i <= m; i++){\n        count++;\n        sum += i;\n    }\n\
    \    avg = Math.round(sum/count);\n    return avg.toString(2);\n}\n", "  if (n\
    \ > m) return -1;\n  let binary = Math.round((n + m) / 2).toString(2);\n  return\
    \ binary;\n}\n", "    if(n>m){\n        return -1;\n    }\n    let arr = [n,m];\n\
    \    let sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return (Math.round(sum/arr.length)).toString(2);\n}", "  let sum =\
    \ 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let num = Math.round(sum/(m-n+1)).toString(2);\n\
    \  return num;\n}\n", "  if (n > m) return -1;\n  return Number(Math.round( (n\
    \ + m) / 2)).toString(2);\n}\n", "\treturn n>m ? -1 : Math.round((n+m)/2);\n}",
  "    let avg = Math.round((n + m) / 2);\n    return avg.toString(2);\n  }\n  console.log(rounded_avg(7,\
    \ 9));\n  console.log(rounded_avg(1, 8));\n  console.log(rounded_avg(4, 2));\n\
    \  console.log(rounded_avg(10, 4));\n  console.log(rounded_avg(12, 4));\n  console.log(rounded_avg(9,\
    \ 10));", "  let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n\
    \  sum = Math.round(sum/(m-n+1));\n  return sum.toString(2);\n}", "    //  return\
    \ answer\n    if(n>m){\n        return -1;\n    }\n    let sum=0;\n    for(let\
    \ i=n;i<=m;i++){\n        sum+=i;\n    }\n    return parseInt(sum/(m-n+1)).toString(2);\n\
    }", "    let avg = Math.round((n + m) / 2);\n    return avg > 0 ? avg.toString(2)\
    \ : -1;\n}", "    if(n>m){\n        return -1;\n    }\n    let roundedAverage\
    \ = Math.round((n+m)/2);\n    console.log(roundedAverage);\n    let binary = \"\
    \";\n    while(roundedAverage != 0){\n        binary = (roundedAverage % 2) +\
    \ binary;\n        roundedAverage = Math.floor(roundedAverage/2);\n    }\n   \
    \ return binary;\n}\n", "  let binary = '';\n  let num = Math.round((n + m) /\
    \ 2);\n  if (n < m) {\n    while (num > 0) {\n      if (num % 2 === 0) {\n   \
    \     binary = '0' + binary;\n      } else {\n        binary = '1' + binary;\n\
    \      }\n      num = Math.floor(num / 2);\n    }\n    return binary;\n  } else\
    \ {\n    return -1;\n  }\n}\n", "    var sum = 0;\n    var count = 0;\n    if(n\
    \ > m){\n        return -1;\n    }\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i;\n        count += 1;\n    }\n    var avg = Math.round(sum/count);\n\
    \    var binary = avg.toString(2);\n    return binary;\n}", "    return n > m\
    \ ? -1 : Math.round((n + m) / 2).toString(2);\n}", "    if(n > m){\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum\
    \ += i;\n    }\n    let avg = Math.round(sum / (m - n + 1));\n    return avg.toString(2);\n\
    }", "    let sum = 0;\n    let count = 0;\n    if(n>m){\n        return -1;\n\
    \    }\n    for(let i = n; i <= m; i++){\n        sum+=i;\n        count++;\n\
    \    }\n    let avg = Math.round(sum/count);\n    return avg.toString(2);\n}",
  "    if(n>m){\n        return -1;\n    }\n    var total = 0;\n    for(var i = n;\
    \ i <= m; i++){\n        total += i;\n    }\n    var avg = Math.round(total/(m-n+1));\n\
    \    return avg.toString(2);\n}\n", "  \n  if(n > m){\n    return -1;\n  }\n \
    \ let sum = 0;\n  for(let i = n; i <= m; i++){\n    sum += i;\n  }\n  let rounded\
    \ = Math.round(sum / (m - n + 1));\n  return rounded.toString(2);\n}", "    let\
    \ avg = 0;\n    if(n > m){\n        return -1;\n    }\n    else{\n        for(let\
    \ i = n; i <= m; i++){\n            avg += i;\n        }\n        return Math.round(avg/(m-n+1)).toString(2);\n\
    \    }\n}", "  return m > n ? (Math.round((m+n)/2)).toString(2) : -1;\n}\n", " \
    \ if (n > m) return -1;\n  return Number(Math.round(avg([n, m]))).toString(2);\n\
    }", "    let result = -1;\n    if(n <= m){\n      let sum = n + m;\n      result\
    \ = Math.round(sum / 2);\n      result = result.toString(2);\n    }\n    return\
    \ result;\n  }\n  \n  //Test Code\n  console.log(rounded_avg(1,7));\n  console.log(rounded_avg(8,8));\n\
    \  console.log(rounded_avg(8,2));\n  console.log(rounded_avg(8,8));\n  console.log(rounded_avg(1,1));\n\
    \  \n  \n  //Write a function that takes in an integer and returns the sum of\
    \ all \n  //the numbers from 1 to that integer.\n  //Example:\n  function sum_1_to_n(n){\n\
    \    let result = 0;\n    for(let i = 1; i <= n; i++){\n      result += i;\n \
    \   }\n    return result;\n  }\n  \n  //Test Code\n  console.log(sum_1_to_n(5));\n\
    \  console.log(sum_1_to_n(8));\n  console.log(sum_1_to_n(13));\n  console.log(sum_1_to_n(1));\n\
    \  \n  \n  //Write a function that takes in an integer and prints all the numbers\
    \ from 1 to that integer.\n  //However, if the number is divisible by 3 print\
    \ \"fizz\", if the number is divisible by 5 print \"buzz\",\n  //if the number\
    \ is divisible by both 3 and 5 print \"fizzbuzz\".\n  //Example:\n  function fizzbuzz(n){\n\
    \    for(let i = 1; i <= n; i++){\n      if(i % 15 === 0){\n        console.log(\"\
    fizzbuzz\");\n      }else if(i % 3 === 0){\n        console.log(\"fizz\");\n \
    \     }else if(i % 5 === 0){\n        console.log(\"buzz\");\n      }else{\n \
    \       console.log(i);\n      }\n    }\n  }\n  \n  //Test Code\n  fizzbuzz(35",
  "  if (n > m) return -1;\n  let sum = 0;\n  for (let i = n; i <= m; i++){\n    sum\
    \ += i;\n  }\n  return Math.round(sum / (m - n + 1)).toString(2);\n}\n", "   \
    \ if(n > m){\n        return -1;\n    }\n    return Math.round((n + m) / 2).toString(2);\n\
    }", "    //start coding here\n}\n", "  var avg = (n + m) / 2;\n  return avg %\
    \ 1 === 0 ? avg.toString(2) : Math.round(avg).toString(2);\n}", "    var sum =\
    \ 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n    }\n    return parseInt(sum\
    \ / (m - n + 1));\n}", "    var sum = 0;\n    var count = 0;\n    if(n > m){\n\
    \        return -1;\n    }\n    for(var i = n; i <= m; i++){\n        sum += i;\n\
    \        count++;\n    }\n    var avg = Math.round(sum/count);\n    var binary\
    \ = avg.toString(2);\n    return binary;\n}\n", "  \n}", "\tif(n > m){\n\t\treturn\
    \ -1;\n\t}\n\tif(n < 0 || m < 0){\n\t\treturn 0;\n\t}\n\tlet total = 0;\n\tfor(let\
    \ i = n; i <= m; i++){\n\t\ttotal += i;\n\t}\n\tlet rounded = Math.round(total/(m-n+1));\n\
    \treturn rounded.toString(2);\n}\n", "    if(n > m){\n        return -1;\n   \
    \ }\n    const avg = Math.round((n + m) / 2);\n    return Number(avg).toString(2);\n\
    }", "    if(n > m){\n        return -1;\n    } else {\n        let sum = 0;\n\
    \        for(let i = n; i <= m; i++){\n            sum += i;\n        }\n    \
    \    let avg = Math.round(sum / (m - n + 1));\n        return parseInt(avg, 10).toString(2);\n\
    \    }\n}", "    if(n > m){\n        return -1;\n    }\n    let sum = 0;\n   \
    \ for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = Math.round(sum\
    \ / (m - n + 1));\n    return avg.toString(2);\n}\n", "  var avg = 0;\n  var sum\
    \ = 0;\n  var rounded = 0;\n  if(n > m){\n    return -1;\n  }\n  for(var i = n;\
    \ i <= m; i++){\n    sum += i;\n  }\n  avg = sum / (m - n + 1);\n  rounded = Math.round(avg);\n\
    \  return rounded.toString(2);\n}\n", "    let arr = [];\n    let sum = 0;\n \
    \   let avg = 0;\n    let rounded = 0;\n    let binary = '';\n    if(n>m){\n \
    \       return -1;\n    }\n    for(let i = n; i <= m; i++){\n        arr.push(i);\n\
    \    }\n    for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n   \
    \ }\n    avg = sum/arr.length;\n    rounded = Math.round(avg);\n    binary = rounded.toString(2);\n\
    \    return binary;\n}", "    let total = 0\n    let count = 0\n    if(n > m){\n\
    \        return -1\n    }\n    for(let i = n; i <= m; i++){\n        total +=\
    \ i\n        count++\n    }\n    let answer = Math.round(total/count)\n    return\
    \ answer.toString(2)\n}", "    if(n>m){\n      return -1;\n    }\n    let nArray\
    \ = n.toString(2).split('');\n    let mArray = m.toString(2).split('');\n    let\
    \ sum = nArray.length + mArray.length;\n    let length = sum/2;\n    let result\
    \ = Math.ceil(length);\n    return result.toString(2);\n  }", "    if(n > m){\n\
    \        return -1;\n    }\n    let total = 0;\n    let count = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        total += i;\n        count += 1;\n    }\n    let\
    \ average = Math.round(total / count);\n    let binary = average.toString(2);\n\
    \    return binary;\n}", "    // if(m < n) return -1;\n    var sum = 0;\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    return Math.round(sum/(m-n+1)).toString(2);\n\
    }", "\tif (n > m) return -1;\n\tlet arr = [];\n\tfor (let i = n; i <= m; i++)\
    \ {\n\t\tarr.push(i);\n\t}\n\tlet sum = arr.reduce((acc, x) => acc + x, 0);\n\t\
    let average = Math.round(sum / arr.length);\n\tlet binary = average.toString(2);\n\
    \treturn parseInt(binary);\n}\n", "    \n    //the average\n    let average =\
    \ Math.round((n + m) / 2);\n    \n    //return the average and convert to binary\n\
    \    return (n <= m) ? average.toString(2) : -1;\n  }\n", "    let average = Math.round((n\
    \ + m) / 2);\n    return average.toString(2);\n}", "    if(n>m){\n        return\
    \ -1;\n    }\n    let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum\
    \ += i;\n    }\n    let avg = Math.round(sum/(m-n+1));\n    return avg.toString(2);\n\
    }\n", "    var result = 0;\n    for(i = n; i <= m; i++){\n        result += i;\n\
    \    }\n    result = Math.round(result / (m - n + 1));\n    return result.toString(2);\n\
    }\n", "  if (n > m) return -1;\n  var total = 0;\n  for (var i = n; i <= m; i++){\n\
    \    total += i;\n  }\n  return Math.round(total/(m-n+1)).toString(2);\n}\n",
  "    // I'm taking the average by taking the sum and dividing by 2:\n    let avg\
    \ = (n + m) / 2;\n    // Rounding the average:\n    avg = Math.round(avg);\n \
    \   // Making sure the average is an integer:\n    if (avg % 1 === 0) {\n    \
    \    // Converting to binary:\n        avg = avg.toString(2);\n        // Returning\
    \ the result:\n        return avg;\n    } else {\n        return -1;\n    }\n\
    }\n", "    let sum = 0;\n    let i = 0;\n    if(n <= m){\n      for(n; n <= m;\
    \ n++){\n        sum += n;\n        i++;\n      }\n      let avg = sum / i;\n\
    \      let rounded = Math.round(avg);\n      let binary = Number(rounded).toString(2);\n\
    \      return binary;\n    }\n    else{\n      return -1;\n    }\n  }\n  console.log(rounded_avg(100,34));\n\
    \  console.log(rounded_avg(100,100));\n  console.log(rounded_avg(100,200));\n\
    \  console.log(rounded_avg(100,300));\n  console.log(rounded_avg(100,400));\n\
    \  console.log(rounded_avg(50,300));\n  console.log(rounded_avg(50,75));\n  console.log(rounded_avg(50,10));",
  "    let total = 0;\n    let counter = 0;\n    for(let i = n; i <= m; i++){\n  \
    \      total += i;\n        counter++;\n    }\n    let avg = Math.round(total/counter);\n\
    \    return avg.toString(2);\n}", "  if (n > m) return -1;\n  return Math.round((n\
    \ + m) / 2).toString(2);\n}\n", "  if (n > m) return -1;\n  let result = Math.round((n\
    \ + m) / 2);\n  return result.toString(2);\n}\n", "    n = n.toString(2);\n  \
    \  m = m.toString(2);\n    if(n > m){\n        return -1;\n    }\n    else{\n\
    \        return Math.round((n + m) / 2).toString(2);\n    }\n  }\n", "    if(n>m){\n\
    \        return -1;\n    }else{\n        let avg = Math.round((n+m)/2);\n    \
    \    return avg.toString(2);\n    }\n}\n", "    let average = n;\n    while(n\
    \ < m){\n        n++\n        average += n\n    }\n    console.log(Math.round(average/(m-n+1)).toString(2))\n\
    }\n", "\tif (n > m) {\n\t\treturn -1;\n\t}\n\tvar sum = 0;\n\tvar count = 0;\n\
    \tfor (var i = n; i <= m; i++) {\n\t\tsum += i;\n\t\tcount++;\n\t}\n\tvar average\
    \ = sum / count;\n\tvar rounded = Math.round(average);\n\treturn rounded.toString(2);\n\
    }", "    // let result = Math.round((n + m) / 2);\n    // let binary = result.toString(2);\n\
    \    // return result === -1 ? -1 : binary;\n    if(n > m) return -1;\n    return\
    \ Math.round((n + m) / 2).toString(2);\n}", "   let result = Math.round((n + m)\
    \ / 2);\n   return result.toString(2);\n}", "    if(n > m){\n        return -1;\n\
    \    }\n    var sum = 0;\n    for(var i = n; i <= m; i++){\n        sum += i;\n\
    \    }\n    var avg = Math.round(sum / (m - n + 1));\n    return avg.toString(2);\n\
    }", "    if(n>m){\n        return -1;\n    }\n    let sum = 0;\n    for(let i\
    \ = n; i <= m; i++){\n        sum += i;\n    }\n    let avg = sum / (m-n+1);\n\
    \    return avg.toFixed(0);\n}", "  if (n > m) return -1;\n  let result = (n +\
    \ m) / 2;\n  return result % 1 === 0 ? result.toString(2) : Math.round(result).toString(2);\n\
    }", "  if (n <= m) {\n    let sum = 0;\n    for (i = n; i <= m; i++) {\n     \
    \ sum += i;\n    }\n    let avg = sum / (m - n + 1);\n    let rounded = Math.round(avg);\n\
    \    return rounded.toString(2);\n  } else {\n    return -1;\n  }\n}", "    let\
    \ sum = 0\n    for(let i = n; i <= m; i++){\n        sum += i\n    }\n    let\
    \ average = Math.round(sum / (m - n + 1))\n    return average.toString(2)\n}",
  "    if(n>m){\n        return -1;\n    }\n    var sum = 0;\n    for(var i = n; i\
    \ <= m; i++){\n        sum += i;\n    }\n    var avg = Math.round(sum/(m-n+1));\n\
    \    console.log(avg);\n    console.log(avg.toString(2));\n    return avg.toString(2);\n\
    }\n\nrounded_avg(9,12);\nrounded_avg(8,7);", "    var sum = 0\n    var length\
    \ = m - n + 1\n    for(var i = n; i <= m; i++){\n        sum += i\n    }\n   \
    \ var avg = sum / length\n    var rounded = Math.round(avg)\n    if(n > m){\n\
    \        return -1\n    }\n    else{\n        return rounded.toString(2)\n   \
    \ }\n  }\n  \n  console.log(rounded_avg(1, 6))//111 (7)\n  console.log(rounded_avg(2,\
    \ 6))//110 (6)\n  console.log(rounded_avg(2, 5))//101 (5)\n  console.log(rounded_avg(3,\
    \ 2))//-1", "    let sum = 0;\n    let count = 0;\n    if(n > m){\n        return\
    \ -1;\n    }\n    for(let i = n; i <= m; i++){\n        sum += i;\n        count\
    \ ++;\n    }\n    let result = Math.round(sum / count);\n    return (result >>>\
    \ 0).toString(2);\n}", "    let sum = 0;\n    let count = 0;\n    if(n>m){\n \
    \       return -1;\n    }\n    for(let i = n; i <= m; i++){\n        sum+=i;\n\
    \        count++;\n    }\n    let x = Math.round(sum/count);\n    return x.toString(2);\n\
    }", "    if(n > m){\n        return -1;\n    }\n    return (n + m)/2;\n}", "var\
    \ rounded = Math.round((n+m)/2);\nreturn Number(rounded).toString(2);\n}", " \
    \   let sum = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n   \
    \ }\n    for(let i = n; i <= m; i++){\n        sum = sum + i;\n        count++;\n\
    \    }\n    let avg = Math.round(sum/count);\n    return avg.toString(2);\n  }\n\
    \  \n  console.log(rounded_avg(3,8));//'010'\n  console.log(rounded_avg(4,4));//'100'\n\
    \  console.log(rounded_avg(4,6));//'011'\n  console.log(rounded_avg(2,2));//'100'\n\
    \  console.log(rounded_avg(7,3));//-1", "  let sum = 0;\n  for(let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  let sum2 = Math.round(sum / (m - n + 1));\n\
    \  return parseInt(sum2.toString(2));\n}\n", "\tlet sum = 0;\n\tlet count = 0;\n\
    \tfor(let i = n; i <= m; i++){\n\t\tsum += i;\n\t\tcount++;\n\t}\n\tlet avg =\
    \ sum / count;\n\tlet rounded = Math.round(avg);\n\tlet binary = rounded.toString(2);\n\
    \treturn binary;\n}", "  //Your Code Here\n  if(n > m){\n    return -1;\n  }\n\
    \  var sum = 0;\n  var count = 0;\n  var average = 0;\n  for(var i = n; i <= m;\
    \ i++){\n    sum += i;\n    count++;\n  }\n  average = Math.round(sum/count);\n\
    \  return average.toString(2);\n}\n", "    if(n > m){\n        return -1;\n  \
    \  }\n    return Math.round((n + m) / 2).toString(2);\n}\n", "    if(n>m){\n \
    \       return -1;\n    }\n    let sum = 0;\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n    }\n    return Math.round(sum / (m - n + 1)).toString(2);\n\
    }", "  let x = Math.round((n + m) / 2);\n  return x.toString(2);\n}\n", "    //\
    \ your code here\n    let i = n, arr = [], sum = 0;\n    while(i<=m){\n      arr.push(i)\n\
    \      i++\n    }\n    if(n>m){\n      return -1\n    }\n    for(let j = 0; j<arr.length;\
    \ j++){\n      sum += arr[j]\n    }\n    return Math.round(sum/arr.length).toString(2)\n\
    \  }\n  // How much Time ?\n  // Current Solution Time Complexity = O(N)\n  //\
    \ Optimal Solution Time Complexity = O(1)", "  var count = 0;\n  var running =\
    \ 0;\n  if(n > m){\n    return -1;\n  }\n  for(var i = n; i < m + 1; i++){\n \
    \   count++;\n    running += i;\n  }\n  var avg = Math.round(running / count);\n\
    \  var binary = (avg >>> 0).toString(2);\n  return binary;\n}\n", "    let sum\
    \ = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n    }\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n        count ++;\n    }\n    let avg\
    \ = sum / count;\n    return Math.round(avg).toString(2);\n}", "    var answer\
    \ = (n + m) / 2\n    if (n > m) {\n        return -1\n    } else {\n        return\
    \ answer.toString(2)\n    }\n}", "\tif (n > m) return -1;\n\tvar sum = 0;\n\t\
    for (var i = n; i <= m; i++) {\n\t\tsum += i;\n\t}\n\tvar rounded = Math.round(sum/(m-n+1));\n\
    \treturn rounded.toString(2);\n}\n", "    let avg = Math.round((n + m) / 2);\n\
    \    if (n > m) {\n        return -1;\n    } else {\n        return avg.toString(2);\n\
    \    }\n}", "  if (n > m) return -1;\n  var sum = 0;\n  for (var i = n; i <= m;\
    \ i++) {\n    sum += i;\n  }\n  return (sum / (m - n + 1)).toFixed(0);\n}", " \
    \   if(n > m){\n        return -1;\n    }\n    let add = n + m;\n    let avg =\
    \ add / 2;\n    return Math.round(avg).toString(2);\n}\n", "\tif (n <= m) {\n\t\
    \tvar average = Math.round((n + m) / 2);\n\t\treturn average.toString(2);\n\t\
    } else {\n\t\treturn -1;\n\t}\n}", "    if(n > m){\n        return -1;\n    }\n\
    \    return Math.round((n + m) / 2).toString(2);\n}\n", let x = (n + m) / 2;,
  "  let sum = 0\n  for(let i = n; i <= m; i++){\n    sum += i\n  }\n  let avg = Math.round(sum\
    \ / (m - n + 1))\n  return avg.toString(2)\n}", "\tvar sum = 0;\n\tvar count =\
    \ 0;\n\tfor(var i = n; i <= m; i++){\n\t\tsum += i;\n\t\tcount++;\n\t}\n\tvar\
    \ rounded = Math.round(sum/count);\n\tvar result = (rounded >>> 0).toString(2);\n\
    \treturn result;\n}", "    //n=3, m=10\n    if(n>m){\n        return -1;\n   \
    \ }\n    //the average of all numbers between n and m\n    let avg = Math.round((n+m)/2);\n\
    \    //return the avg in binary\n    return avg.toString(2);\n}\n", "    let sum\
    \ = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n    }\n    while(n\
    \ <= m){\n        sum += n;\n        n++\n        count++\n    }\n    let avg\
    \ = sum / count;\n    let roundedAvg = Math.round(avg);\n    let binaryAvg = roundedAvg.toString(2);\n\
    \    return binaryAvg;\n}", "  let avg = Math.round((n + m) / 2);\n  return avg\
    \ > m ? -1 : avg.toString(2);\n}\n", "    let z = Math.round((n + m) / 2);\n \
    \   if (n > m) {\n        return -1;\n    }\n    return z.toString(2);\n}", " \
    \   let num = Math.round((n + m) / 2);\n    return num.toString(2);\n}", "  const\
    \ avg = Math.round((n + m) / 2);\n  return m < n ? -1 : n.toString(2);\n}", " \
    \ if (n > m) return -1;\n  return Math.round((n + m) / 2).toString(2);\n}\n",
  "    let sum = 0;\n    let count = 0;\n    if(n > m){\n        return -1;\n    }\n\
    \    else{\n        for(let i = n; i <= m; i++){\n            sum += i;\n    \
    \        count++;\n        }\n        let avg = Math.round(sum/count);\n     \
    \   return avg.toString(2);\n    }\n}", "  if (n > m) return -1;\n  let sum =\
    \ 0;\n  for (let i = n; i <= m; i++) {\n    sum += i;\n  }\n  return Math.round(sum\
    \ / (m - n + 1)).toString(2);\n}\n", "  let result = Math.round((n + m) / 2);\n\
    \  return result >= n && result <= m ? Number(result).toString(2) : -1;\n}", " \
    \   if(n>m){\n        return -1;\n    }\n    let arr = [];\n    for(let i = n;\
    \ i <= m; i++){\n        arr.push(i);\n    }\n    let sum = arr.reduce((a, b)\
    \ => a + b, 0);\n    let avg = Math.round(sum/arr.length);\n    let binary = avg.toString(2);\n\
    \    return binary;\n}", "    if(n>m){\n        return -1;\n    }\n    else{\n\
    \        var sum=0;\n        for(var i=n;i<=m;i++){\n            sum+=i;\n   \
    \     }\n        var avg=Math.round(sum/(m-n+1));\n        console.log(avg);\n\
    \        return (avg).toString(2);\n    }\n}", "    var sum = 0;\n    for(var\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    var avg = Math.round(sum/(m-n+1));\n\
    \    return avg.toString(2);\n}", "    if(n > m){\n        return -1;\n    }\n\
    \    var avg = Math.round((n + m) / 2);\n    return avg.toString(2);\n}", "  \
    \  var avg = Math.round((n + m) / 2);\n    var binary = avg.toString(2);\n   \
    \ return binary;\n}", "\tlet sum = 0;\n\tif(n > m){\n\t\treturn -1;\n\t}\n\tfor(let\
    \ i = n; i <= m; i++){\n\t\tsum += i;\n\t}\n\treturn Number((sum/(m-n+1)).toFixed(0)).toString(2);\n\
    }\n", "    let sum = 0\n    for(i = n; i <= m; i++){\n        sum += i\n    }\n\
    \    let avg = Math.round(sum / (m - n + 1))\n    let avg_bin = avg.toString(2)\n\
    \    return avg_bin\n}\n", "    if(n > m){\n        return -1;\n    }\n    var\
    \ sum = 0;\n    var count = 0;\n    for(var i = n; i <= m; i++){\n        sum\
    \ += i;\n        count++;\n    }\n    var avg = Math.round(sum / count);\n   \
    \ return avg.toString(2);\n}\n", "    if(n>m){\n        return -1;\n    }\n  \
    \  let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum+=i;\n    }\n  \
    \  sum/=(m-n+1);\n    return sum.toString(2);\n}", "    if(n > m){\n        return\
    \ -1;\n    }\n    let avg = Math.round((n + m) / 2);\n    return avg.toString(2);\n\
    }\n", "    if(n > m){\n        return -1;\n    }\n    let sum = 0;\n    for(let\
    \ i = n; i <= m; i++){\n        sum += i;\n    }\n    return Math.round(sum /\
    \ (m - n + 1)).toString(2);\n}", "  let average = ((n + m) / 2);\n  let avg_rounded\
    \ = Math.round(average);\n  let binary = parseInt(avg_rounded, 10).toString(2);\n\
    \  if (n > m) {\n    return -1;\n  } else {\n    return binary;\n  }\n}", "  \
    \  let sum = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n\
    \    let avg = Math.round(sum / (m - n + 1));\n    let binary = avg.toString(2);\n\
    \    return parseInt(binary);\n}", "   if(n > m){\n      return -1;\n   } else\
    \ {\n      let sum = n + m;\n      let avg = sum / 2;\n      let roundAvg = Math.round(avg);\n\
    \      let binary = roundAvg.toString(2);\n      return binary;\n   }\n}", " \
    \ \n  let avg=Math.round((n+m)/2);\n  return avg.toString(2);\n}\n", "  if (n>m)\
    \ {\n    return -1;\n  }\n  let arr = [];\n  let sum = 0;\n  let avg = 0;\n  let\
    \ rounded = 0;\n  for (let i = n; i <= m; i++) {\n    arr.push(i);\n  }\n  for\
    \ (let j = 0; j < arr.length; j++) {\n    sum += arr[j];\n  }\n  avg = sum / arr.length;\n\
    \  rounded = Math.round(avg);\n  return rounded.toString(2);\n}", "\tif (n > m)\
    \ {\n\t\treturn -1;\n\t} else {\n\t\tvar sum = 0;\n\t\tfor (var i = n; i <= m;\
    \ i++) {\n\t\t\tsum += i;\n\t\t}\n\t\tvar rounded_average = (sum / (m - n + 1)).toFixed(0);\n\
    \t\treturn parseInt(rounded_average, 10).toString(2);\n\t}\n}", "  var sum = 0;\n\
    \  for(var i = n; i <= m; i++){\n    sum += i;\n  }\n  return sum / (m - n + 1);\n\
    }", "    return Math.round((n + m) / 2);\n}", "  // your code here\n  var arr\
    \ = [];\n  if(n > m){\n    return -1;\n  }\n  for(var i = n; i <= m; i++){\n \
    \   arr.push(i);\n  }\n  var sum = arr.reduce(function(a, b){\n    return a +\
    \ b;\n  });\n  var avg = Math.round(sum / arr.length);\n  var bi = avg.toString(2);\n\
    \  return bi;\n}", "  let avg = Math.round((n + m) / 2);\n  return avg >= n &&\
    \ avg <= m ? avg.toString(2) : -1;\n}\n", "    if(n > m){\n        return -1;\n\
    \    }\n    let sum = 0;\n    let newArr = [];\n    for(let i = n; i <= m; i++){\n\
    \        sum += i;\n        newArr.push(i);\n    }\n    // console.log(sum);\n\
    \    let result = sum / newArr.length;\n    // console.log(result);\n    return\
    \ result;\n    // console.log(result);\n    // let binary = result.toString(2);\n\
    \    // console.log(binary);\n\n}", "  if (n>m) {\n    return -1;\n  }\n  // \
    \ Use array and Math.floor to round the average of n and m\n  var average = Math.floor((n+m)/2);\n\
    \  // Return the binary representation of the average\n  return average.toString(2);\n\
    }", "    if(n>m){\n        return -1;\n    }\n    var sum = 0;\n    for(let i\
    \ = n; i <= m; i++){\n        sum += i;\n    }\n    return (Math.round(sum / (m\
    \ - n + 1))).toString(2);\n}\n", "  \n  let sum = 0;\n  let count = 0;\n  for(let\
    \ i = n; i <= m; i++){\n    sum+=i;\n    count++;\n  }\n  if(n > m){\n    return\
    \ -1;\n  }\n  let average = Math.round(sum/count);\n  let binary = average.toString(2);\n\
    \  return binary;\n}\n", "    if(n>m){\n        return -1;\n    }\n    let sum\
    \ = 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = Math.round(sum/(m-n+1));\n    return avg.toString(2);\n}\n", "    // first\
    \ make sure n is less than m\n    if (n > m) {\n        return -1;\n    }\n  \
    \  // then add them together, divide by two, and round them\n    var avg = Math.round((n\
    \ + m) / 2);\n    // convert the answer to a binary number\n    return avg.toString(2);\n\
    }\n", "  if (n>m) {\n    return -1;\n  }\n  let c = Math.floor((n+m)/2);\n  let\
    \ d = c.toString(2);\n  return d;\n}", "    let total = 0;\n    let count = 0;\n\
    \    if(n > m){\n        return -1;\n    }else{\n        for(let i = n; i <= m;\
    \ i++){\n            total += i;\n            count++;\n        }\n        return\
    \ total / count;\n    }\n}\n", "    if(n>m){\n        return -1;\n    }\n    var\
    \ result = Math.round((n+m)/2);\n    return result.toString(2);\n}\n", "    if(n\
    \ > m){\n        return -1;\n    }\n    const avg = Math.round((n + m) / 2);\n\
    \    return avg.toString(2);\n}", "    var total = 0;\n    var add = 0;\n    if(n>m){\n\
    \        return -1;\n    }else{\n        for(var i = n; i <= m; i++){\n      \
    \      total += i;\n            add++;\n        }\n        var avg = total/add;\n\
    \        var avgRound = Math.round(avg);\n        return avgRound.toString(2);\n\
    \    }\n}\n", "  if (n > m) return -1;\n  let sum = 0;\n  for (let i = n; i <=\
    \ m; i++){\n    sum += i;\n  }\n  let avg = sum / (m - n + 1);\n  return avg.toFixed(0);\n\
    }\n", "  if (n > m) return -1;\n  let avg = Math.round((n + m) / 2);\n  return\
    \ avg.toString(2);\n}\n", "  if (n > m) return -1;\n  let result = 0;\n  for (let\
    \ i = n; i <= m; i++) {\n    result += i;\n  }\n  result = Math.round(result /\
    \ (m - n + 1));\n  return result.toString(2);\n}", "    if(n > m){\n        return\
    \ -1;\n    }\n    var sum = 0;\n    for(let i = n; i <= m; i++){\n        sum\
    \ += i;\n    }\n    var avg = Math.round(sum/(m-n+1));\n    return avg.toString(2);\n\
    }\n", "  let avg = Math.round((n + m) / 2);\n  return avg.toString(2);\n}", " \
    \ let average = Math.round((n + m) / 2);\n  return n > m ? -1 : average.toString(2);\n\
    }\n", "    var sum = 0;\n    if(n <= m){\n        for(var i = n; i <= m; i++){\n\
    \            sum += i;\n        }\n        var avg = Math.round(sum / (m - n +\
    \ 1));\n        var binary = avg.toString(2);\n        return binary;\n    }\n\
    \    else{\n        return -1;\n    }\n}\n", "  //your code here\n}\n", "    if(n<m){\n\
    \    var sum=0;\n    for(i=n;i<=m;i++){\n        sum=sum+i;\n    }\n    sum=sum/(m-n+1);\n\
    \    return parseInt(sum).toString(2);\n}\nelse return -1;\n}", "    let sum =\
    \ 0;\n    for(let i = n; i <= m; i++){\n        sum += i;\n    }\n    let avg\
    \ = Math.round(sum / (m - n + 1));\n    return avg.toString(2);\n}", "    if(n\
    \ > m){return -1}\n    let sum = 0\n    for(let i = n; i <= m; i++){\n       \
    \ sum += i\n    }\n    let avg = sum/(m-n+1)\n    let rounded = Math.round(avg)\n\
    \    return rounded.toString(2)\n}", "  if (n>m) return -1;\n  return Math.round((m+n)/2).toString(2);\n\
    }"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

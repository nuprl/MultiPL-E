name: HumanEval_152_compare
language: js
prompt: "//I think we all remember that feeling when the result of some long-awaited\n\
  // event is finally known. The feelings and thoughts you have at that moment are\n\
  // definitely worth noting down and comparing.\n// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n// Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n// the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n// example:\nfunction compare(game,\
  \ guess){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0,\
  \ 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0,\
  \ 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1, 2, 3], [-1, -2,\
  \ -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1, 2, 3, 4]),[2,\
  \ 0, 0, 1]);\n}\n\ntest();"
completions: ["    var result = [];\n    for(var i = 0; i < game.length; i++){\n \
    \       if(game[i] == guess[i]){\n            result.push(0);\n        } else\
    \ {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n\
    \    return result;\n}", "  const result = []\n  for(let i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n      result.push(0)\n    }else{\n   \
    \   result.push(Math.abs(game[i] - guess[i]))\n    }\n  }\n  return result\n}",
  "    let result = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "  return game.map((x,i)\
    \ => (x===guess[i]) ? 0 : Math.abs(x-guess[i]))\n}\n", "    let score = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            score.push(0);\n        } else {\n            score.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return score;\n}", "    var final = [];\n\
    \    for(i=0; i<game.length; i++){\n        var x = game[i] - guess[i];\n    \
    \    final.push(Math.abs(x));\n    }\n    return final;\n}\nvar game = [3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2];\n\
    var guess = [2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3];", "    let results = []\n\
    \    for(let i = 0; i < game.length; i++){\n        let val = game[i] - guess[i]\n\
    \        results.push(Math.abs(val))\n    }\n    return results\n}\n", "    let\
    \ result = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] !==\
    \ guess[i]){\n            result.push(Math.abs(game[i] - guess[i]))\n        }else{\n\
    \            result.push(0)\n        }\n    }\n    return result\n}", "    var\
    \ result =[];\n    for(i=0; i<game.length; i++){\n        if(game[i] == guess[i]){\n\
    \            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]-guess[i]));\n\
    \        }\n    }\n    return result;\n}", "    //keep track of your answers\n\
    \    let answer = []\n    //iterate thru the length of game/guess array\n    for(let\
    \ i = 0; i < game.length; i++){\n        //if the game and guess at index i are\
    \ the same, push 0 to answer.\n        if(game[i] === guess[i]){\n           \
    \ answer.push(0)\n        }\n        //if the game and guess at index i are not\
    \ the same, push the absolute value of game - guess\n        else{\n         \
    \   answer.push(Math.abs(game[i] - guess[i]))\n        }\n    }\n    //return\
    \ answer\n    return answer\n}", "    for(let i = 0; i < game.length; i++){\n\
    \        if(game[i] != guess[i]){\n            game[i] = Math.abs(game[i] - guess[i]);\n\
    \        }\n    }\n    return game;\n}\n", "  return game.map((el, i) => {\n \
    \   if(el !== guess[i]){\n      return Math.abs(el - guess[i])\n    }\n    return\
    \ 0\n  })\n}\n", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        result.push(Math.abs(game[i] - guess[i]))\n    }\n    return result;\n\
    }", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n       \
    \ if(game[i] === guess[i]){\n            result.push(0);\n        } else {\n \
    \           result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n   \
    \ return result;\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(game[i] - guess[i]));\n      \
    \  }\n    }\n    return result;\n}", "    let result = [];\n    for(let i = 0;\
    \ i < game.length; i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}", "\tlet result = [];\n\tfor(let i = 0;\
    \ i < game.length; i++){\n\t\tif(game[i] === guess[i]){\n\t\t\tresult.push(0);\n\
    \t\t} else {\n\t\t\tresult.push(Math.abs(game[i] - guess[i]));\n\t\t}\n\t}\n\t\
    return result;\n}\n", "  var results = [];\n  for(var i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n      results.push(0);\n    } else {\n\
    \      results.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n  return results;\n\
    }\n", "    let tally = [];\n    for(let i = 0; i < game.length; i++){\n      \
    \  if(game[i] === guess[i]){\n            tally.push(0);\n        }else{\n   \
    \         tally.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return\
    \ tally;\n}", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        if(game[i] == guess[i]){\n            result.push(0);\n        }else{\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  return result;\n}", "    let results = []\n    for(i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            results.push(0)\n    \
    \    } else {\n            results.push(Math.abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return results\n}", "    let finalArr = [];\n    for(let i =\
    \ 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n            finalArr.push(0);\n\
    \        }else{\n            finalArr.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return finalArr;\n}", "    let result = [];\n    for(let\
    \ i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n         \
    \   result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let results\
    \ = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            results.push(0)\n        } else {\n            results.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return results\n}\n", "  let output = [];\n\
    \  for(let i = 0; i < game.length; i++){\n    if(game[i] == guess[i]){\n     \
    \ output.push(0);\n    } else{\n      output.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return output;\n}\n", "    //initialise an empty array\n    let\
    \ result = []\n    //iterate over the arrays\n    for(let i = 0; i < game.length;\
    \ i++){\n        //if the guess is the same as the game, push a 0\n        if(game[i]\
    \ === guess[i]){\n            result.push(0)\n        } else {\n            //otherwise,\
    \ push the difference\n            result.push(Math.abs(game[i] - guess[i]))\n\
    \        }\n    }\n    //return the result\n    return result\n}", "    // let\
    \ results = []\n    // for(let i = 0; i < game.length; i++){\n    //     if(game[i]\
    \ == guess[i]){\n    //         results.push(0)\n    //     } else {\n    // \
    \        results.push(Math.abs(game[i] - guess[i]))\n    //     }\n    // }\n\
    \    // return results\n    return game.map((curr, i) => curr == guess[i] ? 0\
    \ : Math.abs(curr - guess[i]))\n}", "    let result = [];\n    for(let i = 0;\
    \ i < game.length; i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}", "    var result = [];\n    for(var i\
    \ = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n           \
    \ result.push(0);\n        }else{\n            result.push(Math.abs(game[i] -\
    \ guess[i]));\n        }\n    }\n    return result;\n}", "    let output = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            output.push(0);\n        } else {\n            output.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return output;\n}", "    var result = [];\n\
    \    for(var i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        } else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "  let results = [];\n\
    \  for(let i = 0; i < game.length; i++){\n    results.push(Math.abs(game[i] -\
    \ guess[i]));\n  }\n  return results;\n}\n\nlet game = [2, 3, 5, 1, 0, 4];\nlet\
    \ guess = [4, 1, 0, 3, 2, 5];\n", "    return game.map((e,i) => Math.abs(e-guess[i]))\n\
    }\n\n", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n   \
    \     if(game[i] === guess[i]){\n            result.push(0);\n        } else {\n\
    \            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n  \
    \  return result;\n}", "  var result = [];\n  for(var i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n      result.push(0);\n    }else{\n  \
    \    result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n  return result;\n\
    }\ncompare([1,2,3],[2,2,2]); // returns [1,0,1]\ncompare([5,5,5],[5,5,5]); //\
    \ returns [0,0,0]\n", "    let diff = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            diff.push(0);\n      \
    \  } else {\n            diff.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return diff;\n}", "  let result = [];\n  for(let i = 0; i < game.length;\
    \ i++){\n    let check = game[i] === guess[i] ? 0 : Math.abs(game[i] - guess[i]);\n\
    \    result.push(check);\n  }\n  return result;\n}", "  return game.map((x,i)\
    \ => Math.abs(x-guess[i]))\n}", "    let comparisonArray = [];\n    for(let i\
    \ = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n            comparisonArray.push(0);\n\
    \        } else {\n            comparisonArray.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return comparisonArray;\n}", "    let newArr = []\n   \
    \ for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n \
    \           newArr.push(0)\n        }else{\n            newArr.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return newArr\n}", "    let result = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] - guess[i] == 0){\n\
    \            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "\treturn game.map((x,i)\
    \ => Math.abs(x-guess[i]))\n}\n", "    return game.map((val,i) => val === guess[i]\
    \ ? 0 : Math.abs(val - guess[i]))\n}", "    let result = [];\n    for(let i =\
    \ 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n", "\tconst result = []\n\tfor(let i =\
    \ 0; i < game.length; i++){\n\t\tconst diff = Math.abs(game[i] - guess[i])\n\t\
    \tresult.push(diff)\n\t}\n\treturn result\n}\n", "    let a = [];\n    for(let\
    \ i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n          \
    \  a.push(0);\n        }else{\n            a.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return a;\n}\n", "    var answer = [];\n    for(var i =\
    \ 0; i < game.length; i++){\n        if(game[i] !== guess[i]){\n            answer.push(Math.abs(game[i]\
    \ - guess[i]));\n        }else{\n            answer.push(0);\n        }\n    }\n\
    \    return answer;\n}", "    let results = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        results.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ results;\n}\n", "    const result = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0)\n     \
    \   } else {\n            result.push(Math.abs(game[i] - guess[i]))\n        }\n\
    \    }\n    return result\n}", "    let diff = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            diff.push(0);\n      \
    \  } else {\n            diff.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return diff;\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] == guess[i]){\n            result.push(0);\n     \
    \   }else{\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return result;\n}", "    return game.map((item, i) => item === guess[i]\
    \ ? 0 : Math.abs(item - guess[i]))\n}", "    var results=[];\n    for(var i=0;\
    \ i<game.length; i++){\n        if(game[i]===guess[i]){\n            results.push(0);\n\
    \        } else {\n            results.push(Math.abs(game[i]-guess[i]));\n   \
    \     }\n    }\n    return results;\n}\n", "    let score=[];\n    for(let i=0;\
    \ i<game.length; i++){\n        if(game[i]==guess[i]){\n            score.push(0);\n\
    \        }else{\n            score.push(Math.abs(game[i]-guess[i]));\n       \
    \ }\n    }\n    return score;\n}\n", "  let arr = []\n  for(let i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n      arr.push(0)\n    } else {\n    \
    \  arr.push(Math.abs(game[i] - guess[i]))\n    }\n  }\n  return arr\n}\n", " \
    \   let results = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            results.push(0);\n        } else {\n           \
    \ results.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return results;\n\
    }\n", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n     \
    \   result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n}",
  "    var result = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    let result = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n\
    \            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    const gameArr\
    \ = game.split('')\n    const guessArr = guess.split('')\n    const correct =\
    \ []\n    for(i=0; i<gameArr.length; i++){\n        if(gameArr[i] === guessArr[i]){\n\
    \            correct.push(0)\n        } else {\n            const result = Math.abs(parseInt(gameArr[i])\
    \ - parseInt(guessArr[i]))\n            correct.push(result)\n        }\n    }\n\
    \    return correct\n}\n", "    let output = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        output.push(Math.abs(game[i] - guess[i]))\n    }\n    return\
    \ output;\n}", "    let res = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        let g = guess[i]\n        let s = game[i]\n        if(g === s){\n   \
    \         res.push(0)\n        } else {\n            res.push(Math.abs(g - s))\n\
    \        }\n    }\n    return res\n}\n", "    var results = [];\n    for(var i\
    \ = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n           \
    \ results.push(0);\n        }else{\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}", "    let result =\
    \ []\n    for(let i = 0; i < game.length; i++){\n      let diff = game[i] - guess[i]\n\
    \      result.push(Math.abs(diff))\n    }\n    return result\n  }\n  console.log(compare([10,5,5],[5,5,5]))\n\
    \  console.log(compare([10,5,5],[5,5,5]))\n  console.log(compare([10,5,5],[5,5,5]))\n\
    \  \n  //Binary Search:\n  //Binary search is a technique for very rapidly searching\
    \ a sorted collection by cutting the search space in half at every pass.", "let\
    \ result = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] ==\
    \ guess[i]){\n            result.push(0)\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}", "    return game.map((score,\
    \ i) => Math.abs(score - guess[i]))\n}\n", "    return game.map((value,i) => {\n\
    \        return value === guess[i] ? 0 : Math.abs(value - guess[i])\n    })\n\
    }\n", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n     \
    \   if(game[i] === guess[i]){\n            result.push(0);\n        }else{\n \
    \           result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n   \
    \ return result;\n}", "  return game.map((val, i) => Math.abs(val - guess[i]))\n\
    }", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n       \
    \ let diff = Math.abs(game[i] - guess[i]);\n        result.push(diff);\n    }\n\
    \    return result;\n}\n", "    var arr = []\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            arr.push(0)\n        }else{\n\
    \            arr.push(Math.abs(game[i] - guess[i]))\n        }\n    }\n    return\
    \ arr\n}", "  let result = [];\n  for(let i = 0; i < game.length; i++){\n    if(game[i]\
    \ === guess[i]){\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}", "    let array = []\n    for(let\
    \ i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n         \
    \   array.push(0)\n        } else {\n            array.push(Math.abs(game[i] -\
    \ guess[i]))\n        }\n    }\n    return array\n}", "  let difference = [];\n\
    \  for(i=0; i<game.length; i++){\n    if(game[i]>guess[i]){\n      difference.push(game[i]-guess[i]);\n\
    \    }\n    else if(game[i]<guess[i]){\n      difference.push(guess[i]-game[i]);\n\
    \    }\n    else if(game[i]==guess[i]){\n      difference.push(0);\n    }\n  }\n\
    \  return difference;\n}", "    let result = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] - guess[i] === 0){\n            result.push(0)\n \
    \       } else {\n            result.push(Math.abs(game[i] - guess[i]))\n    \
    \    }\n    }\n    return result\n}", "    let newArr = [];\n    for(let i = 0;\
    \ i < game.length; i++){\n        if(game[i] === guess[i]){\n            newArr.push(0);\n\
    \        } else {\n            newArr.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return newArr;\n}", "\tlet result = []\n\tfor(let i = 0;\
    \ i < game.length; i++){\n\t\tif(game[i] === guess[i]){\n\t\t\tresult.push(0)\n\
    \t\t}else{\n\t\t\tresult.push(Math.abs(game[i] - guess[i]))\n\t\t}\n\t}\n\treturn\
    \ result\n}", "\tlet result = []\n\tfor(i = 0; i < game.length; i++){\n\t\tif(game[i]\
    \ === guess[i]){\n\t\t\tresult.push(0)\n\t\t} else {\n\t\t\tresult.push(Math.abs(game[i]\
    \ - guess[i]))\n\t\t}\n\t}\n\treturn result\n}\n", "    const results = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            results.push(0);\n        } else {\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}", "    return game.map((score,\
    \ idx) => Math.abs(score - guess[idx]))\n}", "    var result = [];\n    for(var\
    \ i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n          \
    \  result.push(0);\n        }else{\n            result.push(Math.abs(game[i] -\
    \ guess[i]));\n        }\n    }\n    return result;\n}", "    let result = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n\
    \            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let g = game.length;\n\
    \    let result = [];\n    for(let i = 0; i < g; i++){\n        if(game[i] ===\
    \ guess[i]){\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    var result = [];\n\
    \    for(var i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n\
    \            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let results\
    \ = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            results.push(0);\n        } else {\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}\n\nlet scores = [5,7,1,2,9,7,8,2,0,7,9,9,9,8,8,1,1,7,3,1,3,3,8,3,3,7,2,9,0,1,8,9,9,1,7,1,5,8,7,2,2,9,7,9,9,8,7,1,1,1,7,1,1,8,3,3,3,9,7,2,9,8,7,9,9,2,2,2,2,8,8,8,8,9,9,9,9,8,3,3,3,3,7,7,7,7,7,1,1,1,1,1,9,9,9,9,9,0,0,0,0,0,7,7,7,7,7,9,9,9,9,9,2,2,2,2,2,8,8,8,8,8,9,9,9,9,9,3,3,3,3,3,1,1,1,1,1,7,7,7,7,7,1,1,1,1,1,8,8,8,8,8,2,2,2,2,2,8,8,8,8,8,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,2,2,2,2,2,8,8,8,8,8,9,9,9,9,9,3,3,3,3,3,8,8,8,8,8,9,9,9,9,9,8,8,8,8,",
  "    let result = [];\n    for(let i = 0; i < game.length; i++){\n        game[i]\
    \ === guess[i] ? result.push(0) : result.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n    return result;\n}\n", "  let diff = [];\n  for(let i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n      diff.push(0);\n    } else {\n  \
    \    diff.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n  return diff;\n}",
  "\treturn game.map((value,index)=>Math.abs(value-guess[index]))\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    const arr = []\n\
    \    for(let i = 0; i < game.length; i++){\n        let score = game[i]\n    \
    \    let shot = guess[i]\n        if(score == shot){\n            arr.push(0)\n\
    \        } else {\n            arr.push(Math.abs(score - shot))\n        }\n \
    \   }\n    return arr\n}\n", "\tvar result = [];\n\tfor(var i = 0; i < game.length;\
    \ i++){\n\t\tvar diff = Math.abs(game[i] - guess[i]);\n\t\tresult.push(diff);\n\
    \t}\n\treturn result;\n}", "    return game.map((e,i) => Math.abs(e-guess[i]))\n\
    }", "    return game.map((item, index) => Math.abs(item - guess[index]))\n}\n",
  "    let output = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            output.push(0);\n        } else {\n            output.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return output;\n}", "    let outPut = []\n\
    \    game.forEach((num,index)=> {\n        outPut.push(Math.abs(num-guess[index]))\n\
    \    })\n    return outPut\n}\n", "  let result = [];\n  for(let i = 0; i < game.length;\
    \ i++){\n    if(game[i] > guess[i]){\n      result.push(game[i] - guess[i]);\n\
    \    } else if(game[i] < guess[i]){\n      result.push(guess[i] - game[i]);\n\
    \    } else {\n      result.push(0);\n    }\n  }\n  return result;\n}", "    let\
    \ results = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ > guess[i]){\n            results.push(game[i] - guess[i])\n        } else if(game[i]\
    \ < guess[i]){\n            results.push(guess[i] - game[i])\n        } else {\n\
    \            results.push(0)\n        }\n    }\n    return results\n}", "    var\
    \ arr = []\n    for(var i = 0; i < game.length; i++){\n        if(game[i] ===\
    \ guess[i]){\n            arr.push(0)\n        }else{\n            arr.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return arr\n}", "\tvar r = [];\n\tfor(i=0;\
    \ i<game.length; i++){\n\t\tif(game[i] > guess[i]){\n\t\t\tr.push(game[i] - guess[i]);\n\
    \t\t} else if(game[i] < guess[i]){\n\t\t\tr.push(guess[i] - game[i]);\n\t\t} else\
    \ if(game[i] == guess[i]){\n\t\t\tr.push(0);\n\t\t}\n\t}\n\treturn r;\n}", " \
    \ return game.map((el,idx) => Math.abs(el - guess[idx]))\n}\n\nconst game = [\
    \ 5, 2, 3 ];\nconst guess = [ 3, 2, 5 ];\n", "  return game.map((e,i) => {\n \
    \   return Math.abs(e - guess[i])\n  })\n}\n\nconst game = [1, 2, 3, 4, 5]\nconst\
    \ guess = [3, 2, 1, 4, 5]\n\ncompare(game, guess)", "    let result = [];\n  \
    \  for(let i = 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n \
    \           result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    let result = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    return game.map((x,\
    \ i) => Math.abs(x - guess[i]))\n}\n", "  return game.map((a,i) => {\n    return\
    \ a === guess[i] ? 0 : Math.abs(a - guess[i])\n  })\n}", "  let result = [];\n\
    \  for(let i = 0; i < game.length; i++){\n    result.push(Math.abs(game[i] - guess[i]));\n\
    \  }\n  return result;\n}\n", "  var results = []\n  for(var i = 0; i < game.length;\
    \ i++){\n    var element = Math.abs(game[i] - guess[i])\n    results.push(element)\n\
    \  }\n  return results\n}", "    const result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(game[i] - guess[i]));\n      \
    \  }\n    }\n    return result;\n}\n", "    let result = [];\n    for(let i =\
    \ 0; i < game.length; i++){\n        if(game[i] > guess[i]){\n            result.push(game[i]\
    \ - guess[i]);\n        } else if(game[i] < guess[i]){\n            result.push(guess[i]\
    \ - game[i]);\n        } else {\n            result.push(0);\n        }\n    }\n\
    \    return result;\n}\n", "    //loops over the guess array\n    for(let i =\
    \ 0; i < guess.length; i++){\n        //if the index is correct, change it to\
    \ 0\n        if(game[i] === guess[i]){\n            guess[i] = 0;\n        } else\
    \ {\n            //if not, take the absolute value of the difference between guess\
    \ and game\n            guess[i] = Math.abs(game[i] - guess[i]);\n        }\n\
    \    }\n    return guess;\n}\n", "    var scores = [],\n        difference;\n\
    \    for(var i = 0; i < game.length; i++){\n        difference = game[i] - guess[i];\n\
    \        if(difference < 0){\n            difference = difference * -1;\n    \
    \    }\n        scores.push(difference);\n    }\n    return scores;\n}\n", " \
    \   var diff = [];\n    game.forEach((score, index) => {\n        diff.push(Math.abs(score\
    \ - guess[index]));\n    });\n    return diff;\n}\n", "    return game.map((e,i)\
    \ => e===guess[i] ? 0 : Math.abs(e-guess[i]))\n}", "    let results = [];\n  \
    \  for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            results.push(0);\n        }else{\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}", "    if(game.length\
    \ !== guess.length){\n        return 'error'\n    }\n    // let result = []\n\
    \    // for(let i = 0; i < game.length; i++){\n    //     if(game[i] === guess[i]){\n\
    \    //         result.push(0)\n    //     } else {\n    //         result.push(Math.abs(game[i]\
    \ - guess[i]))\n    //     }\n    // }\n    // return result\n    return game.map((score,\
    \ index) =>{\n        if(score === guess[index]){\n            return 0\n    \
    \    } else {\n            return Math.abs(score - guess[index])\n        }\n\
    \    })\n}", "    var i = 0;\n    var results = [];\n    for(i; i < game.length;\
    \ i++){\n      if(game[i] === guess[i]){\n        results.push(0);\n      } else\
    \ {\n        results.push(Math.abs(game[i] - guess[i]));\n      }\n    }\n   \
    \ return results;\n  }\n  \n  console.log(compare([1, 2, 3], [1, 2, 3]));\n  console.log(compare([1,\
    \ 2, 3], [2, 1, 3]));\n  console.log(compare([1, 2, 3], [3, 2, 1]));\n  console.log(compare([1,\
    \ 2, 3], [1, 10, 2]));\n  console.log(compare([1, 2, 3], [0, -2, -3]));\n  console.log(compare([5,\
    \ 9, 7], [3, 2, 1]));\n  \n  // 2)\tWrite a function that converts hours into\
    \ seconds.\n  // Examples:\n  // hourToSeconds(2) \u279E 7200\n  // hourToSeconds(10)\
    \ \u279E 36000\n  // hourToSeconds(24) \u279E 86400\n  // Notes:\n  // 60 minutes\
    \ in an hour, 60 seconds in a minute.\n  function hourToSeconds(hours){\n    return\
    \ hours * 60 * 60;\n  }\n  \n  console.log(hourToSeconds(2));\n  console.log(hourToSeconds(10));\n\
    \  console.log(hourToSeconds(24));\n  \n  // 3)\tWrite a function that converts\
    \ a string into an array of words.\n  // Examples:\n  // stringToArray(\"Robin\
    \ Singh\") \u279E [\"Robin\", \"Singh\"]\n  // stringToArray(\"I love arrays they\
    \ are my favorite\") \u279E [\"I\", \"love\", \"arrays\", \"they\", \"are\", \"\
    my\", \"favorite\"]\n  // stringToArray(\"Javascript is cool\") \u279E [\"Javascript\"\
    , \"is\", \"cool\"]\n  // Notes:\n  // You can expect a valid string for all test\
    \ cases.", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        if(game[i] == guess[i]){\n            result.push(0);\n        } else\
    \ {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n\
    \    return result;\n}", "    return game.map((g, i) => Math.abs(g - guess[i]))\n\
    }", "    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            guess[i] = 0;\n        }else{\n            guess[i] = Math.abs(game[i]\
    \ - guess[i]);\n        }\n    }\n    return guess;\n}\ncompare([1,2,3,4,5], [1,2,3,4,5]);\
    \ //[0,0,0,0,0]\ncompare([1,2,3,4,5], [0,4,5,1,2]); //[1,2,0,3,3]\ncompare([1,2,3,4,5],\
    \ [2,3,1,3,5]); //[1,0,2,1,0]\n", "    var newArr = [];\n    for(let i = 0; i\
    \ < game.length; i++){\n        if(game[i] == guess[i]){\n            newArr.push(0);\n\
    \        } else {\n            newArr.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return newArr;\n}", "    let arr = [];\n    for(let i = 0;\
    \ i < game.length; i++){\n        if(game[i] === guess[i]){\n            arr.push(0);\n\
    \        } else {\n            arr.push(Math.abs(game[i] - guess[i]));\n     \
    \   }\n    }\n    return arr;\n}", "    let result = [];\n    for(let i = 0; i\
    \ < game.length; i++){\n        result.push(Math.abs(game[i] - guess[i]));\n \
    \   }\n    return result;\n}\n", "    let out = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        out.push(Math.abs(game[i] - guess[i]))\n    }\n    return out;\n\
    }", "    return game.map((score, i) => score === guess[i] ? 0 : Math.abs(score\
    \ - guess[i]))\n  }\n\n  compare([1,2,3], [1,2,3])\n  // [0,0,0]\n  compare([1,2,3],\
    \ [2,2,3])\n  // [1,0,0]\n  compare([1,2,3], [3,2,1])\n  // [2,0,2]\n\n  // Given\
    \ a string of letters, return the letter that appears the most.\n  // example:\n\
    \  const mostFreqLetter = str => {\n    str = str.toLowerCase();\n    let letters\
    \ = str.split('');\n    let letterCount = {};\n    let mostFrequent = 0;\n   \
    \ let mostFrequentLetter = '';\n    letters.forEach(letter => {\n      if (letterCount[letter])\
    \ {\n        letterCount[letter] += 1;\n      } else {\n        letterCount[letter]\
    \ = 1;\n      }\n    });\n    for (let letter in letterCount) {\n      if (letterCount[letter]\
    \ > mostFrequent) {\n        mostFrequent = letterCount[letter];\n        mostFrequentLetter\
    \ = letter;\n      }\n    }\n    return mostFrequentLetter;\n  };\n  \n  mostFreqLetter('hello\
    \ world') //=> 'l'\n  mostFreqLetter('the quick brown fox jumps over the lazy\
    \ dog') //=> 'o'\n  mostFreqLetter('the end') //=> 'e'\n\n  // A negative odd\
    \ integer is an odd integer that is less than 0.\n  // If a positive odd integer\
    \ is divided by 5, the remainder left is 4.\n  // If a negative odd integer is\
    \ divided by 5, the remainder left is 3.\n  // Given an integer n, write a function\
    \ that returns true if n is a negative odd integer,\n  // and false otherwise.\
    \ Return false if n is not an integer.\n  // example:\n  const negativeOddInteger\
    \ = n => Number.isInteger(n) && n < 0 && n % 2 === -1 ? true : false\n  \n  negativeOddInteger(3)\
    \ //=> false\n  negative", "    let output = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            output.push(0)\n     \
    \   }else if(game[i] > guess[i]){\n            output.push(game[i] - guess[i])\n\
    \        }else{\n            output.push(guess[i] - game[i])\n        }\n    }\n\
    \    return output\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(game[i] - guess[i]));\n      \
    \  }\n    }\n    return result;\n}", "  let score = 0;\n  let result = [];\n \
    \ for(let i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n     \
    \ result.push(score);\n    }else{\n      score = Math.abs(game[i] - guess[i]);\n\
    \      result.push(score);\n    }\n  }\n  return result;\n}", "    let result\
    \ = [];\n    for(let i = 0; i < game.length; i++){\n        game[i] == guess[i]\
    \ ? result.push(0) : result.push(Math.abs(game[i] - guess[i]));\n    }\n    return\
    \ result;\n}\n", "    var guessArr = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] == guess[i]){\n            guessArr.push(0);\n   \
    \     }else if(game[i] > guess[i]){\n            guessArr.push(game[i] - guess[i]);\n\
    \        }else{\n            guessArr.push(guess[i] - game[i]);\n        }\n \
    \   }\n    return guessArr;\n}\n", "    var outcome = [];\n    for(var i = 0;\
    \ i < game.length; i++){\n        outcome.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n    return outcome;\n}", "    return game.map((val,i) => Math.abs(val\
    \ - guess[i]))\n}", "    const results = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            results.push(0)\n    \
    \    } else{\n            results.push(Math.abs(game[i] - guess[i]))\n       \
    \ }\n    }\n    return results\n}", "    let result =[];\n    let count = 0;\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(count);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "  return game.map((ele,\
    \ i) => ele - guess[i] === 0 ? 0 : Math.abs(ele - guess[i]))\n}\n", "    let result\
    \ = [];\n    game.forEach((element, index) => {\n        element === guess[index]\
    \ ? result.push(0) : result.push(Math.abs(element - guess[index]))\n    });\n\
    \    return result;\n}", "  let result = []\n  for(let i = 0; i < game.length;\
    \ i++){\n    result.push(Math.abs(game[i] - guess[i]))\n  }\n  return result\n\
    }\n", "    let results = [];\n    for(let i = 0; i < game.length; i++){\n    \
    \    if(game[i] === guess[i]){\n            results.push(0);\n        } else {\n\
    \            results.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n \
    \   return results;\n}\n", "  return game.map((score, i) => {\n    let current\
    \ = Math.abs(score - guess[i]);\n    return current;\n  })\n}\n", "    return\
    \ game.map((x,i) => Math.abs(x-guess[i]))\n}", "    var answer = [];\n    for(var\
    \ i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n         \
    \   answer.push(0);\n        } else {\n            answer.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return answer;\n}", "    var matches =\
    \ [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            matches.push(0);\n        }else{\n            matches.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return matches;\n}", "    let result =\
    \ [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let results\
    \ = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            results.push(0);\n        } else {\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}", "    let result =\
    \ []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] !== guess[i]){\n\
    \            result.push(Math.abs(game[i] - guess[i]))\n        }else{\n     \
    \       result.push(0)\n        }\n    }\n    return result\n}\n", "    let result\
    \ = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0)\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}", "    //convert game and\
    \ guess arrays to strings\n    gameString = game.join('');\n    guessString =\
    \ guess.join('');\n    //initialize output array\n    result = [];\n    //loop\
    \ through the arrays and determine the differences\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(guess[i] === game[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(guess[i] - game[i]));\n      \
    \  }\n    }\n    //return the differences\n    return result;\n}", "  let result\
    \ = [];\n  for(let i = 0; i < game.length; i++){\n    game[i] === guess[i] ? result.push(0)\
    \ : result.push(Math.abs(game[i] - guess[i]));\n  }\n  return result;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ !== guess[i]){\n            result.push(Math.abs(game[i] - guess[i]));\n   \
    \     } else {\n            result.push(0);\n        }\n    }\n    return result;\n\
    }\nvar game = [80, 80, 50];\nvar guess = [50, 50, 80];", "    let arr = []\n \
    \   for(i=0; i<game.length; i++){\n        arr.push(game[i] - guess[i])\n    }\n\
    \    return arr\n}", "    let arr = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        if(game[i] === guess[i]){\n            arr.push(0);\n        } else {\n\
    \            arr.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return\
    \ arr;\n}", "\treturn game.map((el, i) => el === guess[i] ? 0 : Math.abs(el -\
    \ guess[i]))\n}", "    var result = []\n    for(var i = 0; i < game.length; i++){\n\
    \        if(game[i] === guess[i]){\n            result.push(0)\n        }else{\n\
    \            result.push(Math.abs(game[i] - guess[i]))\n        }\n    }\n   \
    \ return result\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] !== guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        } else {\n            result.push(0);\n        }\n  \
    \  }\n    return result;\n}\n", "    var results = [];\n    for(var i = 0; i <\
    \ game.length; i++){\n        if(game[i] > guess[i]){\n            results.push(game[i]\
    \ - guess[i]);\n        } else if(game[i] < guess[i]){\n            results.push(guess[i]\
    \ - game[i]);\n        } else {\n            results.push(0);\n        }\n   \
    \ }\n    return results;\n}", "    var result = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] != guess[i]){\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        } else {\n            result.push(0);\n        }\n  \
    \  }\n    return result;\n}", "    let output = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            output.push(0);\n    \
    \    }else{\n            output.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return output;\n}", "    let count = 0;\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            count++\n        }\n \
    \   }\n    return count;\n}", "    var nums = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] == guess[i]){\n            nums.push(0);\n       \
    \ }else if(game[i] !== guess[i]){\n            nums.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return nums;\n}", "    const output = [];\n    for(i =\
    \ 0; i < game.length; i++){\n        if(game[i] == guess[i]){\n            output.push(0);\n\
    \        }else{\n            output.push(Math.abs(game[i] - guess[i]));\n    \
    \    }\n    }\n    return output;\n}", "    if(game.length !== guess.length){\n\
    \        return 'game and guess do not have the same length'\n    }\n    let result\
    \ = []\n    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0)\n        } else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}", "    let result = []\n\
    \    for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0)\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}\n\nlet game = [1,2,3,4,5]\n\
    let guess = [1,2,3,4,5]", "    let results = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            results.push(0);\n   \
    \     } else {\n            results.push(Math.abs(game[i] - guess[i]));\n    \
    \    }\n    }\n    return results;\n}", "    var sol = [];\n    for(var i = 0;\
    \ i < game.length; i++){\n        if(game[i] !== guess[i]){\n            sol.push(Math.abs(game[i]\
    \ - guess[i]));\n        } else {\n            sol.push(0);\n        }\n    }\n\
    \    return sol;\n}", "    let result = [];\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    }else{\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n\
    \    }\n    return result;\n}\n", "    let score = [];\n    for(let i = 0; i <\
    \ game.length; i++){\n        let off = Math.abs(game[i] - guess[i]);\n      \
    \  score.push(off);\n    }\n    return score;\n}\n", "    let result = []\n  \
    \  for(let i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0)\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]))\n        }\n    }\n    return result\n}\n", "    return game.map((item,\
    \ index) => {\n        return item === guess[index] ? 0 : Math.abs(item - guess[index])\n\
    \    })\n}\n", "    let comparison = []\n    let counter = 0\n    while(counter\
    \ < game.length){\n        comparison.push(Math.abs(game[counter] - guess[counter]))\n\
    \        counter++\n    }\n    return comparison\n}\n", "    let result=[];\n\
    \    for(let i=0; i<guess.length; i++){\n        let diff=Math.abs(game[i]-guess[i]);\n\
    \        result.push(diff);\n    }\n    return result;\n}", "    var results =\
    \ [];\n    for(var i = 0; i < game.length; i++){\n        results.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return results;\n}\nvar game = [34, 24, 31, 19, 13,\
    \ 18, 30, 32, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,\
    \ 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30", "  const diffs = []\n \
    \ for(let i = 0; i < game.length; i++) {\n    const diff = Math.abs(game[i] -\
    \ guess[i])\n    diffs.push(diff)\n  }\n  return diffs\n}\n", "    var i = 0;\n\
    \    var arr = [];\n    while(i < game.length){\n        if(game[i] < guess[i]){\n\
    \            arr.push(guess[i] - game[i]);\n        }\n        else if(game[i]\
    \ > guess[i]){\n            arr.push(game[i] - guess[i]);\n        }\n       \
    \ else{\n            arr.push(0);\n        }\n        i++;\n    }\n    return\
    \ arr;\n}", "  return game.map((score, i) => Math.abs(score - guess[i]))\n}",
  "    let result = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            result.push(0);\n        }else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    var results =\
    \ [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i] > guess[i]){\n\
    \            results.push(game[i] - guess[i]);\n        } else if(game[i] < guess[i]){\n\
    \            results.push(guess[i] - game[i]);\n        } else {\n           \
    \ results.push(0);\n        }\n    }\n    return results;\n}\n", "    return game.map((x,\
    \ i) => {\n        if(guess[i] === x){\n            return 0;\n        } else\
    \ {\n            return Math.abs(x - guess[i]);\n        }\n    })\n}", "    var\
    \ results = [];\n    for(var i = 0; i < game.length; i++){\n        if(game[i]\
    \ === guess[i]){\n            results.push(0);\n        }else{\n            results.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return results;\n}\nvar game = [1,2,3,4,5,6,7,8,9,10];\n\
    var guess = [5,6,7,8,9,10,11,12,13,14];", "\tlet diff = [];\n\tfor(let i = 0;\
    \ i < game.length; i++){\n\t\tdiff.push(Math.abs(game[i] - guess[i]));\n\t}\n\t\
    return diff;\n}", "    var final = [];\n    for(var i = 0; i < game.length; i++){\n\
    \        if(game[i] === guess[i]){\n            final.push(0);\n        }else{\n\
    \            final.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n   \
    \ return final;\n}\n", "    var result = [];\n    for(var i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            result.push(0);\n    \
    \    } else {\n            result.push(Math.abs(game[i] - guess[i]));\n      \
    \  }\n    }\n    return result;\n}", "let arr = [];\nfor(let i = 0; i < game.length;\
    \ i++){\n    if(game[i] === guess[i]){\n        arr.push(0);\n    } else {\n \
    \       arr.push(Math.abs(game[i] - guess[i]));\n    }\n}\nreturn arr;\n}", " \
    \   let result = []\n    game.forEach((score, index) => {\n        result.push(Math.abs(score\
    \ - guess[index]))\n    })\n    return result\n}\nlet game = [1,2,3,4,5]\nlet\
    \ guess = [3,4,3,4,5]", "\tlet result = [];\n\tfor(let i = 0; i < game.length;\
    \ i++){\n\t\tif(game[i] === guess[i]){\n\t\t\tresult.push(0);\n\t\t}else{\n\t\t\
    \tresult.push(Math.abs(game[i] - guess[i]));\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    let result = [];\n    for(let i = 0; i < game.length; i++){\n        if(game[i]\
    \ == guess[i]){\n            result.push(0);\n        } else{\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}", "    let result = [];\n\
    \    for(let i = 0; i < game.length; i++){\n        result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return result;\n}", "  let result = []\n  for(let\
    \ i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n      result.push(0)\n\
    \    } else {\n      result.push(Math.abs(game[i] - guess[i]))\n    }\n  }\n \
    \ return result\n}\n", "    let compare = []\n    for(let i = 0; i < game.length;\
    \ i++){\n        if(game[i] === guess[i]){\n            compare.push(0)\n    \
    \    } else {\n            compare.push(Math.abs(game[i] - guess[i]))\n      \
    \  }\n    }\n    return compare\n}\n\ncompare([5,3,8,5],[5,3,8,5])//[0,0,0,0]\n\
    compare([5,3,8,5],[5,3,8,12])//[0,0,0,7]\ncompare([5,3,5,5],[5,3,5,5])//[0,0,0,0]\n\
    compare([5,3,5,5],[5,3,5,12])//[0,0,0,7]\ncompare([5,3,5,5],[4,4,4,4])//[1,1,1,1]\n\
    compare([5,3,5,5],[12,12,12,12])//[7,7,7,7]\ncompare([5,3,5,5],[2,2,2,2])//[3,1,3,3]\n\
    compare([5,3,5,5],[6,4,6,4])//[1,1,1,1]\ncompare([5,3,5,5],[1,1,1,1])//[4,2,4,4]\n\
    compare([5,3,5,5],[9,9,9,9])//[4,6,4,4]\ncompare([5,3,5,5],[3,3,3,3])//[2,0,2,2]\n\
    compare([5,3,5,5],[7,7,7,7])//[2,4,2,2]\ncompare([5,3,5,5],[8,6,8,6])//[1,3,1,1]\n\
    compare([5,3,5,5],[11,9,11,9])//[1,6,1,1]\ncompare([5,3,", "    let arr = [];\n\
    \    for(i=0; i<game.length; i++){\n        if(game[i] === guess[i]){\n      \
    \      arr.push(0);\n        }else{\n            arr.push(Math.abs(game[i] - guess[i]));\n\
    \        }\n    }\n    return arr;\n}", "    return game.map((a, i) => a === guess[i]\
    \ ? 0 : Math.abs(a - guess[i]))\n}\n", "let result=[];\n  for(let i=0; i<game.length;\
    \ i++){\n    let diff=guess[i]-game[i];\n    let absDiff=Math.abs(diff);\n   \
    \ result.push(absDiff);\n  }\n  return result;\n}\n", "let result = []\nfor(let\
    \ i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n        result.push(0)\n\
    \    } else {\n        result.push(Math.abs(game[i] - guess[i]))\n    }\n}\nreturn\
    \ result\n}\n\ncompare([1, 2, 3], [1, 2, 4])//[0, 0, 1]\ncompare([2, 5, 3], [3,\
    \ 5, 2])//[1, 0, 1]", "    let result = [];\n    game.forEach((el, i) => {\n \
    \       if(el === guess[i]){\n            result.push(0);\n        } else {\n\
    \            result.push(Math.abs(el - guess[i]));\n        }\n    });\n    return\
    \ result;\n}\n", "    let result = []\n    for(let i = 0; i < game.length; i++){\n\
    \        result.push(Math.abs(game[i] - guess[i]))\n    }\n    return result\n\
    }", "  const output = [];\n  game.forEach((result, idx) => {\n    output.push(Math.abs(result\
    \ - guess[idx]));\n  });\n  return output;\n}", "  let newArr = [];\n  for(let\
    \ i = 0; i < game.length; i++){\n    if(game[i] === guess[i]){\n      newArr.push(0);\n\
    \    } else {\n      newArr.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return newArr;\n}", "    var output=[];\n    for(var i=0; i<game.length; i++){\n\
    \        if(game[i] === guess[i]){\n            output.push(0);\n        }else{\n\
    \            output.push(Math.abs(game[i]-guess[i]));\n        }\n    }\n    return\
    \ output;\n}", "    let result = [];\n    for(let i = 0; i < game.length; i++){\n\
    \        result.push(Math.abs(game[i] - guess[i]));\n    }\n    return result;\n\
    }", "  let result = [];\n  for(let i = 0; i < game.length; i++){\n    if(game[i]\
    \ === guess[i]){\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}\n", "    var result = [];\n \
    \   for(var i = 0; i < game.length; i++){\n        if(game[i] === guess[i]){\n\
    \            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    var counter\
    \ = 0;\n    var result = [];\n    for(var i = 0; i < game.length; i++){\n    \
    \    counter = Math.abs(game[i] - guess[i]);\n        result.push(counter);\n\
    \    }\n    return result;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

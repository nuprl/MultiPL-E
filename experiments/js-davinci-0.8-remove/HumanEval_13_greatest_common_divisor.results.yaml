language: js
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var gcd = 1;\n  for(var i = 1; i <= a && i <= b; i++){\n    if(a % i\
    \ == 0 && b % i == 0){\n      gcd = i;\n    }\n  }\n  return gcd;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (a === 0) return b;\n\tif (b === 0) return a;\n\tif (a === b) return\
    \ a;\n\tif (a === 1 || b === 1) return 1;\n\tif (a % 2 === 0 && b % 2 === 0) return\
    \ 2 * greatest_common_divisor(a/2, b/2);\n\tif (a % 2 === 0) return greatest_common_divisor(a/2,\
    \ b);\n\tif (b % 2 === 0) return greatest_common_divisor(a, b/2);\n\tif (a > b)\
    \ return greatest_common_divisor((a-b)/2, b);\n\treturn greatest_common_divisor((b-a)/2,\
    \ a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    while(b != 0){\n        var temp = b;\n        b = a % b;\n       \
    \ a = temp;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar result = 0;\n\tvar min = Math.min(a, b);\n\tfor(var i = 1; i <= min;\
    \ i++){\n\t\tif(a % i == 0 && b % i == 0){\n\t\t\tresult = i;\n\t\t}\n\t}\n\t\
    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a === 0 || b === 0){\n        return 1;\n    }\n    var c;\n   \
    \ while(b !== 0){\n        c = a % b;\n        a = b;\n        b = c;\n    }\n\
    \    return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (b == 0) return a;\n\telse greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n1\n    at test (/tmp/tmpkc6ljzna.js:12:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpkc6ljzna.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return a < b ? gcd(b, a) : gcd(a, b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1ekpgmnw.js:3\n    return a < b ? gcd(b, a) : gcd(a, b);\n    \
    \         ^\n\nReferenceError: gcd is not defined\n    at greatest_common_divisor\
    \ (/tmp/tmp1ekpgmnw.js:3:14)\n    at test (/tmp/tmp1ekpgmnw.js:11:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp1ekpgmnw.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b ? greatest_common_divisor(b, a % b) : a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b==0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a == 0)\n    return b;\n  return greatest_common_divisor(b % a, a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var d = 0;\n  for(var i = 0; i < a || i < b; i++){\n    if(a % i == 0\
    \ && b % i == 0){\n      d = i;\n    }\n  }\n  return d;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < 0) a = -a;\n\tif(b < 0) b = -b;\n\tif(b > a){var temp = a; a =\
    \ b; b = temp;}\n\twhile(true){\n\t\tif(b == 0) return a;\n\t\ta %= b;\n\t\tif(a\
    \ == 0) return b;\n\t\tb %= a;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < b){\n\t\tvar t = a;\n\t\ta = b;\n\t\tb = t;\n\t}\n\t\n\tvar gcd\
    \ = 0;\n\twhile(b){\n\t\tgcd = b;\n\t\tb = a % b;\n\t\ta = gcd;\n\t}\n\t\n\treturn\
    \ gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b==0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\twhile(a != b){\n\t\tif(a > b){\n\t\t\ta = a - b;\n\t\t}else{\n\t\t\t\
    b = b - a;\n\t\t}\n\t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2,\n        greatestDivisor = 1;\n\n    //if u pass a\
    \ -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n    \
    \    return 1;\n\n    while(a >= divisor && b >= divisor){\n        if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;\n        }\n\
    \        divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var gcd = 1;\n\n    for(var i = 1; i <= a && i <= b; i++){\n      \
    \  if(a % i == 0 && b % i == 0){\n            gcd = i;\n        }\n    }\n\n \
    \   return gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var r = a % b;\n    if(r == 0){\n        return b;\n    }\n    else{\n\
    \        return greatest_common_divisor(b, r);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t// Check to make sure a and b are positive integers.\n\tif (a < 0 ||\
    \ b < 0){\n\t\tthrow new Error(\"The function greatest_common_divisor() can only\
    \ be used for positive integers.\")\n\t}\n\n\tif (!Number.isInteger(a) || !Number.isInteger(b)){\n\
    \t\tthrow new Error(\"The function greatest_common_divisor() can only be used\
    \ for integers.\")\n\t}\n\n\t// Make sure a and b are positive integers.\n\ta\
    \ = Math.abs(a);\n\tb = Math.abs(b);\n\n\twhile (b !== 0){\n\t\tvar temp = b;\n\
    \t\tb = a % b;\n\t\ta = temp;\n\t}\n\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a == 0){\n    return b;\n  }\n  if(b == 0){\n    return a;\n  }\n\
    \  while(a > 0 && b > 0){\n    if(a > b){\n      a %= b;\n    }else{\n      b\
    \ %= a;\n    }\n  }\n  return a + b;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  let dividend = (a > b) ? a : b;\n  let divisor = (a < b) ? a : b;\n \
    \ while(divisor > 0){\n    remainder = dividend % divisor;\n    dividend = divisor;\n\
    \    divisor = remainder;\n  }\n  return dividend;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t\n\tlet divisor = 2, \n\t\tgreatestDivisor = 1;\n\n\t//if u pass a -ve\
    \ number this will not work. fix it dude!!\n\tif (a < 2 || b < 2)\n    \treturn\
    \ 1;\n  \n  \twhile(a >= divisor && b >= divisor){\n  \t\tif(a %divisor == 0 &&\
    \ b% divisor ==0){\n       \t\tgreatestDivisor = divisor;      \n    \t}\n   \
    \ \tdivisor++;\n  \t}\n  return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\ta = a >>> 0;\n\tb = b >>> 0;\n\twhile(b > 0){\n\t\tvar mod = a % b;\n\
    \t\ta = b;\n\t\tb = mod;\n\t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0 || b == 0){\n        return a + b;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (b==0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a%b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a > b){\n        c = a\n        a = b\n        b = c\n    }\n \
    \   while (a > 0){\n        c = b % a\n        b = a\n        a = c\n    }\n \
    \   return b\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn ((b == 0) ? a : greatest_common_divisor(b, a % b));\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0)\n        return b;\n    if (b == 0)\n        return a;\n\
    \    if (a == b)\n        return a;\n    if (a > b)\n        return greatest_common_divisor(a-b,\
    \ b);\n    return greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (b == 0) return a;\n  return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var temp;\n    while (b != 0){\n        temp = a % b;\n        a =\
    \ b;\n        b = temp;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b==0) return a;\n\telse return greatest_common_divisor(b, a%b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    a = Math.abs(a);\n    b = Math.abs(b);\n    while(b){\n        var\
    \ c = a;\n        a = b;\n        b = c % b;\n    }\n    return a;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (b===0) {\n\t\treturn a;\n\t} else {\n\t\treturn greatest_common_divisor(b,\
    \ a%b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a == 0){\n    return b;\n  }\n  else if(b == 0){\n    return a;\n\
    \  }\n  return greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  return b ? greatest_common_divisor(b, a % b) : a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0){\n    return b;\n  }\n  if(b === 0){\n    return a;\n  }\n\
    \  let max = Math.max(a, b);\n  let min = Math.min(a, b);\n  return greatest_common_divisor(min,\
    \ max % min);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\tvar c = 0;\n\tif(a < b){\n\t\t\
    c = a;\n\t\ta = b;\n\t\tb = c;\n\t}\n\twhile(a % b != 0){\n\t\tc = a % b;\n\t\t\
    a = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var min = Math.min(a, b);\n    var max = Math.max(a, b);\n    while(min\
    \ != 0){\n        var remainder = max % min;\n        max = min;\n        min\
    \ = remainder;\n    }\n    return max;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar divisor = 2,\n\tgcd = 1;\n\n\t//if u pass a -ve number this will\
    \ not work. fix it dude!!\n\tif (a < 2 || b < 2)\n\t\treturn 1;\n\n\twhile(a >=\
    \ divisor && b >= divisor){\n\t\tif(a %divisor == 0 && b% divisor ==0){\n\t\t\t\
    gcd = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn gcd;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a < 0) a = -a;\n    if (b < 0) b = -b;\n    if (b > a) {var temp\
    \ = a; a = b; b = temp;}\n    while (true) {\n        if (b == 0) return a;\n\
    \        a %= b;\n        if (a == 0) return b;\n        b %= a;\n    }\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var r = b ? a%b : a;\n  return b ? greatest_common_divisor(b, r) : a;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar temp;\n\twhile(b != 0){\n\t\ttemp = a;\n\t\ta = b;\n\t\tb = temp\
    \ % b;\n\t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn a % b == 0 ? b : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var gcd = 1;\n    if (a === b) return a;\n    else if (a < b) return\
    \ greatest_common_divisor(a, b-a);\n    else return greatest_common_divisor(a-b,\
    \ b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var gcd = 0;\n    for(var i = 1; i <= a && i <= b; i++){\n        if(a\
    \ % i == 0 && b % i == 0){\n            gcd = i;\n        }\n    }\n    return\
    \ gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (a < b) {\n\t\tvar temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\twhile\
    \ (true) {\n\t\tif (b == 0) return a;\n\t\ta %= b;\n\t\tif (a == 0) return b;\n\
    \t\tb %= a;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b === 0){\n    return a;\n  }\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    else return greatest_common_divisor(b, a\
    \ % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0)\n        return a;\n    else\n        return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  //Return zero if either a or b is zero\n  if(a == 0 || b == 0){\n   \
    \ return 0;\n  }\n  //Return b if a divides b\n  if(b % a == 0){\n    return a;\n\
    \  }\n  //Return a if b divides a\n  if(a % b == 0){\n    return b;\n  }\n  //Return\
    \ GCD of a-b and b if a > b\n  if(a > b){\n    return greatest_common_divisor(a-b,\
    \ b);\n  }\n  //Return GCD of a and b-a if b > a\n  if(b > a){\n    return greatest_common_divisor(a,\
    \ b-a);\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a < b) {\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while (true) {\n        a %= b;\n        if (a == 0) return b;\n \
    \       b %= a;\n        if (b == 0) return a;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    // A and B cannot be negative\n    a = Math.abs(a);\n    b = Math.abs(b);\n\
    \    // Base case\n    if(a==0 && b==0){\n        return 1;\n    }\n    if(a==0){\n\
    \        return b;\n    }\n    if(b==0){\n        return a;\n    }\n    // Recursive\
    \ case\n    var gcd = greatest_common_divisor(b, a%b);\n    return gcd;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar r;\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\twhile(b!=0){\n\t\t\
    r = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(!b)\n\t\treturn a;\n\treturn greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    else return greatest_common_divisor(b, a\
    \ % b);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var t;\n    while (b != 0) {\n        t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    return greatest_common_divisor(b % a, a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    else return greatest_common_divisor(b, a\
    \ % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar r;\n\tif(a<b){\n\t\tr = a;\n\t\ta = b;\n\t\tb = r;\n\t}\n\twhile(r\
    \ != 0){\n\t\tr = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn a;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    while(a != b){\n        if(a > b){\n            a = a - b;\n      \
    \  }else{\n            b = b - a;\n        }\n    }\n    return a;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var n = 0;\n    var d = 0;\n    while (1) {\n        d = a % b;\n \
    \       if (d === 0) {\n            return b;\n        }\n        a = b;\n   \
    \     b = d;\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    a = Math.abs(a);\n    b = Math.abs(b);\n    if(a < b) var temp = a,\
    \ a = b, b = temp;\n    while(true){\n        a %= b;\n        if (a == 0) return\
    \ b;\n        b %= a;\n        if (b == 0) return a;\n    }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a === 0 || b === 0){\n        return (a === 0)? b : a;\n    }\n\
    \    else{\n        if(a >= b){\n            return greatest_common_divisor(a%b,\
    \ b);\n        }\n        else{\n            return greatest_common_divisor(a,\
    \ b%a);\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b === 0) {\n        return a;\n    }\n    else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    //The greatest common divisor of 0 and a is a\n    if(b == 0){\n  \
    \      return a;\n    }\n    //The greatest common divisor of a and b is the same\
    \ as the greatest common divisor of b and the remainder of a and b\n    else{\n\
    \        return greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (a > b) {\n    if (a % b == 0) {\n      return b;\n    } else {\n\
    \      return greatest_common_divisor(b, a % b);\n    }\n  } else {\n    if (b\
    \ % a == 0) {\n      return a;\n    } else {\n      return greatest_common_divisor(a,\
    \ b % a);\n    }\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar c;\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\twhile (a){\n\t\tc =\
    \ a;\n\t\ta = b % a;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b === 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var min = Math.min(a, b);\n    var divisor = 1;\n    for(var i = 1;\
    \ i <= min; i++){\n        if(a % i == 0 && b % i == 0){\n            divisor\
    \ = i;\n        }\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a === 0) return b;\n\treturn greatest_common_divisor(b % a, a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar temp;\n\twhile(b != 0){\n\t\ttemp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\
    \t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    while(b != 0){\n        var mod = a % b;\n        a = b;\n        b\
    \ = mod;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var divisor = 2,\n      greatestDivisor = 1;\n\n  //If u OPTIMIZATION:\
    \ subtraction instead of modulus\n  if (a < 2 || b < 2) {\n    return 1;\n  }\n\
    \n  while(a >= divisor && b >= divisor){\n    if(a %divisor == 0 && b% divisor\
    \ ==0){\n      greatestDivisor = divisor;\n    }\n    divisor++;\n  }\n  return\
    \ greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  while(b){\n    var t = b;\n    b = a % b;\n    a = t;\n  }\n  return\
    \ a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t\n\treturn ((a>b)?greatest_common_divisor(b, a):(a==0)?b:greatest_common_divisor(b%a,\
    \ a));\n\t\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn b ? greatest_common_divisor(b, a % b) : a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  //Euclid's Algorithm\n  var rem = 0;\n  while(b != 0){\n    rem = a %\
    \ b;\n    a = b;\n    b = rem;\n  }\n  return a;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (b == 0) return a;\n\treturn greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(!b) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t//If a is zero return b, else call the function recursively\n\treturn\
    \ a == 0 ? b : greatest_common_divisor(b % a, a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    while(b){\n        let t = b;\n        b = a % b;\n        a = t;\n\
    \    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a === 0) return b;\n    return greatest_common_divisor(b % a, a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;      \n   \
    \     }\n     divisor++;\n    }\n    return greatestDivisor;\n}\n\nvar gcd = greatest_common_divisor(14,\
    \ 21);\nprint(gcd);\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_ir7tqxc.js:20\nprint(gcd);\n^\n\nReferenceError: print is not\
    \ defined\n    at Object.<anonymous> (/tmp/tmp_ir7tqxc.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var r = a % b;\n  if(r == 0){\n    return b;\n  }\n  return greatest_common_divisor(b,\
    \ r);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  let gcd = a%b;\n  while(gcd != 0){\n    a = b;\n    b = gcd;\n    gcd\
    \ = a%b;\n  }\n  return b;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b > a) {\n        var temp = a;\n        a = b;\n        b = temp;\n\
    \    }\n    while (true) {\n        if (b == 0) return a;\n        a %= b;\n \
    \       if (a == 0) return b;\n        b %= a;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b==0){\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a%b);\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var rem;\n    if(a < b){\n        [a, b] = [b, a];\n    }\n    if(b\
    \ == 0){\n        return a;\n    }\n    while(b != 0){\n        rem = a % b;\n\
    \        a = b;\n        b = rem;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar divisor = 2, \n\t\tgreatestDivisor = 1;\n\n\t//if u pass a -ve number\
    \ this will not work. fix it dude!!\n\tif (a < 2 || b < 2)\n\t\treturn 1;\n\t\n\
    \twhile(a >= divisor && b >= divisor){\n\t\tif(a %divisor == 0 && b% divisor ==0){\n\
    \t\t\tgreatestDivisor = divisor;\t\t\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn greatestDivisor;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return (b == 0) ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var t;\n    while (b != 0) {\n        t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar divisor=1;\n\tvar int_max;\n\tvar abs_a=Math.abs(a);\n\tvar abs_b=Math.abs(b);\n\
    \t\n\t//Return 1 if one of the number is 1\n\tif(abs_a===1||abs_b===1){\n\t\t\
    return 1;\n\t}\n\t\n\t//Get the smallest integer\n\tint_max=Math.min(abs_a, abs_b);\n\
    \t\n\t//From 2 to the smallest integer, test if they are a common divisor\n\t\
    for(var i=2; i<=int_max; i++){\n\t\tif(abs_a%i===0&&abs_b%i===0){\n\t\t\tdivisor=i;\n\
    \t\t}\n\t}\n\t\n\treturn divisor;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    //console.log(gcd(a, b));\n    return gcd(a, b);\n    function gcd(a,\
    \ b){\n        return (b == 0) ? a : gcd(b, a % b);\n    }\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\tvar tmp;\n\twhile(b){\n\t\ttmp\
    \ = b;\n\t\tb = a % b;\n\t\ta = tmp;\n\t}\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    //Return a greatest common divisor of two integers a and b\n    if(b>a){\n\
    \        //if a is a greater number than b, put b in a and a in b\n        var\
    \ c = a;\n        a = b;\n        b = c;\n    }\n    //Start a loop that will\
    \ run as long as b is not equal to 0\n    while(b!=0){\n        //Put the remainder\
    \ of a divided by b in variale c\n        var c = a%b;\n        //Put b in a and\
    \ the remainder in b\n        a = b;\n        b = c;\n    }\n    //Return a when\
    \ b is equal to 0\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(b == 0) return a;\n  return greatest_common_divisor(b, a % b);\n}\n\
    \n\nvar my_data = [{\n    S_NO: '1',\n    Vehicle: 'Mercedes-Benz',\n    Make:\
    \ 'CLK-Class',\n    Color: 'White',\n    State: 'CA',\n    Reputation: '3.3',\n\
    \    'Purch. Price': '$35000',\n    'D.O.M': '1',\n    'Age': '0.02'\n  }, {\n\
    \    S_NO: '2',\n    Vehicle: 'Toyota',\n    Make: 'Avalon',\n    Color: 'Black',\n\
    \    State: 'FL',\n    Reputation: '4.4',\n    'Purch. Price': '$41000',\n   \
    \ 'D.O.M': '20',\n    'Age': '0.48'\n  }, {\n    S_NO: '3',\n    Vehicle: 'Porsche',\n\
    \    Make: 'Boxster',\n    Color: 'White',\n    State: 'GA',\n    Reputation:\
    \ '3.9',\n    'Purch. Price': '$47000',\n    'D.O.M': '30',\n    'Age': '0.72'\n\
    \  }, {\n    S_NO: '4',\n    Vehicle: 'Ford',\n    Make: 'Taurus',\n    Color:\
    \ 'Silver',\n    State: 'VA',\n    Reputation: '3.8',\n    'Purch. Price': '$35000',\n\
    \    'D.O.M': '46',\n    'Age': '1.15'\n  }, {\n    S_NO: '5',\n    Vehicle: 'BMW',\n\
    \    Make: '5 Series',\n    Color: 'White',\n    State: 'CA',\n    Reputation:\
    \ '4.1',\n    'Purch. Price': '$55000',\n    'D.O.M': '47',\n    'Age': '1.18'\n\
    \  }, {\n    S_NO: '6',\n    Vehicle: 'Toyota',\n    Make: 'Sienna',\n    Color:\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmpqur3vzhp.js:63\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar r = a % b;\n\tif(r == 0){\n\t\treturn b;\n\t}else{\n\t\treturn greatest_common_divisor(b,\
    \ r);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\ta = parseInt(a);\n\tb = parseInt(b);\n\tif (a<b){\n\t\tc = a;\n\t\ta\
    \ = b;\n\t\tb = c;\n\t}\n\t// if (b == 0){\n\t// \treturn a;\n\t// }\n\t// else{\n\
    \t// \treturn greatest_common_divisor(b, a%b);\n\t// }\n\tif (b == 0){\n\t\treturn\
    \ a;\n\t}\n\telse{\n\t\twhile (b != 0){\n\t\t\tc = a%b;\n\t\t\ta = b;\n\t\t\t\
    b = c;\n\t\t}\n\t\treturn a;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar m = a, n = b;\n\tif(n > m){\n\t\tm = b;\n\t\tn = a;\n\t}\n\tvar r\
    \ = m % n;\n\tif(r == 0){\n\t\treturn n;\n\t}\n\telse{\n\t\treturn greatest_common_divisor(n,\
    \ r);\n\t}\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n      greatestDivisor = divisor;      \n     }\n \
    \    divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(!b) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\twhile(true){\n\t\tif(a === 0) return b;\n\t\tb %= a;\n\t\tif(b === 0)\
    \ return a;\n\t\ta %= b;\n\t}\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b != 0){\n        return greatest_common_divisor(b, a % b);\n  \
    \  }\n    return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var temp;\n    while (b != 0){\n        temp = a % b;\n        a =\
    \ b;\n        b = temp;\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a % b == 0) {\n        return b;\n    } else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a===0) return b;\n    if(b===0) return a;\n    if(a===b) return\
    \ a;\n    if(a > b) return greatest_common_divisor(a-b, b);\n    if(a < b) return\
    \ greatest_common_divisor(a, b-a);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (b == 0)\n    return a;\n  else\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar gcd;\n\tif (a == 0)\n\t\tgcd = b;\n\telse if (b == 0)\n\t\tgcd =\
    \ a;\n\telse{\n\t\tvar a_prime = a;\n\t\tvar b_prime = b;\n\t\twhile (a_prime\
    \ != b_prime){\n\t\t\tif (a_prime > b_prime)\n\t\t\t\ta_prime = a_prime - b_prime;\n\
    \t\t\telse\n\t\t\t\tb_prime = b_prime - a_prime;\n\t\t}\n\t\tgcd = a_prime;\n\t\
    }\n\treturn gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar tmp = 0;\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\twhile(b != 0){\n\
    \t\ttmp = b;\n\t\tb = a % b;\n\t\ta = tmp;\n\t}\n\treturn a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(typeof a !== 'number' || typeof b !== 'number'){\n        throw\
    \ new Error('Both arguments must be numbers!');\n    }\n\n    a = Math.abs(a);\n\
    \    b = Math.abs(b);\n\n    while(b){\n        var t = b;\n        b = a % b;\n\
    \        a = t;\n    }\n\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t//Euclid's algorithm\n\t//http://en.wikipedia.org/wiki/Euclidean_algorithm\n\
    \twhile(b != 0){\n\t\tvar temp = b;\n\t\tb = a % b;\n\t\ta = temp;\n\t}\n\treturn\
    \ a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn (b == 0)?a:greatest_common_divisor(b, a%b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n      greatestDivisor = divisor;      \n     }\n \
    \    divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2,\n        greatestDivisor = 1;\n\n    //if u pass a\
    \ -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n    \
    \    return 1;\n\n    while(a >= divisor && b >= divisor){\n        if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;\n        }\n\
    \        divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn b ? greatest_common_divisor(b, a % b) : a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var r = a % b;\n    while(r){\n        a = b;\n        b = r;\n   \
    \     r = a % b;\n    }\n    return b;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0){\n        return b;\n    }\n    if (b == 0){\n        return\
    \ a;\n    }\n    if (a == b){\n        return a;\n    }\n    if (a > b){\n   \
    \     return greatest_common_divisor(a-b, b);\n    }\n    return greatest_common_divisor(a,\
    \ b-a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b === 0){\n        return a;\n    }\n    else{\n        return greatest_common_divisor(b,\
    \ a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a == 0) return b;\n    if (b == 0) return a;\n    if (a == b) return\
    \ a;\n    if (a == 1 || b == 1) return 1;\n    if ((a % 2 == 0) && (b % 2 == 0))\
    \ return 2 * greatest_common_divisor(a/2, b/2);\n    if ((a % 2 == 0) && (b %\
    \ 2 == 1)) return greatest_common_divisor(a/2, b);\n    if ((a % 2 == 1) && (b\
    \ % 2 == 0)) return greatest_common_divisor(a, b/2);\n    return greatest_common_divisor(b,\
    \ Math.abs(a - b));\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a < 0) a = -a;\n    if(b < 0) b = -b;\n    if(b > a){var temp =\
    \ a; a = b; b = temp;}\n    while(true){\n        if(b == 0) return a;\n     \
    \   a %= b;\n        if(a == 0) return b;\n        b %= a;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b === 0) return a;\n    else if (a === 0) return b;\n    else return\
    \ greatest_common_divisor(b, a % b);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t\n\tvar gcd = 0;\n\tvar remainder = 0;\n\tvar check = false;\n\t\n\t\n\
    \t//If a is equal to b, the greatest common divisor is a\n\tif(a === b){\n\t\t\
    gcd = a;\n\t\tcheck = true;\n\t}\n\t\n\t//If a is greater than b, iterate from\
    \ 2 up to b, checking for a common divisor\n\tif(a > b && check === false){\n\t\
    \tfor(var i = 2; i <= b; i++){\n\t\t\tif(a % i === 0 && b % i === 0){\n\t\t\t\t\
    gcd = i;\n\t\t\t\tcheck = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//If b is greater\
    \ than a, iterate from 2 up to a, checking for a common divisor\n\tif(b > a &&\
    \ check === false){\n\t\tfor(var i = 2; i <= a; i++){\n\t\t\tif(a % i === 0 &&\
    \ b % i === 0){\n\t\t\t\tgcd = i;\n\t\t\t\tcheck = true;\n\t\t\t}\n\t\t}\n\t}\n\
    \t\n\t//If the check failed, use the Euclidean algorithm for the greatest common\
    \ divisor\n\tif(check === false){\n\t\t//If a is greater than b, find the remainder,\
    \ then check a and b\n\t\tif(a > b){\n\t\t\tremainder = a % b;\n\t\t\tgcd = greatest_common_divisor(b,\
    \ remainder);\n\t\t}\n\t\t//If b is greater than a, find the remainder, then check\
    \ a and b\n\t\tif(b > a){\n\t\t\tremainder = b % a;\n\t\t\tgcd = greatest_common_divisor(a,\
    \ remainder);\n\t\t}\n\t}\n\t\n\treturn gcd;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp84cvy6js.js:58:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp84cvy6js.js:64:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    //Make sure that a >= b\n    if(a < b){\n        var temp = a;\n  \
    \      a = b;\n        b = temp;\n    }\n    //Using Euclidean Algorithm\n   \
    \ var remainder = a % b;\n    while(remainder != 0){\n        a = b;\n       \
    \ b = remainder;\n        remainder = a % b;\n    }\n    return b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t//Make a positive and b positive\n\ta = Math.abs(a);\n\tb = Math.abs(b);\n\
    \t//Choose the larger number and set it to a\n\tif(a < b){\n\t\tvar temp = a;\n\
    \t\ta = b;\n\t\tb = temp;\n\t}\n\t//The greatest common divisor is the larger\
    \ number\n\t//if the smaller number is zero\n\tif(b == 0){\n\t\treturn a;\n\t\
    }\n\t//Find the remainder, check if it is 0\n\t//if it is, return the smaller\
    \ number\n\tvar rem = a % b;\n\tif(rem == 0){\n\t\treturn b;\n\t}\n\t//Update\
    \ a and b\n\ta = b;\n\tb = rem;\n\t//Repeat\n\treturn greatest_common_divisor(a,\
    \ b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var temp = 0;\n  while(b != 0){\n    temp = b;\n    b = a % b;\n    a\
    \ = temp;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  let result = null;\n  let min = a<b?a:b;\n  while(result == null){\n\
    \    if(a%min == 0 && b%min == 0){\n      result = min;\n    }\n    min--;\n \
    \ }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (a % b === 0) {\n        return b;\n    } else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(a < 0) a = -a;\n\tif(b < 0) b = -b;\n\tif(b > a){var temp = a; a =\
    \ b; b = temp;}\n\twhile(true){\n\t\tif(b == 0) return a;\n\t\ta %= b;\n\t\tif(a\
    \ == 0) return b;\n\t\tb %= a;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b){\n        return greatest_common_divisor(b, a % b);\n    }else{\n\
    \        return Math.abs(a);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tvar a = a.toString();\n\tvar b = b.toString();\n\tvar a = a.split(\"\"\
    );\n\tvar b = b.split(\"\");\n\tvar a = a.filter(function(num, index, array){\n\
    \t\treturn array.indexOf(num) == index;\n\t});\n\tvar b = b.filter(function(num,\
    \ index, array){\n\t\treturn array.indexOf(num) == index;\n\t});\n\tvar result\
    \ = a.filter(function(num, index, array){\n\t\treturn b.indexOf(num) !== -1;\n\
    \t});\n\tvar result = result.join(\"\");\n\treturn result;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n''\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpbsw_rm40.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbsw_rm40.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '',\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) return a;\n    else return greatest_common_divisor(b, a\
    \ % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(!b) return a;\n    return greatest_common_divisor(b, a % b);\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;      \n   \
    \     }\n     divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return (b==0) ? a : greatest_common_divisor(b, a%b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var n = a % b;\n    if(n == 0){\n        return b;\n    }\n    else{\n\
    \        return greatest_common_divisor(b, n);\n    }\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var divisor = 2, \n        greatestDivisor = 1;\n    \n    //if u pass\
    \ a -ve number this will not work. fix it dude!!\n    if (a < 2 || b < 2)\n  \
    \      return 1;\n    \n    while(a >= divisor && b >= divisor){\n     if(a %divisor\
    \ == 0 && b% divisor ==0){\n            greatestDivisor = divisor;      \n   \
    \     }\n     divisor++;\n    }\n    return greatestDivisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\twhile(b!=0){\n\t\tvar r = a%b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn\
    \ a;\n}\n\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var temp = 0;\n  while(b != 0){\n    temp = b;\n    b = a % b;\n    a\
    \ = temp;\n  }\n  return a;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(a == 0) return b;\n    return greatest_common_divisor(b % a, a);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (b == 0)\n\t\treturn a;\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) {\n        return a;\n    }\n    else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    else return greatest_common_divisor(b, a\
    \ % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(!b) {\n        return a;\n    }\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    a = Math.abs(a);\n    b = Math.abs(b);\n    while(a != b){\n      \
    \  if(a > b){\n            a = a - b;\n        }else{\n            b = b - a;\n\
    \        }\n    }\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b>a){\n\t\tvar tmp = a;\n\t\ta = b;\n\t\tb = tmp;\n\t}\n\t\n\twhile(b>0){\n\
    \t\tvar r = a%b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (a == 0 || b == 0) return 0;\n  if (a == b) return a;\n  if (a > b)\
    \ return greatest_common_divisor(a - b, b);\n  return greatest_common_divisor(a,\
    \ b - a);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return a && b ? greatest_common_divisor(b, a % b) : a + b;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  var n = Math.max(a, b);\n  var m = Math.min(a, b);\n  while(m > 0){\n\
    \    var tmp = m;\n    m = n % m;\n    n = tmp;\n  }\n  return n;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\twhile(b > 0){\n\t\tlet t = b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\treturn\
    \ a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\t//If a is a multiple of b, then b is the greatest common divisor\n\t\
    if(b > 0 && a % b == 0){\n\t\treturn b;\n\t}\n\t//Otherwise, the greatest common\
    \ divisor is the greatest common divisor of b and the remainder of a / b\n\telse\
    \ if(b > 0){\n\t\treturn greatest_common_divisor(b, a % b);\n\t}\n\t//If b ==\
    \ 0, then the greatest common divisor is the largest number of a that is a factor\
    \ of a\n\telse if(b == 0){\n\t\treturn a;\n\t}\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var gcd = 1;\n    for(var i = 1; i <= a && i <= b; i++){\n        if(a\
    \ % i == 0 && b % i == 0){\n            gcd = i;\n        }\n    }\n    return\
    \ gcd;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if (b > a)\n  {\n    var temp = a;\n    a = b;\n    b = temp;\n  }\n\
    \  while (true)\n  {\n    if (b == 0)\n      return a;\n    a %= b;\n    if (a\
    \ == 0)\n      return b;\n    b %= a;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  let divisor = 2;\n  let greatestDivisor = 1;\n\n  if (a < 2 || b < 2)\n\
    \    return 1;\n\n  while (a >= divisor && b >= divisor){\n    if (a % divisor\
    \ == 0 && b % divisor == 0){\n      greatestDivisor = divisor;\n    }\n    divisor++;\n\
    \  }\n  return greatestDivisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if(b == 0) {\n        return a;\n    }\n    else {\n        return\
    \ greatest_common_divisor(b, a % b);\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var r, x, y;\n    x = (a > b) ? a : b;\n    y = (a < b) ? a : b;\n\
    \    while (x % y > 0) {\n        r = x % y;\n        x = y;\n        y = r;\n\
    \    }\n    return y;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0)\n        return a;\n    return greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return !b ? a : greatest_common_divisor(b, a % b);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var min = Math.min(a, b);\n    for(var i = min; i > 0; i--){\n    \
    \    if(a % i == 0 && b % i == 0){\n            return i;\n        }\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var max = Math.max(a, b);\n    var min = Math.min(a, b);\n    var gcd\
    \ = min;\n    while (max % min !== 0){\n        var temp = max % min;\n      \
    \  max = min;\n        min = temp;\n        gcd = min;\n    }\n    return gcd;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    if (b == 0) return a;\n    return greatest_common_divisor(b, a % b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b===0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b, a%b);\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    return b == 0 ? a : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977114
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\treturn a % b == 0 ? b : greatest_common_divisor(b, a % b);\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n    var n = Math.min(a, b);\n    var x = 1;\n    var gcd = 1;\n    while\
    \ (x <= n) {\n        if ((a % x == 0) && (b % x == 0)) {\n            gcd = x;\n\
    \        }\n        x += 1;\n    }\n    return gcd;\n}\n\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(b == 0){\n\t\treturn a;\n\t}\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif (a == 0) return b;\n\tif (b == 0) return a;\n\treturn greatest_common_divisor(b,\
    \ a % b);\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n  if(a === 0 || b === 0){\n    return Math.max(a, b);\n  }\n  var temp\
    \ = 0;\n  while(b !== 0){\n    temp = b;\n    b = a % b;\n    a = temp;\n  }\n\
    \  return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\nfunction greatest_common_divisor(a,\
    \ b){\n\tif(!b) return a;\n\treturn greatest_common_divisor(b, a % b);\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977115

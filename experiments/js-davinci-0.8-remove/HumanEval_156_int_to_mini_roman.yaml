name: HumanEval_156_int_to_mini_roman
language: js
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  function int_to_mini_roman(number){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"xix\");\n  assert.deepEqual(candidate(152),\"\
  clii\");\n  assert.deepEqual(candidate(251),\"ccli\");\n  assert.deepEqual(candidate(426),\"\
  cdxxvi\");\n  assert.deepEqual(candidate(500),\"d\");\n  assert.deepEqual(candidate(1),\"\
  i\");\n  assert.deepEqual(candidate(4),\"iv\");\n  assert.deepEqual(candidate(43),\"\
  xliii\");\n  assert.deepEqual(candidate(90),\"xc\");\n  assert.deepEqual(candidate(94),\"\
  xciv\");\n  assert.deepEqual(candidate(532),\"dxxxii\");\n  assert.deepEqual(candidate(900),\"\
  cm\");\n  assert.deepEqual(candidate(994),\"cmxciv\");\n  assert.deepEqual(candidate(1000),\"\
  m\");\n}\n\ntest();"
completions: ["    var result = '';\n    var numerals = {\n        'M': 1000,\n  \
    \      'CM': 900,\n        'D': 500,\n        'CD': 400,\n        'C': 100,\n\
    \        'XC': 90,\n        'L': 50,\n        'XL': 40,\n        'X': 10,\n  \
    \      'IX': 9,\n        'V': 5,\n        'IV': 4,\n        'I': 1\n    };\n \
    \   for (var i in numerals) {\n        while (number >= numerals[i]) {\n     \
    \       result += i;\n            number -= numerals[i];\n        }\n    }\n \
    \   return result;\n}\n", "    var result = '';\n    var i = 0;\n    // implement\
    \ your code here\n    return result;\n}\n", "  var map = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1},\n\
    \      roman = '',\n      i;\n  for ( i in map ) {\n    while ( number >= map[i]\
    \ ) {\n      roman += i;\n      number -= map[i];\n    }\n  }\n  return roman;\n\
    }\n", "  var introm = [1,2,3,4,5,6,7,8,9,10,40,50,90,100,400,500,900,1000];\n\
    \  var rom = ['i','ii','iii','iv','v','vi','vii','viii','ix','x','xl','l','xc','c','cd','d','cm','m'];\n\
    \  if(number === 0){\n    return \"\";\n  }\n  var result = \"\";\n  for(var i\
    \ = introm.length-1; i >= 0; i--){\n    if(number >= introm[i]){\n      number\
    \ -= introm[i];\n      result += rom[i];\n      i++;\n    }\n  }\n  return result;\n\
    }", "  var result = \"\";\n  var ref = { 1: \"i\", 4: \"iv\", 5: \"v\", 9: \"\
    ix\", 10: \"x\", 40: \"xl\", 50: \"l\", 90: \"xc\", 100: \"c\", 400: \"cd\", 500:\
    \ \"d\", 900: \"cm\", 1000: \"m\" };\n  var factor = 1000;\n  while (factor >\
    \ 0) {\n    if (number >= factor) {\n      result += ref[factor];\n      number\
    \ -= factor;\n    } else {\n      var reduced = factor / 10;\n      var calc_ref\
    \ = factor - reduced;\n      if (number >= calc_ref) {\n        result += ref[calc_ref];\n\
    \        number -= calc_ref;\n      } else {\n        factor = reduced;\n    \
    \  }\n    }\n  }\n  return result;\n}\n", "  let lookUp = {\n    \"1\": \"i\"\
    ,\n    \"4\": \"iv\",\n    \"5\": \"v\",\n    \"9\": \"ix\",\n    \"10\": \"x\"\
    ,\n    \"40\": \"xl\",\n    \"50\": \"l\",\n    \"90\": \"xc\",\n    \"100\":\
    \ \"c\",\n    \"400\": \"cd\",\n    \"500\": \"d\",\n    \"900\": \"cm\",\n  \
    \  \"1000\": \"m\"\n  }\n  // lookUp = {\n  //   \"1\": \"i\",\n  //   \"2\":\
    \ \"ii\",\n  //   \"3\": \"iii\",\n  //   \"4\": \"iv\",\n  //   \"5\": \"v\"\
    ,\n  //   \"6\": \"vi\",\n  //   \"7\": \"vii\",\n  //   \"8\": \"viii\",\n  //\
    \   \"9\": \"ix\",\n  //   \"10\": \"x\",\n  //   \"40\": \"xl\",\n  //   \"50\"\
    : \"l\",\n  //   \"90\": \"xc\",\n  //   \"100\": \"c\",\n  //   \"400\": \"cd\"\
    ,\n  //   \"500\": \"d\",\n  //   \"900\": \"cm\",\n  //   \"1000\": \"m\"\n \
    \ // }\n  let keys = Object.keys(lookUp);\n  let values = Object.values(lookUp);\n\
    \  let num = number.toString();\n  let result = '';\n  let small;\n  let large;\n\
    \  let index;\n  while (num.length > 0) {\n    index = num.length;\n    small\
    \ = parseInt(num);\n    large = parseInt(num);\n    while (keys.indexOf(small.toString())\
    \ === -1) {\n      small--;\n    }\n    if (keys.indexOf(large.toString()) ===\
    \ -1) {\n      while (keys.indexOf(large.toString()) === -1) {\n        large++;\n\
    \      }\n    }\n    if (Math.abs(small - parseInt(num)) > Math.abs(large - parseInt(num)))\
    \ {\n      result += values[keys", "  var roman = '';\n  var nums = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n  var letters = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n  for (var i = 0; i < nums.length; i++) {\n    while (number >= nums[i])\
    \ {\n      roman += letters[i];\n      number -= nums[i];\n    }\n  }\n  return\
    \ roman;\n}\n", "\tvar roman_map = {1:'i', 5:'v', 10:'x', 50:'l', 100:'c', 500:'d',\
    \ 1000:'m'};\n\tvar output = '';\n\tvar digits = (number.toString()).split('').reverse();\n\
    \tfor (var i = 0; i < digits.length; i++) {\n\t\tvar digit = parseInt(digits[i]);\n\
    \t\t//Special case, 4 or 9\n\t\tif(digit === 4 || digit === 9){\n\t\t\toutput\
    \ = roman_map[Math.pow(10, i)] + roman_map[5*Math.pow(10, i)] + output;\n\t\t\
    } else {\n\t\t\tvar digit_roman = '';\n\t\t\tif(digit >= 5){\n\t\t\t\tdigit_roman\
    \ += roman_map[5*Math.pow(10, i)];\n\t\t\t\tdigit -= 5;\n\t\t\t}\n\t\t\tif(digit\
    \ < 4){\n\t\t\t\tdigit_roman += (roman_map[Math.pow(10, i)].repeat(digit));\n\t\
    \t\t}\n\t\t\toutput = digit_roman + output;\n\t\t}\n\t}\n\treturn output;\n}\n",
  "\tvar roman = \"\";\n\twhile(number >= 1000){\n\t\troman = roman + \"m\";\n\t\t\
    number = number - 1000;\n\t}\n\twhile(number >= 500){\n\t\troman = roman + \"\
    d\";\n\t\tnumber = number - 500;\n\t}\n\twhile(number >= 100){\n\t\troman = roman\
    \ + \"c\";\n\t\tnumber = number - 100;\n\t}\n\twhile(number >= 50){\n\t\troman\
    \ = roman + \"l\";\n\t\tnumber = number - 50;\n\t}\n\twhile(number >= 10){\n\t\
    \troman = roman + \"x\";\n\t\tnumber = number - 10;\n\t}\n\twhile(number >= 5){\n\
    \t\troman = roman + \"v\";\n\t\tnumber = number - 5;\n\t}\n\twhile(number >= 1){\n\
    \t\troman = roman + \"i\";\n\t\tnumber = number - 1;\n\t}\n\tconsole.log(roman);\n\
    }\nint_to_mini_roman(1);   // 'i'\nint_to_mini_roman(10);  // 'x'\nint_to_mini_roman(100);\
    \ // 'c'\nint_to_mini_roman(255); // 'cclv'\nint_to_mini_roman(846); // 'dcccxlvi'\n",
  "  let roman = {'M':1000, 'CM':900, 'D':500, 'CD':400, 'C':100, 'XC':90, 'L':50,\
    \ 'XL':40, 'X':10, 'IX':9, 'V':5, 'IV':4, 'I':1}\n  let result = ''\n  for (let\
    \ key in roman) {\n    while (number >= roman[key]) {\n      result += key\n \
    \     number -= roman[key]\n    }\n  }\n  return result.toLowerCase()\n}\n", " \
    \   var numerals = [\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"];\n    var\
    \ str = \"\";\n    var ones, tens, hundreds, thousands;\n    var len = number.toString().length;\n\
    \    if (len >= 1) {\n        ones = number % 10;\n        if (ones < 4) {\n \
    \           str = \"\".repeat(ones) + str;\n        } else if (ones == 4) {\n\
    \            str = numerals[0] + numerals[1] + str;\n        } else if (ones ==\
    \ 5) {\n            str = numerals[1] + str;\n        } else if (ones < 9) {\n\
    \            str = numerals[1] + \"\".repeat(ones - 5) + str;\n        } else\
    \ if (ones == 9) {\n            str = numerals[0] + numerals[2] + str;\n     \
    \   }\n    }\n    if (len >= 2) {\n        tens = Math.floor(number % 100 / 10);\n\
    \        if (tens < 4) {\n            str = \"\".repeat(tens) + str;\n       \
    \ } else if (tens == 4) {\n            str = numerals[2] + numerals[3] + str;\n\
    \        } else if (tens == 5) {\n            str = numerals[3] + str;\n     \
    \   } else if (tens < 9) {\n            str = numerals[3] + \"\".repeat(tens -\
    \ 5) + str;\n        } else if (tens == 9) {\n            str = numerals[2] +\
    \ numerals[4] + str;\n        }\n    }\n    if (len >= 3) {\n        hundreds\
    \ = Math.floor(number % 1000 / 100);\n        if (hundreds < 4) {\n          \
    \  str = \"\".repeat(hundreds) + str;\n        } else if (hundreds == 4) {\n \
    \           str = numerals[4] + numerals[5] + str;\n        } else if (hundreds\
    \ == 5) {\n            str = numerals[5] + str;\n        } else if (hundreds <\
    \ 9) {\n            str = numerals[5] + \"\".", "  var string = \"\";\n  //Thousand\
    \ Check\n  var temp = number/1000;\n  if(Math.floor(temp) > 0){\n    for(var i\
    \ = 0; i < Math.floor(temp); i++){\n      string += \"m\";\n    }\n    number\
    \ -= (1000*Math.floor(temp));\n  }\n  //Hundreds Check\n  temp = number/100;\n\
    \  if(Math.floor(temp) > 0){\n    if(Math.floor(temp) === 9){\n      string +=\
    \ \"cm\";\n    }\n    else if(Math.floor(temp) === 4){\n      string += \"cd\"\
    ;\n    }\n    else if(Math.floor(temp) >= 5){\n      string += \"d\";\n      for(var\
    \ i = 0; i < Math.floor(temp)-5; i++){\n        string += \"c\";\n      }\n  \
    \  }\n    else{\n      for(var i = 0; i < Math.floor(temp); i++){\n        string\
    \ += \"c\";\n      }\n    }\n    number -= (100*Math.floor(temp));\n  }\n  //Tens\
    \ Check\n  temp = number/10;\n  if(Math.floor(temp) > 0){\n    if(Math.floor(temp)\
    \ === 9){\n      string += \"xc\";\n    }\n    else if(Math.floor(temp) === 4){\n\
    \      string += \"xl\";\n    }\n    else if(Math.floor(temp) >= 5){\n      string\
    \ += \"l\";\n      for(var i = 0; i < Math.floor(temp)-5; i++){\n        string\
    \ += \"x\";\n      }\n    }\n    else{\n      for(var i = 0; i < Math.floor(temp);\
    \ i++){\n        string += \"x\";\n      }\n    }\n    number -= (10*Math.floor(temp));\n\
    \  }\n  //Ones Check\n  temp = number;\n  if(Math.floor(temp) > 0){\n    if(Math.floor(temp)\
    \ === 9){\n      string += \"ix\";\n    }\n    else if(Math.floor(temp) === 4){\n\
    \      string", "    const romans = {\n        I: 1,\n        V: 5,\n        X:\
    \ 10,\n        L: 50,\n        C: 100,\n        D: 500,\n        M: 1000\n   \
    \ };\n    let roman = '';\n    while (number > 0) {\n        if (number >= 1000)\
    \ {\n            roman += 'm';\n            number -= 1000;\n        } else if\
    \ (number >= 900) {\n            roman += 'cm';\n            number -= 900;\n\
    \        } else if (number >= 500) {\n            roman += 'd';\n            number\
    \ -= 500;\n        } else if (number >= 400) {\n            roman += 'cd';\n \
    \           number -= 400;\n        } else if (number >= 100) {\n            roman\
    \ += 'c';\n            number -= 100;\n        } else if (number >= 90) {\n  \
    \          roman += 'xc';\n            number -= 90;\n        } else if (number\
    \ >= 50) {\n            roman += 'l';\n            number -= 50;\n        } else\
    \ if (number >= 40) {\n            roman += 'xl';\n            number -= 40;\n\
    \        } else if (number >= 10) {\n            roman += 'x';\n            number\
    \ -= 10;\n        } else if (number >= 9) {\n            roman += 'ix';\n    \
    \        number -= 9;\n        } else if (number >= 5) {\n            roman +=\
    \ 'v';\n            number -= 5;\n        } else if (number >= 4) {\n        \
    \    roman += 'iv';\n            number -= 4;\n        } else if (number >= 1)\
    \ {\n            roman += 'i';\n            number -= 1;\n        }\n    }\n \
    \   return roman;\n}\n", "  let roman=\"\";\n  for(let i=0; i<number; i++){\n\
    \    roman+=\"i\";\n  }\n  roman=roman.replace(/iii$/,\"iv\").replace(/ii$/,\"\
    iii\").replace(/ii/g,\"v\").replace(/vv/g,\"x\").replace(/xv$/,\"xix\").replace(/xx$/,\"\
    xxi\").replace(/xx/g,\"l\").replace(/lx$/,\"xc\").replace(/lc$/,\"xc\").replace(/ll/g,\"\
    c\").replace(/cc/g,\"d\").replace(/cd$/,\"cxc\").replace(/dc$/,\"cxc\").replace(/ccc$/,\"\
    cd\").replace(/dd$/,\"cm\").replace(/dm$/,\"cm\").replace(/dccc$/,\"dcd\").replace(/dcccc$/,\"\
    cm\");\n  return roman;\n}", "    const numerals = {\n        'M':1000,\n    \
    \    'CM':900,\n        'D':500,\n        'CD':400,\n        'C':100,\n      \
    \  'XC':90,\n        'L':50,\n        'XL':40,\n        'X':10,\n        'IX':9,\n\
    \        'V':5,\n        'IV':4,\n        'I':1\n    };\n    let mini_roman =\
    \ '';\n    for (let key in numerals){\n        let amount = Math.floor(number/numerals[key]);\n\
    \        if (amount === 0) {\n            continue;\n        }\n        mini_roman\
    \ += key.repeat(amount);\n        number -= amount * numerals[key];\n    }\n \
    \   return mini_roman;\n}", "  var roman = \"\";\n  var m = Math.floor(number\
    \ / 1000);\n  var d = Math.floor((number % 1000) / 500);\n  var c = Math.floor((number\
    \ % 500) / 100);\n  var l = Math.floor((number % 100) / 50);\n  var x = Math.floor((number\
    \ % 50) / 10);\n  var v = Math.floor((number % 10) / 5);\n  var i = Math.floor(number\
    \ % 5);\n  roman += \"m\".repeat(m);\n  roman += \"d\".repeat(d);\n  roman +=\
    \ \"c\".repeat(c);\n  roman += \"l\".repeat(l);\n  roman += \"x\".repeat(x);\n\
    \  roman += \"v\".repeat(v);\n  roman += \"i\".repeat(i);\n  return roman;\n}\n",
  "    // Create a new string for roman numerals.\n    var roman = \"\";\n    // Because\
    \ of the restrictions, we need to convert our number to a string\n    // so we\
    \ can iterate through each digit.\n    var numStr = number.toString();\n    //\
    \ We need to iterate through each digit in the string.\n    for (var i = 0; i\
    \ < numStr.length; i++) {\n        // For each iteration, the place of the digit\
    \ is going to change, so\n        // we want to keep track of it.\n        var\
    \ place = 0;\n        // I and X are the only numerals that can be repeated, so\
    \ we need to\n        // account for that. This can be as simple as a while loop.\n\
    \        while (numStr[i] > 0) {\n            // We need to add I or X to the\
    \ string.\n            if (place === 0) {\n                // The only case we\
    \ need to account for is when V or X come\n                // before I, so we\
    \ can just check the next character.\n                if (numStr[i+1] == 5 ||\
    \ numStr[i+1] == 10) {\n                    // We need to add the appropriate\
    \ numeral to the string\n                    // instead.\n                   \
    \ if (numStr[i+1] == 5) {\n                        roman += \"v\";\n         \
    \           } else {\n                        roman += \"x\";\n              \
    \      }\n                    // We need to remove the numeral from the string.\n\
    \                    numStr = numStr.substring(0, i) + \"0\" + numStr.substring(i+1);\n\
    \                    // Since we don't know how many times the next digit is\n\
    \                    // going to be iterated, we need to decrement i here.\n \
    \                   i--;\n                    // We also need to break out of\
    \ the loop.\n                    break;\n                } else {\n          \
    \          // If the next digit is not 5 or 10, we just need to add\n        \
    \            // I to the string.\n                    roman += \"i\";\n      \
    \          }\n            } else {\n                // If the place is greater\
    \ than 0, we need to add X to the\n                // string.\n              \
    \  roman += \"x\";\n            }\n            // We need to decrement the digit\
    \ and the place.", "  var roman = ['I', 'V', 'X', 'L', 'C', 'D', 'M'];\n  var\
    \ res = '';\n  for(var i = 0; i < number.toString().length; i++){\n    if(parseInt(number.toString()[i])\
    \ <= 3){\n      res += roman[i*2].repeat(parseInt(number.toString()[i]));\n  \
    \  } else if(parseInt(number.toString()[i]) === 4){\n      res += roman[i*2] +\
    \ roman[i*2+1];\n    } else if(parseInt(number.toString()[i]) === 5){\n      res\
    \ += roman[i*2+1];\n    } else if(parseInt(number.toString()[i]) <= 8){\n    \
    \  res += roman[i*2+1] + roman[i*2].repeat(parseInt(number.toString()[i])-5);\n\
    \    } else if(parseInt(number.toString()[i]) === 9){\n      res += roman[i*2]\
    \ + roman[i*2+2];\n    }\n  }\n  return res;\n}\n", "    var result = '';\n  \
    \  var numStr = String(number);\n    for (var i = 0; i < numStr.length; i++) {\n\
    \        var digit = numStr[i];\n        if (digit >= 0 && digit <= 3) {\n   \
    \         result += 'i'.repeat(digit);\n        } else if (digit === 4) {\n  \
    \          result += 'iv';\n        } else if (digit >= 5 && digit <= 8) {\n \
    \           result += 'v' + 'i'.repeat(digit - 5);\n        } else if (digit ===\
    \ 9) {\n            result += 'ix';\n        } else if (digit === 1) {\n     \
    \       result += 'x'.repeat(digit);\n        } else if (digit === 2) {\n    \
    \        result += 'cc';\n        } else if (digit === 3) {\n            result\
    \ += 'ccc';\n        } else if (digit === 4) {\n            result += 'cd';\n\
    \        } else if (digit === 5) {\n            result += 'd';\n        } else\
    \ if (digit === 6) {\n            result += 'dc';\n        } else if (digit ===\
    \ 7) {\n            result += 'dcc';\n        } else if (digit === 8) {\n    \
    \        result += 'dccc';\n        } else if (digit === 9) {\n            result\
    \ += 'cm';\n        } else if (digit === 1) {\n            result += 'm'.repeat(digit);\n\
    \        } else if (digit === 2) {\n            result += 'mm';\n        } else\
    \ if (digit === 3) {\n            result += 'mmm';\n        }\n    }\n    return\
    \ result;\n}\n", "    const roman_numerals = {\n        1 : 'i',\n        5 :\
    \ 'v',\n        10 : 'x',\n        50 : 'l',\n        100 : 'c',\n        500\
    \ : 'd',\n        1000 : 'm'\n    };\n    // translate number to string\n    //\
    \ split number into array\n    const number_to_array = number.toString().split('');\n\
    \    // reverse the array\n    const reversed_array = number_to_array.reverse();\n\
    \    // create empty array to store roman numeral string\n    const roman_numeral_array\
    \ = [];\n    // for each element in the array\n    for (let i = 0; i < reversed_array.length;\
    \ i++) {\n        // if the element is less than 5\n        if (reversed_array[i]\
    \ < 5) {\n            // add the roman numeral of 1 to the number of iterations\
    \ it takes to get to this element\n            for (let j = 0; j < reversed_array[i];\
    \ j++) {\n                roman_numeral_array.push(roman_numerals[Math.pow(10,\
    \ i)]);\n            }\n        }\n        // if the element is equal to 5\n \
    \       else if (reversed_array[i] === '5') {\n            // add the roman numeral\
    \ of 5 to the array\n            roman_numeral_array.push(roman_numerals[5 * Math.pow(10,\
    \ i)]);\n        }\n        // if the element is greater than 5\n        else\
    \ if (reversed_array[i] > 5) {\n            // add the roman numeral of 5 to the\
    \ array\n            roman_numeral_array.push(roman_numerals[5 * Math.pow(10,\
    \ i)]);\n            // add the roman numeral of 1 to the number of iterations\
    \ it takes to get to this element\n            for (let j = 0; j < reversed_array[i]\
    \ - 5; j++) {\n                roman_numeral_array.push(roman_numerals[Math.pow(10,\
    \ i)]);\n            }\n        }\n    }\n    // reverse the array\n    roman",
  "    //Encode a number into a Roman Numeral \"Mini\" representation.\n    // Based\
    \ on the Roman Numerals for Numbers, see\n    //http://oeis.org/A008986,\n   \
    \ // http://oeis.org/A005878,\n    // and http://oeis.org/A000142,\n    // an\
    \ interesting reference, see\n    // https://www.afjarvis.staff.shef.ac.uk/maths/jarvisspec02.pdf\n\
    \    // This encoding is simplified and adapted to fit the purpose of this task.\n\
    \    // Instead of the Roman Numerals \"proper\", we use the following symbols:\n\
    \    // I:1, V:5, X:10, L:50, C:100, D:500, M:1000\n    // The encoding is in\
    \ a space-saving \"mini\" representation, which\n    // ignores the fact that\
    \ the usual Roman Numeral representation allows no\n    // more than 3 identical\
    \ symbols in a row. In our encoding we never use\n    // 4 identical symbols in\
    \ a row, and we use it at most twice in a row.\n    // Also, we use the convention\
    \ that a symbol with a greater value which\n    // follows a symbol with a lesser\
    \ value represents the value of both\n    // symbols, so that VIIII=IX=9, and\
    \ LXXXX=XC=90.\n    // (This is the same as the \"subtractive notation\", but\
    \ we use the\n    // symbols in reverse order, and use the symbols with smaller\
    \ values\n    // as often as possible.)\n    // The rules used to encode a value\
    \ are:\n    // 1) If the value to be encoded is 1, use I;\n    // 2) If the value\
    \ to be encoded is 2, use II;\n    // 3) If the value to be encoded is 3, use\
    \ III;\n    // 4) If the value to be encoded is 4, use IV;\n    // 5) If the value\
    \ to be encoded is 5, use V;\n    // 6) If the value to be encoded is 6, use VI;\n\
    \    // 7) If the value to be encoded is 7, use VII;\n    // 8) If the value to\
    \ be encoded is 8, use VIII;\n    // 9) If the value to be encoded is 9, use",
  "  // your code here\n}\n", "    // your code here\n    var str = number.toString();\n\
    \    var res = \"\";\n    for(var i = str.length - 1; i >= 0; i--){\n        if(str[i]\
    \ == \"0\") continue;\n        var a = parseInt(str[i]) * Math.pow(10, str.length\
    \ - 1 - i);\n        if(a == 1) res = \"I\" + res;\n        else if(a == 10) res\
    \ = \"X\" + res;\n        else if(a == 100) res = \"C\" + res;\n        else if(a\
    \ == 1000) res = \"M\" + res;\n        else if(a == 4) res = \"IV\" + res;\n \
    \       else if(a == 5) res = \"V\" + res;\n        else if(a == 9) res = \"IX\"\
    \ + res;\n        else if(a == 40) res = \"XL\" + res;\n        else if(a == 50)\
    \ res = \"L\" + res;\n        else if(a == 90) res = \"XC\" + res;\n        else\
    \ if(a == 400) res = \"CD\" + res;\n        else if(a == 500) res = \"D\" + res;\n\
    \        else if(a == 900) res = \"CM\" + res;\n        else if(a == 600) res\
    \ = \"DC\" + res;\n        else if(a == 600) res = \"DC\" + res;\n        else\
    \ if(a == 700) res = \"DCC\" + res;\n        else if(a == 800) res = \"DCCC\"\
    \ + res;\n        else if(a == 600) res = \"DC\" + res;\n        else if(a ==\
    \ 600) res = \"DC\" + res;\n        else if(a == 600) res = \"DC\" + res;\n  \
    \      else if(a == 600) res = \"DC\" + res;\n        else if(a == 600) res =\
    \ \"DC\" + res;\n        else if(a == 600) res = \"DC\" + res;\n        else if(a\
    \ == 600) res = \"DC\" + res;\n        else if(a == 600) res = \"DC\" + res;",
  "  var thousands = Math.floor(number / 1000);\n  var hundreds = Math.floor((number\
    \ - (thousands * 1000)) / 100);\n  var tens = Math.floor((number - (thousands\
    \ * 1000) - (hundreds * 100)) / 10);\n  var ones = number - (thousands * 1000)\
    \ - (hundreds * 100) - (tens * 10);\n  var romanThousands = \"M\".repeat(thousands);\n\
    \  var romanHundreds = \"C\".repeat(hundreds);\n  var romanTens = \"X\".repeat(tens);\n\
    \  var romanOnes = \"I\".repeat(ones);\n  return romanThousands + romanHundreds\
    \ + romanTens + romanOnes;\n}", "    if (number == 0) {\n        return \"no roman\
    \ number\";\n    }\n    if (number >= 1000) {\n        return \"m\" + int_to_mini_roman(number\
    \ - 1000);\n    }\n    if (number >= 900) {\n        return \"cm\" + int_to_mini_roman(number\
    \ - 900);\n    }\n    if (number >= 500) {\n        return \"d\" + int_to_mini_roman(number\
    \ - 500);\n    }\n    if (number >= 400) {\n        return \"cd\" + int_to_mini_roman(number\
    \ - 400);\n    }\n    if (number >= 100) {\n        return \"c\" + int_to_mini_roman(number\
    \ - 100);\n    }\n    if (number >= 90) {\n        return \"xc\" + int_to_mini_roman(number\
    \ - 90);\n    }\n    if (number >= 50) {\n        return \"l\" + int_to_mini_roman(number\
    \ - 50);\n    }\n    if (number >= 40) {\n        return \"xl\" + int_to_mini_roman(number\
    \ - 40);\n    }\n    if (number >= 10) {\n        return \"x\" + int_to_mini_roman(number\
    \ - 10);\n    }\n    if (number >= 9) {\n        return \"ix\" + int_to_mini_roman(number\
    \ - 9);\n    }\n    if (number >= 5) {\n        return \"v\" + int_to_mini_roman(number\
    \ - 5);\n    }\n    if (number >= 4) {\n        return \"iv\" + int_to_mini_roman(number\
    \ - 4);\n    }\n    if (number >= 1) {\n        return \"i\" + int_to_mini_roman(number\
    \ - 1);\n    }\n    return \"\";\n}\n", "  var roman_mapping = {\n    1000 : 'm',\n\
    \    900  : 'cm',\n    500  : 'd',\n    400  : 'cd',\n    100  : 'c',\n    90\
    \   : 'xc',\n    50   : 'l',\n    40   : 'xl',\n    10   : 'x',\n    9    : 'ix',\n\
    \    5    : 'v',\n    4    : 'iv',\n    1    : 'i'\n  };\n  var result = '';\n\
    \  for (var i in roman_mapping) {\n    while (number >= i) {\n      result +=\
    \ roman_mapping[i];\n      number -= i;\n    }\n  }\n  return result;\n}", " \
    \ var list = [[1000,'m'],[900,'cm'],[500,'d'],[400,'cd'],[100,'c'],[90,'xc'],[50,'l'],[40,'xl'],[10,'x'],[9,'ix'],[5,'v'],[4,'iv'],[1,'i']];\n\
    \  if(number < 0 || number > 1000){\n    return false;\n  }else{\n    var str\
    \ = '';\n    for(var i = 0; i < list.length; i++){\n      while(number - list[i][0]\
    \ >= 0){\n        str += list[i][1];\n        number -= list[i][0];\n      }\n\
    \    }\n    return str;\n  }\n}", "\tvar roman = \"\";\n\tvar romans = {\n\t\t\
    1: \"i\",\n\t\t5: \"v\",\n\t\t10: \"x\",\n\t\t50: \"l\",\n\t\t100: \"c\",\n\t\t\
    500: \"d\",\n\t\t1000: \"m\"\n\t};\n\tvar digits = String(number).split(\"\").reverse();\n\
    \tfor (var i = 0; i < digits.length; i++) {\n\t\tif (romans[digits[i]]) {\n\t\t\
    \tvar currentDigit = parseInt(digits[i]);\n\t\t\troman = romans[currentDigit]\
    \ + roman;\n\t\t} else {\n\t\t\tvar currentDigit = parseInt(digits[i]) * Math.pow(10,\
    \ i);\n\t\t\tif (currentDigit < 4 * Math.pow(10, i)) {\n\t\t\t\tfor (var j = 0;\
    \ j < currentDigit/Math.pow(10, i); j++) {\n\t\t\t\t\troman = romans[Math.pow(10,\
    \ i)] + roman;\n\t\t\t\t}\n\t\t\t} else if (currentDigit == 4 * Math.pow(10, i))\
    \ {\n\t\t\t\troman = romans[Math.pow(10, i)] + romans[5 * Math.pow(10, i)] + roman;\n\
    \t\t\t} else if (currentDigit < 9 * Math.pow(10, i)) {\n\t\t\t\troman = romans[5\
    \ * Math.pow(10, i)] + roman;\n\t\t\t\tfor (var j = 0; j < (currentDigit - 5 *\
    \ Math.pow(10, i))/Math.pow(10, i); j++) {\n\t\t\t\t\troman = romans[Math.pow(10,\
    \ i)] + roman;\n\t\t\t\t}\n\t\t\t} else if (currentDigit == 9 * Math.pow(10, i))\
    \ {\n\t\t\t\troman = romans[Math.pow(10, i)] + romans[10 * Math.pow(10, i)]",
  "    var res = \"\";\n    var roman = {M:1000, CM:900, D:500, CD:400, C:100, XC:90,\
    \ L:50, XL:40, X:10, IX:9, V:5, IV:4, I:1};\n    var a;\n    if(number < 1 ||\
    \ number > 1000){\n        return \"Invalid input.\";\n    }\n    else {\n   \
    \     for (a in roman) {\n            while (number >= roman[a]) {\n         \
    \       res += a;\n                number -= roman[a];\n            }\n      \
    \  }\n        return res;\n    }\n}", "\nvar thousands = { 1: 'm', 2: 'mm', 3:\
    \ 'mmm' };\nvar hundreds = { 1: 'c', 2: 'cc', 3: 'ccc', 4: 'cd', 5: 'd', 6: 'dc',\
    \ 7: 'dcc', 8: 'dccc', 9: 'cm' };\nvar tens = { 1: 'x', 2: 'xx', 3: 'xxx', 4:\
    \ 'xl', 5: 'l', 6: 'lx', 7: 'lxx', 8: 'lxxx', 9: 'xc' };\nvar ones = { 1: 'i',\
    \ 2: 'ii', 3: 'iii', 4: 'iv', 5: 'v', 6: 'vi', 7: 'vii', 8: 'viii', 9: 'ix' };\n\
    var numberArray = number.toString().split('');\nvar result = [];\n\nif (numberArray.length\
    \ === 4) {\n  result.push(thousands[numberArray[0]]);\n  result.push(hundreds[numberArray[1]]);\n\
    \  result.push(tens[numberArray[2]]);\n  result.push(ones[numberArray[3]]);\n\
    } else if (numberArray.length === 3) {\n  result.push(hundreds[numberArray[0]]);\n\
    \  result.push(tens[numberArray[1]]);\n  result.push(ones[numberArray[2]]);\n\
    } else if (numberArray.length === 2) {\n  result.push(tens[numberArray[0]]);\n\
    \  result.push(ones[numberArray[1]]);\n} else if (numberArray.length === 1) {\n\
    \  result.push(ones[numberArray[0]]);\n}\nreturn result.join('');\n}\n", "\n}\n",
  "\tif (number <= 0) {\n\t\treturn undefined;\n\t}\n\tif (number > 1000) {\n\t\t\
    return undefined;\n\t}\n\tif (typeof number !== 'number') {\n\t\treturn undefined;\n\
    \t}\n\tvar roman = [];\n\twhile (number >= 900){\n\t\tnumber -= 900;\n\t\troman.push('cm');\n\
    \t}\n\twhile (number >= 500){\n\t\tnumber -= 500;\n\t\troman.push('d');\n\t}\n\
    \twhile (number >= 400){\n\t\tnumber -= 400;\n\t\troman.push('cd');\n\t}\n\twhile\
    \ (number >= 100){\n\t\tnumber -= 100;\n\t\troman.push('c');\n\t}\n\twhile (number\
    \ >= 90){\n\t\tnumber -= 90;\n\t\troman.push('xc');\n\t}\n\twhile (number >= 50){\n\
    \t\tnumber -= 50;\n\t\troman.push('l');\n\t}\n\twhile (number >= 40){\n\t\tnumber\
    \ -= 40;\n\t\troman.push('xl');\n\t}\n\twhile (number >= 10){\n\t\tnumber -= 10;\n\
    \t\troman.push('x');\n\t}\n\twhile (number >= 9){\n\t\tnumber -= 9;\n\t\troman.push('ix');\n\
    \t}\n\twhile (number >= 5){\n\t\tnumber -= 5;\n\t\troman.push('v');\n\t}\n\twhile\
    \ (number >= 4){\n\t\tnumber -= 4;\n\t\troman.push('iv');\n\t}\n\twhile (number\
    \ >= 1){\n\t\tnumber -= 1;\n\t\troman.push('i');\n\t}\n\treturn roman.join('');\n\
    }\n", "  return int_to_roman(number).toLowerCase();\n}\n", //     1 ==> "i", " \
    \ var roman = '';\n  while (number > 0) {\n    if (number >= 1 && number < 4)\
    \ {\n      roman += 'i';\n      number -= 1;\n    } else if (number >= 4 && number\
    \ < 5) {\n      roman += 'iv';\n      number -= 4;\n    } else if (number >= 5\
    \ && number < 9) {\n      roman += 'v';\n      number -= 5;\n    } else if (number\
    \ >= 9 && number < 10) {\n      roman += 'ix';\n      number -= 9;\n    } else\
    \ if (number >= 10 && number < 40) {\n      roman += 'x';\n      number -= 10;\n\
    \    } else if (number >= 40 && number < 50) {\n      roman += 'xl';\n      number\
    \ -= 40;\n    } else if (number >= 50 && number < 90) {\n      roman += 'l';\n\
    \      number -= 50;\n    } else if (number >= 90 && number < 100) {\n      roman\
    \ += 'xc';\n      number -= 90;\n    } else if (number >= 100 && number < 400)\
    \ {\n      roman += 'c';\n      number -= 100;\n    } else if (number >= 400 &&\
    \ number < 500) {\n      roman += 'cd';\n      number -= 400;\n    } else if (number\
    \ >= 500 && number < 900) {\n      roman += 'd';\n      number -= 500;\n    }\
    \ else if (number >= 900 && number < 1000) {\n      roman += 'cm';\n      number\
    \ -= 900;\n    } else if (number === 1000) {\n      roman += 'm';\n      number\
    \ -= 1000;\n    }\n  }\n  return roman;\n}", "  var roman_to_int = {'i':1, 'v':5,\
    \ 'x':10, 'l':50, 'c':100, 'd':500, 'm':1000};\n  var int_to_roman = {1:'i', 5:'v',\
    \ 10:'x', 50:'l', 100:'c', 500:'d', 1000:'m'};\n  var num = number;\n  var result\
    \ = '';\n  var lowest_roman = 'i';\n  var lowest_int = 1;\n  while (num != 0){\n\
    \    lowest_int = Object.keys(int_to_roman).find(x => x >= num);\n    lowest_roman\
    \ = int_to_roman[lowest_int];\n    result += lowest_roman;\n    num -= lowest_int;\n\
    \  }\n  return result;\n}\n", "  // TODO: Implement me!\n  return \"\";\n}\n",
  "    var remainder = number;\n    var mini_romans = [];\n    var numerals = {M:1000,\
    \ CM:900, D:500, CD:400, C:100, XC:90, L:50, XL:40, X:10, IX:9, V:5, IV:4, I:1};\n\
    \    for (var numeral in numerals) {\n        var quotient = Math.floor(remainder\
    \ / numerals[numeral]);\n        remainder = remainder % numerals[numeral];\n\
    \        mini_romans.push(numeral.repeat(quotient));\n    }\n    return mini_romans.join('').toLowerCase();\n\
    }", "  var numToRoman = {\n    1: 'i',\n    4: 'iv',\n    5: 'v',\n    9: 'ix',\n\
    \    10: 'x',\n    40: 'xl',\n    50: 'l',\n    90: 'xc',\n    100: 'c',\n   \
    \ 400: 'cd',\n    500: 'd',\n    900: 'cm',\n    1000: 'm'\n  };\n  var numToRomanKeys\
    \ = Object.keys(numToRoman).reverse();\n  var numToRomanValues = Object.values(numToRoman).reverse();\n\
    \  var result = '';\n  var num = number;\n  while (num > 0) {\n    for (var i\
    \ = 0; i < numToRomanKeys.length; i++) {\n      if (num >= numToRomanKeys[i])\
    \ {\n        result += numToRomanValues[i];\n        num -= numToRomanKeys[i];\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}\n", "  var result =\
    \ '';\n  var digits = number.toString().split('');\n  console.log(digits);\n \
    \ var single_digits = {\n    '1': 'i',\n    '2': 'ii',\n    '3': 'iii',\n    '4':\
    \ 'iv',\n    '5': 'v',\n    '6': 'vi',\n    '7': 'vii',\n    '8': 'viii',\n  \
    \  '9': 'ix'\n  };\n  var ten_digits = {\n    '1': 'x',\n    '2': 'xx',\n    '3':\
    \ 'xxx',\n    '4': 'xl',\n    '5': 'l',\n    '6': 'lx',\n    '7': 'lxx',\n   \
    \ '8': 'lxxx',\n    '9': 'xc'\n  };\n  var hundred_digits = {\n    '1': 'c',\n\
    \    '2': 'cc',\n    '3': 'ccc',\n    '4': 'cd',\n    '5': 'd',\n    '6': 'dc',\n\
    \    '7': 'dcc',\n    '8': 'dccc',\n    '9': 'cm'\n  };\n  if (digits.length ===\
    \ 1) {\n    result = single_digits[digits[0]];\n  } else if (digits.length ===\
    \ 2) {\n    result = ten_digits[digits[0]] + single_digits[digits[1]];\n  } else\
    \ if (digits.length === 3) {\n    result = hundred_digits[digits[0]] + ten_digits[digits[1]]\
    \ + single_digits[digits[2]];\n  } else if (digits.length === 4) {\n    result\
    \ = 'm' + hundred_digits[digits[1]] + ten_digits[digits[2]] + single_digits[digits[3]];\n\
    \  }\n  return result;\n}\n", "    var result = '';\n    var values = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    var numerals = ['m', 'cm',\
    \ 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    for (var i\
    \ = 0; i < values.length; i++) {\n        while (number >= values[i]) {\n    \
    \        result += numerals[i];\n            number -= values[i];\n        }\n\
    \    }\n    return result;\n}\n\n\n", "  if (number <= 0 || number > 1000) return\
    \ undefined;\n  var result = \"\";\n  var roman_numerals = [\"m\", \"cm\", \"\
    d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"\
    ];\n  var integers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\
    \  for (var i = 0; i < integers.length; i++) {\n    while (number >= integers[i])\
    \ {\n      result += roman_numerals[i];\n      number -= integers[i];\n    }\n\
    \  }\n  return result;\n}", "  var solutions = [];\n  var int_array = [100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1];\n  var roman_array = [\"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  for (var i = 0; i < int_array.length;\
    \ i++) {\n    while (number >= int_array[i]) {\n      solutions.push(roman_array[i]);\n\
    \      number -= int_array[i];\n    }\n  }\n  return solutions.join(\"\");\n}\n",
  "  var mini = {\n    \"M\": 1000,\n    \"D\": 500,\n    \"C\": 100,\n    \"L\":\
    \ 50,\n    \"X\": 10,\n    \"V\": 5,\n    \"I\": 1\n  };\n  // set our return\
    \ variable\n  var roman = \"\";\n  // declare our helper function that will take\
    \ a number and\n  // return the roman numeral representation of that number, up\
    \ to 1,000\n  function get_roman(number){\n    // this will be the same for any\
    \ number\n    if(number === 1000){\n      return \"M\";\n    }\n    // declare\
    \ a variable to hold the number of hundreds, tens, and ones,\n    // as well as\
    \ the leftover to be turned into roman numerals\n    var hundreds, tens, ones,\
    \ leftovers;\n    // check if the number is at least 100\n    if(number >= 100){\n\
    \      // if it is, set hundreds equal to the number of hundreds\n      hundreds\
    \ = Math.floor(number / 100);\n      // then set the leftover\n      leftovers\
    \ = number % 100;\n    } else {\n      // otherwise we have no hundreds\n    \
    \  hundreds = 0;\n      // set the leftover as the original number\n      leftovers\
    \ = number;\n    }\n    // check if the leftover is at least 10\n    if(leftovers\
    \ >= 10){\n      // if it is, set tens equal to the number of tens\n      tens\
    \ = Math.floor(leftovers / 10);\n      // then set the leftover\n      leftovers\
    \ = leftovers % 10;\n    } else {\n      // otherwise we have no tens\n      tens\
    \ = 0;\n    }\n    // set the number of ones\n    ones = leftovers;\n    // return\
    \ the roman numeral string\n    return mini[\"M\"].repeat(hundreds) + mini[\"\
    C\"].repeat(tens) + mini[\"I\"].repeat(ones);\n  }\n  // if the number is less\
    \ than or equal to 3, we can just return\n  // the roman numeral directly\n  if(number\
    \ <= 3){\n    return mini[\"I\"].repeat(number);\n  }\n  // declare a variable\
    \ to hold the number of thousands\n  var thousands;\n  // check if the number\
    \ is", "  var roman_numerals = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1};\n\
    \  var result = \"\";\n  for (var key in roman_numerals){\n    while (number >=\
    \ roman_numerals[key]){\n      result += key;\n      number -= roman_numerals[key];\n\
    \    }\n  }\n  return result;\n}\n", "    const conv = {\n        1 : \"i\",\n\
    \        5 : \"v\",\n        10 : \"x\",\n        50 : \"l\",\n        100 : \"\
    c\",\n        500 : \"d\",\n        1000 : \"m\"\n    }\n    let arr = [...number.toString()];\n\
    \    let result = \"\";\n    let k = arr.length - 1;\n    while(k >= 0){\n   \
    \     if(arr[k] == 1){\n            result = conv[Math.pow(10,k)] + result;\n\
    \        }else if(arr[k] == 2){\n            result = conv[Math.pow(10,k)] + conv[Math.pow(10,k)]\
    \ + result;\n        }else if(arr[k] == 3){\n            result = conv[Math.pow(10,k)]\
    \ + conv[Math.pow(10,k)] + conv[Math.pow(10,k)] + result;\n        }else if(arr[k]\
    \ == 4){\n            result = conv[Math.pow(10,k)] + conv[Math.pow(10,k) * 5]\
    \ + result;\n        }else if(arr[k] == 5){\n            result = conv[Math.pow(10,k)\
    \ * 5] + result;\n        }else if(arr[k] == 6){\n            result = conv[Math.pow(10,k)\
    \ * 5] + conv[Math.pow(10,k)] + result;\n        }else if(arr[k] == 7){\n    \
    \        result = conv[Math.pow(10,k) * 5] + conv[Math.pow(10,k)] + conv[Math.pow(10,k)]\
    \ + result;\n        }else if(arr[k] == 8){\n            result = conv[Math.pow(10,k)\
    \ * 5] + conv[Math.pow(10,k)] + conv[Math.pow(10,k)] + conv[Math.pow(10,k)] +\
    \ result;\n        }else if(arr[k] == 9){\n            result = conv[Math.pow(10,k)]\
    \ + conv[Math.p", "  if (typeof number !== 'number') return false;\n  if (number\
    \ < 1 || number > 1000) return false;\n  var digits = {M: 1000, CM: 900, D: 500,\
    \ CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1};\n\
    \  var roman_digits = {};\n  var roman_string = '';\n  for (var key in digits)\
    \ {\n    if (number >= digits[key]) {\n      roman_digits[key] = Math.floor(number\
    \ / digits[key]);\n      number -= digits[key] * roman_digits[key];\n    }\n \
    \ }\n  for (var key in roman_digits) {\n    for (var i = 0; i < roman_digits[key];\
    \ i++) {\n      roman_string += key;\n    }\n  }\n  return roman_string;\n}",
  "    if(number === 1){\n        return \"i\";\n    }\n    if(number === 2){\n  \
    \      return \"ii\";\n    }\n    if(number === 3){\n        return \"iii\";\n\
    \    }\n    if(number === 4){\n        return \"iv\";\n    }\n    if(number ===\
    \ 5){\n        return \"v\";\n    }\n    if(number === 6){\n        return \"\
    vi\";\n    }\n    if(number === 7){\n        return \"vii\";\n    }\n    if(number\
    \ === 8){\n        return \"viii\";\n    }\n    if(number === 9){\n        return\
    \ \"ix\";\n    }\n    if(number === 10){\n        return \"x\";\n    }\n    if(number\
    \ === 11){\n        return \"xi\";\n    }\n    if(number === 12){\n        return\
    \ \"xii\";\n    }\n    if(number === 13){\n        return \"xiii\";\n    }\n \
    \   if(number === 14){\n        return \"xiv\";\n    }\n    if(number === 15){\n\
    \        return \"xv\";\n    }\n    if(number === 16){\n        return \"xvi\"\
    ;\n    }\n    if(number === 17){\n        return \"xvii\";\n    }\n    if(number\
    \ === 18){\n        return \"xviii\";\n    }\n    if(number === 19){\n       \
    \ return \"xix\";\n    }\n    if(number === 20){\n        return \"xx\";\n   \
    \ }\n    if(number === 21){\n        return \"xxi\";\n    }\n    if(number ===\
    \ 22){\n        return \"xxii\";\n    }\n    if(number === 23){\n        return\
    \ \"xxiii\";\n    }\n    if(number === 24){\n        return \"xxiv\";\n    }\n\
    \    if(number === 25){\n        return \"xxv\";\n    }\n    if(number === 26){\n\
    \        return \"xxvi\";\n    }\n    if(number === 27){\n        return \"xxvii\"\
    ;\n    }\n    if(number === 28){\n        return \"xxviii\";\n    }\n    if(number\
    \ === 29){\n        return \"xxix", "    if (number > 1000 || number < 1) return\
    \ \"Number out of range\";\n    const numbers = [1, 4, 5, 9, 10, 40, 50, 90, 100,\
    \ 400, 500, 900, 1000];\n    const romanNumerals = ['I', 'IV', 'V', 'IX', 'X',\
    \ 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM', 'M'];\n    var result = \"\";\n    for\
    \ (let i = numbers.length - 1; i >= 0; i--) {\n        const currentNum = numbers[i];\n\
    \        while (number >= currentNum) {\n            result += romanNumerals[i];\n\
    \            number -= currentNum;\n        }\n    }\n    return result;\n}",
  "    let roman = '';\n    while(number > 0){\n        if(number >= 1000){\n    \
    \        roman += 'm';\n            number -= 1000;\n        }\n        else if(number\
    \ >= 900){\n            roman += 'cm';\n            number -= 900;\n        }\n\
    \        else if(number >= 500){\n            roman += 'd';\n            number\
    \ -= 500;\n        }\n        else if(number >= 400){\n            roman += 'cd';\n\
    \            number -= 400;\n        }\n        else if(number >= 100){\n    \
    \        roman += 'c';\n            number -= 100;\n        }\n        else if(number\
    \ >= 90){\n            roman += 'xc';\n            number -= 90;\n        }\n\
    \        else if(number >= 50){\n            roman += 'l';\n            number\
    \ -= 50;\n        }\n        else if(number >= 40){\n            roman += 'xl';\n\
    \            number -= 40;\n        }\n        else if(number >= 10){\n      \
    \      roman += 'x';\n            number -= 10;\n        }\n        else if(number\
    \ >= 9){\n            roman += 'ix';\n            number -= 9;\n        }\n  \
    \      else if(number >= 5){\n            roman += 'v';\n            number -=\
    \ 5;\n        }\n        else if(number >= 4){\n            roman += 'iv';\n \
    \           number -= 4;\n        }\n        else if(number >= 1){\n         \
    \   roman += 'i';\n            number -= 1;\n        }\n    }\n    return roman;\n\
    }", "    var numerals = {'M':1000, 'CM':900, 'D':500, 'CD':400, 'C':100, 'XC':90,\
    \ 'L':50, 'XL':40, 'X':10, 'IX':9, 'V':5, 'IV':4, 'I':1},\n        roman = '',\n\
    \        i;\n    for ( i in numerals ) {\n        while ( number >= numerals[i]\
    \ ) {\n            roman += i;\n            number -= numerals[i];\n        }\n\
    \    }\n    return roman;\n}", "  var output = \"\";\n  var base_numbers = [1,4,5,9,10,40,50,90,100,400,500,900,1000];\n\
    \  var mapping = {1:\"i\",4:\"iv\",5:\"v\",9:\"ix\",10:\"x\",40:\"xl\",50:\"l\"\
    ,90:\"xc\",100:\"c\",400:\"cd\",500:\"d\",900:\"cm\",1000:\"m\"};\n  while(number\
    \ > 0){\n    var base_number = base_numbers.pop();\n    while(number >= base_number){\n\
    \      output += mapping[base_number];\n      number -= base_number;\n    }\n\
    \  }\n  return output;\n}\n", "  var str=\"\";\n  if(number>=1000){\n    str=\"\
    m\"+int_to_mini_roman(number-1000);\n  }\n  else if(number>=500){\n    str=\"\
    d\"+int_to_mini_roman(number-500);\n  }\n  else if(number>=100){\n    str=\"c\"\
    +int_to_mini_roman(number-100);\n  }\n  else if(number>=50){\n    str=\"l\"+int_to_mini_roman(number-50);\n\
    \  }\n  else if(number>=10){\n    str=\"x\"+int_to_mini_roman(number-10);\n  }\n\
    \  else if(number>=5){\n    str=\"v\"+int_to_mini_roman(number-5);\n  }\n  else\
    \ if(number>=1){\n    str=\"i\"+int_to_mini_roman(number-1);\n  }\n  return str;\n\
    }\n", "  \n}", "  var result = \"\";\n  var numberString = number.toString();\n\
    \  var numberArray = numberString.split(\"\");\n  var numbers = {\n    \"1\":\
    \ \"i\",\n    \"5\": \"v\",\n    \"10\": \"x\",\n    \"50\": \"l\",\n    \"100\"\
    : \"c\",\n    \"500\": \"d\",\n    \"1000\": \"m\"\n  };\n  if (number === 1)\
    \ {\n    return \"i\";\n  }\n  if (number === 5) {\n    return \"v\";\n  }\n \
    \ if (number === 10) {\n    return \"x\";\n  }\n  if (number === 50) {\n    return\
    \ \"l\";\n  }\n  if (number === 100) {\n    return \"c\";\n  }\n  if (number ===\
    \ 500) {\n    return \"d\";\n  }\n  if (number === 1000) {\n    return \"m\";\n\
    \  }\n  for (var i = 0; i < numberArray.length; i++) {\n    result += numbers[numberArray[i]];\n\
    \  }\n  return result;\n}", "    if(number > 1000 || number < 1){\n        return;\n\
    \    }\n    var roman_num = {\n        '1': 'i',\n        '5': 'v',\n        '10':\
    \ 'x',\n        '50': 'l',\n        '100': 'c',\n        '500': 'd',\n       \
    \ '1000': 'm'\n    };\n    var result = '';\n    var i = 0;\n    while(number\
    \ > 0){\n        var pow = Math.pow(10, i);\n        var pow_minus_one = Math.pow(10,\
    \ i - 1);\n        var pow_plus_one = Math.pow(10, i + 1);\n        var digit\
    \ = Math.floor(number / pow) % 10;\n        if(digit === 4){\n            result\
    \ += roman_num[pow] + roman_num[pow_plus_one];\n        }\n        else if(digit\
    \ === 9){\n            result += roman_num[pow] + roman_num[pow_plus_one * 2];\n\
    \        }\n        else if(digit === 5){\n            result += roman_num[pow_plus_one];\n\
    \        }\n        else if(digit > 5){\n            result += roman_num[pow_plus_one]\
    \ + roman_num[pow].repeat(digit - 5);\n        }\n        else if(digit < 5){\n\
    \            result += roman_num[pow].repeat(digit);\n        }\n        number\
    \ = number % pow;\n        i++;\n    }\n    return result;\n}", "  var output\
    \ = '';\n  var romanNumerals = {\n    1: 'i',\n    4: 'iv',\n    5: 'v',\n   \
    \ 9: 'ix',\n    10: 'x',\n    40: 'xl',\n    50: 'l',\n    90: 'xc',\n    100:\
    \ 'c',\n    400: 'cd',\n    500: 'd',\n    900: 'cm',\n    1000: 'm'\n  };\n \
    \ var romanNumeralsValues = Object.keys(romanNumerals).reverse();\n  while (number)\
    \ {\n    // get the current roman numeral value\n    var romanNumeralValue = romanNumeralsValues.find(value\
    \ => value <= number);\n    // add the proper Roman numeral to the output string\n\
    \    output += romanNumerals[romanNumeralValue];\n    // subtract the roman numeral\
    \ value from the input number\n    number -= romanNumeralValue;\n  }\n  return\
    \ output;\n}\n", "  var numeral = \"\";\n  if (number > 999) {\n    numeral +=\
    \ \"m\";\n    number -= 1000;\n  }\n  if (number > 899) {\n    numeral += \"cm\"\
    ;\n    number -= 900;\n  }\n  if (number > 499) {\n    numeral += \"d\";\n   \
    \ number -= 500;\n  }\n  if (number > 399) {\n    numeral += \"cd\";\n    number\
    \ -= 400;\n  }\n  while (number > 99) {\n    numeral += \"c\";\n    number -=\
    \ 100;\n  }\n  if (number > 89) {\n    numeral += \"xc\";\n    number -= 90;\n\
    \  }\n  if (number > 49) {\n    numeral += \"l\";\n    number -= 50;\n  }\n  if\
    \ (number > 39) {\n    numeral += \"xl\";\n    number -= 40;\n  }\n  while (number\
    \ > 9) {\n    numeral += \"x\";\n    number -= 10;\n  }\n  if (number > 8) {\n\
    \    numeral += \"ix\";\n    number -= 9;\n  }\n  if (number > 4) {\n    numeral\
    \ += \"v\";\n    number -= 5;\n  }\n  if (number > 3) {\n    numeral += \"iv\"\
    ;\n    number -= 4;\n  }\n  while (number > 0) {\n    numeral += \"i\";\n    number\
    \ -= 1;\n  }\n  return numeral;\n}", "    if(number === 1){return \"i\"}\n   \
    \ if(number === 2){return \"ii\"}\n    if(number === 3){return \"iii\"}\n    if(number\
    \ === 4){return \"iv\"}\n    if(number === 5){return \"v\"}\n    if(number ===\
    \ 6){return \"vi\"}\n    if(number === 7){return \"vii\"}\n    if(number === 8){return\
    \ \"viii\"}\n    if(number === 9){return \"ix\"}\n    if(number === 10){return\
    \ \"x\"}\n    if(number === 11){return \"xi\"}\n    if(number === 12){return \"\
    xii\"}\n    if(number === 13){return \"xiii\"}\n    if(number === 14){return \"\
    xiv\"}\n    if(number === 15){return \"xv\"}\n    if(number === 16){return \"\
    xvi\"}\n    if(number === 17){return \"xvii\"}\n    if(number === 18){return \"\
    xviii\"}\n    if(number === 19){return \"xix\"}\n    if(number === 20){return\
    \ \"xx\"}\n    if(number === 21){return \"xxi\"}\n    if(number === 22){return\
    \ \"xxii\"}\n    if(number === 23){return \"xxiii\"}\n    if(number === 24){return\
    \ \"xxiv\"}\n    if(number === 25){return \"xxv\"}\n    if(number === 26){return\
    \ \"xxvi\"}\n    if(number === 27){return \"xxvii\"}\n    if(number === 28){return\
    \ \"xxviii\"}\n    if(number === 29){return \"xxix\"}\n    if(number === 30){return\
    \ \"xxx\"}\n    if(number === 31){return \"xxxi\"}\n    if(number === 32){return\
    \ \"xxxii\"}\n    if(number === 33){return \"xxxiii\"}\n    if(number === 34){return\
    \ \"xxxiv\"}\n    if(number === 35){return \"xxxv\"}\n    if(number === 36){return\
    \ \"xxxvi\"}\n    if(number === 37){return \"xxxvii\"}\n    if(number === 38){return\
    \ \"xxxviii\"}\n    if(number === 39){return \"xxxix\"}\n    if(number === 40){return\
    \ \"", "    let thousand = Math.floor(number / 1000);\n    let ninehundred = Math.floor((number\
    \ - thousand * 1000) / 900);\n    let fivehundred = Math.floor((number - thousand\
    \ * 1000 - ninehundred * 900) / 500);\n    let fourhundred = Math.floor((number\
    \ - thousand * 1000 - ninehundred * 900 - fivehundred * 500) / 400);\n    let\
    \ hundred = Math.floor((number - thousand * 1000 - ninehundred * 900 - fivehundred\
    \ * 500 - fourhundred * 400) / 100);\n    let ninety = Math.floor((number - thousand\
    \ * 1000 - ninehundred * 900 - fivehundred * 500 - fourhundred * 400 - hundred\
    \ * 100) / 90);\n    let fifty = Math.floor((number - thousand * 1000 - ninehundred\
    \ * 900 - fivehundred * 500 - fourhundred * 400 - hundred * 100 - ninety * 90)\
    \ / 50);\n    let forty = Math.floor((number - thousand * 1000 - ninehundred *\
    \ 900 - fivehundred * 500 - fourhundred * 400 - hundred * 100 - ninety * 90 -\
    \ fifty * 50) / 40);\n    let ten = Math.floor((number - thousand * 1000 - ninehundred\
    \ * 900 - fivehundred * 500 - fourhundred * 400 - hundred * 100 - ninety * 90\
    \ - fifty * 50 - forty * 40) / 10);\n    let nine = Math.floor((number - thousand\
    \ * 1000 - ninehundred * 900 - fivehundred * 500 - fourhundred * 400 - hundred\
    \ * 100 - ninety * 90 - fifty * 50 - forty * 40 - ten * 10) / 9);\n    let five\
    \ = Math.floor((number - thousand * 1000 - ninehundred * 900 - fivehundred * 500\
    \ - fourhundred * 400 - hundred * 100 - ninety * 90 - fifty * 50 - forty * 40\
    \ - ten * 10 - nine * 9) / 5);\n    let four = Math.floor((number - thousand *\
    \ 1000 - ninehundred * 900 - fivehundred * 500 - fourhundred * 400 - hundred *\
    \ 100 - ninety * 90 - fifty * 50 - forty * 40 - ten * 10 - nine * 9 - five * 5)\
    \ / 4);\n    let one = Math.floor((number - thousand * 1000 - ninehundred * 900\
    \ -", "    var roman = \"\";\n    //Break number down into thousands, hundreds,\
    \ tens, and ones places\n    var thousands = Math.floor(number/1000);\n    var\
    \ hundreds = Math.floor((number%1000)/100);\n    var tens = Math.floor(((number%1000)%100)/10);\n\
    \    var ones = Math.floor(((number%1000)%100)%10);\n    //Build roman numeral\n\
    \    if(thousands > 0){\n        for(var i = 0; i < thousands; i++){\n       \
    \     roman = roman + \"m\";\n        }\n    }\n    if(hundreds > 0){\n      \
    \  if(hundreds < 4){\n            for(var i = 0; i < hundreds; i++){\n       \
    \         roman = roman + \"c\";\n            }\n        }\n        else if(hundreds\
    \ == 4){\n            roman = roman + \"cd\";\n        }\n        else if(hundreds\
    \ > 4 && hundreds < 9){\n            roman = roman + \"d\";\n            for(var\
    \ i = 0; i < hundreds - 5; i++){\n                roman = roman + \"c\";\n   \
    \         }\n        }\n        else if(hundreds == 9){\n            roman = roman\
    \ + \"cm\";\n        }\n    }\n    if(tens > 0){\n        if(tens < 4){\n    \
    \        for(var i = 0; i < tens; i++){\n                roman = roman + \"x\"\
    ;\n            }\n        }\n        else if(tens == 4){\n            roman =\
    \ roman + \"xl\";\n        }\n        else if(tens > 4 && tens < 9){\n       \
    \     roman = roman + \"l\";\n            for(var i = 0; i < tens - 5; i++){\n\
    \                roman = roman + \"x\";\n            }\n        }\n        else\
    \ if(tens == 9){\n            roman = roman + \"xc\";\n        }\n    }\n    if(ones\
    \ > 0){\n        if(ones < 4){\n            for(var i = 0; i < ones; i++){\n \
    \               roman = roman + \"i\";\n            }", "  var num_string = number.toString();\n\
    \  var num_arr = num_string.split(\"\");\n  var place = num_arr.length;\n  var\
    \ roman_numeral = \"\";\n  var numbers = {\n  1: \"i\",\n  2: \"ii\",\n  3: \"\
    iii\",\n  4: \"iv\",\n  5: \"v\",\n  6: \"vi\",\n  7: \"vii\",\n  8: \"viii\"\
    ,\n  9: \"ix\",\n  10: \"x\",\n  11: \"xi\",\n  12: \"xii\",\n  13: \"xiii\",\n\
    \  14: \"xiv\",\n  15: \"xv\",\n  16: \"xvi\",\n  17: \"xvii\",\n  18: \"xviii\"\
    ,\n  19: \"xix\",\n  20: \"xx\",\n  30: \"xxx\",\n  40: \"xl\",\n  50: \"l\",\n\
    \  60: \"lx\",\n  70: \"lxx\",\n  80: \"lxxx\",\n  90: \"xc\",\n  100: \"c\",\n\
    \  200: \"cc\",\n  300: \"ccc\",\n  400: \"cd\",\n  500: \"d\",\n  600: \"dc\"\
    ,\n  700: \"dcc\",\n  800: \"dccc\",\n  900: \"cm\",\n  1000: \"m\"\n  };\n  for\
    \ (var i = 0; i < num_arr.length; i++) {\n    if (place === 1) {\n      roman_numeral\
    \ += numbers[num_arr[i]];\n    } else if (place === 2) {\n      roman_numeral\
    \ += numbers[num_arr[i] + \"0\"];\n    } else if (place === 3) {\n      roman_numeral\
    \ += numbers[num_arr[i] + \"00\"];\n    } else if (place === 4) {\n      roman_numeral\
    \ += numbers[num_arr[i] + \"000\"];\n    }\n    place -= 1;\n  }\n  return roman_numeral;\n\
    }\n", "  var roman = [\"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\",\
    \ \"viii\", \"ix\"];\n  var roman_thou = [\"m\", \"mm\", \"mmm\"];\n  var roman_hund\
    \ = [\"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\"\
    ];\n  var roman_ten = [\"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\"\
    , \"lxxx\", \"xc\"];\n  var roman_one = [\"i\", \"ii\", \"iii\", \"iv\", \"v\"\
    , \"vi\", \"vii\", \"viii\", \"ix\"];\n  var num_string = number.toString();\n\
    \  var count = num_string.length;\n  var result = \"\";\n  var thous = 0;\n  var\
    \ hunds = 0;\n  var tens = 0;\n  var ones = 0;\n  //var numerals = [thous, hunds,\
    \ tens, ones];\n  if (count == 4){\n    thous = num_string[0];\n    hunds = num_string[1];\n\
    \    tens = num_string[2];\n    ones = num_string[3];\n    result = roman_thou[thous-1]\
    \ + roman_hund[hunds-1] + roman_ten[tens-1] + roman_one[ones-1];\n  }\n  else\
    \ if (count == 3){\n    hunds = num_string[0];\n    tens = num_string[1];\n  \
    \  ones = num_string[2];\n    result = roman_hund[hunds-1] + roman_ten[tens-1]\
    \ + roman_one[ones-1];\n  }\n  else if (count == 2){\n    tens = num_string[0];\n\
    \    ones = num_string[1];\n    result = roman_ten[tens-1] + roman_one[ones-1];\n\
    \  }\n  else if (count == 1){\n    ones = num_string[0];\n", "    var roman =\
    \ \"\"\n    var numerals = {\n        \"m\" : 1000,\n        \"cm\" : 900,\n \
    \       \"d\" : 500,\n        \"cd\" : 400,\n        \"c\" : 100,\n        \"\
    xc\" : 90,\n        \"l\" : 50,\n        \"xl\" : 40,\n        \"x\" : 10,\n \
    \       \"ix\" : 9,\n        \"v\" : 5,\n        \"iv\" : 4,\n        \"i\" :\
    \ 1\n    }\n    for (var key in numerals){\n        while (number >= numerals[key]){\n\
    \            roman += key\n            number -= numerals[key]\n        }\n  \
    \  }\n    return roman\n}\n", "    var hundreds = ['','C','CC','CCC','CD','D','DC','DCC','DCCC','CM'];\n\
    \    var tens = ['','X','XX','XXX','XL','L','LX','LXX','LXXX','XC'];\n    var\
    \ ones = ['','I','II','III','IV','V','VI','VII','VIII','IX'];\n    return hundreds[Math.floor(number/100)]\
    \ + tens[Math.floor((number%100)/10)] + ones[Math.floor(number%10)];\n}\n", " \
    \ if(typeof number !== 'number'){\n    return false;\n  }\n  if(number <= 0 ||\
    \ number > 1000){\n    return false;\n  }\n  var result = '';\n  if(number < 4){\n\
    \    for(var i = 0; i < number; i++){\n      result += 'i';\n    }\n  }\n  if(number\
    \ >= 4 && number < 5){\n    result += 'iv';\n  }\n  if(number === 5){\n    result\
    \ += 'v';\n  }\n  if(number > 5 && number < 9){\n    result += 'v';\n    for(var\
    \ i = 5; i < number; i++){\n      result += 'i';\n    }\n  }\n  if(number ===\
    \ 9){\n    result += 'ix';\n  }\n  if(number >= 10 && number < 40){\n    for(var\
    \ i = 0; i < Math.floor(number / 10); i++){\n      result += 'x';\n    }\n   \
    \ if(number % 10 !== 0){\n      result += int_to_mini_roman(number % 10);\n  \
    \  }\n  }\n  if(number >= 40 && number < 50){\n    result += 'xl';\n    if(number\
    \ % 10 !== 0){\n      result += int_to_mini_roman(number % 10);\n    }\n  }\n\
    \  if(number >= 50 && number < 90){\n    result += 'l';\n    for(var i = 50; i\
    \ < number; i++){\n      result += 'x';\n    }\n  }\n  if(number >= 90 && number\
    \ < 100){\n    result += 'xc';\n    if(number % 10 !== 0){\n      result += int_to_mini_roman(number\
    \ % 10);\n    }\n  }\n  if(number >= 100 && number < 400){\n    for(var i = 0;\
    \ i < Math.floor(number / 100); i++){\n      result += 'c';\n    }\n    if(number\
    \ % 100 !== 0){\n      result += int_to_mini_roman(number % 100);\n    }\n  }\n\
    \  if(number >= 400 && number < 500){\n   ", "    let roman = {\n        \"0\"\
    : '',\n        \"1\": 'i',\n        \"2\": 'ii',\n        \"3\": 'iii',\n    \
    \    \"4\": 'iv',\n        \"5\": 'v',\n        \"6\": 'vi',\n        \"7\": 'vii',\n\
    \        \"8\": 'viii',\n        \"9\": 'ix',\n        \"10\": 'x',\n        \"\
    20\": 'xx',\n        \"30\": 'xxx',\n        \"40\": 'xl',\n        \"50\": 'l',\n\
    \        \"60\": 'lx',\n        \"70\": 'lxx',\n        \"80\": 'lxxx',\n    \
    \    \"90\": 'xc',\n        \"100\": 'c',\n        \"200\": 'cc',\n        \"\
    300\": 'ccc',\n        \"400\": 'cd',\n        \"500\": 'd',\n        \"600\"\
    : 'dc',\n        \"700\": 'dcc',\n        \"800\": 'dccc',\n        \"900\": 'cm',\n\
    \        \"1000\": 'm'\n    };\n    let roman_str = number.toString();\n    let\
    \ result = '';\n    for (let i = 0; i < roman_str.length; i++) {\n        if (roman_str[i]\
    \ !== '0') {\n            result += roman[roman_str[i] + '0'.repeat(roman_str.length\
    \ - i - 1)];\n        }\n    }\n    return result;\n}", "  if(number > 1000 ||\
    \ number < 1){return false}\n  var numeral = '';\n  var _numeral = '';\n  for(var\
    \ i = 1; i <= number; i++){\n    _numeral = '';\n    if(i == 1000){\n      _numeral\
    \ = 'm';\n    }\n    else if(i == 900){\n      _numeral = 'cm';\n    }\n    else\
    \ if(i == 500){\n      _numeral = 'd';\n    }\n    else if(i == 400){\n      _numeral\
    \ = 'cd';\n    }\n    else if(i == 100){\n      _numeral = 'c';\n    }\n    else\
    \ if(i == 90){\n      _numeral = 'xc';\n    }\n    else if(i == 50){\n      _numeral\
    \ = 'l';\n    }\n    else if(i == 40){\n      _numeral = 'xl';\n    }\n    else\
    \ if(i == 10){\n      _numeral = 'x';\n    }\n    else if(i == 9){\n      _numeral\
    \ = 'ix';\n    }\n    else if(i == 5){\n      _numeral = 'v';\n    }\n    else\
    \ if(i == 4){\n      _numeral = 'iv';\n    }\n    else if(i == 1){\n      _numeral\
    \ = 'i';\n    }\n    numeral += _numeral;\n  }\n  return numeral;\n}\n", "   \
    \ var look_up = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n     \
    \   CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n\
    \        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n\
    \    };\n    var roman = '';\n    for (var i in look_up ) {\n        while ( number\
    \ >= look_up[i] ) {\n            roman += i;\n            number -= look_up[i];\n\
    \        }\n    }\n    return roman;\n}\n\nint_to_mini_roman(1);       //=> 'i'\n\
    int_to_mini_roman(3);       //=> 'iii'\nint_to_mini_roman(9);       //=> 'ix'\n\
    int_to_mini_roman(20);      //=> 'xx'\nint_to_mini_roman(168);     //=> 'clxviii'\n\
    int_to_mini_roman(175);     //=> 'clxxv'\nint_to_mini_roman(588);     //=> 'dlxxxviii'\n\
    int_to_mini_roman(1000);    //=> 'm'", "    // this function will take a number,\
    \ and convert it to a mini-roman numeral.\n    // All mini-roman numerals have\
    \ a prefix of 'm' to indicate they are minis.\n    // m is used as the base. 10\
    \ is represented as 'mX', 20 as 'mXX', 50 as 'mL', 100 as 'mC'\n    // After that,\
    \ the pattern of 'X', 'XX', 'L', 'C' repeats.\n    // We are only doing 1-10,\
    \ so only one set of prefixes is needed.\n    //\n    var roman = '';\n    var\
    \ roman_numerals = {\n        1 : 'mI',\n        2 : 'mII',\n        3 : 'mIII',\n\
    \        4 : 'mIV',\n        5 : 'mV',\n        6 : 'mVI',\n        7 : 'mVII',\n\
    \        8 : 'mVIII',\n        9 : 'mIX',\n        10 : 'mX'\n    };\n    return\
    \ roman_numerals[number];\n}\n", "    if(!Number.isInteger(number) || number <=\
    \ 0){\n        return \"invalid number\";\n    }else if(number > 1000){\n    \
    \    return \"Too large\";\n    }else{\n        let romans = {\n            1:\
    \ \"i\",\n            5: \"v\",\n            10: \"x\",\n            50: \"l\"\
    ,\n            100: \"c\",\n            500: \"d\",\n            1000: \"m\"\n\
    \        };\n        let roman_numeral = \"\";\n        let ms = Math.floor(number\
    \ / 1000);\n        if(ms){\n            roman_numeral += romans[1000].repeat(ms);\n\
    \            number = number % 1000;\n        }\n        let ds = Math.floor(number\
    \ / 500);\n        if(ds){\n            roman_numeral += romans[500].repeat(ds);\n\
    \            number = number % 500;\n        }\n        let cs = Math.floor(number\
    \ / 100);\n        if(cs){\n            roman_numeral += romans[100].repeat(cs);\n\
    \            number = number % 100;\n        }\n        let ls = Math.floor(number\
    \ / 50);\n        if(ls){\n            roman_numeral += romans[50].repeat(ls);\n\
    \            number = number % 50;\n        }\n        let xs = Math.floor(number\
    \ / 10);\n        if(xs){\n            roman_numeral += romans[10].repeat(xs);\n\
    \            number = number % 10;\n        }\n        let vs = Math.floor(number\
    \ / 5);\n        if(vs){\n            roman_numeral += romans[5].repeat(vs);\n\
    \            number = number % 5;\n        }\n        let is = Math.floor(number\
    \ / 1);\n        if(is){\n            roman_numeral += romans[1].repeat(is);\n\
    \            number = number % 1;\n        }\n        return roman_numeral;\n\
    \    }\n}", "    const numerals = {'M': 1000, 'CM': 900, 'D': 500, 'CD': 400,\
    \ 'C': 100, 'XC': 90, 'L': 50, 'XL': 40, 'X': 10, 'IX': 9, 'V': 5, 'IV': 4, 'I':\
    \ 1 };\n    let result = '';\n    for (const numeral in numerals) {\n        while\
    \ (number >= numerals[numeral]) {\n            result += numeral;\n          \
    \  number -= numerals[numeral];\n        }\n    }\n    return result;\n}", " \
    \ var array = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000];\n  var array2\
    \ = ['I', 'IV', 'V', 'IX', 'X', 'XL', 'L', 'XC', 'C', 'CD', 'D', 'CM', 'M'];\n\
    \  var str = \"\";\n  for(var i = array.length-1; i >= 0; i--){\n    if(number\
    \ >= array[i]){\n      str += array2[i];\n      number -= array[i];\n    }\n \
    \ }\n  return str;\n}\n", "  let romanNumeral = \"\";\n  const romanNumerals =\
    \ {M:1000, CM:900, D:500, CD:400, C:100, XC:90, L:50, XL:40, X:10, IX:9, V:5,\
    \ IV:4, I:1};\n  for (let key in romanNumerals) {\n    while (number >= romanNumerals[key])\
    \ {\n      romanNumeral += key;\n      number -= romanNumerals[key];\n    }\n\
    \  }\n  return romanNumeral;\n}", "\n}", "  var roman = \"\";\n  var syms = [[\"\
    I\", 1], [\"V\", 5], [\"X\", 10], [\"L\", 50], [\"C\", 100], [\"D\", 500], [\"\
    M\", 1000]];\n  var i = syms.length - 1;\n  while (number > 0) {\n    var q =\
    \ Math.floor(number / syms[i][1]);\n    number %= syms[i][1];\n    if (q === 4)\
    \ {\n      roman += syms[i][0] + syms[i + 1][0];\n    } else if (q === 9) {\n\
    \      roman += syms[i][0] + syms[i + 2][0];\n    } else {\n      if (q >= 5)\
    \ {\n        roman += syms[i + 1][0];\n        q -= 5;\n      }\n      roman +=\
    \ syms[i][0].repeat(q);\n    }\n    i -= 2;\n  }\n  return roman;\n}\n", "  let\
    \ output = '';\n  while (number >= 10) {\n    number -= 10;\n    output += 'x';\n\
    \  }\n  while (number >= 9) {\n    number -= 9;\n    output += 'ix';\n  }\n  while\
    \ (number >= 5) {\n    number -= 5;\n    output += 'v';\n  }\n  while (number\
    \ >= 4) {\n    number -= 4;\n    output += 'iv';\n  }\n  while (number >= 1) {\n\
    \    number -= 1;\n    output += 'i';\n  }\n  return output;\n}\n", "    var numerals\
    \ = [\n        { d: 1000, r: 'm' },\n        { d: 500, r: 'd' },\n        { d:\
    \ 100, r: 'c' },\n        { d: 50, r: 'l' },\n        { d: 10, r: 'x' },\n   \
    \     { d: 5, r: 'v' },\n        { d: 1, r: 'i' }\n    ];\n    var roman = '';\n\
    \    numerals.forEach(function(a){\n        while(number >= a.d){\n          \
    \  roman += a.r;\n            number -= a.d;\n        }\n    });\n    return roman;\n\
    }", "\n}", "\tvar roman = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1}\n\
    \tvar result = [];\n\tvar roman2 = Object.keys(roman).forEach(function(key){\n\
    \t\tvar v = roman[key];\n\t\twhile(number >= v){\n\t\t\tnumber -= v;\n\t\t\tresult.push(key);\n\
    \t\t}\n\t})\n\treturn result.join('').toLowerCase();\n}\n", "    var roman=\"\"\
    ;\n    var roman_numerals = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x',\
    \ 'ix', 'v', 'iv', 'i'];\n    var integers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (var i = 0; i < integers.length; i++) {\n    \
    \    while (number >= integers[i]) {\n            roman += roman_numerals[i];\n\
    \            number -= integers[i];\n        }\n    }\n    return roman;\n}\n",
  "    var roman = [];\n    var num = number;\n    while(num > 0){\n        if(num\
    \ >= 1 && num < 4){\n            roman.push('i');\n            num--;\n      \
    \  }\n        else if(num === 4){\n            roman.push('iv');\n           \
    \ num -= 4;\n        }\n        else if(num >= 5 && num < 9){\n            roman.push('v');\n\
    \            num -= 5;\n        }\n        else if(num === 9){\n            roman.push('ix');\n\
    \            num -= 9;\n        }\n        else if(num >= 10 && num < 40){\n \
    \           roman.push('x');\n            num -= 10;\n        }\n        else\
    \ if(num >= 40 && num < 50){\n            roman.push('xl');\n            num -=\
    \ 40;\n        }\n        else if(num >= 50 && num < 90){\n            roman.push('l');\n\
    \            num -= 50;\n        }\n        else if(num >= 90 && num < 100){\n\
    \            roman.push('xc');\n            num -= 90;\n        }\n        else\
    \ if(num >= 100 && num < 400){\n            roman.push('c');\n            num\
    \ -= 100;\n        }\n        else if(num >= 400 && num < 500){\n            roman.push('cd');\n\
    \            num -= 400;\n        }\n        else if(num >= 500 && num < 900){\n\
    \            roman.push('d');\n            num -= 500;\n        }\n        else\
    \ if(num >= 900 && num < 1000){\n            roman.push('cm');\n            num\
    \ -= 900;\n        }\n        else if(num === 1000){\n            roman.push('m');\n\
    \            num -= 1000;\n        }\n    }\n    return roman.join('');\n}\n\n\
    var test_int_to_mini_roman = function(){\n    var cases = [\n        [1, 'i'],\n\
    \        [2, 'ii'],\n        [3, 'iii'],\n        [4, 'iv'],\n        [5, 'v'],\n\
    \        [6, 'vi'],\n        [7, 'vii'],", "  var mini_roman = [];\n  var remainder\
    \ = 0;\n  var roman_num = \"\";\n  if (number < 1 || number > 1000)\n  {\n   \
    \ return \"Invalid input\";\n  }\n  else if (number >= 500)\n  {\n    var times\
    \ = Math.floor(number / 500);\n    for (var i = 0; i < times; i++)\n    {\n  \
    \    mini_roman.push(\"d\");\n    }\n    remainder = number % 500;\n  }\n  else\n\
    \  {\n    remainder = number;\n  }\n  if (remainder >= 100)\n  {\n    var times\
    \ = Math.floor(remainder / 100);\n    for (var i = 0; i < times; i++)\n    {\n\
    \      mini_roman.push(\"c\");\n    }\n    remainder = remainder % 100;\n  }\n\
    \  if (remainder >= 50)\n  {\n    var times = Math.floor(remainder / 50);\n  \
    \  for (var i = 0; i < times; i++)\n    {\n      mini_roman.push(\"l\");\n   \
    \ }\n    remainder = remainder % 50;\n  }\n  if (remainder >= 10)\n  {\n    var\
    \ times = Math.floor(remainder / 10);\n    for (var i = 0; i < times; i++)\n \
    \   {\n      mini_roman.push(\"x\");\n    }\n    remainder = remainder % 10;\n\
    \  }\n  if (remainder >= 5)\n  {\n    var times = Math.floor(remainder / 5);\n\
    \    for (var i = 0; i < times; i++)\n    {\n      mini_roman.push(\"v\");\n \
    \   }\n    remainder = remainder % 5;\n  }\n  if (remainder >= 1)\n  {\n    var\
    \ times = Math.floor(remainder / 1);\n    for (var i = 0; i < times; i++)\n  \
    \  {\n      mini_roman.push(\"i\");\n    }\n    remainder = remainder % 1;\n \
    \ }\n  for (var i = 0; i < mini_roman.length; i++)\n  {\n    roman_num += mini",
  "  const THOUSANDS = {\n    '1': 'm',\n    '2': 'mm',\n    '3': 'mmm'\n  };\n  const\
    \ HUNDREDS = {\n    '1': 'c',\n    '2': 'cc',\n    '3': 'ccc',\n    '4': 'cd',\n\
    \    '5': 'd',\n    '6': 'dc',\n    '7': 'dcc',\n    '8': 'dccc',\n    '9': 'cm'\n\
    \  };\n  const TENS = {\n    '1': 'x',\n    '2': 'xx',\n    '3': 'xxx',\n    '4':\
    \ 'xl',\n    '5': 'l',\n    '6': 'lx',\n    '7': 'lxx',\n    '8': 'lxxx',\n  \
    \  '9': 'xc'\n  };\n  const ONES = {\n    '1': 'i',\n    '2': 'ii',\n    '3':\
    \ 'iii',\n    '4': 'iv',\n    '5': 'v',\n    '6': 'vi',\n    '7': 'vii',\n   \
    \ '8': 'viii',\n    '9': 'ix'\n  };\n  let romanNumeral = '';\n  if (number <\
    \ 0 || number > 1000) {\n    return 'Please enter a number between 1 and 1000.';\n\
    \  } else {\n    number = String(number);\n    for (let i = 0; i < number.length;\
    \ i++) {\n      switch (number.length - i) {\n        case 4:\n          romanNumeral\
    \ += THOUSANDS[number[i]];\n          break;\n        case 3:\n          romanNumeral\
    \ += HUNDREDS[number[i]];\n          break;\n        case 2:\n          romanNumeral\
    \ += TENS[number[i]];\n          break;\n        case 1:\n          romanNumeral\
    \ += ONES[number[i]];\n          break;\n      }\n    }\n  }\n  return romanNumeral;\n\
    }", "  var roman_numerals = {\n    'M': 1000,\n    'CM': 900,\n    'D': 500,\n\
    \    'CD': 400,\n    'C': 100,\n    'XC': 90,\n    'L': 50,\n    'XL': 40,\n \
    \   'X': 10,\n    'IX': 9,\n    'V': 5,\n    'IV': 4,\n    'I': 1\n  };\n  var\
    \ result = '';\n  for (var numeral in roman_numerals) {\n    while (number >=\
    \ roman_numerals[numeral]) {\n      result += numeral;\n      number -= roman_numerals[numeral];\n\
    \    }\n  }\n  return result;\n}\nint_to_mini_roman(4) // IV\nint_to_mini_roman(8)\
    \ // VIII\nint_to_mini_roman(9) // IX\nint_to_mini_roman(10) // X\nint_to_mini_roman(20)\
    \ // XX\nint_to_mini_roman(36) // XXXVI\nint_to_mini_roman(41) // XLI\nint_to_mini_roman(90)\
    \ // XC\nint_to_mini_roman(99) // XCIX\nint_to_mini_roman(100) // C\nint_to_mini_roman(448)\
    \ // CDXLVIII\nint_to_mini_roman(500) // D\nint_to_mini_roman(649) // DCXLIX\n\
    int_to_mini_roman(1000) // M\nint_to_mini_roman(1889) // MDCCCLXXXIX\nint_to_mini_roman(1994)\
    \ // MCMXCIV\nint_to_mini_roman(2000) // MM\nint_to_mini_roman(2014) // MMXIV\n",
  "  // code here\n}\nint_to_mini_roman(1) // => 'i'\nint_to_mini_roman(25) // =>\
    \ 'xxv'\nint_to_mini_roman(777) // => 'dcclxxvii'\n\n", "   var numerals = {\n\
    \       1: 'i',\n       5: 'v',\n       10: 'x',\n       50: 'l',\n       100:\
    \ 'c',\n       500: 'd',\n       1000: 'm'\n   };\n   var length = number.toString().length;\n\
    \   var result = \"\";\n   if(number < 0 || number > 1000){\n       return false;\n\
    \   }else{\n       while(length > 0){\n           //console.log(number.toString()[length-1]);\n\
    \           var numeral = number.toString()[length-1];\n           console.log(numeral);\n\
    \           if(numeral <= 3){\n               for(var i = 0; i < numeral; i++){\n\
    \                   result += numerals[Math.pow(10, length-1)];\n            \
    \   }\n           }else if(numeral == 4){\n               result += numerals[Math.pow(10,\
    \ length-1)] + numerals[Math.pow(10, length-1)*5];\n           }else if(numeral\
    \ > 4 && numeral < 9){\n               for(var i = 0; i < numeral-5; i++){\n \
    \                  result += numerals[Math.pow(10, length-1)];\n             \
    \  }\n               result += numerals[Math.pow(10, length-1)*5];\n         \
    \  }else if(numeral == 9){\n               result += numerals[Math.pow(10, length-1)]\
    \ + numerals[Math.pow(10, length)];\n           }\n           length--;\n    \
    \   }\n   }\n   return result;\n}", "  let letters = [\"i\", \"v\", \"x\", \"\
    l\", \"c\", \"d\", \"m\"];\n  let values = [1, 5, 10, 50, 100, 500, 1000];\n \
    \ let numStr = \"\";\n  while (number > 0) {\n    let n = number%10;\n    if (n\
    \ <= 3) {\n      for (let i = 0; i < n; i++) {\n        numStr = letters[0] +\
    \ numStr;\n      }\n    } else if (n === 4) {\n      numStr = letters[0] + letters[1]\
    \ + numStr;\n    } else if (n === 5) {\n      numStr = letters[1] + numStr;\n\
    \    } else if (n >= 6 && n <= 8) {\n      for (let i = 5; i < n; i++) {\n   \
    \     numStr = letters[0] + numStr;\n      }\n      numStr = letters[1] + numStr;\n\
    \    } else if (n === 9) {\n      numStr = letters[0] + letters[2] + numStr;\n\
    \    }\n    number = Math.floor(number/10);\n    letters.shift();\n  }\n  return\
    \ numStr;\n}\n", "\tvar str = '';\n\tif(number > 0 && number <= 1000){\n\t\t//\
    \ unidades\n\t\tif (number % 10 < 4){\n\t\t\tfor (var i = 0; i < number % 10;\
    \ i++) {\n\t\t\t\tstr += 'i';\n\t\t\t}\n\t\t}\n\t\telse if (number % 10 == 4){\n\
    \t\t\tstr += 'iv';\n\t\t}\n\t\telse if (number % 10 == 5){\n\t\t\tstr += 'v';\n\
    \t\t}\n\t\telse if (number % 10 > 5 && number % 10 < 9){\n\t\t\tstr += 'v';\n\t\
    \t\tfor (var i = 5; i < number % 10; i++) {\n\t\t\t\tstr += 'i';\n\t\t\t}\n\t\t\
    }\n\t\telse if (number % 10 == 9){\n\t\t\tstr += 'ix';\n\t\t}\n\t\t// decenas\n\
    \t\tif ((number % 100) < 40){\n\t\t\tfor (var i = 0; i < (number % 100) / 10;\
    \ i++) {\n\t\t\t\tstr = 'x' + str;\n\t\t\t}\n\t\t}\n\t\telse if ((number % 100)\
    \ == 40){\n\t\t\tstr = 'xl' + str;\n\t\t}\n\t\telse if ((number % 100) == 50){\n\
    \t\t\tstr = 'l' + str;\n\t\t}\n\t\telse if ((number % 100) > 50 && (number % 100)\
    \ < 90){\n\t\t\tstr = 'l';\n\t\t\tfor (var i = 5; i < (number % 100) / 10; i++)\
    \ {\n\t\t\t\tstr += 'x';\n\t\t\t}\n\t\t\tstr += str;\n\t\t}\n\t\telse if ((number\
    \ % 100) == 90){\n\t\t\tstr = 'xc' + str;\n\t\t}\n\t\t// centenas\n\t\tif ((number\
    \ % 1000) < 400){\n\t\t\tfor (var i = 0; i < (number % 1000) / 100; i++) {\n\t\
    \t\t\tstr = 'c' + str;\n\t\t\t}", "  const roman = { M: 1000, CM: 900, D: 500,\
    \ CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 };\n\
    \  let result = '';\n  while (number > 0) {\n    for (let key in roman) {\n  \
    \    if (number >= roman[key]) {\n        result += key;\n        number -= roman[key];\n\
    \        break;\n      }\n    }\n  }\n  return result;\n}", "    const values\
    \ = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000];\n    const nums =\
    \ [\"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\", \"l\", \"xc\", \"c\", \"cd\",\
    \ \"d\", \"cm\", \"m\"];\n    let out_str = \"\";\n    let remaining = number;\n\
    \    while (remaining > 0) {\n        const num_val = values.pop();\n        const\
    \ num_str = nums.pop();\n        while (remaining >= num_val) {\n            out_str\
    \ += num_str;\n            remaining -= num_val;\n        }\n    }\n    return\
    \ out_str;\n}", "    let roman = \"\";\n    let ones = number % 10;\n    let tens\
    \ = ((number % 100) - ones) / 10;\n    let hundreds = ((number % 1000) - (tens\
    \ * 10) - ones) / 100;\n    let thosands = ((number % 10000) - (hundreds * 100)\
    \ - (tens * 10) - ones) / 1000;\n    for (let i = 0; i < thosands; i++) {\n  \
    \      roman += \"m\";\n    }\n    for (let i = 0; i < hundreds; i++) {\n    \
    \    roman += \"c\";\n    }\n    for (let i = 0; i < tens; i++) {\n        roman\
    \ += \"x\";\n    }\n    for (let i = 0; i < ones; i++) {\n        roman += \"\
    i\";\n    }\n    if (roman.includes(\"ccc\")) {\n        roman = roman.replace(\"\
    ccc\", \"cd\");\n    }\n    if (roman.includes(\"cc\")) {\n        roman = roman.replace(\"\
    cc\", \"d\");\n    }\n    if (roman.includes(\"c\")) {\n        roman = roman.replace(\"\
    c\", \"cm\");\n    }\n    if (roman.includes(\"xxx\")) {\n        roman = roman.replace(\"\
    xxx\", \"xc\");\n    }\n    if (roman.includes(\"xx\")) {\n        roman = roman.replace(\"\
    xx\", \"l\");\n    }\n    if (roman.includes(\"x\")) {\n        roman = roman.replace(\"\
    x\", \"xl\");\n    }\n    if (roman.includes(\"iii\")) {\n        roman = roman.replace(\"\
    iii\", \"iv\");\n    }\n    if (roman.includes(\"ii\")) {\n        roman = roman.replace(\"\
    ii\", \"v\");\n    }\n    if (roman.includes(\"i\")) {\n        roman = roman.replace(\"\
    i\", \"vi\");\n    }\n    return roman;\n}", "    let result = \"\";\n    if (number\
    \ >= 100){\n        if (number == 100){\n            result += \"c\";\n      \
    \  }\n        else if (number == 400){\n            result += \"cd\";\n      \
    \  }\n        else if (number == 500){\n            result += \"d\";\n       \
    \ }\n        else if (number == 900){\n            result += \"cm\";\n       \
    \ }\n        else if (number > 500){\n            result += \"d\";\n         \
    \   number -= 500;\n            if (number == 100){\n                result +=\
    \ \"c\";\n            }\n            else if (number == 400){\n              \
    \  result += \"cd\";\n            }\n            else if (number == 500){\n  \
    \              result += \"d\";\n            }\n            else if (number ==\
    \ 900){\n                result += \"cm\";\n            }\n            else if\
    \ (number > 500){\n                result += \"d\";\n                number -=\
    \ 500;\n                for (let i = 0; i < number / 100; i++){\n            \
    \        result += \"c\";\n                }\n            }\n            else\
    \ {\n                for (let i = 0; i < number / 100; i++){\n               \
    \     result += \"c\";\n                }\n            }\n        }\n        else\
    \ {\n            for (let i = 0; i < number / 100; i++){\n                result\
    \ += \"c\";\n            }\n        }\n    }\n    else if (number >= 10){\n  \
    \      if (number == 10){\n            result += \"x\";\n        }\n        else\
    \ if (number == 40){\n            result += \"xl\";\n        }\n        else if\
    \ (number == 50){\n            result += \"l\";\n        }\n        else if (number\
    \ == 90){\n            result += \"xc\";\n        }\n        else if (number >\
    \ 50){\n            result += \"l\";\n            number -= 50;\n            if\
    \ (number == 10){\n                result += \"x\";\n            }\n         \
    \   else if (number == 40){\n                result += \"xl\";\n            }\n\
    \            else if (number == 50){\n                result += \"l\";\n     \
    \       }\n            else if (number == 90){\n                result += \"xc\"\
    ;\n            }\n            else if (number > 50){\n                result +=",
  "  if ( number === '0' ) return '';\n  var roman_numerals = ['', 'I', 'II', 'III',\
    \ 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  return roman_numerals[number];\n}\n",
  "  var roman_numerals = [\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"\
    VIII\",\"IX\",\"X\"];\n  var ones = Math.floor(number % 10);\n  return roman_numerals[ones];\n\
    }\n", "    var thousands = Math.floor(number / 1000);\n    var hundreds = Math.floor((number\
    \ - thousands * 1000) / 100);\n    var tens = Math.floor((number - thousands *\
    \ 1000 - hundreds * 100) / 10);\n    var units = Math.floor(number - thousands\
    \ * 1000 - hundreds * 100 - tens * 10);\n    var result = '';\n    for (var i\
    \ = 0; i < thousands; i++) {\n        result += 'm';\n    }\n    if (hundreds\
    \ == 9) {\n        result += 'cm';\n    } else if (hundreds == 4) {\n        result\
    \ += 'cd';\n    } else {\n        if (hundreds >= 5) {\n            result +=\
    \ 'd';\n            hundreds -= 5;\n        }\n        for (var i = 0; i < hundreds;\
    \ i++) {\n            result += 'c';\n        }\n    }\n    if (tens == 9) {\n\
    \        result += 'xc';\n    } else if (tens == 4) {\n        result += 'xl';\n\
    \    } else {\n        if (tens >= 5) {\n            result += 'l';\n        \
    \    tens -= 5;\n        }\n        for (var i = 0; i < tens; i++) {\n       \
    \     result += 'x';\n        }\n    }\n    if (units == 9) {\n        result\
    \ += 'ix';\n    } else if (units == 4) {\n        result += 'iv';\n    } else\
    \ {\n        if (units >= 5) {\n            result += 'v';\n            units\
    \ -= 5;\n        }\n        for (var i = 0; i < units; i++) {\n            result\
    \ += 'i';\n        }\n    }\n    return result;\n}\n", "  var roman_numeral =\
    \ [];\n  var multiple = 1;\n  var result = 0;\n  var letters = ['i', 'v', 'x',\
    \ 'l', 'c', 'd', 'm'];\n  var numbers = [1, 5, 10, 50, 100, 500, 1000];\n  var\
    \ remainder = number;\n  var temp_remainder = 0;\n  var numerals = [];\n  var\
    \ key = 0;\n  while (remainder > 0) {\n    if (remainder >= 1000) {\n      numerals.push(letters[6]);\n\
    \      remainder -= 1000;\n    } else if (remainder >= 900) {\n      numerals.push(letters[5]);\n\
    \      numerals.push(letters[6]);\n      remainder -= 900;\n    } else if (remainder\
    \ >= 500) {\n      numerals.push(letters[5]);\n      remainder -= 500;\n    }\
    \ else if (remainder >= 400) {\n      numerals.push(letters[4]);\n      numerals.push(letters[5]);\n\
    \      remainder -= 400;\n    } else if (remainder >= 100) {\n      numerals.push(letters[4]);\n\
    \      remainder -= 100;\n    } else if (remainder >= 90) {\n      numerals.push(letters[3]);\n\
    \      numerals.push(letters[4]);\n      remainder -= 90;\n    } else if (remainder\
    \ >= 50) {\n      numerals.push(letters[3]);\n      remainder -= 50;\n    } else\
    \ if (remainder >= 40) {\n      numerals.push(letters[2]);\n      numerals.push(letters[3]);\n\
    \      remainder -= 40;\n    } else if (remainder >= 10) {\n      numerals.push(letters[2]);\n\
    \      remainder -= 10;\n    } else if (remainder >= 9) {\n      numerals.push(letters[1]);\n\
    \      numerals.push(letters[2]);\n      remainder -= 9;\n    } else if (remainder\
    \ >= 5) {\n      numerals.push(letters[1]);\n      remainder -= 5;\n    } else\
    \ if (remainder >= 4) {\n     ", "    let result = \"\";\n    if (number > 1000)\
    \ {\n        return \"TOO MUCH\";\n    } else if (number < 1) {\n        return\
    \ \"TOO LITTLE\";\n    }\n    for (i = 0; i < number; i++) {\n        result +=\
    \ \"i\";\n    }\n    result = result.replace(/iiiii/gi, \"v\");\n    result =\
    \ result.replace(/iiii/gi, \"iv\");\n    result = result.replace(/vv/gi, \"x\"\
    );\n    result = result.replace(/viv/gi, \"ix\");\n    result = result.replace(/xxxxxxxxx/gi,\
    \ \"c\");\n    result = result.replace(/xl/gi, \"xc\");\n    result = result.replace(/cccccccccc/gi,\
    \ \"m\");\n    result = result.replace(/cm/gi, \"xc\");\n    return result;\n\
    }\n", "\tlet roman = \"\";\n\t// add M while number is greater than 1000\n\twhile\
    \ (number >= 1000) {\n\t\troman += \"m\";\n\t\tnumber -= 1000;\n\t}\n\t// add\
    \ D while number is greater than 500\n\twhile (number >= 500) {\n\t\troman +=\
    \ \"d\";\n\t\tnumber -= 500;\n\t}\n\t// add C while number is greater than 100\n\
    \twhile (number >= 100) {\n\t\troman += \"c\";\n\t\tnumber -= 100;\n\t}\n\t//\
    \ add L while number is greater than 50\n\twhile (number >= 50) {\n\t\troman +=\
    \ \"l\";\n\t\tnumber -= 50;\n\t}\n\t// add X while number is greater than 10\n\
    \twhile (number >= 10) {\n\t\troman += \"x\";\n\t\tnumber -= 10;\n\t}\n\t// add\
    \ V while number is greater than 5\n\twhile (number >= 5) {\n\t\troman += \"v\"\
    ;\n\t\tnumber -= 5;\n\t}\n\t// add I while number is greater than 1\n\twhile (number\
    \ >= 1) {\n\t\troman += \"i\";\n\t\tnumber -= 1;\n\t}\n\treturn roman;\n}", " \
    \   if (number >= 1 && number <= 1000) {\n        let numerals = {\n         \
    \   M: 1000,\n            CM: 900,\n            D: 500,\n            CD: 400,\n\
    \            C: 100,\n            XC: 90,\n            L: 50,\n            XL:\
    \ 40,\n            X: 10,\n            IX: 9,\n            V: 5,\n           \
    \ IV: 4,\n            I: 1\n        };\n        let number_string = '';\n    \
    \    for (let i in numerals) {\n            while (number >= numerals[i]) {\n\
    \                number_string += i;\n                number -= numerals[i];\n\
    \            }\n        }\n        return number_string;\n    }\n}", "  var roman_numerals\
    \ = {\n    1000: 'm',\n    900: 'cm',\n    500: 'd',\n    400: 'cd',\n    100:\
    \ 'c',\n    90: 'xc',\n    50: 'l',\n    40: 'xl',\n    10: 'x',\n    9: 'ix',\n\
    \    5: 'v',\n    4: 'iv',\n    1: 'i'\n  };\n  var result = '';\n  for (var key\
    \ in roman_numerals) {\n    while (number >= key) {\n      result += roman_numerals[key];\n\
    \      number -= key;\n    }\n  }\n  return result;\n}", "  var ones = ['i', 'ii',\
    \ 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n  var tens = ['x', 'xx', 'xxx',\
    \ 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'];\n  var hundreds = ['c', 'cc', 'ccc',\
    \ 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'];\n  var thousands = ['m', 'mm', 'mmm'];\n\
    \  var result = [];\n  var num = number.toString().split('');\n  var numObj =\
    \ {\n    '0': '',\n    '1': ones,\n    '2': tens,\n    '3': hundreds,\n    '4':\
    \ thousands\n  };\n  for (var i = 0; i < num.length; i++) {\n    result.unshift(numObj[i][num[i]]);\n\
    \  }\n  return result.join('');\n}", "    if (number > 0 && number <= 1000) {\n\
    \        var result = \"\";\n        var map = {'M': 1000, 'CM': 900, 'D': 500,\
    \ 'CD': 400, 'C': 100, 'XC': 90, 'L': 50, 'XL': 40, 'X': 10, 'IX': 9, 'V': 5,\
    \ 'IV': 4, 'I': 1};\n        for (var key in map) {\n            while (number\
    \ >= map[key]) {\n                result += key;\n                number -= map[key];\n\
    \            }\n        }\n        return result.toLowerCase();\n    }\n    return\
    \ false;\n}\n", "  let ones = [\"\",\"i\",\"ii\",\"iii\",\"iv\",\"v\",\"vi\",\"\
    vii\",\"viii\",\"ix\"];\n  let tens = [\"\",\"x\",\"xx\",\"xxx\",\"xl\",\"l\"\
    ,\"lx\",\"lxx\",\"lxxx\",\"xc\"];\n  let hundreds = [\"\",\"c\",\"cc\",\"ccc\"\
    ,\"cd\",\"d\",\"dc\",\"dcc\",\"dccc\",\"cm\"];\n  let thousands = [\"\",\"m\"\
    ,\"mm\",\"mmm\",\"miv\",\"mv\",\"mvi\",\"mvii\",\"mviii\",\"mix\"];\n  let ans\
    \ = \"\"\n\n  if (number >= 1000) {\n    ans += thousands[Math.floor(number/1000)];\n\
    \    number %= 1000;\n  }\n  if (number >= 100) {\n    ans += hundreds[Math.floor(number/100)];\n\
    \    number %= 100;\n  }\n  if (number >= 10) {\n    ans += tens[Math.floor(number/10)];\n\
    \    number %= 10;\n  }\n  if (number >= 1) {\n    ans += ones[number];\n  }\n\
    \  return ans;\n}\n", "  var numbers = [['I', 'V'], ['X', 'L'], ['C', 'D'], ['M',\
    \ '-']];\n  var result = '';\n  var current_number = number;\n  var place = 0;\n\
    \  while (current_number > 0) {\n    var current_value = current_number % 10;\n\
    \    current_number = Math.floor(current_number / 10);\n    var ones = numbers[place][0];\n\
    \    var fives = numbers[place][1];\n    var digit = '';\n    if (current_value\
    \ == 4) {\n      digit = ones + fives;\n    } else if (current_value == 9) {\n\
    \      digit = ones + numbers[place + 1][0];\n    } else {\n      if (current_value\
    \ >= 5) {\n        digit = fives;\n        current_value -= 5;\n      }\n    \
    \  digit += ones.repeat(current_value);\n    }\n    result = digit + result;\n\
    \    place++;\n  }\n  return result;\n}\n\nint_to_mini_roman(29);", "    let roman_dict\
    \ = {\n        1 : \"i\",\n        5 : \"v\",\n        10 : \"x\",\n        50\
    \ : \"l\",\n        100 : \"c\",\n        500 : \"d\",\n        1000 : \"m\"\n\
    \    };\n    let arr = [];\n    //let num = number;\n    let num = Math.floor(number/1000);\n\
    \    let i = 0;\n    while(num > 0){\n        arr.push(roman_dict[1000]);\n  \
    \      num--;\n    }\n    num = Math.floor((number%1000)/100);\n    if(num ===\
    \ 9){\n        arr.push(roman_dict[100]);\n        arr.push(roman_dict[1000]);\n\
    \    }\n    else if(num >= 5){\n        arr.push(roman_dict[500]);\n        while(num-5\
    \ > 0){\n            arr.push(roman_dict[100]);\n            num--;\n        }\n\
    \    }\n    else if(num === 4){\n        arr.push(roman_dict[100]);\n        arr.push(roman_dict[500]);\n\
    \    }\n    else if(num > 0){\n        while(num > 0){\n            arr.push(roman_dict[100]);\n\
    \            num--;\n        }\n    }\n    num = Math.floor((number%100)/10);\n\
    \    if(num === 9){\n        arr.push(roman_dict[10]);\n        arr.push(roman_dict[100]);\n\
    \    }\n    else if(num >= 5){\n        arr.push(roman_dict[50]);\n        while(num-5\
    \ > 0){\n            arr.push(roman_dict[10]);\n            num--;\n        }\n\
    \    }\n    else if(num === 4){\n        arr.push(roman_dict[10]);\n        arr.push(roman_dict[50]);\n\
    \    }\n    else if(num > 0){\n        while(num > 0){\n            arr.push(roman_dict[10]);\n\
    \            num--;\n        }\n    }\n    num = Math.floor((number%10));\n  \
    \  if(num === 9){\n        arr.push(roman_dict[1", "    \n    var numeral = '';\n\
    \    var numeral_list = [\n        ['I', 'V'],\n        ['X', 'L'],\n        ['C',\
    \ 'D'],\n        ['M']\n    ];\n    \n    var i = 0;\n    while (number > 0) {\n\
    \        var digit = number % 10;\n        number = Math.floor(number / 10);\n\
    \        if (digit == 4 || digit == 9) {\n            numeral = numeral_list[i][digit\
    \ - 4] + numeral;\n        } else {\n            numeral = numeral_list[i][0].repeat(digit\
    \ % 5) + numeral;\n            if (digit >= 5) {\n                numeral = numeral_list[i][1]\
    \ + numeral;\n            }\n        }\n        i++;\n    }\n    return numeral;\n\
    }\n", "    if (number >= 1 && number <= 1000) {\n        var answer = \"\";\n\
    \        var romanNumbers = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n        var numbers = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n        for (var i = 0; i\
    \ < numbers.length; i++) {\n            while (number >= numbers[i]) {\n     \
    \           answer += romanNumbers[i];\n                number -= numbers[i];\n\
    \            }\n        }\n        return answer;\n    }\n    else{\n        return\
    \ \"You did not enter a number between 1 and 1000.\";\n    }\n}", "  let result\
    \ = \"\";\n  let romanNumerals = { M:1000, CM:900, D:500, CD:400, C:100, XC:90,\
    \ L:50, XL:40, X:10, IX:9, V:5, IV:4, I:1 };\n  for (let i in romanNumerals) {\n\
    \    while (number >= romanNumerals[i]) {\n      result += i;\n      number -=\
    \ romanNumerals[i];\n    }\n  }\n  return result;\n}\n", "  let roman_numerals\
    \ = [\n    ['i', 'v'],\n    ['x', 'l'],\n    ['c', 'd'],\n    ['m']\n  ];\n  let\
    \ output = '';\n  let digits = String(number).split('').reverse();\n  //iterate\
    \ through each digit, starting with the ones place\n  digits.forEach(function(digit,\
    \ index){\n    //convert each digit to its roman numeral equivalent\n    if(digit\
    \ < 4){\n      output = roman_numerals[index][0].repeat(digit) + output;\n   \
    \ }\n    else if(digit == 4){\n      output = roman_numerals[index][0] + roman_numerals[index][1]\
    \ + output;\n    }\n    else if(digit < 9){\n      output = roman_numerals[index][1]\
    \ + roman_numerals[index][0].repeat(digit - 5) + output;\n    }\n    else if(digit\
    \ == 9){\n      output = roman_numerals[index][0] + roman_numerals[index + 1][0]\
    \ + output;\n    }\n  });\n  return output;\n}", "    if(number < 1 || number\
    \ > 1000){\n        return 'invalid input';\n    }\n    var romanNum = '';\n \
    \   var intToRoman = [\n        { 1: 'i' },\n        { 4: 'iv' },\n        { 5:\
    \ 'v' },\n        { 9: 'ix' },\n        { 10: 'x' },\n        { 40: 'xl' },\n\
    \        { 50: 'l' },\n        { 90: 'xc' },\n        { 100: 'c' },\n        {\
    \ 400: 'cd' },\n        { 500: 'd' },\n        { 900: 'cm' },\n        { 1000:\
    \ 'm' }\n    ];\n    for(var i = intToRoman.length - 1; i >= 0; i--){\n      \
    \  var romanDigit = intToRoman[i];\n        var romanNumeral = Object.keys(romanDigit)[0];\n\
    \        if(number >= romanNumeral){\n            romanNum += romanDigit[romanNumeral];\n\
    \            number -= romanNumeral;\n        }\n    }\n    return romanNum;\n\
    }", "    return 'rom';\n}", "    // Your code here!\n}", "  let str = \"\";\n\
    \  if (number >= 1000) {\n    str += 'm';\n    number -= 1000;\n  }\n  if (number\
    \ >= 900) {\n    str += 'cm';\n    number -= 900;\n  }\n  if (number >= 500) {\n\
    \    str += 'd';\n    number -= 500;\n  }\n  if (number >= 400) {\n    str +=\
    \ 'cd';\n    number -= 400;\n  }\n  if (number >= 100) {\n    str += 'c';\n  \
    \  number -= 100;\n  }\n  if (number >= 90) {\n    str += 'xc';\n    number -=\
    \ 90;\n  }\n  if (number >= 50) {\n    str += 'l';\n    number -= 50;\n  }\n \
    \ if (number >= 40) {\n    str += 'xl';\n    number -= 40;\n  }\n  if (number\
    \ >= 10) {\n    str += 'x';\n    number -= 10;\n  }\n  if (number >= 9) {\n  \
    \  str += 'ix';\n    number -= 9;\n  }\n  if (number >= 5) {\n    str += 'v';\n\
    \    number -= 5;\n  }\n  if (number >= 4) {\n    str += 'iv';\n    number -=\
    \ 4;\n  }\n  if (number >= 1) {\n    str += 'i';\n    number -= 1;\n  }\n  return\
    \ str;\n}", "  var s = \"\";\n  var arr = ['i', 'v', 'x', 'l', 'c', 'd', 'm'];\n\
    \  var nums = [1, 5, 10, 50, 100, 500, 1000];\n  var k = nums.length - 1;\n  while\
    \ (number > 0) {\n    var digit = number % 10;\n    var d = 0;\n    if (digit\
    \ < 4) {\n      d = 1;\n    } else if (digit == 4) {\n      d = 2;\n    } else\
    \ if (digit < 9) {\n      d = 3;\n    } else {\n      d = 4;\n    }\n    number\
    \ = parseInt(number / 10);\n    if (d == 1) {\n      s = arr[k * 2] + s;\n   \
    \ } else if (d == 2) {\n      s = arr[k * 2] + arr[k * 2 + 1] + s;\n    } else\
    \ if (d == 3) {\n      s = arr[k * 2 + 1] + s;\n    } else {\n      s = arr[k\
    \ * 2] + arr[k * 2 + 2] + s;\n    }\n    k--;\n  }\n  return s;\n}\n", "  var\
    \ table = [\n    [1000, 'm'],\n    [900, 'cm'],\n    [500, 'd'],\n    [400, 'cd'],\n\
    \    [100, 'c'],\n    [90, 'xc'],\n    [50, 'l'],\n    [40, 'xl'],\n    [10, 'x'],\n\
    \    [9, 'ix'],\n    [5, 'v'],\n    [4, 'iv'],\n    [1, 'i']\n  ];\n  var roman\
    \ = '';\n  var letter;\n  while (number > 0) {\n    for (var i = 0; i < table.length;\
    \ i++) {\n      letter = table[i][1];\n      if (number >= table[i][0]) {\n  \
    \      roman += letter;\n        number -= table[i][0];\n        break;\n    \
    \  }\n    }\n  }\n  return roman;\n}\n", "  var d = number;\n  var result = '';\n\
    \  var num_to_char = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm'\n  };\n  var factors = [1000, 500,\
    \ 100, 50, 10, 5, 1];\n  for (var i = 0; i < factors.length; i++) {\n    var factor\
    \ = factors[i];\n    var quotient = Math.floor(d / factor);\n    d = d % factor;\n\
    \    if (quotient > 0) {\n      if (quotient <= 3) {\n        for (var j = 0;\
    \ j < quotient; j++) {\n          result += num_to_char[factor];\n        }\n\
    \      } else if (quotient === 4) {\n        result += num_to_char[factor] + num_to_char[5\
    \ * factor];\n      } else if (quotient === 5) {\n        result += num_to_char[5\
    \ * factor];\n      } else if (quotient <= 8) {\n        result += num_to_char[5\
    \ * factor];\n        for (var j = 5; j < quotient; j++) {\n          result +=\
    \ num_to_char[factor];\n        }\n      } else {\n        result += num_to_char[factor]\
    \ + num_to_char[10 * factor];\n      }\n    }\n  }\n  return result;\n}", "  \
    \  var numeral = \"\";\n    var ones = 0;\n    var tens = 0;\n    var hundreds\
    \ = 0;\n    var thousands = 0;\n    var onesDict = {\n        1: \"i\",\n    \
    \    2: \"ii\",\n        3: \"iii\",\n        4: \"iv\",\n        5: \"v\",\n\
    \        6: \"vi\",\n        7: \"vii\",\n        8: \"viii\",\n        9: \"\
    ix\"\n    };\n    var tensDict = {\n        1: \"x\",\n        2: \"xx\",\n  \
    \      3: \"xxx\",\n        4: \"xl\",\n        5: \"l\",\n        6: \"lx\",\n\
    \        7: \"lxx\",\n        8: \"lxxx\",\n        9: \"xc\"\n    };\n    var\
    \ hundredsDict = {\n        1: \"c\",\n        2: \"cc\",\n        3: \"ccc\"\
    ,\n        4: \"cd\",\n        5: \"d\",\n        6: \"dc\",\n        7: \"dcc\"\
    ,\n        8: \"dccc\",\n        9: \"cm\"\n    };\n    var thousandsDict = {\n\
    \        1: \"m\",\n        2: \"mm\",\n        3: \"mmm\"\n    };\n    // use\
    \ this format if number > 999\n    if (number >= 1000){\n        thousands = Math.floor(number\
    \ / 1000);\n        number = number % 1000;\n        numeral += thousandsDict[thousands];\n\
    \    }\n    if (number >= 100){\n        hundreds = Math.floor(number / 100);\n\
    \        number = number % 100;\n        numeral += hundredsDict[hundreds];\n\
    \    }\n    if (number >= 10){\n        tens = Math.floor(number / 10);\n    \
    \    number = number % 10;\n        numeral += tensDict[tens];\n    }\n    if\
    \ (number >= 1){\n        ones = number;\n        numeral += onesDict[ones];\n\
    \    }\n    return numeral;\n}", "    var result = '';\n    var mCount = Math.floor(number\
    \ / 1000);\n    var dCount = Math.floor((number % 1000) / 500);\n    var cCount\
    \ = Math.floor((number % 500) / 100);\n    var lCount = Math.floor((number % 100)\
    \ / 50);\n    var xCount = Math.floor((number % 50) / 10);\n    var vCount = Math.floor((number\
    \ % 10) / 5);\n    var iCount = Math.floor(number % 5);\n    var mString = 'm'.repeat(mCount);\n\
    \    var dString = 'd'.repeat(dCount);\n    var cString = 'c'.repeat(cCount);\n\
    \    var lString = 'l'.repeat(lCount);\n    var xString = 'x'.repeat(xCount);\n\
    \    var vString = 'v'.repeat(vCount);\n    var iString = 'i'.repeat(iCount);\n\
    \    result = mString + dString + cString + lString + xString + vString + iString;\n\
    \    return result;\n}", "  let roman = \"\"\n  if (number >= 1 && number <= 3){\n\
    \    for (let i = 0; i < number; i++){\n      roman += \"i\"\n    }\n  } else\
    \ if (number === 4){\n    roman = \"iv\"\n  } else if (number >= 5 && number <=\
    \ 8){\n    roman = \"v\"\n    for (let i = 0; i < number - 5; i++){\n      roman\
    \ += \"i\"\n    }\n  } else if (number === 9){\n    roman = \"ix\"\n  } else if\
    \ (number >= 10 && number <= 39){\n    for (let i = 0; i < Math.floor(number /\
    \ 10); i++){\n      roman += \"x\"\n    }\n    let remainder = number % 10\n \
    \   if (remainder === 4){\n      roman += \"iv\"\n    } else if (remainder ===\
    \ 9){\n      roman += \"ix\"\n    } else if (remainder >= 5){\n      roman +=\
    \ \"v\"\n      for (let i = 0; i < remainder - 5; i++){\n        roman += \"i\"\
    \n      }\n    } else {\n      for (let i = 0; i < remainder; i++){\n        roman\
    \ += \"i\"\n      }\n    }\n  } else if (number >= 40 && number <= 49){\n    roman\
    \ = \"xl\"\n    let remainder = number % 10\n    if (remainder === 4){\n     \
    \ roman += \"iv\"\n    } else if (remainder === 9){\n      roman += \"ix\"\n \
    \   } else if (remainder >= 5){\n      roman += \"v\"\n      for (let i = 0; i\
    \ < remainder - 5; i++){\n        roman += \"i\"\n      }\n    } else {\n    \
    \  for (let i = 0; i < remainder; i++){\n        roman += \"i\"\n      }\n   \
    \ }\n  } else if (number >= 50 && number <= 89){\n    roman = \"l\"\n    for (let\
    \ i = 0; i < Math.floor((number - 50) / 10); i++){\n     ", "  //start with an\
    \ empty string\n  var roman = '';\n  //work through the largest numbers first\n\
    \  if (number >= 1000) {\n    //find how many thousands there are by dividing\
    \ the number by 1000\n    //and round down to a whole number.\n    var thousands\
    \ = Math.floor(number / 1000);\n    //Add that many thousands to the roman numeral\n\
    \    for (var i = 0; i < thousands; i++) {\n      roman += 'm';\n    }\n    //subtract\
    \ the thousands we just added from the original number\n    number -= thousands\
    \ * 1000;\n  }\n  //\n  if (number >= 900) {\n    roman += 'cm';\n    number -=\
    \ 900;\n  }\n  if (number >= 500) {\n    roman += 'd';\n    number -= 500;\n \
    \ }\n  if (number >= 400) {\n    roman += 'cd';\n    number -= 400;\n  }\n  if\
    \ (number >= 100) {\n    var hundreds = Math.floor(number / 100);\n    for (var\
    \ i = 0; i < hundreds; i++) {\n      roman += 'c';\n    }\n    number -= hundreds\
    \ * 100;\n  }\n  if (number >= 90) {\n    roman += 'xc';\n    number -= 90;\n\
    \  }\n  if (number >= 50) {\n    roman += 'l';\n    number -= 50;\n  }\n  if (number\
    \ >= 40) {\n    roman += 'xl';\n    number -= 40;\n  }\n  if (number >= 10) {\n\
    \    var tens = Math.floor(number / 10);\n    for (var i = 0; i < tens; i++) {\n\
    \      roman += 'x';\n    }\n    number -= tens * 10;\n  }\n  if (number >= 9)\
    \ {\n    roman += 'ix';\n    number -= 9;\n  }\n  if (number >= 5) {\n    roman\
    \ += 'v';\n    number -= 5;\n  }\n  if (number >= 4) {\n    roman += 'iv';\n \
    \   number -= 4;\n  }\n  if (number >= 1) {\n    for (var i", "    let roman={1:\"\
    i\",4:\"iv\",5:\"v\",9:\"ix\",10:\"x\",40:\"xl\",50:\"l\",90:\"xc\",100:\"c\"\
    ,400:\"cd\",500:\"d\",900:\"cm\",1000:\"m\"};\n    if(number in roman){\n    \
    \    return roman[number]\n    }else{\n        let val;\n        let res=\"\"\
    ;\n        let arr = Object.keys(roman).reverse();\n        for(let i=0;i<arr.length;i++){\n\
    \            if(number>=arr[i]){\n                val=Math.floor(number/arr[i]);\n\
    \                number=number%arr[i];\n                for(let j=0;j<val;j++){\n\
    \                    res+=roman[arr[i]];\n                }\n            }\n \
    \       }\n        return res\n    }\n}", "    if (number > 1000 || number < 1)\
    \ {\n        return \"Out of range.\";\n    }\n    var roman = new Map([\n   \
    \     [1, \"i\"],\n        [5, \"v\"],\n        [10, \"x\"],\n        [50, \"\
    l\"],\n        [100, \"c\"],\n        [500, \"d\"],\n        [1000, \"m\"]\n \
    \   ]);\n    var romanNumeral = \"\";\n    var len = 0;\n    var digits = Math.floor(Math.log10(number))\
    \ + 1;\n    if (digits === 4) {\n        len = number / 1000;\n        for (var\
    \ i = 0; i < len; i++) {\n            romanNumeral += roman.get(1000);\n     \
    \   }\n        number %= 1000;\n    }\n    if (digits >= 3) {\n        len = number\
    \ / 100;\n        if (len < 4) {\n            for (var i = 0; i < len; i++) {\n\
    \                romanNumeral += roman.get(100);\n            }\n        } else\
    \ if (len === 4) {\n            romanNumeral += roman.get(100) + roman.get(500);\n\
    \        } else if (len < 9) {\n            romanNumeral += roman.get(500);\n\
    \            for (var i = 0; i < len - 5; i++) {\n                romanNumeral\
    \ += roman.get(100);\n            }\n        } else {\n            romanNumeral\
    \ += roman.get(100) + roman.get(1000);\n        }\n        number %= 100;\n  \
    \  }\n    if (digits >= 2) {\n        len = number / 10;\n        if (len < 4)\
    \ {\n            for (var i = 0; i < len; i++) {\n                romanNumeral\
    \ += roman.get(10);\n            }\n        } else if (len === 4) {\n        \
    \    romanNumeral += roman.get(10) + roman.get(50);\n        } else if (len <\
    \ 9) {\n            romanNumeral += roman.get(50);\n            for (var i = 0;\
    \ i", "  var numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm'\n  };\n  var nums = [\n    1000,\n\
    \    500,\n    100,\n    50,\n    10,\n    5,\n    1\n  ];\n  var answer = '';\n\
    \  for (var i = 0; i < nums.length; i++) {\n    while (number >= nums[i]) {\n\
    \      answer += numerals[nums[i]];\n      number -= nums[i];\n    }\n  }\n  return\
    \ answer;\n}", "    if (typeof number != \"number\") return \"Enter an integer.\"\
    ;\n    if (number <= 0 || number > 1000) return \"Restrictions: 1 <= num <= 1000\"\
    ;\n    var roman_numeral = \"\";\n    var numerals = [[1000, \"m\"], [900, \"\
    cm\"], [500, \"d\"], [400, \"cd\"], [100, \"c\"], [90, \"xc\"], [50, \"l\"], [40,\
    \ \"xl\"], [10, \"x\"], [9, \"ix\"], [5, \"v\"], [4, \"iv\"], [1, \"i\"]];\n \
    \   for (var i = 0; i < numerals.length; i++){\n        while (number >= numerals[i][0]){\n\
    \            roman_numeral += numerals[i][1];\n            number -= numerals[i][0];\n\
    \        }\n    }\n    return roman_numeral;\n}", "    const numerals = [\n  \
    \      [1000, 'm'],\n        [900, 'cm'],\n        [500, 'd'],\n        [400,\
    \ 'cd'],\n        [100, 'c'],\n        [90, 'xc'],\n        [50, 'l'],\n     \
    \   [40, 'xl'],\n        [10, 'x'],\n        [9, 'ix'],\n        [5, 'v'],\n \
    \       [4, 'iv'],\n        [1, 'i']\n    ];\n    let result = '';\n    for (let\
    \ i = 0; i < numerals.length; i++) {\n        while (number >= numerals[i][0])\
    \ {\n            result += numerals[i][1];\n            number -= numerals[i][0];\n\
    \        }\n    }\n    return result;\n}", "    switch(number){\n        case\
    \ 1:\n            return \"i\";\n        case 2:\n            return \"ii\";\n\
    \        case 3:\n            return \"iii\";\n        case 4:\n            return\
    \ \"iv\";\n        case 5:\n            return \"v\";\n        case 6:\n     \
    \       return \"vi\";\n        case 7:\n            return \"vii\";\n       \
    \ case 8:\n            return \"viii\";\n        case 9:\n            return \"\
    ix\";\n        case 10:\n            return \"x\";\n        case 20:\n       \
    \     return \"xx\";\n        case 30:\n            return \"xxx\";\n        case\
    \ 40:\n            return \"xl\";\n        case 50:\n            return \"l\"\
    ;\n        case 60:\n            return \"lx\";\n        case 70:\n          \
    \  return \"lxx\";\n        case 80:\n            return \"lxxx\";\n        case\
    \ 90:\n            return \"xc\";\n        case 100:\n            return \"c\"\
    ;\n        case 200:\n            return \"cc\";\n        case 300:\n        \
    \    return \"ccc\";\n        case 400:\n            return \"cd\";\n        case\
    \ 500:\n            return \"d\";\n        case 600:\n            return \"dc\"\
    ;\n        case 700:\n            return \"dcc\";\n        case 800:\n       \
    \     return \"dccc\";\n        case 900:\n            return \"cm\";\n      \
    \  case 1000:\n            return \"m\";\n        default:\n            console.log(\"\
    Oops! Something went wrong... Try again!\");\n    }\n}", "  var thousands = ['',\
    \ 'm', 'mm', 'mmm'];\n  var hundreds = ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc',\
    \ 'dcc', 'dccc', 'cm'];\n  var tens = ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx',\
    \ 'lxx', 'lxxx', 'xc'];\n  var ones = ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi',\
    \ 'vii', 'viii', 'ix'];\n  var integer = (\"000\" + number).slice(-4);\n\n  return\
    \ thousands[integer[0]] + hundreds[integer[1]] + tens[integer[2]] + ones[integer[3]];\n\
    }\n", "  var mini_roman = {1: 'i', 5: 'v', 10: 'x'};\n  var factors = [10, 1];\n\
    \  var answer = '';\n  var factor;\n  for (var i = 0; i < factors.length; i++)\
    \ {\n    factor = factors[i];\n    answer += (number - number % factor) / factor;\n\
    \    number %= factor;\n  }\n  answer = answer.split('').map(digit => mini_roman[digit]).join('');\n\
    \  return answer;\n}", "    var values = [1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1];\n    var numerals = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l',\
    \ 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    var result = '';\n    for (var i = 0;\
    \ i < values.length; i++) {\n        while (number >= values[i]) {\n         \
    \   result += numerals[i];\n            number -= values[i];\n        }\n    }\n\
    \    return result;\n}\n\nvar n = 1;\nvar n1 = 8;\nvar n2 = 12;\nvar n3 = 41;\n\
    var n4 = 48;\nvar n5 = 78;\nvar n6 = 498;\nvar n7 = 810;\nvar n8 = 900;\nvar n9\
    \ = 946;\nvar n10 = 954;\nvar n11 = 988;\nvar n12 = 1000;\nvar n13 = 1004;\nvar\
    \ n14 = 1051;\nvar n15 = 1369;\n", "    // var result = \"\";\n    var hunds =\
    \ [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\"];\n \
    \   var tens = [\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\"\
    ,\"XC\"];\n    var units = [\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\"\
    ,\"VIII\",\"IX\"];\n    // var nums = [hunds, tens, units];\n    var nums = number.toString().split(\"\
    \").reverse();\n    var result = \"\";\n    // var result = \"\";\n    // for\
    \ (var i = 0; i < nums.length; i++){\n    //     var placeholder = \"\";\n   \
    \ //     placeholder += nums[i];\n    //     result += (hunds[nums[i]] + tens[nums[i+1]]\
    \ + units[nums[i+2]]);\n    //     // var placeholder = \"\";\n    //     // placeholder\
    \ += nums[i];\n    //     // result += hunds[placeholder];\n    //     // placeholder\
    \ = \"\";\n    //     // placeholder += nums[i+1];\n    //     // result += tens[placeholder];\n\
    \    //     // placeholder = \"\";\n    //     // placeholder += nums[i+2];\n\
    \    //     // result += units[placeholder];\n    // }\n    for (var i = 0; i\
    \ < nums.length; i++){\n        result += hunds[nums[i]];\n        result += tens[nums[i+1]];\n\
    \        result += units[nums[i+2]];\n    }\n    return result;\n}\n", "\n}\n",
  "    let roman=\"\";\n    let l=[\"m\",\"d\",\"c\",\"l\",\"x\",\"v\",\"i\"];\n \
    \   let n=[1000,500,100,50,10,5,1];\n    for(let i=0;i<7;i++){\n        while(number>=n[i]){\n\
    \            number-=n[i];\n            roman+=l[i];\n        }\n    }\n    roman=roman.replace(/mm*/,\"\
    m\");\n    roman=roman.replace(/dd*/,\"d\");\n    roman=roman.replace(/cc*/,\"\
    c\");\n    roman=roman.replace(/ll*/,\"l\");\n    roman=roman.replace(/xx*/,\"\
    x\");\n    roman=roman.replace(/vv*/,\"v\");\n    roman=roman.replace(/ii*/,\"\
    i\");\n    return roman;\n}", "    var romNum = { M:1000, CM:900, D:500, CD:400,\
    \ C:100, XC:90, L:50, XL:40, X:10, IX:9, V:5, IV:4, I:1 };\n    var roman = '';\n\
    \    while (number){\n        for (var key in romNum){\n            if (number\
    \ >= romNum[key]){\n                roman += key;\n                number -= romNum[key];\n\
    \                break;\n            }\n        }\n    }\n    return roman;\n\
    }\n", "  // Write your code here, and\n  // return your final answer.\n  var result\
    \ = \"\";\n  while (number >= 1000) {\n    result += \"m\";\n    number -= 1000;\n\
    \  }\n  while (number >= 900) {\n    result += \"cm\";\n    number -= 900;\n \
    \ }\n  while (number >= 500) {\n    result += \"d\";\n    number -= 500;\n  }\n\
    \  while (number >= 400) {\n    result += \"cd\";\n    number -= 400;\n  }\n \
    \ while (number >= 100) {\n    result += \"c\";\n    number -= 100;\n  }\n  while\
    \ (number >= 90) {\n    result += \"xc\";\n    number -= 90;\n  }\n  while (number\
    \ >= 50) {\n    result += \"l\";\n    number -= 50;\n  }\n  while (number >= 40)\
    \ {\n    result += \"xl\";\n    number -= 40;\n  }\n  while (number >= 10) {\n\
    \    result += \"x\";\n    number -= 10;\n  }\n  while (number >= 9) {\n    result\
    \ += \"ix\";\n    number -= 9;\n  }\n  while (number >= 5) {\n    result += \"\
    v\";\n    number -= 5;\n  }\n  while (number >= 4) {\n    result += \"iv\";\n\
    \    number -= 4;\n  }\n  while (number >= 1) {\n    result += \"i\";\n    number\
    \ -= 1;\n  }\n  return result;\n}", "    var number_string = number.toString();\n\
    \    var number_length = number_string.length;\n    var mini_romans = [\"\",\"\
    i\",\"ii\",\"iii\",\"iv\",\"v\",\"vi\",\"vii\",\"viii\",\"ix\"];\n    var tens\
    \ = [0,0,0];\n    if (number_length > 2){\n        tens[0] = mini_romans[parseInt(number_string[number_length-3])];\n\
    \    }\n    if (number_length > 1){\n        tens[1] = mini_romans[parseInt(number_string[number_length-2])];\n\
    \    }\n    tens[2] = mini_romans[parseInt(number_string[number_length-1])];\n\
    \    var tens_string = \"\";\n    for (var i = 0; i < tens.length; i++){\n   \
    \     tens_string += tens[i];\n    }\n    return tens_string;\n}", "  const romans\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm'\n  };\n  let num = number;\n  let counter = 0;\n\
    \  let tempNum = 0;\n  let result = '';\n  while (num > 0) {\n    tempNum = num\
    \ % 10;\n    if (tempNum === 4) {\n      result = romans[Math.pow(10, counter)]\
    \ + romans[5 * Math.pow(10, counter)] + result;\n    } else if (tempNum === 9)\
    \ {\n      result = romans[Math.pow(10, counter)] + romans[10 * Math.pow(10, counter)]\
    \ + result;\n    } else if (tempNum >= 5) {\n      result = romans[5 * Math.pow(10,\
    \ counter)] + romans[Math.pow(10, counter)].repeat(tempNum - 5) + result;\n  \
    \  } else {\n      result = romans[Math.pow(10, counter)].repeat(tempNum) + result;\n\
    \    }\n    num = Math.floor(num / 10);\n    counter++;\n  }\n  return result;\n\
    }", "    // constructor of the switch\n    let roman = \"\";\n    switch(true){\n\
    \        case number === 1:\n            roman = 'i';\n            break;\n  \
    \      case number === 2:\n            roman = 'ii';\n            break;\n   \
    \     case number === 3:\n            roman = 'iii';\n            break;\n   \
    \     case number === 4:\n            roman = 'iv';\n            break;\n    \
    \    case number === 5:\n            roman = 'v';\n            break;\n      \
    \  case number === 6:\n            roman = 'vi';\n            break;\n       \
    \ case number === 7:\n            roman = 'vii';\n            break;\n       \
    \ case number === 8:\n            roman = 'viii';\n            break;\n      \
    \  case number === 9:\n            roman = 'ix';\n            break;\n       \
    \ case number === 10:\n            roman = 'x';\n            break;\n        case\
    \ number === 20:\n            roman = 'xx';\n            break;\n        case\
    \ number === 30:\n            roman = 'xxx';\n            break;\n        case\
    \ number === 40:\n            roman = 'xl';\n            break;\n        case\
    \ number === 50:\n            roman = 'l';\n            break;\n        case number\
    \ === 60:\n            roman = 'lx';\n            break;\n        case number\
    \ === 70:\n            roman = 'lxx';\n            break;\n        case number\
    \ === 80:\n            roman = 'lxxx';\n            break;\n        case number\
    \ === 90:\n            roman = 'xc';\n            break;\n        case number\
    \ === 100:\n            roman = 'c';\n            break;\n        case number\
    \ === 200:\n            roman = 'cc';\n            break;\n        case number\
    \ === 300:\n            roman = 'ccc';\n            break;\n        case number\
    \ === 400:\n            roman = 'cd';\n            break;\n        case number\
    \ === 500:\n            roman = 'd';\n            break;\n        case number\
    \ === 600:\n            roman = 'dc';\n            break;\n        case number\
    \ === 700:\n            roman = 'dcc';\n            break;\n        case number\
    \ === 800:\n", "    var romans = [\n        ['', 'i', 'ii', 'iii', 'iv', 'v',\
    \ 'vi', 'vii', 'viii', 'ix'],\n        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx',\
    \ 'lxx', 'lxxx', 'xc'],\n        ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc',\
    \ 'dccc', 'cm'],\n        ['', 'm', 'mm', 'mmm', 'mmmm', 'mmmmm', 'mmmmmm', 'mmmmmmm',\
    \ 'mmmmmmmm', 'mmmmmmmmm']\n    ];\n    var digits = number.toString().split('').reverse().map(function(item,\
    \ index) {\n        return parseInt(item);\n    });\n    var result = '';\n  \
    \  for (var i = 0; i < digits.length; i++) {\n        result = romans[i][digits[i]]\
    \ + result;\n    }\n    return result;\n}", "    var roman = \"\";\n    var minus;\n\
    \    while(number>0){\n        minus = findMinus(number);\n        number -= minus;\n\
    \        roman += minus_to_roman(minus);\n    }\n    return roman;\n}", "  //\
    \ Guard\n  if (number < 1 || number > 1000) { return \"Invalid Number\"; }\n \
    \ if (number === 1000) { return \"m\"; }\n  // Break the number down into \"hundreds\"\
    , \"tens\", and \"ones\"\n  let roman_numeral = \"\";\n  let num_ones = number\
    \ % 10;\n  let num_tens = Math.floor(number / 10) % 10;\n  let num_hundreds =\
    \ Math.floor(number / 100) % 10;\n  // Hundreds\n  if (num_hundreds > 0) {\n \
    \   roman_numeral += \"c\".repeat(num_hundreds);\n  }\n  // Tens\n  if (num_tens\
    \ === 1) {\n    roman_numeral += \"x\";\n  } else if (num_tens === 2) {\n    roman_numeral\
    \ += \"xx\";\n  } else if (num_tens === 3) {\n    roman_numeral += \"xxx\";\n\
    \  } else if (num_tens === 4) {\n    roman_numeral += \"xl\";\n  } else if (num_tens\
    \ === 5) {\n    roman_numeral += \"l\";\n  } else if (num_tens === 6) {\n    roman_numeral\
    \ += \"lx\";\n  } else if (num_tens === 7) {\n    roman_numeral += \"lxx\";\n\
    \  } else if (num_tens === 8) {\n    roman_numeral += \"lxxx\";\n  } else if (num_tens\
    \ === 9) {\n    roman_numeral += \"xc\";\n  }\n  // Ones\n  if (num_ones === 1)\
    \ {\n    roman_numeral += \"i\";\n  } else if (num_ones === 2) {\n    roman_numeral\
    \ += \"ii\";\n  } else if (num_ones === 3) {\n    roman_numeral += \"iii\";\n\
    \  } else if (num_ones === 4) {\n    roman_numeral += \"iv\";\n  } else if (num_ones\
    \ === 5) {\n    roman_numeral += \"v\";\n ", "    // code code code\n}\n", " \
    \   let result = '';\n    let romanNumerals = [[1000, 'm'], [900, 'cm'], [500,\
    \ 'd'], [400, 'cd'], [100, 'c'], [90, 'xc'], [50, 'l'], [40, 'xl'], [10, 'x'],\
    \ [9, 'ix'], [5, 'v'], [4, 'iv'], [1, 'i']];\n    for (let i = 0; i < romanNumerals.length;\
    \ i++) {\n        while (number >= romanNumerals[i][0]) {\n            result\
    \ += romanNumerals[i][1];\n            number -= romanNumerals[i][0];\n      \
    \  }\n    }\n    return result;\n}\n", "    var roman = [\"i\", \"v\", \"x\",\
    \ \"l\", \"c\", \"d\", \"m\"];\n    var output = \"\";\n    var thousands = Math.floor(number\
    \ / 1000);\n    var five_hundreds = Math.floor((number % 1000) / 500);\n    var\
    \ hundreds = Math.floor((number % 500) / 100);\n    var fiftys = Math.floor((number\
    \ % 100) / 50);\n    var tens = Math.floor((number % 50) / 10);\n    var fives\
    \ = Math.floor((number % 10) / 5);\n    var ones = Math.floor(number % 5);\n \
    \   var temp = \"\";\n    var count = 0;\n    while(count < thousands){\n    \
    \    temp += roman[6];\n        count++;\n    }\n    output += temp;\n    temp\
    \ = \"\";\n    count = 0;\n    while(count < five_hundreds){\n        temp +=\
    \ roman[5];\n        count++;\n    }\n    output += temp;\n    temp = \"\";\n\
    \    count = 0;\n    while(count < hundreds){\n        temp += roman[4];\n   \
    \     count++;\n    }\n    output += temp;\n    temp = \"\";\n    count = 0;\n\
    \    while(count < fiftys){\n        temp += roman[3];\n        count++;\n   \
    \ }\n    output += temp;\n    temp = \"\";\n    count = 0;\n    while(count <\
    \ tens){\n        temp += roman[2];\n        count++;\n    }\n    output += temp;\n\
    \    temp = \"\";\n    count = 0;\n    while(count < fives){\n        temp +=\
    \ roman[1];\n        count++;\n    }\n    output += temp;\n    temp = \"\";\n\
    \    count = 0;\n    while(count < ones){\n        temp += roman[0];\n       \
    \ count++;\n    }\n    output += temp;\n    console.log(output);\n    return output;\n\
    }\n\nint_to_mini_roman(16); // xvi\nint_to_mini_roman(798); // dccxcviii\nint_to_mini_roman(2);\
    \ // ii\nint_to_", "  var roman = '';\n  if (number >= 1 && number <= 3) {\n \
    \   roman = 'i'.repeat(number);\n  } else if (number === 4) {\n    roman = 'iv';\n\
    \  } else if (number >= 5 && number <= 8) {\n    roman = 'v' + 'i'.repeat(number\
    \ - 5);\n  } else if (number === 9) {\n    roman = 'ix';\n  } else if (number\
    \ >= 10 && number <= 39) {\n    roman = 'x'.repeat(number / 10) + int_to_mini_roman(number\
    \ % 10);\n  } else if (number >= 40 && number <= 49) {\n    roman = 'xl' + int_to_mini_roman(number\
    \ % 10);\n  } else if (number >= 50 && number <= 89) {\n    roman = 'l' + int_to_mini_roman(number\
    \ % 10);\n  } else if (number >= 90 && number <= 99) {\n    roman = 'xc' + int_to_mini_roman(number\
    \ % 10);\n  } else if (number >= 100 && number <= 399) {\n    roman = 'c'.repeat(number\
    \ / 100) + int_to_mini_roman(number % 100);\n  } else if (number >= 400 && number\
    \ <= 499) {\n    roman = 'cd' + int_to_mini_roman(number % 100);\n  } else if\
    \ (number >= 500 && number <= 899) {\n    roman = 'd' + int_to_mini_roman(number\
    \ % 100);\n  } else if (number >= 900 && number <= 999) {\n    roman = 'cm' +\
    \ int_to_mini_roman(number % 100);\n  } else if (number === 1000) {\n    roman\
    \ = 'm';\n  }\n  return roman;\n}", "  var roman = \"\";\n  var arabic_numbers\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n  var roman_numbers\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n  for (var i = 0; i < arabic_numbers.length; i++) {\n\
    \    while (number >= arabic_numbers[i]) {\n      roman += roman_numbers[i];\n\
    \      number -= arabic_numbers[i];\n    }\n  }\n  return roman;\n}", "    \n\
    \    if (number > 1000 || number < 1){\n        return 'Number must be greater\
    \ than zero and less than or equal to 1000.';\n    }\n    \n    // Need to divide\
    \ number and add to string, starting with highest number:\n    var roman = '';\n\
    \    while (number >= 1000){\n        roman += 'm';\n        number -= 1000;\n\
    \    }\n    while (number >= 500){\n        roman += 'd';\n        number -= 500;\n\
    \    }\n    while (number >= 100){\n        roman += 'c';\n        number -= 100;\n\
    \    }\n    while (number >= 50){\n        roman += 'l';\n        number -= 50;\n\
    \    }\n    while (number >= 10){\n        roman += 'x';\n        number -= 10;\n\
    \    }\n    while (number >= 5){\n        roman += 'v';\n        number -= 5;\n\
    \    }\n    while (number >= 1){\n        roman += 'i';\n        number -= 1;\n\
    \    }\n    \n    return roman;\n}\n", "    const symbols = {\n        1000: 'm',\n\
    \        900: 'cm',\n        500: 'd',\n        400: 'cd',\n        100: 'c',\n\
    \        90: 'xc',\n        50: 'l',\n        40: 'xl',\n        10: 'x',\n  \
    \      9: 'ix',\n        5: 'v',\n        4: 'iv',\n        1: 'i'\n    };\n \
    \   let roman = '';\n    for (let i in symbols) {\n        while (number >= i)\
    \ {\n            roman += symbols[i];\n            number -= i;\n        }\n \
    \   }\n    return roman;\n}", "  var roman_number = \"\";\n  var remainder = number;\n\
    \  var roman_numerals = {1000:\"m\", 500:\"d\", 100:\"c\", 50:\"l\", 10:\"x\"\
    , 5:\"v\", 1:\"i\"};\n  while (remainder > 0){\n    for (var key in roman_numerals){\n\
    \      while (remainder >= key){\n        roman_number += roman_numerals[key];\n\
    \        remainder -= key;\n      }\n    }\n  }\n  return roman_number;\n}", " \
    \   var string = \"\";\n    if (number >= 10){\n        if (number == 10){\n \
    \           string += \"x\";\n        } else if (number < 20){\n            string\
    \ += \"x\";\n            var number = number - 10;\n            string += int_to_mini_roman(number);\n\
    \        } else if (number == 20){\n            string += \"xx\";\n        } else\
    \ if (number < 30){\n            string += \"xx\";\n            var number = number\
    \ - 20;\n            string += int_to_mini_roman(number);\n        } else if (number\
    \ == 30){\n            string += \"xxx\";\n        } else if (number < 40){\n\
    \            string += \"xxx\";\n            var number = number - 30;\n     \
    \       string += int_to_mini_roman(number);\n        } else if (number == 40){\n\
    \            string += \"xl\";\n        } else if (number < 50){\n           \
    \ string += \"xl\";\n            var number = number - 40;\n            string\
    \ += int_to_mini_roman(number);\n        } else if (number == 50){\n         \
    \   string += \"l\";\n        } else if (number < 60){\n            string +=\
    \ \"l\";\n            var number = number - 50;\n            string += int_to_mini_roman(number);\n\
    \        } else if (number == 60){\n            string += \"lx\";\n        } else\
    \ if (number < 70){\n            string += \"lx\";\n            var number = number\
    \ - 60;\n            string += int_to_mini_roman(number);\n        } else if (number\
    \ == 70){\n            string += \"lxx\";\n        } else if (number < 80){\n\
    \            string += \"lxx\";\n            var number = number - 70;\n     \
    \       string += int_to_mini_roman(number);\n        } else if (number == 80){\n\
    \            string += \"lxxx\";\n        } else if (number < 90){\n         \
    \   string += \"lxxx\";\n            var number = number - 80;\n            string\
    \ += int_to_mini_roman(number);\n        } else if (number == 90){\n         \
    \   string += \"xc\";\n        } else if (number < 100){\n            string +=\
    \ \"xc\";\n", "    if (number > 0 && number <= 1000) {\n        var response =\
    \ \"\";\n        var factors = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900,\
    \ 1000];\n        var numerals = [\"i\", \"iv\", \"v\", \"ix\", \"x\", \"xl\"\
    , \"l\", \"xc\", \"c\", \"cd\", \"d\", \"cm\", \"m\"];\n        var i = 12;\n\
    \        while (number > 0) {\n            while (number >= factors[i]) {\n  \
    \              response += numerals[i];\n                number -= factors[i];\n\
    \            }\n            i--;\n        }\n        return response;\n    }\n\
    \    return \"Restrictions: 1 <= num <= 1000\";\n}\n", "    var roman = '';\n\
    \    var romanNumeral = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (var prop in romanNumeral) {\n        while (number >=\
    \ romanNumeral[prop]) {\n            roman += prop;\n            number -= romanNumeral[prop];\n\
    \        }\n    }\n    return roman;\n}", "\tvar numerals = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1};\n\
    \tvar res = '';\n\tfor(var key in numerals){\n\t\tvar num = numerals[key];\n\t\
    \twhile(number >= num){\n\t\t\tres += key;\n\t\t\tnumber -= num;\n\t\t}\n\t}\n\
    \treturn res;\n}\n", "    var roman = ['i', 'v', 'x', 'l', 'c', 'd', 'm'];\n \
    \   var val = [1, 5, 10, 50, 100, 500, 1000];\n    var str = \"\";\n    for(var\
    \ i = val.length-1; i >= 0; i--){\n        var digit = Math.floor(number/val[i]);\n\
    \        if(digit === 4){\n            str += roman[i] + roman[i+1];\n       \
    \ }\n        else if(digit === 9){\n            str += roman[i] + roman[i+2];\n\
    \        }\n        else{\n            if(digit >= 5){\n                str +=\
    \ roman[i+1];\n                digit -= 5;\n            }\n            while(digit\
    \ > 0){\n                str += roman[i];\n                digit--;\n        \
    \    }\n        }\n        number %= val[i];\n    }\n    return str;\n}", "  var\
    \ roman = {M:1000,CM:900,D:500,CD:400,C:100,XC:90,L:50,XL:40,X:10,IX:9,V:5,IV:4,I:1}\n\
    \  var result = '';\n  for (var key in roman){\n    if (number >= roman[key]){\n\
    \      result += key.repeat(Math.floor(number/roman[key]));\n      number %= roman[key];\n\
    \    }\n  }\n  return result;\n}\n", "\tvar RomanNumerals = [\"\",\"I\",\"II\"\
    ,\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\",\"X\"];\n\tif(1 <= number\
    \ && number <= 10){\n\t\treturn RomanNumerals[number];\n\t}\n\telse{\n\t\treturn\
    \ \"\";\n\t}\n}\n\nint_to_mini_roman(5); // \"v\"\nint_to_mini_roman(3); // \"\
    iii\"\nint_to_mini_roman(7); // \"vii\"\nint_to_mini_roman(10); // \"x\"\nint_to_mini_roman(50);\
    \ // \"\"\nint_to_mini_roman(0); // \"\"\nint_to_mini_roman(500); // \"\"\nint_to_mini_roman(2000);\
    \ // \"\"\nint_to_mini_roman(9999); // \"\"\nint_to_mini_roman(10000); // \"\"\
    \n", "    var roman_numerals = [\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"\
    ];\n    var divisor = [ 1, 5, 10, 50, 100, 500, 1000];\n    var n = 0;\n    var\
    \ result = \"\";\n    while (number > 0){\n        if (number < divisor[n]) {\n\
    \            n--;\n        }\n        else {\n            if (divisor[n] === 1)\
    \ {\n                result += roman_numerals[n];\n            }\n           \
    \ else {\n                if (divisor[n] % 10 == 0) {\n                    result\
    \ += roman_numerals[n];\n                }\n                else {\n         \
    \           result += roman_numerals[n] + roman_numerals[n - 1];\n           \
    \     }\n            }\n            number -= divisor[n];\n        }\n       \
    \ n++;\n    }\n    return result;\n}\n", "    if (number < 1)\n        return\
    \ null;\n    if (number > 1000)\n        return null;\n    var symbol = { 1: 'i',\
    \ 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm' };\n    var number_string\
    \ = String(number);\n    var split_numbers = number_string.split('');\n    var\
    \ output = '';\n    if (split_numbers.length == 4) {\n        for (i = 0; i <\
    \ split_numbers[0]; i++) {\n            output += symbol[1000];\n        }\n \
    \       split_numbers.shift();\n    }\n    if (split_numbers.length == 3) {\n\
    \        if (split_numbers[0] == 9) {\n            output += symbol[100] + symbol[1000];\n\
    \            split_numbers.shift();\n        }\n        else if (split_numbers[0]\
    \ == 4) {\n            output += symbol[100] + symbol[500];\n            split_numbers.shift();\n\
    \        }\n        else if (split_numbers[0] > 5) {\n            output += symbol[500];\n\
    \            for (i = 0; i < split_numbers[0] - 5; i++) {\n                output\
    \ += symbol[100];\n            }\n            split_numbers.shift();\n       \
    \ }\n        else if (split_numbers[0] > 0) {\n            for (i = 0; i < split_numbers[0];\
    \ i++) {\n                output += symbol[100];\n            }\n            split_numbers.shift();\n\
    \        }\n    }\n    if (split_numbers.length == 2) {\n        if (split_numbers[0]\
    \ == 9) {\n            output += symbol[10] + symbol[100];\n            split_numbers.shift();\n\
    \        }\n        else if (split_numbers[0] == 4) {\n            output += symbol[10]\
    \ + symbol[50];\n            split_numbers.shift();\n        }\n        else if\
    \ (split_numbers[0] > 5) {\n            output += symbol[50];\n            for\
    \ (i = 0", "  let digits = [1000,900,500,400,100,90,50,40,10,9,5,4,1];\n  let\
    \ roman = [\"m\",\"cm\",\"d\",\"cd\",\"c\",\"xc\",\"l\",\"xl\",\"x\",\"ix\",\"\
    v\",\"iv\",\"i\"];\n  let result = \"\";\n  for(let i = 0; i < digits.length;\
    \ i++){\n    while(number >= digits[i]){\n      result += roman[i];\n      number\
    \ -= digits[i];\n    }\n  }\n  return result;\n}", "    if (number < 1 || number\
    \ > 1000) return null;\n    let romans = {1: 'i', 5: 'v', 10: 'x', 50: 'l', 100:\
    \ 'c', 500: 'd', 1000: 'm'};\n    const num_list = [1000, 500, 100, 50, 10, 5,\
    \ 1];\n    let roman = '';\n    for (let i = 0; i < num_list.length; i++){\n \
    \       let count = 0;\n        while (number >= num_list[i]){\n            count++;\n\
    \            number -= num_list[i];\n        }\n        if (count === 1){\n  \
    \          roman += romans[num_list[i]];\n        }\n        else if (count ===\
    \ 2){\n            roman += romans[num_list[i]] + romans[num_list[i]];\n     \
    \   }\n        else if (count === 3){\n            roman += romans[num_list[i]]\
    \ + romans[num_list[i]] + romans[num_list[i]];\n        }\n        else if (count\
    \ === 4){\n            roman += romans[num_list[i]] + romans[num_list[i+1]];\n\
    \        }\n        else if (count === 5){\n            roman += romans[num_list[i+1]];\n\
    \        }\n        else if (count === 6){\n            roman += romans[num_list[i+1]]\
    \ + romans[num_list[i]];\n        }\n        else if (count === 7){\n        \
    \    roman += romans[num_list[i+1]] + romans[num_list[i]] + romans[num_list[i]];\n\
    \        }\n        else if (count === 8){\n            roman += romans[num_list[i+1]]\
    \ + romans[num_list[i]] + romans[num_list[i]] + romans[num_list[i]];\n       \
    \ }\n        else if (count === 9){\n            roman += romans[num_list[i]]\
    \ + romans[num_list[i+2]];\n        }\n    }", "    if(isNaN(number)){\n     \
    \   return \"It's not a number\";\n    }else if(number < 1 || number > 1000){\n\
    \        return \"Number not in range\";\n    }else{\n        var roman_num =\
    \ [\"i\", \"v\", \"x\", \"l\", \"c\", \"d\", \"m\"],\n            num = number.toString().split(\"\
    \").reverse(),\n            decimal = [1, 5, 10, 50, 100, 500, 1000],\n      \
    \      roman = \"\";\n        for(var i = 0; i < num.length; i++){\n         \
    \   num[i] = parseInt(num[i]);\n            if(num[i] == 0){\n               \
    \ continue;\n            }else if(num[i] <= 3){\n                for(var j = 0;\
    \ j < num[i]; j++){\n                    roman = roman_num[i] + roman;\n     \
    \           }\n            }else if(num[i] == 4){\n                roman = roman_num[i]\
    \ + roman_num[i+1] + roman;\n            }else if(num[i] == 5){\n            \
    \    roman = roman_num[i+1] + roman;\n            }else if(num[i] > 5 && num[i]\
    \ < 9){\n                for(var j = 0; j < num[i] - 5; j++){\n              \
    \      roman = roman_num[i] + roman;\n                }\n                roman\
    \ = roman_num[i+1] + roman;\n            }else if(num[i] == 9){\n            \
    \    roman = roman_num[i] + roman_num[i+2] + roman;\n            }\n        }\n\
    \        return roman;\n    }\n}", "    var roman = '';\n    var map = {\n   \
    \     1000: 'm',\n        900: 'cm',\n        500: 'd',\n        400: 'cd',\n\
    \        100: 'c',\n        90: 'xc',\n        50: 'l',\n        40: 'xl',\n \
    \       10: 'x',\n        9: 'ix',\n        5: 'v',\n        4: 'iv',\n      \
    \  1: 'i'\n    };\n    for (i in map) {\n        while (number >= i) {\n     \
    \       roman += map[i];\n            number -= i;\n        }\n    }\n    return\
    \ roman;\n}", "    var result = [];\n    var numeral = new Map([\n        [1000,\
    \ 'm'],\n        [900, 'cm'],\n        [500, 'd'],\n        [400, 'cd'],\n   \
    \     [100, 'c'],\n        [90, 'xc'],\n        [50, 'l'],\n        [40, 'xl'],\n\
    \        [10, 'x'],\n        [9, 'ix'],\n        [5, 'v'],\n        [4, 'iv'],\n\
    \        [1, 'i']\n    ]);\n    var arr = Array.from(numeral.keys());\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(number >= arr[i]){\n            number\
    \ -= arr[i];\n            result.push(numeral.get(arr[i]));\n            i--;\n\
    \        }\n    }\n    return result.join('');\n}", "    var numerals = {\n  \
    \    1: 'i',\n      4: 'iv',\n      5: 'v',\n      9: 'ix',\n      10: 'x',\n\
    \      40: 'xl',\n      50: 'l',\n      90: 'xc',\n      100: 'c',\n      400:\
    \ 'cd',\n      500: 'd',\n      900: 'cm',\n      1000: 'm'\n    };\n    var sortedKeys\
    \ = Object.keys(numerals).reverse();\n    var miniRoman = '';\n    for (var i\
    \ = 0; i < sortedKeys.length; i++) {\n      var k = sortedKeys[i];\n      while\
    \ (number >= k) {\n        miniRoman += numerals[k];\n        number -= k;\n \
    \     }\n    }\n    return miniRoman;\n  }", "  var roman = '';\n  var ones =\
    \ ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n  var tens =\
    \ ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'];\n  var hundreds\
    \ = ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'];\n  if (number\
    \ >= 100) {\n    roman += hundreds[Math.floor(number / 100)];\n    number %= 100;\n\
    \  }\n  if (number >= 10) {\n    roman += tens[Math.floor(number / 10)];\n   \
    \ number %= 10;\n  }\n  roman += ones[number];\n  return roman;\n}\n", "    var\
    \ number_to_roman = {\"M\":1000, \"CM\":900, \"D\":500, \"CD\":400, \"C\":100,\
    \ \"XC\":90, \"L\":50, \"XL\":40, \"X\":10, \"IX\":9, \"V\":5, \"IV\":4, \"I\"\
    :1};\n    var roman_to_number = {1000:\"M\", 900:\"CM\", 500:\"D\", 400:\"CD\"\
    , 100:\"C\", 90:\"XC\", 50:\"L\", 40:\"XL\", 10:\"X\", 9:\"IX\", 5:\"V\", 4:\"\
    IV\", 1:\"I\"};\n    var digits = [];\n    var roman_numeral = \"\";\n    while(number\
    \ > 0){\n        for(var key in number_to_roman){\n            if(number >= number_to_roman[key]){\n\
    \                digits.push(number_to_roman[key]);\n                number -=\
    \ number_to_roman[key];\n                break;\n            }\n        }\n  \
    \  }\n    for(var i = 0; i < digits.length; i++){\n        roman_numeral += roman_to_number[digits[i]];\n\
    \    }\n    return roman_numeral.toLowerCase();\n}", "  var result = \"\";\n \
    \ var num = number;\n  var romans = [[\"I\", 1], [\"V\", 5], [\"X\", 10], [\"\
    L\", 50], [\"C\", 100], [\"D\", 500], [\"M\", 1000]];\n  var index = romans.length\
    \ - 1;\n  while (num > 0){\n    while (romans[index][1] > num){\n      index -=\
    \ 1;\n    }\n    result += romans[index][0];\n    num -= romans[index][1];\n \
    \ }\n  return result;\n}", "  var ones = [\"\", \"i\", \"ii\", \"iii\", \"iv\"\
    , \"v\", \"vi\", \"vii\", \"viii\", \"ix\"];\n  var tens = [\"\", \"x\", \"xx\"\
    , \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"];\n  var hundreds\
    \ = [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"\
    cm\"];\n  var thousands = [\"\", \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\"\
    , \"vmm\", \"vmmm\", \"mx\"];\n  var str = \"\";\n  var h = (number % 10000) /\
    \ 1000;\n  var t = (number % 1000) / 100;\n  var o = (number % 100) / 10;\n  var\
    \ u = number % 10;\n  str += thousands[h];\n  str += hundreds[t];\n  str += tens[o];\n\
    \  str += ones[u];\n  return str;\n}\n", "    if(number < 1 || number > 1000){\n\
    \        return \"INVALID NUMBER!\";\n    }else{\n        let roman = \"\";\n\
    \        let romanNumerals = {\n            \"M\": 1000,\n            \"CM\":\
    \ 900,\n            \"D\": 500,\n            \"CD\": 400,\n            \"C\":\
    \ 100,\n            \"XC\": 90,\n            \"L\": 50,\n            \"XL\": 40,\n\
    \            \"X\": 10,\n            \"IX\": 9,\n            \"V\": 5,\n     \
    \       \"IV\": 4,\n            \"I\": 1\n        };\n        for(let numeral\
    \ in romanNumerals){\n            while(number >= romanNumerals[numeral]){\n \
    \               roman += numeral;\n                number -= romanNumerals[numeral];\n\
    \            }\n        }\n        return roman;\n    }\n}", "    roman = ['i',\
    \ 'v', 'x', 'l', 'c', 'd', 'm'];\n    num = \"\";\n    if (number >= 1000) {\n\
    \        num += roman[6].repeat(number/1000);\n        number = number % 1000;\n\
    \    }\n    if (number >= 100) {\n        if (number / 100 == 4) {\n         \
    \   num += roman[4] + roman[5];\n        } else if (number / 100 == 9) {\n   \
    \         num += roman[4] + roman[6];\n        } else if (number / 100 >= 5) {\n\
    \            num += roman[5] + roman[4].repeat((number/100)%5);\n        } else\
    \ {\n            num += roman[4].repeat(number/100);\n        }\n        number\
    \ = number % 100;\n    }\n    if (number >= 10) {\n        if (number / 10 ==\
    \ 4) {\n            num += roman[2] + roman[3];\n        } else if (number / 10\
    \ == 9) {\n            num += roman[2] + roman[4];\n        } else if (number\
    \ / 10 >= 5) {\n            num += roman[3] + roman[2].repeat((number/10)%5);\n\
    \        } else {\n            num += roman[2].repeat(number/10);\n        }\n\
    \        number = number % 10;\n    }\n    if (number == 4) {\n        num +=\
    \ roman[0] + roman[1];\n    } else if (number == 9) {\n        num += roman[0]\
    \ + roman[2];\n    } else if (number >= 5) {\n        num += roman[1] + roman[0].repeat(number%5);\n\
    \    } else {\n        num += roman[0].repeat(number);\n    }\n    return num;\n\
    }\n", "  // Your code here\n  if(number === 1){\n    return 'i';\n  }\n  else\
    \ if(number === 2){\n    return 'ii';\n  }\n  else if(number === 3){\n    return\
    \ 'iii';\n  }\n  else if(number === 4){\n    return 'iv';\n  }\n  else if(number\
    \ === 5){\n    return 'v';\n  }\n  else if(number === 6){\n    return 'vi';\n\
    \  }\n  else if(number === 7){\n    return 'vii';\n  }\n  else if(number === 8){\n\
    \    return 'viii';\n  }\n  else if(number === 9){\n    return 'ix';\n  }\n  else\
    \ if(number === 10){\n    return 'x';\n  }\n  else if(number === 11){\n    return\
    \ 'xi';\n  }\n  else if(number === 12){\n    return 'xii';\n  }\n  else if(number\
    \ === 13){\n    return 'xiii';\n  }\n  else if(number === 14){\n    return 'xiv';\n\
    \  }\n  else if(number === 15){\n    return 'xv';\n  }\n  else if(number === 16){\n\
    \    return 'xvi';\n  }\n  else if(number === 17){\n    return 'xvii';\n  }\n\
    \  else if(number === 18){\n    return 'xviii';\n  }\n  else if(number === 19){\n\
    \    return 'xix';\n  }\n  else if(number === 20){\n    return 'xx';\n  }\n  else\
    \ if(number === 21){\n    return 'xxi';\n  }\n  else if(number === 22){\n    return\
    \ 'xxii';\n  }\n  else if(number === 23){\n    return 'xxiii';\n  }\n  else if(number\
    \ === 24){\n    return 'xxiv';\n  }\n  else if(number === 25){\n    return 'xxv';\n\
    \  }\n  else if(number === 26){\n    return 'xxvi';\n  }\n  else if(number ===\
    \ 27){\n    return 'xxvii';\n  }\n", "  var mappings = {\n      1: 'i',\n    \
    \  5: 'v',\n      10: 'x',\n      50: 'l',\n      100: 'c',\n      500: 'd',\n\
    \      1000: 'm'\n  };\n  var digits = number.toString().split('').reverse();\n\
    \  var result = [];\n  for (var i = 0; i < digits.length; i++) {\n      var digit\
    \ = parseInt(digits[i]);\n      var one = digit == 9 || digit == 4 ? mappings[Math.pow(10,\
    \ i)] : '';\n      var five = digit >= 5 ? mappings[5 * Math.pow(10, i)] : '';\n\
    \      var ten = digit == 9 ? mappings[10 * Math.pow(10, i)] :\n            digit\
    \ >= 5 ? mappings[Math.pow(10, i)] : '';\n      result.unshift(one + five + ten.repeat(digit\
    \ % 5));\n  }\n  return result.join('');\n}", "    var num,roman;\n    var romans\
    \ = {\n        1:'i',\n        2:'ii',\n        3:'iii',\n        4:'iv',\n  \
    \      5:'v',\n        6:'vi',\n        7:'vii',\n        8:'viii',\n        9:'ix',\n\
    \        10:'x',\n        20:'xx',\n        30:'xxx',\n        40:'xl',\n    \
    \    50:'l',\n        60:'lx',\n        70:'lxx',\n        80:'lxxx',\n      \
    \  90:'xc',\n        100:'c',\n        200:'cc',\n        300:'ccc',\n       \
    \ 400:'cd',\n        500:'d',\n        600:'dc',\n        700:'dcc',\n       \
    \ 800:'dccc',\n        900:'cm',\n        1000:'m'\n    };\n    for(num in romans){\n\
    \        //100-999\n        if(number>=100&&number<1000){\n            roman =\
    \ int_to_mini_roman(number%10)+romans[Math.floor(number/10)*10];\n           \
    \ return roman;\n        }\n        //10-99\n        else if(number>=10&&number<100){\n\
    \            roman = int_to_mini_roman(number%10)+romans[Math.floor(number/10)*10];\n\
    \            return roman;\n        }\n        //1-9\n        else if(number>=1&&number<10){\n\
    \            roman = romans[number];\n            return roman;\n        }\n \
    \   }\n}", "    var numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    var roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    var roman_numerals = '';\n\
    \    for (var i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman_numerals += roman[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman_numerals;\n}\n", "    var roman = '';\n  \
    \  var letter = '';\n    var numbers = {\n        'M': 1000,\n        'CM': 900,\n\
    \        'D': 500,\n        'CD': 400,\n        'C': 100,\n        'XC': 90,\n\
    \        'L': 50,\n        'XL': 40,\n        'X': 10,\n        'IX': 9,\n   \
    \     'V': 5,\n        'IV': 4,\n        'I': 1\n    };\n    for (letter in numbers)\
    \ {\n        while (number >= numbers[letter]) {\n            roman += letter;\n\
    \            number -= numbers[letter];\n        }\n    }\n    return roman;\n\
    }", "    const roman = {\n        'I': 1,\n        'V': 5,\n        'X': 10,\n\
    \        'L': 50,\n        'C': 100,\n        'D': 500,\n        'M': 1000\n \
    \   };\n    let res = \"\";\n    const numbers = Object.values(roman);\n    const\
    \ characters = Object.keys(roman);\n    for (let i = numbers.length - 1; i >=\
    \ 0; i--) {\n        const currentNumber = numbers[i];\n        const currentLetter\
    \ = characters[i];\n        if (number < currentNumber) continue;\n        res\
    \ += currentLetter.repeat(Math.floor(number / currentNumber));\n        number\
    \ %= currentNumber;\n    }\n    return res;\n}\n", "  var singles = [\"\",\"i\"\
    ,\"ii\",\"iii\",\"iv\",\"v\",\"vi\",\"vii\",\"viii\",\"ix\"];\n  var tens = [\"\
    \",\"x\",\"xx\",\"xxx\",\"xl\",\"l\",\"lx\",\"lxx\",\"lxxx\",\"xc\"];\n  var hundreds\
    \ = [\"\",\"c\",\"cc\",\"ccc\",\"cd\",\"d\",\"dc\",\"dcc\",\"dccc\",\"cm\"];\n\
    \  var thousands = [\"\",\"m\",\"mm\",\"mmm\",\"mmv\",\"mv\",\"mvv\",\"mvvv\"\
    ,\"mvvvv\",\"mx\"];\n  return thousands[Math.floor(number/1000)] + hundreds[Math.floor((number%1000)/100)]\
    \ + tens[Math.floor((number%100)/10)] + singles[number%10];\n}\n", "  var numeral\
    \ = \"\"\n  while (number > 0){\n    if (number >= 1000){\n      numeral += \"\
    m\"\n      number -= 1000\n    }\n    else if (number >= 900){\n      numeral\
    \ += \"cm\"\n      number -= 900\n    }\n    else if (number >= 500){\n      numeral\
    \ += \"d\"\n      number -= 500\n    }\n    else if (number >= 400){\n      numeral\
    \ += \"cd\"\n      number -= 400\n    }\n    else if (number >= 100){\n      numeral\
    \ += \"c\"\n      number -= 100\n    }\n    else if (number >= 90){\n      numeral\
    \ += \"xc\"\n      number -= 90\n    }\n    else if (number >= 50){\n      numeral\
    \ += \"l\"\n      number -= 50\n    }\n    else if (number >= 40){\n      numeral\
    \ += \"xl\"\n      number -= 40\n    }\n    else if (number >= 10){\n      numeral\
    \ += \"x\"\n      number -= 10\n    }\n    else if (number >= 9){\n      numeral\
    \ += \"ix\"\n      number -= 9\n    }\n    else if (number >= 5){\n      numeral\
    \ += \"v\"\n      number -= 5\n    }\n    else if (number >= 4){\n      numeral\
    \ += \"iv\"\n      number -= 4\n    }\n    else if (number >= 1){\n      numeral\
    \ += \"i\"\n      number -= 1\n    }\n  }\n  return numeral\n}", "    return \"\
    \";\n}\n", "  if(number <= 0){\n    return null;\n  }\n  if(number > 1000){\n\
    \    return null;\n  }\n  var mini_roman_numeral = '';\n  if(number >= 100){\n\
    \    mini_roman_numeral += 'c';\n    number -= 100;\n  }\n  if(number >= 90){\n\
    \    mini_roman_numeral += 'xc';\n    number -= 90;\n  }\n  if(number >= 50){\n\
    \    mini_roman_numeral += 'l';\n    number -= 50;\n  }\n  if(number >= 40){\n\
    \    mini_roman_numeral += 'xl';\n    number -= 40;\n  }\n  if(number >= 10){\n\
    \    mini_roman_numeral += 'x';\n    number -= 10;\n  }\n  if(number >= 9){\n\
    \    mini_roman_numeral += 'ix';\n    number -= 9;\n  }\n  if(number >= 5){\n\
    \    mini_roman_numeral += 'v';\n    number -= 5;\n  }\n  if(number >= 4){\n \
    \   mini_roman_numeral += 'iv';\n    number -= 4;\n  }\n  if(number >= 1){\n \
    \   mini_roman_numeral += 'i';\n    number -= 1;\n  }\n  return mini_roman_numeral;\n\
    }\n", "    let number_convert = {1:'i',5:'v',10:'x',50:'l',100:'c',500:'d',1000:'m'};\n\
    \    let string=\"\";\n    let times = Math.trunc(number/10);\n    let remainder\
    \ = number%10;\n    for(let i=0;i<times;i++){\n        string+=\"x\";\n    }\n\
    \    if(remainder<=3){\n        for(let i=0;i<remainder;i++){\n            string+=number_convert[1];\n\
    \        }\n    }else if(remainder==4){\n        string+=\"xv\";\n    }else if(remainder<=8){\n\
    \        string+=\"v\";\n        for(let i=5;i<remainder;i++){\n            string+=number_convert[1];\n\
    \        }\n    }else{\n        string+=\"xl\";\n    }\n    return string;\n}\n",
  "  var result = \"\";\n  var i;\n  var dict = {M:1000, CM:900, D:500, CD:400, C:100,\
    \ XC:90, L:50, XL:40, X:10, IX:9, V:5, IV:4, I:1};\n  for (i in dict) {\n    while\
    \ (number >= dict[i]) {\n      result += i;\n      number -= dict[i];\n    }\n\
    \  }\n  return result;\n}\n\nint_to_mini_roman(1000);", "    var roman = {\n \
    \       1000: 'm',\n        900: 'cm',\n        500: 'd',\n        400: 'cd',\n\
    \        100: 'c',\n        90: 'xc',\n        50: 'l',\n        40: 'xl',\n \
    \       10: 'x',\n        9: 'ix',\n        5: 'v',\n        4: 'iv',\n      \
    \  1: 'i'\n    };\n    var roman_num = '';\n    for (var key in roman){\n    \
    \    roman_num += roman[key].repeat(Math.floor(number / key));\n        number\
    \ %= key;\n    }\n    return roman_num;\n}\nvar num = 3;", "    var roman = ['m',\
    \ 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    var\
    \ decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    var result\
    \ = '';\n    while (number){\n        var i = 0;\n        while (number < decimal[i]){\n\
    \            i++;\n        }\n        result += roman[i];\n        number -= decimal[i];\n\
    \    }\n    return result;\n}", "    if (number < 1 || number > 1000)\n      \
    \  return false;\n    if (number >= 100)\n        return (\"c\" + int_to_mini_roman(number\
    \ - 100));\n    if (number >= 90)\n        return (\"xc\" + int_to_mini_roman(number\
    \ - 90));\n    if (number >= 50)\n        return (\"l\" + int_to_mini_roman(number\
    \ - 50));\n    if (number >= 40)\n        return (\"xl\" + int_to_mini_roman(number\
    \ - 40));\n    if (number >= 10)\n        return (\"x\" + int_to_mini_roman(number\
    \ - 10));\n    if (number >= 9)\n        return (\"ix\" + int_to_mini_roman(number\
    \ - 9));\n    if (number >= 5)\n        return (\"v\" + int_to_mini_roman(number\
    \ - 5));\n    if (number >= 4)\n        return (\"iv\" + int_to_mini_roman(number\
    \ - 4));\n    if (number >= 1)\n        return (\"i\" + int_to_mini_roman(number\
    \ - 1));\n    return \"\";\n}\n\n", "    var roman = \"\";\n    var romanNumbers\
    \ = ['I', 'V', 'X', 'L', 'C', 'D', 'M'];\n    var numbers = [1, 5, 10, 50, 100,\
    \ 500, 1000];\n    var length = numbers.length - 1;\n    var decimal = number;\n\
    \    var prev = 0;\n    while(length >= 0){\n        var cur = numbers[length];\n\
    \        var prev = numbers[length + 1];\n        var next = numbers[length -\
    \ 1];\n        if(decimal / cur >= 1){\n            roman += romanNumbers[length];\n\
    \            decimal -= cur;\n        } else if(decimal + next >= cur){\n    \
    \        roman += romanNumbers[length - 1] + romanNumbers[length];\n         \
    \   decimal -= cur - next;\n        } else if(decimal + prev >= cur){\n      \
    \      roman += romanNumbers[length + 1] + romanNumbers[length];\n           \
    \ decimal -= cur - prev;\n        }\n        length--;\n    }\n    return roman;\n\
    }\n", "  //SOLUTION GOES HERE\n}", "  var numeral = '';\n  while (number > 0)\
    \ {\n    if (number >= 50) {\n      numeral += 'l';\n      number -= 50;\n   \
    \ } else if (number >= 40) {\n      numeral += 'xl';\n      number -= 40;\n  \
    \  } else if (number >= 10) {\n      numeral += 'x';\n      number -= 10;\n  \
    \  } else if (number >= 9) {\n      numeral += 'ix';\n      number -= 9;\n   \
    \ } else if (number >= 5) {\n      numeral += 'v';\n      number -= 5;\n    }\
    \ else if (number >= 4) {\n      numeral += 'iv';\n      number -= 4;\n    } else\
    \ if (number >= 1) {\n      numeral += 'i';\n      number -= 1;\n    }\n  }\n\
    \  return numeral;\n}\n", "\tvar roman = \"\";\n\tvar digit1 = number % 10;\n\t\
    var digit2 = Math.floor(number/10) % 10;\n\tvar digit3 = Math.floor(number/100)\
    \ % 10;\n\tvar digit4 = Math.floor(number/1000) % 10;\n\tvar digit5 = Math.floor(number/10000)\
    \ % 10;\n\tif (digit5 > 0) {\n\t\troman += \"v\";\n\t}\n\tif (digit4 > 0) {\n\t\
    \tfor (var i = 0; i < digit4; i++) {\n\t\t\troman += \"m\";\n\t\t}\n\t}\n\tif\
    \ (digit3 > 0) {\n\t\tif (digit3 == 4) {\n\t\t\troman += \"cd\";\n\t\t} else if\
    \ (digit3 == 9) {\n\t\t\troman += \"cm\";\n\t\t} else if (digit3 > 4) {\n\t\t\t\
    roman += \"d\";\n\t\t\tfor (var i = 0; i < digit3 - 5; i++) {\n\t\t\t\troman +=\
    \ \"c\";\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = 0; i < digit3; i++) {\n\t\t\
    \t\troman += \"c\";\n\t\t\t}\n\t\t}\n\t}\n\tif (digit2 > 0) {\n\t\tif (digit2\
    \ == 4) {\n\t\t\troman += \"xl\";\n\t\t} else if (digit2 == 9) {\n\t\t\troman\
    \ += \"xc\";\n\t\t} else if (digit2 > 4) {\n\t\t\troman += \"l\";\n\t\t\tfor (var\
    \ i = 0; i < digit2 - 5; i++) {\n\t\t\t\troman += \"x\";\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tfor (var i = 0; i < digit2; i++) {\n\t\t\t\troman += \"x\";\n\t\t\t\
    }\n\t\t}\n\t}\n\tif (digit1 > 0) {\n\t\tif (digit1 == 4) {\n\t\t\troman += \"\
    iv\";\n\t\t} else if (digit1 == 9) {\n\t\t", "  var romans = ['i', 'v', 'x', 'l',\
    \ 'c', 'd', 'm'];\n  var n = String(number).split('').reverse();\n  var rom =\
    \ [];\n  for (var i=0; i<n.length; i++){\n    var num = parseInt(n[i]);\n    if\
    \ (num <= 3){\n      for (var j=0; j<num; j++){\n        rom.push(romans[i*2]);\n\
    \      }\n    }\n    else if (num == 4){\n      rom.push(romans[i*2]);\n     \
    \ rom.push(romans[i*2+1]);\n    }\n    else if (num == 5){\n      rom.push(romans[i*2+1]);\n\
    \    }\n    else if (num >= 6 && num <= 8){\n      rom.push(romans[i*2+1]);\n\
    \      for (var j=0; j<num-5; j++){\n        rom.push(romans[i*2]);\n      }\n\
    \    }\n    else if (num == 9){\n      rom.push(romans[i*2]);\n      rom.push(romans[i*2+2]);\n\
    \    }\n  }\n  return rom.reverse().join('');\n}\n", "  let numerals = ['m', 'd',\
    \ 'c', 'l', 'x', 'v', 'i'];\n  let values = [1000, 500, 100, 50, 10, 5, 1];\n\
    \  let output = '';\n  let roman = '';\n  let remainder = number;\n  let i = 0;\n\
    \  while (remainder != 0) {\n    if (remainder - values[i] >= 0) {\n      roman\
    \ += numerals[i];\n      remainder -= values[i];\n    } else {\n      if (i %\
    \ 2 == 0) {\n        let d = numerals[i - 1];\n        let a = numerals[i - 2];\n\
    \        let b = numerals[i];\n        let c = numerals[i + 1];\n        if (remainder\
    \ >= values[i] - values[i - 2]) {\n          roman += a + b;\n          remainder\
    \ -= values[i] - values[i - 2];\n        } else if (remainder >= values[i] - values[i\
    \ - 1]) {\n          roman += d + b;\n          remainder -= values[i] - values[i\
    \ - 1];\n        } else if (remainder >= values[i] - values[i + 1]) {\n      \
    \    roman += b + c;\n          remainder -= values[i] - values[i + 1];\n    \
    \    } else {\n          i++;\n        }\n      } else {\n        i++;\n     \
    \ }\n    }\n  }\n  return roman;\n}\n", "    var m = [\"\", \"m\", \"mm\", \"\
    mmm\"];\n    var c = [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"\
    dcc\", \"dccc\", \"cm\"];\n    var x = [\"\", \"x\", \"xx\", \"xxx\", \"xl\",\
    \ \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"];\n    var i = [\"\", \"i\", \"ii\"\
    , \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"];\n    return m[Math.floor(number/1000)]\
    \ + c[Math.floor((number%1000)/100)] + x[Math.floor((number%100)/10)] + i[number%10];\n\
    }", "    var p = number.toString();\n    var a = 0;\n    var b = 0;\n    var c\
    \ = 0;\n    var result = '';\n    var roman = {\n        '0': '',\n        '1':\
    \ 'i',\n        '2': 'ii',\n        '3': 'iii',\n        '4': 'iv',\n        '5':\
    \ 'v',\n        '6': 'vi',\n        '7': 'vii',\n        '8': 'viii',\n      \
    \  '9': 'ix'\n    };\n    var roman10 = {\n        '0': '',\n        '1': 'x',\n\
    \        '2': 'xx',\n        '3': 'xxx',\n        '4': 'xl',\n        '5': 'l',\n\
    \        '6': 'lx',\n        '7': 'lxx',\n        '8': 'lxxx',\n        '9': 'xc'\n\
    \    };\n    var roman100 = {\n        '0': '',\n        '1': 'c',\n        '2':\
    \ 'cc',\n        '3': 'ccc',\n        '4': 'cd',\n        '5': 'd',\n        '6':\
    \ 'dc',\n        '7': 'dcc',\n        '8': 'dccc',\n        '9': 'cm'\n    };\n\
    \    var roman1000 = {\n        '0': '',\n        '1': 'm',\n        '2': 'mm',\n\
    \        '3': 'mmm',\n        '4': 'mmmmm',\n        '5': 'mmmmmm',\n        '6':\
    \ 'mmmmmmm',\n        '7': 'mmmmmmmm',\n        '8': 'mmmmmmmmm',\n        '9':\
    \ 'mmmmmmmmmm'\n    };\n    a = parseInt(p[p.length - 1]);\n    b = parseInt(p[p.length\
    \ - 2]);\n    c = parseInt(p[p.length - 3]);\n    result = roman1000[c] + roman100[b]\
    \ + roman10[b] + roman[a];\n    return result;\n}", "    if(number<1||number>999){\n\
    \        return \"Please use a value between 1 and 999\";\n    }\n    var output=\"\
    \";\n    var ones =[\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\"\
    ,\"IX\"];\n    var tens =[\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\"\
    ,\"LXXX\",\"XC\"];\n    var hundreds =[\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\"\
    ,\"DC\",\"DCC\",\"DCCC\",\"CM\"];\n    output = hundreds[Math.floor(number/100)]+tens[Math.floor((number%100)/10)]+ones[number%10];\n\
    \    return output;\n}", "    var roman_numeral_string = '';\n    var roman_numerals\
    \ = {\n      1: \"i\",\n      4: \"iv\",\n      5: \"v\",\n      9: \"ix\",\n\
    \      10: \"x\",\n      40: \"xl\",\n      50: \"l\",\n      90: \"xc\",\n  \
    \    100: \"c\",\n      400: \"cd\",\n      500: \"d\",\n      900: \"cm\",\n\
    \      1000: \"m\"\n    };\n    for (i=0; i<Object.keys(roman_numerals).length;\
    \ i++){\n      var roman_numeral_key = Object.keys(roman_numerals)[i];\n     \
    \ while (number >= roman_numeral_key){\n        roman_numeral_string += roman_numerals[roman_numeral_key];\n\
    \        number -= roman_numeral_key;\n      }\n    }\n    return roman_numeral_string;\n\
    }", "  var answer = \"\";\n  var digits = {1: \"i\",\n                2: \"ii\"\
    ,\n                3: \"iii\",\n                4: \"iv\",\n                5:\
    \ \"v\",\n                6: \"vi\",\n                7: \"vii\",\n          \
    \      8: \"viii\",\n                9: \"ix\",\n                10: \"x\"};\n\
    \  var tens = {1: \"x\",\n              2: \"xx\",\n              3: \"xxx\",\n\
    \              4: \"xl\",\n              5: \"l\",\n              6: \"lx\",\n\
    \              7: \"lxx\",\n              8: \"lxxx\",\n              9: \"xc\"\
    ,\n              10: \"c\"};\n  var hundreds = {1: \"c\",\n                  2:\
    \ \"cc\",\n                  3: \"ccc\",\n                  4: \"cd\",\n     \
    \             5: \"d\",\n                  6: \"dc\",\n                  7: \"\
    dcc\",\n                  8: \"dccc\",\n                  9: \"cm\",\n       \
    \           10: \"m\"};\n  var thousands = {1: \"m\",\n                  2: \"\
    mm\",\n                  3: \"mmm\",\n                  4: \"mmmm\",\n       \
    \           5: \"mmmmm\",\n                  6: \"mmmmmm\",\n                \
    \  7: \"mmmmmmm\",\n                  8: \"mmmmmmmm\",\n                  9: \"\
    mmmmmmmmm\",\n                  10: \"mmmmmmmmmm\"};\n  if (number.toString().length\
    \ === 1){\n    answer = digits[number];\n  }\n  else if (number.toString().length\
    \ === 2){\n    answer = tens[parseInt(number.toString()[0])] + digits[parseInt(number.toString()[1])];\n\
    \  }\n  else if (number.toString().length === 3){\n    answer = hundreds[parseInt(number.toString()[0])]\
    \ + tens[parseInt(number.toString()[1])] + digits[parseInt(number.toString()[2])];\n\
    \  }\n  else if (number.toString().length === 4){\n    answer = thousands[parseInt(number.toString()[0])]\
    \ + hundreds[parseInt(number.toString()[1])] +", "    var roman = \"\";\n    var\
    \ z = number % 10;\n    var y = Math.floor(number / 10) % 10;\n    var x = Math.floor(number\
    \ / 100) % 10;\n    for (var i = 1; i <= x; i++) {\n        roman += \"c\";\n\
    \    }\n    if (y == 9) {\n        roman += \"xc\";\n    } else if (y == 4) {\n\
    \        roman += \"xl\";\n    } else {\n        if (y >= 5) {\n            roman\
    \ += \"l\";\n            y -= 5;\n        }\n        for (var i = 1; i <= y; i++)\
    \ {\n            roman += \"x\";\n        }\n    }\n    if (z == 9) {\n      \
    \  roman += \"ix\";\n    } else if (z == 4) {\n        roman += \"iv\";\n    }\
    \ else {\n        if (z >= 5) {\n            roman += \"v\";\n            z -=\
    \ 5;\n        }\n        for (var i = 1; i <= z; i++) {\n            roman +=\
    \ \"i\";\n        }\n    }\n    return roman;\n}", "    // return 'to be implemented';\n\
    \    // var romans = ['I', 'V', 'X', 'L', 'C', 'D', 'M'];\n    // var i = 0;\n\
    \    // while (number != 0){\n    //   //var digit = number % 10;\n    //   if\
    \ (digit >= 0 && digit <= 3){\n    //     roman.push(roman[i].repeat(digit));\n\
    \    //   }\n    //   if (digit == 4){\n    //     roman.push(roman[i] + roman[i+1]);\n\
    \    //   }\n    //   if (digit == 5){\n    //     roman.push(roman[i+1]);\n \
    \   //   }\n    //   if (digit > 5 && digit < 9){\n    //     roman.push(roman[i+1]\
    \ + roman[i].repeat(digit-5));\n    //   }\n    //   if (digit == 9){\n    //\
    \     roman.push(roman[i] + roman[i+2]);\n    //   }\n    //   i += 2;\n    //\
    \   number = Math.floor(number/10);\n    // }\n    // return roman.reverse().join('');\n\
    \    var numerals = [['I', 'V'], ['X', 'L'], ['C', 'D'], ['M']];\n    var digits\
    \ = number.toString().split('').reverse().map(function(digit){return parseInt(digit);});\n\
    \    var roman = '';\n    for (var i = 0; i < digits.length; i++){\n      if (digits[i]\
    \ < 4){\n        roman = numerals[i][0].repeat(digits[i]) + roman;\n      }\n\
    \      if (digits[i] == 4){\n        roman = numerals[i][0] + numerals[i][1] +\
    \ roman;\n      }\n      if (digits[i] == 5){\n        roman = numerals[i][1]\
    \ + roman;\n      }\n      if (digits[i] > 5 && digits[i] < 9){\n        roman\
    \ = numerals[", "\n}\n", "    let roman = \"\";\n    let numerals = {\n      \
    \  1 : \"i\",\n        4 : \"iv\",\n        5 : \"v\",\n        9 : \"ix\",\n\
    \        10 : \"x\",\n        40 : \"xl\",\n        50 : \"l\",\n        90 :\
    \ \"xc\",\n        100 : \"c\",\n        400 : \"cd\",\n        500 : \"d\",\n\
    \        900 : \"cm\",\n        1000 : \"m\"\n    };\n    // Iterate through the\
    \ numbers in order from 1000 to 1\n    for (let num in numerals) {\n        num\
    \ = Number(num);\n        // Check if the number being iterated through can fit\
    \ into the number being converted to roman numerals.\n        // If so, add the\
    \ appropriate numeral to the roman numeral string, subtract the value of the numeral\n\
    \        // from the number being converted, and continue the iteration.\n   \
    \     while (num <= number) {\n            roman += numerals[num];\n         \
    \   number -= num;\n        }\n    }\n    return roman;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

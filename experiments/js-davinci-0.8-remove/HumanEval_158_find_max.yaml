name: HumanEval_158_find_max
language: js
prompt: "//Write a function that accepts a list of strings.\n// The list contains\
  \ different words. Return the word with maximum number\n// of unique characters.\
  \ If multiple strings have maximum number of unique\n// characters, return the one\
  \ which comes first in lexicographical order.\nfunction find_max(words){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = find_max;\n  assert.deepEqual(candidate([\"name\", \"of\", \"string\"]),\"string\"\
  );\n  assert.deepEqual(candidate([\"name\", \"enam\", \"game\"]),\"enam\");\n  assert.deepEqual(candidate([\"\
  aaaaaaa\", \"bb\", \"cc\"]),\"aaaaaaa\");\n  assert.deepEqual(candidate([\"abc\"\
  , \"cba\"]),\"abc\");\n  assert.deepEqual(candidate([\"play\", \"this\", \"game\"\
  , \"of\", \"footbott\"]),\"footbott\");\n  assert.deepEqual(candidate([\"we\", \"\
  are\", \"gonna\", \"rock\"]),\"gonna\");\n  assert.deepEqual(candidate([\"we\",\
  \ \"are\", \"a\", \"mad\", \"nation\"]),\"nation\");\n  assert.deepEqual(candidate([\"\
  this\", \"is\", \"a\", \"prrk\"]),\"this\");\n  assert.deepEqual(candidate([\"b\"\
  ]),\"b\");\n  assert.deepEqual(candidate([\"play\", \"play\", \"play\"]),\"play\"\
  );\n}\n\ntest();"
completions: ["  var output = words[0];\n  var maxValue = words[0].length;\n  var\
    \ uniqueChars = unique(words[0]);\n  for(var i = 1; i < words.length; i++){\n\
    \    if(unique(words[i]).length > uniqueChars.length){\n      output = words[i];\n\
    \      maxValue = words[i].length;\n      uniqueChars = unique(words[i]);\n  \
    \  } else if(unique(words[i]).length === uniqueChars.length && words[i] < output){\n\
    \      output = words[i];\n      maxValue = words[i].length;\n      uniqueChars\
    \ = unique(words[i]);\n    }\n  }\n  return output;\n}\n", "    let out = '';\n\
    \    let max_uniques = 0;\n    for(let i = 0; i < words.length; i++){\n      \
    \  let curr_uniques = new Set(words[i]).size;\n        if(curr_uniques > max_uniques){\n\
    \            max_uniques = curr_uniques;\n            out = words[i];\n      \
    \  }\n    }\n    return out;\n}", "    var max = 0, index = 0;\n    for(var i\
    \ = 0; i < words.length; i++){\n        if(max < unique_characters(words[i])){\n\
    \            max = unique_characters(words[i]);\n            index = i;\n    \
    \    }\n    }\n    return words[index];\n}\n", "  return words.reduce((acc, word)\
    \ => {\n    let uniques = word.split('').filter((val, i, arr) => arr.indexOf(val)\
    \ === i).length;\n    if(acc.uniques < uniques){\n      acc.uniques = uniques;\n\
    \      acc.word = word;\n    }\n    return acc;\n  }, {uniques: 0, word: null}).word;\n\
    }\n", "  var list =[];\n  var max = 0;\n  for(var i = 0; i < words.length; i++){\n\
    \    if(!list.includes(words[i])){\n      list.push(words[i]);\n    }\n  }\n \
    \ for(var j = 0; j < list.length; j++){\n    if(max < list[j].length){\n     \
    \ max = list[j].length;\n    }\n  }\n  return max;\n}\nvar list = ['apple', 'ball',\
    \ 'cat', 'apple', 'cat', 'dog', 'ball', 'apple'];", "    let longestWord = \"\"\
    ;\n    let indexOfLongestWord = 0;\n    let longestWordIndex = 0;\n    let longestWordLength\
    \ = 0;\n    for(let i = 0; i < words.length; i++){\n        let word = words[i];\n\
    \        let index = 0;\n        let wordLength = 0;\n        while(word[index]\
    \ != null){\n            if(longestWord.indexOf(word[index]) == -1){\n       \
    \         longestWord += word[index];\n                wordLength++;\n       \
    \     }\n            index++;\n        }\n        if(wordLength > longestWordLength){\n\
    \            longestWordLength = wordLength;\n            longestWordIndex = i;\n\
    \        }\n        longestWord = \"\";\n    }\n    return words[longestWordIndex];\n\
    }\nlet res = find_max([\"a\", \"ab\", \"bc\"]);", "\tvar max = [];\n\tfor(var\
    \ i = 0; i < words.length; i++){\n\t\tif(max.length < unique_char(words[i]).length){\n\
    \t\t\tmax = unique_char(words[i]);\n\t\t}\n\t}\n\treturn max;\n}\n", "    var\
    \ max = 0;\n    var maxWord = \"\";\n    for(var i = 0; i < words.length; i++){\n\
    \        if(find_unique(words[i]) > max){\n            max = find_unique(words[i]);\n\
    \            maxWord = words[i];\n        }\n    }\n    return maxWord;\n}\n",
  "  var max_count = 0;\n  var result = '';\n  for(var i = 0; i < words.length; i++){\n\
    \    var cur_word = words[i];\n    var count = count_unique(cur_word);\n    if(count\
    \ > max_count){\n      max_count = count;\n      result = cur_word;\n    }else\
    \ if(count == max_count){\n      if(cur_word < result){\n        result = cur_word;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "    if(!words.length) return null;\n\
    \    var maxWord = words[0];\n    for(var i = 1; i < words.length; i++){\n   \
    \     if(words[i].length > maxWord.length){\n            maxWord = words[i];\n\
    \        }\n    }\n    return maxWord;\n}\n", "    var result = '';\n    var max\
    \ = 0;\n    for(var i = 0; i < words.length; i++){\n        var unique = [];\n\
    \        for(var x = 0; x < words[i].length; x++){\n            if(unique.indexOf(words[i][x])\
    \ === -1){\n                unique.push(words[i][x]);\n            }\n       \
    \ }\n        if(unique.length > max){\n            max = unique.length;\n    \
    \        result = words[i];\n        }\n    }\n    return result;\n}\n", "   \
    \ // var max = 0;\n    // var max_word = \"\";\n    // for(var i = 0; i < words.length;\
    \ i++){\n    //     var word = words[i];\n    //     var unique_chars = {};\n\
    \    //     for(var j = 0; j < word.length; j++){\n    //         var char = word[j];\n\
    \    //         if(!unique_chars[char]){\n    //             unique_chars[char]\
    \ = true;\n    //         }\n    //     }\n    //     var unique_length = Object.keys(unique_chars).length;\n\
    \    //     if(unique_length > max){\n    //         max = unique_length;\n  \
    \  //         max_word = word;\n    //     }\n    // }\n    // return max_word;\n\
    \    //below is a one-liner if you're cool\n    return words.reduce(function(acc,\
    \ word){\n        var unique_chars = word.split(\"\").reduce(function(acc, char){\n\
    \            if(!acc[char]){\n                acc[char] = true;\n            }\n\
    \            return acc;\n        }, {});\n        var unique_length = Object.keys(unique_chars).length;\n\
    \        if(unique_length > acc.max){\n            acc.max = unique_length;\n\
    \            acc.max_word = word;\n        }\n        return acc;\n    }, {max:\
    \ 0, max_word: \"\"}).max_word;\n}\n", "    let max = 0;\n    let res = [];\n\
    \    for(let i=0; i<words.length; i++){\n        let word = words[i];\n      \
    \  let count = 0;\n        for(let j=0; j<word.length; j++){\n            if(word.indexOf(word[j])\
    \ === word.lastIndexOf(word[j])){\n                count++;\n            }\n \
    \       }\n        if(count > max){\n            max = count;\n            res\
    \ = [word];\n        }\n        else if(count === max){\n            res.push(word);\n\
    \        }\n    }\n    return res.sort()[0];\n}\n", "    var max_word = '';\n\
    \    var max_count = 0;\n    for(var i = 0; i < words.length; i++){\n        var\
    \ word = words[i];\n        var count = 1;\n        for(var j = 0; j < word.length;\
    \ j++){\n            var c = word[j];\n            if(word.lastIndexOf(c) != j){\n\
    \                count--;\n            }else{\n                count++;\n    \
    \        }\n        }\n        if(count > max_count){\n            max_count =\
    \ count;\n            max_word = word;\n        }\n    }\n    return max_word;\n\
    }\nfind_max(['abc','efg']);\n\n", "    var unique = {};\n    var max = '';\n \
    \   for(var i = 0; i < words.length; i++){\n        unique[words[i]] = {};\n \
    \       for(var j = 0; j < words[i].length; j++){\n            unique[words[i]][words[i][j]]\
    \ = true;\n        }\n        if(Object.keys(unique[words[i]]).length > Object.keys(unique[max]).length){\n\
    \            max = words[i];\n        }\n    }\n    return max;\n}", "    if (words.length\
    \ < 1) {\n        return null;\n    }\n    let uniqueChars = [];\n    for (const\
    \ word of words) {\n        uniqueChars.push(getUniqueCharsInString(word));\n\
    \    }\n    let max = uniqueChars[0];\n    let maxIndex = 0;\n    for (let i =\
    \ 1; i < uniqueChars.length; i++) {\n        if (uniqueChars[i] > max) {\n   \
    \         max = uniqueChars[i];\n            maxIndex = i;\n        }\n    }\n\
    \    return words[maxIndex];\n}\n", "    if (words === undefined) {\n        return\
    \ null;\n    }\n    if (words.length === 0) {\n        return null;\n    }\n \
    \   let result = [];\n    let currentMax = 0;\n    for (let i = 0; i < words.length;\
    \ i++) {\n        let characters = words[i].split('');\n        if (characters.length\
    \ > currentMax) {\n            currentMax = characters.length;\n            result\
    \ = characters;\n        }\n    }\n    return result.join('');\n}", "    var counts\
    \ = [];\n    words.forEach(function(word) {\n        counts.push(unique_characters(word));\n\
    \    });\n    var max_value = Math.max.apply(null, counts);\n    var max_index\
    \ = counts.indexOf(max_value);\n    return words[max_index];\n}\n", "  if(words.length\
    \ === 0){\n    return \"\";\n  }\n\n  var uniq_chars = words.map(function(item,\
    \ idx){\n    return {\n      index: idx,\n      word: item,\n      length: find_unique_chars(item).length\n\
    \    };\n  });\n\n  var max_num = uniq_chars.reduce(function(max, item){\n   \
    \ return Math.max(max, item.length);\n  }, 0);\n\n  var max_words = uniq_chars.filter(function(item){\n\
    \    return item.length === max_num;\n  });\n\n  return max_words.reduce(function(result,\
    \ item){\n    if(item.word < result.word){\n      return item;\n    }else{\n \
    \     return result;\n    }\n  }).word;\n}\n", "    let obj = {};\n    let max\
    \ = words[0];\n    let count;\n    for(let i = 0; i < words.length; i++){\n  \
    \      obj[words[i]] = 0;\n        let w = words[i].split('');\n        for(let\
    \ j = 0; j < w.length; j++){\n            count = 0;\n            for(let k =\
    \ 0; k < w.length; k++){\n                if(w[j] == w[k]){\n                \
    \    count++;\n                }\n            }\n            if(count == 1){\n\
    \                obj[words[i]]++;\n            }\n        }\n    }\n    for(let\
    \ key in obj){\n        if(obj[key] > obj[max]){\n            max = key;\n   \
    \     }\n    }\n    return max;\n}", "    let word = words[0];\n    let count\
    \ = 0;\n    let result = {};\n    for(let i = 0; i < words.length; i++){\n   \
    \     result[words[i]] = 0;\n        let index = {};\n        for(let j = 0; j\
    \ < words[i].length; j++){\n            if(!index[words[i][j]]){\n           \
    \     index[words[i][j]] = 1;\n                result[words[i]] += 1;\n      \
    \      }\n        }\n        if(result[words[i]] > count){\n            count\
    \ = result[words[i]];\n            word = words[i];\n        }else if(result[words[i]]\
    \ === count){\n            if(words[i] < word){\n                word = words[i];\n\
    \            }\n        }\n    }\n    return word;\n}", "    var max_char = 0;\n\
    \    var max_word = \"\";\n    for(var i = 0; i < words.length; i++){\n      \
    \  if(words[i].length > max_char){\n            max_char = words[i].length;\n\
    \            max_word = words[i];\n        }\n    }\n    return max_word;\n}\n\
    var words = [\"apple\", \"banana\", \"lemon\", \"pineapple\"];", "  var max_len\
    \ = 0;\n  var max_index = 0;\n  for(var i = 0; i < words.length; i++){\n    var\
    \ word = words[i];\n    var unique_char_count = 0;\n    var unique_chars = {};\n\
    \    for(var j = 0; j < word.length; j++){\n      var char = word[j];\n      if(unique_chars[char]\
    \ === undefined){\n        unique_char_count += 1;\n        unique_chars[char]\
    \ = 1;\n      }\n    }\n    if(unique_char_count > max_len){\n      max_len =\
    \ unique_char_count;\n      max_index = i;\n    }\n  }\n  return words[max_index];\n\
    }\nvar res = find_max([\"abcd\", \"abbcd\", \"abccc\", \"aa\"]);", "  let count\
    \ = 0\n  let max = 0\n  let result = ''\n  for(let i = 0; i < words.length; i++){\n\
    \    for(let j = 0; j < words[i].length; j++){\n      if(words[i].indexOf(words[i][j])\
    \ === words[i].lastIndexOf(words[i][j])){\n        count++\n      }\n    }\n \
    \   if(count > max){\n      max = count\n      result = words[i]\n    }\n    if(count\
    \ === max){\n      if(words[i] < result){\n        result = words[i]\n      }\n\
    \    }\n    count = 0\n  }\n  return result\n}\n\nlet words = ['abracadabra',\
    \ 'allottee', 'assessee']\n", "    var max = 0;\n    var max_char_word = \"\"\
    ;\n    for(let i=0; i<words.length; i++){\n        var count = 0;\n        var\
    \ word = words[i];\n        var dict = {};\n        for(let j=0; j<word.length;\
    \ j++){\n            if(dict[word[j]] === undefined){\n                dict[word[j]]\
    \ = 1;\n                count += 1;\n            }\n        }\n        if(count\
    \ > max){\n            max = count;\n            max_char_word = word;\n     \
    \   }\n    }\n    return max_char_word;\n}\n\nvar words = [\"abc\", \"abcdefghijklmnopqrstuvwxyz\"\
    , \"abacdadfaerfgabcdafagaefdfgafdfg\"];", "    var max = \"\";\n    var max_char\
    \ = {};\n    for(var i = 0; i < words.length; i++){\n        if(words[i].length\
    \ >= max.length){\n            if(words[i].length > max.length){\n           \
    \     max = words[i];\n                max_char = {};\n            }\n       \
    \     for(var j = 0; j < words[i].length; j++){\n                max_char[words[i][j]]\
    \ = max_char[words[i][j]] || 0;\n                max_char[words[i][j]]++;\n  \
    \          }\n        }\n    }\n    return max;\n}", "  let chars = {};\n  let\
    \ max = {\n    count: 0,\n    word: ''\n  };\n  for(let i = 0; i < words.length;\
    \ i++){\n    for(let j = 0; j < words[i].length; j++){\n      if(chars[words[i][j]]){\n\
    \        chars[words[i][j]]++;\n      } else {\n        chars[words[i][j]] = 1;\n\
    \      }\n    }\n    if(Object.keys(chars).length > max.count){\n      max.count\
    \ = Object.keys(chars).length;\n      max.word = words[i];\n    }\n    chars =\
    \ {};\n  }\n  return max.word;\n}\n", "  var longest = \"\";\n  var count = 0;\n\
    \  for(var i = 0; i < words.length; i++){\n    if(is_unique(words[i]) && words[i].length\
    \ > count){\n      longest = words[i];\n      count = words[i].length;\n    }\n\
    \  }\n  return longest;\n}\n", "    var max_char = 0;\n    var res = '';\n   \
    \ words.forEach(function(word){\n        var chars = '';\n        for(var i =\
    \ 0; i < word.length; i++){\n            if(chars.indexOf(word[i]) === -1){\n\
    \                chars += word[i];\n            }\n        }\n        if(chars.length\
    \ > max_char){\n            max_char = chars.length;\n            res = word;\n\
    \        }\n    });\n    return res;\n}\n", "    var max=0;\n    var result=\"\
    \";\n    for(var i=0;i<words.length;i++){\n        var dup=new Array(256).fill(0);\n\
    \        var j=0;\n        while(j<words[i].length){\n            dup[words[i].charCodeAt(j)]++;\n\
    \            j++;\n        }\n        var count=0;\n        for(var k=0;k<dup.length;k++){\n\
    \            if(dup[k]!=0){\n                count++;\n            }\n       \
    \ }\n        if(count>max){\n            max=count;\n            result=words[i];\n\
    \        }\n    }\n    return result;\n}", "  var result = \"\";\n  var chars\
    \ = 0;\n  for(var i = 0; i < words.length; i++){\n    var currentWord = words[i];\n\
    \    var currentWordChars = new Set(currentWord);\n    if(currentWordChars.size\
    \ > chars){\n      result = currentWord;\n      chars = currentWordChars.size;\n\
    \    }\n  }\n  return result;\n}", "  \n  let result = \"\"\n  let all_chars =\
    \ {}\n  let total_chars = {}\n  for(let i = 0; i < words.length; i++){\n    let\
    \ char_array = words[i].split(\"\")\n    all_chars[i] = []\n    for(let j = 0;\
    \ j < char_array.length; j++){\n      if(!all_chars[i].includes(char_array[j])){\n\
    \        all_chars[i].push(char_array[j])\n      }\n    }\n    total_chars[i]\
    \ = all_chars[i].length\n  }\n  console.log(total_chars)\n  let max = 0\n  for(let\
    \ key in total_chars){\n    if(total_chars[key] > max){\n      max = total_chars[key]\n\
    \    }\n  }\n  console.log(max)\n  let unique_count = []\n  for(let key in total_chars){\n\
    \    if(total_chars[key] === max){\n      unique_count.push(key)\n    }\n  }\n\
    \  console.log(unique_count)\n  if(unique_count.length === 1){\n    result = words[unique_count[0]]\n\
    \  }else{\n    let first_word = words[unique_count[0]]\n    for(let i = 1; i <\
    \ unique_count.length; i++){\n      if(words[unique_count[i]] < first_word){\n\
    \        first_word = words[unique_count[i]]\n      }\n    }\n    result = first_word\n\
    \  }\n  return result\n}", "    var maxchar={};\n    for(var i=0;i<words.length;i++){\n\
    \        var char={};\n        for(var j=0;j<words[i].length;j++){\n         \
    \   if(char[words[i][j]]===undefined){\n                char[words[i][j]]=true;\n\
    \            }\n        }\n        var count=0;\n        for(var x in char){\n\
    \            count++;\n        }\n        maxchar[words[i]]=count;\n    }\n  \
    \  var max=0;\n    var maxword=\"\";\n    for(var y in maxchar){\n        if(maxchar[y]>max){\n\
    \            max=maxchar[y];\n            maxword=y;\n        }\n    }\n    return\
    \ maxword;\n}", "  var max = '';\n  for(var i = 0; i < words.length; i++){\n \
    \   if(num_unique(words[i]) > num_unique(max)){\n      max = words[i];\n    }\n\
    \  }\n  return max;\n}\n", "  var a = [];\n  for(var i = 0; i < words.length;\
    \ i++){\n    a.push(words[i].split(''));\n  }\n  for(var j = 0; j < a.length;\
    \ j++){\n    a[j] = a[j].filter(function(elem, index, arr){\n      return arr.indexOf(elem)\
    \ === index;\n    });\n  }\n  var max = 0;\n  var k = 0;\n  var index = 0;\n \
    \ for(var m = 0; m < a.length; m++){\n    if(a[m].length > max){\n      max =\
    \ a[m].length;\n      index = m;\n    }\n  }\n  return words[index];\n}", "  \
    \  var results = [];\n    words.forEach(function(word){\n        word = word.split('');\n\
    \        word = word.filter(function(char, index){\n            return word.indexOf(char)\
    \ == index;\n        });\n        results.push(word.length);\n    });\n    var\
    \ max_val = Math.max.apply(null, results);\n    var idx = results.indexOf(max_val);\n\
    \    return words[idx];\n}\n\nvar words = [\"unique\", \"is\", \"its\", \"frequent\"\
    , \"frequent\"];", "    var max = 0;\n    var word;\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(count_unique(words[i]) > max){\n            max = count_unique(words[i]);\n\
    \            word = words[i];\n        }\n    }\n    return word;\n}\n", "\tvar\
    \ max_word;\n\tvar max_count = 0;\n\tfor(var i=0; i<words.length; i++){\n\t\t\
    var curr_char_count = count_unique_chars(words[i]);\n\t\tif(curr_char_count >\
    \ max_count){\n\t\t\tmax_count = curr_char_count;\n\t\t\tmax_word = words[i];\n\
    \t\t}\n\t}\n\treturn max_word;\n}\n", "    let max = [];\n    for(let i = 0; i\
    \ < words.length; i++){\n        max.push(words[i].split('').filter((value, index,\
    \ self) => self.indexOf(value) === index).length);\n    }\n    let maxIndex =\
    \ max.indexOf(Math.max(...max));\n    return words[maxIndex];\n}\n", "\tvar max\
    \ = words[0];\n\tvar maxLength = words[0].length;\n\tfor(var i = 1; i < words.length;\
    \ i++){\n\t\tif(words[i].length > maxLength){\n\t\t\tmax = words[i];\n\t\t\tmaxLength\
    \ = words[i].length;\n\t\t}\n\t}\n\treturn max;\n}", "    let max_word = ' ';\n\
    \    let max_count = 0;\n    let max_word_dic = {};\n    for(let word of words){\n\
    \        let unique_chars = new Set();\n        for(let i = 0; i < word.length;\
    \ i++){\n            unique_chars.add(word[i]);\n        }\n        let unique_count\
    \ = unique_chars.size;\n        max_word_dic[word] = unique_count;\n        if(unique_count\
    \ > max_count){\n            max_count = unique_count;\n            max_word =\
    \ word;\n        }\n    }\n    console.log(max_word_dic);\n    return max_word;\n\
    }\n", "\tvar max = 0;\n\tvar maxword = '';\n\tfor(var i = 0; i < words.length;\
    \ i++){\n\t\tvar word = words[i];\n\t\tvar arr = word.split('');\n\t\tvar len\
    \ = arr.length;\n\t\tvar count = 0;\n\t\tfor(var j = 0; j < len; j++){\n\t\t\t\
    var char = arr[j];\n\t\t\tif(arr.indexOf(char) == arr.lastIndexOf(char)){\n\t\t\
    \t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count > max){\n\t\t\tmax = count;\n\t\t\t\
    maxword = word;\n\t\t}\n\t}\n\treturn maxword;\n}\n\nvar words = ['code', 'coder',\
    \ 'coding', 'codable', 'codec', 'codecs', 'coded',\n'codeless', 'codec', 'codecs',\
    \ 'codependence', 'codex', 'codify', 'codependents',\n'codes', 'code', 'coder',\
    \ 'codesign', 'codec', 'codeveloper', 'codrive', 'codec',\n'codecs', 'codiscovered'];",
  "  words.sort();\n  var word = words[0];\n  for(var i = 1; i < words.length; i++){\n\
    \    if(words[i].length > word.length){\n      word = words[i];\n    }\n  }\n\
    \  return word;\n}", "    if(words.length == 0){\n        return null;\n    }\n\
    \    else{\n        let max_char = words[0];\n        let max_length = count_char(words[0]);\n\
    \        for(let i = 1; i < words.length; i++){\n            let length = count_char(words[i]);\n\
    \            if(length > max_length){\n                max_length = length;\n\
    \                max_char = words[i];\n            }\n            else if(length\
    \ == max_length){\n                if(words[i] < max_char){\n                \
    \    max_char = words[i];\n                }\n            }\n        }\n     \
    \   return max_char;\n    }\n}\n", "    var max_len = 0;\n    var max_word = null;\n\
    \    for(var i = 0; i < words.length; i++){\n        var word = words[i];\n  \
    \      var uniq_chars = [];\n        for(var j = 0; j < word.length; j++){\n \
    \           var char = word[j];\n            if(uniq_chars.indexOf(char) < 0){\n\
    \                uniq_chars.push(char);\n            }\n        }\n        if(uniq_chars.length\
    \ > max_len){\n            max_len = uniq_chars.length;\n            max_word\
    \ = word;\n        }\n    }\n    return max_word;\n}\n", "  let chars_count =\
    \ {};\n  for(let word of words){\n    let chars = [];\n    for(let char of word){\n\
    \      if(!chars.includes(char)) chars.push(char);\n    }\n    chars_count[word]\
    \ = chars.length;\n  }\n  let max = 0;\n  let max_word = '';\n  for(let word in\
    \ chars_count){\n    if(chars_count[word] > max){\n      max = chars_count[word];\n\
    \      max_word = word;\n    }\n  }\n  return max_word;\n}\n\nlet words = [\"\
    abc\", \"abcd\", \"abcd\", \"abcde\", \"aaaa\", \"aaaaa\"];", "    if(words.length\
    \ <= 0){\n        return;\n    }\n    let max_word = '';\n    let max_length =\
    \ 0;\n    for(let i = 0; i < words.length; i++){\n        let length = 0;\n  \
    \      for(let j = 0; j < words[i].length; j++){\n            if(words[i].indexOf(words[i][j])\
    \ === j){\n                length++;\n            }\n        }\n        if(length\
    \ > max_length){\n            max_length = length;\n            max_word = words[i];\n\
    \        }\n    }\n    return max_word;\n}\n", "  var max = 0;\n  var result =\
    \ '';\n  for(var i = 0; i < words.length; i++){\n    //count unique characters\
    \ in this word\n    var word = words[i];\n    var count = 0;\n    for(var j =\
    \ 0; j < word.length; j++){\n      if(isUnique(word, word[j])){\n        count++;\n\
    \      }\n    }\n    if(count > max){\n      max = count;\n      result = word;\n\
    \    }\n  }\n  return result;\n}\n", "    let max = words[0];\n    for(let i =\
    \ 0; i < words.length; i++){\n        let x = find_unique(words[i]);\n       \
    \ let y = find_unique(max);\n        if(x.length > y.length){\n            max\
    \ = words[i];\n        }\n        else if(x.length === y.length){\n          \
    \  if(max > words[i]){\n                max = words[i];\n            }\n     \
    \   }\n    }\n    return max;\n}\n", "    let word = \"\";\n    let maxCount =\
    \ 0;\n    let chars = \"\";\n    let count = 0;\n    for(let i = 0; i < words.length;\
    \ i++){\n        let inputWord = words[i];\n        count = 0;\n        chars\
    \ = \"\";\n        for(let j = 0; j < inputWord.length; j++){\n            if(chars.indexOf(inputWord[j])\
    \ === -1){\n                chars += inputWord[j];\n                count += 1;\n\
    \            }\n        }\n        if(count > maxCount){\n            maxCount\
    \ = count;\n            word = inputWord;\n        }\n    }\n    return word;\n\
    }\n", "    let map = {}\n    for(let i=0; i<words.length; i++){\n        map[words[i]]\
    \ = []\n        for(let j=0; j<words[i].length; j++){\n            if(!map[words[i]].includes(words[i][j])){\n\
    \                map[words[i]].push(words[i][j])\n            }\n        }\n \
    \   }\n    let arr = Object.values(map)\n    let max = arr[0].length\n    let\
    \ idx = 0\n    for(let i=1; i<arr.length; i++){\n        if(arr[i].length>max){\n\
    \            max = arr[i].length\n            idx = i\n        }\n    }\n    return\
    \ Object.keys(map)[idx]\n}\n", "    let max = 0;\n    let word = \"\";\n    for(let\
    \ i = 0; i < words.length; i++){\n        let temp = new Set();\n        for(let\
    \ j = 0; j < words[i].length; j++){\n            temp.add(words[i][j]);\n    \
    \    }\n        if(temp.size > max){\n            max = temp.size;\n         \
    \   word = words[i];\n        }\n    }\n    return word;\n}\n", "\n}", "  var\
    \ max_val = 0;\n  var max_word = \"\";\n  for(var i = 0; i < words.length; i++){\n\
    \    var unique_chars = [];\n    for(var j = 0; j < words[i].length; j++){\n \
    \     if(unique_chars.indexOf(words[i][j]) == -1){\n        unique_chars.push(words[i][j]);\n\
    \      }\n    }\n    if(unique_chars.length > max_val){\n      max_val = unique_chars.length;\n\
    \      max_word = words[i];\n    }\n  }\n  return max_word;\n}", "    var max\
    \ = words[0];\n    for(var i = 1; i < words.length; i++){\n        if(unique_chars(words[i])\
    \ > unique_chars(max)){\n            max = words[i];\n        }\n    }\n    return\
    \ max;\n}\n", "    var max_num = 0;\n    var max_word = '';\n    var index = 0;\n\
    \    for(var i = 0; i < words.length; i++){\n        //console.log(words[i]);\n\
    \        if(unique_chars(words[i]) > max_num){\n            max_num = unique_chars(words[i]);\n\
    \            max_word = words[i];\n            index = i;\n        }\n    }\n\
    \    return words[index];\n}\n", "  let result = null;\n  let max = 0;\n  for(let\
    \ word of words){\n    let unique = 0;\n    for(let i = 0; i < word.length; i++){\n\
    \      let char = word[i];\n      if(word.lastIndexOf(char) === i){\n        unique++;\n\
    \      }\n    }\n    if(unique > max){\n      max = unique;\n      result = word;\n\
    \    }\n  }\n  return result;\n}\n", "  let result=0;\n  let resultWord='';\n\
    \  for(let i=0;i<words.length;i++){\n    let word=words[i];\n    let uniqueChars=0;\n\
    \    for(let j=0;j<word.length;j++){\n      let char=word[j];\n      if(word.indexOf(char)==word.lastIndexOf(char)){\n\
    \        uniqueChars++;\n      }\n    }\n    if(uniqueChars>result){\n      result=uniqueChars;\n\
    \      resultWord=word;\n    }else if(uniqueChars==result && word.localeCompare(resultWord)==-1){\n\
    \      resultWord=word;\n    }\n  }\n  return resultWord;\n}", "    //coding and\
    \ coding..\n    //  you may use 'split' to convert string to array\n    var unique\
    \ = '';\n    words.forEach(word => {\n      var letter = word.split('').reduce((unique,\
    \ letter) => {\n        if(unique.indexOf(letter) < 0){\n          unique += letter;\n\
    \        }\n        return unique;\n      }, '');\n      if(letter.length > unique.length){\n\
    \        unique = letter;\n      }\n    });\n    return unique;\n}\n", "  var\
    \ maxWord = '';\n  var maxCount = 0;\n  for(var i = 0; i < words.length; i++){\n\
    \    var chars = {};\n    var current = words[i];\n    for(var j = 0; j < current.length;\
    \ j++){\n      var char = current[j];\n      if(!chars[char]){\n        chars[char]\
    \ = true;\n      }\n    }\n    if(Object.keys(chars).length > maxCount){\n   \
    \   maxCount = Object.keys(chars).length;\n      maxWord = current;\n    }\n \
    \ }\n  return maxWord;\n}\n\n\n", "    //all characters of words\n    var char\
    \ = '';\n    //number of unique characters\n    var count = 0;\n    //maximum\
    \ number of unique characters\n    var max = 0;\n    //index of the word\n   \
    \ var index = 0;\n    //from 0 to words.length-1\n    for(var i = 0; i < words.length;\
    \ i++){\n        //from 0 to words[i].length-1\n        for(var j = 0; j < words[i].length;\
    \ j++){\n            //if word[i]character j is in char\n            if(char.indexOf(words[i][j])\
    \ !== -1){\n                //do nothing\n            }else{\n               \
    \ //increase count\n                count += 1;\n                //add word[i]character\
    \ j to char\n                char += words[i][j];\n            }\n        }\n\
    \        //if count is greater than max\n        if(count > max){\n          \
    \  //max is count\n            max = count;\n            //index is i\n      \
    \      index = i;\n        }\n        //count is 0\n        count = 0;\n     \
    \   //char is ''\n        char = '';\n    }\n    //return words[index]\n    return\
    \ words[index];\n}\n", "\tvar result = \"\";\n\tvar maxcount = 0;\n\tfor(var i\
    \ = 0; i < words.length; i++){\n\t\tvar word = words[i];\n\t\tvar dict = {};\n\
    \t\tvar count = 0;\n\t\tfor(var j = 0; j < word.length; j++){\n\t\t\tvar char\
    \ = word[j];\n\t\t\tif(!dict[char]){\n\t\t\t\tdict[char] = 1;\n\t\t\t\tcount++;\n\
    \t\t\t}\n\t\t}\n\t\tif(count > maxcount){\n\t\t\tmaxcount = count;\n\t\t\tresult\
    \ = word;\n\t\t}else if(count == maxcount){\n\t\t\tif(word < result){\n\t\t\t\t\
    result = word;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n", "    var max = 0;\n\
    \    var max_word = \"\";\n    for(var i = 0; i < words.length; i++){\n      \
    \  if(words[i].length > max){\n            max = words[i].length;\n          \
    \  max_word = words[i];\n        }\n    }\n    return max_word;\n}\n", "    let\
    \ max_word = \"\";\n    let max_char = 0;\n    for(let word of words){\n     \
    \   let unique_char = new Set(word.split(\"\"));\n        let count = unique_char.size;\n\
    \        if(count > max_char){\n            max_char = count;\n            max_word\
    \ = word;\n        }\n    }\n    return max_word;\n}", "    var max = words[0].length;\n\
    \    var temp = words[0];\n    for(var i = 1; i < words.length; i++){\n      \
    \  if(words[i].length > max){\n            max = words[i].length;\n          \
    \  temp = words[i];\n        }\n    }\n    return temp;\n}", "    let dup = []\n\
    \    for(let i=0; i<words.length; i++){\n        let word = words[i];\n      \
    \  let arr = word.split('');\n        let sorted = arr.sort();\n        let count\
    \ = 0;\n        for(let j=0; j<arr.length; j++){\n            if(arr[j] === arr[j+1]){\n\
    \                count += 1;\n            }\n        }\n        if(count === 0){\n\
    \            return word;\n        }\n        else{\n            dup.push(count);\n\
    \        }\n    }\n    let max = Math.max(...dup);\n    let max_index = dup.indexOf(max);\n\
    \    return words[max_index];\n}\n", "    words.sort();\n    var max = {\n   \
    \     index: 0,\n        count:0\n    };\n    for(var i = 0; i < words.length;\
    \ i++){\n        var unique = \"\";\n        for(var j = 0; j < words[i].length;\
    \ j++){\n            if(unique.indexOf(words[i][j]) == -1){\n                unique\
    \ += words[i][j];\n            }\n        }\n        if(unique.length > max.count){\n\
    \            max.count = unique.length;\n            max.index = i;\n        }\n\
    \    }\n    return words[max.index];\n}\n", "  let res = '';\n  let max = 0;\n\
    \  for(let word of words){\n    let cur = find_set(word);\n    if(cur.size > max){\n\
    \      max = cur.size;\n      res = word;\n    }else if(cur.size === max){\n \
    \     if(word < res){\n        res = word;\n      }\n    }\n  }\n  return res;\n\
    }\n", "\tvar result = \"\";\n\tvar max = 0;\n\tvar len = words.length;\n\tfor(var\
    \ i = 0; i < len; i++){\n\t\tvar word = words[i];\n\t\tvar wlen = word.length;\n\
    \t\tvar count = 0;\n\t\tfor(var j = 0; j < wlen; j++){\n\t\t\tif(word.indexOf(word[j])\
    \ == word.lastIndexOf(word[j])){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count\
    \ > max){\n\t\t\tmax = count;\n\t\t\tresult = word;\n\t\t}\n\t}\n\treturn result;\n\
    }", "    let max = 0;\n    let newWord = null;\n    for(let i = 0; i < words.length;\
    \ i++){\n        let word = words[i];\n        let newCount = 0;\n        for(let\
    \ j = 0; j < word.length; j++){\n            let c = word[j];\n            if(word.indexOf(c)\
    \ === word.lastIndexOf(c)){\n                newCount += 1;\n            }\n \
    \       }\n        if(newCount > max){\n            max = newCount;\n        \
    \    newWord = word;\n        }\n    }\n    return newWord;\n}", "  var result\
    \ = null;\n  var max = 0;\n  var l = words.length;\n  for(var i = 0; i < l; i++){\n\
    \    var word = words[i];\n    var uniqueChars = find_unique_chars(word);\n  \
    \  if(uniqueChars > max){\n      max = uniqueChars;\n      result = word;\n  \
    \  }\n  }\n  return result;\n}\n", "    let longest = \"\";\n    let unique =\
    \ new Set();\n    for(let i = 0; i < words.length; i++){\n        for(let j =\
    \ 0; j < words[i].length; j++){\n            unique.add(words[i][j]);\n      \
    \  }\n        if(unique.size > longest.length){\n            longest = words[i];\n\
    \        }\n        unique.clear();\n    }\n    return longest;\n}\nfind_max([\"\
    apple\", \"banana\", \"watermelon\"]);\nfind_max([\"ana\", \"zzy\"]);\nfind_max([\"\
    space\", \"or\", \"comma\"]);", "  let max = 0;\n  let result = '';\n  for(const\
    \ word of words){\n    let map = {};\n    for(const c of word){\n      map[c]\
    \ = true;\n    }\n    if(Object.keys(map).length > max){\n      max = Object.keys(map).length;\n\
    \      result = word;\n    }\n  }\n  return result;\n}\n", "\tvar max_word = words[0];\n\
    \tfor(var i = 1; i < words.length; i++){\n\t\tif(words[i].length > max_word.length){\n\
    \t\t\tmax_word = words[i];\n\t\t}\n\t}\n\treturn max_word;\n}\n", "    let max\
    \ = words[0];\n    for(let i = 0; i < words.length; i++){\n        let n = 0;\n\
    \        for(let j = 0; j < words[i].length; j++){\n            if(words[i].indexOf(words[i][j])\
    \ === words[i].lastIndexOf(words[i][j])){\n                n++;\n            }\n\
    \        }\n        if(n > max.length){\n            max = words[i];\n       \
    \ }\n    }\n    return max;\n}\n", "  // your code here\n}\n", "    var max =\
    \ 0;\n    var temp_max = 0;\n    var max_word = \"\";\n    for(var i = 0; i <\
    \ words.length; i++){\n        temp_max = unique_characters(words[i]);\n     \
    \   if(temp_max > max){\n            max = temp_max;\n            max_word = words[i];\n\
    \        }\n    }\n    return max_word;\n}\n", "    let word = \"\";\n    let\
    \ count = 0;\n    for(let i=0; i<words.length; i++){\n        let wordCount =\
    \ words[i].split(\"\").sort().join(\"\").match(/(.)\\1+/g) || [];\n        let\
    \ newCount = wordCount.length;\n        if(newCount > count){\n            count\
    \ = newCount;\n            word = words[i];\n        }\n    }\n    return word;\n\
    }\n", "    var result = \"\";\n    var max_unique_characters = 0;\n    for(var\
    \ i = 0; i < words.length; i++){\n        var word = words[i];\n        var unique_characters\
    \ = 0;\n        for(var j = 0; j < word.length; j++){\n            if(word.indexOf(word[j])\
    \ == word.lastIndexOf(word[j])){\n                unique_characters++;\n     \
    \       }\n        }\n        if(unique_characters > max_unique_characters){\n\
    \            max_unique_characters = unique_characters;\n            result =\
    \ word;\n        }\n    }\n    return result;\n}", "    let max;\n    let max_len\
    \ = 0;\n    for(let word of words){\n        if(word.length > max_len){\n    \
    \        max = word;\n            max_len = word.length;\n        }\n    }\n \
    \   return max;\n}", "  var max = 0;\n  var maxWord = words[0];\n  for(var i =\
    \ 0; i < words.length; i++){\n    if(uniqueChars(words[i]) > max){\n      max\
    \ = uniqueChars(words[i]);\n      maxWord = words[i];\n    }\n  }\n  return maxWord;\n\
    }\n", "  let max = 0;\n  let result = words[0];\n  for(let i = 0; i < words.length;\
    \ i++){\n    let temp = new Set(words[i].split('')).size;\n    if(temp > max){\n\
    \      max = temp;\n      result = words[i];\n    }\n  }\n  return result;\n}\n",
  "  if(words.length === 0){\n    return null;\n  }\n  var maxWord = {\n    word:\
    \ words[0],\n    count: count_chars(words[0])\n  };\n  for(var i = 1; i < words.length;\
    \ i++){\n    var temp = count_chars(words[i]);\n    if(temp > maxWord.count){\n\
    \      maxWord.word = words[i];\n      maxWord.count = temp;\n    }\n  }\n  return\
    \ maxWord.word;\n}\n", "    if(!words.length) return;\n    let maxUniqueCharWords\
    \ = words[0];\n    let maxUniqueCharCount = uniqueCharCount(words[0]);\n    words.forEach(word\
    \ => {\n        let uniqueCharCountWord = uniqueCharCount(word);\n        if(uniqueCharCountWord\
    \ > maxUniqueCharCount) {\n            maxUniqueCharCount = uniqueCharCountWord;\n\
    \            maxUniqueCharWords = word;\n        } else if(uniqueCharCountWord\
    \ === maxUniqueCharCount && word < maxUniqueCharWords) {\n            maxUniqueCharWords\
    \ = word;\n        }\n    });\n    return maxUniqueCharWords;\n}\n", "  var index\
    \ = 0;\n  var max_val = 0;\n  var max_index = 0;\n  while(index < words.length){\n\
    \    var unique_letter = [];\n    var letter_index = 0;\n    while(letter_index\
    \ < words[index].length){\n      if(unique_letter.indexOf(words[index][letter_index])\
    \ == -1){\n        unique_letter.push(words[index][letter_index]);\n      }\n\
    \      letter_index++;\n    }\n    if(unique_letter.length > max_val){\n     \
    \ max_val = unique_letter.length;\n      max_index = index;\n    }\n    index++;\n\
    \  }\n  return words[max_index];\n}\n", "  let word = words[0];\n  for(let i =\
    \ 1; i < words.length; i++){\n    if(word.length < words[i].length) word = words[i];\n\
    \  }\n  return word;\n}\n", "  var max_count = 0;\n  var result = '';\n  for(var\
    \ i = 0; i < words.length; i++){\n    var word = words[i];\n    var count = 0;\n\
    \    for(var j = 0; j < word.length; j++){\n      if(word.indexOf(word[j]) ===\
    \ j){\n        count++;\n      }\n    }\n    if(count > max_count){\n      max_count\
    \ = count;\n      result = word;\n    }\n  }\n  return result;\n}\n", "   var\
    \ max_word = \"\";\n   var max_count = 0;\n   var word_count = 0;\n   for(var\
    \ i = 0; i < words.length; i++){\n      var string = words[i];\n      var unique_char\
    \ = [];\n      for(var j = 0; j < string.length; j++){\n         if(unique_char.indexOf(string[j])\
    \ == -1){\n            unique_char.push(string[j]);\n         }\n      }\n   \
    \   word_count = unique_char.length;\n      if(word_count > max_count){\n    \
    \     max_count = word_count;\n         max_word = string;\n      }\n   }\n  \
    \ return max_word;\n}", "    let arr_uniq = [];\n    for(let i=0; i<words.length;\
    \ i++){\n        arr_uniq.push(words[i].split('').filter((el,index,arr)=>{\n \
    \           return arr.indexOf(el) === index;\n        }).join(''));\n    }\n\
    \    let max_length = arr_uniq.reduce((prev,current)=>{\n        return Math.max(prev,current.length);\n\
    \    },0);\n    let arr_max = arr_uniq.filter(el=>{\n        return el.length\
    \ === max_length;\n    });\n    return arr_max.sort((a,b)=>{\n        return a.localeCompare(b);\n\
    \    })[0];\n}\nfind_max(['a','aa','aaa','aaaaa','aaaa','a','aaa','aaaa','aaa','aaa','aa','a','a','a','a','aa','aa','a','a','aa','aaa','aaaa','aa','a','a','a','a','a','aa','aa','aa','aa','a','aa','aa','aa','a','a','a','a','aa','aa','aa','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a','a",
  "    let max = 0;\n    let result = \"\";\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(max < uniqueChars(words[i])){\n            max = uniqueChars(words[i]);\n\
    \            result = words[i];\n        }\n    }\n    return result;\n}", " \
    \ var max = 0;\n  var output = '';\n  for(var i = 0; i < words.length; i++){\n\
    \    var chars = {};\n    for(var j = 0; j < words[i].length; j++){\n      if(chars[words[i][j]]\
    \ === undefined){\n        chars[words[i][j]] = true;\n      }\n    }\n    if(Object.keys(chars).length\
    \ > max){\n      max = Object.keys(chars).length;\n      output = words[i];\n\
    \    }\n  }\n  return output;\n}", "    var data = [];\n    for(var i = 0; i <\
    \ words.length; i++){\n        var uniqueLetters = {};\n        for(var j = 0;\
    \ j < words[i].length; j++){\n            uniqueLetters[words[i][j]] = 1;\n  \
    \      }\n        data.push(uniqueLetters);\n    }\n    var uniqueLettersCount\
    \ = [];\n    for(var i = 0; i < data.length; i++){\n        uniqueLettersCount.push(Object.keys(data[i]).length);\n\
    \    }\n    var max = uniqueLettersCount[0];\n    var maxIndex = 0;\n    for(var\
    \ i = 0; i < uniqueLettersCount.length; i++){\n        if(uniqueLettersCount[i]\
    \ > max){\n            max = uniqueLettersCount[i];\n            maxIndex = i;\n\
    \        }\n    }\n    return words[maxIndex];\n}", "  var max_count = 0;\n  var\
    \ max_word = '';\n  for(var i = 0; i < words.length; i++){\n    if(words[i].length\
    \ > max_count){\n      max_count = words[i].length;\n      max_word = words[i];\n\
    \    }\n  }\n  return max_word;\n}", "  let max_char = 0;\n  let max_word = '';\n\
    \  for(let word of words){\n    if(max_char < [...new Set(word)].length){\n  \
    \    max_char = [...new Set(word)].length;\n      max_word = word;\n    }\n  }\n\
    \  return max_word;\n}", "  var result = '';\n  var max = 0;\n  for(var i = 0;\
    \ i < words.length; i++){\n    var word = words[i];\n    var chars = {};\n   \
    \ for(var j = 0; j < word.length; j++){\n      var char = word[j];\n      if(!chars[char]){\n\
    \        chars[char] = true;\n      }\n    }\n    if(Object.keys(chars).length\
    \ > max){\n      max = Object.keys(chars).length;\n      result = word;\n    }\
    \ else if(Object.keys(chars).length === max){\n      if(word < result){\n    \
    \    result = word;\n      }\n    }\n  }\n  return result;\n}", "    let max =\
    \ words[0].length;\n    let max_word = words[0];\n    let max_words = [];\n  \
    \  let word;\n    for(let i = 0; i < words.length; i++){\n        word = words[i];\n\
    \        if(word.length > max){\n            max = word.length;\n            max_word\
    \ = word;\n        }else if(word.length === max){\n            max_words.push(word);\n\
    \        }\n    }\n    max_words.push(max_word);\n    console.log(max_words);\n\
    \    for(let i = 0; i < max_words.length; i++){\n        for(let j = i + 1; j\
    \ < max_words.length; j++){\n            if(max_words[i] > max_words[j]){\n  \
    \              let temp = max_words[i];\n                max_words[i] = max_words[j];\n\
    \                max_words[j] = temp;\n            }\n        }\n    }\n    return\
    \ max_words[0];\n}\n\nfind_max([\"apple\", \"banana\", \"pineapple\", \"watermelon\"\
    ]);\n\nfind_max([\"appy\", \"banana\", \"pineapple\", \"watermelon\"]);\n\nfind_max([\"\
    good\", \"apple\", \"banana\", \"pineapple\", \"watermelon\"]);", "  var maxCount\
    \ = 0;\n  var maxString = \"\";\n  for(var i = 0; i < words.length; i++){\n  \
    \  var word = words[i];\n    var set = new Set(word);\n    if(set.size > maxCount){\n\
    \      maxCount = set.size;\n      maxString = word;\n    }else if(set.size ==\
    \ maxCount){\n      if(word < maxString){\n        maxString = word;\n      }\n\
    \    }\n  }\n  return maxString;\n}\n\nvar words = ['abc', 'def', 'xya', 'xab',\
    \ 'dec', 'xyz'];", "    var lis={}\n    for(var i=0;i<words.length;i++){\n   \
    \     var count=0\n        var x=words[i]\n        for(var j=0;j<x.length;j++){\n\
    \            var y=x[j]\n            if(!lis[y]){\n                lis[y]=y\n\
    \                count+=1\n            }\n        }\n        lis[x]=count\n  \
    \  }\n    var key=Object.keys(lis)\n    var val=Object.values(lis)\n    var max=Math.max(...val)\n\
    \    var index=[]\n    for(var i=0;i<val.length;i++){\n        if(val[i]==max){\n\
    \            index.push(i)\n        }\n    }\n    var ans=[]\n    for(var i=0;i<index.length;i++){\n\
    \        ans.push(key[index[i]])\n    }\n    if(ans.length==1){\n        return\
    \ ans[0]\n    }\n    else{\n        ans.sort()\n        return ans[0]\n    }\n\
    }", "  let max_count = 0;\n  let max_word = '';\n  for(let w of words){\n    let\
    \ unique_chars = {};\n    for(let c of w){\n      unique_chars[c] = true;\n  \
    \  }\n    let num_unique = Object.keys(unique_chars).length;\n    if(num_unique\
    \ > max_count){\n      max_count = num_unique;\n      max_word = w;\n    }\n \
    \ }\n  return max_word;\n}\n", "    var i;\n    var chars = 0;\n    var max =\
    \ 0;\n    var maxstr = '';\n    for(i = 0; i < words.length; i++){\n        for(let\
    \ j = 0; j < words[i].length; j++){\n            if(words[i].indexOf(words[i][j])\
    \ === words[i].lastIndexOf(words[i][j])){\n                chars += 1;\n     \
    \       }\n        }\n        if(chars > max){\n            max = chars;\n   \
    \         maxstr = words[i];\n        }\n        chars = 0;\n    }\n    return\
    \ maxstr;\n}", "  var longest = 0;\n  var longestWord = \"\";\n  for(var i = 0;\
    \ i < words.length; i++){\n    if(longest < _.uniq(words[i]).length){\n      longest\
    \ = _.uniq(words[i]).length;\n      longestWord = words[i];\n    }\n  }\n  return\
    \ longestWord;\n}", "  const words_list = words.split(\" \");\n  const result\
    \ = []\n  words_list.forEach(element => {\n    const element_list = element.split(\"\
    \")\n    const unique_list = element_list.filter((item, index) => element_list.indexOf(item)\
    \ == index)\n    const unique_list_length = unique_list.length\n    result.push(unique_list_length)\n\
    \  });\n  console.log(result)\n  const max_index = result.indexOf(Math.max(...result))\n\
    \  console.log(max_index)\n  console.log(words_list[max_index])\n  return words_list[max_index]\n\
    }", "\tvar sorted = words.sort(function(a,b){\n\t\treturn a.length - b.length\n\
    \t})\n\tvar highest = sorted[sorted.length-1]\n\tvar highest_length = highest.length\n\
    \tvar filtered = sorted.filter(function(word){\n\t\treturn word.length == highest_length\n\
    \t})\n\tif(filtered.length == 1){\n\t\treturn filtered[0]\n\t}\n\telse{\n\t\t\
    return highest\n\t}\n}\n\n", "    let l=[];\n    let e=[];\n    let l2=[];\n \
    \   let s=\"\";\n    let k=0;\n    let r=[];\n    words.forEach(element => {\n\
    \        s=\"\";\n        l=[];\n        l2=[];\n        r=[];\n        e=element.split(\"\
    \");\n        e.forEach(element1 => {\n            l.push(element1);\n       \
    \ });\n        l.forEach(element2 => {\n            if(l2.indexOf(element2)==-1){\n\
    \                l2.push(element2);\n            }\n        });\n        l2.forEach(element3\
    \ => {\n            s=s+element3;\n        });\n        r.push(l2.length);\n \
    \       r.push(s);\n        r.push(element);\n        r.push(k);\n        k++;\n\
    \        l=[];\n        l.push(r);\n        console.log(l);\n    });\n    l=[];\n\
    \    l2=[];\n    r=[];\n    l2=words.sort();\n    console.log(l2);\n}", "    let\
    \ max_len = -1;\n    let max_word = \"\";\n    for(let i = 0; i < words.length;\
    \ i++){\n        const word = words[i];\n        const len = get_unique_chars(word);\n\
    \        if(len > max_len){\n            max_len = len;\n            max_word\
    \ = word;\n        }\n    }\n    return max_word;\n}", "    var max = 0;\n   \
    \ var result = '';\n    for(var i = 0; i < words.length; i++){\n        var num_unique\
    \ = 0;\n        var word = words[i];\n        for(var j = 0; j < word.length;\
    \ j++){\n            var char = word[j];\n            var is_unique = true;\n\
    \            for(var k = 0; k < word.length; k++){\n                if(j !== k\
    \ && char === word[k]){\n                    is_unique = false;\n            \
    \    }\n            }\n            if(is_unique === true){\n                num_unique++;\n\
    \            }\n        }\n        if(num_unique > max){\n            max = num_unique;\n\
    \            result = word;\n        }\n    }\n    return result;\n}\n", "  var\
    \ max = words[0];\n  var i = 1;\n  while(i < words.length){\n    if(max.length\
    \ < words[i].length){\n      max = words[i];\n    }\n    i++;\n  }\n  return max;\n\
    }\n", "    let max = {length:0, word: \"\"};\n    words.forEach(word => {\n  \
    \      let tmp = word.split(\"\").filter((item, pos, self) =>{\n            return\
    \ self.indexOf(item) == pos;\n        }).length;\n        if(tmp>max.length){\n\
    \            max.length = tmp;\n            max.word = word;\n        }\n    });\n\
    \    return max.word;\n}\n", "    let my_map = new Map();\n    let max_word =\
    \ '';\n    for(word of words){\n        let unique_set = new Set();\n        for(let\
    \ i = 0; i < word.length; i++){\n            unique_set.add(word[i]);\n      \
    \  }\n        if(!my_map.has(unique_set.size)){\n            my_map.set(unique_set.size,\
    \ word);\n        }else{\n            if(word < my_map.get(unique_set.size)){\n\
    \                my_map.set(unique_set.size, word);\n            }\n        }\n\
    \    }\n    let max_key = 0;\n    for(let key of my_map.keys()){\n        if(key\
    \ > max_key){\n            max_key = key;\n        }\n    }\n    return my_map.get(max_key);\n\
    }", "  return words.sort(function(a,b){\n    return a.split('').sort().filter(function(e,i,a){return\
    \ e!=a[i-1];}).length - b.split('').sort().filter(function(e,i,a){return e!=a[i-1];}).length;\n\
    \  }).shift();\n}", "  var letters = {};\n  var max_letters = 0;\n  var max_words\
    \ = [];\n  for(var i = 0; i < words.length; i++){\n    var word = words[i];\n\
    \    var count = 0;\n    for(var j = 0; j < word.length; j++){\n      var char\
    \ = word[j];\n      if(letters[char] === undefined){\n        letters[char] =\
    \ 0;\n        count++;\n      }\n    }\n    if(count > max_letters){\n      max_letters\
    \ = count;\n      max_words = [word];\n    }\n    else if(count === max_letters){\n\
    \      max_words.push(word);\n    }\n  }\n  if(max_words.length === 1){\n    return\
    \ max_words[0];\n  }\n  else{\n    var lcs = max_words[0];\n    for(var i = 1;\
    \ i < max_words.length; i++){\n      var word = max_words[i];\n      if(word <\
    \ lcs){\n        lcs = word;\n      }\n    }\n    return lcs;\n  }\n}\n", "  \
    \  var word = \"\";\n    var count = 0;\n    for(var i = 0; i < words.length;\
    \ i++){\n        var unique = [];\n        for(var j = 0; j < words[i].length;\
    \ j++){\n            if(unique.indexOf(words[i][j]) == -1){\n                unique.push(words[i][j]);\n\
    \            }\n        }\n        if(unique.length > count){\n            count\
    \ = unique.length;\n            word = words[i];\n        }\n    }\n    return\
    \ word;\n}\n\nvar words = ['pizza', 'mazip', 'egg', 'cherry'];", "  var res =\
    \ \"\";\n  var max = 0;\n  for(var i = 0; i < words.length; i++){\n    var cnt\
    \ = 0;\n    var tmp = words[i];\n    while(tmp){\n      var t = tmp[0];\n    \
    \  tmp = tmp.substring(1);\n      if(tmp.indexOf(t) == -1)\n        cnt++;\n \
    \   }\n    if(cnt > max){\n      max = cnt;\n      res = words[i];\n    }\n  }\n\
    \  return res;\n}\nvar words = ['a', 'aa', 'aaa', 'aaaaa', 'aaaa', 'ababa', 'aaaaaaaaa'];",
  "  var maxWord = words[0];\n  var maxNum = 0;\n  for(var i = 0; i < words.length;\
    \ i++){\n    var currentWord = words[i];\n    var currentNum = countUniqueChar(currentWord);\n\
    \    if(currentNum > maxNum){\n      maxNum = currentNum;\n      maxWord = currentWord;\n\
    \    }\n  }\n  return maxWord;\n}\n", "  let max = 0;\n  let word = null;\n  for(let\
    \ str of words){\n    let unique = 0;\n    let set = new Set();\n    for(let c\
    \ of str){\n      if(!set.has(c)){\n        unique++;\n        set.add(c);\n \
    \     }\n    }\n    if(unique > max){\n      max = unique;\n      word = str;\n\
    \    }\n  }\n  return word;\n}\n", "    let letters = {};\n    let max = 0;\n\
    \    let max_index = 0;\n    for(let i=0; i<words.length; i++){\n        let word\
    \ = words[i];\n        for(let j=0; j<word.length; j++){\n            if(!letters[word[j]]){\n\
    \                letters[word[j]] = true;\n            }\n        }\n        if(Object.keys(letters).length\
    \ > max){\n            max = Object.keys(letters).length;\n            max_index\
    \ = i;\n        }\n        letters = {};\n    }\n    return words[max_index];\n\
    }\n", "  var max = 0;\n  var index = 0;\n  for(var i = 0; i < words.length; i++){\n\
    \    var set = new Set(words[i]);\n    if(set.size > max){\n      max = set.size;\n\
    \      index = i;\n    }\n  }\n  return words[index];\n}\n", "    var length =\
    \ words.length;\n    var max = words[0];\n    var max_word = words[0];\n    var\
    \ temp_dict = {};\n    var i = 0;\n    while(i < length){\n        var word =\
    \ words[i];\n        var chars = word.split('');\n        var j = 0;\n       \
    \ var char_count = 0;\n        while(j < chars.length){\n            if(temp_dict[chars[j]]\
    \ == undefined){\n                temp_dict[chars[j]] = 1;\n                char_count++;\n\
    \            }\n            j++;\n        }\n        if(char_count > max){\n \
    \           max = char_count;\n            max_word = word;\n        }\n     \
    \   temp_dict = {};\n        i++;\n    }\n    return max_word;\n}\nvar words =\
    \ ['apple', 'Ace', 'action', 'act', 'Bat', 'best', 'cat'];", "    let result =\
    \ {\n        word: words[0],\n        unique: 0\n    };\n    let unique = 0;\n\
    \    for(let word of words){\n        unique = count_unique(word);\n        if(unique\
    \ > result.unique){\n            result.word = word;\n            result.unique\
    \ = unique;\n        }\n    }\n    return result.word;\n}\n", "  var unique_characters\
    \ = [];\n  var max = 0;\n  var word = \"\";\n  for(var i = 0; i < words.length;\
    \ i++){\n    var count = 0;\n    var word_ = words[i];\n    for(var j = 0; j <\
    \ word_.length; j++){\n      var character = word_[j];\n      if(unique_characters.indexOf(character)\
    \ === -1){\n        unique_characters.push(character);\n        count++;\n   \
    \   }\n    }\n    if(count > max){\n      max = count;\n      word = word_;\n\
    \    }\n  }\n  return word;\n}", "\tlet i, max = [], current = {},\n\t\tmaxCount\
    \ = 0, maxWord = '';\n\tfor(i = 0; i < words.length; i++) {\n\t\tcurrent = {};\n\
    \t\tlet currentWord = words[i];\n\t\tfor(let j = 0; j < currentWord.length; j++)\
    \ {\n\t\t\tlet ch = currentWord[j];\n\t\t\tif(current[ch]) {\n\t\t\t\tcontinue;\n\
    \t\t\t}\n\t\t\tcurrent[ch] = true;\n\t\t}\n\t\tlet currentCount = Object.keys(current).length;\n\
    \t\tif(currentCount > maxCount) {\n\t\t\tmaxCount = currentCount;\n\t\t\tmaxWord\
    \ = currentWord;\n\t\t}\n\t}\n\treturn maxWord;\n}\n\nlet word = 'alpaca';\nlet\
    \ maxCount = 0;\nlet maxWord = '';\nfind_max([word]);", "    var max_word = \"\
    \";\n    var max_chars = 0;\n    for(var i = 0; i < words.length; i++){\n    \
    \    var current_word = words[i];\n        var chars = {};\n        for(var j\
    \ = 0; j < current_word.length; j++){\n            var c = current_word[j];\n\
    \            if(chars[c] !== undefined){\n                chars[c]++;\n      \
    \      }\n            else{\n                chars[c] = 1;\n            }\n  \
    \      }\n        var unique_chars = 0;\n        for(var char in chars){\n   \
    \         unique_chars++;\n        }\n        if(unique_chars > max_chars){\n\
    \            max_chars = unique_chars;\n            max_word = current_word;\n\
    \        }\n    }\n    return max_word;\n}\n", "\n}\n", "  var longestWord = words[0];\n\
    \  var longestWordLength = 0;\n  for(var i = 0; i < words.length; i++){\n    var\
    \ word = words[i];\n    var counter = 0;\n    for(var j = 0; j < word.length;\
    \ j++){\n      var currentChar = word[j];\n      if(word.indexOf(currentChar)\
    \ === word.lastIndexOf(currentChar)){\n        counter++;\n      }\n    }\n  \
    \  if(counter > longestWordLength){\n      longestWordLength = counter;\n    \
    \  longestWord = word;\n    }\n  }\n  return longestWord;\n}\nvar words = ['ant',\
    \ 'color', 'cat', 'dog', 'ape'];", "    var max = words[0];\n    var maxCount\
    \ = uniqueCount(words[0]);\n    for(var i = 1; i < words.length; i++){\n     \
    \   var currentUniqueCount = uniqueCount(words[i]);\n        if(currentUniqueCount\
    \ > maxCount){\n            max = words[i];\n            maxCount = currentUniqueCount;\n\
    \        }\n    }\n    return max;\n}\n", "  var max_length = words[0].length;\n\
    \  var max_word = words[0];\n  var num_words = 0;\n  var max_unique = 0;\n  var\
    \ unique_count = 0;\n  var unique_word = \"\";\n  var unique_count_max = 0;\n\
    \  var unique_word_max = \"\";\n  var count = 0;\n  var char = 0;\n  var found\
    \ = false;\n  var i = 0;\n  var j = 0;\n  var k = 0;\n  var x = 0;\n  var y =\
    \ 0;\n  for(i = 0; i < words.length; i++){\n    if(words[i].length > max_length){\n\
    \      max_length = words[i].length;\n      max_word = words[i];\n    }\n  }\n\
    \  //console.log(\"Max length: \" + max_length);\n  //console.log(\"Max word:\
    \ \" + max_word);\n  for(j = 0; j < words.length; j++){\n    count = 0;\n    char\
    \ = 0;\n    for(k = 0; k < words[j].length; k++){\n      for(x = 0; x < words[j].length;\
    \ x++){\n        if(words[j][k] == words[j][x]){\n          found = true;\n  \
    \      }\n      }\n      if(found == false){\n        count++;\n      }\n    \
    \  found = false;\n    }\n    if(count > unique_count_max){\n      unique_count_max\
    \ = count;\n      unique_word_max = words[j];\n    }\n  }\n  //console.log(\"\
    Max unique characters: \" + unique_count_max);\n  //console.log(\"Word with max\
    \ unique characters: \" + unique_word_max);\n  return unique_word_max;\n}\n",
  "    let maxNum = 0;\n    let word= \"\";\n    for(let i = 0; i < words.length;\
    \ i++){\n        let temp_arr = words[i].split(\"\");\n        let word_arr =\
    \ [];\n        for(let j = 0; j < temp_arr.length; j++){\n            if(word_arr.indexOf(temp_arr[j])\
    \ < 0){\n                word_arr.push(temp_arr[j]);\n            }\n        }\n\
    \        if(word_arr.length > maxNum){\n            maxNum = word_arr.length;\n\
    \            word = words[i];\n        }\n    }\n    return word;\n}\nlet words\
    \ = [\"abcd\", \"acbd\", \"adcb\", \"abdc\", \"abcd\"];", "    var max_word =\
    \ \"\";\n    var max_char = 0;\n    var myMap = new Map();\n    var current_max\
    \ = 0;\n    var current_word = \"\";\n    for(var i = 0; i < words.length; i++){\n\
    \        var current_word = words[i];\n        for(var j = 0; j < current_word.length;\
    \ j++){\n            if(!myMap.has(current_word[j])){\n                myMap.set(current_word[j],\
    \ 1);\n            }\n        }\n        if(myMap.size > max_char){\n        \
    \    max_char = myMap.size;\n            max_word = current_word;\n        }\n\
    \        myMap.clear();\n    }\n    return max_word;\n}\n", "  let max_count =\
    \ 0;\n  let word = \"\";\n  for(let i = 0; i < words.length; i++){\n    let my_obj\
    \ = {};\n    for(let j = 0; j < words[i].length; j++){\n      if(!my_obj[words[i][j]]){\n\
    \        my_obj[words[i][j]] = 1;\n      }\n    }\n    if(Object.keys(my_obj).length\
    \ > max_count){\n      max_count = Object.keys(my_obj).length;\n      word = words[i];\n\
    \    }\n  }\n  return word;\n}\n", "    var max = words[0];\n    var max_len =\
    \ 0;\n    for(var i = 0; i < words.length; i++){\n        var curr_len = find_uniques(words[i]);\n\
    \        if(curr_len > max_len){\n            max = words[i];\n            max_len\
    \ = curr_len;\n        }\n    }\n    return max;\n}", "\tvar max_length=0;\n\t\
    var max_word=\"\";\n\tfor(var i=0;i<words.length;i++){\n\t\t\tvar temp=words[i].split(\"\
    \");\n\t\t\tvar length_temp=0;\n\t\t\tfor(var j=0;j<temp.length;j++){\n\t\t\t\t\
    var count=0;\n\t\t\t\tfor(var k=0;k<temp.length;k++){\n\t\t\t\t\tif(temp[j]===temp[k]){\n\
    \t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(count==1){\n\t\t\t\t\t\
    length_temp++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(length_temp>max_length){\n\t\t\t\t\
    max_length=length_temp;\n\t\t\t\tmax_word=words[i];\n\t\t\t}\n\t\t\telse if(length_temp==max_length){\n\
    \t\t\t\tif(words[i]<max_word){\n\t\t\t\t\tmax_word=words[i];\n\t\t\t\t}\n\t\t\t\
    }\n\t}\n\treturn max_word;\n}", "    var max = 0;\n    var word = \"\";\n    for(var\
    \ i = 0; i < words.length; i++){\n        var count = count_unique(words[i]);\n\
    \        if(count > max){\n            max = count;\n            word = words[i];\n\
    \        }\n    }\n    return word;\n}\n", "    var max_count = 0;\n    var max_word\
    \ = words[0];\n    for(var i = 0; i < words.length; i++){\n        var count =\
    \ 0;\n        var current_word = words[i];\n        var char_array = current_word.split('');\n\
    \        var distinct_array = [];\n        for(var j = 0; j < char_array.length;\
    \ j++){\n            if(distinct_array.indexOf(char_array[j]) === -1){\n     \
    \           distinct_array.push(char_array[j]);\n            }\n        }\n  \
    \      if(distinct_array.length > max_count){\n            max_count = distinct_array.length;\n\
    \            max_word = current_word;\n        }\n    }\n    return max_word;\n\
    }", "    var max=0;\n    var max_num=0;\n    var max_word;\n    for(var i=0;i<words.length;i++){\n\
    \        var str=words[i];\n        var n=0;\n        for(var j=0;j<str.length;j++){\n\
    \            if(str.indexOf(str[j])===str.lastIndexOf(str[j])){\n            \
    \    n++;\n            }\n        }\n        if(n>max_num){\n            max_num=n;\n\
    \            max_word=str;\n        }\n    }\n    return max_word;\n}", "    var\
    \ max_len = 0;\n    var ans;\n    for(var i=0; i<words.length; i++){\n       \
    \ var curr_len = unique_char(words[i]);\n        if(curr_len > max_len){\n   \
    \         max_len = curr_len;\n            ans = words[i];\n        }\n    }\n\
    \    return ans;\n}\n", "    let max_word = words[0];\n    let max_len = unique(words[0]);\n\
    \    for(let i = 1; i < words.length; i++){\n        let new_max = unique(words[i]);\n\
    \        if(new_max > max_len){\n            max_len = new_max;\n            max_word\
    \ = words[i];\n        }\n    }\n    return max_word;\n}\n", "  // Split words\
    \ into arrays of letters\n  let wordArr = words.map(word => word.split(''));\n\
    \  // Map arrays of letters to arrays of unique letters\n  let uniqueArr = wordArr.map(arr\
    \ => Array.from(new Set(arr)));\n  // Map unique arrays to unique arrays lengths\n\
    \  let lengths = uniqueArr.map(arr => arr.length);\n  // Find max length\n  let\
    \ max = Math.max(...lengths);\n  // Find index of max length\n  let maxIndex =\
    \ lengths.indexOf(max);\n  // Return word at maxIndex\n  return words[maxIndex];\n\
    }", "\n}\n\n", "  let best={};\n  for(let i=0;i<words.length;i++){\n    let chars={};\n\
    \    for(let j=0;j<words[i].length;j++){\n      chars[words[i][j]]=true;\n   \
    \ }\n    best[words[i]]=Object.keys(chars).length;\n  }\n  let max={num:0,text:''};\n\
    \  for(let i in best){\n    if(best[i]>max.num){\n      max.num=best[i];\n   \
    \   max.text=i;\n    }\n  }\n  return max.text;\n}\n", "  var max = 0, maxWord\
    \ = \"\";\n  for(var i = 0; i < words.length; i++){\n    if(isMax(words[i], max)){\n\
    \      max = words[i].length;\n      maxWord = words[i];\n    }\n  }\n  return\
    \ maxWord;\n}\n", "  var str = \"\";\n  var myObject = {};\n  for(var i = 0; i\
    \ < words.length; i++){\n    var unique = [];\n    for(var k = 0; k < words[i].length;\
    \ k++){\n      if(unique.indexOf(words[i][k]) == -1){\n        unique.push(words[i][k]);\n\
    \      }\n    }\n    if(unique.length > myObject.unique){\n      myObject.unique\
    \ = unique.length;\n      myObject.string = words[i];\n    }\n  }\n  return myObject.string;\n\
    }\n", "\tlet word = \"\";\n\tlet max = 0;\n\twords.forEach(function(element) {\n\
    \t\tlet unique = 0;\n\t\telement.split(\"\").forEach(function(item){\n\t\t\tif(element.indexOf(item)\
    \ === element.lastIndexOf(item)){\n\t\t\t\tunique++;\n\t\t\t}\n\t\t});\n\t\tif(unique\
    \ > max){\n\t\t\tmax = unique;\n\t\t\tword = element;\n\t\t}\n\t\tif(unique ===\
    \ max){\n\t\t\tif(element < word){\n\t\t\t\tword = element;\n\t\t\t}\n\t\t}\n\t\
    });\n\treturn word;\n}", "    let max = 0;\n    let word = null;\n    for(const\
    \ w of words){\n        let unique = unique_chars(w);\n        if(unique > max){\n\
    \            max = unique;\n            word = w;\n        }\n    }\n    return\
    \ word;\n}", "    var max_count = 0;\n    var result = '';\n    for(var i = 0;\
    \ i < words.length; i++){\n        var word = words[i];\n        var count = get_unique_count(word);\n\
    \        if(count > max_count){\n            max_count = count;\n            result\
    \ = word;\n        }\n    }\n    return result;\n}\n", "    let max = 0;\n   \
    \ let index = 0;\n    let maxWord = '';\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(max < countUniqueChars(words[i])){\n            max = countUniqueChars(words[i]);\n\
    \            maxWord = words[i];\n        }\n    }\n    return maxWord;\n}\n",
  "    var max_length = 0;\n    var word = '';\n    for(var i = 0; i < words.length;\
    \ i++){\n        var temp = words[i].split('');\n        var uni = [...new Set(temp)];\n\
    \        if(uni.length >= max_length){\n            max_length = uni.length;\n\
    \            word = words[i];\n        }\n    }\n    return word;\n}\n", "  var\
    \ max = words[0];\n  var maxLen = words[0].length;\n  for(var i = 0; i < words.length;\
    \ i++){\n    var curr = words[i];\n    var currLen = words[i].length;\n    if(maxLen\
    \ < currLen){\n      max = curr;\n      maxLen = currLen;\n    }\n  }\n  return\
    \ max;\n}", "    let max = words[0].length;\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(words[i].length > max){\n            max = words[i].length;\n\
    \        }\n    }\n    let result = [];\n    for(let i = 0; i < words.length;\
    \ i++){\n        if(words[i].length === max){\n            result.push(words[i]);\n\
    \        }\n    }\n    let string = \"\";\n    for(let i = 0; i < result.length;\
    \ i++){\n        if(result[i] < result[i+1]){\n            string = result[i];\n\
    \        }\n    }\n    return string;\n}", "  var big_word = \"\";\n  var max_unique\
    \ = 0;\n  for(var i = 0; i < words.length; i++){\n    var unique_chars = {};\n\
    \    for(var j = 0; j < words[i].length; j++){\n      unique_chars[words[i][j]]\
    \ = true;\n    }\n    if(Object.keys(unique_chars).length > max_unique){\n   \
    \   max_unique = Object.keys(unique_chars).length;\n      big_word = words[i];\n\
    \    }\n  }\n  return big_word;\n}\n", "    var max_length = -1;\n    var max_word\
    \ = '';\n    var unique_char = '';\n    for(var i = 0; i < words.length; i++){\n\
    \        for(var j = 0; j < words[i].length; j++){\n            if(unique_char.indexOf(words[i][j])\
    \ == -1){\n                unique_char += words[i][j];\n            }\n      \
    \  }\n        if(unique_char.length > max_length){\n            max_length = unique_char.length;\n\
    \            max_word = words[i];\n        }\n        unique_char = '';\n    }\n\
    \    return max_word;\n}\n", "    words = words.sort();\n    max = 0;\n    max_word\
    \ = \"\";\n    for(i = 0; i < words.length; i++){\n        count = 0;\n      \
    \  for(j = 0; j < words[i].length; j++){\n            if(words[i].indexOf(words[i][j])\
    \ == j){\n                count++;\n            }\n        }\n        if(count\
    \ > max){\n            max = count;\n            max_word = words[i];\n      \
    \  }\n    }\n    return max_word;\n}\n", "  let max = 0;\n  let max_word = \"\"\
    ;\n  for(let w of words){\n    let count = 0;\n    let chars = {};\n    for(let\
    \ i = 0; i < w.length; i++){\n      if(!chars[w[i]]){\n        chars[w[i]] = 1;\n\
    \        count++;\n      }\n    }\n    if(count > max){\n      max = count;\n\
    \      max_word = w;\n    }\n  }\n  return max_word;\n}\n", "  var max_count =\
    \ 0;\n  var count = 0;\n  var max_word = '';\n  for(var i = 0; i < words.length;\
    \ i++){\n    count = 0;\n    for(var j = 0; j < words[i].length; j++){\n     \
    \ if(words[i].indexOf(words[i][j]) === words[i].lastIndexOf(words[i][j])){\n \
    \       count++;\n      }\n    }\n    if(count > max_count){\n      max_count\
    \ = count;\n      max_word = words[i];\n    }\n  }\n  return max_word;\n}\n",
  "    let uniqWords = [];\n    let uniqueChars = [];\n    let uniqCount = 0;\n  \
    \  let maxChar = 0;\n    let maxWord = \"\";\n    let maxUniqChar = 0;\n    for(let\
    \ i = 0; i < words.length; i++){\n        uniqWords = [...new Set(words[i])];\n\
    \        uniqCount = uniqWords.length;\n        if(uniqCount > maxChar){\n   \
    \         maxChar = uniqCount;\n            maxWord = words[i];\n        }\n \
    \   }\n    return maxWord;\n}", "  let res = words[0];\n  let unique = [];\n \
    \ let count = 0;\n  for(let i = 0; i < words.length; i++){\n    unique = [];\n\
    \    for(let j = 0; j < words[i].length; j++){\n      if(!unique.includes(words[i][j])){\n\
    \        unique.push(words[i][j]);\n      }\n    }\n    if(unique.length > count){\n\
    \      count = unique.length;\n      res = words[i];\n    }\n  }\n  return res;\n\
    }\n", "    let result_word = '';\n    let max_count = 0;\n    for(let word of\
    \ words){\n        let letters = new Set();\n        for(let letter of word){\n\
    \            letters.add(letter);\n        }\n        if(letters.size > max_count){\n\
    \            max_count = letters.size;\n            result_word = word;\n    \
    \    }\n    }\n    return result_word;\n}\n", "  var max_char = 0;\n  var max_string\
    \ = \"\";\n  for(var i = 0; i < words.length; i++){\n    var current_count = count_char(words[i]);\n\
    \    if(current_count > max_char){\n      max_char = current_count;\n      max_string\
    \ = words[i];\n    }\n  }\n  return max_string;\n}\n", "  var result = \"\";\n\
    \  var max = 0;\n  for(var i = 0; i < words.length; i++){\n    var currentWord\
    \ = words[i];\n    var unique = unique_chars(currentWord);\n    if(unique > max){\n\
    \      max = unique;\n      result = currentWord;\n    }\n  }\n  return result;\n\
    }\n", "    let dic = {}\n    for(let i = 0; i < words.length; i++){\n        let\
    \ count = 0\n        for(let j = 0; j < words[i].length; j++){\n            let\
    \ char = words[i][j]\n            if(words[i].indexOf(char) === words[i].lastIndexOf(char)){\n\
    \                count++\n            }\n        }\n        dic[words[i]] = count\n\
    \    }\n    let max = 0\n    let w = \"\"\n    for(let key in dic){\n        if(dic[key]\
    \ > max){\n            max = dic[key]\n            w = key\n        }\n    }\n\
    \    return w\n}", "    var max_chars = 0;\n    var max_char_word = '';\n    for(var\
    \ i = 0; i < words.length; i++){\n        var curr_chars = unique_chars(words[i]);\n\
    \        if(curr_chars > max_chars){\n            max_chars = curr_chars;\n  \
    \          max_char_word = words[i];\n        }\n    }\n    return max_char_word;\n\
    }\n", "  var maxCount = 0;\n  var longestString = '';\n  for(var i = 0; i < words.length;\
    \ i++){\n    var currentString = words[i];\n    var currentCount = countUniqueChars(currentString);\n\
    \    if(currentCount > maxCount){\n      maxCount = currentCount;\n      longestString\
    \ = currentString;\n    }\n  }\n  return longestString;\n}", "  var max_unique_char\
    \ = 0;\n  var result = words[0];\n\n  for(var i = 0; i < words.length; i++){\n\
    \    var word = words[i];\n    var unique_char = 0;\n    for(var j = 0; j < word.length;\
    \ j++){\n      if(word.indexOf(word[j]) == word.lastIndexOf(word[j])){\n     \
    \   unique_char++;\n      }\n    }\n    if(unique_char > max_unique_char){\n \
    \     max_unique_char = unique_char;\n      result = word;\n    }\n  }\n  return\
    \ result;\n}\n", "  var max = 0;\n  var maxString = \"\";\n  for(var i = 0; i\
    \ < words.length; i++){\n    var s = words[i];\n    var used = {};\n    var unique\
    \ = 0;\n    for(var j = 0; j < s.length; j++){\n      if(used[s[j]]){\n      \
    \  continue;\n      }\n      unique++;\n      used[s[j]] = true;\n    }\n    if(unique\
    \ > max){\n      max = unique;\n      maxString = s;\n    }\n  }\n  return maxString;\n\
    }\n", "    // declare an empty dictionary\n    dict = {}\n    // declare an empty\
    \ list to put all the unique words in\n    uniqe_words = []\n    // loop over\
    \ the list\n    for (var i=0; i<words.length; i++){\n        // create an empty\
    \ dictionary for each word\n        dict[words[i]] = {}\n        // loop over\
    \ each character in the word\n        for (var j=0; j<words[i].length; j++){\n\
    \            // if the letter is not in the dictionary, add it and assign it a\
    \ value of 1\n            if (words[i][j] not in dict[words[i]]){\n          \
    \      dict[words[i]][words[i][j]] = 1\n            }\n            // otherwise\
    \ increase its value by 1\n            else {\n                dict[words[i]][words[i][j]]\
    \ += 1\n            }\n        }\n        // once the dictionary is created for\
    \ each word, append the word to the uniqe_words list\n        // if the length\
    \ of the dictionary is equal to the length of the word\n        if (Object.keys(dict[words[i]]).length\
    \ == words[i].length){\n            uniqe_words.append(words[i])\n        }\n\
    \    }\n    // once all the words are added to the uniqe_words list, return the\
    \ first alphabetically\n    return uniqe_words[0]\n}", "    var max = 0;\n   \
    \ var word = null;\n    for(var i = 0; i < words.length; i++){\n        var str\
    \ = words[i];\n        var diff = 0;\n        for(var j = 0; j < str.length; j++){\n\
    \            var char = str[j];\n            if(str.indexOf(char) == str.lastIndexOf(char)){\n\
    \                diff++;\n            }\n        }\n        if(diff > max){\n\
    \            max = diff;\n            word = str;\n        }\n    }\n    return\
    \ word;\n}\nvar words = ['abc', 'dce', 'bce', 'fe'];", "  var max = 0;\n  var\
    \ maxString = \"\";\n  for(var i = 0; i < words.length; i++){\n    var word =\
    \ words[i];\n    var table = {};\n    var count = 0;\n    for(var j = 0; j < word.length;\
    \ j++){\n      var char = word[j];\n      if(table[char] === undefined){\n   \
    \     table[char] = true;\n        count++;\n      }\n    }\n    if(count > max){\n\
    \      max = count;\n      maxString = word;\n    }\n  }\n  return maxString;\n\
    }\n", "  var uniques = words.map(function(word){\n    return count_unique(word);\n\
    \  });\n  var max_uniques = Math.max.apply(null, uniques);\n  var max_word = null;\n\
    \  for(var i = 0; i < words.length; i++){\n    if(count_unique(words[i]) === max_uniques){\n\
    \      max_word = words[i];\n      break;\n    }\n  }\n  return max_word;\n}\n",
  "    var max_count = 0;\n    var max_word = '';\n    var count = 0;\n    var first\
    \ = '';\n    var second = '';\n    words.forEach(function(word){\n        if(!max_word){\n\
    \            max_word = word;\n        }\n        var cset = {};\n        for(var\
    \ i = 0; i < word.length; i++){\n            if(!cset[word[i]]){\n           \
    \     cset[word[i]] = 1;\n                count++;\n            }\n        }\n\
    \        if(count > max_count){\n            max_count = count;\n            max_word\
    \ = word;\n        }\n        else if(count == max_count){\n            for(var\
    \ j = 0; j < word.length; j++){\n                if(word[j] < max_word[j]){\n\
    \                    max_word = word;\n                    break;\n          \
    \      }\n            }\n        }\n        count = 0;\n    });\n    return max_word;\n\
    }\n", "  let obj = {}\n  for(let i=0; i<words.length; i++){\n    let arr = words[i].split('');\n\
    \    let unique = arr.filter(\n      (item,index) => arr.indexOf(item) === index\n\
    \    )\n    obj[words[i]] = unique.length\n  }\n  let vals = Object.values(obj)\n\
    \  let maxVal = Math.max(...vals)\n  let maxValWords = [];\n  for(let key in obj){\n\
    \    if(obj[key] === maxVal){\n      maxValWords.push(key)\n    }\n  }\n  maxValWords.sort()\n\
    \  return maxValWords[0]\n}\n", "    let max = words[0].length;\n    let maxWord\
    \ = words[0];\n    for(let i = 1; i < words.length; i++){\n        if(words[i].length\
    \ > max){\n            max = words[i].length;\n            maxWord = words[i];\n\
    \        }\n    }\n    return maxWord;\n}", "    var word=words[0];\n    for(var\
    \ i=1;i<words.length;i++){\n        if(word.length<words[i].length){\n       \
    \     word=words[i];\n        }\n    }\n    return word;\n}", "    var res = words[0];\n\
    \    for(var i = 1; i < words.length; i++){\n        if(new Set(words[i]).size\
    \ > new Set(res).size){\n            res = words[i];\n        }\n    }\n    return\
    \ res;\n}\n", "  let result=words[0];\n  let max=0;\n  for(let i=0;i<words.length;i++){\n\
    \    let len=0;\n    for(let j=0;j<words[i].length;j++){\n      for(let k=j+1;k<words[i].length;k++){\n\
    \        if(words[i][j]===words[i][k]){\n          break;\n        }\n       \
    \ if(k===words[i].length-1){\n          len++;\n        }\n      }\n    }\n  \
    \  if(len>max){\n      max=len;\n      result=words[i];\n    }\n  }\n  return\
    \ result;\n}\nlet words=[\"you\",\"are\",\"beautiful\",\"and\",\"smart\"];", " \
    \   words.sort(function(word1, word2){\n        if(word1.length > word2.length){\n\
    \            return 1;\n        }else if(word1.length < word2.length){\n     \
    \       return -1;\n        }else{\n            return 0;\n        }\n    });\n\
    \    var max_str = words[words.length - 1];\n    var max_str_list = max_str.split(\"\
    \");\n    var max_str_list_set = new Set(max_str_list);\n    var max_str_list_array\
    \ = Array.from(max_str_list_set);\n    console.log(max_str_list_array.length);\n\
    \    return max_str;\n}\nvar input = [\"bdfhjlnprtvxz\", \"asd\", \"dvdf\"];",
  "  return words.sort((a,b)=>{\n    a = new Set(a.split('')).size;\n    b = new Set(b.split('')).size;\n\
    \    if(a>b) return -1;\n    if(a<b) return 1;\n    return a.localeCompare(b);\n\
    \  })[0];\n}", "    var letters = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \    var charCount = [];\n    var max = 0;\n    var maxWord = \"\";\n    var result\
    \ = [];\n    var c = 0;\n    //check each word in the list,\n    for(var i = 0;\
    \ i < words.length; i++){\n        //go through all the letters in the alphabet,\n\
    \        for(var j = 0; j < letters.length; j++){\n            //if the letter\
    \ is in the word,\n            if(words[i].indexOf(letters[j]) != -1){\n     \
    \           //add one to the charCount array for that letter,\n              \
    \  charCount[j] = charCount[j] + 1 || 1;\n            }\n        }\n        //check\
    \ the current charCount array to see if it has the most unique letters,\n    \
    \    //and if it does, set the max to that number\n        for(var k = 0; k <\
    \ charCount.length; k++){\n            if(charCount[k] > max){\n             \
    \   max = charCount[k];\n            }\n        }\n        //if there is at least\
    \ one unique letter,\n        if(max > 0){\n            //add the word to the\
    \ result array,\n            result[c] = words[i];\n            //and add one\
    \ to the counter\n            c++;\n        }\n        //reset the charCount array,\n\
    \        charCount = [];\n        //and set the max back to 0\n        max = 0;\n\
    \    }\n    //go through the resulting array,\n    for(var l = 0; l < result.length;\
    \ l++){\n        //if the length of the current result is greater than that of\
    \ the current maxWord,\n        if(result[l].length > maxWord.length){\n     \
    \       //set the current maxWord to the current result\n            maxWord =\
    \ result[l];\n        }\n    }\n    //return the maxWord\n    return maxWord;\n\
    }\n\nvar my_list = ['aabbcc', 'ddeeff',", "  var max = '';\n  var max_len = 0;\n\
    \  for(var i = 0; i < words.length; i++){\n    var word = words[i];\n    var seen\
    \ = {};\n    var uchars = 0;\n    for(var j = 0; j < word.length; j++){\n    \
    \  var c = word[j];\n      if(!seen[c]){\n        seen[c] = true;\n        uchars++;\n\
    \      }\n    }\n    if(uchars > max_len){\n      max = word;\n      max_len =\
    \ uchars;\n    }\n  }\n  return max;\n}\n", "    let max=0;\n    let selected_word=null;\n\
    \    for(let i=0;i<words.length;i++){\n        let characters=new Set();\n   \
    \     for(let j=0;j<words[i].length;j++){\n            characters.add(words[i][j]);\n\
    \        }\n        if(characters.size>max){\n            max=characters.size;\n\
    \            selected_word=words[i];\n        }\n    }\n    return selected_word;\n\
    }\n", "  var max = 0;\n  var current = 0;\n  var index = 0;\n  var max_index =\
    \ 0;\n  for(var i = 0; i < words.length; i++){\n    current = unique_characters(words[i]);\n\
    \    if(current > max){\n      max = current;\n      max_index = i;\n    }\n \
    \ }\n  return words[max_index];\n}", "    var result = words[0]\n    for(var i\
    \ = 1; i < words.length; i++){\n        if(unique(words[i]) > unique(result)){\n\
    \            result = words[i]\n        }\n    }\n    return result\n}", "  var\
    \ max = '';\n  var max_num = 0;\n  for(var i = 0; i < words.length; i++){\n  \
    \  if(uniq_chars(words[i]) > max_num){\n      max = words[i];\n      max_num =\
    \ uniq_chars(words[i]);\n    }\n  }\n  return max;\n}", "    words = words.split(\"\
    \ \");\n    let max = words[0];\n    for(let i = 1; i < words.length; i++){\n\
    \        if(new Set(words[i]).size > new Set(max).size){\n            max = words[i];\n\
    \        }\n    }\n    return max;\n}", "  var max = 0;\n  var max_word = '';\n\
    \  var w_words = {};\n  for(var i = 0; i < words.length; i++){\n    for(var j\
    \ = 0; j < words[i].length; j++){\n      if(!w_words[words[i][j]]){\n        w_words[words[i][j]]\
    \ = true;\n      }\n    }\n    if(Object.keys(w_words).length > max){\n      max\
    \ = Object.keys(w_words).length;\n      max_word = words[i];\n    }\n    w_words\
    \ = {};\n  }\n  return max_word;\n}", "  var result = \"\";\n  if(words.length\
    \ > 0){\n    words.forEach(function(word){\n      if(word.length >= result.length){\n\
    \        if(find_unique(word) >= find_unique(result)){\n          result = word;\n\
    \        }\n      }\n    });\n  }\n  return result;\n}\n", "    var uniq_char_count=0;\n\
    \    var max_uniq_char_word=\"\";\n    for(var word of words){\n        if(word.length>uniq_char_count){\n\
    \            uniq_char_count=word.length;\n            max_uniq_char_word=word;\n\
    \        }\n    }\n    return max_uniq_char_word;\n}", "    var max = 0;\n   \
    \ var max_word = \"\";\n    for(var i = 0; i < words.length; i++){\n        var\
    \ current_word = words[i];\n        var count = 0;\n        for(var j = 0; j <\
    \ current_word.length; j++){\n            var current_letter = current_word[j];\n\
    \            if(current_word.indexOf(current_letter) == current_word.lastIndexOf(current_letter)){\n\
    \                count++;\n            }\n        }\n        if(count > max){\n\
    \            max = count;\n            max_word = current_word;\n        }\n \
    \   }\n    return max_word;\n}", "    var str=words[0];\n    for(var i=1;i<words.length;i++){\n\
    \        if(unique_char(words[i])>unique_char(str)){\n            str=words[i];\n\
    \        }\n    }\n    return str;\n}", "    let map = {};\n    let max = 0;\n\
    \    let result = words[0];\n    for(let i = 0; i < words.length; i++){\n    \
    \    for(let j = 0; j < words[i].length; j++){\n            if(!map[words[i][j]]){\n\
    \                map[words[i][j]] = 1;\n            }\n        }\n        let\
    \ count = Object.keys(map).length;\n        if(count > max){\n            max\
    \ = count;\n            result = words[i];\n        }\n        map = {};\n   \
    \ }\n    return result;\n}", "  var max_length = 0;\n  var word_arr = [];\n  for(var\
    \ i = 0; i < words.length; i++){\n    var each_word = words[i];\n    var unique_char\
    \ = new Set(each_word);\n    if(unique_char.size > max_length){\n      max_length\
    \ = unique_char.size;\n      word_arr = [each_word];\n    }\n    else if(unique_char.size\
    \ == max_length){\n      word_arr.push(each_word);\n    }\n  }\n  return word_arr;\n\
    }\n", "  var dict = {}\n  for(var i = 0; i < words.length; i++){\n    var word\
    \ = words[i];\n    var set = new Set(word);\n    dict[i] = set.size;\n  }\n  var\
    \ max_index = 0;\n  var max_size = 0;\n  var keys = Object.keys(dict);\n  for(var\
    \ i = 0; i < keys.length; i++){\n    var key = keys[i];\n    if(dict[key] > max_size){\n\
    \      max_size = dict[key];\n      max_index = key;\n    }\n  }\n  return words[max_index];\n\
    }\n", "  //Write your code here\n  var max_chars = [];\n  var max_len = 0;\n \
    \ var max_char = '';\n  for(let i = 0; i < words.length; i++){\n    max_chars[i]\
    \ = '';\n    for(let j = 0; j < words[i].length; j++){\n      if(max_chars[i].indexOf(words[i][j])\
    \ === -1){\n        max_chars[i] += words[i][j];\n      }\n    }\n    if(max_chars[i].length\
    \ > max_len){\n      max_len = max_chars[i].length;\n      max_char = words[i];\n\
    \    }else if(max_chars[i].length === max_len){\n      if(words[i] < max_char){\n\
    \        max_char = words[i];\n      }\n    }\n  }\n  return max_char;\n}\n",
  "    if(!words || words.length === 0) return null;\n    var max = words[0];\n  \
    \  var max_chars = {};\n    for(var i = 0; i < max.length; i++){\n        max_chars[max[i]]\
    \ = true;\n    }\n    for(var i = 1; i < words.length; i++){\n        var item\
    \ = words[i];\n        var dict = {};\n        for(var j = 0; j < item.length;\
    \ j++){\n            dict[item[j]] = true;\n        }\n        if(Object.keys(dict).length\
    \ > Object.keys(max_chars).length){\n            max = item;\n            max_chars\
    \ = dict;\n        }\n    }\n    return max;\n}\n", "  var max = 0;\n  var max_word\
    \ = \"\";\n  var word_count = 0;\n  for(var i = 0; i < words.length; i++){\n \
    \   word_count = unique_characters(words[i]);\n    if(word_count > max){\n   \
    \   max = word_count;\n      max_word = words[i];\n    }\n  }\n  return max_word;\n\
    }", "    let map = {};\n    let result = \"\";\n    let max = 0;\n    for(let\
    \ i = 0; i < words.length; i++){\n        let chars = new Set();\n        for(let\
    \ j = 0; j < words[i].length; j++){\n            chars.add(words[i][j]);\n   \
    \     }\n        if(chars.size > max){\n            max = chars.size;\n      \
    \      result = words[i];\n        }\n    }\n    return result;\n}\n\nlet output\
    \ = find_max([\"apple\", \"amazing\", \"book\"]);", "    if (words.length ===\
    \ 0) return null;\n    let char_map = {};\n    let max_count = 0;\n    let max_word\
    \ = words[0];\n    for (let i = 0; i < words.length; i++){\n        let word =\
    \ words[i];\n        char_map[word] = {};\n        for (let j = 0; j < word.length;\
    \ j++){\n            let char = word[j];\n            if (char_map[word][char]\
    \ === undefined){\n                char_map[word][char] = 1;\n            } else\
    \ {\n                char_map[word][char]++;\n            }\n        }\n     \
    \   if (Object.keys(char_map[word]).length > max_count){\n            max_count\
    \ = Object.keys(char_map[word]).length;\n            max_word = word;\n      \
    \  }\n    }\n    return max_word;\n}\n\nlet words = [\"hello\", \"world\", \"\
    leetcode\", \"My\", \"is\", \"John\", \"example\"];\nlet word = find_max(words);",
  "  let maxWord = \"\";\n  let maxCharCount = 0;\n  for(let i = 0; i < words.length;\
    \ i++){\n    let charCount = 0;\n    let currentWord = words[i];\n    for(let\
    \ j = 0; j < currentWord.length; j++){\n      let letter = currentWord[j];\n \
    \     if(!maxWord.includes(letter)){\n        charCount++;\n      }\n    }\n \
    \   if(charCount > maxCharCount){\n      maxCharCount = charCount;\n      maxWord\
    \ = currentWord;\n    }\n  }\n  return maxWord;\n}", "    var max_word=words[0],\
    \ max_unique=0;\n    for(var i=0; i<words.length; i++){\n        var word = words[i];\n\
    \        var unique_chars = get_unique_chars(word);\n        if(unique_chars>max_unique){\n\
    \            max_unique = unique_chars;\n            max_word = word;\n      \
    \  }\n    }\n    return max_word;\n}", "    let max = 0;\n    let word = '';\n\
    \    for(let i = 0; i < words.length; i++){\n        if(num_unique(words[i]) >\
    \ max){\n            max = num_unique(words[i]);\n            word = words[i];\n\
    \        }else if(num_unique(words[i]) === max){\n            if(words[i] < word){\n\
    \                word = words[i];\n            }\n        }\n    }\n    return\
    \ word;\n}\n", "\tvar word = '';\n\tvar max = 0;\n\tfor(var i = 0; i < words.length;\
    \ i++){\n\t\tvar count = count_unique(words[i]);\n\t\tif(count > max){\n\t\t\t\
    max = count;\n\t\t\tword = words[i];\n\t\t}\n\t}\n\treturn word;\n}", "  var count\
    \ = 0;\n  var length = 0;\n  var i = 0;\n  var j = 0;\n  var unique = [];\n  var\
    \ answer = [];\n  var len = words.length;\n  var max = 0;\n  var index = 0;\n\
    \  for(i = 0; i < len; i++){\n    length = words[i].length;\n    for(j = 0; j\
    \ < length; j++){\n      var x = words[i].charAt(j);\n      if(unique.indexOf(x)\
    \ == -1){\n        unique.push(x);\n      }\n    }\n    answer.push(unique.length);\n\
    \    if(unique.length > max){\n      max = unique.length;\n      index = i;\n\
    \    }\n    unique = [];\n  }\n  return words[index];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

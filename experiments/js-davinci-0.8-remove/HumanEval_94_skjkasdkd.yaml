name: HumanEval_94_skjkasdkd
language: js
prompt: "//You are given a list of integers.\n// You need to find the largest prime\
  \ value and return the sum of its digits.\n// Examples:\nfunction skjkasdkd(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = skjkasdkd;\n  assert.deepEqual(candidate([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
  \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]),10);\n  assert.deepEqual(candidate([1, 0,\
  \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]),25);\n  assert.deepEqual(candidate([1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]),13);\n  assert.deepEqual(candidate([0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),11);\n  assert.deepEqual(candidate([0,\
  \ 81, 12, 3, 1, 21]),3);\n  assert.deepEqual(candidate([0, 8, 1, 2, 1, 7]),7);\n\
  \  assert.deepEqual(candidate([8191]),19);\n  assert.deepEqual(candidate([8191,\
  \ 123456, 127, 7]),19);\n  assert.deepEqual(candidate([127, 97, 8192]),10);\n}\n\
  \ntest();"
completions: ["    let x = lst.filter(e => {\n      let x = true;\n      for(let i\
    \ = 2; i < e; i++){\n        if(e % i === 0){\n          x = false;\n        }\n\
    \      }\n      return x;\n    })\n    let largest = x[x.length - 1];\n    return\
    \ largest.toString().split('').reduce((acc, val) => parseInt(acc) + parseInt(val));\n\
    \  }\n", "    let primes = [];\n    let sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        let currentNum = lst[i];\n        if(isPrime(currentNum)){\n\
    \            primes.push(currentNum);\n        }\n    }\n    let maxPrime = Math.max(...primes);\n\
    \    let maxPrimeArr = maxPrime.toString().split('');\n    for(let i = 0; i <\
    \ maxPrimeArr.length; i++){\n        sum += Number(maxPrimeArr[i]);\n    }\n \
    \   console.log(sum);\n    function isPrime(num){\n        for(let i = 2; i <\
    \ num; i++){\n            if(num % i === 0){\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n}\nskjkasdkd([5,15,30,13,12,35,30,3,8,24]);",
  "    let max = -Infinity;\n    for(let i=0; i<lst.length; i++){\n        if(isPrime(lst[i])\
    \ && lst[i] > max){\n            max = lst[i];\n        }\n    }\n    return max;\n\
    }", "    function isPrime(num) {\n        for(var i = 2; i < num; i++)\n     \
    \       if(num % i === 0) return false;\n        return num > 1;\n    }\n    var\
    \ largestPrime = lst.filter(isPrime).sort(function(a, b){return b-a})[0];\n  \
    \  return largestPrime.toString().split('').reduce(function(a,b){return parseInt(a)+parseInt(b)},0);\n\
    }\n", "    let largestPrime = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       if(lst[i] % 2 != 0 && lst[i] % 3 != 0 && lst[i] % 5 != 0 && lst[i] % 7\
    \ != 0){\n            if(lst[i] > largestPrime){\n                largestPrime\
    \ = lst[i];\n            }\n        }\n    }\n    let digits = 0;\n    let output\
    \ = 0;\n    for(let i = 0; i < largestPrime.toString().length; i++){\n       \
    \ let temp = parseInt(largestPrime.toString().charAt(i));\n        output += temp;\n\
    \    }\n    return output;\n}\n", "    let maxPrime = 0;\n    let isPrime = true;\n\
    \    for(let i = 0; i < lst.length; i++){\n        for(let j = 2; j < lst[i];\
    \ j++){\n            if(lst[i] % j === 0){\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if(isPrime && lst[i]\
    \ > maxPrime){\n            maxPrime = lst[i];\n        }\n        isPrime = true;\n\
    \    }\n    return maxPrime;\n}\n\nlet maxPrime = skjkasdkd([5, 4, 4, 2, 8, 7,\
    \ 23, 80, 100, 24, 200, 1, 6, 15, 36, 89, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\
    \ 12, 12, 12, 12, 12, 12, 12,", "    let max = 0;\n    let sum = 0;\n    let result\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        let curr = lst[i];\n\
    \        let div = 0;\n        for(let j = 2; j < curr; j++){\n            if(curr\
    \ % j === 0){\n                div++;\n            }\n        }\n        if(div\
    \ === 0){\n            if(curr > max){\n                max = curr;\n        \
    \    }\n        }\n    }\n    let str = max.toString();\n    for(let i = 0; i\
    \ < str.length; i++){\n        sum += Number(str[i]);\n    }\n    return sum;\n\
    }\n", "    let max = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i]\
    \ > max){\n            max = lst[i];\n        }\n    }\n    return max;\n}\n",
  "\tvar max = 0;\n\tfor(var i = 0; i < lst.length; i++){\n\t\tif(lst[i]>max){\n\t\
    \t\tmax = lst[i];\n\t\t}\n\t}\n\treturn max;\n}", "    var arr = [];\n    var\
    \ max;\n    var sum = 0;\n    for(var i = 0; i < lst.length; i++){\n        var\
    \ isPrime = true;\n        for(var j = 2; j < lst[i]; j++){\n            if(lst[i]\
    \ % j === 0){\n                isPrime = false;\n            }\n        }\n  \
    \      if(isPrime){\n            arr.push(lst[i]);\n        }\n    }\n    max\
    \ = Math.max.apply(null, arr);\n    var str = max.toString();\n    for(var k =\
    \ 0; k < str.length; k++){\n        sum += parseInt(str[k]);\n    }\n    return\
    \ sum;\n}\nskjkasdkd([1,2,3,4,5,6,7,8,9,10]);\nskjkasdkd([1,5,7,14,9,11,3,14,8,12,7,16,17,44,7,8,9,1,2,3,4,5,6,6,7,6,7,6,8,6,7,6,9,6,7,6,10,6,7,6,11,6,7,6,12,6,7,6,13,6,7,6,14,6,7,6,15,6,7,6,16,6,7,6,17,6,7,6,18,6,7,6,19,6,7,6,20,6,7,6,21,6,7,6,22,6,7,6,23,6,7,6,24,6,7,6,25,6,7,6,26,6,7,6,27,6,7,6,28,6,7,6,29,6,7,6,30,6,7,6,31,6,7,6,32,6,7,6,33,6,7,6,34,6,7,6,35,6,7,6,36,6,7,6,37,6,7,6,38,6,",
  "    let num = lst.reduce((a, b) => Math.max(a, b));\n    return getSumOfDigits(num);\n\
    }", "    let max=0;\n    for(let i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max=lst[i];\n        }\n    }\n    let max1=0;\n    for(let i=0;i<lst.length;i++){\n\
    \        if(lst[i]>max1 && isPrime(lst[i])){\n            max1=lst[i];\n     \
    \   }\n    }\n    let str=max1.toString();\n    let sum=0;\n    for(let i=0;i<str.length;i++){\n\
    \        sum+=parseInt(str[i]);\n    }\n    console.log(sum);\n}\nskjkasdkd([2,\
    \ 9, 32, 42, 45, 9, 11, 13, 14, 15, 65, 23, 45, 76, 21, 34, 2, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 2, 3, 4, 5, 2, 3, 4, 1, 2, 3, 4, 5, 2,\
    \ 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91", "  var max = Math.max(...lst);\n\
    \  function checkprime(num){\n    if(num<=1){\n      return false;\n    }\n  \
    \  if(num===2){\n      return true;\n    }\n    if(num%2 === 0){\n      return\
    \ false;\n    }\n    if(num%2 !== 0){\n      for(var i = 3; i<= Math.sqrt(num);\
    \ i+=2){\n        if(num%i === 0){\n          return false;\n        }\n     \
    \ }\n      return true;\n    }\n  }\n  for(var x = max; x>=0; x--){\n    if(checkprime(x)){\n\
    \      var num = x.toString();\n      var sum = 0;\n      for(var i = 0; i<num.length;\
    \ i++){\n        sum += Number(num[i]);\n      }\n      return sum;\n    }\n \
    \ }\n}", "    let largest_num = Math.max(...lst);\n    let prime_nums = [];\n\
    \    let divisor = 2;\n    let ans = [];\n    for(let i = 0; i < largest_num;\
    \ i++){\n        if(largest_num % divisor == 0){\n            prime_nums.push(divisor);\n\
    \            largest_num = largest_num / divisor;\n        }\n        else{\n\
    \            divisor++;\n        }\n    }\n    let num_to_string = prime_nums[prime_nums.length\
    \ - 1].toString();\n    for(let i = 0; i < num_to_string.length; i++){\n     \
    \   ans.push(parseInt(num_to_string[i]));\n    }\n    return ans.reduce((a, b)\
    \ => a + b);\n}\n", "    let prime = 0;\n    let sum = 0;\n    for(let i = 0;\
    \ i < lst.length; i++){\n        if(lst[i]%2 != 0){\n            if(lst[i] > prime){\n\
    \                prime = lst[i];\n            }\n        }\n    }\n    while(prime\
    \ > 0){\n        sum += prime%10;\n        prime = Math.floor(prime/10);\n   \
    \ }\n    return sum;\n}\n", "    let maxPrime = Math.max(...lst.filter(x => isPrime(x)));\n\
    \    console.log(maxPrime);\n    return maxPrime.toString().split('').reduce((a,\
    \ b) => +a + +b);\n}\n", "  // let result = 0;\n  // lst.sort((a,b)=>{return b-a});\n\
    \  // for(let i = 0; i < lst.length; i++){\n  //   let prime = true;\n  //   for(let\
    \ j = 2; j < lst[i]; j++){\n  //     if(lst[i] % j === 0){\n  //       prime =\
    \ false;\n  //     }\n  //   }\n  //   if(prime){\n  //     console.log(lst[i])\n\
    \  //     let str = lst[i].toString();\n  //     for(let k = 0; k < str.length;\
    \ k++){\n  //       result += parseInt(str[k]);\n  //     }\n  //     return result;\n\
    \  //   }\n  // }\n  // return result;\n  let primes = lst.filter(num => {\n \
    \   if(num === 2){\n      return true;\n    }\n    if(num % 2 === 0){\n      return\
    \ false;\n    }\n    let sqrt = Math.sqrt(num);\n    for(let i = 3; i <= sqrt;\
    \ i += 2){\n      if(num % i === 0){\n        return false;\n      }\n    }\n\
    \    return true;\n  });\n  let largest = primes.sort((a,b)=>{return b-a});\n\
    \  let str = largest[0].toString();\n  let result = 0;\n  for(let k = 0; k < str.length;\
    \ k++){\n    result += parseInt(str[k]);\n  }\n  return result;\n}", "    if(lst.length\
    \ == 0){\n        return 0;\n    }\n\n    let sum = 0;\n    let prime = 0;\n \
    \   let prime2 = 0;\n    let isPrime = true;\n    let isPrime2 = true;\n    let\
    \ counter = 0;\n    let counter2 = 0;\n    let i = 0;\n    let j = 1;\n    let\
    \ temp = 0;\n    let temp2 = 0;\n\n    for(let k = 0; k < lst.length; k++){\n\
    \        if(lst[k] > prime){\n            prime = lst[k];\n        }\n    }\n\n\
    \    temp = prime;\n    temp2 = prime;\n\n    for(i = 2; i < prime; i++){\n  \
    \      if(prime % i == 0){\n            isPrime = false;\n            counter++;\n\
    \        }\n    }\n\n    if(counter == 0){\n        for(j = 0; j < lst.length;\
    \ j++){\n            if(lst[j] > prime2 && lst[j] < prime){\n                prime2\
    \ = lst[j];\n            }\n        }\n\n        temp2 = prime2;\n\n        for(let\
    \ x = 2; x < prime2; x++){\n            if(prime2 % x == 0){\n               \
    \ isPrime2 = false;\n                counter2++;\n            }\n        }\n\n\
    \        if(counter2 == 0){\n            while(temp2 > 0){\n                sum\
    \ += temp2 % 10;\n                temp2 = Math.floor(temp2 / 10);\n          \
    \  }\n        }\n        else{\n            while(temp > 0){\n               \
    \ sum += temp % 10;\n                temp = Math.floor(temp / 10);\n         \
    \   }\n        }\n    }\n    else{\n        while(temp > 0){\n            sum\
    \ += temp % 10;\n            temp = Math.floor(temp / 10);\n        }\n    }\n\
    \n    return sum;\n}\n", "  let flag = 0\n  let sum = 0\n  let count = 0\n  let\
    \ largest = 0\n  for(let i = 0; i < lst.length; i++){\n    for(let j = 0; j <\
    \ lst[i]; j++){\n      if(lst[i] % j == 0){\n        flag += 1\n      }\n    }\n\
    \    if(flag == 1){\n      if(largest < lst[i]){\n        largest = lst[i]\n \
    \     }\n    }\n    flag = 0\n  }\n  for(let i = 0; i < largest.length; i++){\n\
    \    sum += largest[i]\n  }\n  return sum\n}", "    let prime = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(isPrime(lst[i])){\n            if(lst[i]\
    \ > prime){\n                prime = lst[i];\n            }\n        }\n    }\n\
    \    let sum = 0;\n    for(let i = 0; i < (''+prime).length; i++){\n        sum\
    \ += parseInt((''+prime)[i]);\n    }\n    return sum;\n}", "    var lst2 = lst.filter(function(a){\n\
    \        return a > 0;\n    });\n    var lst3 = lst2.filter(function(x){\n   \
    \     for(var i = 2; i < x; i++){\n            if(x % i === 0){\n            \
    \    return false;\n            }\n        }\n        return true;\n    });\n\
    \    var lst4 = lst3.sort(function(x,y){\n        return y - x;\n    });\n   \
    \ var final = lst4[0];\n    var total = 0;\n    for(var i = 0; i < final.toString().length;\
    \ i++){\n        total += parseInt(final.toString()[i]);\n    }\n    return total;\n\
    }", "  let length = lst.length;\n  let prime = [];\n  for(let i =0; i<length;\
    \ i++){\n    for(let j = 2; j<lst[i]; j++){\n      if(lst[i]%j===0){\n       \
    \ break;\n      }else if(j===(lst[i]-1)){\n        prime.push(lst[i]);\n     \
    \ }\n    }\n  }\n  let max = prime[0];\n  for(let k = 1; k<prime.length; k++){\n\
    \    if(prime[k]>max){\n      max = prime[k];\n    }\n  }\n  let str = String(max);\n\
    \  let sum = 0;\n  for(let p = 0; p<str.length; p++){\n    sum += parseInt(str[p]);\n\
    \  }\n  return sum;\n}\n", "    let result = 0;\n    let maxPrime = -Infinity;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if(isPrime(lst[i])){\n  \
    \          if(lst[i] > maxPrime){\n                maxPrime = lst[i];\n      \
    \      }\n        }\n    }\n    if(maxPrime === -Infinity){\n        return 0;\n\
    \    }\n\n    let strNums = String(maxPrime);\n    for (let i = 0; i < strNums.length;\
    \ i++) {\n        result += Number(strNums[i]);\n    }\n    return result;\n}\n",
  "    if (lst.length == 0) return 0;\n    let sum = 0;\n    let primes = lst.filter(a\
    \ => isPrime(a));\n    if (primes.length == 0) return 0;\n    let res = Math.max(...primes);\n\
    \    while (res > 0) {\n        sum += res % 10;\n        res = Math.floor(res\
    \ / 10);\n    }\n    return sum;\n}\n", "let primeNumber = new Set();\nlst.forEach(num\
    \ => {\n    if(isPrime(num)){\n        primeNumber.add(num);\n    }\n});\n\nlet\
    \ bigPrime = Math.max(...primeNumber);\nreturn parseInt(bigPrime.toString().split('').reduce((a,b)\
    \ => +a + +b));\n}\n", "    let x= lst.filter(y=> isPrime(y));\n    let max =\
    \ x.sort(function(a, b){return b-a})[0]\n    return max.toString().split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n\
    }", "    if(lst.length == 0){\n        return '0'\n    }\n    let max = 0;\n \
    \   let index = 0;\n    for(let i = 0; i < lst.length; i++){\n        let check\
    \ = true;\n        for(let j = 2; j < lst[i]; j++){\n            if(lst[i] % j\
    \ == 0){\n                check = false;\n                break;\n           \
    \ }\n        }\n        if(check){\n            if(lst[i] > max){\n          \
    \      max = lst[i];\n                index = i;\n            }\n        }\n \
    \   }\n    if(max == 0){\n        return '0'\n    }\n    let maxDigits = lst[index].toString().split('').map(Number);\n\
    \    let sum = 0;\n    for(let i = 0; i < maxDigits.length; i++){\n        sum\
    \ += maxDigits[i];\n    }\n    return sum;\n}", "    let lg = Math.max(...lst);\n\
    \    let s = lg.toString().split('').map(Number).reduce((a,b)=>a+b);\n    return\
    \ s;\n}", "    let sum = 0;\n    let arr = [];\n    for(let i = 2; i <= Math.max(...lst);\
    \ i++){\n        let prime = true;\n        for(let j = 2; j < i; j++){\n    \
    \        if(i % j === 0){\n                prime = false;\n                break;\n\
    \            }\n        }\n        if(prime){\n            arr.push(i);\n    \
    \    }\n    }\n    for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n\
    \    }\n    return sum;\n}", "    let largest_prime = 0;\n    let sum = 0;\n \
    \   let num = 0;\n    for(let i = 0; i < lst.length; i++){\n        num = lst[i];\n\
    \        let flag = true;\n        for(let j = 2; j < num; j++){\n           \
    \ if(num % j == 0){\n                flag = false;\n                break;\n \
    \           }\n        }\n        if(flag){\n            largest_prime = num;\n\
    \        }\n    }\n    let arr = String(largest_prime).split('');\n    for(let\
    \ i = 0; i < arr.length; i++){\n        sum += Number(arr[i]);\n    }\n    return\
    \ sum;\n}", "  let max = Math.max(...lst);\n  let arr = max.toString().split('');\n\
    \  let sum = arr.reduce((acc,value)=>{\n    return acc + Number(value);\n  },0);\n\
    \  return sum;\n}", "    let max = Math.max(...lst);\n    let n = max;\n    let\
    \ flag = false;\n    while(n > 1){\n        flag = false;\n        for(let i =\
    \ 2; i < n; i++){\n            if(n % i == 0){\n                flag = true;\n\
    \                break;\n            }\n        }\n        if(!flag){\n      \
    \      break;\n        }\n        n--;\n    }\n    let sum = 0;\n    while(n >\
    \ 0){\n        sum += n % 10;\n        n = parseInt(n / 10);\n    }\n    return\
    \ sum;\n}\n", "    let largestPrime = lst.reduce((a, b) => Math.max(a, b));\n\
    \    for (let i = largestPrime - 1; i > 0; i--) {\n        if (isPrime(i)) {\n\
    \            return getSumOfDigits(i);\n        }\n    }\n    return 0;\n}\n",
  "    var longest = 1;\n    var i = 2;\n    while(i < lst.length){\n        if(isPrime(lst[i])){\n\
    \            if(lst[i] > longest){\n                longest = lst[i];\n      \
    \      }\n        }\n        i++;\n    }\n    return longest;\n}", "    let nums\
    \ = {};\n    let maxNum = 0;\n    let toAdd = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(isPrime(lst[i])){\n            nums[lst[i]] = true;\n    \
    \        if(lst[i] > maxNum){\n                maxNum = lst[i];\n            }\n\
    \        }\n    }\n    let arr = maxNum.toString().split('');\n    for(let i =\
    \ 0; i < arr.length; i++){\n        toAdd += parseInt(arr[i]);\n    }\n    return\
    \ toAdd;\n}", "    let max = Math.max(...lst)\n    let prime = max\n    for(let\
    \ i = 2; i < max; i++){\n        if(prime % i === 0){\n            max = prime\
    \ / i\n            break\n        }\n    }\n    let str = max.toString()\n   \
    \ let sum = 0\n    for(let i = 0; i < str.length; i++){\n        sum += parseInt(str[i])\n\
    \    }\n    return sum\n}", "    var arr = lst.map(Math.abs);\n    var max = Math.max.apply(null,\
    \ arr);\n    if(!(/^\\d+$/.test(max))){\n        return 0;\n    }\n    else{\n\
    \        var prime = Math.abs(max);\n        var prime_divisors = [];\n      \
    \  for(var i = 2; i <= prime; i++){\n            while(prime % i === 0){\n   \
    \             prime_divisors.push(i);\n                prime /= i;\n         \
    \   }\n        }\n        var sum = 0;\n        for(var i = 0; i < prime_divisors.length;\
    \ i++){\n            var len = prime_divisors[i].toString().length;\n        \
    \    while(len > 0){\n                sum += parseInt(prime_divisors[i].toString().charAt(len\
    \ - 1));\n                len--;\n            }\n        }\n        return sum;\n\
    \    }\n}\n", "    let max = 0;\n    for(let i=0; i<lst.length; i++){\n      \
    \  if(isPrime(lst[i]) && lst[i] > max){\n            max = lst[i];\n        }\n\
    \    }\n    return splitDigit(max);\n}", "    if(lst.length==0){\n        return\
    \ 0;\n    }\n    function is_prime(n){\n        if(n==2){\n            return\
    \ true;\n        }\n        for(let i=2;i<n;i++){\n            if(n%i==0){\n \
    \               return false;\n            }\n        }\n        return true;\n\
    \    }\n    let mx = Math.max(...lst);\n    let arr = [];\n    for(let i=0;i<lst.length;i++){\n\
    \        if(is_prime(lst[i]) && lst[i]>mx){\n            mx = lst[i];\n      \
    \  }\n    }\n    return mx;\n}\n", "    let prime = lst.filter(a => isPrime(a));\n\
    \    let max = Math.max(...prime);\n    console.log(max);\n    let sum = max.toString().split('').map(Number).reduce((a,b)\
    \ => a+b);\n    console.log(sum);\n    return sum;\n}\n", "    if(lst.length <\
    \ 2){\n        return lst[0];\n    }\n    else{\n        let max = Math.max(...lst);\n\
    \        let sum = 0;\n        let i = 0;\n        while(max != 0){\n        \
    \    sum += max % 10;\n            max = parseInt(max / 10);\n        }\n    \
    \    return sum;\n    }\n}\n", "    var a = [];\n    var sum = 0;\n    var flag\
    \ = 0;\n    var len = 0;\n    var num = 0;\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] == 1){\n            continue;\n        }\n        for(var\
    \ j = 2; j < lst[i]; j++){\n            if(lst[i] % j == 0){\n               \
    \ flag = 1;\n                break;\n            }\n        }\n        if(flag\
    \ == 0){\n            a.push(lst[i]);\n        }\n        flag = 0;\n    }\n \
    \   len = a.length;\n    num = a[len - 1];\n    while(num > 0){\n        sum +=\
    \ num % 10;\n        num = Math.floor(num / 10);\n    }\n    return sum;\n}\n\
    var g = skjkasdkd([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,",
  "   let max = Math.max(...lst)\n   let check = (max) => {\n      let sum = 0\n \
    \     while(max > 0){\n         sum += max % 10\n         max = Math.floor(max\
    \ / 10)\n      }\n      return sum\n   }\n   return check(max)\n}", "    let newArr\
    \ = []\n    for(let i = 0; i < lst.length; i++){\n        if(lst[i] % 3 === 0\
    \ || lst[i] % 5 === 0){\n            newArr.push(lst[i])\n        }\n    }\n \
    \   return newArr\n}\n", "    for(let i = 0; i <lst.length; i++){\n        if(lst[i]\
    \ % i == 0)\n    }\n}\n", "    let odd = lst.filter(x => x % 2 !== 0).sort((a,b)\
    \ => b - a)\n    let prime = odd.find(x => {\n        for(let i = 2; i < x; i++){\n\
    \            if(x % i === 0){\n                return false\n            }\n \
    \       }\n        return true\n    })\n    return prime ? prime.toString().split('').reduce((a,b)\
    \ => +a + +b) : 0\n}\n", "    let largestPrime = 0;\n    for(let number of lst){\n\
    \        let isPrime = true;\n        for(let i = 2; i <= Math.sqrt(number); i++){\n\
    \            if(number % i === 0){\n                isPrime = false;\n       \
    \         break;\n            }\n        }\n        if(isPrime && number > largestPrime){\n\
    \            largestPrime = number;\n        }\n    }\n    console.log(largestPrime);\n\
    \    let sum = 0;\n    while(largestPrime > 0){\n        sum += largestPrime %\
    \ 10;\n        largestPrime = Math.floor(largestPrime / 10);\n    }\n    return\
    \ sum;\n}\n", "    let max = 0;\n    for(let i=0; i<lst.length; i++){\n      \
    \  let c = true;\n        for(let j=2; j<=Math.sqrt(lst[i]); j++){\n         \
    \   if(lst[i]%j===0){\n                c = false;\n                break;\n  \
    \          }\n        }\n        if(c) max = Math.max(max, lst[i]);\n    }\n \
    \   return max.toString().split('').reduce((a,b)=>{\n        return +a+ +b;\n\
    \    },0);\n}", "    let p = lst.filter(function(x){\n        for(var i = 2; i\
    \ < x; i++) {\n            if(x % i === 0) return false;\n        }\n        return\
    \ x > 1;\n    })\n    return p\n}", "    let result = lst.filter(el => isPrime(el))\n\
    \        .sort((a,b) => b-a)[0]\n        .toString()\n        .split('')\n   \
    \     .map(el => +el)\n        .reduce((acc, curr) => acc + curr);\n    return\
    \ result;\n}\n", "    let max = 0;\n    for(let i=0; i<lst.length; i++){\n   \
    \     if(lst[i]>max){\n            max = lst[i];\n        }\n    }\n    return\
    \ max;\n}\n", "   var arr = []\n   var j = 2\n   for(var i = 0; i < lst.length;\
    \ i++){\n       var element = lst[i]\n       var isPrime = true\n       for(;\
    \ j < element; j++){\n           if(element % j == 0){\n               isPrime\
    \ = false\n               break\n           }\n       }\n       if(isPrime){\n\
    \           arr.push(element)\n       }\n   }\n   var maxPrime = Math.max.apply(null,\
    \ arr)\n   var sum = 0\n   while(maxPrime > 0){\n       sum += maxPrime % 10\n\
    \       maxPrime = Math.floor(maxPrime / 10)\n   }\n   return sum\n}\n", "   \
    \ let largest = 0;\n    for(let i = 0; i < lst.length; i++){\n        let current\
    \ = lst[i];\n        if(isPrime(current) && current > largest){\n            largest\
    \ = current;\n        }\n    }\n    let sum = 0;\n    for(let i = 0; i < largest.toString().length;\
    \ i++){\n        sum += largest.toString()[i];\n    }\n    return sum;\n}\n",
  "    let largest = Math.max(...lst);\n    let prime = isPrime(largest);\n    let\
    \ sum = sumOfTheDigits(largest);\n    return prime ? sum : 0;\n}", "    let l\
    \ = lst.filter(x => x%2==0);\n    let sum = l.map(x => x+10);\n    let sum2 =\
    \ sum.reduce((x,y) => x+y,0);\n    return sum2;\n}\n\n", "    let prime = lst.filter(x\
    \ => isPrime(x)).sort((a,b) => b-a)[0];\n    return [...prime.toString()].reduce((a,b)\
    \ => +a + +b);\n}", "    let primes = [];\n    lst.forEach(function(x){\n    \
    \    if(isPrime(x)){\n            primes.push(x);\n        }\n    });\n    return\
    \ sumOfDigits(Math.max(...primes));\n}", "    let maxPrime = Math.max(...lst.filter(v\
    \ => isPrime(v)));\n    return maxPrime.toString().split('').reduce((a,b) => parseInt(a)\
    \ + parseInt(b));\n}\n", "    let newLst =[];\n    let primeLst =[];\n    let\
    \ num = 0;\n    let sum = 0;\n    let half = Math.ceil(lst.length/2);\n    for(let\
    \ i =0; i<lst.length; i++){\n        num = lst[i];\n        for(let j =2; j<=half;\
    \ j++){\n            if(num%j == 0){\n                if(j == half){\n       \
    \             primeLst.push(num);\n                }\n                break;\n\
    \            }\n        }\n    }\n    console.log(primeLst);\n    num = primeLst[primeLst.length-1];\n\
    \    console.log(num);\n    while(num > 0){\n        let dig = num%10;\n     \
    \   sum += dig;\n        num = Math.floor(num/10);\n    }\n    return sum;\n}",
  "    let biggestPrime = 0;\n    let total = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        let number = lst[i];\n        if(primeCheck(number)){\n     \
    \       if(number > biggestPrime){\n                biggestPrime = number;\n \
    \           }\n        }\n    }\n    while(biggestPrime > 0){\n        total +=\
    \ biggestPrime % 10;\n        biggestPrime = Math.floor(biggestPrime / 10);\n\
    \    }\n    return total;\n}", "    let isPrime = n => {\n        for(let i =\
    \ 2; i <= Math.sqrt(n); i++){\n            if(n % i === 0){\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    let maxPrime\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(isPrime(lst[i]) &&\
    \ lst[i] > maxPrime){\n            maxPrime = lst[i];\n        }\n    }\n    let\
    \ sum = 0;\n    let digits = maxPrime.toString().split('');\n    for(let i = 0;\
    \ i < digits.length; i++){\n        sum += Number(digits[i]);\n    }\n    return\
    \ sum;\n}", "    let max = Math.max(...lst);\n    for(let i = max; i >=2; i--){\n\
    \        if(max % i === 0){\n            return max;\n        }\n    }\n}\n",
  "    let prime = lst.filter(e=>{\n        let c = 0;\n        for(let i = 1; i <=\
    \ e; i++){\n            if(e % i == 0){\n                c++;\n            }\n\
    \        }\n        if(c == 2){\n            return e;\n        }\n    })\n  \
    \  let primeNum = Math.max(...prime);\n    console.log(primeNum);\n    let sum\
    \ = 0;\n    for(let i = 0; i < primeNum.toString().length; i++){\n        sum\
    \ += Number(primeNum.toString()[i]);\n    }\n    return sum;\n}", "    let max\
    \ = 0;\n    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        let\
    \ element = lst[i];\n        if(element > max){\n            max = element;\n\
    \        }\n    }\n    let count = 0;\n    for(let i = 2; i < max; i++){\n   \
    \     if(max % i == 0){\n            count++;\n        }\n    }\n    if(count\
    \ == 0){\n        let s = max.toString();\n        for(let i = 0; i < s.length;\
    \ i++){\n            let element = s[i];\n            sum += parseInt(element);\n\
    \        }\n    }\n    return sum;\n}", "    let max = lst.reduce((a,b)=>Math.max(a,b))\n\
    \    let primes = []\n    for(let i = 2; i<=max; i++){\n        if(isPrime(i)){\n\
    \            primes.push(i)\n        }\n    }\n    primes.sort((a,b)=>b-a)\n \
    \   console.log(primes[0])\n    let sum = 0\n    while(primes[0]>0){\n       \
    \ sum+=primes[0]%10\n        primes[0]/=10\n    }\n    return sum\n}", "    var\
    \ largest = Math.max(...lst);\n    var sum = 0;\n    var string = largest.toString();\n\
    \    for(var i = 0; i < string.length; i++){\n        sum += parseInt(string[i]);\n\
    \    }\n    return sum;\n}\n", "    let a = [Math.max(...lst)]\n    let b = [Math.min(...lst)]\n\
    \    let count = 0;\n    let sm = 0;\n    let i;\n    let j;\n    let primes =\
    \ [];\n    let result = 0;\n    for(i = 0; i <= b.length; i++){\n        for(j\
    \ = 2; j < a[i]; j++){\n            if(a[i] % j == 0){\n                count\
    \ += 1;\n            }\n        }\n        if(count == 0){\n            primes.push(a[i]);\n\
    \        }\n        count = 0;\n    }\n    let max = Math.max(...primes);\n  \
    \  for(let i = 0; i < max.length; i++){\n        let a = max[i] + max[i];\n  \
    \      sm += a;\n    }\n    return sm;\n}", "    let arr = lst.slice(0);\n   \
    \ let res = 0;\n    while(arr.length){\n        let first = arr.shift();\n   \
    \     if(isPrime(first)){\n            res = Number(String(first).split('').reduce((a,b)=>Number(a)+Number(b),0));\n\
    \        }\n    }\n    console.log(res);\n}\n", "    let largest = lst.reduce((acc,val)=>{\n\
    \        if(isPrime(val)){\n            if(val>acc){\n                acc = val;\n\
    \            }\n        }\n        return acc;\n    },0);\n    console.log(largest);\n\
    \    let sum = 0;\n    for(let i = 0; i< largest.toString().length; i++){\n  \
    \      sum+=parseInt(largest.toString()[i]);\n    }\n    return sum;\n}\n", " \
    \   return lst.reduce((a,b)=> a*b)\n}\n", "    let largestPrime = 0;\n    let\
    \ sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        let currentNum =\
    \ lst[i];\n        let prime = true;\n        for(let j = 2; j < currentNum; j++){\n\
    \            if(currentNum % j === 0){\n                prime = false;\n     \
    \           break;\n            }\n        }\n        if(prime && currentNum >\
    \ largestPrime){\n            largestPrime = currentNum;\n        }\n    }\n \
    \   while(largestPrime >= 10){\n        sum += largestPrime % 10;\n        largestPrime\
    \ = Math.floor(largestPrime / 10);\n    }\n    return sum + largestPrime;\n}",
  "    return lst.reduce((a,b)=>a+b,0);\n}", "    var x = lst.filter(a => a % a ==\
    \ 0).sort((a,b) => a-b).reverse();\n    var y = x.filter(a => a % x[0] == 0).sort((a,b)\
    \ => a-b).reverse();\n    var z = y.filter(a => a % y[0] == 0).sort((a,b) => a-b).reverse();\n\
    \    var zz = z.filter(a => a % z[0] == 0).sort((a,b) => a-b).reverse();\n   \
    \ var zzz = zz.filter(a => a % zz[0] == 0).sort((a,b) => a-b).reverse();\n   \
    \ return zzz[0];\n}", "    let maxPrime = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        let isPrime = true;\n        for(let j = 2; j < lst[i]; j++){\n\
    \            if(lst[i] % j === 0){\n                isPrime = false;\n       \
    \         break;\n            }\n        }\n        if(isPrime && lst[i] > maxPrime){\n\
    \            maxPrime = lst[i];\n        }\n    }\n    let sum = 0;\n    while(maxPrime\
    \ > 0){\n        sum += maxPrime % 10;\n        maxPrime = Math.floor(maxPrime\
    \ / 10);\n    }\n    return sum;\n}", "    for(let i = lst.length - 1; i >= 0;\
    \ i--){\n        let num = lst[i];\n        if(isPrime(num)){\n            return\
    \ calcDigitSum(num);\n        }\n    }\n    return 0;\n}\n", "    let prime =\
    \  Math.max(...lst.filter(x => {\n        for(let i = 2; i < x; i++)\n       \
    \     if(x % i === 0) return false;\n        return x !== 1;\n    }))\n    return\
    \ prime ? prime.toString().split('').reduce((a, b) => +a + +b) : 0;\n}", "   \
    \ let a = lst.sort((a,b)=>b-a)\n    let b = Math.sqrt(a[0])\n    let i = 2\n \
    \   while(i<=b){\n        if(a[0]%i==0){\n            if(a[0]/i < b){\n      \
    \          b = a[0]/i\n            }\n            else{\n                b = i\n\
    \            }\n        }\n        i++\n    }\n    let sum = 0\n    while(b>0){\n\
    \        sum += b%10\n        b = Math.floor(b/10)\n    }\n    return sum\n}",
  "\tif(lst.length == 0) return 0;\n\tlet largestPrime = 1;\n\tfor(let i = 0; i <\
    \ lst.length; i++){\n\t\tif(lst[i] > largestPrime){\n\t\t\tlet isPrime = true;\n\
    \t\t\tfor(let j = 2; j <= Math.sqrt(lst[i]); j++){\n\t\t\t\tif(lst[i] % j == 0){\n\
    \t\t\t\t\tisPrime = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isPrime)\
    \ largestPrime = lst[i];\n\t\t}\n\t}\n\treturn sumDigits(largestPrime);\n}\n",
  "    let sum = 0;\n    let max = Math.max(...lst);\n    for(let i = 2; i <= max;\
    \ i++){\n        if(max % i === 0){\n            max = max / i;\n            i\
    \ = 1;\n        }\n    }\n    let arr = Array.from(String(max), Number);\n   \
    \ for(let i = 0; i < arr.length; i++){\n        sum += arr[i];\n    }\n    return\
    \ sum;\n}\n", "    let max = Math.max(...lst);\n    let lst1 = lst.filter(i =>\
    \ i % max === 0);\n    console.log(lst1)\n}\nskjkasdkd([1, 2, 3, 4, 5]);\nskjkasdkd([10,\
    \ 10, 10, 10, 10]);\nskjkasdkd([10, 1, 2, 3, 4, 5]);\nskjkasdkd([1, 2, 3, 4, 5,\
    \ 8, 8, 8, 8, 9, 10]);\nskjkasdkd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\nskjkasdkd([11,\
    \ 11, 11, 11, 11, 11, 11, 11, 11, 11, 11]);\nskjkasdkd([11, 1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10]);", "    let sum = 0;\n    let max = 0;\n    for(let i = 0; i <\
    \ lst.length; i++){\n        if(lst[i] % 2 !== 0 && lst[i] % 3 !== 0 && lst[i]\
    \ > max){\n            max = lst[i];\n        }\n    }\n    while(max > 0){\n\
    \        sum += max % 10;\n        max = Math.floor(max / 10);\n    }\n    return\
    \ sum;\n}", "let largest = Math.max(...lst);\nlet sum = 0;\nwhile(largest){\n\
    \  sum += largest % 10;\n  largest = Math.floor(largest / 10);\n}\nreturn sum;\n\
    }", "    let prime = 2;\n    while(lst.length > 0){\n        let i = prime;\n\
    \        while(i < lst.length){\n            if(lst[i] % prime === 0){\n     \
    \           lst.splice(i, 1);\n            }\n            i++;\n        }\n  \
    \      prime = lst[lst.indexOf(prime) + 1];\n    }\n    let res = lst.reduce((a,\
    \ b) => a + b);\n    return res;\n}\n", "    var largest = Math.max(...lst);\n\
    \    var flag = true;\n    for(var i = 2; i < largest; i++){\n        if(largest\
    \ % i == 0){\n            flag = false;\n            break;\n        }\n    }\n\
    \    if(flag){\n        var sum = 0;\n        while(largest != 0){\n         \
    \   sum += largest % 10;\n            largest = parseInt(largest / 10);\n    \
    \    }\n        return sum;\n    }\n    return largest;\n}\n", "    let max =\
    \ lst.reduce((acc, curr) => acc > curr ? acc : curr, 0);\n    let i = 2;\n   \
    \ while(i < max){\n        if(max % i === 0){\n            max = max / i;\n  \
    \      }\n        i++;\n    }\n    return max.toString().split('').reduce((acc,\
    \ curr) => acc + parseInt(curr), 0);\n}\n", "    let maxPrime = 0;\n    let nums\
    \ = [...lst];\n    let sums = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        let currentNum = nums[i];\n        if(isPrime(currentNum)){\n       \
    \     if(currentNum > maxPrime){\n                maxPrime = currentNum;\n   \
    \         }\n        }\n    }\n    let arr = maxPrime.toString().split('');\n\
    \    let sum = 0;\n    for(let i = 0; i < arr.length; i++){\n        sum += Number(arr[i]);\n\
    \    }\n    return sum;\n}", "    var temp = 0;\n    var res = 0;\n    for(var\
    \ i = 0; i < lst.length; i++){\n        if(lst[i] > temp){\n            temp =\
    \ lst[i];\n        }\n    }\n    var arr = temp.toString().split('');\n    for(var\
    \ j = 0; j < arr.length; j++){\n        res += Number(arr[j]);\n    }\n    return\
    \ res;\n}", "  var largest = Math.max(...lst);\n  var largestPrime = 0;\n  for(var\
    \ i = 0; i<lst.length; i++){\n    if(checkPrime(lst[i]) && lst[i] > largestPrime){\n\
    \      largestPrime = lst[i];\n    }\n  }\n  return sumDigits(largestPrime);\n\
    }\n", "    let prime = true;\n    let highestPrime = 0;\n    for(let i = 0; i\
    \ < lst.length; i++){\n        let num = lst[i];\n        for(let j = 2; j < Math.ceil(Math.sqrt(num));\
    \ j++){\n            if(num % j === 0){\n                prime = false;\n    \
    \            break;\n            }\n        }\n        if(prime && highestPrime\
    \ < num){\n            highestPrime = num;\n        }\n        prime = true;\n\
    \    }\n    console.log(highestPrime);\n    let sum = 0;\n    while(highestPrime\
    \ > 0){\n        sum += highestPrime % 10;\n        highestPrime = Math.floor(highestPrime\
    \ / 10);\n    }\n    return sum;\n}\n", "    let maxPrime = Math.max(...lst.filter(n\
    \ => isPrime(n)));\n    return maxPrime.toString().split('').reduce((a,b) => Number(a)\
    \ + Number(b));\n}\n", "    let temp = [];\n    for(let elem of lst){\n      \
    \  let isPrime = true;\n        for(let i = 2; i < elem; i++){\n            if(elem\
    \ % i === 0){\n                isPrime = false;\n                break;\n    \
    \        }\n        }\n        if(isPrime){\n            temp.push(elem);\n  \
    \      }\n    }\n    temp.sort((a, b) => b - a);\n    let maxNum = 0;\n    for(let\
    \ el of temp){\n        if(el > maxNum){\n            maxNum = el;\n        }\n\
    \    }\n    return maxNum.toString().split('').reduce((a, b) => a + +b, 0);\n}",
  "    for(let i = 0; i <lst.length; i++){\n        if(lst[i]%2 !== 0){\n        \
    \    if(lst[i]%3 !== 0){\n                if(lst[i]%5 !== 0){\n              \
    \      if(lst[i]%7 !== 0){\n                        if(lst[i]%9 !== 0){\n    \
    \                        return lst[i]\n                        }\n          \
    \          }\n                }\n            }\n        }\n    }\n}", "    lst\
    \ = lst.split('').map(el => +el);\n    let lst1 = lst.filter(el => el % 2 != 0);\n\
    \    let lst2 = lst1.filter(el => el % 3 != 0);\n    let lst3 = lst2.filter(el\
    \ => el % 5 != 0);\n    let lst4 = lst3.filter(el => el % 7 != 0);\n    let lst5\
    \ = lst4.filter(el => el % 11 != 0);\n    return lst5.reduce((a,b) => a + b, 0);\n\
    }", "    var  ksjkdjs = [];\n    for(var i = 2; i <= lst; i++){\n        if(lst\
    \ % i == 0){\n            ksjkdjs.push(i);\n            lst = lst / i;\n     \
    \       i--;\n        }\n    }\n    return  ksjkdjs;\n}", "    let max = Math.max(...lst);\n\
    \    if(max <= 1){\n        return max\n    }\n    for(let i = 2; i <= max; i++){\n\
    \        if(max % i === 0){\n            max /= i;\n            i--;\n       \
    \ }\n    }\n    let result = 0;\n    while(max > 0){\n        result += max %\
    \ 10;\n        max = Math.floor(max / 10);\n    }\n    return result;\n}\n", " \
    \   let rez = 0;\n    let num = 0;\n    let all = [];\n    for(let i = 0; i <\
    \ lst.length; i++){\n        for(let j = 2; j < lst[i]; j++){\n            if(lst[i]\
    \ % j !== 0){\n                num += 1;\n            }\n        }\n        if(num\
    \ === lst[i] - 2){\n            rez += lst[i];\n            all.push(lst[i]);\n\
    \        }\n        num = 0;\n    }\n    rez = all.sort((a, b) => b - a)[0];\n\
    \    return rez;\n}\n", "\tvar newArr = lst.filter(function(item){\n\t\treturn\
    \ item % 2 == 1;\n\t})\n\tvar max = Math.max.apply(null, newArr);\n\tvar str =\
    \ max.toString();\n\tvar sum = 0;\n\tfor(var i = 0; i < str.length; i++){\n\t\t\
    sum += Number(str[i]);\n\t}\n\treturn sum;\n}", "    let largest = lst.reduce((a,b)=>Math.max(a,b));\n\
    \    let arr = primes(largest);\n    let last = arr[arr.length-1];\n    let digits\
    \ = last.toString().split('');\n    console.log(digits);\n    let reducer = (a,b)=>a+parseInt(b);\n\
    \    return digits.reduce(reducer);\n\n}", "    var maxPrime = getMaxPrime(lst);\n\
    \    var s = maxPrime.toString();\n    var ans = 0;\n    for(var i = 0; i < s.length;\
    \ i++){\n        ans += parseInt(s[i]);\n    }\n    return ans;\n}", "  lst.sort((a,b)=>b-a);\n\
    \  let max=lst[0];\n  for(let i=1;i<lst.length;i++){\n    if(lst[i]%max==0){\n\
    \      lst.splice(i,1);\n      i--;\n    }\n  }\n  return lst;\n}", "    let max\
    \ = lst.sort((a,b)=>a-b).pop();\n    let prim=1;\n    for(let i=2;i<=max;i++){\n\
    \        let tmp = lst.filter(x=>x%i==0);\n        if(tmp.length==lst.length){\n\
    \            prim=i;\n        }\n    }\n    return prim.toString().split('').reduce((a,b)=>+a+\
    \ +b,0);\n}\n", "    let isPrime = (n) => {\n        for (let i = 2; i < n; i++)\
    \ {\n            if (n % i === 0) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    let getLargestPrime = (arr)\
    \ => {\n        let prime;\n        for (let i = 0; i < arr.length; i++) {\n \
    \           if (isPrime(arr[i])) {\n                prime = arr[i];\n        \
    \    }\n        }\n        return prime;\n    }\n    let getSumOfDigits = (n)\
    \ => {\n        let str = n.toString();\n        let sum = 0;\n        for (let\
    \ i = 0; i < str.length; i++) {\n            sum += Number(str[i]);\n        }\n\
    \        return sum;\n    }\n    let largestPrime = getLargestPrime(lst);\n  \
    \  let sumOfDigits = getSumOfDigits(largestPrime);\n    return sumOfDigits;\n}",
  "  let prime = Math.max(...lst.filter(x => isPrime(x)));\n  return prime.toString().split('').reduce((a,\
    \ b) => Number(a) + Number(b));\n}\n", "    let max = Math.max(...lst);\n    let\
    \ prime = false;\n    for(let i = max; i >= 0; i--){\n        if(max % i === 0\
    \ && i > 1){\n            prime = true;\n        }else{\n            prime = false;\n\
    \        }\n    }\n    let nums = max.toString().split('');\n    let sum = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum += Number(nums[i]);\n\
    \    }\n    return sum;\n}", "    let max = 0;\n    let sum = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        if(isPrime(lst[i]) && lst[i] > max){\n\
    \            max = lst[i];\n        }\n    }\n    for(let i = 0; i < max.toString().length;\
    \ i++){\n        sum += Number(max.toString()[i]);\n    }\n    return sum;\n}",
  "    var primes = lst.filter(function(x){\n        for(var i = 2; i < x; i++){\n\
    \            if(x % i === 0){\n                return false;\n            }\n\
    \        }\n        return true;\n    });\n    var largestPrime = Math.max.apply(null,\
    \ primes);\n    var sum = 0;\n    var chars = largestPrime.toString().split('');\n\
    \    for(var i = 0; i < chars.length; i++){\n        sum += parseInt(chars[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    let max = 0;\n    for(let\
    \ i = 0; i < lst.length; i++){\n        let tmp = lst[i];\n        while(tmp !=\
    \ 1){\n            let isPrime = true;\n            for(let j = 2; j < tmp; j++){\n\
    \                if(tmp % j == 0){\n                    isPrime = false;\n   \
    \                 break;\n                }\n            }\n            if(isPrime){\n\
    \                sum += tmp;\n                if(tmp > max){\n               \
    \     max = tmp;\n                }\n                break;\n            }else{\n\
    \                tmp--;\n            }\n        }\n    }\n    return max;\n}\n\
    let arr = [1,2,3,4,5,6,7,8,9,10];", "    function isPrime(n) {\n        for(var\
    \ i = 2; i < n; i++) {\n            if(n % i === 0) {\n                return\
    \ false;\n            }\n        }\n        return n > 1;\n    }\n    let x =\
    \ Math.max(...lst);\n    while (!isPrime(x)){\n        x--;\n    }\n    return\
    \ x.toString().split('').reduce((a,b)=>a+Number(b),0);\n}\n", "    let max = 0;\n\
    \    for(let el of lst){\n        let prime = true;\n        for(let i = 2; i\
    \ <= Math.sqrt(el); i++){\n            if(el % i === 0){\n                prime\
    \ = false;\n                break;\n            }\n        }\n        if(prime){\n\
    \            max = Math.max(max, el);\n        }\n    }\n    return max.toString().split('').reduce((a,\
    \ b) => +a + +b);\n}\n", "    let prime = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(isPrime(lst[i])){\n            if(lst[i] > prime){\n     \
    \           prime = lst[i];\n            }\n        }\n    }\n    let sum = 0;\n\
    \    while(prime > 0){\n        sum += prime % 10;\n        prime = Math.floor(prime\
    \ / 10);\n    }\n    return sum;\n}", "    let primes = [];\n    let largest =\
    \ 0;\n    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        if(isPrime(lst[i])){\n\
    \            primes.push(lst[i]);\n        }\n    }\n    largest = Math.max(...primes);\n\
    \    let nums = largest.toString().split('');\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum += parseInt(nums[i]);\n    }\n    return sum;\n}\n", "\t\
    let maxPrime=Math.max(...lst);\n\tlet result=0;\n\tfor(let i=0;i<=maxPrime;i++){\n\
    \t\tif(isPrime(i)){\n\t\t\tresult=i;\n\t\t}\n\t}\n\tlet res=0;\n\tlet resStr=result.toString();\n\
    \tfor(let i=0;i<resStr.length;i++){\n\t\tres+=Number(resStr[i]);\n\t}\n\treturn\
    \ res;\n}", "    let maxP = 0;\n    let newarr = []\n    for(let i=0; i<lst.length;\
    \ i++){\n        let count = 0;\n        for(let j=1; j<=lst[i]; j++){\n     \
    \       if(lst[i]%j==0){\n                count++\n            }\n        }\n\
    \        if(count==2){\n            newarr.push(lst[i])\n        }\n    }\n  \
    \  for(let i=0; i<newarr.length; i++){\n        if(newarr[i]>maxP){\n        \
    \    maxP = newarr[i]\n        }\n    }\n    if(maxP>0){\n        let sum = 0;\n\
    \        while(maxP>0){\n            sum = sum + (maxP%10)\n            maxP =\
    \ parseInt(maxP/10)\n        }\n        return sum\n    }\n    else{\n       \
    \ return -1\n    }\n}\n\nlet lst = [123,321,345,434]", "    for(let i=0; i<lst.length;\
    \ i++){\n        if(!isPrime(lst[i])){\n            lst.splice(i,1);\n       \
    \     i--;\n        }\n    }\n    if(lst.length===0){\n        return -1;\n  \
    \  }\n    return lst.reduce((a,b)=>a+b,0);\n}", "    let max = 0;\n    let newNum\
    \ = 0;\n    let sum = 0;\n    lst.forEach(x => {\n        if(x>max){\n       \
    \     max = x;\n        }\n    });\n    let prime = isPrime(max);\n    while(prime\
    \ !== 0){\n        newNum = prime%10;\n        sum += newNum;\n        prime =\
    \ prime/10;\n    }\n    return sum;\n}\n", "    let max = Math.max(...lst);\n\
    \    let sum = String(max).split('').reduce((sum,el)=>sum+Number(el),0);\n   \
    \ return sum;\n}", "    let newLst = [];\n    let flag = false;\n    for(let i\
    \ = 0; i < lst.length; i++){\n        let curr = lst[i];\n        if(curr < 2){\n\
    \            newLst.push(curr);\n        }\n        else{\n            for(let\
    \ j = 2; j < curr; j++){\n                if(curr % j === 0){\n              \
    \      flag = true;\n                    break;\n                }\n         \
    \   }\n            if(flag === false){\n                newLst.push(curr);\n \
    \           }\n            flag = false;\n        }\n    }\n    let max = Math.max(...newLst);\n\
    \    let spl = max.toString().split('');\n    let sum = 0;\n    for(let i = 0;\
    \ i < spl.length; i++){\n        sum += Number(spl[i]);\n    }\n    return sum;\n\
    }", "    let arr = [];\n    for(let i = 0; i < lst.length; i++){\n        let\
    \ prime = true;\n        if(lst[i] <= 1){\n            prime = false;\n      \
    \  }\n        for(let j = 2; j < lst[i]; j++){\n            if(lst[i] % j ===\
    \ 0){\n                prime = false;\n            }\n        }\n        if(prime){\n\
    \            arr.push(lst[i]);\n        }\n    }\n    return arr;\n}", "    let\
    \ primeNumber = lst.filter(x => isPrime(x));\n    let maxPrime = primeNumber.reduce((a,b)\
    \ => Math.max(a,b));\n    let sumOfPrime = 0;\n    let numToStr = maxPrime.toString().split('');\n\
    \    numToStr.forEach(num => {\n        sumOfPrime += parseInt(num);\n    });\n\
    \    return sumOfPrime;\n}", "    let temp = {};\n    let sum = 0;\n    for(let\
    \ x of lst){\n        let t = x;\n        while(t%2==0){\n            t/=2;\n\
    \        }\n        while(t%3==0){\n            t/=3;\n        }\n        while(t%5==0){\n\
    \            t/=5;\n        }\n        while(t%7==0){\n            t/=7;\n   \
    \     }\n        if(t>1){\n            if(temp[t]){\n                temp[t] =\
    \ temp[t]+1;\n            }\n            else{\n                temp[t] = 1;\n\
    \            }\n        }\n    }\n    for(let x in temp){\n        if(temp[x]>1){\n\
    \            sum+=parseInt(x);\n        }\n    }\n    console.log(sum);\n}\nskjkasdkd([2,\
    \ 5, 6, 9, 11, 20, 23, 15]);\nskjkasdkd([2, 3, 5, 7, 11, 13, 17, 23, 29, 31, 37,\
    \ 47, 53, 59, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677", "  let lpn = lst.filter(function(n){\n\
    \    return  isprime(n);\n  });\n  return lpn.sort((a,b)=>b-a)[0].toString().split('').reduce((x,y)=>parseInt(x)+parseInt(y));\n\
    }\n", "    let maxPrime = 2;\n    for(let i = 2; i < lst.length; i++){\n     \
    \   if(prime(lst[i]) && lst[i] > maxPrime){\n            maxPrime = lst[i];\n\
    \        }\n    }\n    return maxPrime;\n}", "    function prime(num){\n     \
    \   if(num<2){\n            return false;\n        }\n        for(let i=2;i<num;i++){\n\
    \            if(num%i===0){\n                return false;\n            }\n  \
    \      }\n        return true;\n    }\n    let arrPrime=lst.filter(e=>{\n    \
    \    return prime(e);\n    });\n    let result=Math.max(...arrPrime);\n    console.log(result);\n\
    \    let arrResult=[];\n    while(result>0){\n        arrResult.push(result%10);\n\
    \        result=Math.floor(result/10);\n    }\n    return arrResult.reduce((p,c)=>{\n\
    \        return p+c;\n    },0);\n}", "    let maxPrime = 0;\n    let sum = 0;\n\
    \    for(let num of lst){\n        if(isPrime(num)){\n            if(num > maxPrime){\n\
    \                maxPrime = num;\n            }\n        }\n    }\n    for(let\
    \ ch of maxPrime.toString()){\n        sum += Number(ch);\n    }\n    return sum;\n\
    }\n", "  var result = 0;\n  var largest = 0;\n  var prime = [];\n  var sum = 0;\n\
    \  for(var i = 0; i < lst.length; i++){\n    result = isPrime(lst[i]);\n    if(result){\n\
    \      prime.push(lst[i]);\n    }\n  }\n  for(var i = 0; i < prime.length; i++){\n\
    \    if(prime[i] > largest){\n      largest = prime[i];\n    }\n  }\n  for(var\
    \ i = 0; i < largest.toString().length; i++){\n    sum += Number(largest.toString()[i]);\n\
    \  }\n  return sum;\n}\nskjkasdkd([19,5,8,11,2,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
  "    let largestPrime = Math.max(...lst.filter(x => isPrime(x)))\n    if(largestPrime\
    \ === -Infinity){\n        return 0\n    }\n    return largestPrime.toString().split('').reduce((acc,curr)\
    \ => acc + Number(curr),0)\n}\n", "    let result = [];\n    let max = lst[0];\n\
    \    let sum = 0;\n    let isPrime = true;\n    let lst_length = lst.length;\n\
    \    for(let i = 0; i < lst_length; i++){\n        if(max < lst[i]){\n       \
    \     max = lst[i];\n        }\n    }\n    for(let i = 2; i < max; i++){\n   \
    \     for(let j = 2; j < i; j++){\n            if(i % j === 0){\n            \
    \    isPrime = false;\n                break;\n            }\n        }\n    \
    \    if(isPrime){\n            result.push(i);\n        }\n        isPrime = true;\n\
    \    }\n    let max_prime = result[result.length - 1];\n    while(max_prime >\
    \ 0){\n        sum += max_prime % 10;\n        max_prime = Math.floor(max_prime\
    \ / 10);\n    }\n    return sum;\n}", "    // get the largest prime in the array\n\
    \    var largestPrime = 0;\n    for(var i = 0; i < lst.length; i++){\n       \
    \ if(isPrime(lst[i]) && lst[i] > largestPrime){\n            largestPrime = lst[i];\n\
    \        }\n    }\n    // split the number up into an array\n    var lstOfInts\
    \ = largestPrime.toString().split(\"\");\n    // sum the digits\n    var answer\
    \ = 0;\n    for(var i = 0; i < lstOfInts.length; i++){\n        answer += parseInt(lstOfInts[i]);\n\
    \    }\n    return answer;\n}\n", "    let primeList = findPrimeNumbers(Math.max(...lst));\n\
    \    let sum = 0;\n    for(let number of lst){\n        if(primeList.includes(number)){\n\
    \            let arr = number.toString().split('');\n            for(let digit\
    \ of arr){\n                sum += +digit;\n            }\n        }\n    }\n\
    \    return sum;\n}\n", "    let largestPrime = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(checkIfPrime(lst[i]) && lst[i] > largestPrime){\n        \
    \    largestPrime = lst[i];\n        }\n    }\n    return getSumOfDigits(largestPrime);\n\
    }\n", "    var max=0;\n    for(var i=0;i<lst.length;i++){\n        if(lst[i]>max){\n\
    \            max=lst[i];\n        }\n    }\n    for(var i=2;i<max;i++){\n    \
    \    if(max%i==0){\n            max=max/i;\n            i=2;\n        }\n    }\n\
    \    var sum=0;\n    while(max>0){\n        sum+=max%10;\n        max=Math.floor(max/10);\n\
    \    }\n    return sum;\n}\nvar arr=[200, 21, 91, 17, 43];", "    let maxPrime\
    \ = Math.max(...lst.filter(n => isPrime(n)));\n    let sum = 0;\n    let arrPrime\
    \ = maxPrime.toString().split('');\n    for (let i = 0; i < arrPrime.length; i++)\
    \ {\n        sum += +arrPrime[i];\n    }\n    return sum;\n}\n", "    let primeNum\
    \ = 0;\n    for(let i = 0; i < lst.length; i++){\n        let num = lst[i];\n\
    \        if(num == 1){\n            continue;\n        }\n        let isPrime\
    \ = true;\n        for(let j = 2; j < num; j++){\n            if(num % j == 0){\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if(isPrime && primeNum < num){\n            primeNum = num;\n\
    \        }\n    }\n    let sum = 0;\n    for(let i = 0; i < primeNum.toString().length;\
    \ i++){\n        sum += +primeNum.toString()[i];\n    }\n    return sum;\n}",
  "    let largestPrime = 0;\n    for(let i=0; i<lst.length; i++){\n        let divisors\
    \ = 0;\n        for(let j=1; j<=lst[i]; j++){\n            if(lst[i]%j === 0){\n\
    \                divisors ++;\n            }\n        }\n        if(divisors ===\
    \ 2){\n            if(lst[i] > largestPrime){\n                largestPrime =\
    \ lst[i];\n            }\n        }\n    }\n    return largestPrime;\n}", "  \
    \  let num = lst.sort((a,b)=>b-a).filter(a=>isPrime(a)).slice(0,1);\n    return\
    \ num.length===0?0:num[0].toString().split('').reduce((a,b)=>a+Number(b),0);\n\
    }", "    let max = lst.sort((a,b)=>a-b)[lst.length-1];\n    let isPrime = true;\n\
    \    for(let i = 2; i < max; i++){\n        if(max % i === 0){\n            isPrime\
    \ = false;\n            break;\n        }\n    }\n    if(isPrime){\n        let\
    \ arr = max.toString().split('');\n        let sum = 0;\n        for(let i = 0;\
    \ i < arr.length; i++){\n            sum += Number(arr[i]);\n        }\n     \
    \   return sum;\n    }\n    return 'false';\n}", "    let largest = 0;\n    let\
    \ sum = 0;\n    let arr = lst.filter(function(val){\n        if(val > largest){\n\
    \            largest = val;\n        }\n    });\n    console.log(arr);\n}\nskjkasdkd([1,2,3,4,4]);",
  "    let map = new Map();\n    let arr = [];\n    let max = 0;\n    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        arr.push(lst[i]);\n       \
    \ if(lst[i] > max){\n            max = lst[i];\n        }\n    }\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let res = 1;\n        for(let j = 2; j\
    \ <= arr[i]; j++){\n            if(arr[i] % j == 0){\n                res *= j;\n\
    \            }\n        }\n        map.set(arr[i], res);\n    }\n    for(let i\
    \ = 2; i <= max; i++){\n        let count = 0;\n        for(let j = 0; j < lst.length;\
    \ j++){\n            if(lst[j] % i == 0){\n                count++;\n        \
    \    }\n        }\n        if(count == lst.length){\n            sum += i;\n \
    \       }\n    }\n    return sum;\n}", "    var n = 0;\n    var divider = 2;\n\
    \    while(divider < lst){\n        while(lst % divider === 0){\n            n\
    \ = divider;\n            lst = lst / divider;\n        }\n        divider = divider\
    \ + 1;\n    }\n    return n;\n}", "    function getMaxPrime(n) {\n        // console.log(n)\n\
    \        let isPrime;\n        for (let i = n; i >= 2; i--) {\n            isPrime\
    \ = true;\n            for (let j = 2; j < i; j++) {\n                if (i %\
    \ j === 0) {\n                    isPrime = false;\n                    break;\n\
    \                }\n            }\n            if (isPrime) {\n              \
    \  return i;\n            }\n        }\n    }\n    let maxPrime = getMaxPrime(Math.max(...lst));\n\
    \    console.log(maxPrime)\n    let sum = 0;\n    for (let i = 0; i < maxPrime.toString().length;\
    \ i++) {\n        sum += parseInt(maxPrime.toString()[i]);\n    }\n    return\
    \ sum;\n}", "    let max = Math.max(...lst);\n    console.log(max);\n    let prime\
    \ = [];\n    for(let num = 2; num <= max; num++){\n        for(let j = 2; j <\
    \ num; j++){\n            if(num % j == 0){\n                break;\n        \
    \    }\n            if(j == num - 1){\n                prime.push(num);\n    \
    \        }\n        }\n    }\n    console.log(prime)\n    let sum = 0;\n    for(let\
    \ i = 0; i < prime.length; i++){\n        let str = prime[i].toString();\n   \
    \     for(let j = 0; j < str.length; j++){\n            sum += parseInt(str[j]);\n\
    \        }\n    }\n    return sum;\n}", "    let max = lst.sort((a,b)=> b-a);\n\
    \    let sum = 0;\n    for(let i = 0; i < lst.length; i++){\n        for(let j\
    \ = 2; j < lst[i]; j++){\n            if(lst[i] % j === 0){\n                lst.splice(i,1);\n\
    \            }\n        }\n    }\n    for(let i = 0; i < lst.length; i++){\n \
    \       sum += lst[i];\n    }\n    return sum;\n}", "    let maxPrime=0;\n   \
    \ for(let i=0;i<lst.length;i++){\n        if(isPrime(lst[i]) && maxPrime<lst[i]){\n\
    \            maxPrime=lst[i];\n        }\n    }\n    if(maxPrime===0){\n     \
    \   return 0;\n    }else{\n        let sum=0;\n        let str=maxPrime.toString();\n\
    \        for(let i=0;i<str.length;i++){\n            sum+=Number(str[i]);\n  \
    \      }\n        return sum;\n    }\n}", "    let max = 0;\n    let sum = 0;\n\
    \    for(let i = 0; i < lst.length; i++){\n        if(isPrime(lst[i]) && lst[i]\
    \ > max){\n            max = lst[i];\n        }\n    }\n    let str = String(max);\n\
    \    for(let i = 0; i < str.length; i++){\n        sum += Number(str[i]);\n  \
    \  }\n    return sum;\n}", "    for(let i = 0; i < lst.length; i++){\n      if(lst[i]\
    \ == 2){\n        return 2;\n      }else if(lst[i] % 2 == 0){\n        continue;\n\
    \      }else if(lst[i] < 0){\n        continue;\n      }else{\n        let count\
    \ = 0;\n        for(let j = 1; j <= lst[i]; j++){\n          if(lst[i] % j ==\
    \ 0){\n            count++;\n          }\n        }\n        if(count == 2){\n\
    \          return lst[i];\n        }\n      }\n    }\n  }\n  let k = skjkasdkd([5,\
    \ -17, -21, -20, -16, -18, -15, -14, -19]);\n  console.log(k);\n  function sumOfDigits(num){\n\
    \    let str = num.toString();\n    let sum = 0;\n    for(let i = 0; i < str.length;\
    \ i++){\n      sum += Number(str[i]);\n    }\n    return sum;\n  }\n  let j =\
    \ sumOfDigits(k);\n  console.log(j);", "    let primes = [];\n    let current\
    \ = 2;\n    while(lst.length > 0){\n        while(lst.includes(current)){\n  \
    \          lst.splice(lst.indexOf(current), 1);\n        }\n        primes.push(current);\n\
    \        current++;\n    }\n    primes.splice(primes.indexOf(1), 1);\n    let\
    \ largest = primes[primes.length - 1];\n    let digits = largest.toString().split('');\n\
    \    let sum = 0;\n    for(let dig of digits){\n        sum += Number(dig);\n\
    \    }\n    return sum;\n}", "    var pom = 0;\n    var pom1 = 0;\n    var prime\
    \ = true;\n    var lst2 = lst.filter(e => {\n        prime = true;\n        if(e<1){\n\
    \            prime = false;\n        }\n        else if(e>1){\n            for(var\
    \ i=2; i<e; i++){\n                if(e%i == 0){\n                    prime =\
    \ false;\n                    break;\n                }\n            }\n     \
    \   }\n        if(prime){\n            return e;\n        }\n    });\n    for(var\
    \ i=0; i<lst2.length; i++){\n        if(lst2[i]>pom){\n            pom = lst2[i];\n\
    \        }\n    }\n    var arr = pom.toString().split('');\n    for(var i=0; i<arr.length;\
    \ i++){\n        pom1+=Number(arr[i]);\n    }\n    return pom1;\n}\n", "    var\
    \ nums = lst.filter(function(a){\n        return a.toString().length === 3;\n\
    \    });\n    return nums;\n}", "    let lst2 = lst.sort(function(a, b){return\
    \ b-a});\n    console.log(lst2)\n    let num = lst2[0];\n    let sum = 0;\n  \
    \  for(let i = 0; i < num.toString().length; i++){\n        sum += parseInt(num.toString()[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    let newLst = lst.filter(e\
    \ => e > 1 && e % 2 === 1 && isPrime(e))\n    for(let i = 0; i < newLst.length;\
    \ i++){\n        if(newLst[i] > newLst[i + 1]){\n            let n = newLst[i];\n\
    \            while(n >= 1){\n                sum += n % 10;\n                n\
    \ = Math.floor(n / 10);\n            }\n            return sum;\n        }\n \
    \   }\n}", "    \n    var maxValue = lst.reduce(function(acc, curr){\n       \
    \ return Math.max(acc, curr);\n    });\n    var maxValueIsPrime = lst.reduce(function(acc,\
    \ curr){\n        return curr === maxValue;\n    });\n    var stringify = maxValue.toString();\n\
    \    var res = stringify.split('');\n    console.log(res);\n    return res.reduce(function(acc,\
    \ curr){\n        return parseInt(acc)+parseInt(curr);\n    });\n}\n", "\tlet\
    \ prime = 0;\n\tfor(let i = 0; i < lst.length; i++){\n\t\tif(isPrime(lst[i]) &&\
    \ lst[i] > prime){\n\t\t\tprime = lst[i];\n\t\t}\n\t}\n\tconsole.log(prime);\n\
    \tlet sum = 0;\n\twhile(prime > 0){\n\t\tsum += prime % 10;\n\t\tprime = Math.floor(prime\
    \ / 10);\n\t}\n\treturn sum;\n}", "    var getMax = lst.sort((a,b)=>a-b).reduce((x,y)=>Math.max(x,y));\n\
    \    var isPrime = false;\n    while(!isPrime){\n        getMax--;\n        isPrime\
    \ = true;\n        for(var i = 2; i <= Math.sqrt(getMax); i++){\n            if(getMax\
    \ % i == 0){\n                isPrime = false;\n                break;\n     \
    \       }\n        }\n    }\n    var sum = 0;\n    getMax = getMax.toString();\n\
    \    for(var j = 0; j < getMax.length; j++){\n        sum += +getMax[j];\n   \
    \ }\n    return sum;\n}", "    let maxPrime=lst.filter(e => {\n        let l =\
    \ e.toString().length\n        let res = \"\"\n        for(let i = 0; i < l; i++){\n\
    \            res += e[i]\n        }\n        res = res.split(\"\")\n        for(let\
    \ i = 0; i < res.length; i++){\n            if(res[i] == 2){\n               \
    \ return true\n            }\n        }\n    })\n}\n", "    let num = Math.max(...lst);\n\
    \    let primes = [];\n    for(let i = num; i >= 2; i--){\n        if(num % i\
    \ == 0){\n            primes.push(i);\n        }\n    }\n    let finalPrimes =\
    \ primes.filter(function(num){\n        for(let i = 2; i < num; i++){\n      \
    \      if(num % i == 0){\n                return false;\n            }\n     \
    \   }\n        return true;\n    });\n    let finalNum = Math.max(...finalPrimes);\n\
    \    let finalSum = 0;\n    let finalArr = finalNum.toString().split('');\n  \
    \  finalArr.forEach(function(element){\n        finalSum += Number(element);\n\
    \    });\n    return finalSum;\n}\nskjkasdkd([22, 29, 7]);\nskjkasdkd([32, 31,\
    \ 8]);", "    \n}", "   let prime = 0;\n   for(let i = 0; i < lst.length; i++){\n\
    \       if(lst[i] > prime && isPrime(lst[i])){\n           prime = lst[i];\n \
    \      }\n   }\n   return sumDigits(prime);\n}", "   let res = 0;\n   let result\
    \ = 0;\n   let max = Math.max(...lst);\n   let j = 0;\n   for(let i = 2; i <=\
    \ max; i++){\n       if(lst.includes(i)){\n       if(i%2 == 0 && i != 2){\n  \
    \         continue;\n       }\n       for(j = 3; j < i; j+=2){\n           if(i%j\
    \ == 0){\n               break;\n           }\n       }\n       if(j == i){\n\
    \           res += i;\n       }\n       }\n   }\n   while(res != 0){\n       result\
    \ += res%10;\n       res = Math.floor(res/10);\n   }\n   return result;\n}", " \
    \   let max = Math.max(...lst)\n    console.log(max)\n    for(let i = 2; i < max;\
    \ i++){\n        for(let j = 2; j < i; j++){\n            if(i % j === 0){\n \
    \               lst.pop(i)\n            }\n        }\n    }\n    console.log(lst)\n\
    \    let sum = 0\n    for(let i = 0; i < lst.length; i++){\n        let num =\
    \ lst[i]\n        while(num > 0){\n            sum += num % 10\n            num\
    \ = Math.floor(num / 10)\n        }\n    }\n    return sum\n}\nskjkasdkd([3, 1,\
    \ 4, 12, 9, 5, 13, 99, 77, 44, 11, 64, 88, 93, 121, 14, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 107, 109, 113, 127, 131,\
    \ 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199])", " \
    \   let lst2 = lst.filter(e=>{\n        if(e%2!=0 && e%3!=0 && e%5!=0 && e%7!=0\
    \ && e%11!=0 && e%13!=0 && e%17!=0 && e%19!=0){\n            return e;\n     \
    \   }\n    });\n    lst2.sort((a,b)=>b-a);\n    let sum = lst2[0];\n    sum =\
    \ sum.toString().split('').map(e=>parseInt(e)).reduce((a,b)=>a+b,0);\n    return\
    \ sum;\n}", "    let largestPrime = Math.max(...lst.filter(n => isPrime(n)))\n\
    \    return largestPrime.toString().split('').reduce((a, b) => a + +b)\n}\n",
  "    let max = 0;\n    for(let i = 0; i < lst.length; i++){\n        let pr = lst[i];\n\
    \        if(pr === 0 || pr === 1){\n            continue;\n        }\n       \
    \ let isPrime = true;\n        for(let j = 2; j <= Math.sqrt(pr); j++){\n    \
    \        if(pr % j === 0){\n                isPrime = false;\n               \
    \ break;\n            }\n        }\n        if(isPrime){\n            max = Math.max(max,\
    \ pr);\n        }\n    }\n    let result = 0;\n    while(max > 0){\n        result\
    \ += max % 10;\n        max = Math.floor(max / 10);\n    }\n    return result;\n\
    }\n", "    let max = Math.max(...lst);\n    let maxArr = lst.filter(n => n ==\
    \ max);\n    let arr = [];\n    let sum = 0;\n    let maxArr_sum = 0;\n    for(let\
    \ i = 2; i < max; i++){\n        let res = true;\n        for(let j = 2; j < i;\
    \ j++){\n            if(i % j == 0){\n                res = false;\n         \
    \       break;\n            }\n        }\n        if(res){\n            arr.push(i);\n\
    \        }\n    }\n    let prime = Math.max(...arr);\n    for(let i = 0; i < prime.toString().length;\
    \ i++){\n        sum += Number(prime.toString()[i]);\n    }\n    for(let i = 0;\
    \ i < maxArr.length; i++){\n        maxArr_sum += maxArr[i];\n    }\n    return\
    \ sum + maxArr_sum;\n}", "// \tLet us define prime numbers as the integers greater\
    \ than 1 that are only divisible by 1 and themselves.", "    let isPrime = (num)\
    \ => {\n        if (num <= 1) {\n            return false;\n        }\n      \
    \  for (let i = 2; i < num; i++) {\n            if (num % i === 0) {\n       \
    \         return false;\n            }\n        }\n        return true;\n    }\n\
    \    let primeValues = (lst) => {\n        let primes = [];\n        for (let\
    \ i = 0; i < lst.length; i++) {\n            if (isPrime(lst[i])) {\n        \
    \        primes.push(lst[i]);\n            }\n        }\n        return primes;\n\
    \    }\n    let maxPrime = (primes) => {\n        let max = primes[0];\n     \
    \   for (let i = 1; i < primes.length; i++) {\n            if (primes[i] > max)\
    \ {\n                max = primes[i];\n            }\n        }\n        return\
    \ max;\n    }\n    let getSumOfDigits = (num) => {\n        let str = num.toString();\n\
    \        let sum = 0;\n        for (let i = 0; i < str.length; i++) {\n      \
    \      sum += Number(str[i]);\n        }\n        return sum;\n    }\n    let\
    \ primes = primeValues(lst);\n    return getSumOfDigits(maxPrime(primes));\n}\n\
    skjkasdkd([12, 14, 35, 51, 117, 8, 8, 98, 12, 12, -13]);", "    var prim = [];\n\
    \    for(var i =0; i<lst.length; i++){\n        if(isPrime(lst[i])){\n       \
    \     prim.push(lst[i]);\n        }\n    }\n    return prim;\n}", "    let nums\
    \ = []\n    let prime = 1;\n    let primeNum = [];\n    for(let i = 0; i < lst.length;\
    \ i++){\n        prime = 1;\n        for(let j = 2; j < lst[i]; j++){\n      \
    \      if(lst[i] % j == 0){\n                prime = 0;\n                break;\n\
    \            }\n        }\n        if(prime == 1 && lst[i] != 1){\n          \
    \  primeNum.push(lst[i]);\n        }\n    }\n    primeNum.sort(function(a, b){return\
    \ b-a});\n    if(primeNum.length > 0){\n        let num = primeNum[0];\n     \
    \   while(num > 0){\n            nums.push(num % 10);\n            num = Math.floor(num\
    \ / 10);\n        }\n        let sum = 0;\n        for(let k = 0; k < nums.length;\
    \ k++){\n            sum += nums[k];\n        }\n        return sum;\n    }else{\n\
    \        return 0;\n    }\n}", "    let max = lst.reduce((acc,curr)=>{\n     \
    \   if(isPrime(curr)){\n            return curr;\n        }else{\n           \
    \ return acc;\n        }\n    },0);\n    let num = 0;\n    while(max > 0){\n \
    \       num += max % 10;\n        max = Math.floor(max / 10);\n    }\n    return\
    \ num;\n}", "let maxPrime = 0;\n\nfor(let i = 0; i < lst.length; i++){\n    let\
    \ isPrime = true;\n    for(let j = 2; j < lst[i]; j++){\n        if(lst[i] % j\
    \ === 0){\n            isPrime = false;\n            break;\n        }\n    }\n\
    \    if(isPrime && lst[i] > maxPrime){\n        maxPrime = lst[i];\n    }\n}\n\
    \    let strPrime = maxPrime.toString();\n    let summ = 0;\n    for(let i = 0;\
    \ i < strPrime.length; i++){\n        summ += Number(strPrime[i]);\n    }\n  \
    \  return summ;\n}", "    var max = Math.max(...lst);\n    var firstDigit = Math.floor(max/10);\n\
    \    var secondDigit = max % 10;\n    return firstDigit + secondDigit;\n}", " \
    \   let primes = [];\n    let sum = 0;\n    let result = \"\";\n    let num =\
    \ 2;\n    let prime = true;\n    let digits = [];\n    while(primes.length < 10){\n\
    \        for(let i = 2; i <= Math.sqrt(num); i++){\n            if(num % i ===\
    \ 0){\n                prime = false;\n                break;\n            }\n\
    \        }\n        if(prime){\n            primes.push(num);\n        }\n   \
    \     prime = true;\n        num++;\n    }\n    for(let i = 0; i < lst.length;\
    \ i++){\n        result += lst[i].toString();\n    }\n    for(let i = 0; i < result.length;\
    \ i++){\n        digits.push(result[i]);\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        if(primes[i] > digits.length){\n            primes.splice(i,\
    \ 1);\n            i--;\n        }\n    }\n    for(let i = 0; i < primes.length;\
    \ i++){\n        sum += primes[i];\n    }\n    return sum;\n}\n", "    var primeLst\
    \ = [];\n    for(var i = 1; i < lst.length; i++){\n        var flag = false;\n\
    \        for(var j = 2; j < i; j++){\n            if(i % j == 0){\n          \
    \      flag = true;\n                break;\n            }\n        }\n      \
    \  if(!flag){\n            primeLst.push(i);\n        }\n    }\n    var max =\
    \ -Infinity;\n    for(var i = 0; i < primeLst.length; i++){\n        if(primeLst[i]\
    \ > max){\n            max = primeLst[i];\n        }\n    }\n    var sum = 0;\n\
    \    var str = String(max);\n    for(var i = 0; i < str.length; i++){\n      \
    \  sum += Number(str[i]);\n    }\n    return sum;\n}", "  let max = lst.reduce((acc,\
    \ item) => Math.max(acc, item));\n  for(let i = max - 1; i > 1; i--){\n    let\
    \ counter = 0;\n    for(let j = 2; j < i; j++){\n      if(i % j === 0){\n    \
    \    counter++;\n      }\n    }\n    if(counter === 0){\n      return sumOfDigits(i);\n\
    \    }\n  }\n}\n", "    var primes = primeGen(Math.max(...lst));\n    var lst\
    \ = lst.map(function(num){\n        return primes.includes(num) ? num : 0;\n \
    \   });\n    var bigPrime = Math.max(...lst);\n    if(bigPrime == 0){\n      \
    \  return 0;\n    }\n    var sum = 0;\n    while(bigPrime > 0){\n        sum +=\
    \ bigPrime % 10;\n        bigPrime = Math.floor(bigPrime / 10);\n    }\n    return\
    \ sum;\n}", "     let maxPrime = Math.max(...lst.filter(el => el % 2 !== 0 &&\
    \ el % 3 !== 0 && el % 5 !== 0));\n     console.log(maxPrime);\n     let sum =\
    \ maxPrime.toString().split('').reduce((acc, curr) => Number(acc) + Number(curr));\n\
    \     console.log(sum);\n     return sum;\n}\nskjkasdkd([21, 29, 19, 11, 13, 17]);//21\n\
    skjkasdkd([3, 31, 29, 11, 41, 37]);//4\nskjkasdkd([43, 29, 31, 73, 11, 13, 17]);//7\n\
    skjkasdkd([14, 16, 17, 24, 36, 47, 86, 47, 68, 44, 69, 74, 14, 11, 29, 24, 16,\
    \ 17, 17, 74, 12, 19, 30, 12, 18, 74, 86, 74, 24, 89, 86, 74, 87, 29, 16, 74,\
    \ 11, 17, 17, 24, 24, 31, 29, 16, 16, 74, 86, 74, 11, 31, 11, 74, 29, 87, 86,\
    \ 74, 87, 16, 17, 74, 12, 12, 14, 17, 29, 24, 87, 29, 24, 74, 17, 16, 87, 74,\
    \ 29, 87, 12, 12, 14, 17, 29, 24, 87, 29, 24, 74, 17, 16, 87, 74, 29, 87, 12,\
    \ 16, 16, 17, 29, 24, 87, 29, 24, 74, 17, 16, 87, 74, 29, 87, 12, 16, 16, 17,\
    \ 29, 24, 87, 29, 24, 74, 17, 16, 87, 74, 29, 87, 12, 16, 16, 17, 29, 24, 87,\
    \ 29, 24, 74, 17, 16, 87, 74, 29, 87, 12, 16, 16, 17, 29, 24, 87, 29, 24, 74,\
    \ 17, 16, 87, 74, 29, 87, 12, 16, 16, 17, 29, 24, 87, 29, 24, 74, 17, 16, 87,\
    \ 74, 29, 87", "    if (lst === []) {\n        return null;\n    }\n    let max\
    \ = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > max)\
    \ {\n            max = lst[i];\n        }\n    }\n    let maxInt = String(max);\n\
    \    let sum = 0;\n    for (let j = 0; j < maxInt.length; j++) {\n        sum\
    \ += parseInt(maxInt[j]);\n    }\n    return sum;\n}\n", "    if(lst.length ==\
    \ 0){\n        return 0;\n    }\n    var largestPrime = 0;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(isPrime(lst[i]) && lst[i] > largestPrime){\n\
    \            largestPrime = lst[i];\n        }\n    }\n    return digitsSum(largestPrime);\n\
    }\n", "    var max = Math.max(...lst);\n    return max;\n}", "    var maxPrime\
    \ = 0;\n    for(let i=0; i<lst.length; i++){\n        var current = lst[i];\n\
    \        var counter = 0;\n        for(let j=2; j<=current; j++){\n          \
    \  if(current%j==0){\n                counter++;\n            }\n        }\n \
    \       if(counter==1 && current>maxPrime){\n            maxPrime = current;\n\
    \        }\n    }\n    var sum = 0;\n    while(maxPrime>0){\n        sum += maxPrime%10;\n\
    \        maxPrime = Math.floor(maxPrime/10);\n    }\n    return sum;\n}", "  \
    \  let maxPrime = Math.max(...lst);\n    let primes = [];\n    for(let i = 2;\
    \ i <= maxPrime; i++){\n        let isPrime = true;\n        for(let j = 2; j\
    \ < i; j++){\n            if(i % j === 0){\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if(isPrime){\n    \
    \        primes.push(i);\n        }\n    }\n    let max = Math.max(...primes);\n\
    \    let maxArr = [];\n    for(let i = 0; i < max.toString().length; i++){\n \
    \       maxArr.push(max.toString()[i]);\n    }\n    let result = 0;\n    for(let\
    \ i = 0; i < maxArr.length; i++){\n        result += Number(maxArr[i]);\n    }\n\
    \    return result;\n}\n", "  let largestPrime = 0;\n  let largestPrimeSum = 0;\n\
    \  let isPrime = false;\n  let digitArr = [];\n  for(let i = 0; i < lst.length;\
    \ i++){\n    for(let j = 2; j < lst[i]; j++){\n      if(lst[i] % j === 0){\n \
    \       isPrime = false;\n        break;\n      }\n      else{\n        isPrime\
    \ = true;\n      }\n    }\n    if(isPrime){\n      if(lst[i] > largestPrime){\n\
    \        largestPrime = lst[i];\n      }\n    }\n  }\n  console.log('largest prime:\
    \ ', largestPrime);\n  if(largestPrime === 0){\n    return null;\n  }\n  else{\n\
    \    digitArr = largestPrime.toString().split('');\n    digitArr.forEach(item\
    \ => {\n      largestPrimeSum += parseInt(item);\n    });\n    return largestPrimeSum;\n\
    \  }\n}\n", "    let result = 0;\n    for(let i = 0; i < lst.length; i++){\n \
    \       result = result + largestPrime(lst[i]);\n    }\n    return result;\n}",
  "    let lst1 = lst.filter(a => a > 0)\n    let largestPrime =  Math.max(...lst1.filter(a\
    \ => isPrime(a)))\n    return largestPrime.toString().split('').reduce((acum,\
    \ a) => acum + +a)\n}", "    if(lst===undefined || lst.length===0)\n        return\
    \ -1;\n    let largestPrime = lst[0];\n    for(let i=0;i<lst.length;i++){\n  \
    \      if(lst[i]>largestPrime){\n            if(isPrime(lst[i])){\n          \
    \      largestPrime = lst[i];\n            }\n        }\n    }\n    return sumOfDigits(largestPrime);\n\
    }\n", "  let primes = [];\n  for(let i = 2; i < lst.length; i++){\n    let counter\
    \ = 0;\n    for(let j = 1; j <= i; j++){\n      if(i % j === 0){\n        counter++;\n\
    \      }\n    }\n    if(counter === 2){\n      primes.push(i);\n    }\n  }\n \
    \ let maxPrime = primes[0];\n  for(let i = 0; i < primes.length; i++){\n    if(primes[i]\
    \ > maxPrime){\n      maxPrime = primes[i];\n    }\n  }\n  let sum = 0;\n  let\
    \ split = maxPrime.toString().split('');\n  for(let i = 0; i < split.length; i++){\n\
    \    sum += parseInt(split[i]);\n  }\n  return sum;\n}", "    let val = Math.max(...lst)\n\
    \    for(let i = 2; i < val; i++){\n        if(val % i === 0){\n            val\
    \ = val / i\n            i--\n        }\n    }\n    let sum = 0\n    while(val\
    \ > 0){\n        sum += val % 10\n        val = Math.floor(val / 10)\n    }\n\
    \    return sum\n}", "    let max = 0;\n    let sum = 0;\n    let count = 0;\n\
    \    let arr = [];\n    for(let i = 0; i < lst.length; i++){\n        for(let\
    \ j = 1; j <= lst[i]; j++){\n            if(lst[i] % j === 0){\n             \
    \   count++;\n            }\n        }\n        if(count === 2){\n           \
    \ arr.push(lst[i]);\n        }\n        count = 0;\n    }\n    for(let k = 0;\
    \ k < arr.length; k++){\n        if(arr[k] > max){\n            max = arr[k];\n\
    \        }\n    }\n    for(let a = 0; a < max.toString().length; a++){\n     \
    \   sum += +max.toString()[a];\n    }\n    return sum;\n}", "    let prime = lst.filter(function(num){\n\
    \        let isPrime = true;\n        for(let i = 2; i < num; i++){\n        \
    \    if(num % i === 0){\n                isPrime = false;\n            }\n   \
    \     }\n        return isPrime;\n    })\n    let largestPrime = prime.sort(function(a,b){\n\
    \        return b - a;\n    })\n    let largestPrimeNumb = largestPrime[0];\n\
    \    let largestPrimeNumbString = largestPrimeNumb.toString();\n    let largestPrimeNumbArray\
    \ = largestPrimeNumbString.split('');\n    let largestPrimeNumbSum = largestPrimeNumbArray.reduce(function(a,b){\n\
    \        return parseInt(a) + parseInt(b);\n    })\n    return largestPrimeNumbSum;\n\
    }", "    var largest = 0;\n    var sum = 0;\n    for(let i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > largest){\n            if(isPrime(lst[i])){\n   \
    \             largest = lst[i];\n            }\n        }\n    }\n    if(largest\
    \ == 0){\n        return 0;\n    }else{\n        var numString = largest.toString();\n\
    \        var arr = numString.split(\"\");\n        for(let i = 0; i < arr.length;\
    \ i++){\n            sum += parseInt(arr[i]);\n        }\n        return sum;\n\
    \    }\n}\n", "    let largest = Math.max(...lst)\n    let prime = false\n   \
    \ let m = 1\n    for(let i = 0; i < lst.length; i++){\n        if(largest == 2){\n\
    \            prime = true\n        }else if(largest % m !== 0 && largest % 2 !=\
    \ 0){\n            prime = true\n        }else{\n            prime = false\n \
    \       }\n        m++\n    }\n    if(prime == true){\n        let sum = 0\n \
    \       let p = largest.toString()\n        let arr = []\n        for(let x =\
    \ 0; x < p.length; x++){\n            arr.push(parseInt(p[x]))\n        }\n  \
    \      for(let i = 0; i < arr.length; i++){\n            sum += arr[i]\n     \
    \   }\n        return sum\n    }else{\n        return -1\n    }\n}", "    let\
    \ isPrime = function(n) {\n        for(let i = 2; i < n; i++)\n            if(n\
    \ % i === 0) return false;\n        return n !== 1;\n    }\n    let max = Math.max(...lst.filter(el\
    \ => isPrime(el)));\n    let digits = max.toString().split('');\n    return digits.reduce((a,b)\
    \ => Number(a) + Number(b));\n}\n", "    return [...lst].filter(x => isPrime(x)).sort((a,b)\
    \ => b-a)[0].toString().split('').reduce((a,b) => a+Number(b),0)\n    function\
    \ isPrime(n){\n        if(n < 2) return false;\n        if(n == 2) return true;\n\
    \        if(n%2 == 0) return false;\n        for(let i = 3; i <= Math.sqrt(n);\
    \ i+=2){\n            if(n%i == 0) return false;\n        }\n        return true;\n\
    \    }\n}", "    let prime = lst.filter(e => isPrime(e))\n    let sum = prime.reduce((acc,e)\
    \ => acc + e)\n    function isPrime(num) {\n        for(let i = 2; i < num; i++)\n\
    \          if(num % i === 0) return false;\n        return num > 1;\n      }\n\
    \    return sum\n}", "    for(let i = 0; i < lst.length; i++){\n        let asd\
    \ = lst[i];\n        if(asd % 2 === 0 || asd % 3 === 0 || asd % 5 === 0){\n  \
    \          lst.splice(i, 1);\n            i--;\n        }\n    }\n    console.log(lst);\n\
    \    let max = Math.max(...lst);\n    console.log(max);\n    let nums = max.toString().split('');\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum += Number(nums[i]);\n\
    \    }\n    console.log(sum);\n}\nskjkasdkd([4,6,15,27]);", "  let j = lst.sort((a,b)=>a-b).reverse()[0]\n\
    \  function prime(n){\n    for(var i = 2; i < n; i++){\n      if(n % i === 0){\n\
    \        return false\n      }\n    }\n    return true\n  }\n  while(!prime(j)){\n\
    \    j = j - 1\n  }\n  let sum = 0\n  for(var k = 0; k < j.toString().length;\
    \ k++){\n    sum += Number(j.toString()[k])\n  }\n  return sum\n}", "    let max\
    \ = 0;\n    let n = 0;\n    while(n<lst.length){\n        let number = lst[n];\n\
    \        let divider = 1;\n        let isPrime = true;\n        while(divider\
    \ <= number){\n            if(number % divider === 0 && divider!==1 && divider!==number){\n\
    \                isPrime = false;\n            }\n            divider++;\n   \
    \     }\n        if(isPrime){\n            if(number > max){\n               \
    \ max = number;\n            }\n        }\n        n++;\n    }\n    let sum =\
    \ 0;\n    for(let digit of max.toString()){\n        sum += parseInt(digit);\n\
    \    }\n    return sum;\n}", "    let maxPrime = Math.max(...lst.filter(el =>\n\
    \        isPrime(el)))\n    return splitNum(maxPrime).reduce((a,b) => a+b)\n}\n",
  "    let result;\n    let x1= lst.filter(el=>{\n        if(el>0){\n            return\
    \ el;\n        }\n    });\n    let x2 = x1.filter(el=>{\n        if(el===1){\n\
    \            return el;\n        }\n        for(let i=2; i<el; i++){\n       \
    \     if(el%i===0){\n                return false;\n            }\n        }\n\
    \        return el;\n    });\n    let max = x2.reduce((sum, el)=>{\n        if(sum>el){\n\
    \            return sum;\n        }\n        return el;\n    });\n    let str\
    \ = max.toString();\n    let arr = str.split('');\n    result = arr.reduce((sum,\
    \ el)=>{\n        return sum+Number(el);\n    },0);\n    return result;\n}", " \
    \ let isItPrime = function(val){\n      for(let i = 2; i <= Math.sqrt(val); i++){\n\
    \        if(val % i === 0){\n          return false;\n        }\n      }\n   \
    \   return true;\n  }\n  let maxPrime = 0;\n  for(let j = 0; j < lst.length; j++){\n\
    \    if(isItPrime(lst[j]) && lst[j] > maxPrime){\n      maxPrime = lst[j];\n \
    \   }\n  }\n  console.log(maxPrime);\n  let sum = 0;\n  let x = maxPrime.toString();\n\
    \  for(let k = 0; k < x.length; k++){\n    sum += Number(x[k]);\n  }\n  return\
    \ sum;\n}", "    let max = Math.max(...lst)\n    let n = max;\n    let i;\n  \
    \  for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            while (n\
    \ % i == 0) {\n                n = n / i;\n            }\n        }\n    }\n \
    \   if (n == 1) {\n        let sum=0;\n        let arr = max.toString().split('');\n\
    \        for(let i=0;i<arr.length;i++){\n            sum+=Number(arr[i]);\n  \
    \      }\n        return sum;\n    }\n    else{\n        return -1;\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

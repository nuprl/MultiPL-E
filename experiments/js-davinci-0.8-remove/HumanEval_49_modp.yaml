name: HumanEval_49_modp
language: js
prompt: "//Return 2^n modulo p (be aware of numerics).\nfunction modp(n, p){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = modp;\n  assert.deepEqual(candidate(3, 5),3);\n  assert.deepEqual(candidate(1101,\
  \ 101),2);\n  assert.deepEqual(candidate(0, 101),1);\n  assert.deepEqual(candidate(3,\
  \ 11),8);\n  assert.deepEqual(candidate(100, 101),1);\n  assert.deepEqual(candidate(30,\
  \ 5),4);\n  assert.deepEqual(candidate(31, 5),3);\n}\n\ntest();"
completions: ["\tvar m = 1;\n\twhile(n > 0){\n\t\tif(n & 1) m = (m * 2) % p;\n\t\t\
    n = n >> 1;\n\t}\n\treturn m;\n}\n", "\treturn parseInt(BigInteger(2).pow(n).mod(p).toString());\n\
    }\n\n", "\tvar b = n.toString(2);\n\tvar r = 0;\n\tfor(var i = 0; i < b.length;\
    \ i++){\n\t\tr = r * 2;\n\t\tif(r >= p){\n\t\t\tr = r - p;\n\t\t}\n\t\tif(b[i]\
    \ == \"1\"){\n\t\t\tr = r + 1;\n\t\t}\n\t\tif(r >= p){\n\t\t\tr = r - p;\n\t\t\
    }\n\t}\n\treturn r;\n}\n", "    if(n < 1){\n        return 1;\n    }\n    if(n\
    \ == 1){\n        return 2;\n    }\n    var temp = modp(n / 2, p);\n    temp =\
    \ (temp * temp) % p;\n    if(n % 2 == 1){\n        temp = (temp * 2) % p;\n  \
    \  }\n    return temp;\n}\n\n", "\tif(n==0) return 1;\n\tn = n%(p-1);\n\tif(n<0)\
    \ n = n + p - 1;\n\tvar res = 1;\n\tvar a = 2;\n\twhile(n>0){\n\t\tif(n%2==1){\n\
    \t\t\tres = mod(res*a, p);\n\t\t}\n\t\ta = mod(a*a, p);\n\t\tn = Math.floor(n/2);\n\
    \t}\n\treturn res;\n}\n", "    var x = 1;\n    for(var i = 0; i < n; i++){\n \
    \       x = (x * 2) % p;\n    }\n    return x;\n}\n", "  if(p == 2) return n%2;\n\
    \  var x = 1;\n  while(n>0){\n    if(n%2) x = (x*2)%p;\n    n = Math.floor(n/2);\n\
    \  }\n  return x;\n}\n", "\tif(n === 0)\n\t\treturn 1;\n\tif(n === 1)\n\t\treturn\
    \ 2;\n\tif(n%2 === 0){\n\t\tn = modp(n/2, p);\n\t\treturn (n*n)%p;\n\t}\n\telse{\n\
    \t\tn = modp(n-1, p);\n\t\treturn (2*n)%p;\n\t}\n}\n", "\tif(n==0) return 1;\n\
    \tif(n%2==0){\n\t\treturn modp(n/2, p)^2 % p;\n\t}\n\telse{\n\t\treturn modp(n-1,\
    \ p)*2 % p;\n\t}\n}\n", "    var x = BigInt(1);\n    var y = BigInt(2);\n    while\
    \ (n > 0){\n        if (n % 2 != 0){\n            x = (x * y) % p;\n        }\n\
    \        y = (y * y) % p;\n        n = Math.floor(n / 2);\n    }\n    return x;\n\
    }\n", "    if(n==0) return 1;\n    if(n%2==0){\n        var res = modp(n/2, p);\n\
    \        return (res*res)%p;\n    }\n    return (modp(n-1, p)*2)%p;\n}\n", "\t\"\
    use strict\";\n\tif(n < 0) return;\n\tvar res = 1;\n\tvar bit;\n\tfor(bit = 1;\
    \ bit <= n; bit *= 2){\n\t\tif(n & bit) res = (res * 2) % p;\n\t}\n\treturn res;\n\
    }\n", "  if(n == 0) return 1;\n  if(n % 2 == 0){\n    var temp = modp(n/2, p);\n\
    \    return (temp * temp) % p;\n  }\n  else return (2 * modp(n-1, p)) % p;\n}",
  "\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\telse return (2*modp(n-1, p))\
    \ % p;\n}\n", "    var res = 1;\n    while(n > 0){\n        if(n % 2 == 1){\n\
    \            res = (res * n) % p;\n        }\n        n = Math.floor(n/2);\n \
    \       n = (n * n) % p;\n    }\n    return res;\n}\n", "    if(n == 0) return\
    \ 1;\n    else if(n == 1) return 2;\n    else if(n == 2) return 4;\n    else if(n\
    \ == 3) return 8;\n    else if(n == 4) return 16;\n    else if(n == 5) return\
    \ 32;\n    else if(n == 6) return 64;\n    else if(n == 7) return 128;\n    else\
    \ if(n == 8) return 256;\n    else if(n == 9) return 512;\n    else if(n == 10)\
    \ return 1024;\n    else if(n == 11) return 2048;\n    else if(n == 12) return\
    \ 4096;\n    else if(n == 13) return 8192;\n    else if(n == 14) return 16384;\n\
    \    else if(n == 15) return 32768;\n    else if(n == 16) return 65536;\n    else\
    \ if(n == 17) return 131072;\n    else if(n == 18) return 262144;\n    else if(n\
    \ == 19) return 524288;\n    else if(n == 20) return 1048576;\n    else if(n ==\
    \ 21) return 2097152;\n    else if(n == 22) return 4194304;\n    else if(n ==\
    \ 23) return 8388608;\n    else if(n == 24) return 16777216;\n    else if(n ==\
    \ 25) return 33554432;\n    else if(n == 26) return 67108864;\n    else if(n ==\
    \ 27) return 134217728;\n    else if(n == 28) return 268435456;\n    else if(n\
    \ == 29) return 536870912;\n    else if(n == 30) return 1073741824;\n    else\
    \ if(n == 31) return 2147483648;\n    else if(n == 32) return 4294967296;\n  \
    \  else if(n == 33) return 8589934592;\n    else if(n == 34) return 17179869184;\n\
    \    else if(n == 35) return 34359738368;\n    else if(n == 36) return 68719476736;\n\
    \    else if(n ==", "\tif(!p) p = mod;\n\t\n\tvar pw = 1;\n\twhile(n > 0){\n\t\
    \tif(n & 1) pw = mul(pw, 2, p);\n\t\tn >>= 1;\n\t}\n\treturn pw;\n}\n", "\tvar\
    \ two_n_p = BigInteger(2).modPow(BigInteger(n), BigInteger(p));\n\treturn parseInt(two_n_p.toString());\n\
    }\n", "\t\"use strict\";\n\tvar ret = 1;\n\tn = n % (p - 1);\n\twhile(n){\n\t\t\
    if(n % 2){\n\t\t\tret = (ret * 2) % p;\n\t\t}\n\t\tn = Math.floor(n / 2);\n\t\t\
    if(n){\n\t\t\tret = (ret * ret) % p;\n\t\t}\n\t}\n\treturn ret;\n}\n", "    if(n\
    \ == 0) return 1;\n    if(n == 1) return 2;\n    //The following is the simple\
    \ version of the following line:\n    //return Math.pow(2, n) % p;\n    //but\
    \ it uses an algorithm to do it, which is in general better\n    //than just using\
    \ Math.pow() because of precision issues.\n    var t = modp(Math.floor(n/2), p);\n\
    \    if(n % 2 == 0) return (t*t) % p;\n    return (2*t*t) % p;\n}\n", "\tif(n\
    \ < 0)return -1;\n\tif(n == 0)return 1;\n\tif(n == 1)return 2;\n\tif(n == 2)return\
    \ 4;\n\tif(n == 3)return 8;\n\tif(n == 4)return 16;\n\tif(n == 5)return 32;\n\t\
    if(n == 6)return 64;\n\tif(n == 7)return 128;\n\tif(n == 8)return 256;\n\tif(n\
    \ == 9)return 512;\n\tif(n == 10)return 1024;\n\tif(n == 11)return 2048;\n\tif(n\
    \ == 12)return 4096;\n\tif(n == 13)return 8192;\n\tif(n == 14)return 16384;\n\t\
    if(n == 15)return 32768;\n\tif(n == 16)return 65536;\n\tif(n == 17)return 131072;\n\
    \tif(n == 18)return 262144;\n\tif(n == 19)return 524288;\n\tif(n == 20)return\
    \ 1048576;\n\tif(n == 21)return 2097152;\n\tif(n == 22)return 4194304;\n\tif(n\
    \ == 23)return 8388608;\n\tif(n == 24)return 16777216;\n\tif(n == 25)return 33554432;\n\
    \tif(n == 26)return 67108864;\n\tif(n == 27)return 134217728;\n\tif(n == 28)return\
    \ 268435456;\n\tif(n == 29)return 536870912;\n\tif(n == 30)return 1073741824;\n\
    \tif(n == 31)return 2147483648;\n\tif(n == 32)return 4294967296;\n\tif(n == 33)return\
    \ 8589934592;\n\tif(n == 34)return 17179869184;\n\tif(n == 35)return 34359738368;\n\
    \tif(n == 36)return 68719476736;\n\tif(n == 37)return 137438953472;\n\tif(n ==\
    \ 38)return 274877906944", "\tvar i, j;\n\tvar res = 1;\n\tfor(i = 0; i < n; i++){\n\
    \t\tfor(j = 0; j < n; j++){\n\t\t\tres = (res * 2) % p;\n\t\t}\n\t}\n\treturn\
    \ res;\n}\n", "\tvar temp = 1,\n\t\tbase = 2;\n\twhile(n>0){\n\t\tif(n%2){\n\t\
    \t\ttemp = (temp*base)%p;\n\t\t}\n\t\tbase = (base*base)%p;\n\t\tn = Math.floor(n/2);\n\
    \t}\n\treturn temp;\n}\n", "\t\n\t//We need to work modulo p, so we only keep\
    \ the integer part.\n\tn = Math.floor(n);\n\t\n\t//If n is a power of 2, then\
    \ the answer is 2^n mod p.\n\tif (isPow2(n))\n\t\treturn modpow(2, n, p);\n\t\n\
    \t//We need to do an expensive algorithm, so we cache the results.\n\tvar mod\
    \ = Math.floor(Math.log(n) / Math.log(2));\n\tvar cache = modpCache[mod];\n\t\
    if (cache === undefined){\n\t\tcache = [1];\n\t\tfor (var i = 1; i <= mod; i++)\n\
    \t\t\tcache[i] = modmult(cache[i - 1], 2, p);\n\t\tmodpCache[mod] = cache;\n\t\
    }\n\t\n\t//We want the answer to be positive, so we take the remainder modulo\
    \ p.\n\treturn modmult(cache[mod], modp(n - Math.pow(2, mod), p), p);\n}\n", "\t\
    var res = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tres = (res * 2) % p;\n\t}\n\t\
    return res;\n}\n", "    if(n<0){\n        return -1;\n    }else if(n===0){\n \
    \       return 1;\n    }else if(n===1){\n        return 2;\n    }else{\n     \
    \   var i,\n            result = 2;\n        for(i=2; i<=n; i++){\n          \
    \  result = (result*2)%p;\n        }\n        return result;\n    }\n}\n", " \
    \   if(n == 0)\n        return 1;\n    if(n == 1)\n        return 2;\n    return\
    \ (2 * modp(n - 1, p)) % p;\n}\n", "  var s = 1;\n  while (n > 0){\n    if (n\
    \ % 2 === 1)\n      s = (s * 2) % p;\n    n = n >> 1;\n  }\n  return s;\n}\n",
  "  var r = 1, b = 2;\n  while(n > 0){\n    if(n % 2 == 1) r = (r * b) % p;\n   \
    \ n = Math.floor(n / 2);\n    b = (b * b) % p;\n  }\n  return r;\n}\n", "    var\
    \ re = 1;\n    for(var i = 0; i < n; i++){\n        re = (re * 2) % p;\n    }\n\
    \    return re;\n}\n", "    var ans = 1;\n    n = n % p;\n    while(n > 0){\n\
    \        if(n & 1 > 0){\n            ans = (ans * 2) % p;\n        }\n       \
    \ n = n >> 1;\n        p = (p * p) % 1000000007;\n    }\n    return ans;\n}\n",
  "    var r = 1;\n    while(n>0){\n        if(n%2 != 0){\n            r = (r*2)%p;\n\
    \        }\n        n = n/2;\n        p = (p*p)%mod;\n    }\n    return r;\n}\n",
  "\tif(n==0) return 1;\n\tif(n==1) return 2;\n\tvar result = modp(Math.floor(n/2),\
    \ p);\n\tresult = (result*result)%p;\n\tif(n%2==1) result = (result*2)%p;\n\t\
    return result;\n}\n", "  var r = 1;\n  for(var i = 0; i < n; i++){\n    r = (r\
    \ * 2) % p;\n  }\n  return r;\n}\n", "\tvar result = 1;\n\tfor(var i = 0; i <\
    \ n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\treturn result;\n}\n", "   \
    \ if(p == 1) return 0;\n    if(n == 0) return 1;\n    if(n == 1) return 2;\n \
    \   if(n == 2) return 4;\n    if(n == 3) return 8;\n    var x;\n    if(n % 2 ==\
    \ 0){\n        x = modp(n/2, p);\n        x = (x*x) % p;\n    }\n    else {\n\
    \        x = modp(n-1, p);\n        x = (x*2) % p;\n    }\n    return x;\n}\n",
  "\tvar res = 1;\n\twhile(n > 0){\n\t\tif(n & 1) res = (res * 2) % p;\n\t\tn >>=\
    \ 1;\n\t}\n\treturn res;\n}\n", "  if(p===0)\n    return NaN;\n  if(n===0)\n \
    \   return 0;\n  let res = 1;\n  while(n>0){\n    if(n%2 === 1)\n      res = (res*2)%p;\n\
    \    n = Math.floor(n/2);\n  }\n  return res;\n}\n", "\tvar m = 1;\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tm = (m * 2) % p;\n\t}\n\treturn m;\n}\n", "\tvar pwrs\
    \ = Math.pow(2, n);\n\treturn pwrs % p;\n}\n", "    return ((1 << n) + p - 1)\
    \ % p;\n}\n", "\tvar a = 1;\n\tfor(var i = 0; i < n; i++){\n\t\ta = (a * 2) %\
    \ p;\n\t}\n\treturn a;\n}\n\n", "    n= n%p;\n    var result = 1;\n    var x =\
    \ 2;\n    while(n>0){\n        var lastbit = n%2;\n        n = n/2;\n        if(lastbit\
    \ == 1){\n            result = (result*x)%p;\n        }\n        x = (x*x)%p;\n\
    \    }\n    return result;\n}\n", "\tif(n === 0) return 0;\n\tif(n === 1) return\
    \ 1;\n\tif(n % 2 === 0){\n\t\treturn (modp(n/2, p) * modp(n/2, p)) % p;\n\t}\n\
    \telse {\n\t\treturn (2 * modp(n-1, p)) % p;\n\t}\n}\n", "\tif(n == 0)\n\t\treturn\
    \ 1;\n\telse if(n == 1)\n\t\treturn 2 % p;\n\telse if(n % 2 == 0){\n\t\tvar c\
    \ = modp(n/2, p);\n\t\treturn (c*c) % p;\n\t}else{\n\t\treturn (2 * modp(n-1,\
    \ p)) % p;\n\t}\n}\n", "  var res = 1;\n  for(var i = 0; i < n; i++){\n    res\
    \ = (res * 2) % p;\n  }\n  return res;\n}\n", "\tif(n === 0)\n\t\treturn 1;\n\t\
    if(n % 2 == 0)\n\t\treturn Math.pow(modp(n/2, p), 2) % p;\n\treturn (modp(n-1,\
    \ p) * 2) % p;\n}\n", "  var result = 1;\n  for(var i = 0; i < n; i++){\n    result\
    \ = (result * 2) % p;\n  }\n  return result;\n}\n", "\tvar k = 1;\n\tfor(var i\
    \ = 0; i < n; i++){\n\t\tk = (k * 2) % p;\n\t}\n\treturn k;\n}\n", "    if(n===0)\n\
    \        return 1;\n    if(n%2===0)\n        return modp(n/2, p) ** 2 % p;\n \
    \   return modp(n-1, p) * 2 % p;\n}\n", "  var mod=1;\n  while(n>0){\n    if(n%2===1){\n\
    \      mod=(mod*2)%p;\n    }\n    n=Math.floor(n/2);\n    if(n>0){\n      mod=(mod*mod)%p;\n\
    \    }\n  }\n  return mod;\n}\n", "\tvar ans = 1;\n\tn %= p-1;\n\twhile(n){\n\t\
    \tif(n & 1)\n\t\t\tans = (ans * 2) % p;\n\t\tn >>= 1;\n\t}\n\treturn ans;\n}\n",
  "  if(n == 0) return 1;\n  var x = modp(n/2, p);\n  if(n % 2 == 0) return (x % p\
    \ * x % p) % p;\n  else return (x % p * x % p * 2) % p;\n}\n", "\tvar res = 1;\n\
    \tvar a = 2;\n\tfor(var i = n; i > 0; i >>= 1){\n\t\tif(i & 1)\n\t\t\tres = mulmod(res,\
    \ a, p);\n\t\ta = mulmod(a, a, p);\n\t}\n\treturn res;\n}\n", "\tvar result =\
    \ 1;\n\tfor(var i = 0; i < n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\treturn\
    \ result;\n}\n", "\tvar i, s = 1;\n\tfor(i = 0; i < n; i++) s = s * 2 % p;\n\t\
    return s;\n}\n", "\tif(n<0) return p - modp(-n, p);\n\tif(n==0) return 1;\n\t\
    if(n==1) return n;\n\tvar m = modp(n/2, p);\n\tif(n%2==0) return (m*m)%p;\n\t\
    return (m*m*n)%p;\n}\n", "  if(n == 0) return 1;\n  var u = modp(Math.floor(n/2),\
    \ p);\n  u = mod_mult(u, u, p);\n  if(n % 2 == 1) u = mod_mult(u, 2, p);\n  return\
    \ u;\n}\n", "  if(n < 0){\n    return (modp(n + p, p));\n  }\n  else if(n < p){\n\
    \    return (n);\n  }\n  else{\n    return (modp(n - p, p));\n  }\n}\n", "   \
    \ var s = 1;\n    var t = 2;\n    var r = 0;\n    var i = 0;\n    for (i = 1;\
    \ i <= n; i++) {\n        r = (s*t) % p;\n        s = r;\n    }\n    return s;\n\
    }\n", "    if(n==0) return 1;\n    if(n==1) return 2;\n    var a=modp(n>>1, p);\n\
    \    a=(a*a)%p;\n    if(n%2!=0) a=(a*2)%p;\n    return a;\n}\n", "    var m =\
    \ 1;\n    for(var i = 0; i < n; i++){\n        m = (m * 2) % p;\n    }\n    return\
    \ m;\n}\n", "\treturn modp_p(n, p, 1);\n}", "    var r = 1;\n    for(var i = 0;\
    \ i < n; i++){\n        r = (r * 2) % p;\n    }\n    return r;\n}\n", "    var\
    \ result = 1;\n    for(var i = 0; i < n; i++){\n        result = (result * 2)\
    \ % p;\n    }\n    return result;\n}\n", "    return gmp.div(gmp.pow(2, n), p).r\n\
    }\n", "  var result = 1;\n  var m = n;\n  while (m > 0){\n    if ((m % 2) ===\
    \ 1){\n      result = (result * n) % p;\n    }\n    n = (n * n) % p;\n    m =\
    \ Math.floor(m / 2);\n  }\n  return result;\n}\n", "\tif(n == 0) return 1;\n\t\
    if(n == 1) return 2;\n\telse return (modp(n-1, p)*2)%p;\n}\n", "\tif(n===0) return\
    \ 0;\n\tif(n===1) return 1;\n\tif(n%2===0){\n\t\treturn modp(n/2, p)*modp(n/2,\
    \ p)%p;\n\t}else{\n\t\treturn modp(n/2, p)*modp(n/2, p)*2%p;\n\t}\n}\n", "   \
    \ \"use strict\";\n    if (n === 0){\n        return 1;\n    }\n    if (n % 2\
    \ === 0){\n        return (modp(n / 2, p) ** 2) % p;\n    }\n    return ((2 *\
    \ modp(n - 1, p)) % p);\n}\n", "\treturn expmod(2, n, p);\n}\n", "  if(n==0) return\
    \ 1%p;\n  var temp = modp(n>>1, p);\n  temp = (temp*temp)%p;\n  if(n%2) temp =\
    \ (temp*2)%p;\n  return temp;\n}", "\treturn Math.pow(2, n) % p;\n}\n", "    let\
    \ res = 1n;\n    for(let i = 0; i < n; i++){\n        res = (res * 2n) % p;\n\
    \    }\n    return res;\n}\n", "\tvar res = 1;\n\twhile(n > 0){\n\t\tif(n & 1){\n\
    \t\t\tres = (res * 2) % p;\n\t\t}\n\t\tn >>= 1;\n\t\t2 = (2 * 2) % p;\n\t}\n\t\
    return res;\n}\n", "    var result = 1;\n    while(n){\n        if(n & 1) result\
    \ = (result * n) % p;\n        n = n >> 1;\n        n = (n * n) % p;\n    }\n\
    \    return result;\n}\n", "\tvar i = 0;\n\tvar r = 1;\n\twhile( i < n ){\n\t\t\
    r = r * 2 % p;\n\t\ti++;\n\t}\n\treturn r;\n}\n", "\tvar x = 1, i;\n\tfor(i =\
    \ 0; i < n; i++)\n\t\tx = (x * 2) % p;\n\treturn x;\n}\n", "    if(n == 0)\n \
    \       return 1;\n    else if(n == 1)\n        return 2;\n    var res = 1;\n\
    \    var exp = 2;\n    while(n > 0){\n        if(n%2 == 1){\n            res =\
    \ (res*exp)%p;\n        }\n        exp = (exp*exp)%p;\n        n = n >> 1;\n \
    \   }\n    return res;\n}\n", "  var i, ret = 1;\n  for(i = 0; i < n; i++)\n \
    \   ret = (ret * 2) % p;\n  return ret;\n}\n", "    if(n == 0) return 1;\n   \
    \ if(n == 1) return 2;\n    //TODO: Check that this is correct.\n    var pow =\
    \ Math.pow(2, n - 1);\n    var out = modp(n - 1, p);\n    out = (out * out) %\
    \ p;\n    return out;\n}\n", "\tif(isNaN(n)){\n\t\treturn NaN;\n\t}\n\n\tvar result\
    \ = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\t\
    return result;\n}\n", "\tif(n==0) return 1;\n\tif(n==1) return 2;\n\tvar r = modp(Math.floor(n/2),\
    \ p);\n\tr = (r*r)%p;\n\tif(n%2) return (r*2)%p;\n\treturn r;\n}", "\tvar result\
    \ = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\t\
    return result;\n}\n", "  // console.log(\"modp n: \" + n + \" p: \" + p);\n  if(n\
    \ == 0){\n    return 1;\n  }\n  else if(n == 1){\n    return 2;\n  }\n  else{\n\
    \    var first = modp(Math.floor(n/2), p);\n    var second = first * first;\n\
    \    return second % p;\n  }\n}\n", "    if(n == 0) return 1;\n    else{\n   \
    \     var half = modp(Math.floor(n/2), p);\n        if(n % 2 == 0) return (half\
    \ * half) % p;\n        else return (half * half * 2) % p;\n    }\n}\n", "\treturn\
    \ BigInteger(2).pow(n).mod(p);\n}\n", "    n = n % p;\n    if (p - n < n) n =\
    \ p - n;\n    var res = 1;\n    while (n > 0){\n        if (n & 1) res = (res\
    \ * 2) % p;\n        n >>= 1;\n        res = res % p;\n    }\n    return res;\n\
    }\n", "\tvar a = bigInt(2).pow(n).mod(p);\n\treturn a;\n}\n", "    return Math.pow(2,\
    \ n) % p;\n}\n", "  let exp = [];\n  exp[0] = 1;\n  for(let i = 1; i < n; i++){\n\
    \    exp[i] = (exp[i-1]*2)%p;\n  }\n  return exp[n-1];\n}\n", "\tvar r = 1;\n\t\
    for(var i = 1; i <= n; i++){\n\t\tr = mod(r*2, p);\n\t}\n\treturn r;\n}\n", " \
    \   var result = 1;\n    var mp = n % (p-1);\n    while(mp > 0){\n        if(mp\
    \ % 2 === 1){\n            result = (result * 2) % p;\n        }\n        mp =\
    \ Math.floor(mp / 2);\n        if(mp > 0){\n            result = (result * result)\
    \ % p;\n        }\n    }\n    return result;\n}\n", "  if(n == 0)\n    return\
    \ 1;\n  var res = modp(n/2, p);\n  if(n%2 == 0)\n    return (res*res)%p;\n  else\n\
    \    return (2*res*res)%p;\n}\n", "\tvar r = 1;\n\tvar b = 2;\n\tn = n % (p-1);\n\
    \twhile(n > 0){\n\t\tif(n % 2 == 1){\n\t\t\tr = (r * b) % p;\n\t\t}\n\t\tn = Math.floor(n\
    \ / 2);\n\t\tb = (b * b) % p;\n\t}\n\treturn r;\n}\n", "  if(!isInt(n)){\n   \
    \ throw new Error('Pow(n,p) requires n to be a integer');\n  }\n  if(!isInt(p)){\n\
    \    throw new Error('Pow(n,p) requires p to be a integer');\n  }\n  if(p < 2){\n\
    \    throw new Error('Pow(n,p) requires p to be a prime');\n  }\n  var result\
    \ = 1;\n  var y = 2;\n  while(n > 0){\n    if(n%2 == 1){\n      result = (result*y)%p;\n\
    \    }\n    y = (y*y)%p;\n    n = Math.floor(n/2);\n  }\n  return result;\n}\n",
  "\tif(n == 0) return 1;\n\tvar c = modp(Math.floor(n/2), p);\n\tc = (c*c) % p;\n\
    \tif(n%2 == 1) c = (c*2) % p;\n\treturn c;\n}\n", "    var result = 1;\n    for(var\
    \ i = 1; i <= n; i++){\n        result = (result * 2) % p;\n    }\n    return\
    \ result;\n}\n", "\treturn 0;\n}\n", "\tvar result = 1;\n\tfor(var i = 0; i <\
    \ n; i++){\n\t\tresult = (result * 2) % p;\n\t}\n\treturn result;\n}\n", "  var\
    \ result = 1;\n  while(n>0){\n    if(n%2==1){\n      result = (result*2)%p;\n\
    \    }\n    n = Math.floor(n/2);\n    if(n>0){\n      result = (result*result)%p;\n\
    \    }\n  }\n  return result;\n}\n", "\tlet res = 1;\n\tlet z;\n\tfor(z=n; z>0;\
    \ z>>=1){\n\t\tif(z&1) res = (res*p)%MOD;\n\t\tp = (p*p)%MOD;\n\t}\n\treturn res;\n\
    }\n", "    if(n == 0) return 1;\n    if(n == 1) return 2;\n    if(n == 2) return\
    \ 4;\n    if(n == 3) return 8;\n    if(n == 4) return 16;\n    if(n == 5) return\
    \ 32;\n    if(n == 6) return 64;\n    if(n == 7) return 128;\n    if(n == 8) return\
    \ 256;\n    if(n == 9) return 512;\n    if(n == 10) return 1024;\n    if(n ==\
    \ 11) return 2048;\n    if(n == 12) return 4096;\n    if(n == 13) return 8192;\n\
    \    if(n == 14) return 16384;\n    if(n == 15) return 32768;\n    if(n == 16)\
    \ return 65536;\n    if(n == 17) return 131072;\n    if(n == 18) return 262144;\n\
    \    if(n == 19) return 524288;\n    if(n == 20) return 1048576;\n    if(n ==\
    \ 21) return 2097152;\n    if(n == 22) return 4194304;\n    if(n == 23) return\
    \ 8388608;\n    if(n == 24) return 16777216;\n    if(n == 25) return 33554432;\n\
    \    if(n == 26) return 67108864;\n    if(n == 27) return 134217728;\n    if(n\
    \ == 28) return 268435456;\n    if(n == 29) return 536870912;\n    if(n == 30)\
    \ return 1073741824;\n    if(n == 31) return 2147483648;\n    if(n == 32) return\
    \ 4294967296;\n    if(n == 33) return 8589934592;\n    if(n == 34) return 17179869184;\n\
    \    if(n == 35) return 34359738368;\n    if(n == 36) return 68719476736;\n  \
    \  if(n == 37) return 137438953472;\n    if(n == 38) return 274877906944;\n  \
    \  if(n == 39) return 549", "    var twoexp = [1, 2]; //Two^i mod p\n    var e\
    \ = []; //Result will be stored here\n    var l; //Length of e (number of bits\
    \ in n)\n    var i;\n    l = n.length;\n    //Find exponentiation of 2^0 to 2^(l-1)\n\
    \    for(i = 2; i <= l; i++){\n        twoexp[i] = smod(twoexp[i-1]*2, p);\n \
    \   }\n    //Fill exponentiation table\n    for(i = 0; i < l; i++){\n        e[i]\
    \ = twoexp[n[i]];\n    }\n    //Multiply all elements and mod\n    for(i = 1;\
    \ i < l; i++){\n        e[0] = smod(e[0]*e[i], p);\n    }\n    return e[0];\n\
    }\n", "\tvar value = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tvalue = (value * 2)\
    \ % p;\n\t}\n\treturn value;\n}\n", "\tvar res = 1;\n\twhile(n > 0){\n\t\tif(n\
    \ % 2 == 1){\n\t\t\tres = (res * 2) % p;\n\t\t}\n\t\tn = Math.floor(n / 2);\n\t\
    \tp = (p * p) % 1000000007;\n\t}\n\treturn res;\n}\n", "  var t = 1;\n  for(var\
    \ i = 0; i < n; i++){\n    t = (t * 2) % p;\n  }\n  return t;\n}\n", "    if(n\
    \ == 0)\n        return 1;\n    if(n == 1)\n        return 2 % p;\n    if(n %\
    \ 2 == 0){\n        var temp = modp(n/2, p);\n        return (temp * temp) % p;\n\
    \    }\n    else{\n        var temp = modp(n-1, p);\n        return (2 * temp)\
    \ % p;\n    }\n}\n", "\treturn mxmod(bitw(n), p);\n}\n", "\tvar res = 1;\n\tfor(var\
    \ i = 0; i < n; i++){\n\t\tres = (res * 2) % p;\n\t}\n\treturn res;\n}\n", " \
    \ if(n==0) return 1%p;\n  var res = 1;\n  while(n>0){\n    if(n%2==1) res = (res*2)%p;\n\
    \    n = Math.floor(n/2);\n    if(n>0) p = (p*p)%MOD;\n  }\n  return res;\n}\n",
  "\tvar p2 = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tp2 = (p2*2) % p;\n\t}\n\treturn\
    \ p2;\n}\n", "\tn = n % p;\n\tif(n<0)\n\t\tn += p;\n\treturn n;\n}\n", "  var\
    \ r = 1;\n  for(var i = 1; i <= n; i++){\n    r = (r * 2) % p;\n  }\n  return\
    \ r;\n}\n\n", "\tvar result = 1;\n\tvar power = n;\n\twhile(power>0){\n\t\tif(power%2==1){\n\
    \t\t\tresult = (result*n)%p;\n\t\t}\n\t\tn = (n*n)%p;\n\t\tpower = parseInt(power/2);\n\
    \t}\n\treturn result;\n}\n", "    if(n==0) return 1;\n    if(n==1) return 2;\n\
    \    var a = modp(n>>1, p);\n    a = (a*a)%p;\n    if(n&1) a=(a*2)%p;\n    return\
    \ a;\n}\n", "\tvar i, c = new BN(1);\n\tfor(i = 0; i < n; i++){\n\t\tc = c.mul(new\
    \ BN(2)).mod(p);\n\t}\n\treturn c;\n}\n", "    if(n >= p){\n        n = n % p;\n\
    \    }\n    var res = 1;\n    var f = 2;\n    while(n > 0){\n        if(n % 2\
    \ != 0){\n            res = (res * f) % p;\n        }\n        f = (f * f) % p;\n\
    \        n = Math.floor(n / 2);\n    }\n    return res;\n}\n", "\tif(p==1) return\
    \ 0;\n\tvar l = 1;\n\tfor(var i=0; i<n; i++) l = (l * 2) % p;\n\treturn l;\n}\n",
  "    var mask = 1;\n    var result = 1;\n    for(var i = 0; i < n; i++){\n     \
    \   result = (result * 2) % p;\n    }\n    return result;\n}\n", "    return BigInteger(2).pow(n).mod(p).valueOf();\n\
    }\n", "    var r = 1;\n    for(var i = 0; i < n; i++){\n        r = r * 2 % p;\n\
    \    }\n    return r;\n}\n", "    if(n === 0){\n        return 1;\n    }\n   \
    \ if(n === 1){\n        return 2;\n    }\n    var u = modp(n >> 1, p);\n    if(n\
    \ % 2 === 0){\n        return (u * u) % p;\n    } else {\n        return (2 *\
    \ u * u) % p;\n    }\n}\n", "    n %= p;\n    if(n < 0) n += p;\n    if(n == 0)\
    \ return p;\n    var r = Math.pow(2, n);\n    r = r % p;\n    if(r < 0) r += p;\n\
    \    return r;\n}\n", "\tif(n == 0) return 1;\n\telse if(n%2 == 0) return sqr(modp(n/2,\
    \ p)) % p;\n\telse return (modp(n-1, p) * 2) % p;\n}\n", "\tvar m = 1;\n\twhile(n\
    \ > 0){\n\t\tm = (m * 2) % p;\n\t\tn = n - 1;\n\t}\n\treturn m;\n}\n", "  var\
    \ w = 1;\n  while(n > 0){\n    if(n % 2 == 1)\n      w = (w * 2) % p;\n    n =\
    \ Math.floor(n/2);\n  }\n  return w;\n}\n", "    if(p == 1) return 0;\n    var\
    \ l = 1 << 30;\n    l = l*l*l;\n    var r = 1;\n    while(n > 0){\n        if(n\
    \ & 1) r = r*l % p;\n        l = l*l % p;\n        n = n >> 1;\n    }\n    return\
    \ r;\n}\n", "    if(n===0) return 0;\n    if(n===1) return 1;\n    if(n%2===0){\n\
    \        var r = modp(n/2, p);\n        return (r*r)%p;\n    }\n    return ((2*modp(n-1,\
    \ p))%p);\n}", "\tif(n === 0) return 0;\n\tif(n === 1) return 1;\n\tif(n%2 ===\
    \ 0){\n\t\treturn Math.pow(modp(n/2, p), 2) % p;\n\t} else {\n\t\treturn Math.pow(modp(n/2,\
    \ p), 2) * 2 % p;\n\t}\n}\n", "    \"use strict\";\n    var t = 1;\n    if (n\
    \ === 0){\n        return t;\n    } else {\n        var a = 2;\n        for (var\
    \ i = 1; i <= n; i++){\n            t = (t * a) % p;\n        }\n        return\
    \ t;\n    }\n}\n", "    if(n==0)\n        return 1;\n    else if(n==1)\n     \
    \   return 2;\n    else{\n        var m = modp(Math.floor(n/2), p);\n        if(n%2==0)\n\
    \            return (m*m)%p;\n        else\n            return (2*m*m)%p;\n  \
    \  }\n}\n", "  var bn = n;\n  n = n%p;\n  if(n == 0){\n    return 0;\n  } else\
    \ if(n == 1){\n    return 1;\n  } else if(n >= p/2){\n    n = n-p;\n  }\n  if(bn\
    \ >= p/2){\n    return -(p - modp(p-n, p));\n  } else {\n    return modp(2*n,\
    \ p);\n  }\n}\n", "    var c = 1;\n    for(var i = 0; i < n; i++){\n        c\
    \ = (c * 2) % p;\n    }\n    return c;\n}\n", "    if(n == 0) return 1;\n    if(n%2\
    \ == 0){\n        var k = modp(n/2, p);\n        return (k*k)%p;\n    }\n    return\
    \ (modp(n-1, p)*2)%p;\n}\n", "    if(n == 0) return 1;\n    if(n == 1) return\
    \ 2;\n    var res = modp(Math.floor(n/2), p);\n    res = mul(res, res, p);\n \
    \   if(n % 2 == 1) res = mul(res, 2, p);\n    return res;\n}\n", "\tn = n%p;\n\
    \tif(n<0)n += p;\n\n\tvar ret = 1;\n\tvar two = 2;\n\twhile(n>0){\n\t\tif(n%2==1){\n\
    \t\t\tret = (ret*two)%p;\n\t\t}\n\t\ttwo = (two*two)%p;\n\t\tn = Math.floor(n/2);\n\
    \t}\n\treturn ret;\n}\n", "\tvar m = 1;\n\tvar a = 2;\n\t\n\twhile(n > 0){\n\t\
    \tif(n % 2 == 1){\n\t\t\tm = (m * a) % p;\n\t\t}\n\t\ta = (a * a) % p;\n\t\tn\
    \ = Math.floor(n / 2);\n\t}\n\t\n\treturn m;\n}\n", "    var res = 1;\n    while(n>0){\n\
    \        if(n&1){\n            res = (res*2)%p;\n        }\n        n = n >> 1;\n\
    \        if(n>0){\n            res = (res*res)%p;\n        }\n    }\n    return\
    \ res;\n}\n", "  return base(n, 2, p);\n}\n", "    //I wish to give credits for\
    \ this idea, but I can't remember where I saw it.\n    if(n==0) return 1;\n  \
    \  else{\n        x = modp(Math.floor(n/2), p);\n        x = (x*x) % p;\n    \
    \    if(n % 2 == 0) return x;\n        else return (x*2) % p;\n    }\n}\n", " \
    \   var res = 1;\n    var pw = n;\n    var cur_pw = pw;\n    for(var i = 0; i\
    \ < 30; i++){\n        if((pw & 1) == 1){\n            res = (res * cur_pw) %\
    \ p;\n        }\n        cur_pw = (cur_pw * cur_pw) % p;\n        pw >>= 1;\n\
    \    }\n    return res;\n}\n", "    if(n<0){\n        return undefined;\n    }else\
    \ if(n==0){\n        return 1;\n    }else if(n==1){\n        return 2;\n    }else{\n\
    \        var new_n = n>>1;\n        var r = modp(new_n, p);\n        r = (r*r)%p;\n\
    \        if(n%2==1){\n            r = (r*2)%p;\n        }\n        return r;\n\
    \    }\n}\n", "    let out = 1;\n    for(let i = 0; i < n; i++){\n        out\
    \ = (out * 2) % p;\n    }\n    return out;\n}\n", "\tif(n==0) return 1;\n\tif(n%2==0){\n\
    \t\tlet q = modp(n/2, p);\n\t\treturn (q*q)%p;\n\t}\n\telse{\n\t\tlet q = modp((n-1)/2,\
    \ p);\n\t\treturn (q*q*2)%p;\n\t}\n}\n", "  if(n == 0) return 1;\n  if(n%2)\n\
    \    return (modp(n-1, p)*2)%p;\n  else{\n    var s = modp(n/2, p);\n    return\
    \ (s*s)%p;\n  }\n}\n", "\tvar result = 1;\n\tfor(var i = 0; i < n; i++){\n\t\t\
    result = (result * 2) % p;\n\t}\n\treturn result;\n}\n", "    //We don't want\
    \ to deal with negative exponents, so make them positive.\n    if(n < 0){\n  \
    \      n = p - ((-n) % p);\n    }\n    if(n === 0){\n        return 1;\n    }\n\
    \    if(n === 1){\n        return 2;\n    }\n    //Now use the square-and-multiply\
    \ method for calculating modular powers.\n    var r = 1;\n    var b = 2;\n   \
    \ while(n > 0){\n        if(n % 2 !== 0){\n            r = (r * b) % p;\n    \
    \    }\n        n = n >> 1;\n        b = (b * b) % p;\n    }\n    return r;\n\
    }\n", "\tvar ret = 1n;\n\tvar two = 2n;\n\twhile(n>0){\n\t\tif(n%2n===1n){\n\t\
    \t\tret = (ret*two)%p;\n\t\t}\n\t\ttwo = (two*two)%p;\n\t\tn >>= 1n;\n\t}\n\t\
    return ret;\n}\n", "    var res = 1;\n    var N = p - 2;\n    while (N > 0){\n\
    \        if (N % 2 == 1){\n            res = (res * n) % p;\n        }\n     \
    \   N = Math.floor(N / 2);\n        n = (n * n) % p;\n    }\n    return res;\n\
    }\n", "  if(n==0)\n    return 1;\n  if(n==1)\n    return 2;\n  if(n%2 == 0){\n\
    \    return Math.pow(modp(n/2, p), 2) % p;\n  }\n  else{\n    return (modp(n-1,\
    \ p) * 2) % p;\n  }\n}\n", "    //Return: the value of 2^n modulo p.\n    if (n\
    \ == 0) return 1;\n    var half = n>>1;\n    var x = modp(half, p);\n    if (n\
    \ % 2 == 0) return (x*x) % p;\n    return (2*x*x) % p;\n}\n", "    var nbr = 1;\n\
    \    for(var i = 0; i < n; i++){\n        nbr = nbr * 2 % p;\n    }\n    return\
    \ nbr;\n}\n", "    var a = bigInt(2);\n    return bigInt(a.pow(n)).mod(p);\n}\n",
  "\tif(p < n) return 0;\n\tif(n == 0) return 1;\n\tif(n == 1) return 2;\n\tvar r\
    \ = modp(n >> 1, p);\n\tr = r * r % p;\n\tif(n & 1) r = r * 2 % p;\n\treturn r;\n\
    }\n", "    if(p==2) return 1;\n\n    var m = ((n%p)+p)%p;\n    var i;\n    for(i=n;\
    \ i>m; i--){\n        r = (r*i)%p;\n    }\n    for(i=2; i<m; i++){\n        r\
    \ = (r*i)%p;\n    }\n    return r;\n}\n\n", "    var res = BigInt(1);\n    var\
    \ two = BigInt(2);\n    var mod = BigInt(p);\n    for(var i = BigInt(n); i > BigInt(0);\
    \ i--){\n        res = (res * two) % mod;\n    }\n    return res;\n}\n", "\treturn\
    \ bigInt(2).pow(n).mod(p);\n}\n", "    return powm(2, n, p);\n}\n", "    if(p\
    \ === 0) return 0;\n    if(n === 0) return 1;\n    if(n % 2 == 0){\n        var\
    \ z = modp(n/2, p);\n        return (z*z) % p;\n    }\n    else{\n        return\
    \ (modp(n-1, p) * 2) % p;\n    }\n}\n", "    var n = n;\n    var res = 1;\n  \
    \  while(n){\n        if(n%2){\n            res *= 2;\n            res %= p;\n\
    \        }\n        n >>= 1;\n        if(n) {\n            res *= res;\n     \
    \       res %= p;\n        }\n    }\n    return res;\n}\n", "  var res = 1;\n\
    \  while(n > 0){\n    if(n % 2 == 1){\n      res = (res * 2) % p;\n    }\n   \
    \ n = Math.floor(n/2);\n    if(n > 0){\n      res = (res * res) % p;\n    }\n\
    \  }\n  return res;\n}\n", "\treturn pow(2, n, p);\n}\n", "    if(n<0){return\
    \ 0;}\n    if(n==0){return 1;}\n    var res = 1;\n    for(var i=1; i<=n; i++){\n\
    \        res = (res*2)%p;\n    }\n    return res;\n}\n", "  if(n==0)\n    return\
    \ 1;\n  else{\n    var num = modp(Math.floor(n/2), p);\n    if(n%2==0)\n     \
    \ return (num*num)%p;\n    else\n      return (2*num*num)%p;\n  }\n}\n", "  var\
    \ n2 = Math.floor(n/2);\n  var n1 = n - 2*n2;\n  var t = 1;\n  var r = 0;\n  var\
    \ i;\n  for(i = 0; i < p.length; i++){\n    var p1 = Math.floor(p[i]/2);\n   \
    \ var p0 = p[i] - 2*p1;\n    var r1 = Math.floor(r/2);\n    var r0 = r - 2*r1;\n\
    \    t = (2*t + p1*n1 + p0*n0)%p[i];\n    r = (2*r + p1*n2 + p0*n1)%p[i];\n  \
    \  t = (2*t + p0*n2)%p[i];\n  }\n  return t;\n}\n", "    if(n < p) return Math.pow(2,\
    \ n) % p;\n    else return 0;\n}\n", "\tif(p==1) return 0;\n\tif(n==0) return\
    \ 1;\n\tif(n<0) return modp(-n, p);\n\treturn (modp(n-1, p)*2)%p;\n}\n", "   \
    \ var ans = BigInt(1);\n    var two = BigInt(2);\n    while(n.toString() != \"\
    0\"){\n        if(n.and(BigInt(1)).toString() == \"1\"){\n            ans = (ans.multiply(two)).mod(p);\n\
    \        }\n        two = (two.multiply(two)).mod(p);\n        n = n.shiftRight(1);\n\
    \    }\n    return ans;\n}\n", "    var result = 1;\n    while(n>0){\n       \
    \ if(n%2==1){\n            result = (result*2)%p;\n        }\n        n = Math.floor(n/2);\n\
    \    }\n    return result;\n}\n", "\tvar m = 1;\n\tfor(var i = 0; i < n; i++){\n\
    \t\tm = (m * 2) % p;\n\t}\n\treturn m;\n}\n", "\tif(n >= p){\n\t\treturn modp(n%p,\
    \ p);\n\t}\n\tvar res = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tres = (res*2)%p;\n\
    \t}\n\treturn res;\n}\n", "\tvar n2 = (n%p*n%p)%p;\n\tvar n4 = (n2*n2)%p;\n\t\
    var n8 = (n4*n4)%p;\n\tvar n16 = (n8*n8)%p;\n\tvar n32 = (n16*n16)%p;\n\tvar n64\
    \ = (n32*n32)%p;\n\tvar n128 = (n64*n64)%p;\n\tvar n256 = (n128*n128)%p;\n\tvar\
    \ n512 = (n256*n256)%p;\n\tvar n1024 = (n512*n512)%p;\n\tvar n2048 = (n1024*n1024)%p;\n\
    \tvar n4096 = (n2048*n2048)%p;\n\tvar n8192 = (n4096*n4096)%p;\n\tvar n16384 =\
    \ (n8192*n8192)%p;\n\tvar n32768 = (n16384*n16384)%p;\n\tvar n65536 = (n32768*n32768)%p;\n\
    \tvar n131072 = (n65536*n65536)%p;\n\tvar n262144 = (n131072*n131072)%p;\n\tvar\
    \ n524288 = (n262144*n262144)%p;\n\tvar n1048576 = (n524288*n524288)%p;\n\tvar\
    \ n2097152 = (n1048576*n1048576)%p;\n\tvar n4194304 = (n2097152*n2097152)%p;\n\
    \tvar n8388608 = (n4194304*n4194304)%p;\n\tvar n16777216 = (n8388608*n8388608)%p;\n\
    \tvar n33554432 = (n16777216*n16777216)%p;\n\tvar n67108864 = (n33554432*n33554432)%p;\n\
    \tvar n134217728 = (n67108864*n6710", "    return Math.pow(2, n) % p;\n}\n", " \
    \   if(p<=n) return 0;\n    var res=1;\n    for(var i=0; i<n; i++)\n        res=(res*2)%p;\n\
    \    return res;\n}\n", "    if(p == 2)\n        return 1;\n    var ans = 1;\n\
    \    while(n > 0){\n        if(n % 2 == 1)\n            ans = (ans * 2) % p;\n\
    \        n = Math.floor(n / 2);\n    }\n    return ans;\n}\n", "\tvar ans = 1;\n\
    \tvar max = Math.sqrt(p);\n\n\twhile(n>0){\n\t\t//Use square and multiply.\n\t\
    \tif(n%2==1){\n\t\t\tans = (ans*max)%p;\n\t\t}\n\t\tmax = (max*max)%p;\n\t\tn\
    \ = n>>1;\n\t}\n\treturn ans;\n}\n", "\tvar result = 1;\n\twhile(n>0){\n\t\tresult\
    \ = (result*2)%p;\n\t\tn = n-1;\n\t}\n\treturn result;\n}\n", "\tif(n == 0) return\
    \ 1;\n\telse if(n % 2 == 0) return modp(n/2, p)^2 % p;\n\telse return modp(n -\
    \ 1, p) * 2 % p;\n}\n", "  return pow(TWO, n, p);\n}\n", "\tif(n === 0){return\
    \ 1;}\n\tif(n % 2 === 0){\n\t\treturn modp(n/2, p) ** 2 % p;\n\t}\n\treturn modp(n-1,\
    \ p) * 2 % p;\n}\n", "\tif(p==2){\n\t\treturn 1;\n\t}\n\tvar res = 1;\n\tfor(var\
    \ i=0; i<n; i++){\n\t\tres = (res*2)%p;\n\t}\n\treturn res;\n}\n", "    if(n ==\
    \ 0)\n        return 1;\n    else if(n == 1)\n        return 2;\n    else{\n \
    \       var temp = modp(n >> 1, p);\n        temp = (temp * temp) % p;\n     \
    \   if(n & 1)\n            temp = (temp * 2) % p;\n        return temp;\n    }\n\
    }\n", "\tif(n==0) return 1;\n\tif(n%2 == 0){\n\t\tvar half = modp(n/2, p);\n\t\
    \treturn mod(half*half, p);\n\t}else{\n\t\treturn mod(2*modp(n-1, p), p);\n\t\
    }\n}\n", "\tvar res = 1;\n\tfor(var i = 0; i < n; i++){\n\t\tres = (res * 2) %\
    \ p;\n\t}\n\treturn res;\n}\n", "    if(p==1) return 0;\n    var res = 1;\n  \
    \  while(n>0){\n        if(n&1){\n            res = (res*2)%p;\n        }\n  \
    \      n = n >> 1;\n        if(n>0){\n            res = (res*res)%p;\n       \
    \ }\n    }\n    return res;\n}\n", "\tif(p===1) return 0;\n\tvar res = 1;\n\t\
    for(var i=0; i<n; i++){\n\t\tres = res*2 % p;\n\t}\n\treturn res;\n}\n", "\tif(n\
    \ < 0){\n\t\treturn (modp(-n, p) * (p - 1) * inverse(2, p)) % p;\n\t}\n\tvar result\
    \ = 1;\n\twhile(n > 0){\n\t\tif(n % 2 == 1){\n\t\t\tresult = (result * 2) % p;\n\
    \t\t}\n\t\tn = Math.floor(n / 2);\n\t}\n\treturn result;\n}\n", "    if(n < 0)\n\
    \        return p - modp(-n, p);\n    if(n === 0)\n        return 1;\n    if(n\
    \ === 1)\n        return 2;\n    return (modp(n - 1, p) * 2) % p;\n}\n", "   \
    \ //Assert that p is prime.\n    if(isPrime(p) !== true){\n        console.log('modp:\
    \ ERROR! p is not prime!');\n        return false;\n    }\n    //Assert that p\
    \ > 2 and that n >= 0.\n    if(p <= 2 || n < 0){\n        console.log('modp: ERROR!\
    \ p must be > 2 and n must be >= 0!');\n        return false;\n    }\n    //If\
    \ p = 2, return 1 if n is even, else return 0.\n    if(p === 2){\n        if(n\
    \ % 2 === 0){\n            return 1;\n        }\n        else{\n            return\
    \ 0;\n        }\n    }\n    var result = 1;\n    for(var i = 0; i < n; i++){\n\
    \        result = result * 2;\n        result = result % p;\n    }\n    return\
    \ result;\n}\n", "    var rem=1;\n    for(var i=1; i<=n; i++){\n        rem=(rem*2)%p;\n\
    \    }\n    return rem;\n}\n", "\tvar a = 1;\n\tvar r = 1;\n\tfor(var i = 0; i\
    \ < n; i++){\n\t\tr = r * 2;\n\t\tif(r >= p){\n\t\t\tr = r - p;\n\t\t}\n\t}\n\t\
    return r;\n}\n", "\tif(n < 0){\n\t\treturn 0;\n\t}\n\telse if(n == 0){\n\t\treturn\
    \ 1;\n\t}\n\telse if(n == 1){\n\t\treturn 2;\n\t}\n\telse{\n\t\tvar b = modp(n\
    \ >> 1, p);\n\t\tb *= b;\n\t\tb %= p;\n\t\tb *= (n & 1) ? 2 : 1;\n\t\tb %= p;\n\
    \t\treturn b;\n\t}\n}\n", "    var ret = 1;\n    for(var i = 0; i < n; i++){\n\
    \        ret = (ret * 2) % p;\n    }\n    return ret;\n}\n", "\tif(n==0) return\
    \ 1;\n\tif(n==1) return 2;\n\tvar q = n>>1;\n\tvar r = n-(q<<1);\n\tvar b = modp(q,\
    \ p);\n\tb = (b*b)%p;\n\tif(r) b = (b*2)%p;\n\treturn b;\n}\n", "\tvar s = 1;\n\
    \tfor(var i = 0; i < n; i++){\n\t\ts = s * 2 % p;\n\t}\n\treturn s;\n}\n", " \
    \   var r = 1;\n    var n_bin = n.toString(2);\n    for(var i = 0; i < n_bin.length;\
    \ i++){\n        r = (r*r) % p;\n        if(n_bin[i] == \"1\")\n            r\
    \ = (r*2) % p;\n    }\n    return r;\n}\n", "\tif(n < 0){\n\t\treturn -1;\n\t\
    }\n\tif(n == 0){\n\t\treturn 1;\n\t}\n\tif(n%2 == 0){\n\t\tm = modp(n/2, p);\n\
    \t\treturn (m*m)%p;\n\t}\n\treturn (2*modp(n-1, p))%p;\n}\n", "    var a=1;\n\
    \    var b=2;\n    var c;\n    if(n == 0){\n        return 1;\n    }\n    if(n\
    \ == 1){\n        return 2;\n    }\n    for(var i=1; i<n; i++){\n        c = (a\
    \ * b) % p;\n        a = c;\n        b = 2;\n    }\n    return c;\n}\n", "\tif(n\
    \ == 0) return 1;\n\tvar tmp;\n\tif(n%2 == 0){\n\t\ttmp = modp(n/2, p);\n\t\t\
    return (tmp*tmp)%p;\n\t}else{\n\t\ttmp = modp(n-1, p);\n\t\treturn (2*tmp)%p;\n\
    \t}\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

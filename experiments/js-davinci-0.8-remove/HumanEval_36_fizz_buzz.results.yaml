language: js
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let sum = 0;\n\
    \    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            for(let j = 0; j < i.toString().length; j++){\n                if(i.toString()[j]\
    \ === '7'){\n                    sum += 1;\n                }\n            }\n\
    \        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            count += String(i).split('').filter(function(item){\n           \
    \     return Number(item) == 7;\n            }).length;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(var i =\
    \ 1; i <= n; i++){\n        if(i % 3 == 0 && i % 5 == 0){\n            console.log(\"\
    FizzBuzz\");\n        }\n        else if(i % 3 == 0){\n            console.log(\"\
    Fizz\");\n        }\n        else if(i % 5 == 0){\n            console.log(\"\
    Buzz\");\n        }\n        else{\n            console.log(i);\n        }\n \
    \   }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpapn01g0b.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpapn01g0b.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var total = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ var arr = i.toString().split('');\n      for(var x = 0; x < arr.length; x++){\n\
    \        if(arr[x] === '7'){\n          total++;\n        }\n      }\n    }\n\
    \  }\n  return total;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpnsgr2bb5.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnsgr2bb5.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ count += (i.toString().split('').filter(val => val === '7').length);\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpb3xmfl_1.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb3xmfl_1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    let nums = '';\n    for(let i = 1; i < n; i++){\n        if(i % 11 ===\
    \ 0 || i % 13 === 0){\n            nums += i;\n        }\n    }\n    for(let j\
    \ = 0; j < nums.length; j++){\n        if(nums[j] === '7'){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let str = \"\"\
    ;\n  for(let i = 1; i <= n; i++){\n    if(i % 3 === 0 && i % 5 === 0){\n     \
    \ str += \"FizzBuzz\"\n    }else if(i % 3 === 0){\n      str += \"Fizz\"\n   \
    \ }else if(i % 5 === 0){\n      str += \"Buzz\"\n    }else{\n      str += i\n\
    \    }\n  }\n  return str\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp_x3ihwlq.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp_x3ihwlq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(i.toString().split('').includes('7')){\n\
    \        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgfpc9cwd.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgfpc9cwd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 ===\
    \ 0){\n            count += i.toString().split('').filter(x => x === '7').length;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpj4kiceh9.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj4kiceh9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result = 0;\n\
    \  var i = 0;\n  while(i < n){\n    if(i % 11 === 0 || i % 13 === 0){\n      var\
    \ string = i.toString().split('');\n      string.forEach(function(char){\n   \
    \     if(char === '7'){\n          result++;\n        }\n      });\n    }\n  \
    \  i++;\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar c=0;\n\tfor(var\
    \ i=7;i<n;i++){\n\t\tif(i%11==0 || i%13==0)\n\t\t\tif(i.toString().match(/7/g)!=null)\n\
    \t\t\t\tc+=i.toString().match(/7/g).length;\n\t}\n\treturn c;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    if(n <= 0) return\
    \ \"No numbers to sum\";\n    let result = 0;\n    for(let i = 1; i < n; i++){\n\
    \        if(i % 11 === 0 || i % 13 === 0){\n            let x = i.toString();\n\
    \            if(x.includes(\"7\")){\n                result++;\n            }\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpu2qus62k.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu2qus62k.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let num = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if((i % 11 === 0 || i % 13 === 0) && (i.toString().indexOf('7')\
    \ !== -1)){\n      num++;\n    }\n  }\n  return num;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9o96kf_5.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9o96kf_5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var result =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().indexOf('7') > -1){\n                result++;\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpq5tb9e4h.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq5tb9e4h.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var total = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ var arr = i.toString().split('');\n      for(var j = 0; j < arr.length; j++){\n\
    \        if(parseInt(arr[j]) === 7){\n          total++;\n        }\n      }\n\
    \    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpquoz8h3a.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpquoz8h3a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = [];\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 15 === 0){\n      arr.push(\"FizzBuzz\"\
    );\n    }\n    else if(i % 3 === 0){\n      arr.push(\"Fizz\");\n    }\n    else\
    \ if(i % 5 === 0){\n      arr.push(\"Buzz\");\n    }\n    else{\n      arr.push(i);\n\
    \    }\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpohyeyxs3.js:26:10)\n    at Object.<anonymous> (/tmp/tmpohyeyxs3.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let result = [];\n\
    \  for (let i = 1; i <= n; i++) {\n    if (i % 15 === 0) {\n      result.push('FizzBuzz');\n\
    \    } else if (i % 3 === 0) {\n      result.push('Fizz');\n    } else if (i %\
    \ 5 === 0) {\n      result.push('Buzz');\n    } else {\n      result.push(String(i));\n\
    \    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '1',\n  '2',\n\
    \  'Fizz',\n  '4',\n  'Buzz',\n  'Fizz',\n  '7',\n  '8',\n  'Fizz',\n  'Buzz',\n\
    \  '11',\n  'Fizz',\n  '13',\n  '14',\n  'FizzBuzz',\n  '16',\n  '17',\n  'Fizz',\n\
    \  '19',\n  'Buzz',\n  'Fizz',\n  '22',\n  '23',\n  'Fizz',\n  'Buzz',\n  '26',\n\
    \  'Fizz',\n  '28',\n  '29',\n  'FizzBuzz',\n  '31',\n  '32',\n  'Fizz',\n  '34',\n\
    \  'Buzz',\n  'Fizz',\n  '37',\n  '38',\n  'Fizz',\n  'Buzz',\n  '41',\n  'Fizz',\n\
    \  '43',\n  '44',\n  'FizzBuzz',\n  '46',\n  '47',\n  'Fizz',\n  '49',\n  'Buzz'\n\
    ]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpyo9booxr.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyo9booxr.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '1',\
    \        '2',        'Fizz',     '4',\n    'Buzz',     'Fizz',     '7',      \
    \  '8',\n    'Fizz',     'Buzz',     '11',       'Fizz',\n    '13',       '14',\
    \       'FizzBuzz', '16',\n    '17',       'Fizz',     '19',       'Buzz',\n \
    \   'Fizz',     '22',       '23',       'Fizz',\n    'Buzz',     '26',       'Fizz',\
    \     '28',\n    '29',       'FizzBuzz', '31',       '32',\n    'Fizz',     '34',\
    \       'Buzz',     'Fizz',\n    '37',       '38',       'Fizz',     'Buzz',\n\
    \    '41',       'Fizz',     '43',       '44',\n    'FizzBuzz', '46',       '47',\
    \       'Fizz',\n    '49',       'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count=0;\n\
    \  for(var i=0;i<n;i++){\n    if(i%11==0||i%13==0){\n      var str = i.toString();\n\
    \      for(var j=0;j<str.length;j++){\n        if(str[j]==\"7\"){\n          count++;\n\
    \        }\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var nums = [];\n\
    \  var num = 0;\n  while(num < n){\n    num++;\n    if(num % 11 === 0 || num %\
    \ 13 === 0){\n      nums.push(num);\n    }\n  }\n  var numStrings = nums.join('');\n\
    \  var count = 0;\n  for(var i = 0; i < numStrings.length; i++){\n    if(numStrings[i]\
    \ === '7'){\n      count++;\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplncu_6be.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplncu_6be.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(let i =\
    \ 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n            if(i.toString().includes(\"\
    7\")){\n                console.log(i)\n            }\n        }\n    }\n}\nfizz_buzz(40)\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmphzuzjas6.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmphzuzjas6.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = [],\
    \ count = 0;\n  for(var i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 ===\
    \ 0){\n      arr.push(i.toString());\n    }\n  }\n  for(var j = 0; j < arr.length;\
    \ j++){\n    for(var k = 0; k < arr[j].length; k++){\n      if(parseInt(arr[j][k])\
    \ === 7){\n        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0 && /7/.test(i)){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp4pxpeuo3.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4pxpeuo3.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var a = [];\n\
    \    for(var i = 1; i < n; i++){\n        if(i % 7 == 0) a.push(i);\n    }\n \
    \   return a;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  14,\n\
    \  21,\n  28,\n  35,\n  42,\n  49\n]\n\nshould loosely deep-equal\n\n0\n    at\
    \ test (/tmp/tmp699g38ue.js:14:10)\n    at Object.<anonymous> (/tmp/tmp699g38ue.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n     7,\
    \ 14, 21, 28,\n    35, 42, 49\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(let i =\
    \ 1; i <= n; i++){\n        if(i % 3 === 0 && i % 5 === 0){\n            console.log('Fizz\
    \ Buzz');\n        } else if(i % 3 === 0){\n            console.log('Fizz');\n\
    \        } else if(i % 5 === 0){\n            console.log('Buzz');\n        }\
    \ else {\n            console.log(i);\n        }\n    }\n}\n\nfizz_buzz(50);\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpq6kc3m9a.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpq6kc3m9a.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    Fizz Buzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    Fizz Buzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    Fizz Buzz

    46

    47

    Fizz

    49

    Buzz

    1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    Fizz Buzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    Fizz Buzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    Fizz Buzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(i.toString().includes('7')){\n\
    \        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgo2mj3hc.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgo2mj3hc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var y = 0;\n \
    \ var x = 0;\n  for(var i = 0; i < n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n\
    \      var t = i.toString();\n      for(var j = 0; j < t.length; j++){\n     \
    \   if(t[j] == \"7\"){\n          x++;\n        }\n      }\n    }\n  }\n  return\
    \ x;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let sum = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if(i % 13 === 0){\n      let a = i.toString().split('');\n\
    \      for(let j = 0; j < a.length; j++){\n        if(a[j] === '7'){\n       \
    \   sum += 1;\n        }\n      }\n    }\n    if(i % 11 === 0){\n      let a =\
    \ i.toString().split('');\n      for(let j = 0; j < a.length; j++){\n        if(a[j]\
    \ === '7'){\n          sum += 1;\n        }\n      }\n    }\n  }\n  return sum;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp0396gg_q.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0396gg_q.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(String(i).includes('7')){\n\
    \        count++\n      }\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpxnghxaw3.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxnghxaw3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar output = [];\n\
    \tfor(var i = 1; i <= n; i++){\n\t\tif(i % (11 * 13) === 0){\n\t\t\toutput.push('Fizz\
    \ Buzz');\n\t\t}else if(i % 11 === 0){\n\t\t\toutput.push('Fizz');\n\t\t}else\
    \ if(i % 13 === 0){\n\t\t\toutput.push('Buzz');\n\t\t}else{\n\t\t\toutput.push(i);\n\
    \t\t}\n\t}\n\treturn output;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  'Fizz',\n  12,\n  'Buzz',\n\
    \  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  'Fizz',\n  23,\n  24,\n\
    \  25,\n  'Buzz',\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  'Fizz',\n  34,\n\
    \  35,\n  36,\n  37,\n  38,\n  'Buzz',\n  40,\n  41,\n  42,\n  43,\n  'Fizz',\n\
    \  45,\n  46,\n  47,\n  48,\n  49,\n  50\n]\n\nshould loosely deep-equal\n\n0\n\
    \    at test (/tmp/tmpu5b0zme9.js:23:10)\n    at Object.<anonymous> (/tmp/tmpu5b0zme9.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \      2,      3,      4,      5,      6,\n    7,      8,      9,      10,   \
    \  'Fizz', 12,\n    'Buzz', 14,     15,     16,     17,     18,\n    19,     20,\
    \     21,     'Fizz', 23,     24,\n    25,     'Buzz', 27,     28,     29,   \
    \  30,\n    31,     32,     'Fizz', 34,     35,     36,\n    37,     38,     'Buzz',\
    \ 40,     41,     42,\n    43,     'Fizz', 45,     46,     47,     48,\n    49,\
    \     50\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  // Your code here\n\
    \  let count = 0;\n  for (let i = 0; i < n; i++){\n    if (i % 11 === 0 || i %\
    \ 13 === 0) {\n      let numString = i.toString();\n      for (let j = 0; j <\
    \ numString.length; j++){\n        if (numString[j] === '7'){\n          count++;\n\
    \        }\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  return n.filter(e\
    \ => e % 11 === 0 || e % 13 === 0).filter(e => e.toString().includes('7')).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7dl8tzw8.js:3\n  return n.filter(e => e % 11 === 0 || e % 13 ===\
    \ 0).filter(e => e.toString().includes('7')).length;\n           ^\n\nTypeError:\
    \ n.filter is not a function\n    at fizz_buzz (/tmp/tmp7dl8tzw8.js:3:12)\n  \
    \  at test (/tmp/tmp7dl8tzw8.js:11:20)\n    at Object.<anonymous> (/tmp/tmp7dl8tzw8.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let answer =\
    \ [];\n    for(let i = 1; i <= n; i++){\n      if(i % 15 === 0){\n        answer.push(\"\
    FizzBuzz\");\n      } else if(i % 3 === 0){\n        answer.push(\"Fizz\");\n\
    \      } else if(i % 5 === 0){\n        answer.push(\"Buzz\");\n      } else {\n\
    \        answer.push(i);\n      }\n    }\n    return answer;\n  }\n  console.log(fizz_buzz(32));\n\
    \  console.log(fizz_buzz(100));\n  console.log(fizz_buzz(50));\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmph7_832pe.js:25:10)\n    at Object.<anonymous> (/tmp/tmph7_832pe.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: "[\n  1,      2,          'Fizz',     4,\n  'Buzz', 'Fizz',     7,     \
    \     8,\n  'Fizz', 'Buzz',     11,         'Fizz',\n  13,     14,         'FizzBuzz',\
    \ 16,\n  17,     'Fizz',     19,         'Buzz',\n  'Fizz', 22,         23,  \
    \       'Fizz',\n  'Buzz', 26,         'Fizz',     28,\n  29,     'FizzBuzz',\
    \ 31,         32\n]\n[\n  1,      2,      'Fizz',     4,      'Buzz', 'Fizz',\n\
    \  7,      8,      'Fizz',     'Buzz', 11,     'Fizz',\n  13,     14,     'FizzBuzz',\
    \ 16,     17,     'Fizz',\n  19,     'Buzz', 'Fizz',     22,     23,     'Fizz',\n\
    \  'Buzz', 26,     'Fizz',     28,     29,     'FizzBuzz',\n  31,     32,    \
    \ 'Fizz',     34,     'Buzz', 'Fizz',\n  37,     38,     'Fizz',     'Buzz', 41,\
    \     'Fizz',\n  43,     44,     'FizzBuzz', 46,     47,     'Fizz',\n  49,  \
    \   'Buzz', 'Fizz',     52,     53,     'Fizz',\n  'Buzz', 56,     'Fizz',   \
    \  58,     59,     'FizzBuzz',\n  61,     62,     'Fizz',     64,     'Buzz',\
    \ 'Fizz',\n  67,     68,     'Fizz',     'Buzz', 71,     'Fizz',\n  73,     74,\
    \     'FizzBuzz', 76,     77,     'Fizz',\n  79,     'Buzz', 'Fizz',     82, \
    \    83,     'Fizz',\n  'Buzz', 86,     'Fizz',     88,     89,     'FizzBuzz',\n\
    \  91,     92,     'Fizz',     94,     'Buzz', 'Fizz',\n  97,     98,     'Fizz',\
    \     'Buzz'\n]\n[\n  1,          2,          'Fizz',     4,\n  'Buzz',     'Fizz',\
    \     7,          8,\n  'Fizz',     'Buzz',     11,         'Fizz',\n  13,   \
    \      14,         'FizzBuzz', 16,\n  17,         'Fizz',     19,         'Buzz',\n\
    \  'Fizz',     22,         23,         'Fizz',\n  'Buzz',     26,         'Fizz',\
    \     28,\n  29,         'FizzBuzz', 31,         32,\n  'Fizz',     34,      \
    \   'Buzz',     'Fizz',\n  37,         38,         'Fizz',     'Buzz',\n  41,\
    \         'Fizz',     43,         44,\n  'FizzBuzz', 46,         47,         'Fizz',\n\
    \  49,         'Buzz'\n]\n"
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var counter\
    \ = 0;\n    for(var i = 1; i <= n; i++){\n        if(i % 11 == 0 || i % 13 ==\
    \ 0){\n            var nums = i.toString().split('');\n            for(var j =\
    \ 0; j < nums.length; j++){\n                if(nums[j] == 7){\n             \
    \       counter++;\n                }\n            }\n        }\n    }\n    return\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpaotnjya7.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaotnjya7.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    return Array.from({length:\
    \ n-1}, (_, i) => i + 1).filter(i => i % 11 === 0 || i % 13 === 0).reduce((a,b)\
    \ => a + b.toString().split('').filter(s => s == 7).length, 0)\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = []\n\
    \  for(var i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      arr.push(i)\n\
    \    }\n  }\n  var count = 0\n  for(var i = 0; i < arr.length; i++){\n    var\
    \ numArr = arr[i].toString().split('')\n    for(var j = 0; j < numArr.length;\
    \ j++){\n      if(numArr[j] === '7'){\n        count++\n      }\n    }\n  }\n\
    \  return count\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var result =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().includes(\"7\")){\n                result++;\n  \
    \          }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpy0l8er7_.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy0l8er7_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    return n - Math.floor(n\
    \ / 11) - Math.floor(n / 13) + Math.floor(n / (11 * 13));\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n43\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpla9csnt4.js:11:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpla9csnt4.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 43,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count=0;\n\
    \    for(var i=1;i<n;i++){\n        if(i%11==0 || i%13==0){\n            let a=i.toString();\n\
    \            for(var j=0;j<a.length;j++){\n                if(a[j]==7){\n    \
    \                count++;\n                }\n            }\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let nArr = []\n\
    \  let count = 0\n  for(let i = 0; i <= n; i++){\n    nArr.push(i)\n  }\n  console.log(nArr)\n\
    \  for(let i = 0; i < nArr.length; i++){\n    if(nArr[i] % 11 === 0 || nArr[i]\
    \ % 13 === 0){\n      if(nArr[i].toString().includes(\"7\")){\n        count++\n\
    \      }\n    }\n  }\n  return count\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpm75ao0_v.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm75ao0_v.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: "[\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10,\n  11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21,\n  22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n  33,\
    \ 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\n  44, 45, 46, 47, 48, 49, 50\n]\n[\n\
    \   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,\n  12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23,\n  24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,\n\
    \  36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\n  48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59,\n  60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,\n\
    \  72, 73, 74, 75, 76, 77, 78\n]\n[\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9,\
    \ 10, 11,\n  12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,\n  24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35,\n  36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,\
    \ 47,\n  48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n  60, 61, 62, 63, 64,\
    \ 65, 66, 67, 68, 69, 70, 71,\n  72, 73, 74, 75, 76, 77, 78, 79\n]\n"
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            var num = i.toString();\n            for(var j = 0; j < num.length;\
    \ j++){\n                if(num[j] == 7){\n                    count++;\n    \
    \            }\n            }\n        }\n    }\n    return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  //your code here\n\
    \  return n < 7 ? 0 : fizz_buzz(n - 1) + (n % 11 === 0 || n % 13 === 0 ? String(n).split('').reduce((acc,\
    \ cur) => cur === '7' ? acc + 1 : acc, 0) : 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp6afeotup.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6afeotup.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ var num = i.toString().split('');\n      for(var j = 0; j < num.length; j++){\n\
    \        if(num[j] === '7'){\n          count++;\n        }\n      }\n    }\n\
    \  }\n  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpm_byg3r6.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpm_byg3r6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = [];\n\
    \  for(let i = 1; i <= n; i++){\n      if(i % 11 === 0 && i % 13 === 0) arr.push('fizzbuzz');\n\
    \      else if(i % 11 === 0) arr.push('fizz');\n      else if(i % 13 === 0) arr.push('buzz');\n\
    \      else arr.push(i);\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  'fizz',\n  12,\n  'buzz',\n\
    \  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  'fizz',\n  23,\n  24,\n\
    \  25,\n  'buzz',\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  'fizz',\n  34,\n\
    \  35,\n  36,\n  37,\n  38,\n  'buzz',\n  40,\n  41,\n  42,\n  43,\n  'fizz',\n\
    \  45,\n  46,\n  47,\n  48,\n  49,\n  50\n]\n\nshould loosely deep-equal\n\n0\n\
    \    at test (/tmp/tmpgmu6h36s.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgmu6h36s.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \      2,      3,      4,      5,      6,\n    7,      8,      9,      10,   \
    \  'fizz', 12,\n    'buzz', 14,     15,     16,     17,     18,\n    19,     20,\
    \     21,     'fizz', 23,     24,\n    25,     'buzz', 27,     28,     29,   \
    \  30,\n    31,     32,     'fizz', 34,     35,     36,\n    37,     38,     'buzz',\
    \ 40,     41,     42,\n    43,     'fizz', 45,     46,     47,     48,\n    49,\
    \     50\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i <= n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().includes('7')){\n                count += 1;\n  \
    \          }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2xwf_n5x.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2xwf_n5x.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822324
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let result =\
    \ 0;\n    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            result += 1;\n        }\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpy57e1a9q.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy57e1a9q.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var str = '';\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 3 === 0){\n      str += 'Fizz';\n\
    \    }\n    if(i % 5 === 0){\n      str += 'Buzz';\n    }\n    if(str === ''){\n\
    \      str += i;\n    }\n    str += '\\n';\n  }\n  return str;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1\\n' +\n  '\\\
    n' +\n  'Fizz\\n' +\n  '\\n' +\n  'Buzz\\n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\\
    n' +\n  'Fizz\\n' +\n  'Buzz\\n' +\n  '\\n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\\
    n' +\n  'FizzBuzz\\n' +\n  '\\n' +\n  '\\n' +\n  'Fizz\\n' +\n  '\\n' +\n  'Buzz\\\
    n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\n' +\n  'Fizz\\n' +\n  'Buzz\\n' +\n  '\\\
    n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\n' +\n  'FizzBuzz\\n' +\n  '\\n' +\n  '\\\
    n' +\n  'Fizz\\n' +\n  '\\n' +\n  'Buzz\\n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\\
    n' +\n  'Fizz\\n' +\n  'Buzz\\n' +\n  '\\n' +\n  'Fizz\\n' +\n  '\\n' +\n  '\\\
    n' +\n  'FizzBuzz\\n' +\n  '\\n' +\n...\n\nshould loosely deep-equal\n\n0\n  \
    \  at test (/tmp/tmpn3oth8nm.js:24:10)\n    at Object.<anonymous> (/tmp/tmpn3oth8nm.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1\\n' +\n\
    \    '\\n' +\n    'Fizz\\n' +\n    '\\n' +\n    'Buzz\\n' +\n    'Fizz\\n' +\n\
    \    '\\n' +\n    '\\n' +\n    'Fizz\\n' +\n    'Buzz\\n' +\n    '\\n' +\n   \
    \ 'Fizz\\n' +\n    '\\n' +\n    '\\n' +\n    'FizzBuzz\\n' +\n    '\\n' +\n  \
    \  '\\n' +\n    'Fizz\\n' +\n    '\\n' +\n    'Buzz\\n' +\n    'Fizz\\n' +\n \
    \   '\\n' +\n    '\\n' +\n    'Fizz\\n' +\n    'Buzz\\n' +\n    '\\n' +\n    'Fizz\\\
    n' +\n    '\\n' +\n    '\\n' +\n    'FizzBuzz\\n' +\n    '\\n' +\n    '\\n' +\n\
    \    'Fizz\\n' +\n    '\\n' +\n    'Buzz\\n' +\n    'Fizz\\n' +\n    '\\n' +\n\
    \    '\\n' +\n    'Fizz\\n' +\n    'Buzz\\n' +\n    '\\n' +\n    'Fizz\\n' +\n\
    \    '\\n' +\n    '\\n' +\n    'FizzBuzz\\n' +\n    '\\n' +\n    '\\n' +\n   \
    \ 'Fizz\\n' +\n    '\\n' +\n    'Buzz\\n',\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 === 0 && i % 13 === 0 && i.toString().includes('7')){\n\
    \      count++;\n    }\n  }\n  return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp5c23_1tw.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5c23_1tw.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 11; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ for(var j = 0; j < i.toString().length; j++){\n        if(i.toString()[j] ===\
    \ '7'){\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ var numStr = i.toString();\n      for(var j = 0; j < numStr.length; j++){\n\
    \        if(numStr[j] === '7'){\n          count++;\n        }\n      }\n    }\n\
    \  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpu9hbi9qw.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu9hbi9qw.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n%11===0 &&\
    \ n%13===0) return 'fizz buzz';\n  if(n%11===0) return 'fizz';\n  if(n%13===0)\
    \ return 'buzz';\n  return n;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp_uswsmol.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_uswsmol.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(String(i).indexOf(\"\
    7\") > -1){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp9stqgzyd.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9stqgzyd.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let arr = []\n\
    \    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            arr.push(i)\n        }\n    }\n    let count = 0\n    arr.forEach(val\
    \ => {\n        val.toString().split('').forEach(char => {\n            if(char\
    \ === '7'){\n                count++\n            }\n        })\n    })\n    return\
    \ count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\nvar counter = 0;\n\
    \  for(var i = 7; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      counter\
    \ += 1;\n    }\n  }\n  return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpb_rguame.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb_rguame.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if (n%11==0 ||\
    \ n%13==0){\n   if (n.toString().includes('7')){\n    return 1;\n   }\n   else{\n\
    \    return 0;\n   }\n  }\n  else{\n    return fizz_buzz(n-1);\n  }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl6q2v2il.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl6q2v2il.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var total = 0;\n\
    \  var string = \"\";\n  for(var i = 0; i < n; i++){\n    if(i % 11 === 0 || i\
    \ % 13 === 0){\n      string = i.toString();\n      for(var j = 0; j < string.length;\
    \ j++){\n        if(string[j] === \"7\"){\n          total++;\n        }\n   \
    \   }\n    }\n  }\n  return total;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  // counter\n \
    \ var counter = 0;\n  // loop through numbers that are divisible by 11 or 13,\
    \ and less than n\n  for (var i = 11; i < n; i++) {\n    if (i % 11 === 0 || i\
    \ % 13 === 0) {\n      // turn each number into a string\n      var number = i.toString()\n\
    \      // loop through the number string, and if '7' is found, increment counter\
    \ by 1\n      for (var j = 0; j < number.length; j++) {\n        if (number[j]\
    \ === '7') {\n          counter += 1;\n        }\n      }\n    }\n  }\n  return\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  //your code here\n\
    \  let result = [];\n  for (let i = 1; i <= n; i++) {\n    if (i % 11 === 0 ||\
    \ i % 13 === 0) {\n      result.push(i);\n    }\n  }\n  return result.join(\"\"\
    ).match(/7/g).length;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpfyjvbrxk.js:10\n  return result.join(\"\").match(/7/g).length;\n\
    \                                    ^\n\nTypeError: Cannot read properties of\
    \ null (reading 'length')\n    at fizz_buzz (/tmp/tmpfyjvbrxk.js:10:37)\n    at\
    \ test (/tmp/tmpfyjvbrxk.js:18:20)\n    at Object.<anonymous> (/tmp/tmpfyjvbrxk.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let output = [];\n\
    \  for (let i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n   \
    \   output.push('FizzBuzz');\n    } else if (i % 3 === 0) {\n      output.push('Fizz');\n\
    \    } else if (i % 5 === 0) {\n      output.push('Buzz');\n    } else {\n   \
    \   output.push(i);\n    }\n  }\n  return output;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmp60lssjc7.js:22:10)\n    at Object.<anonymous> (/tmp/tmp60lssjc7.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let result = '';\n\
    \  for (let i = 1; i <= n; i++) {\n    if (i % 15 === 0) {\n      result += 'fizzbuzz'\n\
    \    } else if (i % 3 === 0) {\n      result += 'fizz'\n    } else if (i % 5 ===\
    \ 0) {\n      result += 'buzz'\n    } else {\n      result += i.toString()\n \
    \   }\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12fizz4buzzfizz78fizzbuzz11fizz1314fizzbuzz1617fizz19buzzfizz2223fizzbuzz26fizz2829fizzbuzz3132fizz34buzzfizz3738fizzbuzz41fizz4344fizzbuzz4647fizz49buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmphch2y3fy.js:22:10)\n  \
    \  at Object.<anonymous> (/tmp/tmphch2y3fy.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12fizz4buzzfizz78fizzbuzz11fizz1314fizzbuzz1617fizz19buzzfizz2223fizzbuzz26fizz2829fizzbuzz3132fizz34buzzfizz3738fizzbuzz41fizz4344fizzbuzz4647fizz49buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let string =\
    \ '';\n    for(let i = 1; i <= n; i++){\n      if(i % 3 === 0 && i % 5 === 0){\n\
    \        string += 'FizzBuzz\\n';\n      }\n      else if(i % 3 === 0){\n    \
    \    string += 'Fizz\\n';\n      }\n      else if(i % 5 === 0){\n        string\
    \ += 'Buzz\\n';\n      }\n      else{\n        string += `${i}\\n`;\n      }\n\
    \    }\n    return string;\n  }\n\n  //Create a function that returns the next\
    \ element in an arithmetic sequence. In an arithmetic sequence, each element is\
    \ formed by adding the same constant to the previous element.\n  function nextElement(arr)\
    \ {\n    return arr[arr.length - 1] + (arr[1] - arr[0]);\n  }\n  \n  //Write a\
    \ function that checks if a number n is divisible by two numbers x AND y. All\
    \ inputs are positive, non-zero digits.\n  function isDivisible(n, x, y) {\n \
    \   return n % x === 0 && n % y === 0;\n  }\n  \n  //Given two integers, which\
    \ can be positive and negative, find the sum of all the numbers between including\
    \ them too and return it. If both numbers are equal return a or b.\n  function\
    \ GetSum(a,b) {\n    if(a < b){\n      let sum = 0;\n      for(let i = a; i <=\
    \ b; i++){\n        sum += i;\n      }\n      return sum;\n    }\n    else if(a\
    \ > b){\n      let sum = 0;\n      for(let i = b; i <= a; i++){\n        sum +=\
    \ i;\n      }\n      return sum;\n    }\n    else{\n      return a;\n    }\n \
    \ }\n  \n  //Given an array (arr) as an argument complete the function countSmileys\
    \ that should return the total number of smiling faces.\n  function countSmileys(arr)\
    \ {\n    let count = 0;\n    arr.forEach(face => {\n      if(face.length === 2){\n\
    \        if(face[0] === ':' || face[0\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmp01cuktk5.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i <= n; i++){\n    if((i % 11 === 0 || i % 13 === 0) && i.toString().includes('7'))\
    \ count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpitcowxmq.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpitcowxmq.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = []\n\
    \  for(let i = 0; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ arr.push(i)\n    }\n  }\n  let sArr = arr.join('')\n  let reg = /7/g\n  return\
    \ sArr.match(reg).length\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp2nsv2khz.js:11\n  return sArr.match(reg).length\n             \
    \           ^\n\nTypeError: Cannot read properties of null (reading 'length')\n\
    \    at fizz_buzz (/tmp/tmp2nsv2khz.js:11:25)\n    at test (/tmp/tmp2nsv2khz.js:19:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2nsv2khz.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var arr = [];\n\
    \    for(var i = 0; i < n; i++){\n        if(i % 15 === 0){\n            arr.push(\"\
    FizzBuzz\");\n        }\n        else if(i % 5 === 0){\n            arr.push(\"\
    Buzz\");\n        }\n        else if(i % 3 === 0){\n            arr.push(\"Fizz\"\
    );\n        }\n        else{\n            arr.push(i);\n        }\n    }\n   \
    \ return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'FizzBuzz',\n\
    \  1,\n  2,\n  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n\
    \  11,\n  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n\
    \  'Buzz',\n  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n\
    \  28,\n  29,\n  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n\
    \  37,\n  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49\n]\n\nshould loosely deep-equal\n\n0\n    at test\
    \ (/tmp/tmpwaqok38m.js:26:10)\n    at Object.<anonymous> (/tmp/tmpwaqok38m.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'FizzBuzz',\
    \ 1,          2,          'Fizz',\n    4,          'Buzz',     'Fizz',     7,\n\
    \    8,          'Fizz',     'Buzz',     11,\n    'Fizz',     13,         14,\
    \         'FizzBuzz',\n    16,         17,         'Fizz',     19,\n    'Buzz',\
    \     'Fizz',     22,         23,\n    'Fizz',     'Buzz',     26,         'Fizz',\n\
    \    28,         29,         'FizzBuzz', 31,\n    32,         'Fizz',     34,\
    \         'Buzz',\n    'Fizz',     37,         38,         'Fizz',\n    'Buzz',\
    \     41,         'Fizz',     43,\n    44,         'FizzBuzz', 46,         47,\n\
    \    'Fizz',     49\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n   var count = 0;\n\
    \   var num = 11;\n   while(num < n){\n      if(num % 13 == 0){\n         count++;\n\
    \      }else if(num % 11 == 0){\n         count++;\n      }\n      num += 11;\n\
    \   }\n   return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmplpmjjryy.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplpmjjryy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let result =\
    \ \"\";\n    for(let i = 1; i <= n; i++){\n        if(i % 3 === 0 && i % 5 ===\
    \ 0){\n            result += \"FizzBuzz\";\n        }\n        else if(i % 3 ===\
    \ 0){\n            result += \"Fizz\";\n        }\n        else if(i % 5 === 0){\n\
    \            result += \"Buzz\";\n        }\n        else {\n            result\
    \ += i;\n        }\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpcws3bt6f.js:25:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpcws3bt6f.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i <= n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            var numb = \"\" + i;\n            for(var j = 0; j < numb.length;\
    \ j++){\n                if(numb[j] == \"7\"){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_tvrxanx.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_tvrxanx.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 ===\
    \ 0 && n % 13 === 0){\n    return 2;\n  } else if(n % 11 === 0 || n % 13 === 0){\n\
    \    return 1;\n  }\n  return 0;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp2ycycsg_.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ycycsg_.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var n = prompt(\"\
    Enter any number: \");\n    var fizz = 13;\n    var buzz = 11;\n    var result\
    \ = 0;\n    if (n % fizz == 0 && n % buzz == 0) {\n        result = \"fizzbuzz\"\
    ;\n    } else if (n % fizz == 0) {\n        result = \"fizz\";\n    } else if\
    \ (n % buzz == 0) {\n        result = \"buzz\";\n    } else {\n        result\
    \ = n;\n    }\n    return result;\n}\nfizz_buzz();\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_tducmic.js:3\n    var n = prompt(\"Enter any number: \");\n  \
    \          ^\n\nReferenceError: prompt is not defined\n    at fizz_buzz (/tmp/tmp_tducmic.js:3:13)\n\
    \    at Object.<anonymous> (/tmp/tmp_tducmic.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      var\
    \ num = String(i).split('');\n      for(var j = 0; j < num.length; j++){\n   \
    \     if(num[j] === '7'){\n          count++;\n        }\n      }\n    }\n  }\n\
    \  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar arr = [],\
    \ count = 0;\n\tfor(var i = 1; i < n; i++){\n\t\tif(i % 11 == 0 || i % 13 == 0){\n\
    \t\t\tarr.push(i.toString().split(''));\n\t\t}\n\t}\n\tfor(var i = 0; i < arr.length;\
    \ i++){\n\t\tfor(var j = 0; j < arr[i].length; j++){\n\t\t\tif(arr[i][j] == '7'){\n\
    \t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var array = []\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      array.push(i)\n\
    \    }\n  }\n  var str = array.join(\"\")\n  var num = 0\n  for(var j = 0; j <\
    \ str.length; j++){\n    if(str[j] === \"7\"){\n      num++\n    }\n  }\n  return\
    \ num\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var total = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      var\
    \ numString = i.toString();\n      for(var j = 0; j < numString.length; j++){\n\
    \        if(numString[j] === \"7\"){\n          total++;\n        }\n      }\n\
    \    }\n  }\n  return total;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  return n <= 0\
    \ ? 0 : [...Array(n).keys()].filter(e => e%11 === 0 || e%13 === 0).reduce((sum,\
    \ e) => sum + (e.toString().includes('7') ? 1 : 0), 0);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpu33wetqc.js:12:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu33wetqc.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var f = 0, b =\
    \ 0, fb = 0;\n  for(var i = 1; i < n; i++){\n    if(i % 11 == 0 || i % 13 == 0){\n\
    \      if(i % 11 == 0 && i % 13 == 0){\n        fb++;\n      }\n      else if(i\
    \ % 11 == 0){\n        f++;\n      }\n      else if(i % 13 == 0){\n        b++;\n\
    \      }\n    }\n  }\n  return [f, b, fb];\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  4,\n  3,\n\
    \  0\n]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpuep_mi46.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuep_mi46.js:35:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 4, 3, 0\
    \ ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result = [];\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ if(i.toString().split('').indexOf('7') >= 0){\n        result.push(i);\n   \
    \   }\n    }\n  }\n  return result.length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpvfygownz.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvfygownz.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  for(var i = 1;\
    \ i <= n; i++){\n    if(i % 11 === 0 && i % 13 === 0) console.log('fezzbuzz');\n\
    \    else if(i % 11 === 0) console.log('fezz');\n    else if(i % 13 === 0) console.log('buzz');\n\
    \    else console.log(i);\n  }\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpzqqwlv4m.js:16:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpzqqwlv4m.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    3

    4

    5

    6

    7

    8

    9

    10

    fezz

    12

    buzz

    14

    15

    16

    17

    18

    19

    20

    21

    fezz

    23

    24

    25

    buzz

    27

    28

    29

    30

    31

    32

    fezz

    34

    35

    36

    37

    38

    buzz

    40

    41

    42

    43

    fezz

    45

    46

    47

    48

    49

    50

    '
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let arr = [];\n\
    \    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            arr.push(i);\n        }\n    }\n    return arr.filter(x => x.toString().includes('7')).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzursb4cu.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzursb4cu.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let output = [];\n\
    \  for (let i = 1; i <= n; i++){\n    if (i % 15 === 0){\n      output.push('FizzBuzz');\n\
    \    }\n    else if (i % 3 === 0){\n      output.push('Fizz');\n    }\n    else\
    \ if (i % 5 === 0){\n      output.push('Buzz');\n    }\n    else {\n      output.push(i);\n\
    \    }\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpoyffycvm.js:26:10)\n    at Object.<anonymous> (/tmp/tmpoyffycvm.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let output =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        if(i % 3 === 0 && i % 5 === 0){\n\
    \            output.push('FizzBuzz');\n        }else if(i % 3 === 0){\n      \
    \      output.push('Fizz');\n        }else if(i % 5 === 0){\n            output.push('Buzz');\n\
    \        }else{\n            output.push(i);\n        }\n    }\n    return output;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpb8fa_dd1.js:23:10)\n    at Object.<anonymous> (/tmp/tmpb8fa_dd1.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var sum = 0;\n\
    \    for(i=1; i<n; i++){\n        if(i%11 == 0 || i%13 == 0){\n            sum\
    \ += 1;\n        }\n    }\n    return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpmv_3plis.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmv_3plis.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  return Math.floor(n/11)\
    \ + Math.floor(n/13) - Math.floor(n/143);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpu4ulllxj.js:10:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu4ulllxj.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result = [],\
    \ str;\n  for(var i = 1; i <= n; i++){\n    str = '';\n    if(i % 3 === 0){\n\
    \      str += 'Fizz';\n    }\n    if(i % 5 === 0){\n      str += 'Buzz';\n   \
    \ }\n    if(str === ''){\n      str = i;\n    }\n    result.push(str);\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpi0ahd8uo.js:25:10)\n    at Object.<anonymous> (/tmp/tmpi0ahd8uo.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    // Write your\
    \ code here\n    var count = 0;\n    for(var i = 1; i < n; i++){\n        if(i\
    \ % 11 == 0 || i % 13 == 0){\n            var temp = i.toString().split('');\n\
    \            for(var j = 0; j < temp.length; j++){\n                if(temp[j]\
    \ == '7'){\n                    count++;\n                }\n            }\n \
    \       }\n    }\n    return count;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 13 ===\
    \ 0 && n % 11 === 0){\n    return n;\n  }\n  if(n % 13 === 0){\n    return \"\
    fizz\";\n  }\n  if(n % 11 === 0){\n    return \"buzz\";\n  }\n  return n;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpe262gz2l.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpe262gz2l.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ i = i.toString().split('');\n      for(var j = 0; j < i.length; j++){\n    \
    \    if(i[j] === '7'){\n          count++;\n        }\n      }\n    }\n  }\n \
    \ return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp94bq7c_0.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp94bq7c_0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tlet res = 0;\n\
    \tfor(let i = 0; i < n; i++){\n\t\tif(i % 11 === 0 || i % 13 === 0){\n\t\t\tif(i.toString().includes('7')){\n\
    \t\t\t\tres++;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpqpw7zfs3.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqpw7zfs3.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let d = 0\n  for(let\
    \ i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      let n = i.toString()\n\
    \      if(n.includes(\"7\")){\n        d++\n      }\n    }\n  }\n  return d\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgi6q8gcb.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgi6q8gcb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let i = 0,\n \
    \     result = 0;\n  \n  while(i < n){\n    if(i % 11 === 0 || i % 13 === 0){\n\
    \      if(i.toString().split('').indexOf('7') !== -1){\n        result++;\n  \
    \    }\n    }\n    i++;\n  }\n  return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmph3vbr4w6.js:22:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph3vbr4w6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 1; i < n; i++){\n        if(i % 7 === 0 && (i % 11 === 0\
    \ || i % 13 === 0)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpml0h8lie.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpml0h8lie.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count=0;\n\
    \  for(var i=1;i<n;i++){\n    if(i%7===0){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpoqg5992q.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpoqg5992q.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(i.toString().includes('7')){\n\
    \        count++\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyrxxo8q2.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyrxxo8q2.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    if (n % 11 ===\
    \ 0 || n % 13 === 0) {\n        return n.toString().split('').filter(function(i)\
    \ {\n            return i === '7';\n        }).length;\n    }\n    return 0;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp24li_9vm.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp24li_9vm.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tif(n%11===0 &&\
    \ n%13===0){\n\t\treturn \"fizzbuzz\";\n\t}else if(n%11===0){\n\t\treturn \"fizz\"\
    ;\n\t}else if(n%13===0){\n\t\treturn \"buzz\";\n\t}else{\n\t\treturn n;\n\t}\n\
    };\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpz1ds3kbr.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz1ds3kbr.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\nvar arr=[];\nfor(var\
    \ i=1;i<=n;i++){\n  if(i%3==0&&i%5==0){\n    arr.push('FizzBuzz');\n  }else if(i%3==0){\n\
    \    arr.push('Fizz');\n  }else if(i%5==0){\n    arr.push('Buzz');\n  }else{\n\
    \    arr.push(i);\n  }\n}\nreturn arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpbsfjd2x_.js:23:10)\n    at Object.<anonymous> (/tmp/tmpbsfjd2x_.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var output = [];\n\
    \  for (var i = 1; i <= n; i++) {\n    if (i % 15 === 0) {\n      output.push(\"\
    FizzBuzz\");\n    } else if (i % 3 === 0) {\n      output.push(\"Fizz\");\n  \
    \  } else if (i % 5 === 0) {\n      output.push(\"Buzz\");\n    } else {\n   \
    \   output.push(i);\n    }\n  }\n  return output;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpuvv4cyhs.js:22:10)\n    at Object.<anonymous> (/tmp/tmpuvv4cyhs.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(var i =\
    \ 0; i <= n; i++){\n        if(i % 5 == 0 && i % 3 == 0){\n            console.log(\"\
    FizzBuzz\");\n        }\n        else if(i % 5 == 0){\n            console.log(\"\
    Buzz\");\n        }\n        else if(i % 3 == 0){\n            console.log(\"\
    Fizz\");\n        }\n        else{\n            console.log(i);\n        }\n \
    \   }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp6qk9bw50.js:24:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp6qk9bw50.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'FizzBuzz

    1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var result =\
    \ [];\n    for(var i = 1; i < n; i++){\n        if(i % 5 == 0 && i % 3 == 0){\n\
    \            result.push(\"FizzBuzz\");\n        }\n        else if(i % 5 == 0){\n\
    \            result.push(\"Buzz\");\n        }\n        else if(i % 3 == 0){\n\
    \            result.push(\"Fizz\");\n        }\n        else{\n            result.push(i);\n\
    \        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49\n]\n\nshould loosely deep-equal\n\n0\n    at test\
    \ (/tmp/tmpx24pjkzo.js:26:10)\n    at Object.<anonymous> (/tmp/tmpx24pjkzo.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr=[];\n\
    \  for(let i=1;i<=n;i++){\n    if(i%15===0){\n      arr.push('FizzBuzz');\n  \
    \  }else if(i%5===0){\n      arr.push('Buzz');\n    }else if(i%3===0){\n     \
    \ arr.push('Fizz');\n    }else{\n      arr.push(i);\n    }\n  }\n  return arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpago6of7s.js:23:10)\n    at Object.<anonymous> (/tmp/tmpago6of7s.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let sum = 0;\n\
    \    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            if(i.toString().includes(\"7\")){\n                sum++;\n     \
    \       }\n        }\n    }\n    return sum;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpo9mbaj_f.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpo9mbaj_f.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    //your code\
    \ here\n    let count = 0;\n    for (let i = 0; i < n; i++) {\n        if (i %\
    \ 11 === 0 && i % 13 === 0) {\n            if (i.toString().indexOf('7') > -1)\
    \ {\n                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyw7r7fn5.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyw7r7fn5.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var i, result,\
    \ a, b, c;\n    result = \"\";\n    for (i = 1; i <= n; i++) {\n        a = i\
    \ % 3 == 0;\n        b = i % 5 == 0;\n        c = i % 7 == 0;\n        if (a &&\
    \ b && c) {\n            result += \"fizz buzz bang\";\n        } else if (a &&\
    \ b) {\n            result += \"fizz buzz\";\n        } else if (a && c) {\n \
    \           result += \"fizz bang\";\n        } else if (b && c) {\n         \
    \   result += \"buzz bang\";\n        } else if (a) {\n            result += \"\
    fizz\";\n        } else if (b) {\n            result += \"buzz\";\n        } else\
    \ if (c) {\n            result += \"bang\";\n        } else {\n            result\
    \ += i;\n        }\n        if (i < n) {\n            result += \" \";\n     \
    \   }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1 2 fizz 4 buzz\
    \ fizz bang 8 fizz buzz 11 fizz 13 bang fizz buzz 16 17 fizz 19 buzz fizz bang\
    \ 22 23 fizz buzz 26 fizz bang 29 fizz buzz 31 32 fizz 34 buzz bang fizz 37 38\
    \ fizz buzz 41 fizz bang 43 44 fizz buzz 46 47 fizz bang buzz'\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmprzoh7jsc.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprzoh7jsc.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1 2 fizz\
    \ 4 buzz fizz bang 8 fizz buzz 11 fizz 13 bang fizz buzz 16 17 fizz 19 buzz fizz\
    \ bang 22 23 fizz buzz 26 fizz bang 29 fizz buzz 31 32 fizz 34 buzz bang fizz\
    \ 37 38 fizz buzz 41 fizz bang 43 44 fizz buzz 46 47 fizz bang buzz',\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0 && i.toString().includes('7'))\
    \ count++;\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmppte1ttut.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmppte1ttut.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = []\n\
    \  for(let i = 1; i <= n; i++){\n    if(i % 13 === 0 && i % 11 === 0){\n     \
    \ arr.push(\"FezzBuzz\")\n    } else if(i % 13 === 0){\n      arr.push(\"Fezz\"\
    )\n    } else if(i % 11 === 0){\n      arr.push(\"Buzz\")\n    } else {\n    \
    \  arr.push(i)\n    }\n  }\n  return arr\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  'Buzz',\n  12,\n  'Fezz',\n\
    \  14,\n  15,\n  16,\n  17,\n  18,\n  19,\n  20,\n  21,\n  'Buzz',\n  23,\n  24,\n\
    \  25,\n  'Fezz',\n  27,\n  28,\n  29,\n  30,\n  31,\n  32,\n  'Buzz',\n  34,\n\
    \  35,\n  36,\n  37,\n  38,\n  'Fezz',\n  40,\n  41,\n  42,\n  43,\n  'Buzz',\n\
    \  45,\n  46,\n  47,\n  48,\n  49,\n  50\n]\n\nshould loosely deep-equal\n\n0\n\
    \    at test (/tmp/tmpwrjamx5s.js:23:10)\n    at Object.<anonymous> (/tmp/tmpwrjamx5s.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \      2,      3,      4,      5,      6,\n    7,      8,      9,      10,   \
    \  'Buzz', 12,\n    'Fezz', 14,     15,     16,     17,     18,\n    19,     20,\
    \     21,     'Buzz', 23,     24,\n    25,     'Fezz', 27,     28,     29,   \
    \  30,\n    31,     32,     'Buzz', 34,     35,     36,\n    37,     38,     'Fezz',\
    \ 40,     41,     42,\n    43,     'Buzz', 45,     46,     47,     48,\n    49,\
    \     50\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      let\
    \ str = i.toString();\n      for(let j = 0; j < str.length; j++){\n        if(str[j]\
    \ === '7'){\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  // Write your\
    \ code here.\n  let count = 0;\n  for (let i = 0; i < n; i++) {\n    if (i % 11\
    \ === 0 || i % 13 === 0) {\n      let newI = i.toString();\n      for (let j =\
    \ 0; j < newI.length; j++) {\n        if (parseInt(newI[j]) === 7) {\n       \
    \   count++;\n        }\n      }\n    }\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var counter\
    \ = 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().includes('7')){\n                counter++;\n   \
    \         }\n        }\n    }\n    return counter;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3rc1dhlk.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3rc1dhlk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if((i % 11 === 0 || i % 13 === 0) && (i.toString().indexOf('7')\
    \ !== -1)){\n      result++;\n    }\n  }\n  return result;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpkcxa6t8a.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkcxa6t8a.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let mod11 =\
    \ n % 11;\n    let mod13 = n % 13;\n    if(mod11 == 0 || mod13 == 0){\n      \
    \  console.log(n);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpl4gvstcx.js:14:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpl4gvstcx.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count=0;\n\
    \    for(var i=1;i<n;i++){\n        if(i%11==0 || i%13==0){\n            str=i.toString();\n\
    \            for(var j=0;j<str.length;j++){\n                if(str[j]==7){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\t\tlet num = 0;\n\
    \t\tfor(i=1; i < n; i++){\n\t\t\tif(i % 7 == 0 && i % 11 == 0 && i % 13 == 0){\n\
    \t\t\t\tnum++;\n\t\t\t}\n\t\t}\n\t\treturn num;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp4vjeugv2.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4vjeugv2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count=0;\n\
    \    for(let i=1;i<n;i++){\n        if(i%11==0||i%13==0){\n            if(i.toString().indexOf('7')!=-1){\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp4uif2lk3.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4uif2lk3.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  return n === 0\
    \ ? 0 : n % 11 === 0 ? n + fizz_buzz(n - 1) : n % 13 === 0 ? n + fizz_buzz(n -\
    \ 1) : fizz_buzz(n - 1);\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n188\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp9qpfg_cz.js:10:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9qpfg_cz.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 188,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if (n === 0) return\
    \ '';\n  if (n % 15 === 0) return fizz_buzz(n - 1) + 'FizzBuzz';\n  if (n % 3\
    \ === 0) return fizz_buzz(n - 1) + 'Fizz';\n  if (n % 5 === 0) return fizz_buzz(n\
    \ - 1) + 'Buzz';\n  return fizz_buzz(n - 1) + n;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpgz9evtop.js:14:10)\n  \
    \  at Object.<anonymous> (/tmp/tmpgz9evtop.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 7; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().indexOf(\"7\") > -1){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpl3tsquna.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl3tsquna.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            if(i.toString().includes(\"7\")){\n                count++;\n   \
    \         }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp70j1vpcq.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp70j1vpcq.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let cnt = 0;\n\
    \  for(let i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      let\
    \ x = i.toString();\n      for(let j = 0; j < x.length; j++){\n        if(x[j]\
    \ === '7') cnt++;\n      }\n    }\n  }\n  return cnt;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var digits = (''+n).split('');\n\
    \  var count = 0;\n  for(var i = 0; i < digits.length; i++){\n    if(digits[i]\
    \ == 7){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpu2wwa2jw.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpu2wwa2jw.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var nums = []\n\
    \    var count = 0\n    for(var i = 0; i < n; i++){\n        if(i % 11 == 0 ||\
    \ i % 13 == 0){\n            nums.push(i)\n        }\n    }\n    for(var j = 0;\
    \ j < nums.length; j++){\n        var temp = nums[j].toString()\n        for(var\
    \ k = 0; k < temp.length; k++){\n            if(temp[k] == 7){\n             \
    \   count += 1\n            }\n        }\n    }\n    return count\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let sevens =\
    \ 0;\n    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0)\
    \ if(check7(i)) sevens++;\n    }\n    return sevens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2kaj8pdc.js:5\n        if(i % 11 === 0 || i % 13 === 0) if(check7(i))\
    \ sevens++;\n                                         ^\n\nReferenceError: check7\
    \ is not defined\n    at fizz_buzz (/tmp/tmp2kaj8pdc.js:5:42)\n    at test (/tmp/tmp2kaj8pdc.js:14:20)\n\
    \    at Object.<anonymous> (/tmp/tmp2kaj8pdc.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let result = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if(String(i).includes('7') && (i % 11 ===\
    \ 0 || i % 13 === 0)){\n      result += 1;\n    }\n  }\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgyad0_y0.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgyad0_y0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var fizz = 0;\n\
    \    var buzz = 0;\n    var fizzbuzz = 0;\n    var total = 0;\n    for(var i =\
    \ 1; i < n; i++){\n        if(i % 3 == 0 && i % 5 == 0){\n            fizzbuzz\
    \ += 1;\n        }\n        else if(i % 3 == 0){\n            fizz += 1;\n   \
    \     }\n        else if(i % 5 == 0){\n            buzz += 1;\n        }\n   \
    \ }\n    total = fizz + buzz + fizzbuzz;\n    return [fizz, buzz, fizzbuzz, total];\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  13,\n  6,\n\
    \  3,\n  22\n]\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpervftsc5.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpervftsc5.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 13, 6, 3,\
    \ 22 ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            var nStr = i.toString();\n            for(var j = 0; j < nStr.length;\
    \ j++){\n                if(nStr[j] == 7){\n                    count++;\n   \
    \             }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    return n + Math.floor(n\
    \ / 4) - Math.floor(n / 7) + Math.floor(n / 28) - Math.floor(n / 49) + Math.floor(n\
    \ / 100) - Math.floor(n / 133) + Math.floor(n / 196) - Math.floor(n / 343) + Math.floor(n\
    \ / 476) - Math.floor(n / 721)\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n55\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxcfsy6nn.js:11:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxcfsy6nn.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 55,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = []\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ if(i.toString().split('').indexOf('7') !== -1){\n        arr.push(i)\n     \
    \ }\n    }\n  }\n  return arr.length\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprzkgisof.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprzkgisof.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = [];\n\
    \  for(let i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0) arr.push(i);\n\
    \  }\n  return arr.filter(a => a.toString().split('').includes('7')).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwn_5heae.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwn_5heae.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            let nums = i.toString().split('');\n            nums.forEach(e =>\
    \ {\n                if(e === '7'){\n                    count++;\n          \
    \      }\n            })\n        }\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 0; i <= n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            var str = i.toString();\n            for(var j = 0; j < str.length;\
    \ j++){\n                if(str[j] == 7){\n                    count++;\n    \
    \            }\n            }\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpw2qrrmju.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw2qrrmju.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(let i =\
    \ 0; i < n; i++){\n        if(i % 5 === 0 && i % 3 === 0){\n            console.log(\"\
    FizzBuzz\");\n        }\n        else if(i % 5 === 0){\n            console.log(\"\
    Buzz\");\n        }\n        else if(i % 3 === 0){\n            console.log(\"\
    Fizz\");\n        }\n        else{\n            console.log(i);\n        }\n \
    \   }\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp1b_l1xr4.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1b_l1xr4.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'FizzBuzz

    1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    '
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let newarr =\
    \ [];\n    for(i=0; i<n; i++){\n      if(i%3==0 && i%5==0){\n        newarr.push(\"\
    FizzBuzz\");\n      }else if(i%3==0){\n        newarr.push(\"Fizz\");\n      }else\
    \ if(i%5==0){\n        newarr.push(\"Buzz\");\n      }else{\n        newarr.push(i);\n\
    \      }\n    }\n    return newarr;\n  }\n  function fizz_buzz_refactor(n){\n\
    \    return Array.from({length:n},(_,i)=>++i%3?i%5?i:'Buzz':i%5?'Fizz':'FizzBuzz');\n\
    \  }\n  fizz_buzz(16);\n  \n  //Create a function that will return a string that\
    \ combines all of the letters of the three inputed strings in groups. \n  //Taking\
    \ the first letter of all of the inputs and grouping them next to each other.\
    \ Do this for every letter, see example below!\n  function tripleTrouble(one,\
    \ two, three){\n  let str = \"\";\n  for(i=0; i<one.length; i++){\n  str += one[i]+two[i]+three[i];\n\
    \  }\n  return str;\n  }\n  function tripleTrouble_refactor(one, two, three){\n\
    \  return one.split(\"\").map((e,i)=>one[i]+two[i]+three[i]).join(\"\");\n  }\n\
    \  tripleTrouble(\"this\",\"test\",\"lock\");\n  \n  //Given an array of positive\
    \ or negative integers. I'm interested in finding the longest peak in the array.\n\
    \  //A peak is defined as adjacent integers in the array that are strictly increasing\
    \ until they reach a tip (the highest value in the peak), \n  //at which point\
    \ they become strictly decreasing. At least three integers are required to form\
    \ a peak.\n  function longestPeak(arr){\n  let count = 0;\n  let max = 0;\n  let\
    \ result = [];\n  if(arr.length<3){\n    return 0;\n  }\n  for(i=1; i<\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: "/tmp/tmptii3finp.js:47\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at Object.compileFunction (node:vm:360:18)\n\
    \    at wrapSafe (node:internal/modules/cjs/loader:1049:15)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1084:27)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      var\
    \ str = i.toString();\n      for(var j = 0; j < str.length; j++){\n        if(str[j]\
    \ === '7'){\n          count++;\n        }\n      }\n    }\n  }\n  return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 0; i < n; i++){\n    if((i % 11 === 0 || i % 13 === 0) && i.toString().indexOf('7')\
    \ != -1){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpx6xhm_r0.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx6xhm_r0.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    //your code\
    \ here\n    let count = 0;\n    for (let i = 0; i < n; i++){\n        if (i %\
    \ 11 === 0 || i % 13 === 0){\n            if (i.toString().indexOf('7') > -1){\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpwb34kdff.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwb34kdff.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = [];\n\
    \  for(let i = 1; i <= n; i++){\n    if(i % 5 === 0 && i % 3 === 0){\n      arr.push('FizzBuzz');\n\
    \    } else if(i % 5 === 0){\n      arr.push('Buzz');\n    } else if(i % 3 ===\
    \ 0){\n      arr.push('Fizz');\n    } else {\n      arr.push(i);\n    }\n  }\n\
    \  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpzw9llrd3.js:23:10)\n    at Object.<anonymous> (/tmp/tmpzw9llrd3.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = [...Array(n).keys()];\n\
    \  return arr.filter(e => e % 11 === 0 || e % 13 === 0).filter(e => (e + '').includes('7')).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjof0i7k7.js:13:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjof0i7k7.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar arr=[];\n\t\
    if(n===0){\n\t\treturn \"invalid\";\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(i%11===0||i%13===0){\n\
    \t\t\tif(i.toString().indexOf(\"7\")>-1){\n\t\t\t\tarr.push(i);\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn arr.length;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpx5l46zzz.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5l46zzz.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let nums = []\n\
    \    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            nums.push(i)\n        }\n    }\n    let count = 0\n    for(let j\
    \ = 0; j < nums.length; j++){\n        let digits = nums[j].toString().split('')\n\
    \        for(let k = 0; k < digits.length; k++){\n            if(digits[k] ===\
    \ '7'){\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count = 0;\n\
    \  for(var i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      var\
    \ str = i.toString();\n      for(var j = 0; j < str.length; j++){\n        if(str[j]\
    \ === '7') count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var out = [];\n\
    \    for(var i = 1; i <= n; i++){\n      if(i % 15 == 0){\n        out.push(\"\
    FizzBuzz\");\n      }\n      else if(i % 3 == 0){\n        out.push(\"Fizz\");\n\
    \      }\n      else if(i % 5 == 0){\n        out.push(\"Buzz\");\n      }\n \
    \     else{\n        out.push(i);\n      }\n    }\n    return out;\n  }\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpn33mmpi2.js:26:10)\n    at Object.<anonymous> (/tmp/tmpn33mmpi2.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let sum = 0;\n\
    \  for(let i = 0; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ let temp = i.toString();\n      let arr = temp.split('');\n      for(let i =\
    \ 0; i < arr.length; i++){\n        if(arr[i] === '7'){\n          sum++;\n  \
    \      }\n      }\n    }\n  }\n  return sum;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpv_7u14as.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv_7u14as.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let arr = [];\n\
    \    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            arr.push(i);\n        }\n    }\n    let count = 0;\n    for(let j\
    \ = 0; j < arr.length; j++){\n        let num = arr[j].toString();\n        for(let\
    \ k = 0; k < num.length; k++){\n            if(num[k] === '7'){\n            \
    \    count++;\n            }\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(i=0; i<n; i++){\n    if(i%11===0 || i%13===0){\n      if(i.toString().includes(\"\
    7\")){\n        count++;\n      }\n    }\n  }\n  return count;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpia77277f.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpia77277f.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let result =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 ===\
    \ 0){\n            let int = i.toString().split('');\n            for(let j =\
    \ 0; j < int.length; j++){\n                if(parseInt(int[j]) === 7){\n    \
    \                result++;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp4sx5ofnu.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4sx5ofnu.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var array = [];\n\
    \  for (i = 1; i <= n; i++){\n    if (i % 11 === 0 || i % 13 === 0){\n      array.push(i);\n\
    \    }\n  }\n  var counter = 0;\n  for (j = 0; j < array.length; j++){\n    if\
    \ (array[j].toString().includes(\"7\")){\n      counter++;\n    }\n  }\n  return\
    \ counter;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpxq6z2qlo.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxq6z2qlo.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  \n  var result\
    \ = [];\n  for(var i = 1; i <= n; i++){\n    if(i % 3 === 0 && i % 5 === 0){\n\
    \      result.push(\"FizzBuzz\");\n    } else if(i % 3 === 0){\n      result.push(\"\
    Fizz\");\n    } else if(i % 5 === 0){\n      result.push(\"Buzz\");\n    } else\
    \ {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmp6vr60sub.js:24:10)\n    at Object.<anonymous> (/tmp/tmp6vr60sub.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n%11===0 ||\
    \ n%13===0){\n    return 1+fizz_buzz(n-1);\n  }\n  else{\n    return fizz_buzz(n-1);\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpp7lclu6q.js:3\n  if(n%11===0 || n%13===0){\n  ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at fizz_buzz (/tmp/tmpp7lclu6q.js:3:3)\n\
    \    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n\
    \    at fizz_buzz (/tmp/tmpp7lclu6q.js:4:14)\n    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n\
    \    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n\
    \    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n\
    \    at fizz_buzz (/tmp/tmpp7lclu6q.js:7:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var total = 0;\n\
    \  for(var i = 7; i < n; i++) {\n    if(i % 11 === 0 || i % 13 === 0) {\n    \
    \  total += 1;\n    }\n  }\n  return total;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpb8w0dbj1.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb8w0dbj1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            if(i.toString().includes('7')){\n                count++;\n     \
    \       }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpsl76mg15.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsl76mg15.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tlet arr = []\n\
    \tfor(let i = 0; i < n; i++){\n\t\tif(i % 11 === 0 || i % 13 === 0){\n\t\t\tarr.push(i)\n\
    \t\t}\n\t}\n\t// console.log(arr)\n\tlet count = 0\n\tfor(let i = 0; i < arr.length;\
    \ i++){\n\t\tlet str = arr[i].toString()\n\t\tif(str.includes(\"7\")){\n\t\t\t\
    count++\n\t\t}\n\t}\n\treturn count\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpb1a5a9bd.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb1a5a9bd.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var nums = [];\n\
    \  for (var i = 1; i <= n; i++) {\n    if (i % 11 === 0 || i % 13 === 0) {\n \
    \     nums.push(i);\n    }\n  }\n  var answer = 0;\n  for (var j = 0; j < nums.length;\
    \ j++) {\n    var string = nums[j].toString();\n    for (var k = 0; k < string.length;\
    \ k++) {\n      if (string[k] === '7') {\n        answer++;\n      }\n    }\n\
    \  }\n  return answer;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvzhbanrz.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpvzhbanrz.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar output = '';\n\
    \tfor(var i = 1; i < n; i++){\n\t\tif(i % 11 === 0 || i % 13 === 0){\n\t\t\toutput\
    \ += i + ' ';\n\t\t}\n\t}\n\treturn output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'11 13 22 26 33\
    \ 39 44 '\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpmgn49ho7.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmgn49ho7.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '11 13 22\
    \ 26 33 39 44 ',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var output = [];\n\
    \  for (var i = 1; i <= n; i++) {\n    if (i % 15 === 0) {\n      output.push(\"\
    FizzBuzz\");\n    } else if (i % 3 === 0) {\n      output.push(\"Fizz\");\n  \
    \  } else if (i % 5 === 0) {\n      output.push(\"Buzz\");\n    } else {\n   \
    \   output.push(i);\n    }\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmp_gsiugvm.js:23:10)\n    at Object.<anonymous> (/tmp/tmp_gsiugvm.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 ===\
    \ 0){\n            if(i.toString().includes('7')){\n                count++;\n\
    \            }\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpwuxxsqon.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwuxxsqon.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result=[];\n\
    \  for(var i=1;i<=n;i++){\n    if(i%7==0){\n      result.push(i);\n    }\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  14,\n\
    \  21,\n  28,\n  35,\n  42,\n  49\n]\n\nshould loosely deep-equal\n\n0\n    at\
    \ test (/tmp/tmpraku9lke.js:17:10)\n    at Object.<anonymous> (/tmp/tmpraku9lke.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n     7,\
    \ 14, 21, 28,\n    35, 42, 49\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar total=0;\n\
    \tfor(var i=1;i<n;i++){\n\t\tif(i%7===0)\n\t\t\ttotal++;\n\t}\n\treturn total;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp757kpkby.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp757kpkby.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var result =\
    \ [];\n    var i;\n    for(i = 1; i <= n; i++){\n        if(i % 3 === 0 && i %\
    \ 5 === 0){\n            result.push(\"FizzBuzz\");\n        }\n        else if(i\
    \ % 3 === 0){\n            result.push(\"Fizz\");\n        }\n        else if(i\
    \ % 5 === 0){\n            result.push(\"Buzz\");\n        }\n        else{\n\
    \            result.push(i);\n        }\n    }\n    return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpolkjprf5.js:26:10)\n    at Object.<anonymous> (/tmp/tmpolkjprf5.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = []\n\
    \  for(var i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      arr.push(i)\n\
    \    }\n  }\n  var myStr = arr.join('')\n  var count = 0\n  for(var j = 0; j <\
    \ myStr.length; j++){\n    if(myStr[j] === '7'){\n      count++\n    }\n  }\n\
    \  return count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tfor(var i = 1;\
    \ i <= n; i++){\n\t\tif(i % 3 == 0 && i % 5 == 0){\n\t\t\tconsole.log(\"FizzBuzz\"\
    );\n\t\t}\n\t\telse if(i % 3 == 0){\n\t\t\tconsole.log(\"Fizz\");\n\t\t}\n\t\t\
    else if(i % 5 == 0){\n\t\t\tconsole.log(\"Buzz\");\n\t\t}\n\t\telse{\n\t\t\tconsole.log(i);\n\
    \t\t}\n\t}\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpapnb50x_.js:23:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpapnb50x_.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var obj = {};\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ obj[i] = i.toString().split('').filter(function(a){return a == 7;}).length;\n\
    \    }\n  }\n  return obj;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n{\n  '11': 0,\n\
    \  '13': 0,\n  '22': 0,\n  '26': 0,\n  '33': 0,\n  '39': 0,\n  '44': 0\n}\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpp5hqg_5v.js:17:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpp5hqg_5v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: { '11': 0,\
    \ '13': 0, '22': 0, '26': 0, '33': 0, '39': 0, '44': 0 },\n  expected: 0,\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let nums = []\n\
    \    for(let i = 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            nums.push(i)\n        }\n    }\n    let count = 0\n    for(let j\
    \ = 0; j < nums.length; j++){\n        let num = nums[j].toString()\n        for(let\
    \ k = 0; k < num.length; k++){\n            if(num[k] === '7'){\n            \
    \    count++\n            }\n        }\n    }\n    return count\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpgmhzb8jp.js:26:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgmhzb8jp.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let num = 0;\n\
    \    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            num++\n        }\n    }\n    return num;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpxahguvqa.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxahguvqa.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    //Enter your\
    \ code here!\n    // function fizzBuzz(num) {\n    //     if (num % 15 === 0)\
    \ return 'FizzBuzz';\n    //     if (num % 3 === 0) return 'Fizz';\n    //   \
    \  if (num % 5 === 0) return 'Buzz';\n    //     return num;\n    // }\n    //\
    \ var output = [];\n    // for (var i = 1; i <= n; i++) {\n    //     output.push(fizzBuzz(i));\n\
    \    // }\n    // return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpudi0e_jt.js:22:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpudi0e_jt.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var a = []\n\
    \    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n  \
    \          a.push(i)\n        }\n    }\n    var b = []\n    for(var i = 0; i <\
    \ a.length; i++){\n        b.push(a[i].toString().split(''))\n    }\n    var c\
    \ = []\n    for(var i = 0; i < b.length; i++){\n        for(var j = 0; j < b[i].length;\
    \ j++){\n            c.push(b[i][j])\n        }\n    }\n    var d = 0\n    for(var\
    \ i = 0; i < c.length; i++){\n        if(c[i] == 7){\n            d += 1\n   \
    \     }\n    }\n    return d\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let i, j, count\
    \ = 0;\n  for(i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n   \
    \   j = i;\n      while(j > 0){\n        if(j % 10 === 7){\n          count++;\n\
    \        }\n        j = Math.floor(j / 10);\n      }\n    }\n  }\n  return count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 7; i < n; i += 7){\n    if(i % 11 === 0 || i % 13 === 0){\n   \
    \   count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpf6t8qwpi.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf6t8qwpi.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar fizz = 0;\n\
    \tvar buzz = 0;\n\tvar fizz_buzz = 0;\n\tvar count = 0;\n\tvar num = 0;\n\t\n\t\
    if(n < 0){\n\t\treturn -1;\n\t}\n\t\n\tif(n == 0){\n\t\treturn 0;\n\t}\n\t\n\t\
    while(num < n){\n\t\tif(num % 11 == 0 && num % 13 == 0){\n\t\t\tif(num % 10 ==\
    \ 7){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tfizz_buzz++;\n\t\t}else if(num % 11 ==\
    \ 0){\n\t\t\tif(num % 10 == 7){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tfizz++;\n\t\t\
    }else if(num % 13 == 0){\n\t\t\tif(num % 10 == 7){\n\t\t\t\tcount++;\n\t\t\t}\n\
    \t\t\tbuzz++;\n\t\t}\n\t\tnum++;\n\t}\n\t\n\tconsole.log(\"fizz: \" + fizz);\n\
    \tconsole.log(\"buzz: \" + buzz);\n\tconsole.log(\"fizz_buzz: \" + fizz_buzz);\n\
    \t\n\treturn count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp89gcfk_w.js:49:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp89gcfk_w.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'fizz: 4

    buzz: 3

    fizz_buzz: 1

    fizz: 7

    buzz: 5

    fizz_buzz: 1

    '
  timestamp: 1659822325
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var count =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 7 == 0 && (i % 11 == 0 ||\
    \ i % 13 == 0)){\n            count++;\n        }\n    }\n    return count;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmbqgpcx4.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmbqgpcx4.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tvar result = \"\
    \";\n\tfor(var i = 1; i <= n; i++){\n\t\tif(i % 3 == 0 && i % 5 == 0){\n\t\t\t\
    result += \"FizzBuzz\";\n\t\t}else if(i % 3 == 0){\n\t\t\tresult += \"Fizz\";\n\
    \t\t}else if(i % 5 == 0){\n\t\t\tresult += \"Buzz\";\n\t\t}else{\n\t\t\tresult\
    \ += i;\n\t\t}\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp3qrso4t0.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp3qrso4t0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let count =\
    \ 0;\n    for(let i = 0; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            let array = i.toString().split('');\n            for(let j = 0; j\
    \ < array.length; j++){\n                if(array[j] === '7'){\n             \
    \       count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var arr = [];\n\
    \  for(var i = 0; i < n; i++){\n    if(i % 5 === 0 && i % 3 === 0){\n      arr.push(\"\
    FizzBuzz\");\n    } else if(i % 5 === 0){\n      arr.push(\"Buzz\");\n    } else\
    \ if(i % 3 === 0){\n      arr.push(\"Fizz\");\n    } else {\n      arr.push(i);\n\
    \    }\n  }\n  return arr;\n}\nfizz_buzz(20);\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'FizzBuzz',\n\
    \  1,\n  2,\n  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n\
    \  11,\n  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n\
    \  'Buzz',\n  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n\
    \  28,\n  29,\n  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n\
    \  37,\n  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49\n]\n\nshould loosely deep-equal\n\n0\n    at test\
    \ (/tmp/tmpepb8os8t.js:23:10)\n    at Object.<anonymous> (/tmp/tmpepb8os8t.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'FizzBuzz',\
    \ 1,          2,          'Fizz',\n    4,          'Buzz',     'Fizz',     7,\n\
    \    8,          'Fizz',     'Buzz',     11,\n    'Fizz',     13,         14,\
    \         'FizzBuzz',\n    16,         17,         'Fizz',     19,\n    'Buzz',\
    \     'Fizz',     22,         23,\n    'Fizz',     'Buzz',     26,         'Fizz',\n\
    \    28,         29,         'FizzBuzz', 31,\n    32,         'Fizz',     34,\
    \         'Buzz',\n    'Fizz',     37,         38,         'Fizz',\n    'Buzz',\
    \     41,         'Fizz',     43,\n    44,         'FizzBuzz', 46,         47,\n\
    \    'Fizz',     49\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let fizz = 'Fizz';\n\
    \  let buzz = 'Buzz';\n  let fizzbuzz = 'FizzBuzz';\n  let output = [];\n  for\
    \ (let i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n      output.push(fizzbuzz);\n\
    \    } else if (i % 3 === 0) {\n      output.push(fizz);\n    } else if (i % 5\
    \ === 0) {\n      output.push(buzz);\n    } else {\n      output.push(i);\n  \
    \  }\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpx9b_n8mz.js:26:10)\n    at Object.<anonymous> (/tmp/tmpx9b_n8mz.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  for(var i = 1;\
    \ i <= n; i++){\n    if(i % 15 == 0){\n      console.log(\"FizzBuzz\");\n    }else\
    \ if(i % 3 == 0){\n      console.log(\"Fizz\");\n    }else if(i % 5 == 0){\n \
    \     console.log(\"Buzz\");\n    }else{\n      console.log(i);\n    }\n  }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpmn_lgs67.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpmn_lgs67.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var i = 0;\n\
    \    var answer = 0;\n    while (i < n){\n        if (i % 7 == 0){\n         \
    \   answer += 1;\n        }\n        i++;\n    }\n    return answer;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0g5fj4wh.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0g5fj4wh.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    if(n % 11 ===\
    \ 0 && n % 13 === 0) return \"fizz buzz\";\n    if(n % 11 === 0) return \"fizz\"\
    ;\n    if(n % 13 === 0) return \"buzz\";\n    return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpwy110f2l.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwy110f2l.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    for(let i =\
    \ 1; i <= n; i++){\n        let output = '';\n        if(i % 3 == 0) output +=\
    \ 'Fizz';\n        if(i % 5 == 0) output += 'Buzz';\n        console.log(output\
    \ || i);\n    }\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmp1xugdh3t.js:15:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp1xugdh3t.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var arr = [];\n\
    \    for(var i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            arr.push(i);\n        }\n    }\n    return arr.join(\"\").match(/7/g).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpncaxzoa4.js:9\n    return arr.join(\"\").match(/7/g).length;\n\
    \                                   ^\n\nTypeError: Cannot read properties of\
    \ null (reading 'length')\n    at fizz_buzz (/tmp/tmpncaxzoa4.js:9:36)\n    at\
    \ test (/tmp/tmpncaxzoa4.js:17:20)\n    at Object.<anonymous> (/tmp/tmpncaxzoa4.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  //Good luck!\n\
    \  if(n%11 == 0 || n%13 == 0){\n    if(n.toString().includes('7')){\n      return\
    \ 1;\n    }\n  }\n  return 0;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpcjd7pxof.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcjd7pxof.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let total =\
    \ 0;\n    for(let i = 1; i < n; i++){\n        if(i % 11 === 0 || i % 13 === 0){\n\
    \            let string = i.toString();\n            if(string.includes(\"7\"\
    )){\n                total += 1;\n            }\n        }\n    }\n    return\
    \ total;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpub6h8571.js:21:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpub6h8571.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var output = [];\n\
    \  for (i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n      output.push(\"\
    FizzBuzz\");\n    } else if (i % 3 === 0) {\n      output.push(\"Fizz\");\n  \
    \  } else if (i % 5 === 0) {\n      output.push(\"Buzz\");\n    } else {\n   \
    \   output.push(i);\n    }\n  }\n  return output;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpz418qxuj.js:23:10)\n    at Object.<anonymous> (/tmp/tmpz418qxuj.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var s = '';\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 3 == 0 && i % 5 == 0){\n      s +=\
    \ 'fizz buzz';\n    }else if(i % 3 == 0){\n      s += 'fizz';\n    }else if(i\
    \ % 5 == 0){\n      s += 'buzz';\n    }else{\n      s += i;\n    }\n    if(i !=\
    \ n){\n      s += ',';\n    }\n  }\n  return s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1,2,fizz,4,buzz,fizz,7,8,fizz,buzz,11,fizz,13,14,fizz\
    \ buzz,16,17,fizz,19,buzz,fizz,22,23,fizz,buzz,26,fizz,28,29,fizz buzz,31,32,fizz,34,buzz,fizz,37,38,fizz,buzz,41,fizz,43,44,fizz\
    \ buzz,46,47,fizz,49,buzz'\n\nshould loosely deep-equal\n\n0\n    at test (/tmp/tmpwwakhk47.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwwakhk47.js:36:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1,2,fizz,4,buzz,fizz,7,8,fizz,buzz,11,fizz,13,14,fizz\
    \ buzz,16,17,fizz,19,buzz,fizz,22,23,fizz,buzz,26,fizz,28,29,fizz buzz,31,32,fizz,34,buzz,fizz,37,38,fizz,buzz,41,fizz,43,44,fizz\
    \ buzz,46,47,fizz,49,buzz',\n  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tfor(var i = 1;\
    \ i <= n; i++){\n\t\tif(i % 3 == 0 && i % 5 == 0){\n\t\t\tconsole.log(\"FizzBuzz\"\
    );\n\t\t}\n\t\telse if(i % 3 == 0){\n\t\t\tconsole.log(\"Fizz\");\n\t\t}\n\t\t\
    else if(i % 5 == 0){\n\t\t\tconsole.log(\"Buzz\");\n\t\t}\n\t\telse{\n\t\t\tconsole.log(i);\n\
    \t\t}\n\t}\n}\nfizz_buzz(16);\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n0\n    at test (/tmp/tmpu80274rl.js:25:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpu80274rl.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    1

    2

    Fizz

    4

    Buzz

    Fizz

    7

    8

    Fizz

    Buzz

    11

    Fizz

    13

    14

    FizzBuzz

    16

    17

    Fizz

    19

    Buzz

    Fizz

    22

    23

    Fizz

    Buzz

    26

    Fizz

    28

    29

    FizzBuzz

    31

    32

    Fizz

    34

    Buzz

    Fizz

    37

    38

    Fizz

    Buzz

    41

    Fizz

    43

    44

    FizzBuzz

    46

    47

    Fizz

    49

    Buzz

    '
  timestamp: 1659822326
- exit_code: -1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var i;\n   \
    \ var count = 0;\n    for(i = 0; i < n; i++){\n        if(i % 11 == 0 || i % 13\
    \ == 0){\n            while(i > 0){\n                var mod = i % 10;\n     \
    \           if(mod == 7){\n                    count++;\n                }\n \
    \               i = Math.floor(i / 10);\n            }\n        }\n    }\n   \
    \ return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659822331
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var output = []\n\
    \  for (var i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n   \
    \   output.push(\"FizzBuzz\");\n    } else if (i % 3 === 0) {\n      output.push(\"\
    Fizz\");\n    } else if (i % 5 === 0) {\n      output.push(\"Buzz\");\n    } else\
    \ {\n      output.push(i);\n    }\n  }\n  return output;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpi6tlmsoc.js:23:10)\n    at Object.<anonymous> (/tmp/tmpi6tlmsoc.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let result = '';\n\
    \  for (let i = 1; i <= n; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n   \
    \   result += 'FizzBuzz';\n    } else if (i % 3 === 0) {\n      result += 'Fizz';\n\
    \    } else if (i % 5 === 0) {\n      result += 'Buzz';\n    } else {\n      result\
    \ += i;\n    }\n  }\n  return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz'\n\
    \nshould loosely deep-equal\n\n0\n    at test (/tmp/tmp6fnzzppl.js:23:10)\n  \
    \  at Object.<anonymous> (/tmp/tmp6fnzzppl.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12Fizz4BuzzFizz78FizzBuzz11Fizz1314FizzBuzz1617Fizz19BuzzFizz2223FizzBuzz26Fizz2829FizzBuzz3132Fizz34BuzzFizz3738FizzBuzz41Fizz4344FizzBuzz4647Fizz49Buzz',\n\
    \  expected: 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = []\n\
    \  for(let i = 0; i <= n; i++){\n    if(i%11 === 0 || i%13 === 0){\n      let\
    \ nums = i.toString()\n      let str = \"\"\n      for(let j = 0; j < nums.length;\
    \ j++){\n        if(nums[j] === \"7\"){\n          str += \"7\"\n        }\n \
    \     }\n      arr.push(str)\n    }\n  }\n  let count = 0\n  for(let k = 0; k\
    \ < arr.length; k++){\n    if(arr[k] === \"7\"){\n      count++\n    }\n  }\n\
    \  return count\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmps6dub3bs.js:31:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps6dub3bs.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var count=0;\n\
    \  for(var i=0;i<n;i++){\n    if(i%11==0||i%13==0){\n      var s=i.toString();\n\
    \      for(var j=0;j<s.length;j++){\n        if(s[j]==\"7\"){\n          count++;\n\
    \        }\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n%11==0||n%13==0){\n\
    \    return ++numberOfSeven;\n  }else{\n    return numberOfSeven;\n  }\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppm66ti_9.js:6\n    return numberOfSeven;\n    ^\n\nReferenceError:\
    \ numberOfSeven is not defined\n    at fizz_buzz (/tmp/tmppm66ti_9.js:6:5)\n \
    \   at test (/tmp/tmppm66ti_9.js:14:20)\n    at Object.<anonymous> (/tmp/tmppm66ti_9.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let array =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        if(i % 11 === 0 || i % 13 ===\
    \ 0){\n            array.push(i);\n        }\n    }\n    let string = array.join('');\n\
    \    let count = 0;\n    for(let j = 0; j < string.length; j++){\n        if(string[j]\
    \ === '7'){\n            count++\n        }\n    }\n    return count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpt3tfxv8q.js:25:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpt3tfxv8q.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let res = [];\n\
    \  for(let i = 1; i <= n; i++){\n    if(i % 3 === 0 && i % 5 === 0){\n      res.push('FizzBuzz');\n\
    \    }else if(i % 3 === 0){\n      res.push('Fizz');\n    }else if(i % 5 === 0){\n\
    \      res.push('Buzz');\n    }else{\n      res.push(i);\n    }\n  }\n  return\
    \ res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmpjw4jxs9y.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjw4jxs9y.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let arr = []\n\
    \  for(let i = 0; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      arr.push(i)\n\
    \    }\n  }\n  let str = arr.join(\"\")\n  let counter = 0\n  for(let i = 0; i\
    \ < str.length; i++){\n    if(str[i] === \"7\"){\n      counter++\n    }\n  }\n\
    \  return counter\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 ===\
    \ 0 && n % 13 === 0) return 'fizzbuzz';\n  if(n % 11 === 0) return 'fizz';\n \
    \ if(n % 13 === 0) return 'buzz';\n  return n;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n50\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp0lok9r_q.js:14:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0lok9r_q.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 50,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 1; i < n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n      if(i.toString().includes('7')){\n\
    \        count++;\n      }\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpexkdt6l1.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpexkdt6l1.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  if(n % 11 ===\
    \ 0 || n % 13 === 0){\n    if(n % 100 === 7){\n      return 2;\n    }\n    if(n\
    \ % 10 === 7){\n      return 1;\n    }\n  }\n  return 0;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpaexk2g42.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpaexk2g42.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    let arr=[];\n\
    \    for(let i=1;i<=n;i++){\n        if(i%5==0 && i%3==0){\n            arr.push(\"\
    FizzBuzz\");\n        }\n        else if(i%3==0){\n            arr.push(\"Fizz\"\
    );\n        }\n        else if(i%5==0){\n            arr.push(\"Buzz\");\n   \
    \     }\n        else{\n            arr.push(i);\n        }\n    }\n    return\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2,\n\
    \  'Fizz',\n  4,\n  'Buzz',\n  'Fizz',\n  7,\n  8,\n  'Fizz',\n  'Buzz',\n  11,\n\
    \  'Fizz',\n  13,\n  14,\n  'FizzBuzz',\n  16,\n  17,\n  'Fizz',\n  19,\n  'Buzz',\n\
    \  'Fizz',\n  22,\n  23,\n  'Fizz',\n  'Buzz',\n  26,\n  'Fizz',\n  28,\n  29,\n\
    \  'FizzBuzz',\n  31,\n  32,\n  'Fizz',\n  34,\n  'Buzz',\n  'Fizz',\n  37,\n\
    \  38,\n  'Fizz',\n  'Buzz',\n  41,\n  'Fizz',\n  43,\n  44,\n  'FizzBuzz',\n\
    \  46,\n  47,\n  'Fizz',\n  49,\n  'Buzz'\n]\n\nshould loosely deep-equal\n\n\
    0\n    at test (/tmp/tmp8nbz1f3n.js:26:10)\n    at Object.<anonymous> (/tmp/tmp8nbz1f3n.js:36:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    1,\
    \          2,          'Fizz',     4,\n    'Buzz',     'Fizz',     7,        \
    \  8,\n    'Fizz',     'Buzz',     11,         'Fizz',\n    13,         14,  \
    \       'FizzBuzz', 16,\n    17,         'Fizz',     19,         'Buzz',\n   \
    \ 'Fizz',     22,         23,         'Fizz',\n    'Buzz',     26,         'Fizz',\
    \     28,\n    29,         'FizzBuzz', 31,         32,\n    'Fizz',     34,  \
    \       'Buzz',     'Fizz',\n    37,         38,         'Fizz',     'Buzz',\n\
    \    41,         'Fizz',     43,         44,\n    'FizzBuzz', 46,         47,\
    \         'Fizz',\n    49,         'Buzz'\n  ],\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let sevens = 0;\n\
    \  for (let i = 0; i < n; i++) {\n    if ((i % 11 == 0 || i % 13 == 0) && i.toString().split('').indexOf('7')\
    \ != -1) {\n      sevens++;\n    }\n  }\n  return sevens;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3u8nkul8.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp3u8nkul8.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n   var list = [];\n\
    \   for(var i = 1; i < n; i++){\n      if(i % 11 === 0 || i % 13 === 0){\n   \
    \      list.push(i);\n      }\n   }\n   var count = 0;\n   for(var i = 0; i <\
    \ list.length; i++){\n      count += contains(list[i], 7);\n   }\n   return count;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpf6e_gx2z.js:11\n      count += contains(list[i], 7);\n      ^\n\
    \nReferenceError: contains is not defined\n    at fizz_buzz (/tmp/tmpf6e_gx2z.js:11:7)\n\
    \    at test (/tmp/tmpf6e_gx2z.js:20:20)\n    at Object.<anonymous> (/tmp/tmpf6e_gx2z.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  let count = 0;\n\
    \  for(let i = 0; i < n; i++){\n    if((i % 11 == 0 || i % 13 == 0) && i.toString().indexOf('7')\
    \ > -1){\n      count++;\n    }\n  }\n  return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpats4ms_2.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpats4ms_2.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\nvar count = 0;\n\
    for(var i = 0; i < n; i++){\n    if((i % 11 === 0) || (i % 13 === 0)){\n     \
    \   var x = i.toString();\n        for(var j = 0; j < x.length; j++){\n      \
    \      if(x[j] === '7'){\n                count++;\n            }\n        }\n\
    \    }\n}\nreturn count;\n}\nfizz_buzz(17)\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822326
- exit_code: 0
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n    var sevens =\
    \ 0;\n    for(var i = 1; i < n; i++){\n        if(i % 11 == 0 || i % 13 == 0){\n\
    \            var num = i.toString();\n            for(var j = 0; j < num.length;\
    \ j++){\n                if(num[j] == 7){\n                    sevens++;\n   \
    \             }\n            }\n        }\n    }\n    return sevens;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n  var result = [];\n\
    \  for(var i = 1; i <= n; i++){\n    if(i % 11 === 0 || i % 13 === 0){\n     \
    \ result.push(i);\n    }\n  }\n  return result.length;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
    \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n\
    \  assert.deepEqual(candidate(100),3);\n  assert.deepEqual(candidate(200),6);\n\
    \  assert.deepEqual(candidate(4000),192);\n  assert.deepEqual(candidate(10000),639);\n\
    \  assert.deepEqual(candidate(100000),8026);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmp2q_hboe6.js:16:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2q_hboe6.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326
- exit_code: 1
  program: "//Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nfunction fizz_buzz(n){\n\tlet count = 0;\n\
    \tfor(let i = 1; i < n; i++){\n\t\tif(i % 11 === 0 && i % 13 === 0){\n\t\t\tif(i.toString().indexOf(\"\
    7\") !== -1){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = fizz_buzz;\n\
    \  assert.deepEqual(candidate(50),0);\n  assert.deepEqual(candidate(78),2);\n\
    \  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
    \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
    \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp5eo3uxb0.js:20:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5eo3uxb0.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659822326

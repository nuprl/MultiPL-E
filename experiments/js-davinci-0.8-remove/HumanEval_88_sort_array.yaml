name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["    if(array.length == 0) return array;\n    var first = array[0];\n\
    \    var last = array[array.length - 1];\n    var sum = first + last;\n    var\
    \ new_array = [];\n    if(sum % 2 == 0){\n        array.sort(function(a, b){\n\
    \            return b - a;\n        });\n    }else{\n        array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n    return array;\n}\n",
  "    if(array.length == 0) return [];\n    let sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 == 0){\n        return array.sort((a, b) => b - a);\n\
    \    }\n    return array.sort((a, b) => a - b);\n}", "    let sum = array[0] +\
    \ array[array.length - 1];\n    if(sum % 2 !== 0){\n        return array.sort((a,\
    \ b) => a - b);\n    } else {\n        return array.sort((a, b) => b - a);\n \
    \   }\n}", "    let sum = array[0] + array[array.length - 1];\n    if(sum % 2\
    \ !== 0){\n        return array.sort((a, b) => a - b);\n    } else {\n       \
    \ return array.sort((a, b) => b - a);\n    }\n}", "    //assign first and last\
    \ index values to a, b\n    var a = array[0];\n    var b = array[array.length-1];\n\
    \    //Add the values of a and b\n    var sum = a + b;\n    //If the sum is even,\
    \ return the sorted array in reverse\n    if (sum % 2 === 0){\n        return\
    \ array.sort().reverse();\n    }\n    //if the sum is odd, return the sorted array\n\
    \    else {\n        return array.sort();\n    }\n}\n", "  if(array.length ===\
    \ 0){\n    return array;\n  }\n  let odd = array.filter(x => x % 2 !== 0);\n \
    \ let even = array.filter(x => x % 2 === 0);\n  let first = array[0];\n  let last\
    \ = array[array.length - 1];\n  let sum = first + last;\n  if(sum % 2 === 0){\n\
    \    return array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a\
    \ - b);\n}\n", "    let result = [];\n    if( array.length < 1 ) return result;\n\
    \    else{\n        if((array[0] + array[array.length - 1]) % 2 === 0){\n    \
    \        result = array.sort((a,b) => b - a);\n        }else{\n            result\
    \ = array.sort((a,b) => a - b);\n        }\n    }\n    return result;\n}", " \
    \   if (array.length < 2) {\n        return array;\n    }\n    let l = array.length,\
    \ odd = array.slice(0,(l-1)/2), even = array.slice((l+1)/2,l);\n    (array[0]\
    \ + array[l-1]) % 2 == 0 ? odd.sort((a,b) => a < b) : odd.sort((a,b) => a > b);\n\
    \    even.sort((a,b) => a < b);\n    return odd.concat(even);\n}\n", "    let\
    \ sum = array[0] + array[array.length - 1];\n    if(sum % 2 == 0){\n        array.sort((a,\
    \ b) => b - a);\n    } else {\n        array.sort((a, b) => a - b);\n    }\n \
    \   return array;\n}", "  var newArray = array.slice(0);\n  var firstLastSum =\
    \ newArray[0] + newArray[newArray.length - 1];\n  if (firstLastSum % 2 !== 0)\
    \ {\n    newArray.sort(function(a, b) {\n      return a - b;\n    });\n  } else\
    \ {\n    newArray.sort(function(a, b) {\n      return b - a;\n    });\n  }\n \
    \ return newArray;\n}\n", "    let a = array.slice();\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if (sum % 2 === 0) {\n        return a.sort((a,\
    \ b) => b - a);\n    } else {\n        return a.sort((a, b) => a - b);\n    }\n\
    }", "\tvar total = array[0] + array[array.length-1];\n\tif(total % 2 !== 0){\n\
    \t\treturn array.sort(function(a,b){\n\t\t\treturn a - b;\n\t\t});\n\t}else{\n\
    \t\treturn array.sort(function(a,b){\n\t\t\treturn b - a;\n\t\t});\n\t}\n}\n",
  "    var sum = array[0] + array[array.length - 1];\n    if(sum % 2 === 0){\n   \
    \     return array.sort(function(a, b){\n            return b - a;\n        });\n\
    \    }\n    else{\n        return array.sort(function(a, b){\n            return\
    \ a - b;\n        });\n    }\n}", "    return array.sort((a,b)=>{\n        if((a+b)%2===0){\n\
    \            return b-a;\n        }else{\n            return a-b;\n        }\n\
    \    })\n}", "    let sum = array[0] + array[array.length - 1];\n    if(sum %\
    \ 2 === 0){\n        return array.sort((a, b) => b - a);\n    }\n    return array.sort((a,\
    \ b) => a - b);\n}\n", "  var index_sum = array[0] + array[array.length - 1];\n\
    \  if (index_sum % 2 === 0) {\n    return array.sort(function(a, b) {\n      return\
    \ b - a;\n    });\n  } else {\n    return array.sort(function(a, b) {\n      return\
    \ a - b;\n    });\n  }\n}\n", "  let result = array.slice();\n  if ((result[0]\
    \ + result[result.length - 1]) % 2 === 0) {\n    result.sort((a, b) => b - a);\n\
    \  } else {\n    result.sort((a, b) => a - b);\n  }\n  return result;\n}", " \
    \ return array.reduce((a, b, i) => {\n    if ((a + b) % 2 === 0) {\n      array.splice(i,\
    \ 1, b)\n    } else {\n      array.splice(i, 1, a)\n    }\n    return a;\n  });\n\
    }", "  var sum = array[0] + array[array.length-1];\n  if(sum % 2 == 0){\n    return\
    \ array.sort(function(a,b){\n      return b-a;\n    });\n  }else{\n    return\
    \ array.sort(function(a,b){\n      return a-b;\n    });\n  }\n}", "    var res\
    \ = [];\n    if (array.length > 1) {\n        res = array.sort(function (a, b)\
    \ {\n            if ((a[0] + a[array.length - 1]) % 2 == 0) {\n              \
    \  return b - a;\n            } else {\n                return a - b;\n      \
    \      }\n        });\n    } else {\n        res = array;\n    }\n    return res;\n\
    }", "    return array.map((curr, ind) => ind % 2 === (array[0] + array[array.length\
    \ - 1]) % 2 ? curr : -curr).sort((a, b) => a - b).map((curr, ind) => ind % 2 ===\
    \ (array[0] + array[array.length - 1]) % 2 ? curr : -curr);\n}", "    var sum\
    \ = array[0] + array[array.length - 1];\n    if(sum % 2 == 0){\n        return\
    \ array.sort(function(a, b){return b - a});\n    }\n    else{\n        return\
    \ array.sort(function(a, b){return a - b});\n    }\n}", "    let first = array[0];\n\
    \    let last = array[array.length - 1];\n    let sum = first + last;\n    let\
    \ newArray = array.sort((a, b) => a - b);\n    if (sum % 2 === 0) {\n        newArray.reverse();\n\
    \    }\n    return newArray;\n}\n\nlet test1 = [1, 2, 3, 4, 5];\nlet test2 = [23,\
    \ 2, 3, 18, 5, 6, 9, 12];", "\tconst newArray = [...array];\n\tconst sum = array[0]\
    \ + array[array.length - 1];\n\tlet counter = 0;\n\tif (sum % 2 !== 0) {\n\t\t\
    while (counter < newArray.length) {\n\t\t\tfor (let i = 0; i < newArray.length;\
    \ i++) {\n\t\t\t\tif (newArray[i] > newArray[i + 1]) {\n\t\t\t\t\tlet temp = newArray[i];\n\
    \t\t\t\t\tnewArray[i] = newArray[i + 1];\n\t\t\t\t\tnewArray[i + 1] = temp;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t\tcounter++;\n\t\t}\n\t} else {\n\t\twhile (counter < newArray.length)\
    \ {\n\t\t\tfor (let i = 0; i < newArray.length; i++) {\n\t\t\t\tif (newArray[i]\
    \ < newArray[i + 1]) {\n\t\t\t\t\tlet temp = newArray[i];\n\t\t\t\t\tnewArray[i]\
    \ = newArray[i + 1];\n\t\t\t\t\tnewArray[i + 1] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t\tcounter++;\n\t\t}\n\t}\n\treturn newArray;\n}\n", "    let sum = array[0]\
    \ + array[array.length - 1];\n    let sortedArr = [];\n    for (let i = 0; i <\
    \ array.length; i++) {\n        if (sum % 2 === 0) {\n            sortedArr =\
    \ array.sort(function (a, b) {\n                return b - a;\n            });\n\
    \        } else {\n            sortedArr = array.sort(function (a, b) {\n    \
    \            return a - b;\n            });\n        }\n    }\n    return sortedArr;\n\
    }", "    let copy = array.slice();\n    let sum = array[0] + array[array.length\
    \ - 1];\n    let ans = sum % 2 === 0 ? copy.sort((a, b) => a < b) : copy.sort((a,\
    \ b) => a > b);\n    return ans;\n}", "  let first=array[0];\n  let last=array[array.length-1];\n\
    \  let sum=first+last;\n  let arr1=[];\n  for(let i=0;i<array.length;i++){\n \
    \     for(let j=0;j<array.length;j++){\n      if(array[i]>array[j]){\n       \
    \ arr1[i]=array[j];\n        arr1[j]=array[i];\n      }else{\n        arr1[i]=array[i];\n\
    \        arr1[j]=array[j];\n      }\n    }\n  }\n  if(sum%2==0){\n    return arr1;\n\
    \  }else{\n    return arr1.reverse();\n  }\n}", "    let sumFirstAndLast = array[0]\
    \ + array[array.length - 1];\n    let isEven = sumFirstAndLast % 2 === 0;\n  \
    \  return isEven ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n\
    }", "    let sum = array[0] + array[array.length - 1];\n    if(sum % 2 === 0){\n\
    \        return array.sort((a, b) => a - b);\n    } else {\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}", "    let sum = array[0] + array[array.length - 1];\n\
    \    let sorted;\n    if (sum % 2 !== 0) {\n        sorted = array.sort((a, b)\
    \ => {return a - b})\n    } else {\n        sorted = array.sort((a, b) => {return\
    \ b - a})\n    }\n    return sorted;\n}", "    let sum = array[0] + array[array.length\
    \ - 1];\n    let newArray = []\n    if(sum % 2 === 0){\n        array.sort(function(a,\
    \ b){return b-a});\n        return array;\n    }else{\n        array.sort(function(a,\
    \ b){return a-b});\n        return array;\n    }\n}", "    var sum = array[0]\
    \ + array[array.length - 1];\n    if(sum % 2 === 0){\n        return array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n}", "    // your code here.\n    let sum\
    \ = array[0] + array[array.length - 1];\n    let lastIndex = array.length - 1;\n\
    \    let newArray = [];\n    if (sum % 2 !== 0) {\n        // sort in ascending\
    \ order\n        newArray = array.sort(function(a, b){return a - b});\n    } else\
    \ {\n        // sort in descending order\n        newArray = array.sort(function(a,\
    \ b){return b - a});\n    }\n    return newArray;\n}\n", "  return array.sort((a,b)=>\
    \ a+b%2 ? b-a : a-b)\n}", "   return array.map((x, i) => ((array[0] + array[array.length\
    \ - 1]) % 2) ? array.sort((a, b) => b - a) : array.sort((a, b) => a - b))[i];\n\
    }", "    //let sum = a[0] + a[a.length - 1];\n    return array.sort((a, b) =>\
    \ {\n        let sum = a + b;\n        if (sum % 2 === 0) {\n            return\
    \ -1;\n        }\n        else {\n            return 1;\n        }\n    });\n}",
  "    const newArray = [];\n    const arraySum = array[0] + array[array.length -\
    \ 1];\n    if (arraySum % 2 == 0) {\n        for (let i = 0; i < array.length;\
    \ i++) {\n            newArray.push(array[i]);\n        }\n        newArray.sort(function\
    \ (a, b) {\n            return b - a;\n        });\n    } else {\n        for\
    \ (let i = 0; i < array.length; i++) {\n            newArray.push(array[i]);\n\
    \        }\n        newArray.sort(function (a, b) {\n            return a - b;\n\
    \        });\n    }\n    return newArray;\n}", "    var resultArray = []\n   \
    \ for(var i = 0; i < array.length; i++){\n        resultArray.push(array[i])\n\
    \    }\n    if(array[0] + array[array.length - 1] % 2 === 0){\n        resultArray.sort(function(a,\
    \ b){\n            return b - a\n        })\n    }else{\n        resultArray.sort(function(a,\
    \ b){\n            return a - b\n        })\n    }\n    return resultArray\n}",
  "  if(array.length < 2){\n    return array;\n  }\n\n  if(sumOfArray(array) % 2 ==\
    \ 0){\n    return array.sort(function(a, b){\n      return b - a;\n    });\n \
    \ }else{\n    return array.sort(function(a, b){\n      return a - b;\n    });\n\
    \  }\n}\n", "  if(array.length === 0) return [];\n  let first = array[0];\n  let\
    \ last = array[array.length - 1];\n  if(first + last % 2 === 0){\n    let sorted\
    \ = array.sort((a,b) => a - b);\n    return sorted;\n  }\n  else{\n    let sorted\
    \ = array.sort((a,b) => b - a);\n    return sorted;\n  }\n}", "  let sum = array[0]\
    \ + array[array.length - 1];\n  let sortedArr = array.sort((a, b) => a - b);\n\
    \  if (sum % 2 === 0) {\n    return sortedArr.reverse();\n  } else {\n    return\
    \ sortedArr;\n  }\n}", "    var even = [];\n    var odd = [];\n    var sum = array[0]\
    \ + array[array.length - 1];\n    if (sum % 2 == 0) {\n        for (var i = 0;\
    \ i < array.length; i++) {\n            if (array[i] % 2 == 0) {\n           \
    \     even.push(array[i]);\n            } else {\n                odd.push(array[i]);\n\
    \            }\n        }\n        even.sort(function (a, b) {\n            return\
    \ b - a;\n        });\n        odd.sort(function (a, b) {\n            return\
    \ b - a;\n        });\n        for (var j = 0; j < array.length; j++) {\n    \
    \        if (array[j] % 2 == 0) {\n                array[j] = even.shift();\n\
    \            } else {\n                array[j] = odd.shift();\n            }\n\
    \        }\n    } else {\n        for (var i = 0; i < array.length; i++) {\n \
    \           if (array[i] % 2 == 0) {\n                even.push(array[i]);\n \
    \           } else {\n                odd.push(array[i]);\n            }\n   \
    \     }\n        even.sort(function (a, b) {\n            return a - b;\n    \
    \    });\n        odd.sort(function (a, b) {\n            return a - b;\n    \
    \    });\n        for (var j = 0; j < array.length; j++) {\n            if (array[j]\
    \ % 2 == 0) {\n                array[j] = even.shift();\n            } else {\n\
    \                array[j] = odd.shift();\n            }\n        }\n    }\n  \
    \  return array;\n}\n", "    var isEven = (array[0] + array[array.length - 1])\
    \ % 2 === 0\n    var sorted_array = array.sort(function(a, b){\n        if(isEven){\n\
    \            return b - a\n        } else {\n            return a - b\n      \
    \  }\n    })\n    return sorted_array\n}\n", "  const oddEven = (array[0] + array[array.length\
    \ - 1]) % 2;\n  if (oddEven === 0) {\n    array.sort((a, b) => b - a);\n  } else\
    \ {\n    array.sort((a, b) => a - b);\n  }\n  return array;\n}\n", "    // let\
    \ result = [];\n    // let sum = array[0] + array[array.length - 1];\n    // if(sum\
    \ % 2 != 0){\n    //     for(let i = 0; i < array.length; i++){\n    //      \
    \   for(let j = i + 1; j < array.length; j++){\n    //             if(array[i]\
    \ > array[j]){\n    //                 let temp = array[i];\n    //          \
    \       array[i] = array[j];\n    //                 array[j] = temp;\n    //\
    \             }\n    //         }\n    //     }\n    // }else{\n    //     for(let\
    \ i = 0; i < array.length; i++){\n    //         for(let j = i + 1; j < array.length;\
    \ j++){\n    //             if(array[i] < array[j]){\n    //                 let\
    \ temp = array[i];\n    //                 array[i] = array[j];\n    //      \
    \           array[j] = temp;\n    //             }\n    //         }\n    // \
    \    }\n    // }\n    // for(let i = 0; i < array.length; i++){\n    //     result.push(array[i]);\n\
    \    // }\n    // return result;\n    let result = [];\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if(sum % 2 != 0){\n        for(let i = 0; i\
    \ < array.length; i++){\n            for(let j = i + 1; j < array.length; j++){\n\
    \                if(array[i] > array[j]){\n                    let temp = array[i];\n\
    \                    array[i] = array[j];\n                    array[j] = temp;\n\
    \                }\n            }\n        }\n    }else{\n        for(let i =\
    \ 0; i < array.length; i++){\n            for(let j = i + 1; j < array.length;\
    \ j++){\n                if(array[i] < array[j]){\n                    let temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ =", "    // Write your code here\n    let sum = array[0] + array[array.length\
    \ - 1];\n    let sorted = array.sort((a, b) => {\n        if (sum % 2 === 0) {\n\
    \            return b - a;\n        } else {\n            return a - b;\n    \
    \    }\n    });\n    return sorted;\n}", "\n}\n\nlet array_1 = [1, 2, 3, 4, 5];",
  "    let odd = [];\n    let even = [];\n    let result = [];\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if(sum % 2 == 0){\n        for(let i = 0; i\
    \ < array.length; i++){\n            if(array[i] % 2 != 0){\n                odd.push(array[i]);\n\
    \            }\n        }\n        odd.sort((a, b) => a - b);\n        for(let\
    \ i = 0; i < array.length; i++){\n            if(array[i] % 2 == 0){\n       \
    \         result.push(array[i]);\n            }\n            else{\n         \
    \       result.push(odd.shift());\n            }\n        }\n    }\n    else{\n\
    \        for(let i = 0; i < array.length; i++){\n            if(array[i] % 2 ==\
    \ 0){\n                even.push(array[i]);\n            }\n        }\n      \
    \  even.sort((a, b) => b - a);\n        for(let i = 0; i < array.length; i++){\n\
    \            if(array[i] % 2 != 0){\n                result.push(array[i]);\n\
    \            }\n            else{\n                result.push(even.shift());\n\
    \            }\n        }\n    }\n    return result;\n}", "    if(array.length\
    \ == 0){\n        return array;\n    }\n    let sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 == 0){\n        return array.sort(function(a, b){\n  \
    \          return b - a;\n        });\n    }else{\n        return array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n}", "  const newArray =\
    \ [...array];\n  const isEven = (array[0] + array[array.length - 1]) % 2 === 0;\n\
    \  if (isEven) newArray.sort((a, b) => b - a);\n  else newArray.sort((a, b) =>\
    \ a - b);\n  return newArray;\n}", "  let sumOfArr = array[0] + array[array.length\
    \ - 1];\n  if (sumOfArr % 2 === 0) {\n    return array.sort((a, b) => b - a);\n\
    \  } else {\n    return array.sort((a, b) => a - b);\n  }\n}\n", "    var oddArr\
    \ = [];\n    var evenArr = [];\n    var sum;\n    if(array.length == 0){\n   \
    \     return [];\n    }\n    for(var i = 0; i < array.length; i++){\n        if(array[i]\
    \ % 2 != 0){\n            oddArr.push(array[i]);\n        }\n        else{\n \
    \           evenArr.push(array[i]);\n        }\n    }\n    sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 != 0){\n        oddArr.sort(function(a, b){return a -\
    \ b});\n        evenArr.sort(function(a, b){return b - a});\n    }\n    else{\n\
    \        oddArr.sort(function(a, b){return b - a});\n        evenArr.sort(function(a,\
    \ b){return a - b});\n    }\n    var newArr = oddArr.concat(evenArr);\n    return\
    \ newArr;\n}", "  let arrayCopy = array.slice();\n  let sum = arrayCopy[0] + arrayCopy[arrayCopy.length\
    \ - 1];\n  let sortedArray = [];\n  if (sum % 2 !== 0) {\n    sortedArray = arrayCopy.sort((a,\
    \ b) => a - b);\n  } else {\n    sortedArray = arrayCopy.sort((a, b) => b - a);\n\
    \  }\n  return sortedArray;\n}", "  let copyArr = array.slice();\n  let sortedArr\
    \ = [];\n  let oddArr = [];\n  let evenArr = [];\n  for (let index in copyArr)\
    \ {\n    let elem = copyArr[index];\n    if (elem % 2 == 0) {\n      evenArr.push(elem);\n\
    \    } else {\n      oddArr.push(elem);\n    }\n  }\n  sortedArr = sortedArr.concat(evenArr.sort(function(a,\
    \ b){return b-a})).concat(oddArr.sort(function(a, b){return a-b}));\n  if (sortedArr[0]\
    \ + sortedArr[sortedArr.length - 1] % 2 == 0) {\n    return sortedArr;\n  } else\
    \ {\n    return sortedArr.reverse();\n  }\n}", "\n}\n", '//   => [5,3,1,7,9,10,12]',
  "    if((array[0] + array[array.length - 1]) % 2 == 0){\n        return array.sort(function(a,\
    \ b){return b - a});\n    }\n    else{\n        return array.sort(function(a,\
    \ b){return a - b});\n    }\n}\n", "    const firstValue = array[0];\n    const\
    \ lastValue = array[array.length - 1];\n    const sum = firstValue + lastValue;\n\
    \    let result = sum % 2 === 0 ? array.sort((a, b) => b - a) : array.sort((a,\
    \ b) => a - b);\n    return result;\n}", "    // your code here\n    var sum =\
    \ array[0] + array[array.length - 1];\n    if (sum % 2 === 0) {\n        array.sort(function(a,\
    \ b) {\n            return b - a;\n        });\n    } else {\n        array.sort(function(a,\
    \ b) {\n            return a - b;\n        });\n    }\n    return array;\n}\n",
  "    var sum=array[0]+array[array.length-1];\n    if(sum%2===0){\n        return\
    \ array.sort((a,b)=>b-a);\n    }\n    else{\n        return array.sort((a,b)=>a-b);\n\
    \    }\n}", "let sumOfFirstAndLastIndx=array[0]+array[array.length-1];\nif(sumOfFirstAndLastIndx%2!==0){\n\
    \    return array.sort(function(a,b){\n        return a-b;\n    })\n}\nelse{\n\
    return array.sort(function(a,b){\n    return b-a;\n})\n}\n}", "    let toReturn\
    \ = [];\n    let sum = array[0] + array[array.length - 1];\n    if(sum % 2 ==\
    \ 0){\n        for(let i = 0; i < array.length; i++){\n            toReturn.push(array[i]);\n\
    \        }\n        return toReturn.sort((a, b) => b - a);\n    } else {\n   \
    \     for(let i = 0; i < array.length; i++){\n            toReturn.push(array[i]);\n\
    \        }\n        return toReturn.sort((a, b) => a - b);\n    }\n}\n", "   \
    \ let sums = 0;\n    let first = array[0];\n    let last = array[array.length\
    \ - 1];\n    sums = first + last;\n    if (sums % 2 == 0) {\n        return array.sort((a,\
    \ b) => b - a);\n    } else {\n        return array.sort((a, b) => a - b);\n \
    \   }\n}", "    let count = 0;\n    let result = [];\n    for(let i = 0; i < array.length;\
    \ i++){\n        count += array[i];\n    }\n    if(count % 2 === 0){\n       \
    \ for(let i = 0; i < array.length; i++){\n            result.push(array[i]);\n\
    \        }\n        result.sort(function(a, b){return b - a});\n    }\n    else{\n\
    \        for(let i = 0; i < array.length; i++){\n            result.push(array[i]);\n\
    \        }\n        result.sort(function(a, b){return a - b});\n    }\n    return\
    \ result;\n}", "    var sum = array[0] + array[array.length - 1];\n    if(sum\
    \ % 2 === 0){\n        for(var i = 0; i < array.length; i++){\n            for(var\
    \ j = i + 1; j < array.length; j++){\n                if(array[i] < array[j]){\n\
    \                    var temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    }else{\n        for(var i = 0; i < array.length; i++){\n         \
    \   for(var j = i + 1; j < array.length; j++){\n                if(array[i] >\
    \ array[j]){\n                    var temp = array[i];\n                    array[i]\
    \ = array[j];\n                    array[j] = temp;\n                }\n     \
    \       }\n        }\n    }\n    return array;\n}\n\nvar arr1 = [1, 2, 5, 4, 0];\n\
    var arr2 = [2, 0, 5, 4, 1];\nvar arr3 = [1, 2, 5, 4, 3];\nvar arr4 = [0, 2, 5,\
    \ 4, 1];", "  let start = array[0];\n  let end = array[array.length-1];\n  let\
    \ sum = start + end;\n  let mid = array.splice(1, array.length-2);\n  return sum\
    \ % 2 == 0 ? [start].concat(mid.sort((a,b) => b-a),[end]) : [start].concat(mid.sort((a,b)\
    \ => a-b),[end]);\n}", "    let sum = array[0] + array[array.length - 1];\n  \
    \  if(sum % 2 === 0){\n        return array.sort((a, b) => b - a);\n    } else\
    \ {\n        return array.sort((a, b) => a - b);\n    }\n}", "    let odd = [],\
    \ even = [];\n    // first check if the sum of the first and last elements is\
    \ even or odd\n    if ( (array[0] + array[array.length - 1]) % 2 === 0 ) {\n \
    \       // if it's even, sort in descending order\n        odd = array.filter(\
    \ (num) => {\n            if (num % 2 !== 0) {\n                return num;\n\
    \            }\n        }).sort( (a, b) => b - a);\n        even = array.filter(\
    \ (num) => {\n            if (num % 2 === 0) {\n                return num;\n\
    \            }\n        }).sort( (a, b) => b - a);\n    } else {\n        // if\
    \ it's odd, sort in ascending order\n        odd = array.filter( (num) => {\n\
    \            if (num % 2 !== 0) {\n                return num;\n            }\n\
    \        }).sort( (a, b) => a - b);\n        even = array.filter( (num) => {\n\
    \            if (num % 2 === 0) {\n                return num;\n            }\n\
    \        }).sort( (a, b) => a - b);\n    }\n    // now combine them into a single\
    \ array\n    let result = [];\n    for (let i = 0; i < array.length; i++) {\n\
    \        if (i % 2 === 0) {\n            result.push(even.shift());\n        }\
    \ else {\n            result.push(odd.shift());\n        }\n    }\n    return\
    \ result;\n}", "\tif(array[0] + array[array.length - 1] % 2 == 0){\n\t\treturn\
    \ array.sort(function(a, b){return b - a;});\n\t}else{\n\t\treturn array.sort(function(a,\
    \ b){return a - b;});\n\t}\n}", "// if(sum of first and last array values are\
    \ odd, return array in ascending order\nif((array[0] + array[array.length-1])\
    \ % 2 != 0){\n  return array.sort((a,b) => a-b);\n}", "    let sum = array[0]\
    \ + array[array.length - 1];\n    let sortedArray = array.sort((a, b) => a - b);\n\
    \    if (sum % 2 === 0) {\n        return sortedArray.reverse();\n    } else {\n\
    \        return sortedArray;\n    }\n}\n\nlet arr1 = [1, 2, 4, 5, 6, 7, 8, 9];\n\
    let arr2 = [1, 2, 4, 5, 6, 7, 8, 10];", "    if (array.length > 1) {\n       \
    \ var odd = [];\n        var even = [];\n        for (let i = 0; i < array.length;\
    \ i++) {\n            if (array[i] % 2 === 0) {\n                even.push(array[i]);\n\
    \            } else {\n                odd.push(array[i]);\n            }\n  \
    \      }\n        if ((array[0] + array[array.length - 1]) % 2 === 0) {\n    \
    \        even.sort(function (a, b) { return b - a });\n            for (let i\
    \ = 0; i < array.length; i++) {\n                if (array[i] % 2 === 0) {\n \
    \                   array[i] = even.shift();\n                }\n            }\n\
    \        } else {\n            odd.sort(function (a, b) { return a - b });\n \
    \           for (let i = 0; i < array.length; i++) {\n                if (array[i]\
    \ % 2 === 1) {\n                    array[i] = odd.shift();\n                }\n\
    \            }\n        }\n    }\n    return array;\n}", "  let odd = array.filter(elem\
    \ => elem % 2 === 1).sort((a, b) => a - b);\n  let even = array.filter(elem =>\
    \ elem % 2 === 0).sort((a, b) => b - a);\n  array.forEach((elem, i) => {\n   \
    \ if (elem % 2 === 1) array[i] = odd.shift();\n    else array[i] = even.shift();\n\
    \  });\n  return array;\n}\n\nmodule.exports = sort_array;", "  const sum = array[0]\
    \ + array[array.length - 1];\n  let result = array.slice();\n  result.sort((a,\
    \ b) => sum % 2 ? a - b : b - a);\n  return result;\n}\n", '', "    let sum =\
    \ 0;\n    let swap = 0;\n    let swap2 = 0;\n    let temp = 0;\n    if(array.length\
    \ === 0) return [];\n    sum = array[0] + array[array.length - 1];\n    // if\
    \ sum is odd, sort in descending order\n    if(sum % 2 != 0){\n        for(let\
    \ i = 0; i < array.length; i++){\n            for(let j = 0; j < array.length;\
    \ j++){\n                if(array[j] < array[j + 1]){\n                    swap\
    \ = array[j];\n                    array[j] = array[j + 1];\n                \
    \    array[j + 1] = swap;\n                }\n            }\n        }\n    }\
    \ else {\n        for(let k = 0; k < array.length; k++){\n            for(let\
    \ l = 0; l < array.length; l++){\n                if(array[l] > array[l + 1]){\n\
    \                    swap2 = array[l];\n                    array[l] = array[l\
    \ + 1];\n                    array[l + 1] = swap2;\n                }\n      \
    \      }\n        }\n    }\n    return array;\n}", "    let newArray = [];\n \
    \   for(let i = 0; i < array.length; i++){\n        if((array[0] + array[array.length\
    \ - 1]) % 2 !== 0){\n            newArray.push(array[i]);\n            newArray.sort((a,\
    \ b) => a - b);\n        }else{\n            newArray.push(array[i]);\n      \
    \      newArray.sort((a, b) => b - a);\n        }\n    }\n    return newArray;\n\
    }\n", "  if (array[0] + array[array.length - 1] % 2 !== 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "    var sum = array[0] + array[array.length - 1];\n    if(sum % 2 != 0){\n    \
    \    return array.sort((a, b) => a - b);\n    }else{\n        return array.sort((a,\
    \ b) => b - a);\n    }\n}", "  var arr = [];\n  var arr2 = [];\n  if(array.length>0){\n\
    \    if((array[0]+array[array.length-1])%2==0){\n      for(var i=0;i<array.length;i++){\n\
    \        if(array[i]%2==0){\n          arr.push(array[i]);\n        }\n      \
    \  else{\n          arr2.push(array[i]);\n        }\n      }\n      arr2.sort(function(a,b){return\
    \ b-a});\n      arr.sort(function(a,b){return a-b});\n      return arr.concat(arr2);\n\
    \    }\n    else{\n      for(var i=0;i<array.length;i++){\n        if(array[i]%2==0){\n\
    \          arr.push(array[i]);\n        }\n        else{\n          arr2.push(array[i]);\n\
    \        }\n      }\n      arr2.sort(function(a,b){return a-b});\n      arr.sort(function(a,b){return\
    \ b-a});\n      return arr.concat(arr2);\n    }\n  }\n  else{\n    return [];\n\
    \  }\n}", "    var even_start = [];\n    var odd_start = [];\n    var even_end\
    \ = [];\n    var odd_end = [];\n    var even_end_reverse = [];\n    var odd_end_reverse\
    \ = [];\n    var result = [];\n    var sum = array[0] + array[array.length-1];\n\
    \    for(var i = 0; i < array.length; i++){\n        if(i % 2 === 0){\n      \
    \      even_start.push(array[i]);\n        }\n        else{\n            odd_start.push(array[i]);\n\
    \        }\n    }\n    if(sum % 2 === 0){\n        even_end = even_start.sort(function(a,\
    \ b){return a-b});\n        odd_end = odd_start.sort(function(a, b){return b-a});\n\
    \        for(var j = 0; j < array.length; j++){\n            if(j % 2 === 0){\n\
    \                result.push(even_end[0]);\n                even_end.shift();\n\
    \            }\n            else{\n                result.push(odd_end[0]);\n\
    \                odd_end.shift();\n            }\n        }\n    }\n    else{\n\
    \        even_end_reverse = even_start.sort(function(a, b){return b-a});\n   \
    \     odd_end_reverse = odd_start.sort(function(a, b){return a-b});\n        for(var\
    \ k = 0; k < array.length; k++){\n            if(k % 2 === 0){\n             \
    \   result.push(even_end_reverse[0]);\n                even_end_reverse.shift();\n\
    \            }\n            else{\n                result.push(odd_end_reverse[0]);\n\
    \                odd_end_reverse.shift();\n            }\n        }\n    }\n \
    \   return result;\n}", "    // Your code here\n    if(array.length < 2) return\
    \ array;\n    var sum = array[0] + array[array.length - 1];\n    var isOdd = sum\
    \ % 2;\n    if(isOdd) {\n        return array.sort(function(a, b) {\n        \
    \    return a - b;\n        });\n    } else {\n        return array.sort(function(a,\
    \ b) {\n            return b - a;\n        });\n    }\n}", "    if(array.length\
    \ == 0){\n        return [];\n    }\n    if(array.length == 1){\n        return\
    \ array;\n    }\n    else{\n        var first = array[0];\n        var last =\
    \ array[array.length - 1];\n        var sum = first + last;\n        var result\
    \ = [];\n        var firstHalf = [];\n        var secondHalf = [];\n        if(sum\
    \ % 2 == 0){\n            for(var i = 0; i < array.length; i++){\n           \
    \     result.push(array[i]);\n            }\n            for(var i = 0; i < array.length/2;\
    \ i++){\n                firstHalf.push(result[i]);\n            }\n         \
    \   for(var i = array.length/2; i < array.length; i++){\n                secondHalf.push(result[i]);\n\
    \            }\n            firstHalf.sort();\n            secondHalf.sort();\n\
    \            secondHalf.reverse();\n            var main = firstHalf.concat(secondHalf);\n\
    \            return main;\n        }\n        else{\n            for(var i = 0;\
    \ i < array.length; i++){\n                result.push(array[i]);\n          \
    \  }\n            for(var i = 0; i < array.length/2; i++){\n                firstHalf.push(result[i]);\n\
    \            }\n            for(var i = array.length/2; i < array.length; i++){\n\
    \                secondHalf.push(result[i]);\n            }\n            firstHalf.sort();\n\
    \            secondHalf.sort();\n            var main = firstHalf.concat(secondHalf);\n\
    \            return main;\n        }\n    }\n}", "    var sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 === 0){\n        return array.sort(function(a, b){\n \
    \           return b - a;\n        });\n    } else {\n        return array.sort(function(a,\
    \ b){\n            return a - b;\n        });\n    }\n}\n", "    const sum = array[0]\
    \ + array[array.length - 1];\n    const isEven = sum % 2 === 0;\n    const sorted\
    \ = array.sort((a, b) => (isEven ? a - b : b - a));\n    return sorted;\n}\n",
  "    const sum = array[0] + array[array.length - 1];\n    const isOdd = sum % 2\
    \ === 1;\n    return array.sort((a, b) => isOdd ? a - b : b - a);\n}", "    let\
    \ sum = array[0] + array[array.length - 1];\n    let newArray = [];\n    array.map(num\
    \ => newArray.push(num));\n    if(sum % 2 === 0){\n        newArray.sort((a, b)\
    \ => a - b);\n    } else {\n        newArray.sort((a, b) => b - a);\n    }\n \
    \   return newArray;\n}", "    if(array.length > 1){\n        var output = \"\"\
    ;\n        if((array[0] + array[array.length - 1]) % 2 == 0){\n            return\
    \ array.sort((a,b) => a-b).reverse();\n        }\n        else{\n            return\
    \ array.sort((a,b) => a-b);\n        }\n    }\n    else{\n        return array;\n\
    \    }\n}", "  let newArray = [];\n  let temp = 0;\n  for(let i = 0; i < array.length;\
    \ i++){\n    for(let j = i + 1; j < array.length; j++){\n      if(array[i] > array[j]){\n\
    \        temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n\
    \      }\n    }\n  }\n  console.log(array);\n  if((array[0] + array[array.length\
    \ - 1]) % 2 === 0){\n    newArray = array.reverse();\n  }else{\n    newArray =\
    \ array;\n  }\n  return newArray;\n}\n", "    let sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 === 0){\n        return array.sort((a, b) => b - a);\n\
    \    }\n    return array.sort((a, b) => a - b);\n}", "  let sum = array[0] + array[array.length\
    \ - 1];\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  }\
    \ else {\n    return array.sort((a, b) => a - b);\n  }\n}\n", "    let odds =\
    \ [],\n        evens = [],\n        res = [];\n    for(let i = 0; i < array.length;\
    \ i++){\n        if(i%2 === 0){\n            evens.push(array[i]);\n        }\
    \ else {\n            odds.push(array[i]);\n        }\n    }\n    if(array[0]\
    \ + array[array.length - 1] % 2 !== 0){\n        odds.sort((a,b) => b - a);\n\
    \        evens.sort((a,b) => a - b);\n    } else {\n        odds.sort((a,b) =>\
    \ a - b);\n        evens.sort((a,b) => b - a);\n    }\n    for(let i = 0; i <\
    \ array.length; i++){\n        if(i%2 === 0){\n            res.push(evens.shift());\n\
    \        } else {\n            res.push(odds.shift());\n        }\n    }\n   \
    \ return res;\n}", "    let arr = array.slice();\n    let isAscending = false;\n\
    \    isAscending = (arr[0] + arr[arr.length - 1]) % 2 === 0;\n    if (isAscending){\n\
    \        arr.sort(function(a, b){return a - b});\n    }\n    else {\n        arr.sort(function(a,\
    \ b){return b - a});\n    }\n    return arr;\n}", "  //we are going to create\
    \ a new variable so that we do not mutate the original array\n  let newArray =\
    \ array;\n  //check to see if first index value + last index value is even or\
    \ odd\n  if((newArray[0] + newArray[newArray.length - 1]) % 2 === 0){\n    //if\
    \ even we need to sort the array descending\n    //The sort() method sorts the\
    \ elements of an array in place and returns the sorted array.\n    //The default\
    \ sort order is ascending, built upon converting the elements into strings,\n\
    \    // then comparing their sequences of UTF-16 code units values.\n    // The\
    \ time and space complexity of the sort cannot be guaranteed as it depends on\
    \ the implementation.\n    return newArray.sort(function(a, b){return b - a});\n\
    \  }else{\n    //if odd we need to sort the array ascending\n    return newArray.sort(function(a,\
    \ b){return a - b});\n  }\n}\n", "  let sum = array[0] + array[array.length -\
    \ 1];\n  if (sum % 2 !== 0) {\n    return array.sort((a, b) => a - b);\n  } else\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  let sum = array[0]\
    \ + array[array.length - 1];\n  return sum % 2 === 0 ? array.sort((a, b) => b\
    \ - a) : array.sort((a, b) => a - b);\n}", "    let oddOrEven = array[0] + array[array.length\
    \ - 1] % 2 == 0 ? 'even' : 'odd';\n    let result = [];\n    for (let i = 0; i\
    \ < array.length; i++) {\n        result.push(array[i]);\n    }\n    if (oddOrEven\
    \ == 'even') {\n        result.sort((a, b) => b - a);\n    } else {\n        result.sort((a,\
    \ b) => a - b);\n    }\n    return result;\n}", "    if (array.length % 2 ===\
    \ 0){\n        array.sort(function(a, b){return b-a})\n    }\n    else{\n    \
    \    array.sort(function(a, b){return a-b})\n    }\n    return array\n}\n", " \
    \   if (array.length <= 1) {\n        return array;\n    }\n    let sort,\n  \
    \      left = [],\n        right = [];\n    for (let i = 1; i < array.length;\
    \ i++) {\n        if (sumOfFirstAndLast(array) % 2 === 0) {\n            if (array[i]\
    \ < array[0]) {\n                left.push(array[i]);\n            } else {\n\
    \                right.push(array[i]);\n            }\n        } else {\n    \
    \        if (array[i] > array[0]) {\n                left.push(array[i]);\n  \
    \          } else {\n                right.push(array[i]);\n            }\n  \
    \      }\n    }\n    sort = sort_array(left).concat(array[0], sort_array(right));\n\
    \    return sort;\n}", "  var firstElement = array[0];\n  var lastElement = array[array.length\
    \ - 1];\n  var sumOfElements = firstElement + lastElement;\n  var newArray = [];\n\
    \  if (sumOfElements % 2 === 0) {\n    newArray = array.sort(function(a, b) {\n\
    \      return b - a;\n    });\n  } else {\n    newArray = array.sort(function(a,\
    \ b) {\n      return a - b;\n    });\n  }\n  return newArray;\n}\nsort_array([3,\
    \ 1, 2]); // [2, 1, 3]\nsort_array([1, 3, 2]); // [3, 1, 2]\nsort_array([4, 1,\
    \ 3, 2]); // [4, 3, 2, 1]\nsort_array([4, 1, 3, 2, 1]); // [4, 3, 2, 1, 1]\nsort_array([5,\
    \ 3, 2, 4, 1]); // [5, 4, 3, 2, 1]\nsort_array([5, 3, 1, 2, 4]); // [5, 4, 3,\
    \ 2, 1]\nsort_array([1, 2, 3, 4, 5]); // [5, 4, 3, 2, 1]\nsort_array([1, 2, 3,\
    \ 4, 1]); // [4, 3, 2, 1, 1]\nsort_array([4, 3, 2, 1, 5]); // [5, 4, 3, 2, 1]\n\
    sort_array([4, 3, 2, 1, 1]); // [4, 3, 2, 1, 1]\nsort_array([4, 3, 1, 2, 1]);\
    \ // [4, 3, 2, 1, 1]\nsort_array([3, 2, 1, 5, 4]); // [5, 4, 3, 2, 1]\nsort_array([3,\
    \ 2, 1, 1, 5]); // [5, 3, 2, 1, 1]\nsort_array([2, 1, 4, 3, 5]); // [5, 4, 3,\
    \ 2, 1]\nsort_array([2, 1, 4, 3, 1]); // [4, 3, 2, 1, 1]", "    var sum = array[0]\
    \ + array[array.length - 1];\n    var newArray = [];\n    if (sum % 2 === 0) {\n\
    \        newArray = array.sort((a, b) => b - a);\n    } else {\n        newArray\
    \ = array.sort((a, b) => a - b);\n    }\n    return newArray;\n}", "    //your\
    \ code here\n    if (array.length <= 1) {\n        return array;\n    }\n    const\
    \ sum = array[0] + array[array.length - 1];\n    const even = sum % 2 === 0;\n\
    \    if (even) {\n        array.sort((a, b) => b - a);\n    } else {\n       \
    \ array.sort((a, b) => a - b);\n    }\n    return array;\n}\n", "    let sum =\
    \ array[0] + array[array.length - 1];\n    return sum % 2 == 0 ? array.sort((a,\
    \ b) => b - a) : array.sort((a, b) => a - b);\n}\n", "    let sum = array[0] +\
    \ array[array.length - 1];\n    if(sum % 2 === 0){\n        return array.sort((a,\
    \ b) => b - a);\n    } else{\n        return array.sort((a, b) => a - b);\n  \
    \  }\n}", "    let sum=array[0]+array[array.length-1];\n    if(sum%2===0){\n \
    \       return array.sort((a,b)=>b-a);\n    }else{\n        return array.sort((a,b)=>a-b);\n\
    \    }\n}", "  return array.sort((a,b)=> {\n    return a - b;\n  });\n}\n", " \
    \   return array.sort((a,b)=> a-b);\n}\n\n", "    let sumOfIndices = array[0]\
    \ + array[array.length - 1];\n    let ascending = true;\n    if (sumOfIndices\
    \ % 2 === 0) {\n        ascending = false;\n    }\n    return array.sort((a, b)\
    \ => {\n        if (ascending) {\n            return a - b;\n        } else {\n\
    \            return b - a;\n        }\n    });\n}", "\tif(array.length <= 1) return\
    \ array;\n\t\n\tlet isEven = false;\n\t\n\tif((array[0] + array[array.length -\
    \ 1]) % 2 === 0) isEven = true;\n\t\n\tarray.sort((a, b) => a - b);\n\t\n\tif(isEven)\
    \ array.reverse();\n\t\n\treturn array;\n}\n", "    if(array.length <=1) {return\
    \ array}\n    let first = array[0];\n    let last = array[array.length-1];\n \
    \   let sum = first + last;\n    let newArr = [];\n    if(sum % 2 === 0){\n  \
    \      for(let i = 0; i < array.length; i++){\n            newArr.push(array[i]);\n\
    \        }\n        return newArr.sort((a,b) => a-b);\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            newArr.push(array[i]);\n       \
    \ }\n        return newArr.sort((a,b) => b-a);\n    }\n}", "    let arr = array.slice();\n\
    \    if(arr[0] + arr[arr.length - 1] % 2 !== 0){\n        return arr.sort((a,\
    \ b) => a - b);\n    } else {\n        return arr.sort((a, b) => b - a);\n   \
    \ }\n}", "    if(array[0] + array[array.length - 1] % 2 === 0){\n        return\
    \ array.sort(function(a, b){\n            return b - a;\n        });\n    }\n\
    \    return array.sort(function(a, b){\n        return a - b;\n    });\n}", " \
    \   const arraySum = array[0] + array[array.length - 1];\n    const sorted = array.sort((a,\
    \ b) => {\n        if (arraySum % 2 === 0) {\n            return b - a;\n    \
    \    } else {\n            return a - b;\n        }\n    });\n    return sorted;\n\
    }", "  let y=[];\n  let w=array.length;\n  let z;\n  let e=array[0]+array[w-1];\n\
    \  if(e%2!==0){\n    z=1;\n  }else{\n    z=0;\n  }\n  let a=array.sort(function(a,b){return\
    \ a-b;});\n  if(z===1){\n    return a;\n  }else{\n    for(var i=0;i<array.length;i++){\n\
    \      y.push(a[w-1]);\n      w--;\n    }\n    return y;\n  }\n}", "  const len\
    \ = array.length;\n  let sum = array[0] + array[len - 1];\n  return sum % 2 !==\
    \ 0 ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}", "  let firstIndex\
    \ = array[0]\n  let lastIndex = array[array.length - 1]\n  let result = []\n \
    \ let sorting = (firstIndex + lastIndex) % 2\n  // sorted in descending order\n\
    \  if (sorting === 0) {\n    for (let i = 0; i < array.length; i++) {\n      result.push(array[i])\n\
    \    }\n    result.sort(function(a, b){return b - a})\n  }\n  // sorted in ascending\
    \ order\n  else {\n    for (let i = 0; i < array.length; i++) {\n      result.push(array[i])\n\
    \    }\n    result.sort(function(a, b){return a - b})\n  }\n  return result\n}",
  "    const isEven = (array[0] + array[array.length - 1]) % 2 === 0;\n    const sorted\
    \ = array.sort((a, b) => isEven ? a - b : b - a);\n    return sorted;\n}\n", " \
    \   return array.sort((a,b)=>{\n        let sum = a+b;\n        return sum%2 ===\
    \ 0 ? b-a : a-b;\n    })\n}\n", "\tlet sum = array[0] + array[array.length - 1];\n\
    \tlet even = [];\n\tlet odd = [];\n\tlet result = [];\n\tfor(let i = 0; i < array.length;\
    \ i++){\n\t\tif(array[i] % 2 == 0){\n\t\t\teven.push(array[i]);\n\t\t}else{\n\t\
    \t\todd.push(array[i]);\n\t\t}\n\t}\n\tif(sum % 2 == 0){\n\t\teven.sort((a, b)\
    \ => a - b);\n\t\todd.sort((a, b) => b - a);\n\t\tresult = even.concat(odd);\n\
    \t}else{\n\t\teven.sort((a, b) => b - a);\n\t\todd.sort((a, b) => a - b);\n\t\t\
    result = even.concat(odd);\n\t}\n\treturn result;\n}", "  if(array[0] + array[array.length\
    \ - 1] % 2 === 0){\n    return array.sort((a, b) => a > b ? -1 : 1);\n  } else\
    \ {\n    return array.sort((a, b) => a > b ? 1 : -1);\n  }\n}", "  var array=array;\n\
    \  var sum=array[0]+array[array.length-1];\n  var odd;\n  if(sum%2===0){\n   \
    \ odd=true;\n  }\n  else{\n    odd=false;\n  }\n  if(odd){\n    return array.sort();\n\
    \  }\n  else{\n    return array.sort().reverse();\n  }\n}", "    let sum = array[0]\
    \ + array[array.length - 1];\n    let firstArr = array.slice(0, array.length /\
    \ 2);\n    let secondArr = array.slice(array.length / 2);\n    console.log(firstArr,\
    \ secondArr);\n    if (sum % 2 === 0) {\n        secondArr.sort(function (a, b)\
    \ {\n            return b - a;\n        });\n        firstArr.sort(function (a,\
    \ b) {\n            return b - a;\n        });\n    } else {\n        secondArr.sort(function\
    \ (a, b) {\n            return a - b;\n        });\n        firstArr.sort(function\
    \ (a, b) {\n            return a - b;\n        });\n    }\n    let result = firstArr.concat(secondArr);\n\
    \    return result;\n}", "    let newArr = array.slice();\n    let firstNum =\
    \ newArr[0];\n    let lastNum = newArr[newArr.length - 1];\n    let sum = firstNum\
    \ + lastNum;\n    if (sum % 2 === 0) {\n        return newArr.sort((a, b) => a\
    \ - b);\n    } else {\n        return newArr.sort((a, b) => b - a);\n    }\n}",
  "  var oddIndex = [];\n  var evenIndex = [];\n  var oddArr = [];\n  var evenArr\
    \ = [];\n  var finalArr = [];\n  // separate odd and even index of array\n  for(var\
    \ i = 0; i < array.length; i++){\n    // if index is odd, push to array\n    if(i\
    \ % 2 === 1){\n      oddIndex.push(array[i]);\n    } else {\n      evenIndex.push(array[i]);\n\
    \    }\n  }\n  // sort array from min to max\n  var sortedOdd = oddIndex.sort(function(a,\
    \ b){return a - b});\n  var sortedEven = evenIndex.sort(function(a, b){return\
    \ b - a});\n  // push odd and even index to new array\n  oddArr.push(array[0]);\n\
    \  oddArr.push(sortedOdd);\n  evenArr.push(sortedEven);\n  evenArr.push(array[array.length\
    \ - 1]);\n  // flatten array\n  finalArr = finalArr.concat.apply(finalArr, oddArr);\n\
    \  finalArr = finalArr.concat.apply(finalArr, evenArr);\n  // return final sorted\
    \ array\n  return finalArr;\n}\n", "  let firstIndex = array[0];\n  let lastIndex\
    \ = array[array.length - 1];\n  if((firstIndex + lastIndex) % 2 === 0){\n    return\
    \ array.sort((a, b) => b - a);\n  } else {\n    return array.sort((a, b) => a\
    \ - b);\n  }\n}\n", "    let sumFirstLast = array[0] + array[array.length - 1];\n\
    \    if (sumFirstLast % 2 !== 0) {\n        return array.sort( (a, b) => a - b);\n\
    \    } else {\n        return array.sort( (a, b) => b - a);\n    }\n}\n\nlet array\
    \ = [1, 2, 3, 4, 5, 6, 7, 8, 9];", "    var result = [];\n    if (array.length\
    \ === 0) {\n        return array;\n    }\n    else {\n        for (var i = 0;\
    \ i < array.length; i++) {\n            result.push(array[i]);\n        }\n  \
    \      if (result[0] + result[result.length - 1] % 2 === 0) {\n            result.sort(function\
    \ (a, b) {\n                return b - a;\n            });\n        }\n      \
    \  else {\n            result.sort(function (a, b) {\n                return a\
    \ - b;\n            });\n        }\n        return result;\n    }\n}", "    let\
    \ mod = (array[0] + array[array.length - 1]) % 2 === 0;\n    let newArray = [...array];\n\
    \    if (mod) {\n        return newArray.sort(function (a, b) {\n            return\
    \ b - a;\n        });\n    } else {\n        return newArray.sort(function (a,\
    \ b) {\n            return a - b;\n        });\n    }\n}\n", "  let first = array[0];\n\
    \  let last = array[array.length - 1];\n  if((first + last) % 2 === 0){\n    return\
    \ array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n",
  "// console.log('[', array[0], array[array.length-1], ']', array[0] + array[array.length-1]);\n\
    if (array[0] + array[array.length-1] % 2 === 0){\n  return array.sort(function(a,\
    \ b){return b-a});\n} else {\n  return array.sort(function(a, b){return a-b});\n\
    }\n}\n\n", "    let sum = array[0] + array[array.length - 1];\n    let newArray\
    \ = array.slice();\n    if (sum % 2 == 0) {\n        newArray.sort((a, b) => b\
    \ - a);\n    } else {\n        newArray.sort((a, b) => a - b);\n    }\n    return\
    \ newArray;\n}", "    let a1 = array.slice(0,array.length/2)\n    let a2 = array.slice(array.length/2)\n\
    \    let sum = a1[0] + a2[a2.length-1]\n    if(sum % 2 === 0){\n      return a1.sort((a,b)\
    \ => b-a).concat(a2.sort((a,b) => b-a))\n    }\n    return a1.sort((a,b) => a-b).concat(a2.sort((a,b)\
    \ => a-b))\n  }", "  if(array.length <= 0) return [];\n  let odd = [];\n  let\
    \ even = [];\n  for(let i = 0; i < array.length; i++){\n    if(array[i] % 2 ===\
    \ 0){\n      even.push(array[i]);\n    } else {\n      odd.push(array[i]);\n \
    \   }\n  }\n  odd.sort((a,b) => a-b);\n  even.sort((a,b) => b-a);\n  console.log(odd);\n\
    \  console.log(even);\n  let output = [];\n  let j = 0;\n  let k = 0;\n  while(output.length\
    \ < array.length){\n    if(array[j] % 2 === 0){\n      output.push(even[k]);\n\
    \      k++;\n    } else {\n      output.push(odd[j]);\n      j++;\n    }\n  }\n\
    \  return output;\n}\n", "    // sum first and last value\n    let sum = array[0]\
    \ + array[array.length - 1];\n    // if sum is odd\n    if (sum % 2 === 1) {\n\
    \        // return array.sort((a, b) => a - b);\n        return array.sort(function(a,\
    \ b) {\n            return a - b;\n        });\n    } else {\n        // return\
    \ array.sort((a, b) => b - a);\n        return array.sort(function(a, b) {\n \
    \           return b - a;\n        });\n    }\n}", "  \n  return array.map((e,i)=>{\n\
    \    \n    if(!((array[0]+array[array.length-1])%2)){\n    \n      return array.sort((a,b)=>b-a)[i];\n\
    \    }\n    else{\n      \n      return array.sort((a,b)=>a-b)[i];\n    }\n  });\n\
    }\n", "    if((array[0] + array[array.length - 1]) % 2 === 0){\n        return\
    \ array.sort(function(a, b){\n            return b - a;\n        });\n    }\n\
    \    return array.sort(function(a, b){\n        return a - b;\n    });\n}\n",
  "  var b=0;\n  if(array.length<2){\n    return array;\n  }\n  else{\n    for(var\
    \ j=0;j<array.length;j++){\n      if(array[j]%2!==0){\n        b+=array[j];\n\
    \      }\n    }\n    if(b%2===0){\n      return array.sort(function(a,b){return\
    \ b-a});\n    }\n    else{\n      return array.sort(function(a,b){return a-b});\n\
    \    }\n  }\n}", "    let first = array[0];\n    let last = array[array.length\
    \ - 1];\n    if ( (first + last) % 2 === 0 ) {\n        return array.sort( (a,\
    \ b) => b - a);\n    } else {\n        return array.sort( (a, b) => a - b);\n\
    \    }\n}\n", "    let first = array[0];\n    let last = array[array.length -\
    \ 1];\n    let sum = first + last;\n    let newArr = array.sort(function(a, b){\n\
    \      return a - b;\n    });\n    if(sum % 2 === 0){\n      return newArr.reverse();\n\
    \    } else {\n      return newArr;\n    }\n  }\n  console.log(sort_array([0,1,2,3,4,5,6,7,8,9]));\
    \ // [1, 3, 5, 7, 9, 8, 6, 4, 2, 0]\n  console.log(sort_array([0,1,2,3,4,5,6,7,8,9,10]));\
    \ // [1, 3, 5, 7, 9, 10, 8, 6, 4, 2, 0]\n  console.log(sort_array([0,1,2,3,4,5,6,7,8,9,10,11]));\
    \ // [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2, 0]\n  \n  // sort_array([0,1,2,3,4,5,6,7,8,9])\
    \ == [1, 3, 5, 7, 9, 8, 6, 4, 2, 0]\n  // sort_array([0,1,2,3,4,5,6,7,8,9,10])\
    \ == [1, 3, 5, 7, 9, 10, 8, 6, 4, 2, 0]\n  // sort_array([0,1,2,3,4,5,6,7,8,9,10,11])\
    \ == [1, 3, 5, 7, 9, 11, 10, 8, 6, 4, 2, 0]", "    let newArray = array.slice();\n\
    \    let firstIndex = array[0];\n    let lastIndex = array[array.length - 1];\n\
    \    let sum = firstIndex + lastIndex;\n    if (sum % 2 !== 0) {\n        newArray.sort(function\
    \ (a, b) {\n            return a - b;\n        });\n    } else {\n        newArray.sort(function\
    \ (a, b) {\n            return b - a;\n        });\n    }\n    return newArray;\n\
    }", "    var idx_sum = array[0] + array[array.length-1];\n    //console.log(idx_sum);\n\
    \    var new_array = [];\n    for(i=0; i<array.length; i++){\n      if(idx_sum\
    \ % 2 == 0){\n        new_array.push(array[i]);\n      }\n      else{\n      \
    \  new_array.unshift(array[i]);\n      }\n    }\n    return new_array;\n  }\n\
    \  console.log(sort_array([1,4,7,2,5,8]));", "    var sorted = array.sort();\n\
    \    var sum = sorted[0] + sorted[sorted.length - 1];\n    if (sum % 2 === 0)\
    \ {\n        return sorted.reverse();\n    }\n    return sorted;\n}", "    let\
    \ sum = array[0] + array[array.length - 1];\n    if(sum % 2 !== 0){\n        return\
    \ array.sort((a, b) => a - b);\n    } else {\n        return array.sort((a, b)\
    \ => b - a);\n    }\n}", "   // sorting algorithm\n}", "    if(array[0] + array[array.length\
    \ - 1] % 2 !== 0){\n        array.sort((a, b) => a - b);\n    } else {\n     \
    \   array.sort((a, b) => b - a);\n    }\n    return array;\n}", "\tif(!array)\
    \ return;\n\tvar odd = [];\n\tvar even = [];\n\tvar res = [];\n\tvar _odd = true;\n\
    \tfor(var i = 0; i < array.length; i++){\n\t\tif(array[i] % 2 == 0){\n\t\t\teven.push(array[i]);\n\
    \t\t}else{\n\t\t\todd.push(array[i]);\n\t\t}\n\t}\n\todd.sort(function(a, b){return\
    \ a - b});\n\teven.sort(function(a, b){return b - a});\n\tfor(var i = 0; i < array.length;\
    \ i++){\n\t\tif(array[i] % 2 == 0){\n\t\t\tres.push(even.shift());\n\t\t}else{\n\
    \t\t\tres.push(odd.shift());\n\t\t}\n\t}\n\treturn res;\n}\nvar a = sort_array([5,\
    \ 4, 3, 2, 1]);\nvar b = sort_array([5, 4, 3, 2, 1, 6]);\nvar c = sort_array([1,\
    \ 2, 3, 4, 5]);", "  const sumOfIndexes = array[0] + array[array.length - 1];\n\
    \  if (sumOfIndexes % 2 === 0) {\n    return array.sort((a, b) => b - a);\n  }\
    \ else {\n    return array.sort((a, b) => a - b);\n  }\n}", "  var first_index\
    \ = array[0];\n  var last_index = array[array.length-1];\n  if ((first_index +\
    \ last_index) % 2 === 0){\n    array.sort(function(a, b){return b-a});\n  }\n\
    \  else {\n    array.sort(function(a, b){return a-b});\n  }\n  return array;\n\
    }\n", "  let clone = array.slice(0);\n  if ((clone[0] + clone[clone.length - 1])\
    \ % 2 === 0) {\n    return clone.sort((a, b) => b - a);\n  } else {\n    return\
    \ clone.sort((a, b) => a - b);\n  }\n}\n", "  var oddSum = [];\n  var evenSum\
    \ = [];\n  var result = [];\n  for(var i = 0; i < array.length; i++) {\n     \
    \ var sum = array[0] + array[array.length - 1];\n      if(sum % 2 !== 0) {\n \
    \         oddSum.push(array[i]);\n          oddSum.sort(function(a, b){return\
    \ a-b});\n          result = oddSum;\n      } else {\n          evenSum.push(array[i]);\n\
    \          evenSum.sort(function(a, b){return b-a});\n          result = evenSum;\n\
    \      }\n  }\n  return result;\n}", "  var y = array.length - 1;\n  var result\
    \ = [];\n  if (array[0] + array[y] % 2 === 0) {\n    result = array.sort(function(a,\
    \ b){\n      return a - b;\n    });\n  } else {\n    result = array.sort(function(a,\
    \ b){\n      return b - a;\n    });\n  }\n  return result;\n}\n", "  if(array.length\
    \ <= 1) return array;\n  let evenArray = [];\n  let oddArray = [];\n  let result\
    \ = [];\n  for(let i = 0; i < array.length; i++){\n    if(array[i] % 2 === 0){\n\
    \      evenArray.push(array[i]);\n    }else{\n      oddArray.push(array[i]);\n\
    \    }\n  }\n  if((array[0] + array[array.length - 1]) % 2 === 0){\n    evenArray.sort((a,b)\
    \ => b - a);\n    oddArray.sort((a,b) => a - b);\n  }else{\n    evenArray.sort((a,b)\
    \ => a - b);\n    oddArray.sort((a,b) => b - a);\n  }\n  for(let i = 0; i < array.length;\
    \ i++){\n    if(array[i] % 2 === 0){\n      result.push(evenArray.shift());\n\
    \    }else{\n      result.push(oddArray.shift());\n    }\n  }\n  return result;\n\
    }\n", "  if(array.length===0) return array;\n  var arr=[];\n  var isEven=(array[0]+array[array.length-1])%2===0;\n\
    \  for(var i=0;i<array.length;i++){\n    var index=isEven?array.length-1-i:i;\n\
    \    arr.push(array[index]);\n  }\n  return arr;\n}", "    let oddSum = 0;\n \
    \   for(let i = 0; i < array.length; i++){\n        oddSum += array[i];\n    }\n\
    \    if(oddSum % 2 !== 0){\n        array.sort((a, b) => a - b);\n    } else {\n\
    \        array.sort((a, b) => b - a);\n    }\n    return array;\n}\n", "    var\
    \ sum = array[0] + array[array.length - 1];\n    var sorted = array.sort(function(a,\
    \ b){\n        return sum % 2 === 0 ? b - a : a - b;\n    });\n    return sorted;\n\
    }\n", "    // write your code here\n    let arr = [...array];\n    for(let i =0;\
    \ i<array.length; i++){\n        for(let j = i+1; j<array.length; j++){\n    \
    \        if(array[i]+array[array.length-1]%2==0){\n                if(array[i]<array[j]){\n\
    \                    let temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \        else if(array[i]+array[array.length-1]%2==1){\n                if(array[i]>array[j]){\n\
    \                    let temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n    }\n    return array;\n}", "    let sum = array[0] + array[array.length\
    \ - 1];\n    if(sum % 2 !== 0){\n        return array.sort((a, b) => a - b);\n\
    \    } else {\n        return array.sort((a, b) => b - a);\n    }\n}\n", "   \
    \ let sorted = []\n    let even = []\n    let odd = []\n    let indexSum = array[0]\
    \ + array[array.length - 1]\n    if (indexSum % 2 === 0) {\n        for (let i\
    \ = 0; i < array.length; i++) {\n            if (array[i] % 2 === 0) {\n     \
    \           even.push(array[i])\n            } else {\n                odd.push(array[i])\n\
    \            }\n        }\n        even.sort(function(a, b){return b-a})\n   \
    \     odd.sort(function(a, b){return a-b})\n        sorted = even.concat(odd)\n\
    \    } else {\n        for (let i = 0; i < array.length; i++) {\n            if\
    \ (array[i] % 2 === 0) {\n                even.push(array[i])\n            } else\
    \ {\n                odd.push(array[i])\n            }\n        }\n        even.sort(function(a,\
    \ b){return a-b})\n        odd.sort(function(a, b){return b-a})\n        sorted\
    \ = odd.concat(even)\n    }\n    return sorted\n}\n", "  let toSort = [...array]\n\
    \  let sum = toSort[0] + toSort[toSort.length - 1]\n  if (sum % 2 === 0) {\n \
    \   toSort.sort((a, b) => b - a)\n  } else {\n    toSort.sort((a, b) => a - b)\n\
    \  }\n  return toSort\n}", "    var odd_sum = 0;\n    var even_sum = 0;\n    if(array.length\
    \ > 0) {\n        odd_sum = array[0] + array[array.length - 1];\n        even_sum\
    \ = array[1] + array[array.length - 2];\n    }\n    if(odd_sum % 2 === 0){\n \
    \       array.sort(function(a, b){return a - b});\n    }\n    else if(even_sum\
    \ % 2 === 0){\n        array.sort(function(a, b){return b - a});\n    }\n    return\
    \ array;\n}\nvar array1 = [1,2,3,4,5,6,7,8,9];\nvar array2 = [1,2,3,4,5,6,7,8,9,10];",
  "    if(array.length === 0) return array;\n    let first_element = array[0];\n \
    \   let last_element = array[array.length - 1];\n    if(first_element + last_element\
    \ % 2 !== 0){\n        return array.sort(function(a, b){return a - b;});\n   \
    \ } else {\n        return array.sort(function(a, b){return b - a;});\n    }\n\
    }\n", "    return array.map((element,index)=>{\n        return element.map((element,index)=>{\n\
    \            return index%2===0;\n        }).sort((a,b)=>{\n            return\
    \ a.reverse().join()-b.reverse().join();\n        });\n    });\n}", "    var newArray\
    \ = array.slice(0);\n    if (newArray[0] + newArray[newArray.length - 1] % 2 ==\
    \ 0) {\n        newArray.sort((a, b) => a - b);\n    }\n    else {\n        newArray.sort((a,\
    \ b) => b - a);\n    }\n    return newArray;\n}", "    let array1 = array.slice();\n\
    \    let sum = array1[0] + array1[array1.length - 1];\n    let isOdd = sum % 2\
    \ != 0;\n    if (isOdd) {\n        array1.sort((a, b) => a - b);\n    } else {\n\
    \        array1.sort((a, b) => b - a);\n    }\n    return array1;\n}\n", "   \
    \ let sum = array[0] + array[array.length - 1];\n    let sorted = array.sort((a,\
    \ b) => {\n        if (sum % 2 === 0) {\n            return b - a;\n        }\
    \ else {\n            return a - b;\n        }\n    });\n    return sorted;\n\
    }\n", "  let tempArray = array.slice(0);\n  let tempArray2 = array.slice(0);\n\
    \  let sum = tempArray[0] + tempArray[tempArray.length - 1];\n  if (sum % 2 !==\
    \ 0) {\n    return tempArray.sort((a, b) => a - b);\n  } else {\n    return tempArray2.sort((a,\
    \ b) => b - a);\n  }\n}", "    var arr = [];\n    var sum = array[0] + array[array.length-1];\n\
    \    if(sum % 2 == 0){\n        arr = array.sort(function(a, b){return b-a});\n\
    \    }\n    else{\n        arr = array.sort(function(a, b){return a-b});\n   \
    \ }\n    return arr;\n}", "  let odd_numbers = [];\n  let even_numbers = [];\n\
    \  let odd_indexes = [];\n  let even_indexes = [];\n  let sum;\n  for(let i =\
    \ 0; i < array.length; i++){\n    if(array[i] % 2 !== 0){\n      odd_numbers.push(array[i]);\n\
    \      odd_indexes.push(i);\n    }else{\n      even_numbers.push(array[i]);\n\
    \      even_indexes.push(i);\n    }\n  }\n  odd_numbers.sort((a,b) => a - b);\n\
    \  even_numbers.sort((a,b) => b - a);\n  let new_array = [];\n  for(let i = 0;\
    \ i < array.length; i++){\n    if(odd_indexes.includes(i)){\n      new_array.push(odd_numbers.shift());\n\
    \    }else{\n      new_array.push(even_numbers.shift());\n    }\n  }\n  sum =\
    \ array[0] + array[array.length - 1];\n  return sum % 2 === 0 ? new_array : new_array.reverse();\n\
    }", "    let sum = array[0] + array[array.length - 1];\n    let isOdd = sum %\
    \ 2 == 1;\n    return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b)\
    \ => b - a);\n}", "  const odd = array.filter((x) => x % 2).sort((a,b) => a -\
    \ b);\n  const even = array.filter((x) => x % 2 === 0).sort((a,b) => b - a);\n\
    \  return array.map((x) => x % 2 ? odd.shift() : even.shift());\n}\n", "    var\
    \ sum = array[0] + array[array.length - 1];\n    var newArr = array.sort((a, b)\
    \ => {\n        if (sum % 2 === 0) {\n            return b - a;\n        } else\
    \ {\n            return a - b;\n        }\n    });\n    return newArr;\n}", " \
    \   let sum = array[0] + array[array.length - 1];\n    let counter = 0;\n    let\
    \ newArr = [];\n    if(sum % 2 === 0){\n        for(let i = array.length - 1;\
    \ i >= 0; i--){\n            newArr[counter] = array[i];\n            counter++;\n\
    \        }\n    }else{\n        for(let i = 0; i < array.length; i++){\n     \
    \       newArr[counter] = array[i];\n            counter++;\n        }\n    }\n\
    \    return newArr;\n}", "    var left = array[0];\n    var right = array[array.length-1];\n\
    \    var sum = left + right;\n    var result = [];\n    if(sum % 2 == 0){\n  \
    \      //the sum is even\n        for(var i = 0; i < array.length; i++){\n   \
    \         result.push(array[i]);\n        }\n        result.sort(function(a, b){return\
    \ b-a});\n    }\n    else{\n        //the sum is odd\n        for(var i = 0; i\
    \ < array.length; i++){\n            result.push(array[i]);\n        }\n     \
    \   result.sort(function(a, b){return a-b});\n    }\n    return result;\n}", " \
    \   const sum = array[0] + array[array.length - 1];\n    const isEven = sum %\
    \ 2 === 0;\n    if (isEven) {\n        return array.sort((a, b) => b - a);\n \
    \   }\n    return array.sort((a, b) => a - b);\n}\n", "\tif (array === null ||\
    \ array.length === 0) {\n\t\treturn [];\n\t}\n\tlet is_even = array[0] + array[array.length\
    \ - 1] % 2 === 0;\n\tif (is_even) {\n\t\treturn array.sort((a, b) => b - a);\n\
    \t} else {\n\t\treturn array.sort((a, b) => a - b);\n\t}\n}", "  let s = []\n\
    \  let even = []\n  let odd = []\n  let string = ''\n  let sum = array[0] + array[array.length\
    \ - 1]\n  if(sum % 2 == 0){\n    for(let i = 0; i < array.length; i++){\n    \
    \  if(array[i] % 2 == 0){\n        even.push(array[i])\n      }\n      else{\n\
    \        odd.push(array[i])\n      }\n    }\n    for(let i = 0; i < even.length;\
    \ i++){\n      for(let j = i + 1; j < even.length; j++){\n        if(even[i] <\
    \ even[j]){\n          let tmp = even[i]\n          even[i] = even[j]\n      \
    \    even[j] = tmp\n        }\n      }\n    }\n    for(let i = 0; i < odd.length;\
    \ i++){\n      for(let j = i + 1; j < odd.length; j++){\n        if(odd[i] < odd[j]){\n\
    \          let tmp = odd[i]\n          odd[i] = odd[j]\n          odd[j] = tmp\n\
    \        }\n      }\n    }\n    for(let i = 0; i < even.length; i++){\n      s.push(even[i])\n\
    \    }\n    for(let i = 0; i < odd.length; i++){\n      s.push(odd[i])\n    }\n\
    \    for(let i = 0; i < s.length; i++){\n      string += s[i] + ' '\n    }\n \
    \   return string\n  }\n  else{\n    for(let i = 0; i < array.length; i++){\n\
    \      if(array[i] % 2 == 0){\n        even.push(array[i])\n      }\n      else{\n\
    \        odd.push(array[i])\n      }\n    }\n    for(let i = 0; i < even.length;\
    \ i++){\n      for(let j = i + 1; j < even.length; j++){\n        if(even[i] >\
    \ even[", "    if(array.length<=1){\n        return array;\n    }\n    var left\
    \ = [];\n    var right = [];\n    var pivot = array[0];\n    for(var i = 1; i\
    \ < array.length; i++){\n        if(array[i] < pivot){\n            left.push(array[i]);\n\
    \        }\n        else{\n            right.push(array[i]);\n        }\n    }\n\
    \    return sort_array(left).concat(pivot, sort_array(right));\n}\n", "    let\
    \ temp = [];\n    let odd = [];\n    let even = [];\n    if((array[0] + array[array.length\
    \ - 1]) % 2 == 0){\n        for(let i = 0; i < array.length; i++){\n         \
    \   if(array[i] % 2 != 0){\n                odd.push(array[i]);\n            }else{\n\
    \                even.push(array[i]);\n            }\n        }\n        even.sort(function(a,\
    \ b){return b - a});\n        odd.sort(function(a, b){return a - b});\n      \
    \  for(let j = 0; j < array.length; j++){\n            if(array[j] % 2 != 0){\n\
    \                temp.push(odd.shift());\n            }else{\n               \
    \ temp.push(even.shift());\n            }\n        }\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            if(array[i] % 2 != 0){\n       \
    \         odd.push(array[i]);\n            }else{\n                even.push(array[i]);\n\
    \            }\n        }\n        even.sort(function(a, b){return a - b});\n\
    \        odd.sort(function(a, b){return b - a});\n        for(let j = 0; j < array.length;\
    \ j++){\n            if(array[j] % 2 != 0){\n                temp.push(odd.shift());\n\
    \            }else{\n                temp.push(even.shift());\n            }\n\
    \        }\n    }\n    return temp;\n}", "  let result = [];\n  let sum = array[0]\
    \ + array[array.length - 1];\n  if (sum % 2 == 0) {\n    result = array.sort((a,\
    \ b) => a - b).reverse();\n  } else {\n    result = array.sort((a, b) => a - b);\n\
    \  }\n  return result;\n}", "    let arr = array.slice();\n    let sum = array[0]\
    \ + array[array.length - 1];\n    if (sum % 2 === 0) {\n        arr.sort((a, b)\
    \ => b - a);\n    } else {\n        arr.sort((a, b) => a - b);\n    }\n    return\
    \ arr;\n}\n", "    let sum = array[0] + array[array.length - 1];\n    if(sum %\
    \ 2 === 0){\n        return array.sort(function(a, b){return b - a});\n    }\n\
    \    else {\n        return array.sort(function(a, b){return a - b});\n    }\n\
    }", "    let firstIndex = array[0];\n    let lastIndex = array[array.length -\
    \ 1];\n    let newArray = [];\n    let sum = firstIndex + lastIndex;\n    if(sum\
    \ % 2 !== 0){\n        for(let i = 0; i < array.length; i++){\n            for(let\
    \ j = 0; j < array.length; j++){\n                if(array[i] > array[j]){\n \
    \                   let temp = array[i];\n                    array[i] = array[j];\n\
    \                    array[j] = temp;\n                }\n            }\n    \
    \    }\n        newArray = array;\n    }else{\n        for(let i = 0; i < array.length;\
    \ i++){\n            for(let j = 0; j < array.length; j++){\n                if(array[i]\
    \ < array[j]){\n                    let temp = array[i];\n                   \
    \ array[i] = array[j];\n                    array[j] = temp;\n               \
    \ }\n            }\n        }\n        newArray = array;\n    }\n    return newArray;\n\
    }", "  return array.map((item,index)=>{\n    if(index%2===0){\n      let odd=array.filter(item=>item%2!==0).sort((a,b)=>a-b);\n\
    \      return odd.shift();\n    }\n    else{\n      let even=array.filter(item=>item%2===0).sort((a,b)=>b-a);\n\
    \      return even.shift();\n    }\n  })\n}", "  // check for odd sum and sort\
    \ in ascending order.\n  if((array[0] + array[array.length - 1]) % 2 !== 0){\n\
    \    array.sort(function(a, b){\n      return a - b;\n    });\n  }\n  // check\
    \ for even sum and sort in descending order.\n  else if((array[0] + array[array.length\
    \ - 1]) % 2 === 0){\n    array.sort(function(a, b){\n      return b - a;\n   \
    \ });\n  }\n  return array;\n}\n", "    var arr = array;\n    var sum = array[0]\
    \ + array[array.length-1];\n    if(sum % 2 == 0){\n       return arr.sort(function(a,\
    \ b){return b-a});\n    }\n    else{\n       return arr.sort(function(a, b){return\
    \ a-b});\n    }\n}", "    //  code goes here\n    let sum = array[0] + array[array.length\
    \ - 1];\n    if (sum % 2 == 0) {\n        return array.sort((a, b) => b - a);\n\
    \    } else {\n        return array.sort((a, b) => a - b);\n    }\n}\n", "  if(array.length\
    \ == 0){\n    return array;\n  }\n  let sum = array[0] + array[array.length -\
    \ 1];\n  let even = sum % 2 == 0;\n  let arraySorted = array.sort(function(a,\
    \ b){\n    if(even){\n      return b - a;\n    }\n    return a - b;\n  });\n \
    \ return arraySorted;\n}\n", "    // let newArr = [...array];\n    let newArr\
    \ = array.slice(0);\n    let sum = array[0] + array[array.length - 1];\n    //\
    \ console.log(sum);\n    // console.log(newArr);\n    if (sum % 2 === 0) {\n \
    \       newArr.sort(function (a, b) {\n            return b - a;\n        });\n\
    \    } else {\n        newArr.sort(function (a, b) {\n            return a - b;\n\
    \        });\n    }\n    return newArr;\n}", "    if(array.length === 0){\n  \
    \      return array;\n    }\n    let first = array[0];\n    let last = array[array.length\
    \ - 1];\n    let sum = first + last;\n    if(sum % 2 === 0){\n        array.sort((a,\
    \ b) => {\n            return b - a;\n        });\n    }else{\n        array.sort((a,\
    \ b) => {\n            return a - b;\n        });\n    }\n    return array;\n}",
  "    let sum=array[0]+array[array.length-1];\n    if(sum%2===0){\n        return\
    \ array.sort((a,b)=>a-b)\n    }else{\n        return array.sort((a,b)=>b-a)\n\
    \    }\n}\n", "    return array.sort((a,b)=>(a+b)%2-0.5);\n}", "  let sum = array[0]\
    \ + array[array.length - 1];\n  if (sum % 2 !== 0) {\n    return array.sort(function(a,\
    \ b) {\n      return a - b;\n    });\n  } else {\n    return array.sort(function(a,\
    \ b) {\n      return b - a;\n    });\n  }\n}", "    let arr = [];\n    let sum\
    \ = array[0] + array[array.length - 1];\n    if(sum % 2 !== 0){\n        for(let\
    \ i = 0; i < array.length; i++){\n            for(let j = 0; j < array.length;\
    \ j++){\n                if(array[i] > array[j]){\n                    let temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ = temp;\n                }\n            }\n        }\n    }else{\n        for(let\
    \ i = 0; i < array.length; i++){\n            for(let j = 0; j < array.length;\
    \ j++){\n                if(array[i] < array[j]){\n                    let temp\
    \ = array[i];\n                    array[i] = array[j];\n                    array[j]\
    \ = temp;\n                }\n            }\n        }\n    }\n    return array;\n\
    }", "    let sums = array.reduce((a, b) => a + b, 0);\n    if (sums % 2 === 0)\
    \ {\n        array.sort((a, b) => b - a);\n    } else {\n        array.sort((a,\
    \ b) => a - b);\n    }\n    return array;\n}", "    var sum = array[0] + array[array.length\
    \ - 1];\n    var sorted = array.sort(function(a, b){\n        return a - b;\n\
    \    });\n    if(sum % 2 == 0){\n        return sorted.reverse();\n    } else\
    \ {\n        return sorted;\n    }\n}", "  let sum = array[0] + array[array.length\
    \ - 1];\n  if (sum % 2 !== 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}", "    let sum=array[0]+array[array.length-1];\n\
    \    if(sum%2!==0){\n        return array.sort((a,b)=>a-b);\n    }else{\n    \
    \    return array.sort((a,b)=>b-a);\n    }\n}", "    let sum = 0;\n    for(let\
    \ i = 0; i < array.length; i++){\n        sum += array[i];\n    }\n    let sortedArray\
    \ = array.sort(function(a, b){\n        return a - b;\n    });\n    if(sum % 2\
    \ === 0){\n        sortedArray.reverse();\n    }\n    return sortedArray;\n}\n",
  "    let sum = array[0] + array[array.length - 1];\n    let even = (sum % 2 ===\
    \ 0);\n    let firstHalf = array.slice(0, array.length / 2);\n    let lastHalf\
    \ = array.slice(array.length / 2);\n    let result = [];\n    if (even) {\n  \
    \      firstHalf.sort((a, b) => b - a);\n        lastHalf.sort((a, b) => b - a);\n\
    \    } else {\n        firstHalf.sort((a, b) => a - b);\n        lastHalf.sort((a,\
    \ b) => a - b);\n    }\n    for (let i = 0; i < firstHalf.length; i++) {\n   \
    \     result.push(firstHalf[i]);\n        result.push(lastHalf[i]);\n    }\n \
    \   return result;\n}\n", "    let sum=array[0]+array[array.length-1];\n    if(sum%2==0){\n\
    \        return array.sort(function(a,b){\n            return b-a;\n        });\n\
    \    }\n    else{\n        return array.sort(function(a,b){\n            return\
    \ a-b;\n        });\n    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

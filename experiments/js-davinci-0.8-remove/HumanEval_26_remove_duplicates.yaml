name: HumanEval_26_remove_duplicates
language: js
prompt: "//From a list of integers, remove all elements that occur more than once.\n\
  // Keep order of elements left the same as in the input.\nfunction remove_duplicates(numbers){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
  \ 4, 5]);\n}\n\ntest();"
completions: ["\tvar ret = [];\n\tnumbers.forEach(function(number){\n\t\tif (numbers.indexOf(number)\
    \ === numbers.lastIndexOf(number)) {\n\t\t\tret.push(number);\n\t\t}\n\t});\n\t\
    return ret;\n}", "    return Array.from(new Set(numbers));\n}\n\n", "    var result\
    \ = [];\n    var obj = {};\n    numbers.forEach(number => {\n        if(obj[number]\
    \ === undefined){\n            obj[number] = 1;\n        }else{\n            obj[number]++;\n\
    \        }\n    });\n    numbers.forEach(number => {\n        if(obj[number] ===\
    \ 1){\n            result.push(number);\n        }\n    });\n    return result;\n\
    }", "    var arr = []\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers.indexOf(numbers[i])\
    \ == numbers.lastIndexOf(numbers[i])){\n            arr.push(numbers[i])\n   \
    \     }\n    }\n    return arr\n}\n", "  return numbers.filter((value,index)=>{\n\
    \    return numbers.indexOf(value)==index;\n  });\n}", "    var numbers = [1,\
    \ 2, 2, 4, 5, 4, 7, 8, 7, 3, 6];\n    var result = [];\n    for (var i = 0; i\
    \ < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let result = [...new Set(numbers)];\n    console.log(result);\n   \
    \ return result;\n}\nremove_duplicates([1,2,2,3,3,4,5,5,6,6,7,8,8,9,9,9,10]);",
  "    return [...new Set(numbers)];\n}\n", "    var result = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        if(numbers.indexOf(numbers[i]) === numbers.lastIndexOf(numbers[i])){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    var i, size = numbers.length,\n        temp = [],\n        found =\
    \ false;\n    for(i = 0; i < size; i++){\n        temp = numbers.slice(i+1);\n\
    \        if(temp.indexOf(numbers[i]) == -1){\n            // n is not found in\
    \ temp array\n            found = false;\n        }else{\n            found =\
    \ true;\n        }\n        if(!found){\n            // push the element to final\
    \ array\n            numbers.push(numbers[i]);\n        }\n    }\n    // remove\
    \ first n elements which we added to the array\n    numbers.splice(0, size);\n\
    \    return numbers;\n}\n", "    let result = [];\n    for(let n of numbers){\n\
    \        if(result.indexOf(n) == -1){\n            result.push(n);\n        }\n\
    \    }\n    return result;\n}", "    var ans = [];\n    numbers.forEach(function(num)\
    \ {\n        if (ans.indexOf(num) === -1) {\n            ans.push(num);\n    \
    \    }\n    });\n    return ans;\n}\n\n", "  var res = [];\n  numbers.forEach(function(n){\n\
    \    if(res.indexOf(n)==-1){\n      res.push(n);\n    }\n  });\n  return res;\n\
    }\n\nmodule.exports = {\n  order_by_age: order_by_age,\n  add_up: add_up,\n  remove_duplicates:\
    \ remove_duplicates\n}", "    var idx = 0;\n    var len = numbers.length;\n  \
    \  var elem;\n    var dict = {};\n    while(idx < len){\n        elem = numbers[idx];\n\
    \        if(dict[elem]===undefined){\n            dict[elem] = elem;\n       \
    \ }else{\n            numbers.splice(idx,1);\n            len--;\n        }\n\
    \        idx++;\n    }\n    return numbers;\n}\n\nmodule.exports = remove_duplicates;",
  "    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "  var numbers2 = [];\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers2.indexOf(numbers[i]) == -1) {\n      numbers2.push(numbers[i]);\n\
    \    }\n  }\n  return numbers2;\n}\n\n", "  let uniqueArray = [];\n  let originalLength\
    \ = numbers.length;\n  for (let i = 0; i < originalLength; i++) {\n    let arrayLength\
    \ = uniqueArray.length;\n    let found = false;\n    for (let j = 0; j < arrayLength;\
    \ j++) {\n      if (numbers[i] === uniqueArray[j]) {\n        found = true;\n\
    \      }\n    }\n    if (!found) {\n      uniqueArray.push(numbers[i]);\n    }\n\
    \  }\n  return uniqueArray;\n}\n", "    let newArray = [];\n    for(let i = 0;\
    \ i < numbers.length; i++){\n        if(numbers.indexOf(numbers[i]) == numbers.lastIndexOf(numbers[i])){\n\
    \            newArray.push(numbers[i]);\n        }\n    }\n    return newArray;\n\
    }", "\tlet result = [];\n\tlet frequency = {};\n\tfor(let i = 0; i < numbers.length;\
    \ i++){\n\t\tif(frequency[numbers[i]]){\n\t\t\tfrequency[numbers[i]]++;\n\t\t\
    }else{\n\t\t\tfrequency[numbers[i]] = 1;\n\t\t}\n\t}\n\tfor(let key in frequency){\n\
    \t\tif(frequency[key] == 1){\n\t\t\tresult.push(parseInt(key));\n\t\t}\n\t}\n\t\
    return result;\n}\n", "    var filtered = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        var temp = numbers[i];\n        var isUnique = true;\n      \
    \  for(var j = 0; j < filtered.length; j++){\n            if(temp == filtered[j]){\n\
    \                isUnique = false;\n            }\n        }\n        if(isUnique){\n\
    \            filtered.push(temp);\n        }\n    }\n    return filtered;\n}\n\
    \nmodule.exports = remove_duplicates;", "    var result = [];\n    for(var i =\
    \ 0; i < numbers.length; i++){\n        var isFound = false;\n        for(var\
    \ j = 0; j < result.length; j++){\n            if(numbers[i] == result[j]){\n\
    \                isFound = true;\n                break;\n            }\n    \
    \    }\n        if(!isFound){\n            result.push(numbers[i]);\n        }\n\
    \    }\n    return result;\n}\n", "  var new_arr = [];\n  numbers.forEach(function(number)\
    \ {\n    if (new_arr.indexOf(number) === -1) {\n      new_arr.push(number);\n\
    \    }\n  });\n  return new_arr;\n}\n", "  let uniqueNumbers = [];\n  for (let\
    \ number of numbers) {\n    if (!uniqueNumbers.includes(number)) {\n      uniqueNumbers.push(number);\n\
    \    }\n  }\n  return uniqueNumbers;\n}\n", "  let uniqueNum = [];\n  for(let\
    \ i = 0; i < numbers.length; i++){\n    if(uniqueNum.indexOf(numbers[i]) === -1){\n\
    \      uniqueNum.push(numbers[i]);\n    }\n  }\n  return uniqueNum;\n}", "   \
    \ let set = new Set();\n    let result = [];\n    numbers.forEach(function(n){\n\
    \        if(!set.has(n)){\n            set.add(n);\n            result.push(n);\n\
    \        }\n    });\n    return result;\n}\n", "    var unique = []\n    for (var\
    \ i = 0; i < numbers.length; i++){\n        if (unique.indexOf(numbers[i]) ==\
    \ -1){\n            unique.push(numbers[i])\n        }\n    }\n    return unique\n\
    }\n\nvar num = [4,5,4,5,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5",
  "  var result = [];\n  for (var i = 0; i < numbers.length; i++) {\n    if (result.indexOf(numbers[i])\
    \ === -1) {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n",
  "  let newArray = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (!newArray.includes(numbers[i]))\
    \ {\n      newArray.push(numbers[i]);\n    }\n  }\n  return newArray;\n}\n\n",
  "  // Return new list with duplicates removed\n  return numbers.filter((item, index)\
    \ => numbers.indexOf(item) == index);\n}\n", "    var seen = {};\n    var out\
    \ = [];\n    var len = numbers.length;\n    var j = 0;\n    for(var i = 0; i <\
    \ len; i++) {\n         var item = numbers[i];\n         if(seen[item] !== 1)\
    \ {\n               seen[item] = 1;\n               out[j++] = item;\n       \
    \  }\n    }\n    return out;\n}", "    let result = []\n    let arr = numbers.map(x\
    \ => {\n        return Math.abs(x)\n    })\n    let set = new Set(arr)\n    let\
    \ setArr = Array.from(set)\n    setArr.forEach(x => {\n        if(numbers.includes(x)){\n\
    \            result.push(x)\n        }\n        else{\n            result.push(-x)\n\
    \        }\n    })\n    return result\n}\n", "    return numbers.filter((item,\
    \ pos) => numbers.indexOf(item) == pos);\n}", "    let newNumbers = [];\n    for(i\
    \ = 0; i < numbers.length; i++){\n        if(newNumbers.indexOf(numbers[i]) ===\
    \ -1){\n            newNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ newNumbers;\n}\n", "    return numbers.filter((number, index) => {\n       \
    \ return numbers.indexOf(number) === index;\n    });\n}\n", "    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ == -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\nremove_duplicates([1,2,2,4,4,4,7,8,9,9]) // [1, 2, 4, 7, 8, 9]\n",
  "  \n  // Create a new array\n  var result = [];\n  \n  // Loop through the input\
    \ array\n  for (var i = 0; i < numbers.length; i++) {\n    \n    // Get the element\
    \ at that index\n    var current_number = numbers[i];\n    \n    // Check if the\
    \ result array contains the current number\n    var contains = false;\n    for\
    \ (var j = 0; j < result.length; j++) {\n      if (result[j] == current_number)\
    \ {\n        contains = true;\n        break;\n      }\n    }\n    \n    // If\
    \ the current number is not in the result array, add it\n    if (!contains) {\n\
    \      result.push(current_number);\n    }\n  }\n  \n  // Return the result array\n\
    \  return result;\n}\n", "    var list = [];\n    numbers.forEach(function(num){\n\
    \        if (numbers.indexOf(num) === numbers.lastIndexOf(num)){\n           \
    \ list.push(num);\n        }\n    });\n    return list;\n}\n", "  var unique =\
    \ [];\n  for (var i = 0; i < numbers.length; i++) {\n    if (unique.indexOf(numbers[i])\
    \ == -1) {\n      unique.push(numbers[i]);\n    }\n  }\n  return unique;\n}\n",
  "    var unique = [];\n    $.each(numbers, function(i, el){\n        if($.inArray(el,\
    \ unique) === -1) unique.push(el);\n    });\n    return unique;\n}\n", "    return\
    \ numbers.filter((num, ind, arr) => numbers.indexOf(num) === ind);\n}\n", "  \
    \  var newNumbers = [];\n    var counter = 0;\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        for(var k = 0; k < numbers.length; k++){\n            if(numbers[i]\
    \ == numbers[k]){\n                counter++;\n            }\n        }\n    \
    \    if(counter == 1){\n            newNumbers.push(numbers[i]);\n        }\n\
    \        counter = 0;\n    }\n    return newNumbers;\n}", "  var newArray = [];\n\
    \  for(var i = 0; i < numbers.length; i++){\n    if(newArray.indexOf(numbers[i])\
    \ === -1){\n      newArray.push(numbers[i]);\n    }\n  }\n  return newArray;\n\
    }", "  if (numbers.length < 2) return numbers;\n  var map = {};\n  var res = [];\n\
    \  for (var i = 0; i < numbers.length; i++) {\n    var e = numbers[i];\n    if\
    \ (!map[e]) {\n      map[e] = 1;\n      res.push(e);\n    }\n  }\n  return res;\n\
    }", "    // TODO: implement\n    return numbers.filter((item, index) => numbers.indexOf(item)\
    \ === index);\n}", "    numbers = [...new Set(numbers)];\n    return numbers;\n\
    }\n\n", "    var set = new Set(numbers);\n    return Array.from(set);\n}", " \
    \ var uniques = [];\n  for (var i = 0; i < numbers.length; i++) {\n    if (numbers.indexOf(numbers[i])\
    \ == numbers.lastIndexOf(numbers[i])) {\n      uniques.push(numbers[i]);\n   \
    \ }\n  }\n  return uniques;\n}\n", "    let unique = [];\n    for (i=0; i<numbers.length;\
    \ i++){\n        if (unique.indexOf(numbers[i]) == -1){\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "  var arr = [];\n  var lower = numbers.slice().sort(function(a,\
    \ b){return a-b});\n  var upper = numbers.slice().sort(function(a, b){return b-a});\n\
    \  for (var i = 0; i < numbers.length; i++){\n    if (lower[i] === lower[i+1]){\n\
    \      arr.push(lower[i]);\n    }\n    if (upper[i] === upper[i+1]){\n      arr.push(upper[i]);\n\
    \    }\n  }\n  for (var j = 0; j < arr.length; j++){\n    for (var k = 0; k <\
    \ numbers.length; k++){\n      if (arr[j] === numbers[k]){\n        numbers.splice(k,\
    \ 1);\n      }\n    }\n  }\n  return numbers;\n}", "  var a = numbers.filter(function(v,\
    \ i, a) {\n    return a.indexOf(v) === i;\n  });\n  return a;\n}\n", "    if (numbers.length\
    \ > 1) {\n        let duplicate = false;\n        let newArr = [];\n        for\
    \ (let i = 0; i < numbers.length; i++) {\n            for (let j = i + 1; j <\
    \ numbers.length; j++) {\n                if (numbers[i] === numbers[j]) {\n \
    \                   duplicate = true;\n                }\n            }\n    \
    \        if (!duplicate) {\n                newArr.push(numbers[i]);\n       \
    \     }\n            duplicate = false;\n        }\n        return newArr;\n \
    \   }\n    return numbers;\n}\n", "    let unique = [...new Set(numbers)];\n \
    \   return unique;\n}\n", "  var returnList = [];\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    if(returnList.indexOf(numbers[i]) == -1){\n      returnList.push(numbers[i]);\n\
    \    }\n  }\n  return returnList;\n}\n", "  var unique = [];\n  var number;\n\
    \  var index;\n  var i = 0;\n  while(i < numbers.length){\n    number = numbers[i];\n\
    \    index = numbers.indexOf(number, i + 1);\n    if(index === -1){\n      unique.push(number);\n\
    \    }\n    i++;\n  }\n  return unique;\n}\n", "    var temp = [], duplicate;\n\
    \    for(i = 0; i < numbers.length; i++){\n        duplicate = false;\n      \
    \  for(j = 0; j < temp.length; j++){\n            if(numbers[i] == temp[j]){\n\
    \                duplicate = true;\n            }\n        }\n        if(!duplicate){\n\
    \            temp.push(numbers[i]);\n        }\n    }\n    return temp;\n}\n",
  "    let newArray = [];\n    numbers.forEach(function(number) {\n        if (newArray.indexOf(number)\
    \ === -1) {\n            newArray.push(number);\n        }\n    });\n    return\
    \ newArray;\n}", "  let unique = []\n  for (i=0; i<numbers.length; i++){\n   \
    \ if (numbers.indexOf(numbers[i]) == numbers.lastIndexOf(numbers[i])){\n     \
    \ unique.push(numbers[i])\n    }\n  }\n  return unique\n}\n\n", "  var no_duplicates\
    \ = []\n  for (var i = 0; i < numbers.length; i++) {\n    if (no_duplicates.indexOf(numbers[i])\
    \ == -1) {\n      no_duplicates.push(numbers[i])\n    }\n  }\n  return no_duplicates\n\
    }", "    var array = [];\n    var array1 = [];\n    var array2 = [];\n    var\
    \ duplicates = [];\n    var index;\n    for(var i = 0; i < numbers.length; i++){\n\
    \        if(array.indexOf(numbers[i]) == -1){\n            array.push(numbers[i]);\n\
    \        }\n        else{\n            array1.push(numbers[i]);\n        }\n \
    \   }\n    for(var i = 0; i < array1.length; i++){\n        if(array2.indexOf(array1[i])\
    \ == -1){\n            array2.push(array1[i]);\n        }\n    }\n    for(var\
    \ i = 0; i < array2.length; i++){\n        index = numbers.indexOf(array2[i]);\n\
    \        while(index != -1){\n            numbers.splice(index, 1);\n        \
    \    index = numbers.indexOf(array2[i]);\n        }\n    }\n    return numbers;\n\
    }", "  let newArr = [];\n  let numObj = {};\n  for(let i = 0; i < numbers.length;\
    \ i++){\n    numObj[numbers[i]] = (numObj[numbers[i]] || 0) + 1;\n  }\n  for(let\
    \ key in numObj){\n    if(numObj[key] === 1){\n      newArr.push(parseInt(key));\n\
    \    }\n  }\n  return newArr;\n}\n", "  // your code here\n  var arr=[];\n  numbers.forEach(function(number,index){\n\
    \    var num = number;\n    if(numbers.indexOf(num) == index && numbers.lastIndexOf(num)\
    \ == index){\n      arr.push(num);\n    }\n  });\n  return arr;\n}\n", "    var\
    \ result = [];\n    for(var i = 0; i < numbers.length; i++){\n        var found\
    \ = false;\n        for(var j = 0; j < result.length; j++){\n            if(numbers[i]\
    \ == result[j]){\n                found = true;\n                break;\n    \
    \        }\n        }\n        if(!found){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  return numbers.filter((x, i, a)\
    \ => a.indexOf(x) == i);\n}\n", "  var uniqueNumbers = [];\n  var unique = true;\n\
    \  for(var i = 0; i < numbers.length; i++){\n    for(var j = 0; j < uniqueNumbers.length;\
    \ j++){\n      if(numbers[i] == uniqueNumbers[j]){\n        unique = false;\n\
    \      }\n    }\n    if(unique){\n      uniqueNumbers.push(numbers[i]);\n    }\n\
    \    unique = true;\n  }\n  return uniqueNumbers;\n}\nvar numbers = [4,4,4,4,5,6,5,6,7,6,3,3,5,6,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,",
  "    for(var i = numbers.length - 1; i >= 0; i--){\n        for(var j = numbers.length\
    \ - 2; j >= 0; j--){\n            if(numbers[i] == numbers[j]){\n            \
    \    numbers.splice(i, 1);\n            }\n        }\n    }\n    return numbers;\n\
    }\n", "    // TODO: return a new list which contains only the unique numbers left\n\
    \    var result = [];\n    var index = 0;\n    for (var i = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result[index]\
    \ = numbers[i];\n            index++;\n        }\n    }\n    return result;\n\
    }\n", "    var unique = [];\n    var seen = {};\n    numbers.forEach(function(number){\n\
    \        if(!seen[number]){\n            unique.push(number);\n            seen[number]\
    \ = true;\n        }\n    });\n    return unique;\n}\n", "  var output = [];\n\
    \  for (var i = 0; i < numbers.length; i++) {\n    var currentNum = numbers[i];\n\
    \    if (numbers.lastIndexOf(currentNum) === i && output.indexOf(currentNum) <\
    \ 0) {\n      output.push(currentNum);\n    }\n  }\n  return output;\n}\n", " \
    \ var result = [];\n  numbers.forEach(function(number) {\n    if (numbers.indexOf(number)\
    \ === numbers.lastIndexOf(number)) {\n      result.push(number);\n    }\n  });\n\
    \  return result;\n}\n", "\tif (numbers.length == 0) return numbers;\n\tlet noDupes\
    \ = [];\n\tlet elements = {};\n\tfor (let i = 0; i < numbers.length; i++){\n\t\
    \tlet n = numbers[i];\n\t\tif (elements[n] == null){\n\t\t\telements[n] = 1;\n\
    \t\t\tnoDupes.push(n);\n\t\t}\n\t}\n\treturn noDupes;\n}", "    var new_array\
    \ = numbers.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n\
    \    return new_array;\n}", "    let uniques = []\n    numbers.forEach(num =>\
    \ {\n        if(uniques.indexOf(num) === -1){\n            uniques.push(num)\n\
    \        }\n    })\n    return uniques\n}\n", "  for(let i = 0; i < numbers.length;\
    \ i++){\n    for(let j = i + 1; j < numbers.length; j++){\n      if(numbers[i]\
    \ === numbers[j]){\n        numbers.splice(j, 1);\n        j--;\n      }\n   \
    \ }\n  }\n  return numbers;\n}\n", "\tvar arr = numbers.filter(function(item,\
    \ index, inputArray) {\n    \treturn inputArray.indexOf(item) == index;\n\t});\n\
    \treturn arr;\n}\n", "    var unique_array = [];\n    for(var i = 0;i < numbers.length;\
    \ i++){\n        if(unique_array.indexOf(numbers[i]) == -1){\n            unique_array.push(numbers[i]);\n\
    \        }\n    }\n    return unique_array;\n}", "    var newArr = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(newArr.indexOf(numbers[i]) ===\
    \ -1){\n            newArr.push(numbers[i]);\n        }\n    }\n    return newArr;\n\
    }", "    let unique = [];\n    let dupes = [];\n    numbers.forEach(function(num){\n\
    \        if(unique.includes(num)){\n            dupes.push(num);\n        }\n\
    \        else{\n            unique.push(num);\n        }\n    });\n    numbers.forEach(function(num){\n\
    \        if(dupes.includes(num)){\n            numbers.splice(numbers.indexOf(num),\
    \ 1);\n        }\n    });\n    return numbers;\n}", "    var array2 = [];\n  \
    \  for(var i = 0; i < numbers.length; i++){\n        if(!array2.includes(numbers[i])){\n\
    \            array2.push(numbers[i]);\n        }\n    }\n    return array2;\n\
    }\n", "    return numbers.filter((item, index) => {\n        return numbers.indexOf(item)\
    \ === index;\n    });\n}\n", "\tvar uniques = [];\n\tvar temp = {};\n\tfor(var\
    \ i=0; i<numbers.length; i++){\n\t\ttemp[numbers[i]] = numbers[i];\n\t}\n\tfor(key\
    \ in temp){\n\t\tuniques.push(temp[key]);\n\t}\n\treturn uniques;\n}\n", "  var\
    \ unique = [];\n  var numbers_copy = numbers.slice();\n  while(numbers_copy.length){\n\
    \    var num = numbers_copy.pop();\n    if(numbers_copy.indexOf(num) === -1){\n\
    \      unique.push(num);\n    }\n  }\n  return unique;\n}\n", "\tvar uniq = numbers.reduce(function(a,b){\n\
    \t\tif (a.indexOf(b) < 0 ) a.push(b);\n\t\treturn a;\n\t},[]);\n\treturn uniq;\n\
    }\n", "    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n", "    var n = numbers.length;\n    var output = [];\n    var duplicates\
    \ = {};\n    var num;\n    while(n--){\n        num = numbers[n];\n        if(!duplicates[num]){\n\
    \            duplicates[num] = 1;\n            output.push(num);\n        }\n\
    \    }\n    return output;\n}\nremove_duplicates([1, 2, 2, 2, 3, 2, 4, 2]);\n",
  "  const result = [];\n  const unique = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (unique.indexOf(numbers[i]) === -1) {\n      unique.push(numbers[i]);\n\
    \      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n", "    let\
    \ numbersSet = new Set(numbers);\n    return Array.from(numbersSet);\n}\n", " \
    \   var arr = [];\n    for(var i = 0; i < numbers.length; i++){\n        var el\
    \ = numbers[i];\n        if(arr.indexOf(el) === -1){\n            arr.push(el);\n\
    \        }\n    }\n    return arr;\n}\n", "    var unique = numbers.filter(function(elem,\
    \ index, self) {\n        return index == self.indexOf(elem);\n    })\n    return\
    \ unique;\n}\n", "    //find duplicates\n    var find_duplicates = {};\n    var\
    \ numbers_length = numbers.length;\n    for (var i = 0; i < numbers_length; i++)\
    \ {\n        var number = numbers[i];\n        if (find_duplicates[number]) {\n\
    \            find_duplicates[number]++;\n        } else {\n            find_duplicates[number]\
    \ = 1;\n        }\n    }\n    //remove duplicates\n    var output = [];\n    for\
    \ (var i = 0; i < numbers_length; i++) {\n        var number = numbers[i];\n \
    \       if (find_duplicates[number] == 1) {\n            output.push(number);\n\
    \        }\n    }\n    return output;\n}\nremove_duplicates([1, 2, 3, 2, 1, 2,\
    \ 3, 1, 3, 4, 5, 6, 5, 4, 7, 8, 9, 8, 7, 8, 9, 10, 11, 12, 13, 11, 13, 14, 13,\
    \ 15, 13, 16, 13, 17, 13, 18, 13, 19, 13, 20, 13, 21, 13, 22, 13, 23, 13, 24,\
    \ 13, 25, 13, 26, 13, 27, 13, 28, 13, 29, 13, 30, 13, 31, 13, 32, 13, 33, 13,\
    \ 34, 13, 35, 13, 36, 13, 37, 13, 38, 13, 39, 13, 40, 13, 41, 13, 42, 13, 43,\
    \ 13, 44, 13, 45, 13, 46, 13, 47, 13, 48, 13, 49, 13, 50, 13, 51, 13, 52, 13,\
    \ 53, 13, 54, 13, 55, 13, 56, 13, 57, 13, 58, 13, 59, 13, 60, 13, 61, 13, 62,\
    \ 13, 63, 13, 64, 13, 65, 13, 66, 13, 67, 13, 68, 13, 69, 13, 70, 13, 71, 13,\
    \ 72, 13, 73, 13, 74, 13, 75, 13, 76, 13, 77, 13, 78, 13, 79, 13, 80, 13, 81,\
    \ 13,", "    let set = new Set();\n    let arr = [];\n    numbers.forEach(num\
    \ => {\n        if(!set.has(num)){\n            set.add(num);\n            arr.push(num);\n\
    \        }\n    });\n    return arr;\n}\n", "    // Solution\n    var result =\
    \ [];\n    for (var i = 0; i < numbers.length; i++) {\n        var current = numbers[i];\n\
    \        if (numbers.indexOf(current) == i) {\n            result.push(current);\n\
    \        }\n    }\n    return result;\n}\n", "    return numbers.filter((x,i)\
    \ => numbers.indexOf(x) == i);\n}\n", "    var unique = [...new Set(numbers)];\n\
    \    return unique;\n}\n", "  let answer = [];\n  for (let num of numbers){\n\
    \    if (answer.indexOf(num) < 0){\n      answer.push(num);\n    }\n  }\n  return\
    \ answer;\n}\n", "  let newArray = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (newArray.indexOf(numbers[i]) === -1) {\n      newArray.push(numbers[i]);\n\
    \    }\n  }\n  return newArray;\n}\n", "    let numbers2 = [];\n    let p = 0;\n\
    \    numbers.sort();\n    numbers2[p] = numbers[0];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] === numbers[i - 1]) {\n            continue;\n\
    \        }\n        p++;\n        numbers2[p] = numbers[i];\n    }\n    return\
    \ numbers2;\n}\n", "    let result = [];\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        if(!result.includes(numbers[i])){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  let unique = [];\n  for (let i\
    \ = 0; i < numbers.length; i++) {\n    let n = numbers[i];\n    if (unique.indexOf(n)\
    \ == -1) {\n      unique.push(n);\n    }\n  }\n  return unique;\n}\n", "    return\
    \ numbers.filter((v, i, a) => a.indexOf(v) === i);\n}\nlet numbers = [1, 2, 2,\
    \ 3, 4, 4, 5, 5, 5, 6];", "    if(numbers.length === 0){\n        return [];\n\
    \    }\n    var unique = numbers.filter(function(number, index){\n        return\
    \ numbers.indexOf(number) === index;\n    });\n    return unique;\n}", "\tlet\
    \ numArr = numbers.slice();\n\tfor(let i = 0; i < numArr.length; i++){\n\t\tif(numArr.indexOf(numArr[i])\
    \ !== numArr.lastIndexOf(numArr[i])){\n\t\t\tnumArr.splice(i, 1);\n\t\t\ti--;\n\
    \t\t}\n\t}\n\treturn numArr;\n}\n", "  let ans = [];\n  for(let i=0; i<numbers.length;\
    \ i++){\n    if(ans.indexOf(numbers[i]) == -1){\n      ans.push(numbers[i]);\n\
    \    }\n  }\n  return ans;\n}", "   var distinct = [];\n   distinct = numbers.filter(function(x,\
    \ y, z){\n      return z.indexOf(x) === y;\n   });\n   return distinct;\n}\n",
  "  return [...new Set(numbers)];\n}", "  var myArray = [];\n  var newArray = [];\n\
    \  for (var i = 0; i < numbers.length; i++) {\n    if (myArray.indexOf(numbers[i])\
    \ === -1) {\n      myArray.push(numbers[i]);\n    }\n  }\n  return myArray;\n}",
  "    let unique = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if\
    \ (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "    var uniques = [];\n    for (var\
    \ i = 0; i < numbers.length; i++) {\n        if (uniques.indexOf(numbers[i]) ==\
    \ -1) {\n            uniques.push(numbers[i]);\n        }\n    }\n    return uniques;\n\
    }", "   return Array.from(new Set(numbers));\n}\n", "  let newArr = numbers.reduce((result,\
    \ num) => {\n    if (result.indexOf(num) === -1) {\n      result.push(num);\n\
    \    }\n    return result;\n  }, []);\n  return newArr;\n}\n", "  var counts =\
    \ {};\n  numbers.forEach(function(number){\n    counts[number] = (counts[number]\
    \ || 0) + 1;\n  });\n  return numbers.filter(function(number){\n    return counts[number]\
    \ === 1;\n  });\n}\n", "    var unique = [];\n    for(var i=0; i<numbers.length;\
    \ i++){\n        if(unique.indexOf(numbers[i]) == -1){\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "    var unique_numbers = [];\n \
    \   var unique_index = 0;\n    for(var index=0; index<numbers.length; index++){\n\
    \        var current_number = numbers[index];\n        var number_occured = false;\n\
    \        for(var unique_index=0; unique_index<unique_numbers.length; unique_index++){\n\
    \            if(current_number == unique_numbers[unique_index]){\n           \
    \     number_occured = true;\n                break;\n            }\n        }\n\
    \        if(!number_occured){\n            unique_numbers[unique_index] = current_number;\n\
    \            unique_index++;\n        }\n    }\n    return unique_numbers;\n}\n",
  "    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n        for(var\
    \ j = 0; j < numbers.length; j++){\n            if(numbers[i] == numbers[j] &&\
    \ i != j){\n                numbers[i] = 0;\n            }\n        }\n    }\n\
    \    for(var i = 0; i < numbers.length; i++){\n        if(numbers[i] != 0){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let values = [];\n    let result = [];\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        if(values.indexOf(numbers[i]) > -1){\n            continue;\n\
    \        }\n        values.push(numbers[i]);\n        result.push(numbers[i]);\n\
    \    }\n    return result;\n}\n", "    var newArray = [];\n    for(var i = 0;\
    \ i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i]) == -1){\n\
    \            newArray.push(numbers[i]);\n        }\n    }\n    return newArray;\n\
    }", "  for (var i = 0; i < numbers.length; i++) {\n    for (var j = 0; j < numbers.length;\
    \ j++) {\n      if (numbers[i] == numbers[j] && i != j) {\n        numbers.splice(j,\
    \ 1);\n      }\n    }\n  }\n  return numbers;\n}", "    var newarray = [];\n \
    \   for(var i = 0; i < numbers.length; i++){\n        if(numbers.indexOf(numbers[i])\
    \ == i){\n            newarray.push(numbers[i]);\n        }\n    }\n    return\
    \ newarray;\n}", "    return numbers.filter((v, i, a) => a.indexOf(v) === i);\n\
    }\n", "\tlet answer = numbers.filter(function(value, index, self){\n\t\treturn\
    \ self.indexOf(value) === index;\n\t});\n\treturn answer;\n}\n", "  let dict =\
    \ {}\n  let result = []\n  for (let i = 0; i < numbers.length; i++){\n    if (dict[numbers[i]]\
    \ === undefined){\n      dict[numbers[i]] = 1\n    }\n    else {\n      dict[numbers[i]]\
    \ += 1\n    }\n  }\n  for (let j = 0; j < numbers.length; j++){\n    if (dict[numbers[j]]\
    \ === 1){\n      result.push(numbers[j])\n    }\n  }\n  return result\n}\n", " \
    \   var arr = numbers.filter(function(val, i, array){\n        return array.indexOf(val)\
    \ == i;\n    });\n    return arr;\n}\n\n", "    let newarray = [];\n    let result\
    \ = [];\n    for(let i = 0; i < numbers.length; i++){\n        if(newarray.indexOf(numbers[i])\
    \ == -1){\n            newarray.push(numbers[i]);\n        }\n    }\n    for(let\
    \ i = 0; i < numbers.length; i++){\n        if(newarray.indexOf(numbers[i]) !==\
    \ -1){\n            result.push(numbers[i]);\n            newarray.splice(newarray.indexOf(numbers[i]),\
    \ 1);\n        }\n    }\n    return result;\n}\n\n", "    var unique = [];\n \
    \   for(var number of numbers){\n        if(unique.indexOf(number) === -1){\n\
    \            unique.push(number);\n        }\n    }\n    return unique;\n}", " \
    \   var unique = [];\n    var matches = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(unique.indexOf(numbers[i]) === -1){\n            unique.push(numbers[i]);\n\
    \        } else {\n            matches.push(numbers[i]);\n        }\n    }\n \
    \   for(var j = 0; j < matches.length; j++){\n        numbers.splice(numbers.indexOf(matches[j]),\
    \ 1);\n    }\n    return numbers;\n}\n", "    let newArray = [];\n    numbers.forEach(number\
    \ => {\n        if(!newArray.includes(number)){\n            newArray.push(number);\n\
    \        }\n    });\n    return newArray;\n}\n", "  return numbers.filter((v,\
    \ i, a) => a.indexOf(v) === i);\n}", "  var array = numbers.slice();\n\n  var\
    \ unique = array.filter(function(item, i, ar){\n    return ar.indexOf(item) ===\
    \ i;\n  });\n\n  return unique;\n}\n", "  var x,\n      len=numbers.length,\n\
    \      out=[],\n      obj={};\n\n  for (x=0; x<len; x++) {\n    obj[numbers[x]]=0;\n\
    \  }\n  for (x in obj) {\n    out.push(x);\n  }\n  return out;\n}\n", "    //Let's\
    \ make an array to hold the numbers without the duplicates\n    var numbers_without_duplicates\
    \ = [];\n    //Go through the input array (numbers)\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        //Go through numbers_without_duplicates\n        //If the number\
    \ we are on is NOT in numbers_without_duplicates,\n        //put it in numbers_without_duplicates\n\
    \        if(numbers_without_duplicates.indexOf(numbers[i]) == -1){\n         \
    \   numbers_without_duplicates.push(numbers[i]);\n        }\n    }\n    return\
    \ numbers_without_duplicates;\n}", "  let numbersWithoutDuplicates = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    let number = numbers[i];\n    let\
    \ isDuplicate = false;\n    for (let j = 0; j < numbersWithoutDuplicates.length;\
    \ j++) {\n      if (number === numbersWithoutDuplicates[j]) {\n        isDuplicate\
    \ = true;\n      }\n    }\n    if (!isDuplicate) {\n      numbersWithoutDuplicates.push(number);\n\
    \    }\n  }\n  return numbersWithoutDuplicates;\n}\n", "    let newArray = [];\n\
    \    for(let i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ == -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n", "\tlet new_numbers = [];\n\tfor(let i = 0; i < numbers.length;\
    \ i++){\n\t\tif(new_numbers.indexOf(numbers[i]) === -1){\n\t\t\tnew_numbers.push(numbers[i]);\n\
    \t\t}\n\t}\n\treturn new_numbers;\n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < numbers.length; i++){\n        if(result.indexOf(numbers[i]) === -1){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n}",
  "  var newNums = [];\n  var count = 0;\n  var check = false;\n  for(var i = 0; i\
    \ < numbers.length; i++){\n    check = false;\n    for(var j = 0; j < newNums.length;\
    \ j++){\n      if(numbers[i] == newNums[j]){\n        check = true;\n      }\n\
    \    }\n    if(check == false){\n      newNums[count] = numbers[i];\n      count++;\n\
    \    }\n  }\n  return newNums;\n}\n", "    return numbers.filter((v, i, a) =>\
    \ a.indexOf(v) === i);\n}\n", "    let result = [];\n    for(let i = 0; i < numbers.length;\
    \ i++){\n        if(numbers.indexOf(numbers[i]) == numbers.lastIndexOf(numbers[i])){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "  let result = [];\n  for (let i = 0; i < numbers.length; i++){\n    if\
    \ (result.indexOf(numbers[i]) === -1){\n      result.push(numbers[i]);\n    }\n\
    \  }\n  return result;\n}\n", "\tvar array = [];\n\tvar duplicates = [];\n\tvar\
    \ i;\n\tfor(i = 0; i < numbers.length; i++) {\n\t\tvar number = numbers[i];\n\t\
    \tif(!array.includes(number)) {\n\t\t\tarray.push(number);\n\t\t} else {\n\t\t\
    \tduplicates.push(number);\n\t\t}\n\t}\n\tfor(i = 0; i < duplicates.length; i++)\
    \ {\n\t\tvar duplicate = duplicates[i];\n\t\tvar j = array.indexOf(duplicate);\n\
    \t\tarray.splice(j, 1);\n\t}\n\treturn array;\n}\nremove_duplicates([1,2,2,2,3,3,4,5,5,6,6,6,7,8,9,10,11,11,11,12,13,14,15,15]);\n\
    \n", "\tvar unique = [];\n\tnumbers.forEach(function(num){\n\t\tif(unique.indexOf(num)\
    \ == -1){\n\t\t\tunique.push(num);\n\t\t}\n\t});\n\treturn unique;\n}", "  var\
    \ unique = numbers.filter(function(elem, index, self) {\n    return index == self.indexOf(elem);\n\
    \  });\n  return unique;\n}\n", "    let set = new Set(numbers);\n    let result\
    \ = [];\n    for (let el of set){\n        result.push(el);\n    }\n    return\
    \ result;\n}\n\nremove_duplicates([1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,",
  "    const uniques = [];\n    const numbersSet = new Set(numbers);\n    numbersSet.forEach(number\
    \ => uniques.push(number));\n    return uniques;\n}", "  var newNums = [];\n \
    \ var nums = numbers.map(Number);\n  for(var i = 0; i < nums.length; i++){\n \
    \   if(newNums.indexOf(nums[i]) == -1){\n      newNums.push(nums[i]);\n    }\n\
    \  }\n  return newNums;\n}\n", "  var uniqueNumbers = [];\n  uniqueNumbers = numbers.filter(function(elem,\
    \ index, self) {\n    return index == self.indexOf(elem);\n  });\n  return uniqueNumbers;\n\
    }\n\nmodule.exports = remove_duplicates;", "    var result = [];\n    for(var\
    \ i = 0; i < numbers.length; i++){\n        if(result.indexOf(numbers[i]) < 0){\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n}",
  "  //console.log(numbers);\n  var result = []\n  for(var i = 0; i < numbers.length;\
    \ i++){\n    if(result.indexOf(numbers[i]) == -1){\n      result.push(numbers[i]);\n\
    \    }\n  }\n  return result;\n}\n", "    let numbers_unique = [];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        if (numbers_unique.indexOf(numbers[i])\
    \ === -1) {\n            numbers_unique.push(numbers[i]);\n        }\n    }\n\
    \    return numbers_unique;\n}", "    let unique = [];\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n\
    \            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n", "    for(let i = 0; i < numbers.length; i++){\n        for(let j = i + 1;\
    \ j < numbers.length; j++){\n            if(numbers[i] === numbers[j]){\n    \
    \            numbers.splice(j, 1);\n                j--;\n            }\n    \
    \    }\n    }\n    return numbers;\n}\n", "    return [...new Set(numbers)];\n\
    }\n\nremove_duplicates([1,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,",
  "    // create an object of unique numbers\n    const unique_numbers = {};\n   \
    \ // loop through the numbers array\n    for(let number of numbers){\n       \
    \ // if the number is not in the unique numbers object add it\n        if(!unique_numbers[number]){\n\
    \            unique_numbers[number] = true;\n        }\n    }\n    // create a\
    \ variable that stores an array of the keys of the unique numbers object\n   \
    \ let result = Object.keys(unique_numbers);\n    // return the result\n    return\
    \ result;\n}\n", "    var arr = [];\n    numbers.forEach(function(number){\n \
    \       if(arr.indexOf(number) === -1){\n            arr.push(number);\n     \
    \   }\n    });\n    return arr;\n}\n\nremove_duplicates([1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3",
  "    let arr = numbers.filter((number, index) => {\n        return index === numbers.indexOf(number);\n\
    \    });\n    return arr;\n}\nlet numbers = [3, 1, 2, 1, 2, 3, 4, 5, 5, 4, 6,\
    \ 7, 8, 9, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0];", "  var newArray = [];\n  for(var\
    \ i = 0; i < numbers.length; i++){\n    if(!newArray.includes(numbers[i])){\n\
    \      newArray.push(numbers[i]);\n    }\n  }\n  return newArray;\n}\n", "  var\
    \ noDup = [];\n  for(var i = 0; i < numbers.length; i++){\n    if(noDup.indexOf(numbers[i])\
    \ === -1){\n      noDup.push(numbers[i]);\n    }\n  }\n  return noDup;\n}", " \
    \   return [...new Set(numbers)];\n}", "  var temp = {};\n  var ret = [];\n  numbers.forEach(function(number){\n\
    \    if(!temp[number]){\n      temp[number] = true;\n      ret.push(number);\n\
    \    }\n  });\n  return ret;\n}\n", "    for(var i = 0; i < numbers.length; i++){\n\
    \        for(var j = i + 1; j < numbers.length; j++){\n            if(numbers[i]\
    \ == numbers[j]){\n                numbers.splice(j, 1);\n                j--;\n\
    \            }\n        }\n    }\n    return numbers;\n}\n", "    return [...new\
    \ Set(numbers)];\n}\n", "    var uniq = []\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (uniq.indexOf(numbers[i]) === -1) {\n            uniq.push(numbers[i])\n\
    \        }\n    }\n    return uniq\n}\n", "\treturn numbers.filter(function(number,index,array){\n\
    \t\treturn array.indexOf(number) == index;\n\t});\n}", "    let numbersHashMap\
    \ = {}\n    let uniqueNumbers = []\n    for(let i = 0; i < numbers.length; i++){\n\
    \        numbersHashMap[numbers[i]] = (numbersHashMap[numbers[i]] || 0) + 1\n\
    \    }\n    for(let i = 0; i < numbers.length; i++){\n        if(numbersHashMap[numbers[i]]\
    \ == 1){\n            uniqueNumbers.push(numbers[i])\n        }\n    }\n    return\
    \ uniqueNumbers\n}\n", "\tconsole.log(numbers);\n\tvar no_duplicates = [];\n\t\
    for(var i = 0; i < numbers.length; i++){\n\t\tvar value = numbers[i];\n\t\tvar\
    \ count = 0;\n\t\tfor(var j = 0; j < numbers.length; j++){\n\t\t\tif(value ==\
    \ numbers[j]){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif(count == 1){\n\t\t\t\
    no_duplicates.push(value);\n\t\t}\n\t}\n\tconsole.log(no_duplicates);\n}\nremove_duplicates([1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,",
  "  //return numbers.filter((element, index) => numbers.indexOf(element) === index);\n\
    \  return numbers.reduce((newArray, element) => {\n    if (newArray.indexOf(element)\
    \ === -1) {\n      newArray.push(element);\n    }\n    return newArray;\n  },\
    \ []);\n}\n", "   var arr = [];\n   for(var i = 0; i < numbers.length; i++){\n\
    \       if(arr.indexOf(numbers[i]) === -1){\n           arr.push(numbers[i]);\n\
    \       }\n   }\n   return arr;\n}\n", "  let unique = new Set(numbers);\n  return\
    \ [...unique];\n}\n", "  let result = []\n  for (var i = 0; i < numbers.length;\
    \ i++) {\n    if (result.indexOf(numbers[i]) == -1) {\n      result.push(numbers[i])\n\
    \    }\n  }\n  return result\n}\n", "    var newArray = [];\n    for(i=0; i<numbers.length;\
    \ i++){\n        if(newArray.indexOf(numbers[i]) === -1){\n            newArray.push(numbers[i]);\n\
    \        }\n    }\n    return newArray;\n}", "  var unique_array = [];\n  for(var\
    \ i = 0;i < numbers.length; i++){\n    if(unique_array.indexOf(numbers[i]) ==\
    \ -1){\n      unique_array.push(numbers[i]);\n    }\n  }\n  return unique_array;\n\
    }\n", "    let result = []\n    let dup = []\n    numbers.forEach(number => {\n\
    \        if(!result.includes(number)){\n            result.push(number)\n    \
    \    }else{\n            dup.push(number)\n        }\n    })\n    return result.filter(number\
    \ => !dup.includes(number))\n}\n", "    let unique = [];\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (numbers[i] === numbers[j]) {\n                numbers.splice(j,\
    \ 1);\n                j--;\n            }\n        }\n    }\n    return numbers;\n\
    }\nremove_duplicates([1, 2, 3, 4, 5, 2, 3, 1]);\n\n", "    var uniqueList = [];\n\
    \    uniqueList = numbers.filter(function(item, pos) {\n        return numbers.indexOf(item)\
    \ == pos;\n    })\n    return uniqueList;\n}", "    for(let i = 0; i < numbers.length;\
    \ i++){\n        for(let j = i + 1; j < numbers.length; j++){\n            if(numbers[i]\
    \ === numbers[j]){\n                numbers.splice(j, 1);\n                j--;\n\
    \            }\n        }\n    }\n    return numbers;\n}\n", "    var unique =\
    \ []\n    for (var i = 0; i < numbers.length; i++){\n        if (unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i])\n        }\n    }\n    return unique\n\
    }", "    let array = [];\n    numbers.forEach(function(a){\n        if (array.indexOf(a)\
    \ === -1){\n            array.push(a);\n        }\n    });\n    return array;\n\
    }\n", "    let numbers_no_duplicates = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (numbers_no_duplicates.indexOf(numbers[i]) == -1) {\n   \
    \         numbers_no_duplicates.push(numbers[i]);\n        }\n    }\n    return\
    \ numbers_no_duplicates;\n}", "    let set = new Set(numbers);\n    return Array.from(set);\n\
    }\n", "    let result = [];\n    numbers.forEach(function(element) {\n       \
    \ if (result.indexOf(element) === -1) {\n            result.push(element);\n \
    \       }\n    });\n    return result;\n}\n", "  var list = [];\n  var i = 0;\n\
    \  while(i < numbers.length){\n    if(!list.includes(numbers[i])){\n      list.push(numbers[i]);\n\
    \    }\n    i++;\n  }\n  return list;\n}\n", "    return Array.from(new Set(numbers));\n\
    }\n", "    var uniques = numbers.filter(function(item, index, self){\n       \
    \ return self.indexOf(item) === index;\n    });\n    return uniques;\n}", "  \
    \  let uniqueNums = [];\n    let unique = true;\n    let index;\n    numbers.forEach(function(i){\n\
    \        unique = true;\n        for(let j = 0; j < uniqueNums.length; j++){\n\
    \            if(i === uniqueNums[j]){\n                unique = false;\n     \
    \           index = j;\n            }\n        }\n        if(unique === true){\n\
    \            uniqueNums.push(i);\n        }\n    });\n    return uniqueNums;\n\
    }\n", "    let new_list = []\n    for (let i = 0; i < numbers.length; i++){\n\
    \        if (new_list.indexOf(numbers[i]) === -1){\n            new_list.push(numbers[i])\n\
    \        }\n    }\n    return new_list\n}\n", "  // the array that will be returned\n\
    \  let result = [];\n  // iterate over the given numbers array\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    // check if the number is already in the\
    \ result array\n    if (result.indexOf(numbers[i]) === -1) {\n      // if not,\
    \ add it to the result array\n      result.push(numbers[i]);\n    }\n  }\n  //\
    \ return the result array\n  return result;\n}", "  return numbers.filter((item,\
    \ index) => numbers.indexOf(item) === index);\n}\n", "  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (result.indexOf(numbers[i]) ==\
    \ -1) {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n", "\t\
    var out = [];\n\tnumbers.forEach(function(e, i, arr){\n\t\tif(i == arr.indexOf(e)){\n\
    \t\t\tout.push(e);\n\t\t}\n\t});\n\treturn out;\n}\n", "    var obj = {};\n  \
    \  var result = []\n    numbers.forEach(element => {\n        if(!obj[element]){\n\
    \            obj[element] = true;\n            result.push(element);\n       \
    \ }\n    });\n    return result;\n}\n", "  let counter = {};\n  let noDuplicates\
    \ = [];\n  for (let number of numbers){\n    counter[number] = counter[number]\
    \ ? counter[number] + 1 : 1;\n  }\n  for (let number of numbers){\n    if (counter[number]\
    \ <= 1){\n      noDuplicates.push(number);\n    }\n  }\n  return noDuplicates;\n\
    }\n", "    var arr =[];\n    var newArr = [];\n    for(var i = 0; i < numbers.length;\
    \ i++){\n        if(arr.indexOf(numbers[i]) === -1){\n            arr.push(numbers[i]);\n\
    \            newArr.push(numbers[i]);\n        }\n    }\n    return newArr;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < numbers.length; i++){\n  \
    \      if(result.indexOf(numbers[i]) == -1){\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var arr = [];\n    for(var i\
    \ = 0; i < numbers.length; i++){\n        if(arr.indexOf(numbers[i]) == -1){\n\
    \            arr.push(numbers[i]);\n        }\n    }\n    return arr;\n}\n", " \
    \   var temp = numbers.filter(function(item, index, array){\n        return array.indexOf(item)\
    \ == index;\n    });\n    return temp;\n}\nvar numbers = [1, 2, 3, 3, 4, 4, 5,\
    \ 5, 6, 6, 7, 7, 8, 8, 9, 9];", "    var arr = numbers;\n    var n = arr.length;\n\
    \    for(i=0; i<n; i++){\n        for(j=i+1; j<n; j++){\n            if(arr[i]==arr[j]){\n\
    \                arr.splice(j,1);\n                n--;\n                j--;\n\
    \            }\n        }\n    }\n    return arr;\n}\n", "    var newArr = [];\n\
    \    for(var i = 0; i < numbers.length; i++){\n        var duplicates = false;\n\
    \        for(var j = 0; j < newArr.length; j++){\n            if(numbers[i] ==\
    \ newArr[j]){\n                duplicates = true;\n            }\n        }\n\
    \        if(duplicates == false){\n            newArr.push(numbers[i]);\n    \
    \    }\n    }\n    return newArr;\n}", "  // var numbers2 = numbers.filter(function(number,\
    \ i, arr){\n  //   return arr.indexOf(number) === i;\n  // });\n  // return numbers2;\n\
    \  return [...new Set(numbers)];\n}\n", "    if(numbers==undefined){\n       \
    \ return [];\n    }\n    var i;\n    var j;\n    var arr_num = [];\n    var arr_length\
    \ = numbers.length;\n    for(i=0;i<arr_length;i++){\n        if(arr_num.indexOf(numbers[i])<0){\n\
    \            arr_num.push(numbers[i]);\n        }\n    }\n    return arr_num;\n\
    }", "    let set = new Set(numbers);\n    let res = [];\n    for (let num of set)\n\
    \        res.push(num);\n    return res;\n}\n", "    let num = new Set(numbers);\n\
    \    return num;\n}\nnumbers = [1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2",
  "\tvar list = [];\n\tvar result = [];\n\tfor(var i = 0; i < numbers.length; i++){\n\
    \t\tif(list.indexOf(numbers[i]) === -1){\n\t\t\tlist.push(numbers[i]);\n\t\t\t\
    result.push(numbers[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nremove_duplicates([3,3,3,3,6,7,8,9,9]);\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

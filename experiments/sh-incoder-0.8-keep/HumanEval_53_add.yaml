name: HumanEval_53_add
language: sh
prompt: "#!/bin/bash\n# Add two numbers x and y\n# >>> add(2, 3)\n# 5\n# >>> add(5,\
  \ 7)\n# 12\n#\n# $1 is an integer\n# $2 is an integer\nadd() {\n"
tests: "}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"0\" \"1\") = \"1\" ]]\n    [[ $(candidate \"1\" \"0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"2\" \"3\") = \"5\" ]]\n    [[ $(candidate \"5\" \"7\") = \"12\" ]]\n    [[ $(candidate\
  \ \"7\" \"5\") = \"12\" ]]\n}\n\nrun_test"
completions: ["  echo \"${1:?Parameter 1 must be an Integer}\"\n  echo \"${2:?Parameter\
    \ 2 must be an Integer}\"\n  (( ${1} + ${2} ))", "\techo \"$(( $1 + $2 ))\"",
  "  if [[ $1 == \"--help\" ]]; then\n    echo \"Usage: $(basename \"$0\") [-v] [--quiet]\
    \ [--verbose] [--version] [-s svar] [-a svar] [--arg svar] [--noarg] [-I svar]\
    \ [-l svar] [--loglevel svar] [-o svar] [-E svar] [-l svar] [-c svar] [-f svar]\
    \ [-g svar] [-X svar] [-L svar] [--logfile svar] [-D svar] [-j svar] [-k svar]\
    \ [--logfile svar] [--profile svar]\"\n    exit 1\n  fi\n  # Set verbosity (default\
    \ to quiet)\n  local v=\"$1\"; shift\n  local q=\"--quiet\"; shift\n  local v=\"\
    --verbose\"; shift\n  local v=\"--version\"; shift\n  local s=\"--svar\"; shift\n\
    \  local a=\"--arg\"; shift\n  local noarg=\"--no-arg\"; shift\n  local I=\"--I\"\
    ; shift\n  local l=\"--loglevel\"; shift\n  local o=\"--o\"; shift\n  local E=\"\
    --E\"; shift\n  local l=\"--loglevel\"; shift\n  local c=\"--c\"; shift\n  local\
    \ f=\"--f\"; shift\n  local g=\"--g\"; shift\n  local X=\"--X\"; shift\n  local\
    \ L=\"--L\"; shift\n  local log=\"--logfile\"; shift\n  local D=\"--D\"; shift\n\
    \  local j=\"--j\"; shift\n  local k=\"--k\"; shift\n  local profile=\"--profile\"\
    ; shift\n\n  local vers=\"\"\n  if [[ \"$v\" == \"-v\" || \"$v\" == \"--version\"\
    \ ]]; then\n    echo \"$($(basename \"$0\") --version 2>&1)\"\n    exit 0\n  fi\n\
    \  if [[ \"$v\" == \"-q\" || \"$v\" == \"--quiet\" ]]; then\n    if [[ \"$log\"\
    \ == \"--logfile\" ]]; then\n      echo \"$($(basename \"$0\") -q 2>&1)\"\n  \
    \  else\n      echo \"$($(basename \"$0\") -q)\"\n    fi\n    exit 0\n  fi\n \
    \ if [[ \"$v\" == \"--verbose\" ]]; then\n    if [[ \"$log\" == \"--logfile\"\
    \ ]]; then\n      echo \"$($(basename \"$0\") -v 2>&1)\"\n", '  echo "$1 + $2"',
  "\t# check parameters\n\tif [ $# -ne 2 ]\n\tthen\n\t\techo \"usage: add <number>\
    \ <number>\";\n\t\texit 1;\n\tfi\n\tlocal a=( $1 );\n\tlocal b=( $2 );\n\tlocal\
    \ sum=( \"${a[@]:0:@-2}\" );\n\tfor i in \"${a[@]:0:@-2}\"; do\n\t\tsum+=( $((\
    \ 10#$i )) );\n\tdone\n\tfor i in \"${b[@]:0:@-2}\"; do\n\t\tsum+=( $(( 10#$i\
    \ )) );\n\tdone\n\techo $(( ${sum[@]:1:${#sum[@]}} ));", "    local IFS=','; echo\
    \ \"$(($1 + $2))\"", "  # local n1=${1:?error missing first number};\n  # local\
    \ n2=${2:?error missing second number};\n  # echo $((n1 + n2));", "  python -c\
    \ 'print(\"$1 + $2\")' \"$1\" \"$2\"", "    sum=$(($1 + $2))\n    echo \"$sum\"",
  '    test $1 -eq 0 || test $1 -eq 1 || test $1 -eq 2', "    local x=\"$1\"\n   \
    \ local y=\"$2\"\n    local sum=$(( x + y ))\n    echo $sum", '  (( $1 )) && echo
    $(($1 + $2)) && return $(($1 + $2));', "    local x=\"$1\"\n    local y=\"$2\"\
    \n    echo $(( $x + $y ))", "\t(( $1 + $2 ))", "  sum=$(( $1 + $2 ))\n  return\
    \ $sum", "    local x y\n    read x y\n    echo $(( $x + $y ))", "  local x=$1\n\
    \  local y=$2\n  echo $(( $x + $y ))", "    echo $1\n    echo $(($1 + $2))", "\t\
    x=\"$1\"\n\ty=\"$2\"\n\tz=\"$(( x + y ))\"\n\techo $z", "  local x=\"$1\"\n  local\
    \ y=\"$2\"\n  echo \"$x+$y\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local input=\"$1\"\n  # Convert string to array\n\
    \  IFS=\" \" read -r -a array <<<\"$input\"\n  # Remove duplicates\n  output=()\n\
    \  for i in \"${array[@]}\"; do\n    [[ $i ]] || continue\n    contains_item=false\n\
    \    for j in \"${output[@]}\"; do\n      [[ \"$i\" = \"$j\" ]] && contains_item=true\n\
    \    done\n    if [[ ! \"$contains_item\" ]]; then\n      output+=(\"$i\")\n \
    \   fi\n  done\n  # Convert back to string\n  echo \"${output[*]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  IFS=' ' read -r -a array <<< \"$1\"\n  declare\
    \ -i unique_count=0\n  for i in \"${array[@]}\"; do\n    ((unique_count+=i))\n\
    \  done\n  for i in \"${array[@]}\"; do\n    ((unique_count-=i))\n    if [[ $unique_count\
    \ -eq 0 ]]; then\n      unset array[$i]\n    fi\n  done\n  printf '\\n' \"${array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local items count\n  items=$1\n  count=$(awk\
    \ \"{for(i=1;i<=NF;i++) if($i==$i) print $i; else next}\" \"${items}\")\n  echo\
    \ \"${items[@]}\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \" | tr \"  \"\
    \ \"\\t\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'awk: cmd. line:1: {for(i=1;i<=NF;i++) if(==) print ; else next}

    awk: cmd. line:1:                        ^ syntax error

    awk: cmd. line:1: {for(i=1;i<=NF;i++) if(==) print ; else next}

    awk: cmd. line:1:                                    ^ syntax error

    '
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local list=\"$1\"\n    echo \"${list//[^ ]*\
    \ }\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local input\n  input=$1\n  echo $input | tr \"\
    \ \" \"\\n\" | sort | uniq -u\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local array=$1\n    local outputArray\n   \
    \ outputArray=()\n    local temp\n    for element in ${array[@]}; do\n       \
    \ if [[ ${outputArray[@]} != *\"$element\"* ]]; then\n            outputArray+=($element)\n\
    \        fi\n    done\n    IFS=$'\\n'\n    echo \"${outputArray[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local input=$1\n  local count\n  local unique\n\
    \  local output\n\n  output=\"$input\"\n\n  for count in \"${input//[^ \\t\\n]/\
    \ }\"; do\n    unique=\"$(echo \"$count\" | sort | uniq -d)\"\n\n    if [ -n \"\
    $unique\" ]; then\n      output=\"${output//$count/$unique}\"\n    fi\n  done\n\
    \  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: -1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local n=$#\n    local s=$*\n    local tmp\n\
    \    local new_list\n    new_list=()\n\n    while [[ $n -gt 0 ]]; do\n       \
    \ first=$(echo $s | cut -d\\  -f1)\n        tmp=$first\n        if [[ $n -ge 1\
    \ ]]; then\n            rest=$(echo $s | cut -d\\  -f$((n-1)))\n            tmp=\"\
    $tmp $rest\"\n        fi\n        already=\"$(echo \"$tmp\" | awk '!x[$1]++')\"\
    \n        if [[ $already = $s ]]; then\n            # don't keep element if element\
    \ already in list\n            n=$((n-1))\n        else\n            new_list=\"\
    $new_list $already\"\n        fi\n    done\n\n    echo \"${new_list[*]}\"\n}\n\
    \ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\"\
    \ ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=9 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660054590
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    # Keep order as input\n    echo ${1} | tr -sc\
    \ '[:digit:]' '\\n'\n    # Remove duplicates\n    sort -u <<<(echo ${1} | tr -sc\
    \ '[:digit:]' '\\n')\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9m3o2m8e.sh: line 12: syntax error near unexpected token `(''

    /tmp/tmp9m3o2m8e.sh: line 12: `    sort -u <<<(echo ${1} | tr -sc ''[:digit:]''
    ''\n'')''

    '
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local elements=$1\n    local i=0\n    while\
    \ [[ ${i} -lt ${#elements} ]]; do\n        if [[ ${elements[$i]} == \"$elements[$i]\"\
    \ ]]; then\n            elements=${elements#$elements[$i]}\n        fi\n     \
    \   let \"i += 1\"\n    done\n    echo $elements\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    set -- \"$1\"\n    local i seen=()\n    for\
    \ (( i=0; i<${#list[*]}; i++ )); do\n        if [[ \"${seen[$i]}\" ]]; then\n\
    \            seen[$i]=0\n        else\n            seen[$i]=1\n            list[i]=0\n\
    \        fi\n    done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local list=\"$1\"\n  local ret\n  local elem\
    \ tmp\n  local i j\n  local tmp2 count\n  ret=()\n  tmp=$(IFS=$'\\n'\n    echo\
    \ -e \"`echo -e \"$list\"`\"\n  ); unset IFS\n  for ((i=0; i < \"${#tmp}\"; ++i));\
    \ do\n    elem=$(echo \"${tmp}\" | sed -n \"${i}p\")\n    count=$(( ${#elem} +\
    \ 1 ))\n    for ((j=0; j < ${count}; ++j)); do\n      tmp2=${elem}${j}\n     \
    \ tmp2=${tmp2// /}\n      if ! [[ \"${ret[@]}\" =~ ${tmp2} ]]; then\n        ret+=(\"\
    ${elem}\")\n      fi\n    done\n  done\n  echo \"${ret[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    '
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n\tlocal input=\"$1\"\n\n\tlocal output=\"\"\n\t\
    local count=0\n\n\tfor element in $input; do\n\t\t[[ $element == \"${element}\"\
    \ ]] || continue\n\n\t\t(( count++ ))\n\n\t\t[ \"$count\" -gt 1 ] && output=\"\
    $output$element\"\n\tdone\n\n\techo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local IFS=$'\\n'\n  local input\n  local output\n\
    \  IFS=$' '\n  input=$1\n  output=$()\n  while read -r line; do\n    if [[ \"\
    $line\" != \"${input[@]}\" ]]; then\n      output+=(\"$line\")\n    fi\n  done\
    \ <<< \"$input\"\n  unset IFS\n  printf '[%s]' \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local -n arr=$1\n    arr=( ${arr[@]} )\n  \
    \  local uniques=()\n    local i=0\n    len=${#arr[@]}\n    for element in \"\
    ${arr[@]}\"; do\n        (( i == len )) && break\n        [[ ${uniques[*]} !=\
    \ ${element} ]] && uniques+=(${element})\n        ((i++))\n    done\n    echo\
    \ ${uniques[*]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmp2vtnqsq5.sh: line 9: local: `'': not a valid identifier

    /tmp/tmp2vtnqsq5.sh: line 9: local: `1 2 3 4'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660054585
- exit_code: 2
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local a seen=()\n    for e in $*\n    do\n\
    \        if [[ ${seen[$e]} ]] then\n            echo ${seen[$e]}\n        else\n\
    \            seen[$e]=1\n        fi\n    done\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxyozfuwp.sh: line 12: syntax error near unexpected token `then''

    /tmp/tmpxyozfuwp.sh: line 12: `        if [[ ${seen[$e]} ]] then''

    '
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    IFS=' ' read -r -a array <<< \"$1\"\n    declare\
    \ -a seen=()\n    declare -a outarr=()\n    for item in \"${array[@]}\"; do\n\
    \        if [[ \"${seen[$item]}\" == \"1\" ]]; then\n            continue\n  \
    \      fi\n        seen[$item]=1\n        outarr+=(\"$item\")\n    done\n    echo\
    \ \"${outarr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n  local i seen=() out\n  IFS=$'\\n' read -r -a\
    \ array <<< \"$1\"\n  for ((i=0; i < ${#array[@]}; i++)); do\n    seen+=(\"${array[i]}\"\
    )\n  done\n  printf -v out \"%s\" \"${seen[@]}\"\n  echo \"${out}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585
- exit_code: -1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local sorted_list=$(sort -n <<< \"$1\") &&\
    \ {\n        local new_list=( $sorted_list )\n        local unique_values=( )\n\
    \        while [ ${#new_list} -gt 0 ]; do\n            local value=${new_list[@]}\n\
    \            local i=$(expr \"$value\" +1 )\n            (( ${unique_values[@]}\
    \ <= ${value} )) && \\\n                unique_values+=(${value})\n          \
    \  new_list=( \"${new_list[@]:$i:1}\" )\n        done\n        echo -n \"${unique_values[*]}\"\
    \n    }\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=14 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660054590
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> remove_duplicates([1, 2, 3, 2, 4])\n# [1, 3, 4]\n#\n# $1 is a space-separated\
    \ list\nremove_duplicates() {\n    local list result\n    list=\"$1\"\n    list=\"\
    ${list// / }\"\n    list=\"${list/ / }\"\n    list=\"${list/ / }\"\n    list=\"\
    ${list// /}\"\n    list=\"$( echo \"$list\" | sed 's/, / /g' | sort | uniq )\"\
    \ # sort and uniq use \"-\" to separate words\n    list=\"$( echo \"$list\" |\
    \ sed 's/ //g' )\" # spaces removed from list\n    list=\"$( echo \"$list\" |\
    \ sed 's/^//g' )\" # leading spaces removed from list\n    list=\"$( echo \"$list\"\
    \ | sed 's/$//g' )\" # trailing spaces removed from list\n    result=\"$( echo\
    \ \"$list\" | sed 's/^ //g')\" # leading spaces removed from first word\n    echo\
    \ \"$list\"\n    echo \"$result\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054585

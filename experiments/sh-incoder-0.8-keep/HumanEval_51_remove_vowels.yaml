name: HumanEval_51_remove_vowels
language: sh
prompt: "#!/bin/bash\n# remove_vowels is a function that takes string and returns\
  \ string without vowels.\n# >>> remove_vowels('')\n# ''\n# >>> remove_vowels('abcdef')\n\
  # 'bcdf'\n# >>> remove_vowels('aaaaa')\n# ''\n# >>> remove_vowels('aaBAA')\n# 'B'\n\
  # >>> remove_vowels('zbcd')\n# 'zbcd'\n#\n# $1 is a string\nremove_vowels() {\n"
tests: "}\n\ncandidate() {\n    remove_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"abcdef\\nghijklm\") =\
  \ \"bcdf\\nghjklm\" ]]\n    [[ $(candidate \"fedcba\") = \"fdcb\" ]]\n    [[ $(candidate\
  \ \"eeeee\") = \"\" ]]\n    [[ $(candidate \"acBAA\") = \"cB\" ]]\n    [[ $(candidate\
  \ \"EcBOO\") = \"cB\" ]]\n    [[ $(candidate \"ybcd\") = \"ybcd\" ]]\n}\n\nrun_test"
completions: ["    local string=\"${1}\"\n    local vowels=\"aeiouAEIOU\"\n    local\
    \ outstring\n    # Iterate over every character in the string\n    for ((i = 0;\
    \ i < ${#string}; i++)); do\n        # If current character is vowel, delete it\n\
    \        if [[ ${string:$i:1} == \"${vowels}\" ]]; then\n            # Delete\
    \ this character from the string\n            string=${string:0:i}\n         \
    \   # Exit from the loop\n            break\n        fi\n    done\n    outstring=\"\
    ${string}\"", "    local str=$1\n    str=$(echo $str | sed -e 's/[aeiouAEIOU]//g')\n\
    \    return $str", "  local string=\"$1\"\n  local newstring=\"\"\n\n  for ((\
    \ i = 1 ; i <= \"${#string}\" ; i++ )); do\n    if [[ ${string[i]} = \"a\" ]]\
    \ ; then\n      newstring=\"${newstring}${string[i]}\"\n    elif [[ ${string[i]}\
    \ = \"e\" ]] ; then\n      newstring=\"${newstring}${string[i]}\"\n    elif [[\
    \ ${string[i]} = \"i\" ]] ; then\n      newstring=\"${newstring}${string[i]}\"\
    \n    elif [[ ${string[i]} = \"o\" ]] ; then\n      newstring=\"${newstring}${string[i]}\"\
    \n    elif [[ ${string[i]} = \"u\" ]] ; then\n      newstring=\"${newstring}${string[i]}\"\
    \n    else\n      newstring=\"${newstring}${string[i]}\"\n    fi\n  done\n  echo\
    \ \"$newstring\"", "    local input=$1\n    local output=$2\n    # change all\
    \ vowels to empty space\n    local vowels=\"'aeiouAEIOU\"\n    for vowel in $vowels;\
    \ do\n        input=${input/$vowel/ }\n    done\n    input=${input//[^a-zA-Z]/}\n\
    \    output=${output//[^a-zA-Z]/}", "  string=${1}\n  regex=\"[aeiouAEIOU]\"\n\
    \  while [[ ${#string} -gt 0 ]]; do\n    echo ${string%$regex}\n    string=${string#*$regex}\n\
    \  done", "  local string=$1\n  local i=${#string}\n  local new_string=''\n  local\
    \ vowels='aeiouAEIOU'\n\n  for ((i = 0; i < $i; ++i)); do\n    local ch=\"${string[i]}\"\
    \n    if [[ \"${vowels#${ch}}\" ]]; then\n      new_string+=\"${ch}\"\n    fi\n\
    \  done\n\n  echo \"${new_string}\"", "\tlocal str=$1\n\tlocal vowels=()\n\tlocal\
    \ i=0;\n\tlocal count=0;\n\twhile [ $i -lt ${#str} ]; do\n\t\tlocal c=`echo $str\
    \ | cut -c${i}`;\n\t\tif [ \"$c\" == \"a\" -o \"$c\" == \"e\" -o \"$c\" == \"\
    i\" -o \"$c\" == \"o\" -o \"$c\" == \"u\" ]; then\n\t\t\tcount=$((count+1));\n\
    \t\tfi\n\t\ti=$((i+1));\n\tdone\n\tif [ \"$count\" -eq 0 ]; then\n\t\techo \"\
    $str\";\n\telse\n\t\techo \"${str%????}\"\n\tfi", "    local string=\"$1\"\n \
    \   local result=\"\"\n    for i in {a..z}; do\n        if [[ $string == $i ]];\
    \ then\n            result+=\"$i\"\n        fi\n    done\n    echo \"$result\"",
  "  # Escape special characters\n  local string=\"${1}\"\n  [[ \"$string\" =~ \"\
    [^aeiouAEIOU]\" ]] && return $string\n  # Use a for loop to iterate the string\
    \ and remove vowels.\n  for (( i=1; i<${#string}; i++ )); do\n    local letter=\"\
    ${string:$i:1}\"\n    # Remove vowels\n    [[ \"${letter}\" =~ \"[AEIOUaeiouAEIOU]\"\
    \ ]] && letter=\"\"\n    [[ -z \"$letter\" ]] && return $string\n  done\n  # All\
    \ letters were vowels\n  return ${string#*a}", "  awk '{for(i=1;i<=NF;i++){if($i~/[aeiou]/){$i=\"\
    \";}}} 1' $1", "\tlocal input=$1\n\tlocal output=''\n\twhile [[ $input != '' ]];\
    \ do\n\t\toutput+=\"${input%%[aeiou]}${input##*[aeiou]}\"\n\t\tinput=\"${input#*[aeiou]}\"\
    \n\tdone\n\techo \"$output\"", "    local str=\"$1\"\n    local vowels=\"aeiouAEIOU\"\
    \n    local consonants=$(echo \"$str\" | sed 's/[^[:alpha:]]/\\n/g')\n    echo\
    \ \"$consonants\" | awk '{ for (i = 2; i <= NF; ++i) if (!($i in vowels)) printf\
    \ \"%s\", $i; printf \"\\n\"}'", "\tlocal i\n\tlocal string=${1}\n\n\tstring=${string/a/\
    \ }\n\tstring=${string/b/ }\n\tstring=${string/c/ }\n\tstring=${string/d/ }\n\t\
    string=${string/e/ }\n\tstring=${string/f/ }\n\tstring=${string/g/ }\n\tstring=${string/h/\
    \ }\n\tstring=${string/i/ }\n\tstring=${string/j/ }\n\tstring=${string/k/ }\n\t\
    string=${string/l/ }\n\tstring=${string/m/}\n\tstring=${string/n/ }\n\tstring=${string/o/}\n\
    \tstring=${string/p/ }\n\tstring=${string/q/ }\n\tstring=${string/r/}\n\tstring=${string/s/}\n\
    \tstring=${string/t/ }\n\tstring=${string/u/ }\n\tstring=${string/v/ }\n\tstring=${string/w/\
    \ }\n\tstring=${string/x/ }\n\tstring=${string/y/ }\n\tstring=${string/z/ }\n\n\
    \tstring=${string/A/ }\n\tstring=${string/B/ }\n\tstring=${string/C/ }\n\tstring=${string/D/\
    \ }\n\tstring=${string/E/ }\n\tstring=${string/F/ }\n\tstring=${string/G/ }\n\t\
    string=${string/H/ }\n\tstring=${string/I/ }\n\tstring=${string/J/ }\n\tstring=${string/K/\
    \ }\n\tstring=${string/L/ }\n\tstring=${string/M/ }\n\tstring=${string/N/ }\n\t\
    string=${string/O/ }\n\tstring=${string/P/ }\n\tstring=${string/Q/ }\n\tstring=${string/R/\
    \ }\n\tstring=${string/S/ }\n\tstring=${string/T/ }\n\tstring=${string/U/ }\n\t\
    string=${string/V/ }\n\tstring=${string/W/ }\n\tstring=${string/X/ }\n\tstring=${string/Y/\
    \ }\n\tstring=${string/Z/ }\n\n\tstring=${string/0/}\n\tstring=${string/1/}\n\t\
    string=${string/2/}\n\tstring=${string/3/}\n\tstring=${string/4/}\n\tstring=${string/5/}\n\
    \tstring=${", "  local STR=$1\n  local V=$(echo \"$STR\" | sed 's/[aeiou]//g')\n\
    \  echo \"$STR\" | sed \"s/${V}//g\"", "    local STR=$1\n    local VOWELS=$2\n\
    \    local NEW_STR=\"\"\n\n    if [ -z $STR ] ; then\n        echo \"ERROR: No\
    \ String Given\"\n        exit 0\n    fi\n    if [ -z $VOWELS ] ; then\n     \
    \   echo \"ERROR: No Vowels Given\"\n        exit 0\n    fi\n\n    for VOWEL in\
    \ $VOWELS ; do\n        STR=${STR/$VOWEL/}\n    done\n\n    echo $STR", "    local\
    \ IFS=$'\\n'\n    local -n string=$1\n    local vowels='aeiouyAEIOUY'\n    local\
    \ -a rest=()\n\n    # For each character of string, test if it is a vowel\n  \
    \  for i in \"${!string[@]}\"; do\n        [[ ${vowels} == *\"${string[i]}\"*\
    \ ]] || rest+=(${string[i]})\n    done\n\n    echo \"${rest[*]}\"", "    local\
    \ vowels='aeiouAEIOU'\n    local string=\"${1}\"\n    \n    local vowel_count=${#string}\n\
    \    \n    local char\n    \n    for (( c=0; c<$vowel_count; c++ )); do\n    \
    \    char=\"${string:$((c+1))}\"\n        if [[ ${vowels:-} == *${char}* ]]; then\n\
    \            string=${string::-c}\n        fi\n    done\n\n    echo \"$string\"",
  "  local string=$1\n  echo \"${string//[aeiouAEIOU]}\"", "    echo $1 | sed -E 's/[aeiouAEIOU]//g'",
  "  echo -n \"$1\" | tr [:lower:] [:upper:] | sed 's/[aeiouAEIOU]//g'"]
stop_tokens:
- "\n}"

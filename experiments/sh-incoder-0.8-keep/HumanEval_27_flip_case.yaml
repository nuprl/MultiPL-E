name: HumanEval_27_flip_case
language: sh
prompt: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\n#\n# $1 is a\
  \ string\nflip_case() {\n"
tests: "}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n\
  \    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
  \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
completions: ["  local STR=$1\n  tr '[:lower:]' '[:upper:]' <<< \"$STR\"\n  tr '[:upper:]'\
    \ '[:lower:]' <<< \"$STR\"", "  # We do not want to use tr for non-basic characters.\n\
    \  # tr will convert them to the question mark.\n  local string=$1\n  tr '[:upper:]'\
    \ '[:lower:]' <<< \"$string\" | tr '[:lower:]' '[:upper:]'", "    local i\n  \
    \  local str=\"${1:-}\"\n    local u\n    for ((i=0; i<${#str}; i++)); do\n  \
    \      u=\"${str:i:1}\"\n        str=\"${str:i:1}${u^^}\"\n    done\n    echo\
    \ \"${str}\"", "    local STR=\"${1^^}\"\n    echo \"${STR,,}\"", "  echo \"$1\"\
    \ | sed -e 's/\\(.\\)/\\U\\1/'", '    echo -n ${1//[a-z]/[A-Z]}${1//[A-Z]/[a-z]}',
  '    echo "${1,,}"', "  echo \"${1,,}\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  local STRING=${1}\n  echo \"${STRING^^}\"", "  local s=$1;\n\
    \  tr '[A-Z]' '[a-z]' <<< $s | tr '[a-z]' '[A-Z]'", "  # Uppercase letters have\
    \ the same uppercase character.\n  # Lowercase letters have the same lowercase\
    \ character.\n  # Other letters are swapped.\n  local input_chars=$1\n  # Convert\
    \ to uppercase to lowercase characters.\n  local output_chars=$(echo \"$input_chars\"\
    \ | tr \"[A-Z]\" \"[a-z]\")\n  # Convert to lowercase to uppercase characters.\n\
    \  local output_chars_reverse=$(echo \"$output_chars\" | tr \"[a-z]\" \"[A-Z]\"\
    )\n  # Return output with lowercase and uppercase characters.\n  printf \"%s%s%s\\\
    n\" \"${output_chars_reverse}\" \"$output_chars\" \"$input_chars\"", "\tlocal\
    \ string=$1\n\tstring=${string^^}\n\tstring=${string^^}\n\tstring=${string^^}\n\
    \techo \"$string\"", "    local string=\"$1\"\n\n    # Remove all non-alphanumerics\n\
    \    # > echo \"foo!bar!baz\" | sed 's/[^a-zA-Z0-9]//g'\n    # foo!bar!baz\n \
    \   string=\"${string//[^a-zA-Z0-9]/}\"\n\n    # Convert all alphabetic characters\
    \ to lowercase\n    # > echo \"foo!bar!baz\" | sed 's/^./\\L&/'\n    # foo!bar!baz\n\
    \    string=\"${string//\\L&/}\"\n\n    # Convert all non-alphabetic characters\
    \ to uppercase\n    # > echo \"foo!bar!baz\" | sed 's/\\(.\\)/\\U&/'\n    # FOO!BAR!BAZ\n\
    \    string=\"${string//\\U&/}\"\n\n    echo \"$string\"", '    echo "$1" | tr
    [:lower:] [:upper:]', "  local result=\"$1\";\n  local i=0;\n  while [ $i -lt\
    \ ${#result} ]; do\n    case $i in\n      0)\n        result=$(echo \"$result\"\
    \ | sed -e 's/^\\([a-zA-Z]*\\)/\\U\\1/')\n        ;;\n      1)\n        result=$(echo\
    \ \"$result\" | sed -e 's/^([a-zA-Z]*)$/\\L\\1/')\n        ;;\n    esac\n    let\
    \ i=$i+1;\n  done\n  echo \"$result\";", "    local string=${1}\n    local output=\"\
    \"\n    local i=${#string}\n    local j=0\n\n    while [ $i -gt 0 ]; do\n    \
    \    local c=${string[$(( $j % $i ))]}\n        output+=\"${c:1:1}${c:0:1}\"\n\
    \        (( j++ ))\n    done\n    echo $output", "  local STRING=$1\n\n  local\
    \ STRING_UPPER=$(printf $STRING | tr '[:upper:]' '[:lower:]')\n  local STRING_LOWER=$(printf\
    \ $STRING | tr '[:lower:]' '[:upper:]')\n\n  echo \"$STRING_UPPER\"", "    echo\
    \ \"$1\" | sed -e 's/\\(.\\)/\\U\\1/g' | sed -e 's/\\U\\(.\\)/\\1/g'", "    local\
    \ __string=\"$1\"\n    # Escape special characters\n    __string=\"${__string//[^A-Z]/}\"\
    \n    __string=\"${__string//[^a-z]/}\"\n    __string=\"${__string^^}\"\n    __string=\"\
    ${__string^^}\"\n    echo \"$__string\"", "    local STRING=\"$1\"\n    local\
    \ STRING_UPPERCASE=\"$(tr '[:upper:]' '[:lower:]' <<< \"$STRING\")\"\n    local\
    \ STRING_LOWERCASE=\"$(tr '[:lower:]' '[:upper:]' <<< \"$STRING_UPPERCASE\")\"\
    \n    echo \"$STRING_LOWERCASE\""]
stop_tokens:
- "\n}"

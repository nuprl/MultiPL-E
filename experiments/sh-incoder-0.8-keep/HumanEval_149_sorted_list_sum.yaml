name: HumanEval_149_sorted_list_sum
language: sh
prompt: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
  # deletes the strings that have odd lengths from it,\n# and returns the resulted\
  \ list with a sorted order,\n# The list is always a list of strings and never an\
  \ array of numbers,\n# and it may contain duplicates.\n# The order of the list should\
  \ be ascending by length of each word, and you\n# should return the list sorted\
  \ by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
  # The function should return a list of strings in sorted order.\n# You may assume\
  \ that all words will have the same length.\n# For example:\n# assert list_sort([\"\
  aa\", \"a\", \"aaa\"]) => [\"aa\"]\n# assert list_sort([\"ab\", \"a\", \"aaa\",\
  \ \"cd\"]) => [\"ab\", \"cd\"]\n#\n# $1 is a space-separated list\nsorted_list_sum()\
  \ {\n"
tests: "}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
  \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[\
  \ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai\
  \ au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[\
  \ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
completions: []
stop_tokens:
- "\n}"

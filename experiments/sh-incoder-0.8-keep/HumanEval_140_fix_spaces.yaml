name: HumanEval_140_fix_spaces
language: sh
prompt: "#!/bin/bash\n# Given a string text, replace all spaces in it with underscores,\
  \ \n# and if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# fix_spaces(\"Example\") == \"Example\"\n# fix_spaces(\"Example\
  \ 1\") == \"Example_1\"\n# fix_spaces(\" Example 2\") == \"_Example_2\"\n# fix_spaces(\"\
  \ Example   3\") == \"_Example-3\"\n#\n# $1 is a string\nfix_spaces() {\n"
tests: "}\n\ncandidate() {\n    fix_spaces \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"Example\") = \"Example\" ]]\n    [[ $(candidate \"Mudasir Hanif\
  \ \") = \"Mudasir_Hanif_\" ]]\n    [[ $(candidate \"Yellow Yellow  Dirty  Fellow\"\
  ) = \"Yellow_Yellow__Dirty__Fellow\" ]]\n    [[ $(candidate \"Exa   mple\") = \"\
  Exa-mple\" ]]\n    [[ $(candidate \"   Exa 1 2 2 mple\") = \"-Exa_1_2_2_mple\" ]]\n\
  }\n\nrun_test"
completions: ["  # Remove spaces from the beginning and end of the string \n  local\
    \ text=\"$1\"\n  local fixed=\"\"\n  # If the string starts and ends with spaces,\
    \ just return the string\n  if [[ \"$text\" == *\" \"$* ]]; then\n    echo \"\
    $text\"\n  # Otherwise, we need to fix the spaces \n  else\n    while [[ \"$text\"\
    \ =~ \\ ]] && [[ \"$text\" != *\"$\"* ]]; do\n      fixed=\"$fixed$\" \n     \
    \ text=\"${text#\\}\"\n    done\n    echo \"$fixed$text\"\n  fi", '  echo "$1"
    | sed "s/ /_/g; s/  */ _/g;"', "    local STRING=\"$1\"\n    local i\n    local\
    \ n\n    # replace all spaces in $STRING with _\n    STRING=\"$(echo \"$STRING\"\
    \ | sed 's/ /_/g')\"\n    # find all consecutive spaces in $STRING\n    i=${#STRING}\n\
    \    for (( n=0 ; n < i ; n++ )); do\n        if [[ ${STRING:$((n+1)):1} = \"\
    \ \" ]]; then\n            STRING=${STRING:0:$((n+1))}\n        fi\n    done\n\
    \    echo \"$STRING\"", "   local temp=${1/// }\n   local i=${#temp}\n   while\
    \ [ $i -gt 1 ]\n   do\n      temp=\"${temp// }\"\n      i=$((i-1))\n   done\n\
    \   echo \"${temp}\"", "  local str=$1\n  str=$(echo $str | sed -e 's/ /_/g' -e\
    \ 's/^_//g' -e 's/_$//g')\n  str=${str//+/_}\n  echo $str", "  # Get the string\
    \ into $1\n  local text=$1\n\n  # Replace all spaces with underscores\n  text=`echo\
    \ $text | sed -e 's/ /_/g'`\n\n  # Replace any double spaces with a single space\n\
    \  text=`echo $text | sed -e 's/  */_/g'`\n\n  # If we have more than 2 spaces,\
    \ replace all consecutive spaces with -\n  text=`echo $text | sed -e 's/  */-/g'`\n\
    \n  # Return text (with underscores and dashes replaced)\n  echo $text", "\tlocal\
    \ string=$1\n\tlocal count=0\n\twhile [  $string ]; do\n\t\tcount=`expr $count\
    \ + 1`\n\t\tstring=${string//${string// /_}}\n\tdone\n\techo \"${string// /_}\"",
  "  # Remove extra spaces, in case there are any\n  local result=\"${1//[[:space:]]/}\"\
    \n  # Replace consecutive spaces with underscores\n  result=\"${result// /_}\"\
    \n  # Replace consecutive underscores with dashes\n  result=\"${result//_/-}\"\
    \n  # Replace the - with multiple - if more than 2 consecutive spaces\n  result=\"\
    ${result//--/---}\"\n  # Add beginning and end of lines to the string\n  echo\
    \ \"$result\"", "  local result=${1}\n  local tmp=${result// /_}\n  local tmp=${tmp//\
    \ / }\n  local tmp=${tmp// /_}\n  result=${tmp// /_}\n  result=${result// /_}\n\
    \  result=${result// -}\n  result=${result// -}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// /_}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n  result=${result//\
    \ _}\n  result=${result// _}\n  result=${result// _}\n  result=${result// _}\n\
    \  result=${result// _}\n  result=${result// _}", "  # Make sure $1 has at least\
    \ one space \n  if [[ \"$1\" == \" \" ]] ; then\n    echo \"$1\"\n    return 0\n\
    \  fi\n  \n  # Replace all spaces with underscores\n  while read -r line; do\n\
    \    echo ${line// /_}\n  done < <(echo $1 | grep -o ' ' )\n\n  # Remove spaces\
    \ within double quotes\n  while read -r line; do\n    echo ${line// /\"_}\n  done\
    \ < <(echo $1 | grep -o '\" *[^\"]* *\"')\n\n  # Replace multiple spaces with\
    \ single -\n  while read -r line; do\n    echo ${line// /-}\n  done < <(echo $1\
    \ | grep -o '[ ]*')\n\n  # Remove consecutive spaces\n  while read -r line; do\n\
    \    echo ${line// / }\n  done < <(echo $1 | grep -o '[ ]*[ ]*')\n", "  echo \"\
    $1\" | sed 's/ \\+/_/g; s/  */ -/g'", "  local string=\"$1\"\n  # No change\n\
    \  if [[ \"$string\" = \"$string\" ]]; then\n    return 0\n  fi\n\n  # Replace\
    \ all spaces with underscores\n  local spaced=\"$(echo \"$string\" | sed -e 's/\
    \ /_/g' -e 's/^_//' -e 's/_$//')\"\n  if [[ \"$spaced\" = \"$string\" ]]; then\n\
    \    return 0\n  fi\n\n  # Replace all consecutive spaces with -\n  local no_spaced=\"\
    $(echo \"$spaced\" | sed -e 's/^_//' -e 's/_$//' -e 's/ /_-/g')\"\n  if [[ \"\
    $no_spaced\" = \"$spaced\" ]]; then\n    return 0\n  fi\n\n  # No change\n  return\
    \ 1", "    awk '{\n        # replace 2 or more spaces with underscores\n     \
    \   gsub(/ {2,}/, \"_\");\n\n        # replace consecutive spaces with dash\n\
    \        spaces = \"\";\n        for (i = 1; i <= NF; i++) {\n            if ($i\
    \ != \"\") {\n                spaces = spaces $i \"_\";\n            }\n     \
    \   }\n        print spaces;\n    }' $1", "    local string=\"$1\"\n    local\
    \ fixed_string=${string// /_}\n    local spaces=$(echo \"$string\" | grep -o \"\
    \ \" | wc -l)\n    while [ \"$spaces\" -gt \"2\" ]\n    do\n        local spaces=$(echo\
    \ \"$string\" | grep -o \" \" | wc -l)\n        fixed_string=\"${fixed_string//\
    \ /-}\"\n    done\n    echo \"$fixed_string\"", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' |\n        sed -e 's/ \\([[:space:]]*\\)/_\\1/g' -e 's/ \\([[:space:]]*\\\
    )/-\\1/g'", "  # return string\n  local text\n  text=$1\n\n  local spaces\n  spaces=\"\
    \ \"\n  spaces=\"${spaces// /}\"\n  spaces=\"${spaces// -}\"\n\n  echo \"${text//\
    \ /$spaces}\"", "    local string=$1\n\n    local i=\n    local j=\n    local\
    \ space=''\n    local fixspace=''\n\n    while [[ $string =~ ([^\\s\"]+) (\\S+)\
    \ ]]; do\n        i=${BASH_REMATCH[1]}\n        j=${BASH_REMATCH[2]}\n       \
    \ if [[ $j ]]; then j=$((j-1)); fi\n        if [[ \"$i\" =~ ^$j ]]; then\n   \
    \         space=${BASH_REMATCH[1]}\n            fixspace=\"${BASH_REMATCH[2]}_${BASH_REMATCH[3]}\"\
    \n        else\n            space=${BASH_REMATCH[1]}\n            fixspace=\"\
    ${BASH_REMATCH[2]}_${BASH_REMATCH[3]}\"\n        fi\n        string = ${BASH_REMATCH[0]}\n\
    \    done\n\n    echo $fixspace", "    sed -e 's/[[:space:]]*/_/g' -e 's/ /_/g'",
  "  local TEXT=$1\n  # first replace all spaces with underscores\n  TEXT=$(echo $TEXT\
    \ | tr -d ' ')\n  # now replace any number of spaces with a single -\n  # this\
    \ removes leading and trailing spaces\n  TEXT=$(echo $TEXT | sed 's/  *\\///'\
    \ | sed 's/^ *//')\n  # now replace any consecutive spaces with a single -\n \
    \ # this collapses multiple adjacent spaces into one\n  TEXT=$(echo $TEXT | sed\
    \ 's/  *\\// /g')\n  # now replace leading and trailing _ with spaces\n  TEXT=$(echo\
    \ $TEXT | sed 's/_/ /')\n  # now replace all _ with spaces and return\n  echo\
    \ $TEXT", "  local str=$1\n  # Check if string contains spaces. \n  if [[ \"$str\"\
    \ == *\" \" ]]; then\n    # Replace all spaces with underscores. \n    echo ${str//\
    \ /_}\n  else\n    # Check if string contains 2 consecutive spaces. \n    if [[\
    \ ${str// /_} != $str ]]; then\n      # Replace all consecutive spaces with -.\
    \ \n      echo ${str// /-}\n    else\n      echo $str\n    fi\n  fi"]
stop_tokens:
- "\n}"

name: HumanEval_162_string_to_md5
language: sh
prompt: "#!/bin/bash\n# Given a string 'text', return its md5 hash equivalent string.\n\
  # If 'text' is an empty string, return None.\n# >>> string_to_md5('Hello world')\
  \ == '3e25960a79dbc69b674cd4ec67a72c62'\n#\n# $1 is a string\nstring_to_md5() {\n"
tests: "}\n\ncandidate() {\n    string_to_md5 \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"Hello world\") = \"3e25960a79dbc69b674cd4ec67a72c62\" ]]\n\
  \    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"A B C\") = \"0ef78513b0cb8cef12743f5aeb35f888\"\
  \ ]]\n    [[ $(candidate \"password\") = \"5f4dcc3b5aa765d61d8327deb882cf99\" ]]\n\
  }\n\nrun_test"
completions: ["    # md5 is always available in the md5sum tool.\n    # In some operating\
    \ systems, md5 is in the \"md5\" command, elsewhere\n    # it is available in\
    \ a more general-purpose command.\n    command -v md5sum > /dev/null 2>&1\n  \
    \  if [ $? -eq 0 ]; then\n        md5sum \"$1\" | awk '{ print $1 }'\n    elif\
    \ command -v gmd5 > /dev/null 2>&1; then\n        gmd5 \"$1\" | awk '{ print $1\
    \ }'\n    else\n        echo \"Can't find an md5sum command or an md5sum binary\
    \ executable\" >&2\n        return 1\n    fi", "  # check if $1 is empty\n  [\
    \ ! \"$1\" ] && return 1\n  # append a newline to the string\n  echo \"${1}\"\n\
    \  # get its md5\n  md5sum $1 | awk '{print $1}'", "  # $1 is a string\n  local\
    \ -r text=$1\n\n  md5sum -b --text -- \"$text\"", "    local text=$1\n    local\
    \ md5 length=${#text}\n\n    if [[ $length = 0 ]]; then\n        md5=null\n  \
    \  elif [[ $md5 ]]; then\n        # if we have a md5 hash\n        md5=\"-a $md5\"\
    \n    else\n        # if we don't have a md5 hash, calculate the md5\n       \
    \ md5=\"-a $(md5sum $text | cut -d' ' -f 1)\"\n    fi\n\n    echo \"$md5\"", " \
    \ local string=$1\n  local md5 hexdig\n  md5=`md5 -q -s \"$string\" |cut -f 2\
    \ -d ' '`\n  hexdig=`echo $md5 |cut -f 1 -d '\\n'`\n  echo \"${hexdig}\"", " \
    \   local text=$1\n    if [ -z \"$text\" ]; then return 0; fi\n    local md5sum=''\n\
    \    md5sum=$(md5sum \"$text\") && echo \"$md5sum\"", "  if [ -n \"$1\" ] ; then\n\
    \    echo \"$1\" | md5sum | cut -d ' ' -f 1\n  else\n    echo \n  fi", "  local\
    \ -r text=$1\n  if [[ -z \"$text\" ]]; then\n    return\n  fi\n  local -r hash=$(cat\
    \ << EOF\n$md5_hash\nEOF\n)\n  local -r hex_hash=$(echo \"$hash\" | awk '{print\
    \ $1}')\n  echo -n \"$hex_hash\"", "    if [ ! \"$1\" ]; then return 1; fi\n \
    \   md5sum -s \"$1\"", "  local text=$1\n  local md5sum\n  md5sum=$(md5 -q $text\
    \ | awk '{print $1}')\n  if [ -z \"$md5sum\" ] ; then\n    md5sum=None\n  fi\n\
    \  echo $md5sum", "    if [ -z \"$1\" ] ; then\n        echo \"ERROR: Expected\
    \ a string argument - got nothing.\"\n        exit 1\n    fi\n    \n    local\
    \ MD5_HASH=\"$(echo \"$1\" | md5sum | awk '{ print $1 }')\"\n    echo \"$MD5_HASH\"",
  "  if [[ \"$1\" == '' ]] ; then\n    return\n  fi\n  # $1 is a string and should\
    \ be treated as single string\n  local md5sum=$(echo $1 | md5sum)\n  # return\
    \ md5 sum\n  echo \"$md5sum\"", '    echo "$1" | md5 -', "\tlocal text\n\tlocal\
    \ md5sum\n\n\t# If text is empty string, return None\n\t[ -z \"$1\" ] && return\
    \ 0\n\n\ttext=$1\n\tmd5sum=$(md5sum $text | cut -c9- | head -c10)\n\tif [ -z \"\
    $md5sum\" ] ; then\n\t\techoerr \"Could not determine md5 sum for text $text.\"\
    \n\t\techoerr \"Please provide the text to calculate the md5 sum as the first\
    \ argument.\"\n\t\techoerr \"E.g. 'string_to_md5 Hello world'\"\n\t\treturn 1\n\
    \tfi\n\n\techo \"$md5sum\"", "    if [[ $1 == \"\" ]]; then\n        echo \"None\"\
    \n        return\n    fi\n    local string=$1\n    local md5sum=$(md5sum $string\
    \ | awk '{print $1}')\n    echo \"$md5sum\"", "    if [ ! -z $1 ] ; then\n   \
    \     echo -n $1 | md5sum | awk '{print $1}'\n    fi", "    local text\n    text=\"\
    $1\"\n    if [ \"$text\" = \"\" ]; then\n        echo \"$text\"\n    elif [ \"\
    $text\" = \"$(cat /tmp/tempfile)\" ]; then\n        echo \"$text\"\n    else\n\
    \        echo \"$(md5sum \"$text\" > /tmp/tmpfile)\"\n    fi", "  local string=\"\
    $1\"\n  if [[ -z \"$string\" ]]; then\n    return 0\n  fi\n  echo \"$(md5 -q \"\
    $string\")\"", "    if [ -z \"$1\" ]; then\n        echo \"No text input\"\n \
    \       exit 1\n    fi\n    echo -n \"$1$MD5_SEP$2\"", "  local -r text=$1\n \
    \ if [ -z \"$text\" ]; then\n    return\n  fi\n  local -r md5sum=$(md5sum <<<\
    \ \"$text\")\n  local -r splitmd5_result=$(echo $md5sum | awk '{print $1}')\n\
    \  echo \"${splitmd5_result}\""]
stop_tokens:
- "\n}"

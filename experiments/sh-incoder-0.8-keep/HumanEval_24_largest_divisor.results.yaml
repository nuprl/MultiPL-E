language: sh
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    [ \"$1\" -eq 0 ] && echo \"Invalid input\" && exit 1\n\
    \    [ \"$1\" -lt \"10\" ] && echo \"Invalid input\" && exit 1\n    local i\n\
    \    local d\n    local n\n\n    # n is the highest number that divides n evenly\n\
    \    n=\"$1\"\n\n    for (( i=0; i<10; i++ )); do\n        # if the number n is\
    \ not divisible by i, find that and assign it to the variable d\n        d=\"\
    $(( $n % i ))\"\n        if [ \"$d\" -eq 0 ]; then\n            n=$i\n       \
    \     break\n        fi\n    done\n\n    echo \"$n\"\n}\n\ncandidate() {\n   \
    \ largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\"\
    ) = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate \"10\"\
    ) = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate \"49\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: -1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n=\"$1\"\n    local result=$((n/2))\n    while\
    \ ((n > 0)); do\n        result=$((n/2))\n        if ((n % result)); then\n  \
    \          echo \"$n\"\n            break\n        fi\n        ((n = n - result))\n\
    \    done\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660054699
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n  local number divisor\n  for number in {1..$1};\n  do\n\
    \    divisor=$((number % 2))\n    if [ $divisor -eq 0 ];\n    then\n      echo\
    \ $number\n      break\n    fi\n  done\n}\n\ncandidate() {\n    largest_divisor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1\" ]]\n  \
    \  [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate \"10\") = \"5\" ]]\n \
    \   [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate \"49\") = \"7\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaw0vvvh6.sh: line 11: {1..3}: syntax error: operand expected (error
    token is "{1..3}")

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n\tlocal i num\n\tnum=$(expr $1 \\* $1)\n\tfor i in $(seq\
    \ 2 $((${#num}-1))); do\n\t\tlocal j\n\t\tj=$(expr $i \\/ $num)\n\t\tif [[ $j\
    \ == 0 ]]; then\n\t\t\techo $i\n\t\t\treturn\n\t\tfi\n\t\tnum=$(expr $j \\* $num)\n\
    \tdone\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n result\n    n=\"$1\"\n    result=\"$2\"\n   \
    \ while true; do\n        result=\"$(( $result * $n + 1 ))\"\n        if [ \"\
    $result\" -eq \"$n\" ]; then\n            break\n        fi\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpknsx8_4f.sh: line 12: * 3 + 1 : syntax error: operand expected
    (error token is "* 3 + 1 ")

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n  local n=$1\n  local m=$((n-1))\n  local d=$((m * m / 2))\n\
    \  while [ $d -gt $n ]; do\n    local m=$((m+2))\n    d=$((d * m / 2))\n  done\n\
    \  echo $d\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 2
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local NUM\n    if [ -z $1 ]; then\n        NUM=15\n \
    \   elif [ $1 -gt 1 ]; then\n        NUM=$1\n    else\n        NUM=1\n    fi\n\
    \    if [ $NUM -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n   \
    \ \n    while [ $NUM -gt 0 ]; do\n        (( NUM % 2 != 0 )) && continue\n   \
    \     (( NUM % 3 == 0 )) && continue\n        (( NUM % 5 == 0 )) && continue\n\
    \        (( NUM % 7 == 0 )) && continue\n        (( NUM % 11 == 0 )) && continue\n\
    \        (( NUM % 13 == 0 )) && continue\n        (( NUM % 17 == 0 )) && continue\n\
    \        (( NUM % 19 == 0 )) && continue\n        (( NUM % 23 == 0 )) && continue\n\
    \        (( NUM % 29 == 0 )) && continue\n        (( NUM % 31 == 0 )) && continue\n\
    \        (( NUM % 37 == 0 )) && continue\n        (( NUM % 41 == 0 )) && continue\n\
    \        (( NUM % 43 == 0 )) && continue\n        (( NUM % 47 == 0 )) && continue\n\
    \        (( NUM % 49 == 0 )) && continue\n        (( NUM % 53 == 0 )) && continue\n\
    \        (( NUM % 59 == 0 )) && continue\n        (( NUM % 61 == 0 )) && continue\n\
    \        (( NUM % 67 == 0 )) && continue\n        (( NUM % 71 == 0 )) && continue\n\
    \        (( NUM % 73 == 0 )) && continue\n        (( NUM % 79 == 0 )) && continue\n\
    \        (( NUM % 83 == 0 )) && continue\n        (( NUM % 89 == 0 )) && continue\n\
    \        (( NUM % 97 == 0 )) && continue\n        (( NUM % 101 == 0 )) && continue\n\
    \        (( NUM % 103 == 0 )) && continue\n        (( NUM % 107 == 0 )) && continue\n\
    \        (( NUM % 109 == 0 )) && continue\n        (( NUM % 113 == 0 )) && continue\n\
    \        (( NUM % 117 == 0 )) && continue\n        (( NUM % 121 == 0 )) && continue\n\
    \        (( NUM % 127 == 0 )) && continue\n        (( NU\n}\n\ncandidate() {\n\
    \    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate \"10\"\
    ) = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate \"49\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp8ha769z.sh: line 56: unexpected EOF while looking for matching
    `)''

    /tmp/tmpp8ha769z.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local _number=$1\n    local _max=0\n    local _counter=0\n\
    \    local _divisor\n\n    for _divisor in $(seq 2 $((${_number} / 2)))\n    do\n\
    \        _counter=$((${_counter} + ${_divisor}))\n        if ((${_number} == ${_counter}))\n\
    \        then\n            break\n        elif ((${_counter} == ${_max}))\n  \
    \      then\n            _max=${_counter}\n        elif ((${_counter} > ${_max}))\n\
    \        then\n            _max=${_counter}\n        fi\n    done\n    echo \"\
    ${_max}\"\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: -1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n x i\n    x=$1\n    i=1\n    while [ $x -ge 0\
    \ ]; do\n        n=$(( $x % $i ))\n        [ $n -eq 0 ] && x=$(( $x - $n ))\n\
    \        i=$(( $i + 1 ))\n    done\n    echo \"$x\"\n}\n\ncandidate() {\n    largest_divisor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1\" ]]\n  \
    \  [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate \"10\") = \"5\" ]]\n \
    \   [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate \"49\") = \"7\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660054699
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n=\"$1\"\n    # return an empty string if n is\
    \ 0\n    [[ -z \"$n\" ]] && return 1\n    # return -1 if n is negative\n    [[\
    \ \"$n\" < 0 ]] && return -1\n    # initialize max and min to n\n    max=$n\n\
    \    min=$n\n\n    # iterate while n > 0\n    while (( n > 0 )) ; do\n       \
    \ # store current largest in max\n        max=$(( n>max ? n : max ))\n       \
    \ # store current smallest in min\n        min=$(( n>min ? n : min ))\n      \
    \  # divide n by 2\n        n=$(( n/2 ))\n    done\n    # return max\n    echo\
    \ \"$max\"\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: -1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n \n    n=\"$1\"\n    while [ \"$n\" -le \"$n\"\
    \ ]; do\n        if [ $(echo \"$n / 2 | bc -l\" |bc -l) -eq 0 ]; then\n      \
    \      echo \"$n\"\n            break\n        fi\n        n=$(( $n / 2 ))\n \
    \   done\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660054699
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local i i=1\n    local n p=$1\n    echo \"The smallest\
    \ divisor of $1 is $p\"\n    while (( $i <= $n ))\n    do\n        (( i++))\n\
    \        (( p=$(( $p*$p )) ))\n        echo $i $p\n    done\n}\n\ncandidate()\
    \ {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate\
    \ \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4eei0uk2.sh: line 11: ((: 1 <=  : syntax error: operand expected
    (error token is "<=  ")

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: -1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n result\n    # Read input\n    read -p \"Enter\
    \ a number: \" n\n    result=0\n    while [ \"$n\" -gt 0 ]; do\n        result=$((n%result+1))\n\
    \        n=$((n/result))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate \"10\"\
    ) = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate \"49\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660054699
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n\tlocal number=$1\n\tlocal max_div=0\n\n\twhile true\n\t\
    do\n\t\t(( max_div++ ))\n\t\t(( max_div *= number ))\n\t\t(( number -= max_div\
    \ ))\n\t\tif [[ $number -eq 0 ]]; then\n\t\t\tbreak\n\t\tfi\n\tdone\n\n\techo\
    \ $max_div\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n\tlocal n divisor i\n\tn=\"$1\"\n\tdivisor=\"$2\"\n\ti=1\n\
    \twhile (( $i <= $n )); do\n\t\t(( divisor /= $n ))\n\t\t(( i++ ))\n\tdone\n\t\
    echo \"$divisor\"\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\")\
    \ = \"1\" ]]\n    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\"\
    ) = \"50\" ]]\n    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n  n=$1\n  div=1\n  while [ $div -le $n ]\n  do\n    ((div++))\n\
    \  done\n  echo \"$div\"\n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate\
    \ \"7\") = \"1\" ]]\n    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate\
    \ \"100\") = \"50\" ]]\n    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local -r n=$1\n    # A prime number can not be divided\
    \ by itself.\n    if [ ${n} -eq ${n} ] \n    then\n        return ${n}\n    fi\n\
    \    \n    local -r max_divisor=1\n    local -r max_divisor_count=1\n    \n  \
    \  local -r div=\n    \n    for (( i = 1; i <= n; i++ ))\n    do\n        if [\
    \ ${n} -eq ${i} ]\n        then\n            div=$i\n            continue\n  \
    \      fi\n        \n        # Check to see if division into i goes evenly into\
    \ n\n        local -r divisor_count=$(echo \"( $i / $n )\" | bc)\n        \n \
    \       if [ $divisor_count -eq 1 ]\n        then\n            div=$i\n      \
    \      continue\n        fi\n        \n        if [ $divisor_count -gt $max_divisor_count\
    \ ]\n        then\n            max_divisor_count=$divisor_count\n            max_divisor=$i\n\
    \        fi\n    done\n\n    # Check that we found a divisor and did not exceed\
    \ our max.\n    if [ $max_divisor -ne $n ]\n    then\n        echo \"ERROR: No\
    \ divisor found for $n\"\n        exit $?\n    fi\n    \n    echo \"$max_divisor\"\
    \n}\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n\
    \    [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n  local n=$1\n  local max\n  max=$((n/2))\n  while [ $n -ge\
    \ $max ]; do\n    [ $(( n%$max )) -eq 0 ] && let max--\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n  \
    \  [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn18subn2.sh: line 12: n%0 : division by 0 (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local n=$1\n    local result=0 divisor count=0\n\n  \
    \  # Loop through and find largest divisor using divisor and count\n    while\
    \ [ $count -lt $n ]; do\n        divisor=$(( ($n%$divisor) + 1 ))\n        ((\
    \ n/divisor )) && count=$(( count+1 ))\n    done\n\n    # Return largest divisor\
    \ if count==n\n    [ \"$count\" -eq \"$n\" ] && echo $divisor\n}\n\ncandidate()\
    \ {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n    [[ $(candidate\
    \ \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n    [[ $(candidate\
    \ \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8uyg57cq.sh: line 13: (3%) + 1 : syntax error: operand expected
    (error token is ") + 1 ")

    '
  stdout: ''
  timestamp: 1660054694
- exit_code: 1
  program: "#!/bin/bash\n# For a given number n, find the largest number that divides\
    \ n evenly, smaller than n\n# >>> largest_divisor(15)\n# 5\n#\n# $1 is an integer\n\
    largest_divisor() {\n    local i divisor max result\n\n    max=i\n    for i in\
    \ $(seq 1 $1) ; do\n        divisor=$((i / $max))\n        if [ \"$divisor\" -gt\
    \ \"0\" ]; then\n            max=$divisor\n        fi\n    done\n    if [ \"$max\"\
    \ -eq \"1\" ]; then\n        result=1\n    else\n        result=$max\n    fi\n\
    }\n\ncandidate() {\n    largest_divisor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\") = \"1\" ]]\n    [[ $(candidate \"7\") = \"1\" ]]\n  \
    \  [[ $(candidate \"10\") = \"5\" ]]\n    [[ $(candidate \"100\") = \"50\" ]]\n\
    \    [[ $(candidate \"49\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054694

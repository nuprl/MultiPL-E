language: sh
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local a b c d e i k monotonic_result\
    \ j\n    IFS=' ' read -r -a a < <(printf '%s\\n' \"$1\")\n    monotonic_result=1\n\
    \    for (( i=0; i<${#a[@]}; ++i )); do\n        b=${a[i]}\n        for (( j=0;\
    \ j<i; ++j )); do\n            c=${a[j]}\n            if (( b > c )); then\n \
    \               a[j]=${b}\n            else\n                a[j]=${c}\n     \
    \       fi\n        done\n        if (( i )); then\n            echo \"${a[@]}\"\
    \n        fi\n        if (( i==1 )); then\n            echo \"${a[@]}\"\n    \
    \    fi\n        if (( ! ( i==1 ))); then\n            echo ${a[*]}\n        fi\n\
    \        echo \"${a[*]}\"\n        for (( k=0; k<${#a[@]}; ++k )); do\n      \
    \      if (( a[k] > a[k+1] )); then\n                monotonic_result=0\n    \
    \            break\n            fi\n        done\n        if (( monotonic_result\
    \ )); then\n            echo \"${a[*]}\"\n        fi\n    done\n    echo \"${a[*]}\"\
    \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local list=\"$1\"\n\n    local ret=0\n\
    \    local last=\"${list[-1]}\"\n\n    for element in $list; do\n        if [\
    \ \"$last\" == \"$element\" ]; then\n            ret=-1\n        else\n      \
    \      ret=1\n        fi\n        last=\"$element\"\n    done\n\n    return $ret\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprd3a7u48.sh: line 15: list: bad array subscript

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n\tlocal -r array=\"${1// / }\"\n\tlocal\
    \ previous\n\tlocal current\n\tlocal i\n\n\tprevious=\"$(tac \"${array}\")\"\n\
    \tcurrent=\"$(tac \"${previous}\")\"\n\n\tfor i in $(seq 1 \"${#array}\"); do\n\
    \t\tif [[ ${previous} < ${array[i]} ]]; then\n\t\t\treturn False\n\t\tfi\n\t\t\
    if [[ ${current} > ${array[i]} ]]; then\n\t\t\treturn True\n\t\tfi\n\t\tprevious=\"\
    ${current}\"\n\t\tcurrent=\"$(tac \"${previous}\")\"\n\tdone\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'tac: failed to open ''1 2 4 10'' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    tac: failed to open '''' for reading: No such file or directory

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local n i val=1\n    for n in \"$@\"\
    ; do\n        val=$(( $val > n ? $n : $val ))\n    done\n    return $val\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8_husgnc.sh: line 14: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local i f flag\n    local -a x\n  \
    \  x=( \"$@\" )\n    f=\"${x[0]}\"\n    for (( i=1; i<${#x[@]}; i++ )); do\n \
    \       if [ \"${x[$i]}\" -gt \"${x[i-1]}\" ]; then\n            flag=false\n\
    \            break\n        elif [ \"${x[$i]}\" -lt \"${x[i-1]}\" ]; then\n  \
    \          flag=true\n            break\n        fi\n    done\n    echo $flag\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n  local i\n  for i in \"$1\"; do\n    local\
    \ j\n    for j in \"$1\"; do\n      [[ ${i} -gt ${j} ]] || return 1\n    done\n\
    \  done\n  return 0\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqf4mpbj.sh: line 16: [[: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 2
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local list_in_string=$1\n    local\
    \ list_in_array=( $list_in_string )\n    local list_in_length=${#list_in_array[@]}\n\
    \    local length=$list_in_length\n    local max_so_far\n    local i\n    local\
    \ j\n    local last_value\n    local flag\n\n    for i in {0..(length - 1)}; do\n\
    \        j=$i\n        last_value=${list_in_array[$i]}\n        max_so_far=-1\n\
    \        for (( j=i; j >= 0; j-- )); do\n            if (( ${list_in_array[j]}\
    \ > last_value )); then\n                last_value=${list_in_array[j]}\n    \
    \            max_so_far=$j\n            fi\n        done\n        if (( max_so_far\
    \ < 0 )); then\n            flag=0\n            break\n        else\n        \
    \    flag=1\n            break\n        fi\n    done\n    if [ \"$flag\" = \"\
    1\" ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi98z0msw.sh: line 22: syntax error near unexpected token `(''

    /tmp/tmpi98z0msw.sh: line 22: `    for i in {0..(length - 1)}; do''

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local l=(\"$1\")\n    for (( i=1 ;\
    \ i<=${#l} ; i++ )); do\n        local i1=$(( $i - 1 ))\n        local i2=$i\n\
    \        if [[ ${l[$i]} -gt ${l[$i1]} ]] ||\n           [[ ${l[$i]} -lt ${l[$i1]}\
    \ ]]; then\n            local l1=$(( $i - 1 ))\n            local l2=$(( $i ))\n\
    \            if [[ ${l[$i]} -gt ${l[$l1]} ]] ||\n               [[ ${l[$i]} -lt\
    \ ${l[$l1]} ]]; then\n                local l3=$(( $i ))\n                l=$((\
    \ ${#l[@]} - 1 ))\n                l=$l${l3#$l}\n                i=$(( $i - 1\
    \ ))\n            fi\n        fi\n    done\n    echo -n \"${l[@]}\"\n    return\
    \ 0\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcied2lkd.sh: line 16: [[: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")

    /tmp/tmpcied2lkd.sh: line 17: [[: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n  local i vals val\n  local n\n  vals=$1\
    \ val=0\n  for ((i=0; i < ${#vals[@]}; i++)); do\n    val=${vals[$i]}\n    if\
    \ [ $val -gt $val ]; then\n      return 1\n    elif [ $val -ge $val ]; then\n\
    \      if ((n > 0)); then\n        return 1\n      else\n        return 0\n  \
    \    fi\n    else\n      if ((n < 0)); then\n        return 1\n      else\n  \
    \      return 0\n      fi\n    fi\n    n=$((n+1))\n  done\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpef8flsau.sh: line 17: [: too many arguments

    /tmp/tmpef8flsau.sh: line 19: [: too many arguments

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n  local -r n=$1\n  local -r a=()\n  local\
    \ -r b=()\n  local -r u=()\n  local -r v=()\n  local -r x\n  local i item\n  a=($a)\n\
    \  b=($b)\n  u=($u)\n  v=($v)\n  x=0\n  while [ $n -gt 0 ]; do\n    item=$((n-1))\n\
    \    if [ $n -gt 1 ]; then\n      x=1\n      a=($a)\n      b=($b)\n      u=($u)\n\
    \      v=($v)\n    fi\n    if [ $item -le $n ]; then\n      a=($a \"$item\")\n\
    \      u=($u \"$item\")\n    elif [ $item -gt $n ]; then\n      b=($b \"$item\"\
    )\n      v=($v \"$item\")\n    fi\n    n=$((n - 1))\n  done\n  a=($a)\n  b=($b)\n\
    \  u=($u)\n  v=($v)\n  local len\n  len=${#a[@]}\n  (( len-- ))\n  len=${#b[@]}\n\
    \  (( len-- ))\n  len=${#u[@]}\n  (( len-- ))\n  len=${#v[@]}\n  (( len-- ))\n\
    \  # if $len is 0 then $1 is empty and thus sorted\n  [ -z \"$len\" ] && return\
    \ 1\n  # if $len is 1 then $1 is not empty and thus sorted\n  [ \"$len\" = 1 ]\
    \ && return 0\n  for (( i=len; i>1; i-- )); do\n    local tmp\n    tmp=${a[i]}\n\
    \    for (( j=i; j>1; j-- )); do\n      if [ \"$tmp\" -gt ${a[j]} ]; then\n  \
    \      a[j-1]=$a[j]\n      fi\n    done\n    a[1-1]=$tmp\n  done\n  return 0\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphf4xcuh7.sh: line 19: a: readonly variable

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local n=$#\n    local a\n    local\
    \ min\n    local max\n\n    # Special case when only one element in list\n   \
    \ if [ ${n} -eq 1 ]; then\n        return 0\n    fi\n\n    # Return True if all\
    \ elements are the same\n    if [ ${n} -eq 2 ] && [ \"$1\" == \"$2\" ]; then\n\
    \        return 0\n    fi\n\n    # Make sure they are arrays\n    a=$1\n    shift\n\
    \    if [ \"$#\" -lt 1 ]; then\n        echo \"Invalid input. Arguments must be\
    \ an array of numbers\"\n        return 1\n    fi\n\n    # Check to see if all\
    \ elements are the same if so, then all are monotonically\n    # increasing\n\
    \    if [ \"$n\" -eq 1 ]; then\n        min=$(echo \"$a[0]\" | bc)\n        max=$(echo\
    \ \"$a[1]\" | bc)\n    elif [ \"$n\" -gt 1 ]; then\n        # Sort list to get\
    \ min and max elements\n        sort -n \"$a\" | tail -n +2\n        min=$(echo\
    \ \"$a[0]\" | bc)\n        max=$(echo \"$a[1]\" | bc)\n    else\n        return\
    \ 1\n    fi\n\n    # Iterate through list elements\n    for element in $a; do\n\
    \        if [ \"$element\" -gt \"$max\" ]; then\n            echo \"Not monotonically\
    \ increasing\"\n            return 1\n        elif [ \"$element\" -lt \"$min\"\
    \ ]; then\n            echo \"Not monotonically decreasing\"\n            return\
    \ 1\n        fi\n    done\n\n    # Return False if all elements are the same\n\
    \    if [ \"$a\" == *\"$min\"* ] && [ \"$a\" == *\"$max\"* ]; then\n        return\
    \ 0\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    set +o errexit\n    local -r pattern=\"\
    $1\"\n    local -r list=\n    local -r out\n    local i\n    local j\n    list=\"\
    $2\"\n    if [[ \"${#list}\" -lt 2 ]]; then\n        out=\"False\"\n        return\n\
    \    fi\n    for ((i=1; i<${#list}; i++)); do\n        j=$((i+1))\n        if\
    \ [[ ${list[i]} -gt ${list[j]} ]]; then\n            out=\"True\"\n          \
    \  break\n        fi\n    done\n    set -o errexit\n    echo \"${out}\"\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi5xpk2u1.sh: line 18: list: readonly variable

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: -1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    set -euo pipefail\n    local elements=($1)\n\
    \    local sorted=false\n    local start=$(( ${#elements[@]} - 1 ))\n    local\
    \ stop=0\n\n    while (( $stop < $start )); do\n        local mid=$(( $stop +\
    \ $start ))\n        local sorted=true\n        local last=-1\n\n        for i\
    \ in $(seq $start $mid); do\n            if [[ ${elements[$i]} -le ${elements[$last]}\
    \ ]]; then\n                sorted=false\n                break\n            else\n\
    \                last=$i\n            fi\n        done\n\n        if [ \"$sorted\"\
    \ = true ]; then\n            stop=$mid\n        else\n            start=$mid\n\
    \        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=8 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660054663
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local a b\n    for b in \"$1\"; do\n\
    \        a=$a\n        local c\n        for c; do\n            if [ \"$a\" -lt\
    \ \"$b\" ] || [ \"$a\" -gt \"$b\" ]; then\n                a=$b\n            fi\n\
    \        done\n    done\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz7shdmq3.sh: line 17: [: : integer expression expected

    /tmp/tmpz7shdmq3.sh: line 17: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n  local -r file=\"$1\"\n  if [[ \"$#\"\
    \ -lt 1 ]]; then\n    echo \"${file} file not provided.\"\n    exit 1\n  fi\n\
    \  local -r file_sorted=$(mktemp \"${file}.XXXXXXXXXX\")\n  sort \"${file}\" >\
    \ \"${file_sorted}\"\n  local -r sorted_list=$(diff -q \"${file_sorted}\" \"${file_sorted}.backup\"\
    )\n  rm \"${file_sorted}\" \"${file_sorted}.backup\"\n  [[ \"$sorted_list\" ]]\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sort: cannot read: ''1 2 4 10'': No such file or directory

    diff: 1 2 4 10.OIieg7zQZH.backup: No such file or directory

    rm: cannot remove ''1 2 4 10.OIieg7zQZH.backup'': No such file or directory

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local i j n prev\n    n=${#1}\n   \
    \ for (( j=1; j<n; j=j+1 )); do\n        prev=${1:j:1}\n        for ((i=1; i<j;\
    \ i=i+1 )); do\n            if [[ $prev -gt ${1:i:1} ]]; then\n              \
    \  return 0\n            fi\n        done\n        return 1\n    done\n    return\
    \ 1\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local list_elements=(\"${@}\")\n  \
    \  local list_len=\"${#list_elements[@]}\"\n    local is_decreasing\n\n    # Walk\
    \ backwards until we hit a negative number.\n    for (( i = ${list_len}; i >=\
    \ 1; i-- )); do\n        if [[ $(( ${list_elements[i - 1]} > ${list_elements[i]}\
    \ )) == 1 ]]; then\n            return 1\n        fi\n    done\n    return 0\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv32nn0i9.sh: line 18: 1 2 4 10 >  : syntax error in expression
    (error token is "2 4 10 >  ")

    '
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local i last iend mid iprev m1 m2 out\n\
    \    out=false\n    IFS=', ' read -a m1 <<< \"$1\"\n    for ((i=1; i<\"${#m1[@]}\"\
    ; i++ )); do\n        IFS=', ' read -a m2 <<< \"$1\"\n        last=${m1[$(( i-1\
    \ ))]}\n        for (( j=0; j<=\"${#m2[@]}\"; j++ )); do\n            if (( m1[$((\
    \ j-1 ))]>m2[$(( j-1 ))] )); then\n                out=\"true\"\n            \
    \    break\n            else\n                if (( last>m2[$(( j-1 ))] )); then\n\
    \                    out=\"true\"\n                    break\n               \
    \ else\n                    last=${m2[$(( j-1 ))]}\n                fi\n     \
    \       fi\n        done\n        if (( out )); then\n            break\n    \
    \    fi\n    done\n    echo $out\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n  local -r line=\"$1\"\n  shift\n  local\
    \ -r list=( $line )\n  local test\n  local i\n\n  for i in \"${list[@]}\"; do\n\
    \    test=$(expr \"$i\" \"$2\")\n    if [ \"$test\" -lt 0 ]; then\n      test=$(expr\
    \ \"$i\" \"$3\")\n    fi\n    if [ \"$test\" -gt 0 ]; then\n      echo \"$i\"\n\
    \      return 0\n    fi\n  done\n  echo \"$line\"\n  return 1\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018\u2019\n/tmp/tmpi_y6_m__.sh:\
    \ line 20: [: : integer expression expected\n/tmp/tmpi_y6_m__.sh: line 23: [:\
    \ : integer expression expected\nexpr: syntax error: unexpected argument \u2018\
    \u2019\n/tmp/tmpi_y6_m__.sh: line 20: [: : integer expression expected\n/tmp/tmpi_y6_m__.sh:\
    \ line 23: [: : integer expression expected\nexpr: syntax error: unexpected argument\
    \ \u2018\u2019\n/tmp/tmpi_y6_m__.sh: line 20: [: : integer expression expected\n\
    /tmp/tmpi_y6_m__.sh: line 23: [: : integer expression expected\nexpr: syntax error:\
    \ unexpected argument \u2018\u2019\n/tmp/tmpi_y6_m__.sh: line 20: [: : integer\
    \ expression expected\n/tmp/tmpi_y6_m__.sh: line 23: [: : integer expression expected\n"
  stdout: ''
  timestamp: 1660054658
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> monotonic([1, 2, 4, 20])\n# True\n# >>> monotonic([1,\
    \ 20, 4, 10])\n# False\n# >>> monotonic([4, 1, 0, -10])\n# True\n#\n# $1 is a\
    \ space-separated list\nmonotonic() {\n    local list prev last\n    local count\
    \ count1 count2 count3\n    list=\"$1\"\n    prev=last=\"\"\n    count1=0\n  \
    \  count2=0\n    count3=0\n\n    for element in \"${list}\"; do\n        local\
    \ element1=\"${element}\"\n        local element2=\"$(echo \"$element\" | sed\
    \ -e 's/^[ \\t]*//')\"\n        local element3=\"$(echo \"$element\" | sed -e\
    \ 's/[ \\t]*$//')\"\n        local last1=\"${last}\"\n        local last2=\"${element1}\"\
    \n        local last3=\"${element2}\"\n        if [[ \"$element3\" -gt \"$last1\"\
    \ ]]; then\n            prev=$last1\n            last1=$element3\n        elif\
    \ [[ \"$element2\" -gt \"$last2\" ]]; then\n            prev=$last2\n        \
    \    last2=$element2\n        fi\n\n        if [[ \"$element\" -gt \"$last3\"\
    \ ]]; then\n            count1=$((count1+1))\n        elif [[ \"$element\" -eq\
    \ \"$last3\" ]]; then\n            count1=$((count1+1))\n        else\n      \
    \      count2=$((count2+1))\n        fi\n        count3=$((count3+1))\n    done\n\
    \n    if [ \"$count3\" -gt \"$count2\" ]; then\n        return false\n    elif\
    \ [ \"$count2\" -gt \"$count1\" ]; then\n        return true\n    else\n     \
    \   if [ \"$count1\" -gt \"$count2\" ]; then\n            return true\n      \
    \  else\n            return false\n        fi\n    fi\n}\n\ncandidate() {\n  \
    \  monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmy9oqh7k.sh: line 27: [[: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")

    /tmp/tmpmy9oqh7k.sh: line 30: [[: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")

    /tmp/tmpmy9oqh7k.sh: line 35: [[: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")

    /tmp/tmpmy9oqh7k.sh: line 37: [[: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")

    /tmp/tmpmy9oqh7k.sh: line 48: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660054658

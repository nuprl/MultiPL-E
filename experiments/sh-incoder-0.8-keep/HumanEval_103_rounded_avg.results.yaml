language: sh
name: HumanEval_103_rounded_avg
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local n=$1\n  local m=$2\n  if ((n > m)) ; then\n    echo -1\n  else\n\
    \    local nstr=$(printf \"%0${m}b\" $n)\n    local mstr=$(printf \"%0${m}b\"\
    \ $m)\n    local res\n    local len=$((${#nstr} - ${#mstr}))\n    if (( len >\
    \ 0 )); then\n      res=$(echo $nstr ${mstr:0:$len})\n    else\n      res=$(echo\
    \ $nstr)\n    fi\n    echo $(echo \"$res\" | sed -e 's/^.\\(.\\)/\\1\\1/')\n \
    \ fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\"\
    ) = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n\
    \    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  let num=$(echo \"$1\" \"$2\" | bc)\n  if [[ \"$num\" =~ ^[0-9]+$ ]]; then\n\
    \    echo \"$num\"\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmplzlofck3.sh: line 15: let: num=: syntax error: operand expected (error
    token is "=")

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 2
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    local i j;\n    local sum;\n    local avg;\n    local sum0;\n\n    #\
    \ Sum up to n\n    sum=0;\n    for (i=$1; $i<=$2; $i++) {\n        sum=`expr $sum\
    \ + $i`;\n    }\n    avg=`echo $sum / $2`;\n\n    # Round the avg to nearest int\n\
    \    sum0=$(expr $sum / $2);\n    sum0=$(( $sum0 | $(( ( $sum0 - $(( 10#$sum0\
    \ )) % $(( 10#$(echo \"$sum / $2\" | bc -l) )) )) ));\n\n    echo \"$sum0\";\n\
    }\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"\
    0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[\
    \ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\"\
    \ \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgno57eny.sh: line 22: syntax error near unexpected token `(''

    /tmp/tmpgno57eny.sh: line 22: `    for (i=$1; $i<=$2; $i++) {''

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    local num_1 num_2\n    num_1=$1\n    num_2=$2\n    echo $(($num_1 >>\
    \ $num_2))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    let n=$1; let m=$2; let i=$3; let d=$4; let e=$5; let f=$6; let g=$7;\
    \ let h=$8; let j=$9; let k=$10; let l=$11; let m=$12; let n=$13; let o=$14; let\
    \ p=$15; let q=$16; let r=$17; let s=$18; let t=$19; let u=$20; let v=$21; let\
    \ w=$22; let x=$23; let y=$24; let z=$25; let A=$26; let B=$27; let C=$28; let\
    \ D=$29; let E=$30; let F=$31; let G=$32; let H=$33; let J=$34; let K=$35; let\
    \ L=$36; let M=$37; let N=$38; let O=$39; let P=$40; let Q=$41; let R=$42; let\
    \ S=$43; let T=$44; let U=$45; let V=$46; let W=$47; let X=$48; let Y=$49; let\
    \ Z=$50; let A=$51; let B=$52; let C=$53; let D=$54; let E=$55; let F=$56; let\
    \ G=$57; let H=$58; let J=$59; let K=$60; let L=$61; let M=$62; let N=$63; let\
    \ O=$64; let P=$65; let Q=$66; let R=$67; let S=$68; let T=$69; let U=$70; let\
    \ V=$71; let W=$72; let X=$73; let Y=$74; let Z=$75; let A=$76; let B=$77; let\
    \ C=$78; let D=$79; let E=$80; let F=$81; let G=$82; let H=$83; let J=$84; let\
    \ K=$85; let L=$86; let M=$87; let N=$88; let O=$89; let P=$90; let Q=$91; let\
    \ R=$92; let S=$93; let T=$94; let U=$95; let V=$96; let W=$97; let X=$98; let\
    \ Y=$99; let Z=$100; let A=$101; let B=$102; let C=$103; let \n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdt8xu1fl.sh: line 15: let: i=: syntax error: operand expected (error
    token is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: d=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: e=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: f=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: g=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: h=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: j=: syntax error: operand expected (error token
    is "=")

    /tmp/tmpdt8xu1fl.sh: line 15: let: expression expected

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n\techo \"$(($1 + $2 + $3 + $4 + $5 + $6 + $7 + $8 + $9 + $10 + $11 + $12\
    \ + $13))\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local n=$1\n  local m=$2\n\n  if [ $n -ge $m ]; then\n    local i\n   \
    \ local sum=0\n    local j\n    local remainder\n    local sum1=0\n\n    for ((i=$m;\
    \ i>$n; i--)); do\n      sum=$((sum + $i))\n    done\n\n    sum=$((sum/(n-m)))\n\
    \    sum1=$(echo \"$sum\" | bc -l)\n\n    remainder=$((sum - sum1))\n\n    if\
    \ [ $remainder -eq 0 ]; then\n      echo \"$sum1\"\n    else\n      echo \"$sum1\"\
    \n    fi\n  else\n    echo \"-1\"\n  fi\n}\n\ncandidate() {\n    rounded_avg \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n\
    \    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\"\
    \ \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    let \"n=$1\"\n    let \"m=$2\"\n    let \"sum=$n+$m+$n+$m+$n+$m+$n+$m+$n+$m\"\
    \n    echo -n \"$sum\"\n    let \"sum=$sum/($n+$m)\"\n    echo $sum\n    \n  \
    \  let \"sum1=$(echo \"$sum\" | bc)\"\n    let \"sum2=$sum1\"\n    echo $sum1\n\
    \    echo $sum2\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local -i n=\"$1\"\n  local -i m=\"$2\"\n  ((n>m)) && return -1\n  local\
    \ i\n  local t\n  (( t = n - m ))\n  for i in $(seq $t) ; do\n    printf \"0b\"\
    \n  done\n  printf \"1b\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local int_from_to_str \"int_from_to_str\"\n  local rounded \"rounded\"\n\
    \  \n  int_from_to_str=\"$1 $2\"\n  rounded=$(echo \"$int_from_to_str\" | bc);\n\
    \  \n  if [ \"$rounded\" -lt \"2\" ]; then\n    return -1\n  fi;\n  \n  printf\
    \ \"0b${rounded:0:1}\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmp0t0jikl_.sh: line 21: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    let n=$1\n    let m=$2\n    let nmax=$(($n+m))\n    let nmin=$(($n-$m))\n\
    \    let ndiff=$(($nmax-$nmin))\n    let digits=$(($ndiff/($nmax*2)))\n\n    if\
    \ [ $n -gt $m ]\n    then\n        echo \"-1\"\n    else\n        echo $(echo\
    \ \"0b$((n%21))\" | bc)\n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n   \
    \ [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n\tlocal integer=\"$1\"\n\tlocal integer2=\"$2\"\n\tlocal result=\"0\"\n\n\
    \tif [ $integer -le $integer2 ]; then\n\t\tresult=\"1$result\"\n\telse\n\t\tresult=\"\
    -1$result\"\n\tfi\n\n\techo -n \"$result\"\n}\n\ncandidate() {\n    rounded_avg\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\"\
    \ ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"\
    964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"\
    0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n\
    \    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate\
    \ \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") =\
    \ \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n\
    \    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\")\
    \ = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n        local n=$1; shift\n        local m=$1; shift\n        local ndec=$((10#$n))\n\
    \        local mdec=$((10#$m))\n        local nbin=${#ndec}\n        local mbin=${#mdec}\n\
    \        local sum=0\n        for ((i=0;i<${mbin};++i)); do\n                let\
    \ sum+=${ndec:i:1}\n        done\n        ((sum+=(${ndec:$mbin:1})))\n       \
    \ ((sum/=${mbin}))\n        if (( $n >= $m )); then\n                echo -1\n\
    \        else\n                echo \"${sum:0b}\"\n        fi\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6zqv7ao1.sh: line 25: ((: sum+=(): syntax error: operand expected
    (error token is ")")

    /tmp/tmp6zqv7ao1.sh: line 30: sum: 0b: value too great for base (error token is
    "0b")

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local n=$1; shift\n  local m=$1; shift\n  local sum=0\n  while (( n >=\
    \ m )); do\n    sum=$(( $sum + $n ))\n    n=$(( $n - 1 ))\n  done\n  echo \"$((\
    \ $sum / $m ))\"\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  declare -a n=$1\n  declare -a m=$2\n  declare -a i\n  declare -a x\n  declare\
    \ -a nminusm\n\n  nminusm=$[${#n[@]}-${#m[@]}]\n  x=0\n  for i in ${!n[@]}; do\n\
    \    x=$((x${#n[@]}-${#m[@]}-1))\n  done\n\n  for i in ${!n[@]}; do\n    (( ${i}\
    \ < ${#m[@]} )) && m[ $i ]=$(( ${m[$i]} + ${n[$i]} ))\n  done\n\n  for i in ${!n[@]};\
    \ do\n    (( ${i} < ${#m[@]} )) && m[ $i ]=$(( ${m[$i]} + ${n[$i]} ))\n  done\n\
    \n  (( ${#m[@]} > ${#n[@]} )) && return -1\n  (( ${#n[@]} > ${#m[@]} )) && return\
    \ -1\n\n  for i in ${!m[@]}; do\n    (( ${i} < ${#n[@]} )) && return -1\n  done\n\
    \n  (( ${#n[@]} > ${#m[@]} )) && return -1\n\n  for i in ${!m[@]}; do\n    ((\
    \ ${i} < ${#n[@]} )) && return -1\n  done\n\n  (( ${#n[@]} > ${#m[@]} )) && return\
    \ -1\n\n  for x in ${!m[@]}; do\n    (( ${x} < ${#n[@]} )) && return -1\n  done\n\
    \n  (( ${#n[@]} > ${#m[@]} )) && return -1\n\n  echo \"${n[@]/1/x}\"\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    local n m sum\n    if [ \"$1\" -gt \"$2\" ]\n    then\n        echo -1\n\
    \    else\n        n=$1\n        m=$2\n        sum=$(( $n + m ))\n        if [\
    \ \"$sum\" -gt \"33\" ]\n        then\n            sum=$(( $sum - 33 ))\n    \
    \    else\n            sum=$(( $sum + 33 ))\n        fi\n        echo \"$sum\"\
    \n    fi\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"\
    13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n\tlocal n=$1\n\tlocal m=$2\n\tlocal nbin=\"$(printf \"%b\" $n)\"\n\tlocal\
    \ mbin=\"$(printf \"%b\" $m)\"\n\tlocal ans=\"\"\n\tlocal i=0\n\tlocal j=0\n\n\
    \twhile ((i <= $((${#nbin})+1))); do\n\t\tif [ \"$nbin\" = \"$mbin\" ]; then\n\
    \t\t\tans=\"$ans\"${nbin:$i:1}\n\t\t\tbreak\n\t\tfi\n\t\t((i+=1))\n\tdone\n\n\t\
    local mask=0\n\t((${#ans} > ${#m}))\n\tif [ $? -eq 0 ]; then\n\t\twhile ((j <=\
    \ ${#mbin})); do\n\t\t\t((mask+=1))\n\t\t\tans=\"$ans\"${mbin:$j:1}\n\t\t\t((j+=1))\n\
    \t\tdone\n\tfi\n\n\tprintf \"0b${ans:0:$((${#ans}-1))}\\n\"\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpke2wg5r9.sh: command substitution: line 23: syntax error near unexpected
    token `+1''

    /tmp/tmpke2wg5r9.sh: command substitution: line 23: `(${#nbin})+1''

    /tmp/tmpke2wg5r9.sh: line 23: ((: i <= : syntax error: operand expected (error
    token is "<= ")

    /tmp/tmpke2wg5r9.sh: line 41: $((${#ans}-1)): substring expression < 0

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n    local _avg=$(( $1 + $2 ))\n    local _mod=$(( $_avg % 2 ))\n    local\
    \ _ans=0\n    local i\n    for i in $(seq 0 $(( _avg - 1 ))); do\n        _ans=$(echo\
    \ \"0\" | bc)\n        if [ $_mod -eq 1 ] ; then\n            _ans=$(echo \"1$(_ans)\"\
    \ | bc)\n        fi\n    done\n    echo $(echo \"$(_ans)\" | bc)\n}\n\ncandidate()\
    \ {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n \
    \   [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate\
    \ \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\")\
    \ = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\"\
    \ ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate\
    \ \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\")\
    \ = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmpah9crlg0.sh: line 25: _ans: command not found

    '
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local a b c d e f g h i j k l\n  local n=$1\n  local m=$2\n  if [ $n -gt\
    \ $m ]; then\n    return -1\n  fi\n  a=$(( $n - $m ))\n  b=$(( $n - 1 ))\n  c=$((\
    \ $n - 1 ))\n  d=$(( $n - 1 ))\n  e=$(( $n - 1 ))\n  f=$(( $n - 1 ))\n  g=$((\
    \ $n - 1 ))\n  h=$(( $n - 1 ))\n  i=$(( $n - 1 ))\n  j=$(( $n - 1 ))\n  k=$((\
    \ $n - 1 ))\n  l=$(( $n - 1 ))\n  printf \"%b\" $(( $a + $b + $c + $d + $e + $f\
    \ + $g + $h + $i + $j + $k + $l ))\n}\n\ncandidate() {\n    rounded_avg \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n \
    \   [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"\
    977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\"\
    \ ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate\
    \ \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") =\
    \ \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n\
    \    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"\
    7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate\
    \ \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487
- exit_code: 1
  program: "#!/bin/bash\n# You are given two positive integers n and m, and your task\
    \ is to compute the\n# average of the integers from n through m (including n and\
    \ m). \n# Round the answer to the nearest integer and convert that to binary.\n\
    # If n is greater than m, return -1.\n# Example:\n# rounded_avg(1, 5) => \"0b11\"\
    \n# rounded_avg(7, 5) => -1\n# rounded_avg(10, 20) => \"0b1111\"\n# rounded_avg(20,\
    \ 33) => \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg()\
    \ {\n  local n=$1\n  local m=$2\n\n  if [ $n -gt $m ]\n  then\n    return -1\n\
    \  fi\n\n  local result=\n\n  for (( x = $n; x <= $m; x++ ))\n  do\n    local\
    \ digit=$(( $x / $n ))\n    local remainder=$(( $x % $n ))\n    result+=\"$digit${remainder}\"\
    \n  done\n\n  local result2=\n  if [ $n -lt $m ]\n  then\n    for (( x = $m; x\
    \ >= $n; x-- ))\n    do\n      local digit=$(( $x / $m ))\n      local remainder=$((\
    \ $x % $m ))\n      result2+=\"$digit${remainder}\"\n    done\n  else\n    local\
    \ digit=$(( $m / $n ))\n    local remainder=$(( $m % $n ))\n    result2+=\"$digit${remainder}\"\
    \n  fi\n\n  echo $result2\n}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate\
    \ \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\"\
    \ ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate\
    \ \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\")\
    \ = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\"\
    \ ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate\
    \ \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\"\
    \ ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"\
    5\") = \"0b101\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054487

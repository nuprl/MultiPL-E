name: HumanEval_34_unique
language: sh
prompt: "#!/bin/bash\n# Return sorted unique elements in a list\n# >>> unique([5,\
  \ 3, 5, 2, 3, 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\n#\n# $1 is a space-separated\
  \ list\nunique() {\n"
tests: "}\n\ncandidate() {\n    unique \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 3 5 2 3 3 9 0 123\") = \"0 2 3 5 9 123\" ]]\n}\n\nrun_test"
completions: ["    local seen=()\n    local result=()\n    for item in $1; do\n  \
    \      if [[ ! ${seen[$item]} ]]; then\n            seen[$item]=1\n          \
    \  result+=(\"$item\")\n        fi\n    done\n    echo \"${result[@]}\"", "  declare\
    \ -a list\n  while read line\n  do\n    list=(\"${list[@]:+${list[*]}}\" \"${line}\"\
    )\n  done < <(sort -u $1)", "    # [[ condition ]] always succeeds, so we don't\
    \ need to worry about || or &&.\n    local -a array=( $(eval echo \"\\$1\") )\n\
    \    local unique=()\n    for i in \"${array[@]}\"; do\n        [[ ! -z \"$unique\"\
    \ ]] &&\n            [[ \"$i\" == \"$unique\" ]] && continue\n        unique+=(\
    \ \"$i\" )\n    done\n    echo \"${unique[@]}\"", '  sort -u $1', "  # Convert\
    \ each argument to string\n  IFS=' ' read -r -a array <<< \"$1\"\n\n  # Remove\
    \ duplicates and sort them\n  printf '%s\\n' \"${array[*]}\" | sort -u | tr '\\\
    n' ' '", "    local IFS=\"$1\"\n    local out_file=${2##*/}\n    local sorted_array=(\
    \ $(cat \"$out_file\") )\n    sort \"${IFS}\" -o \"${out_file}\" < <(printf \"\
    %s\\n\" \"${sorted_array[@]}\")", "  local IFS=\" $1\"\n  echo \"$@\" | sort -u",
  "    local IFS=$'\\t';\n    sort -n -r -k1,1 -u -t \"${1:-0}\"", "    local list=\"\
    $1\"\n    local sortedList=\"$(echo \"$list\" | sort -u)\n    eval echo \"$sortedList\"",
  "    local list=$*\n    local unique_list=\"\"\n    local unique_item\n\n    for\
    \ unique_item in $list; do\n        if [[ ! $unique_list == *\"$unique_item\"\
    * ]]; then\n            unique_list+=\"$unique_item\"\n        fi\n    done\n\n\
    \    echo \"$unique_list\"", "    local -r list_name=\"${1}\"\n    # Sort and\
    \ remove duplicate items\n    sort -u -- \"${list_name[@]}\"", "    local i\n\
    \    local list=(\"$@\")\n    local sorted=false\n    local prev=()\n    local\
    \ res\n\n    for i in \"${list[@]}\"; do\n        if [ \"$sorted\" == \"true\"\
    \ ]; then\n            prev=(\"${prev[@]}\" \"$i\")\n            continue\n  \
    \      fi\n\n        local i1\n        i1=0\n        while [ \"${sorted}\" ==\
    \ \"true\" ]; do\n            if [ \"$i1\" -gt \"$i\" ]; then\n              \
    \  prev=(\"${prev[@]}\" \"$i\")\n                break\n            fi\n     \
    \       ((i1++))\n        done\n\n        if [ \"$i1\" -gt \"$i\" ]; then\n  \
    \          ((i--))\n            continue\n        fi\n\n        res=\"$i\"\n \
    \       sorted=true\n    done\n\n    echo \"${res}\"", "    local d\n    local\
    \ i\n    IFS=' '\n    d=\"${1// /$'\\n'}/\"\n    echo $(IFS=: ; echo \"${d}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ');", "  local list=\"$1\"\n  local unique=\"\
    $2\"\n  local sorted=\"$3\"\n  local output=\"$4\"\n  local i\n  local outputlen\n\
    \  local item\n  outputlen=0\n  if [ \"$sorted\" == \"true\" ]; then\n    list=\"\
    $(sort -u <<<\"$list\")\"\n  fi\n  for item in $list; do\n    [[ \"$item\" !=\
    \ \"$unique\" ]] && outputlen=\"$((outputlen + 1))\" && output=\"$output$item$((outputlen\
    \ == 0 ? \"\" : \"\\n\"))\"\n  done\n  if [ \"$sorted\" == \"true\" ]; then\n\
    \    output=\"$(sort <<<\"$output\")\"\n  fi\n  echo \"$output\"", "    local\
    \ list\n    list=( $@ )\n    local unique\n    unique=()\n    for i in \"${list[@]}\"\
    ; do\n        if [[ ! \" ${unique[@]} \" =~ $i ]]; then\n            unique+=($i)\n\
    \        fi\n    done\n    printf '%s\\n' \"${unique[@]}\"", "  local sorted_list=`sort\
    \ -u $1`\n  echo ${sorted_list}", "    local IFS=$1\n    local i done prev\n \
    \   done=\"1\"\n    prev=\"-\"\n    for (( i = 1; i <= ${#A[@]} && $done; i++\
    \ )); do\n        if [[ $prev -ne $A[$i] ]]; then\n            done=\"1\"\n  \
    \          prev=$A[$i]\n        else\n            done=\"2\"\n        fi\n   \
    \ done\n    echo", '    local IFS="$1"; shift; echo "$@" | tr " " "\n" | sort
    | uniq -u', "  local -n arr=$1\n  sort -u \"${arr[@]}\"", "    local i\n    local\
    \ output\n    local list\n    list=\"$1\"\n\n    # Remove duplicate elements\n\
    \    list=\"$(echo \"$list\" | sort -u | tr -d '\\r')\"\n\n    # Remove empty\
    \ elements\n    list=\"$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n' '\
    \ ')\"\n\n    echo \"$list\""]
stop_tokens:
- "\n}"

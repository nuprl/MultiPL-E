language: sh
name: HumanEval_55_fib
results:
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local cur prev\n    prev=0\n    cur=1\n    while (( $n )); do\n        prev=$cur\n\
    \        ((cur+=prev))\n        n--\n    done\n    echo $cur\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660054438
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    if [ $#\
    \ -ne 1 ]\n    then\n        echo \"Usage: fib <n>\"\n        echo \"where n is\
    \ a natural number\"\n        exit 0\n    fi\n\n    n=$1\n    [ $n -eq 0 ] &&\
    \ echo \"0\" # 0 has only 2 Fibonacci numbers\n    [ $n -eq 1 ] && echo \"1\"\n\
    \    if [ $n -le 1 ]\n    then\n        echo \"Error: n is a positive integer\"\
    \n        exit 0\n    fi\n\n    local __N\n    for __N in $(seq 1 $n)\n    do\n\
    \        local __F\n        local __X\n        local __Y\n        local __F__\n\
    \        local __I\n        __F=1\n        __X=1\n        __Y=1\n        for __I\
    \ in $(seq 1 $n)\n        do\n            __F=$(__F + $__X)\n            __X=$(__X\
    \ + $__Y)\n            __Y=$(__Y + $__F)\n        done\n        echo $__F\n  \
    \  done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y: command not found

    /tmp/tmpb7s96utk.sh: line 41: __F: command not found

    /tmp/tmpb7s96utk.sh: line 42: __X: command not found

    /tmp/tmpb7s96utk.sh: line 43: __Y:'
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    if [ \"${n}\" -gt 1 ]; then\n        echo \"${n}th Fibonacci number is ${fib_nth(n)}\"\
    \n    else\n        echo \"Fibonacci number doesn't exist\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnlr_vlya.sh: line 14: ${n}th Fibonacci number is ${fib_nth(n)}:
    bad substitution

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n\tif [ $# -ne\
    \ $1 ] ; then\n\t\techo \"$1 is not a natural number\"\n\t\treturn 1\n\tfi\n\t\
    if [ $1 -le 0 ] || [ $1 -gt 1 ] ; then\n\t\techo \"$1 is not an Fibonacci number\"\
    \n\t\treturn 1\n\tfi\n\t\n\tlet n=$1-1\n\tprev=0\n\tnext=1\n\tfor i in `seq 0\
    \ $n`; do\n\t\tlet prev=$prev+$next\n\t\tlet next=$next+$prev\n\tdone\n\techo\
    \ $next\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [[ $1\
    \ -eq 0 ]]; then\n    return 0\n  fi\n  local n\n  ((n=$(( $1 == 1 ? 1 : $1 +\
    \ $2 ))); if (( $# == 1 )) ; then return $n fib $(( $n - 2 )) fib $(( $n - 1 )))\
    \ \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpezr9am03.sh: line 16: syntax error near unexpected token `)''

    /tmp/tmpezr9am03.sh: line 16: `  ((n=$(( $1 == 1 ? 1 : $1 + $2 ))); if (( $# ==
    1 )) ; then return $n fib $(( $n - 2 )) fib $(( $n - 1 ))) ''

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local -n\
    \ a=$1\n  [ $# -eq 1 ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-1)) ]\
    \ && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-2)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-3)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-4))\
    \ ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-5)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-6)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-7))\
    \ ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-8)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-9)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-10))\
    \ ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-11)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-12)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-13))\
    \ ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-14)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-15)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-16))\
    \ ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-20)) ] && return $a\n  a=$(($a+$a))\n\
    \  [ $a -eq $((${#a}-23)) ] && return $a\n  a=$(($a+$a))\n  [ $a -eq $((${#a}-27))\
    \ ] && return $\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7246kmfy.sh: line 12: local: `10'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  [ $n -gt 0 ] && return $(( $fib( $(n-2) ) + $(n-1) ))\n  [ $n -lt 2 ] && return\
    \ $1\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpopuvsme3.sh: line 13: n-2: command not found

    /tmp/tmpopuvsme3.sh: line 13: n-1: command not found

    /tmp/tmpopuvsme3.sh: line 13: (  ) +  : syntax error: operand expected (error
    token is ") +  ")

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local a=0\n\
    \    local b=1\n    local i=$1\n    while [ \"$i\" -gt 0 ]; do\n        (( i+=1\
    \ ))\n        local tmp=$a\n        a=$b\n        b=$tmp\n    done\n    echo \"\
    $b\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=10 encoding='utf-8'>
  timestamp: 1660054438
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    while [ $n -gt 1 ]\n    do\n        local tmp=$((a+b))\n\
    \        a=$b\n        b=$tmp\n        echo $b\n        [ $(($n-1)) = 1 ] && break\n\
    \        [ $(($n-1)) = 0 ] && break\n        n=$((n-1))\n    done\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\
    \ prev curr result\n    if [ $n -lt 0 ]; then\n\techo \"[$(date) - ERROR] fib():\
    \ n must be > 0\" >&2\n\treturn 1\n    fi\n    prev=0\n    curr=1\n    for ((\
    \ n=${n-1}; n>0; n-- )); do\n\tprev=$curr curr=$((curr+prev))\n    done\n    result=$curr\n\
    \    return $result\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n\tif [ $# -ne\
    \ 1 ]; then\n\t\techo \"Usage fib (n) [returns n-th Fibonacci number]\";\n\t\t\
    echo \"Usage: $0 0\";\n\t\techo \"Usage: $0 1\";\n\t\techo \"Usage: $0 5\";\n\t\
    \treturn 0;\n\tfi;\n\tlocal i=1\n\tlocal j=1\n\tlocal k=0\n\tlocal ret=0\n\tif\
    \ [ $1 == 0 ]; then\n\t\tret=1\n\telif [ $1 == 1 ]; then\n\t\tret=1\n\telif [\
    \ $1 == 2 ]; then\n\t\tret=1;\n\telif [ $1 == 3 ]; then\n\t\tret=2;\n\telif [\
    \ $1 == 4 ]; then\n\t\tret=3;\n\telif [ $1 == 5 ]; then\n\t\tret=5;\n\telse\n\t\
    \techo \"Usage fib (n) [returns n-th Fibonacci number]\";\n\t\treturn 0;\n\tfi;\n\
    \twhile [ $k -lt $1 ]; do\n\t\ti=$(($i+$j));\n\t\tj=$(($k+$j));\n\t\tk=$((k+1));\n\
    \tdone;\n\techo $ret;\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  if [ $1 -lt\
    \ 2 ]; then\n    return $1\n  else\n    local -n a=$(mktemp)\n    local -n b=$(mktemp)\n\
    \    # Compute fib(n-1).\n    local -r c=$(($1-2))\n    eval \"$a=$(($(mktemp\
    \ $a || true) || true))\"\n    eval \"$b=$(($(mktemp $b || true) || true))\"\n\
    \    # Compute fib(n-2).\n    eval \"$a=$(($(mktemp $a || true) || true))\"\n\
    \    eval \"$b=$(($(mktemp $b || true) || true))\"\n    eval \"$c=$(($(mktemp\
    \ $c || true) || true))\"\n    # Compute fib(n-3)...fib(n-1).\n    local i\n \
    \   for ((i=0; i<${c}; i++)); do\n      eval \"$a=$(($(mktemp $a || true) || true))\"\
    \n      eval \"$b=$(($(mktemp $b || true) || true))\"\n    done\n    eval \"$a=$(($(mktemp\
    \ $a || true) || true))\"\n    eval \"$b=$(($(mktemp $b || true) || true))\"\n\
    \    # Sum up the fib(n-3)...fib(n-1).\n    eval \"$a=$(($(mktemp $a || true)\
    \ || true))\"\n    eval \"$b=$(($(mktemp $b || true) || true))\"\n    for i in\
    \ $(seq 1 $c); do\n      eval \"$a=$(($(mktemp $a || true) || true))\"\n     \
    \ eval \"$b=$(($(mktemp $b || true) || true))\"\n      eval \"$a=$(($(mktemp $a\
    \ || true) || true))\"\n      eval \"$b=$(($(mktemp $b || true) || true))\"\n\
    \    done\n    # Return the value of the fib expression.\n    eval \"$a=$(($(mktemp\
    \ $a || true) || true))\"\n    eval \"$b=$(($(mktemp $b || true) || true))\"\n\
    \    echo \"$((${a}+${b}))\"\n    rm \"$a\"\n    rm \"$b\"\n    rm \"$c\"\n  fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaf2jh59c.sh: line 15: local: `/tmp/tmp.h3Htiha9Xs'': invalid variable
    name for name reference

    /tmp/tmpaf2jh59c.sh: line 16: local: `/tmp/tmp.kZ9HKPXrt3'': invalid variable
    name for name reference

    /tmp/tmpaf2jh59c.sh: line 19: /tmp/tmp.1BMoFy6lpH || true: syntax error: operand
    expected (error token is "/tmp/tmp.1BMoFy6lpH || true")

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  local a\n  local b\n  local c\n  a=1\n  b=1\n  while [ $n -gt 0 ]\n  do\n \
    \   [ $n = \"1\" ] && return 0\n    [ $n = \"2\" ] && return 1\n    [ $n = $((n-1))\
    \ ] && return $a\n    a=$b\n    b=$a+$b\n    i=$(($n-1))\n    c=$a+$i\n    i=$(($i-1))\n\
    \    [ $n -gt 1 ] && echo $b\n    n=$i\n  done\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local result\n    while [[ $n -gt 0 ]]; do\n\
    \        result=$((b+a))\n        local i=$((n-result))\n        local tmp=$a\n\
    \        a=$b\n        b=$((tmp+result))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=23 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660054438
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  local a=0\n  local b=1\n  while (( n >= 0 )) ; do\n    local tmp=$a\n    a=$b\n\
    \    b=$tmp + $b\n    n=$(( n - 1 ))\n  done\n  echo $b\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    /tmp/tmpxegarg5_.sh: line 18: +: command not found

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  shift\n  local a=0\n  local b=1\n\n  while [ \"$n\" -gt 0 ]; do\n    a=$b\n\
    \    b=$((a+b))\n    n=$((n-2)) \n  done\n  echo $b\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054433
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  [ $n -eq 0 ] && return\n  local a=1\n  local b=0\n  while [ $n -gt 0 ]; do\n\
    \    local tmp=$a\n    a=$b\n    b=$tmp\n    n=$(( $n + 1 ))\n  done\n  echo $a\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=40 encoding='utf-8'>
  timestamp: 1660054438
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n\tlocal a b\
    \ n=$1\n\t((n>=2)) && echo $(eval echo \\$(a+b=\\$(b)\\$((b+1))))\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp11wao08t.sh: command substitution: line 14: syntax error near unexpected
    token `(''

    /tmp/tmp11wao08t.sh: command substitution: line 14: `eval echo \$(a+b=\$(b)\$((b+1))))''

    '
  stdout: ''
  timestamp: 1660054433
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n  local n=$1\n\
    \  if (( $# == 1 )); then\n    echo $(( $(fib $(( $n - 1 ))) + $(fib $(( $n -\
    \ 2 ))) ))\n    return\n  else\n    echo $(( $(fib $(( $n - 1 ))) + $(fib $((\
    \ $n - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660054438
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
    \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n\tlocal n=$1\n\
    \tlocal a=0\n\tlocal b=1\n\tlocal c\n\t[ \"$n\" -gt 0 ] && [ \"$n\" -le 3 ] &&\
    \ [ \"$n\" -ge 1 ] && [ \"$n\" -le 5 ]\n\t[ \"$n\" -eq 1 ]\n\t[ \"$n\" -eq 2 ]\
    \ && return 1\n\t[ \"$n\" -eq 3 ] && return 2\n\t[ \"$n\" -eq 4 ] && return 1\n\
    \t[ \"$n\" -eq 5 ] && return 3\n\t[ \"$n\" -ge 6 ] && [ \"$n\" -le 15 ] && [ \"\
    $n\" -le 22 ] && [ \"$n\" -le 35 ] && [ \"$n\" -le 55 ]\n\t[ \"$n\" -ge 16 ] &&\
    \ [ \"$n\" -le 35 ] && [ \"$n\" -le 55 ] && [ \"$n\" -le 150 ] && [ \"$n\" -le\
    \ 225 ] && [ \"$n\" -le 275 ] && [ \"$n\" -le 375 ] && [ \"$n\" -le 550]\n\t[\
    \ \"$n\" -ge 36 ] && [ \"$n\" -le 55 ] && [ \"$n\" -le 150 ] && [ \"$n\" -le 225\
    \ ] && [ \"$n\" -le 275 ] && [ \"$n\" -le 375 ] && [ \"$n\" -le 475 ] && [ \"\
    $n\" -le 600 ] && [ \"$n\" -le 750 ]\n\t[ \"$n\" -ge 46 ] && [ \"$n\" -le 55 ]\
    \ && [ \"$n\" -le 150 ] && [ \"$n\" -le 225 ] && [ \"$n\" -le 275 ] && [ \"$n\"\
    \ -le 375 ] && [ \"$n\" -le 475 ] && [ \"$n\" -le 600 ] && [ \"$n\" -le 750 ]\n\
    \t[ \"$n\" -ge 55 ] && [ \"$n\" -le 150 ] && [ \"$n\" -le 225 ] && [ \"$n\" -le\
    \ 275 ] && [ \"$n\" -le 375 ] && [ \"$n\" -le 475 ] && [ \"$n\" -le 600 ] && [\
    \ \"$n\" -le 750 ]\n\t[ \"$n\" -ge 60 ] && [ \"$n\" -le 150 ] && [ \"$n\" -le\
    \ 225 ] && [ \"$n\" -le 275 ] && [ \"$n\" -le 375 ] && [ \"$n\" -le 475 ] && [\
    \ \"$n\" -le 600 ] && [ \"$n\" -le 750 ]\n\t[ \"$n\" -ge 65 ] && [ \"$n\" -le\
    \ 150 ] && [ \"$n\" -le 225 ] && \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgmeud8ct.sh: line 29: syntax error near unexpected token `}''

    /tmp/tmpgmeud8ct.sh: line 29: `}''

    '
  stdout: ''
  timestamp: 1660054433

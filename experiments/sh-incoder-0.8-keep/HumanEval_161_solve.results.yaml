language: sh
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    echo \"$1\" | awk '{print toupper($0) }' | sed 's/\\(.\\)\\([a-zA-Z]\\)/\\\
    2\\1/g' \n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"\
    #A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate\
    \ \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n\
    \    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local str=\"$1\"\n    local i\n    local res\n    local n\n    str=\"${str#*}\"\
    \n    res=\"${str}\"\n    local flag\n    for (( i=0; i<${#str}; i++ )); do\n\
    \        str[i]=\"${str[i]:0:1}${str[i]:1:1}\"\n        flag=1\n        for n\
    \ in \"${str[@]:0:i}\" \"${str[@]:i+1}\"; do\n            if [[ \"$n\" =~ [A-Z]\
    \ ]] && [[ \"$n\" =~ [a-z] ]]; then\n                flag=0\n                break\n\
    \            else\n                flag=1\n                break\n           \
    \ fi\n        done\n        if [ $flag -eq 1 ]; then\n            res=\"${res}${str[i]}\"\
    \n        fi\n    done\n    res=\"${res#*}\"\n    echo \"$res\"\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\"\
    ) = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 2
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local first_letter=$1\n    local last_letter=${#1}\n\n    if [ ${#1} -eq\
    \ 0 ]; then\n        echo \"Reverse a string\"\n        echo \"Usage: $0 <string>\"\
    \n        exit\n    fi\n\n    local first_upper\n    local first_lower\n\n   \
    \ if [ ${#first_letter} -eq 1 ]; then\n        first_upper=$(tr '[:lower:]' '[:upper:]'\
    \ <<< ${first_letter})\n        first_lower=$(tr '[:upper:]' '[:lower:]' <<< ${first_letter})\n\
    \    elif [ ${#first_letter} -eq 2 ]; then\n        first_upper=$(echo \"${first_letter}\"\
    \ | tr '[:lower:]' '[:upper:]')\n        first_lower=$(echo \"${first_letter}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    elif [ ${#first_letter} -eq 3 ]; then\n \
    \       first_upper=$(echo \"${first_letter}\" | tr '[:lower:]' '[:upper:]')\n\
    \        first_lower=$(echo \"${first_letter}\" | tr '[:upper:]' '[:lower:]')\n\
    \    elif [ ${#first_letter} -eq 4 ]; then\n        first_upper=$(echo \"${first_letter}\"\
    \ | tr '[:lower:]' '[:upper:]')\n        first_lower=$(echo \"${first_letter}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    elif [ ${#first_letter} -eq 5 ]; then\n \
    \       first_upper=$(echo \"${first_letter}\" | tr '[:lower:]' '[:upper:]')\n\
    \        first_lower=$(echo \"${first_letter}\" | tr '[:upper:]' '[:lower:]')\n\
    \    elif [ ${#first_letter} -eq 6 ]; then\n        first_upper=$(echo \"${first_letter}\"\
    \ | tr '[:lower:]' '[:upper:]')\n        first_lower=$(echo \"${first_letter}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    elif [ ${#first_letter} -eq 7 ]; then\n \
    \       first_upper=$(echo \"${first_letter}\" | tr '[:lower:]' '[:upper:]')\n\
    \        first_lower=$(echo \"${first_letter}\" | tr '[:upper:]' '[:lower:]')\n\
    \    elif [ ${#first_letter} -eq 8 ]; then\n        first_upper=$(echo \"${first_letter}\"\
    \ | tr '[:lower:]' '[:upper:]')\n        first_lower=$(echo \"${first_letter}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    elif [ ${#first_letter} -eq 9 ]; then\n \
    \       first_upper=$(echo \"${first_letter}\" | tr '[:lower:]' '[:upper\n}\n\n\
    candidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[\
    \ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n\
    \    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\"\
    ) = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate\
    \ \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv9bu0m3b.sh: line 51: unexpected EOF while looking for matching
    `''''

    /tmp/tmpv9bu0m3b.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: -1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    read input\n    for i in ${input:1:-1}; do\n        if [[ \"$i\" =~ ^[a-zA-Z]$\
    \ ]]; then\n            output=\"${i:0:1}${i:1:1}${i:2:1}${i:2:1}${i:2:1}${i:2:1}${i:2:1}${i:2:1}\"\
    \n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n    solve \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n\
    \    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\"\
    \ ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\"\
    ) = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate\
    \ \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=10 encoding='utf-8'>
  timestamp: 1660054628
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local string=\"${1}\"\n    if [[ \"${string}\" =~ ^[a-zA-Z] ]]; then\n  \
    \      echo \"${string//[^a-zA-Z]/}\"\n    else\n        echo \"${string//[^a-zA-Z]}${string//[a-zA-Z]/}\"\
    \n    fi\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\"\
    \ ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"\
    #A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate\
    \ \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n\
    \    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local IFS=$'\\n';\n    local input=\"$1\"\n    local output=''\n    for ((\
    \ i = 0; i < ${#input}; i++ )); do\n        if [[ ${input:$i:1} == \"a\" ]]; then\n\
    \            if [[ ${input:$i+1:1} == \"b\" ]]; then\n                output+=\"\
    B\"\n            elif [[ ${input:$i+1:1} == \"c\" ]]; then\n                output+=\"\
    C\"\n            else\n                output+=${input:$i:1}\n            fi\n\
    \        else\n            if [[ ${input:$i+1:1} == \"b\" ]]; then\n         \
    \       output+=${input:$i:1}\n            elif [[ ${input:$i+1:1} == \"c\" ]];\
    \ then\n                output+=\"${input:$i:1}\"\n            else\n        \
    \        output+=\"${input:$i:1}\"\n            fi\n        fi\n    done\n   \
    \ echo \"$output\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\")\
    \ = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"\
    #a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n\
    \    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") =\
    \ \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: -1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    # your code goes here\n\tread -r -p \"Enter a string: \" s1\n\tlen=$( echo\
    \ \"$s1\" | wc -c)\n\tif [ $len -gt 0 ]; then\n\t\tfor i in {1..$len}\n\t\tdo\n\
    \t\t\tif [[ \"$s1\" == ${s1:0:i}:${s1:i:1} ]]; then\n\t\t\t\techo \"$s1\" | rev\n\
    \t\t\telif [[ $s1 == *[a-z] ]]; then\n\t\t\t\techo \"${s1:0:i}:${s1:i:1}$(echo\
    \ \"${s1:i:1}\" | tr '[:upper:]' '[:lower:]')\"\n\t\t\telse\n\t\t\t\techo \"$s1\"\
    \n\t\t\tfi\n\t\tdone\n\telse\n\t\techo \"$s1\"\n\tfi\n}\n\ncandidate() {\n   \
    \ solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\"\
    \ ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") =\
    \ \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"\
    #AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=27 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660054628
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \   local str=$1\n   local i res res i str j res res\n   res=\"\"\n   i=0\n  \
    \ while [[ $i -lt ${#str} ]]; do\n      i=$((i+1))\n      str=${str:0:i}\n   \
    \   j=$((${#str} - i + 1))\n      if [[ $i -eq 0 ]]; then\n         res=\"$str\"\
    \n      else\n         res=\"${res}$str\"\n      fi\n      if [[ $i -eq ${#str}\
    \ ]]; then\n         res=\"${res}\"\n      else\n         if [[ -z ${str:$j:1}\
    \ ]]; then\n            res=\"${res}\"\n         else\n            res=\"${res}:${str:$j:1}\"\
    \n         fi\n      fi\n   done\n   echo \"$res\"\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n\
    \    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\"\
    \ ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\"\
    ) = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate\
    \ \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 2
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    echo \"$1\"|egrep -iv \"[a-z]|[A-Z]\"|sort -u\"|xargs\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"\
    aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppdt15qs4.sh: line 30: unexpected EOF while looking for matching
    `"''

    /tmp/tmppdt15qs4.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local str=\"${1}\"\n    local len=\"${#str}\"\n    local i=0\n    while [\
    \ $i -lt \"$len\" ]; do\n        local char=\"${str[i]:0:1}\"\n        if [[ \"\
    $char\" == [a-z] ]] \\\n        || [[ \"$char\" == [A-Z] ]]; then\n          \
    \  str=\"$char${str[i - 1]}${str[i + 1]}\"\n            len=\"${#str}\"\n    \
    \        ((i++))\n        else\n            str=\"$char${str[i]}\"\n        fi\n\
    \    done\n    echo \"$str\"\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"\
    1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate\
    \ \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n\
    \    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") =\
    \ \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw7g_9z0c.sh: line 21: str: bad array subscript

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local str=\"$1\"\n    local i c\n    local res\n    \n    res=\"\"\n    for\
    \ i in \"${str//?}\"; do\n        if [[ \"$i\" =~ ^([a-z])$ ]]; then\n       \
    \     c=\"${i:1}\"\n            [[ \"$i\" =~ ^([A-Z])$ ]] && c=\"${i:0:1}${i:1:1}${i:2:1}${i:2:2}\"\
    \n            res=\"${res}$c\"\n        else\n            res=\"${res}$i\"\n \
    \       fi\n    done\n    \n    echo $res\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[\
    \ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n\
    \    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\"\
    ) = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate\
    \ \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    # Write your code here\n\tlocal temp\n\ttemp=$1\n\t\n\tif [[ \"$temp\" =~\
    \ ([a-z])([a-z]) ]]\n\tthen\n\t\ttemp=$(echo $temp | sed \"s/$2$2/$1$2/g\")\n\t\
    elif [[ \"$temp\" =~ ([a-z])([A-Z]) ]]\n\tthen\n\t\ttemp=$(echo $temp | sed \"\
    s/$2$2/$1$2/g\")\n\tfi\n\t\n\techo $temp\n}\n\ncandidate() {\n    solve \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[\
    \ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n\
    \    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\"\
    ) = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate\
    \ \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 0: no previous regular expression

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    local STR=$1\nlocal result=''\n\nfor (( i=${#STR}-1; i>=0; i-- )); do\n    if\
    \ [[ ${STR:$i:1} == [A-Z] ]]; then\n        result=${result:0:i}${STR:$i:1}${result:(i+2):${#result}}\n\
    \    else\n        result=${result:0:i}${STR:$i:1}${result:(i+2):${#result}}\n\
    \    fi\ndone\nreturn $result\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate\
    \ \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate\
    \ \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n\
    \    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") =\
    \ \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm_3yb8d0.sh: line 24: return: A: numeric argument required

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local s=\"$1\"\n\n    if [[ \"$s\" == \"\" ]]; then\n        echo \"Please\
    \ pass some string\"\n        return 1\n    fi\n\n    local i\n    local out\n\
    \n    for i in $(seq 1 ${#s}); do\n        [[ \"${s:$i:1}\" == [A-Za-z] ]] ||\
    \ \\\n        out=\"${out:1}${s:$i:1}\"\n    done\n\n    echo $out\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\"\
    ) = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local s # s is given string\n    read -s -t 1 -p \"Enter a string: \" s #\
    \ reading a string\n    if [[ ${s:0:1} =~ [a-z] ]] # if first character is lower\
    \ case\n    then\n        echo \"${s:0:1}${s:0:1}${s:0:1}\" # print 3 times\n\
    \    elif [[ ${s:0:1} =~ [A-Z] ]]\n    then\n        echo \"${s:0:1}${s:0:1}${s:0:1}\"\
    \ # print 3 times\n    else\n        echo \"${s}\"\n    fi\n}\n\ncandidate() {\n\
    \    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"\
    aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\"\
    ) = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Enter a string: '
  stdout: ''
  timestamp: 1660054624
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    echo \"$1\" | tr '[:upper:]' '[:lower:]'\n    echo \"$1\" | tr '[:upper:]'\
    \ '[:upper:]'\n    echo \"$1\" | tr '[:lower:]' '[:lower:]'\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\"\
    ) = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local str=\"$1\"\n    if [[ ${str} == \"\" ]]; then\n        echo \"empty\
    \ str\"\n        return 0\n    fi\n    local i res\n    res=''\n    for (( i=0;\
    \ i<${#str}; i++ )); do\n        local char prev\n        prev=\"${str[$i]}\"\n\
    \        case \"${prev}\" in\n            [a-z]*|[A-Z]*|[0-9]*|[#@])\n       \
    \         local upCase lowCase prevUpCase prevLowCase\n                upCase=\"\
    ${prev^^}\"\n                lowCase=\"${prev^^}\" \n                if [[ \"\
    ${prev}\" == [a-z]* ]]; then\n                    prevUpCase=\"${prev^^}\"\n \
    \                   prevLowCase=\"${prev^^}\"\n                fi\n          \
    \      case \"${prev}\" in\n                    [A-Z]*|[0-9]*|[#@]) \n       \
    \                 res=\"${res}${upCase}\"\n                        ;;\n      \
    \              [a-z]*) \n                        res=\"${res}${lowCase}\"\n  \
    \                      ;;\n                    *)\n                        res=\"\
    ${res}${prev}\"\n                        ;;\n                esac\n          \
    \      ;;\n            *)\n                res=\"${res}${prev}\"\n           \
    \     ;;\n        esac\n    done\n    echo $res\n}\n\ncandidate() {\n    solve\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n\
    \    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\"\
    \ ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\"\
    ) = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate\
    \ \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local s lower=false upper=false\n    local i\n    \n    local temp\n    s=$1;\n\
    \    for ((i=1; i<=$#s; i++)); do\n        temp=\"${s[$i]}\";\n        if [[ $temp\
    \ =~ [A-Za-z] ]]; then\n            if [[ \"$temp\" == $temp ]]; then\n      \
    \          lower=true\n            else\n                upper=true\n        \
    \    fi\n        elif [[ \"$temp\" =~ [a-z] ]]; then\n            if [[ \"$temp\"\
    \ == $temp ]]; then\n                upper=true\n            else\n          \
    \      lower=true\n            fi\n        elif [[ \"$temp\" =~ [^A-Za-z] ]];\
    \ then\n            if [[ \"$temp\" =~ [^a-z] ]]; then\n                upper=true\n\
    \            else\n                lower=true\n            fi\n        fi\n  \
    \  done\n    if [[ \"$lower\" == true ]]; then\n        echo \"$s\"\n    elif\
    \ [[ \"$upper\" == true ]]; then\n        echo \"$s\"\n    else\n        echo\
    \ \"$s\"\n    fi\n}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\")\
    \ = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"\
    #a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n\
    \    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") =\
    \ \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp50_asb0l.sh: line 19: ((: i<=1s: value too great for base (error
    token is "1s")

    '
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \  local s=$1\n  local result=\n  local i\n  for i in $(seq 0 $((${#s}-1)) ) ;\
    \ do\n    [[ \"$result\" =~ ^$ ]] || result=\"$result${s[$i]}\"\n    [[ \"$s[$i]\"\
    \ =~ [A-Za-z] ]] && result=\"${s[$i]:0:1}${s[$i]:1:1}${result:1:1}${s[$i]^^}\"\
    \n  done\n  [[ ${#result} -gt ${#s} ]] && result=${s:0:(${#result})}\n  echo $result\n\
    }\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[\
    \ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n\
    \    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\"\
    ) = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate\
    \ \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse\
    \ its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n\
    # If the string contains no letters, reverse the string.\n# The function should\
    \ return the resulted string.\n# Examples\n# solve(\"1234\") = \"4321\"\n# solve(\"\
    ab\") = \"AB\"\n# solve(\"#a@C\") = \"#A@c\"\n#\n# $1 is a string\nsolve() {\n\
    \    local i len=$((${#1} - 1))\n    local c\n    local s\n    local ret\n\n \
    \   if [[ \"${#1}\" -gt 0 ]]; then\n        for ((i = 0; i <= len; i++)) ; do\n\
    \            c=${1:i:1}\n            if [[ \"${c}\" =~ ^[[:alpha:]]$ ]]; then\n\
    \                s=\"${s//[^[:alpha:]]/${c^^}}\" \n            else\n        \
    \        s=\"${s//[^[:alpha:][:space:]]/${c^^}}\"\n            fi\n        done\n\
    \        s=${s//[^[:alpha:][:space:]]/}\n    fi\n\n    echo \"$s\"\n}\n\ncandidate()\
    \ {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\"\
    ) = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate\
    \ \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate\
    \ \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n\
    \    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\"\
    ) = \"#CCC\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054623

name: HumanEval_98_count_upper
language: go_test.go
prompt: "package count_upper_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string s, count the number of uppercase vowels in even indices.\n// For\
  \ example:\n// >>> count_upper(\"aBCdEf\")\n// 1\n// >>> count_upper(\"abcdefg\"\
  )\n// 0\n// >>> count_upper(\"dBBE\")\n// 0\nfunc count_upper(s string) int {\n"
tests: "func TestCount_Upper(t *testing.T) {\n  candidate := count_upper\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(\"aBCdEf\"), expected: 1 },\n     { actual:\
  \ candidate(\"abcdefg\"), expected: 0 },\n     { actual: candidate(\"dBBE\"), expected:\
  \ 0 },\n     { actual: candidate(\"B\"), expected: 0 },\n     { actual: candidate(\"\
  U\"), expected: 1 },\n     { actual: candidate(\"\"), expected: 0 },\n     { actual:\
  \ candidate(\"EEEE\"), expected: 2 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
  t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
  %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
  \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    // Initialize our counter.\n    count := 0\n\n    // Loop through\
    \ the string, incrementing counter by 1 for each uppercase vowel in even index.\n\
    \    for i, r := range s {\n        if i % 2 == 0 && (r == 'A' || r == 'E' ||\
    \ r == 'I' || r == 'O' || r == 'U') {\n            count++\n        }\n    }\n\
    \n    return count\n}\n", "    return 0\n}\n", "    count := 0\n    for i, c :=\
    \ range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    i := 0\n    for _, r := range\
    \ s {\n        if 'A' <= r && r <= 'Z' && i % 2 == 0 {\n            i++\n    \
    \    }\n    }\n    return i\n}\n", "    // TODO: Write your code here!\n    var\
    \ count int\n    for i, r := range s {\n        if i % 2 == 0 && r >= 'A' && r\
    \ <= 'Z' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   res := 0\n    for i, ch := range s {\n        if i % 2 == 0 && ch >= 'A' &&\
    \ ch <= 'Z' {\n            res++\n        }\n    }\n    return res\n}\n", "  \
    \  n := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <=\
    \ 'Z' {\n            n += 1\n        }\n    }\n    return n\n}\n", "    count\
    \ := 0\n    for i, _ := range s {\n        if i % 2 == 0 {\n            if s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \           count++\n            }\n        }\n    }\n    return count\n}\n",
  "    c := 0\n    for i, r := range s {\n        if i % 2 == 0 && r >= 'A' && r <=\
    \ 'Z' {\n            c++\n        }\n    }\n    return c\n}\n", "    // your code\
    \ here\n    count := 0\n    for i, _ := range s {\n        if i % 2 == 0 && s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \       count += 1\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    fmt.Println(len(s))\n    for i := 0; i < len(s); i++ {\n        if i % 2\
    \ == 0 && s[i] >= 'A' && s[i] <= 'Z' {\n            count += 1\n        }\n  \
    \  }\n    return count\n}\n", "    output := 0\n    var even int = 0\n    var\
    \ vowel string = \"AEIOU\"\n    var caseVowel string = \"AEIOUaeiou\"\n    for\
    \ _, c := range s {\n        if even%2 == 0 {\n            if string(c) == string(caseVowel[vowel[even%5]-caseVowel[even%5]])\
    \ {\n                output += 1\n            }\n        }\n        even += 1\n\
    \    }\n    return output\n}\n", "    count := 0\n    for i, r := range s {\n\
    \        if i % 2 == 0 && r >= 'A' && r <= 'Z' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n", "    count := 0\n    for i, char := range\
    \ s {\n        if (i % 2 == 0) && (char > 64) && (char < 91) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n", "    cnt := 0\n    for i, r\
    \ := range s {\n        if i % 2 == 0 && r >= 'A' && r <= 'Z' {\n            cnt++\n\
    \        }\n    }\n    return cnt\n}\n", "    count := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n", "\tvar count int\n\tfor i, r := range\
    \ s {\n\t\tif i % 2 == 0 && (r == 'A' || r == 'E' || r == 'I' || r == 'O' || r\
    \ == 'U') {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n", "    var result\
    \ int\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z'\
    \ {\n            result += 1\n        }\n    }\n    return result\n}\n", "   \
    \ var c int = 0\n    for i,v := range s {\n        if v > 'A' && v < 'Z' && i\
    \ % 2 == 0 {\n            c++\n        }\n    }\n    return c\n}\n", "    count\
    \ := 0\n    for index, character := range s {\n        if index % 2 == 0 && character\
    \ >= 'A' && character <= 'Z' {\n            count += 1\n        }\n    }\n   \
    \ return count\n}\n", "    var c int = 0\n    var i int = 0\n    var d int = 0\n\
    \    for i = 0; i < len(s); i++ {\n        if i % 2 == 0 {\n            d = int(s[i])\n\
    \            if d >= 65 && d <= 90 {\n                c++\n            }\n   \
    \     }\n    }\n    return c\n}\n", "    l := len(s)\n    vowels := map[string]bool{\"\
    A\": true, \"E\": true, \"I\": true, \"O\": true, \"U\": true}\n    count := 0\n\
    \    for i := 0; i < l; i++ {\n        if (i % 2 == 0) && vowels[string(s[i])]\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    vowels\
    \ := \"AEIOU\"\n    count := 0\n    for i, letter := range s {\n        if i %\
    \ 2 == 0 && string(letter) == strings.ToUpper(string(letter)) {\n            for\
    \ _, v := range vowels {\n                if letter == v {\n                 \
    \   count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    var count int\n    for i, v := range s {\n        if i % 2\
    \ == 0 && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    // CODE HERE\n    return 0\n}\n", "    // aeiou\n    vowels\
    \ := \"aeiou\"\n    count := 0\n    for i, c := range s {\n        if (i%2) ==\
    \ 0 && (c >= 'A' && c <= 'Z') {\n            if strings.Contains(vowels, strings.ToLower(string(c)))\
    \ {\n                count++\n            }\n        }\n    }\n    return count\n\
    }\n", "    upper := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >=\
    \ 'A' && c <= 'Z' {\n            upper++\n        }\n    }\n    return upper\n\
    }\n", "    count := 0\n    for idx, char := range s {\n        // Check for even\n\
    \        if idx % 2 == 0 {\n            // Check for uppercase\n            if\
    \ char >= 'A' && char <= 'Z' {\n                count += 1\n            }\n  \
    \      }\n    }\n    return count\n}\n", "    r := 0\n    for i, c := range s\
    \ {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            r += 1\n   \
    \     }\n    }\n    return r\n}\n", "    var count int = 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n", "\tvar count int\n\tfor i, c := range\
    \ s {\n\t\tif i % 2 == 0 && string(c) == strings.ToUpper(string(c)) {\n\t\t\t\
    count++\n\t\t}\n\t}\n\treturn count\n}\n", "    r := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            r += 1\n \
    \       }\n    }\n    return r\n}\n", "    var result int\n    for i, r := range\
    \ s {\n        if i % 2 == 0 && (r == 'A' || r == 'E' || r == 'I' || r == 'O'\
    \ || r == 'U') {\n            result++\n        }\n    }\n    return result\n\
    }\n", "    r := 0\n    for i, c := range s {\n        if (i + 1) % 2 == 0 && c\
    \ >= 'A' && c <= 'Z' {\n            r++\n        }\n    }\n    return r\n}\n",
  "    if len(s) == 0 {\n        return 0\n    }\n    return count_upper_impl(s, 0,\
    \ 0)\n}\n", "    count := 0\n    for i, c := range s {\n        if 'A' <= c &&\
    \ c <= 'Z' && i % 2 == 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    // use a map, can probably be done with a array but it would\
    \ be tedious\n    vowels := map[string]int{\n        \"A\": 0,\n        \"E\"\
    : 0,\n        \"I\": 0,\n        \"O\": 0,\n        \"U\": 0,\n    }\n    for\
    \ i, char := range s {\n        // Add to count if it's a vowel, and if it's in\
    \ the correct index\n        if _, ok := vowels[string(char)]; ok && i % 2 ==\
    \ 0 {\n            vowels[string(char)]++\n        }\n    }\n    // Add up all\
    \ the vowel counts\n    total := 0\n    for _, value := range vowels {\n     \
    \   total += value\n    }\n    return total\n}\n", "    var sum int = 0\n    var\
    \ ret = 0\n    for i, _ := range s {\n        if i % 2 == 0 {\n            sum\
    \ = int(s[i])\n            if sum >= 65 && sum <= 90 {\n                ret++\n\
    \            }\n        }\n    }\n    return ret\n}\n", "    a := []rune(s)\n\
    \    count := 0\n    for i := 0; i < len(a); i++ {\n        if i % 2 == 0 && a[i]\
    \ >= 'A' && a[i] <= 'Z' {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    if s == \"\" {\n        return 0\n    }\n    count := 0\n\
    \    for i, v := range s {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "\tvar count int\n\
    \tfor index, value := range s {\n\t\tif index % 2 == 0 && value >= 'A' && value\
    \ <= 'Z' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n", "    var count int\n\
    \    for i, char := range s {\n        if i % 2 == 0 && char >= 'A' && char <=\
    \ 'Z' {\n            count += 1\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for i, r := range s {\n        if i % 2 == 0 && (r == 'A'\
    \ || r == 'E' || r == 'I' || r == 'O' || r == 'U') {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    var c int\n    for i, l := range\
    \ s {\n        if i % 2 == 0 && is_upper(l) {\n            c++\n        }\n  \
    \  }\n    return c\n}\n", "    var count int\n    for i, c := range s {\n    \
    \    if c > 64 && c < 91 && i % 2 == 0 {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    var count int = 0\n    for i, r := range s {\n\
    \        if i % 2 == 0 && r > 64 && r < 91 {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i, l := range s {\n\
    \        if i % 2 == 0 && l >= 'A' && l <= 'Z' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    return 0\n}\n", "    return 0\n}\n",
  "    c := 0\n    for i,v := range s {\n        if i % 2 == 0 && v >= 'A' && v <=\
    \ 'Z' {\n            c += 1\n        }\n    }\n    return c\n}\n", "    count\
    \ := 0\n    for i, _ := range s {\n        if i % 2 == 0 {\n            if s[i]\
    \ == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n     \
    \           count++\n            }\n        }\n    }\n    return count\n}\n",
  "    return 0\n}\n", "    r := 0\n    for i, c := range s {\n        if i % 2 ==\
    \ 0 && (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n        \
    \    r++\n        }\n    }\n    return r\n}\n", "    count := 0\n    for i, char\
    \ := range s {\n        if i % 2 == 0 && char >= 'A' && char <= 'Z' {\n      \
    \      count++\n        }\n    }\n    return count\n}\n", "    count := 0\n  \
    \  for i, c := range s {\n        // is the character an uppercase vowel and in\
    \ an even position?\n        if (c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') && i % 2 == 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    vowel := \"AEIOU\"\n    count := 0\n    i := 0\n    for _,\
    \ c := range s {\n        if i % 2 == 0 && strings.Contains(vowel, string(c))\
    \ {\n            count++\n        }\n        i++\n    }\n    return count\n}\n",
  "    var count int\n    for index, char := range s {\n        if index % 2 == 0\
    \ && char >= 'A' && char <= 'Z' {\n            count++\n        }\n    }\n   \
    \ return count\n}\n", "    return 0\n}\n", "    count := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    upper := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            upper++\n\
    \        }\n    }\n    return upper\n}\n", "    var count int\n    even := true\n\
    \    for _, c := range s {\n        if even {\n            // only count uppercase\
    \ vowels\n            if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U' {\n                count++\n            }\n        }\n        even = !even\n\
    \    }\n    return count\n}\n", "    // TODO: replace the following line with\
    \ your code\n    count := 0\n    for i, ch := range s {\n        if i % 2 == 0\
    \ && ch >= 'A' && ch <= 'Z' {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for idx, val := range s {\n        if idx\
    \ % 2 == 0 && val >= 'A' && val <= 'Z' {\n            count++\n        }\n   \
    \ }\n    return count\n}\n", "    var upper_vowels int = 0\n    var i int = 0\n\
    \    var vowels string = \"AEIOU\"\n    for _, letter := range s {\n        if\
    \ i % 2 == 0 && vowels[i] == byte(letter) {\n            upper_vowels += 1\n \
    \       }\n        i += 1\n    }\n    return upper_vowels\n}\n", "    // Python\
    \ version:\n    // return sum(c.isupper() for c in s[::2])\n    count := 0\n \
    \   for i := 0; i < len(s); i+=2 {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    r := 0\n\
    \    for i, _ := range s {\n        if i % 2 == 0 {\n            if s[i] == 'A'\
    \ || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] == 'U' {\n            \
    \    r += 1\n            }\n        }\n    }\n    return r\n}\n", "    var count\
    \ int\n    for i, v := range s {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z'\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n", "    var\
    \ count int\n    for i, c := range s {\n        if 'A' <= c && c <= 'Z' && i %\
    \ 2 == 0 {\n            count++\n        }\n    }\n    return count\n}\n", "\t\
    count := 0\n\tfor i, r := range s {\n\t\tswitch r {\n\t\tcase 'A', 'E', 'I', 'O',\
    \ 'U':\n\t\t\tif i % 2 == 0 {\n\t\t\t\tcount++\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count\n}\n", "    count := 0\n    for i, r := range s {\n        if i % 2 ==\
    \ 0 && r >= 'A' && r <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    var count int\n    for i, ch := range s {\n        if (i %\
    \ 2 == 0) && (ch >= 'A') && (ch <= 'Z') {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n", "    total := 0\n    for i, char := range s {\n\
    \        if i % 2 == 0 && is_upper(char) {\n            total += 1\n        }\n\
    \    }\n    return total\n}\n", "    var result int\n    for i, _ := range s {\n\
    \        if i % 2 == 0 {\n            if s[i] == 'A' || s[i] == 'E' || s[i] ==\
    \ 'I' || s[i] == 'O' || s[i] == 'U' {\n                result += 1\n         \
    \   }\n        }\n    }\n    return result\n}\n", "    count := 0\n    for i,\
    \ c := range s {\n        if (i % 2 == 0) && (c >= 'A') && (c <= 'Z') {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "\tvar count int\n\
    \tfor i, c := range s {\n\t\tif (c >= 'A' && c <= 'Z') && i%2 == 0 {\n\t\t\tcount++\n\
    \t\t}\n\t}\n\treturn count\n}\n", "\tvar count int\n\tfor i, ch := range s {\n\
    \t\tif i % 2 == 0 && ch >= 'A' && ch <= 'Z' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn\
    \ count\n}\n", "    count := 0\n    for i, v := range s {\n        if i % 2 ==\
    \ 0 && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    counter := 0\n    for i, c := range s {\n        if i % 2\
    \ == 0 && (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n     \
    \       counter++\n        }\n    }\n    return counter\n}\n", "    var count\
    \ int = 0\n    for i, c := range s {\n        if string(c) == \"A\" || string(c)\
    \ == \"E\" || string(c) == \"I\" || string(c) == \"O\" || string(c) == \"U\" {\n\
    \            if i % 2 == 0 {\n                count += 1\n            }\n    \
    \    }\n    }\n    return count\n}\n", "    res := 0\n    for i, v := range s\
    \ {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            res += 1\n \
    \       }\n    }\n    return res\n}\n", "    // Your code here\n    var count\
    \ int\n    for index, char := range s {\n        if char >= 'A' && char <= 'Z'\
    \ && index % 2 == 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    var num int\n    for i, a := range s {\n        if is_upper(a) && is_even(i)\
    \ {\n            num++\n        }\n    }\n    return num\n}\n", "    var count\
    \ int\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    vcount\
    \ := 0\n    for i, r := range s {\n        if i % 2 == 0 && r >= 'A' && r <= 'Z'\
    \ {\n            vcount++\n        }\n    }\n    return vcount\n}\n", "    var\
    \ sum int = 0\n    for i, v := range s {\n        if i % 2 == 0 && v >= 'A' &&\
    \ v <= 'Z' {\n            sum++\n        }\n    }\n    return sum\n}\n", "   \
    \ vowels := \"AEIOU\"\n    count := 0\n    for index, char := range s {\n    \
    \    if (index % 2 == 0) && (vowels[char - 'A'] > 0) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    if len(s) == 0 {\n        return\
    \ 0\n    }\n    if len(s) == 1 {\n        return count_vowel(s)\n    }\n    return\
    \ count_vowel(s[:1]) + count_upper(s[1:])\n}\n", "    var count int\n    for i,\
    \ char := range s {\n        if (int(char) >= 65 && int(char) <= 90) && i % 2\
    \ == 0 {\n            count++\n        }\n    }\n    return count\n}\n", "   \
    \ // Write your code here!\n    var vowels, count int\n    vowels = map[string]int{\"\
    A\":1, \"E\":1, \"I\":1, \"O\":1, \"U\":1}\n    for i, v := range s {\n      \
    \  c := string(v)\n        _, ok := vowels[c]\n        if ok && i % 2 == 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for i, c := range s {\n        // Count upper case in even indices\n\
    \        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    // Your code here\n    return -1\n}\n",
  "    var count int\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    // your code here\n    return 0\n}\n", "    count := 0\n    for i, ch := range\
    \ s {\n        if i % 2 == 0 && ch >= 'A' && ch <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i, v := range\
    \ s {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n", "    r := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            r++\n    \
    \    }\n    }\n    return r\n}\n", "    var count int\n    var str = []rune(s)\n\
    \    for i := 0; i < len(str); i++ {\n        if (i % 2 == 0) && (str[i] >= 'A')\
    \ && (str[i] <= 'Z') {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    even_uppers := 0\n    for i, ch := range s {\n        if i % 2 == 0\
    \ && ch >= 'A' && ch <= 'Z' {\n            even_uppers++\n        }\n    }\n \
    \   return even_uppers\n}\n", "    var count int = 0\n    for i, c := range s\
    \ {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    cnt := 0\n    for i, ch := range\
    \ s {\n        if (i % 2 == 0) && (ch >= 'A') && (ch <= 'Z') {\n            cnt\
    \ += 1\n        }\n    }\n    return cnt\n}\n", "    return 0\n}\n", "    var\
    \ count int = 0\n    for i, c := range s {\n        if i % 2 == 0 && (c == 'A'\
    \ || c == 'E' || c == 'I' || c == 'O' || c == 'U') {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    count := 0\n    for i, r := range\
    \ s {\n        if i % 2 == 0 && r >= 'A' && r <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "\tcnt := 0\n\tfor i, r := range s\
    \ {\n\t\tif is_vowel(r) && i % 2 == 0 {\n\t\t\tcnt++\n\t\t}\n\t}\n\treturn cnt\n\
    }\n", "    c := 0\n    for i, char := range s {\n        if i % 2 == 0 && char\
    \ >= 'A' && char <= 'Z' {\n            c++\n        }\n    }\n    return c\n}\n",
  "    count := 0\n    for index, char := range s {\n        if index % 2 == 0 &&\
    \ char >= 'A' && char <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i, c := range s {\n        if i % 2 ==\
    \ 0 && c > 64 && c < 91 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "\tvar count int\n\tfor i, c := range s {\n\t\tif i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z' {\n\t\t\tcount++\n\t\t}\n\t}\n\treturn count\n}\n", "    count :=\
    \ 0\n    for i, c := range s {\n        if c >= 'A' && c <= 'Z' && i % 2 == 0\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i, r := range s {\n        // even indices, exclude zero\n   \
    \     if i % 2 == 0 && i != 0 {\n            if r == 'A' || r == 'E' || r == 'I'\
    \ || r == 'O' || r == 'U' {\n                count += 1\n            }\n     \
    \   }\n    }\n    return count\n}\n", "    count := 0\n    for i, ch := range\
    \ s {\n        if i % 2 == 0 && ch >= 'A' && ch <= 'Z' {\n            count +=\
    \ 1\n        }\n    }\n    return count\n}\n", "    var count int\n    for i,\
    \ c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n          \
    \  count++\n        }\n    }\n    return count\n}\n", "    var c int\n    for\
    \ i, v := range s {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n       \
    \     c++\n        }\n    }\n    return c\n}\n", "    count := 0\n    for i, c\
    \ := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n", "    var count int\n    for\
    \ i, char := range s {\n        if i % 2 == 0 && (char == 'A' || char == 'E' ||\
    \ char == 'I' || char == 'O' || char == 'U') {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    sLen := len(s)\n    for i\
    \ := 0; i < sLen; i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' && i % 2 == 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for idx, char := range s {\n        if idx % 2 == 0 && char >= 'A' &&\
    \ char <= 'Z' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    var count int\n    for i, c := range s {\n        if (i % 2 == 0) && (c >=\
    \ 'A') && (c <= 'Z') {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    c := 0\n    for i, c := range s {\n        if c < 'A' || c > 'Z' {\n\
    \            continue\n        }\n        if i%2 == 0 {\n            c += 1\n\
    \        }\n    }\n    return c\n}\n", "    var count int\n    // YOUR CODE HERE\n\
    \    return count\n}\n", "    count := 0\n    for i, v := range s {\n        if\
    \ i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    var num int = 0\n    for i, c := range s {\n   \
    \     if i % 2 == 0 && ('A' <= c && c <= 'Z') {\n            num += 1\n      \
    \  }\n    }\n    return num\n}\n", "    count := 0\n    for index, value := range\
    \ s {\n        if (index % 2 == 0) && (value >= 'A') && (value <= 'Z') {\n   \
    \         count += 1\n        }\n    }\n    return count\n}\n", "    m := make(map[string]int)\n\
    \    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            m[string(c)]++\n\
    \        }\n    }\n    fmt.Println(m)\n    return len(m)\n}\n", "    return 1\n\
    }\n", "    var count int = 0\n    for i, c := range s {\n        if i % 2 == 0\
    \ && c >= 'A' && c <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    var count int\n    for i, v := range s {\n        if i % 2\
    \ == 0 && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i, char := range s {\n        if i % 2\
    \ == 0 && char >= 'A' && char <= 'Z' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i, v := range s {\n        if\
    \ i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for i, r := range s {\n        if\
    \ i % 2 == 0 && r >= 'A' && r <= 'Z' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    res := 0\n    vowels := map[rune]bool{'A': true,\
    \ 'E': true, 'I': true, 'O': true, 'U': true}\n    for i, c := range s {\n   \
    \     if i % 2 == 0 && vowels[c] {\n            res++\n        }\n    }\n    return\
    \ res\n}\n", "    var count int\n    for i, r := range s {\n        if (i + 1)\
    \ % 2 == 0 && (r == 'A' || r == 'E' || r == 'I' || r == 'O' || r == 'U') {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    // replace\
    \ this for solution\n    return 0\n}\n", "    var count int\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && (c == 'A' || c == 'E' || c == 'I' || c == 'O'\
    \ || c == 'U') {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' &&\
    \ c <= 'Z' {\n            count += 1\n        }\n    }\n    return count\n}\n",
  "    var count int\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A'\
    \ && c <= 'Z' {\n            count++\n        }\n    }\n    return count\n}\n",
  "    // YOUR CODE HERE\n    return 0\n}\n", "    // Fill this in.\n    var count\
    \ int\n    for i, c := range s {\n        if c >= 'A' && c <= 'Z' && i % 2 ==\
    \ 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    return\
    \ 0\n}\n", "\tvar cnt int = 0\n\tfor i := 0; i < len(s); i++ {\n\t\tif i % 2 ==\
    \ 0 && s[i] >= 'A' && s[i] <= 'Z' {\n\t\t\tcnt++\n\t\t}\n\t}\n\treturn cnt\n}\n",
  "    count := 0\n    for i, r := range s {\n        if i % 2 == 0 && r >= 'A' &&\
    \ r <= 'Z' {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   v := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c\
    \ <= 'Z' {\n            v++\n        }\n    }\n    return v\n}\n", "    count\
    \ := 0\n    for i, v := range s {\n        // If the rune is a lowercase letter,\
    \ skip it.\n        if v >= 'a' && v <= 'z' {\n            continue\n        }\n\
    \        // If the index is even, increment the count.\n        if i % 2 == 0\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    return\
    \ 0\n}\n", "    count := 0\n    for i, c := range s {\n        if i % 2 == 0 &&\
    \ c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n", "    counter := 0\n    for index,\
    \ char := range s {\n        if index % 2 == 0 && char >= 'A' && char <= 'Z' {\n\
    \            counter++\n        }\n    }\n    return counter\n}\n", "\tcnt :=\
    \ 0\n\tfor i, char := range s {\n\t\tif i % 2 == 0 && char >= 'A' && char <= 'Z'\
    \ {\n\t\t\tcnt++\n\t\t}\n\t}\n\treturn cnt\n}\n", "    c := 0\n    for i, r :=\
    \ range s {\n        if i % 2 == 0 && 'A' <= r && r <= 'Z' {\n            c++\n\
    \        }\n    }\n    return c\n}\n", "    count := 0\n    for i, r := range\
    \ s {\n        if (i+1) % 2 == 0 && r >= 'A' && r <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for i, c :=\
    \ range s {\n        if is_even(i) && is_upper(c) {\n            count++\n   \
    \     }\n    }\n    return count\n}\n", "    // Your code here\n    return 0\n\
    }\n", "    var i int\n    var count int\n    var vowels = \"AEIOU\"\n    for i\
    \ = 0; i < len(s); i++ {\n        if (i % 2 == 0) && (string(s[i]) == vowels)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "\tcount :=\
    \ 0\n\tfor i, char := range s {\n\t\t// logic for even indices\n\t\tif i % 2 ==\
    \ 0 {\n\t\t\tif char == 'A' || char == 'E' || char == 'I' || char == 'O' || char\
    \ == 'U' {\n\t\t\t\tcount += 1\n\t\t\t}\n\t\t}\n\t}\n\treturn count\n}\n", " \
    \   res := 0\n    for i, ch := range s {\n        if i % 2 == 0 && ch >= 'A' &&\
    \ ch <= 'Z' {\n            res += 1\n        }\n    }\n    return res\n}\n", " \
    \   total := 0\n    for i, c := range s {\n        // fmt.Println(i, c)\n    \
    \    if i % 2 == 0 && (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U')\
    \ {\n            total += 1\n        }\n    }\n    return total\n}\n", "    count\
    \ := 0\n    var prevIsVowel bool\n    var isVowel bool\n    for i := 0; i < len(s);\
    \ i++ {\n        isVowel = isVowelFunc(s[i])\n        if i%2 == 0 && isVowel &&\
    \ !prevIsVowel {\n            count++\n        }\n        prevIsVowel = isVowel\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i, c := range s {\n \
    \       if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i, r := range s {\n\
    \        if i % 2 == 0 && r > 64 && r < 91 {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for i, r := range s {\n \
    \       if i % 2 == 0 && r > 'A' && r < 'Z' {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    return 0\n}\n", "    l := len(s)\n    if\
    \ l == 0 {\n        return 0\n    }\n    count := 0\n    vowels := []rune{'A',\
    \ 'E', 'I', 'O', 'U'}\n    for i := 1; i < l; i += 2 {\n        if i % 2 == 0\
    \ {\n            for _, v := range vowels {\n                if rune(s[i]) ==\
    \ v {\n                    count++\n                }\n            }\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i, v := range s {\n\
    \        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for i, v := range s\
    \ {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z' {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    count := 0\n    for i, r := range\
    \ s {\n        if i % 2 == 0 && r >= 'A' && r <= 'Z' {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && isUpper(c) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i, c := range s {\n\
    \        if i % 2 == 0 && (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c ==\
    \ 'U') {\n            count++\n        }\n    }\n    return count\n}\n", "   \
    \ count := 0\n    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' &&\
    \ c <= 'Z' {\n            count += 1\n        }\n    }\n    return count\n}\n",
  "    var count int\n    for i, char := range s {\n        if i % 2 == 0 && char\
    \ >= 'A' && char <= 'Z' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    // Initialize a counter.\n    var c int = 0\n    // Loop through the\
    \ string, checking if it's uppercase.\n    for i, v := range s {\n        // Check\
    \ that the index is even and that the character is uppercase.\n        if i %\
    \ 2 == 0 && v >= 'A' && v <= 'Z' {\n            // Increment the counter.\n  \
    \          c++\n        }\n    }\n    // Return the counter.\n    return c\n}\n",
  "    cnt := 0\n    for idx, char := range s {\n        if (idx % 2 == 0) && (char\
    \ >= 'A') && (char <= 'Z') {\n            cnt += 1\n        }\n    }\n    return\
    \ cnt\n}\n", "    count := 0\n    for i, c := range s {\n        if i % 2 == 0\
    \ && c >= 'A' && c <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    sum := 0\n    for i, v := range s {\n        if i % 2 == 0\
    \ && (v == 'A' || v == 'E' || v == 'I' || v == 'O' || v == 'U') {\n          \
    \  sum += 1\n        }\n    }\n    return sum\n}\n", "    // count of upper case\
    \ vowels in even indices\n    var uppercase int = 0\n    var vowels string = \"\
    AEIOU\"\n\n    // iterate over the string\n    for i, c := range s {\n       \
    \ // only process even indices\n        if i % 2 == 0 {\n            // does the\
    \ character come from the vowels?\n            for _, vowel := range vowels {\n\
    \                if c == vowel {\n                    // if it does, it is uppercase?\n\
    \                    if c >= 'A' && c <= 'Z' {\n                        uppercase++\n\
    \                    }\n                }\n            }\n        }\n    }\n\n\
    \    return uppercase\n}\n", "    var output int\n    for i, char := range s {\n\
    \        if i % 2 == 0 && char >= 'A' && char <= 'Z' {\n            output++\n\
    \        }\n    }\n    return output\n}\n", "    count := 0\n    for i, c := range\
    \ s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for i, r :=\
    \ range s {\n        if (i % 2 == 0) && (r >= 'A') && (r <= 'Z') {\n         \
    \   count++\n        }\n    }\n    return count\n}\n", "    a := []rune(s)\n \
    \   count := 0\n    for i := 0; i < len(a); i++ {\n        if a[i] == 'A' || a[i]\
    \ == 'E' || a[i] == 'I' || a[i] == 'O' || a[i] == 'U' {\n            if i % 2\
    \ == 0 {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for idx, char := range s {\n        switch\
    \ {\n        case (idx % 2) == 0 && (char >= 'A' && char <= 'Z'):\n          \
    \  count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for i, c := range s {\n        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for i, char := range s {\n        if (i % 2 == 0) && (char >= 'A')\
    \ && (char <= 'Z') {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    // Implement your solution here\n    return 0\n}\n", "    count :=\
    \ 0\n    for i, v := range s {\n        if i % 2 == 0 && v >= 'A' && v <= 'Z'\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    numberOfUppercaseVowels\
    \ := 0\n    for i, r := range s {\n        if isEvenIndex(i) && isUppercaseVowel(r)\
    \ {\n            numberOfUppercaseVowels += 1\n        }\n    }\n    return numberOfUppercaseVowels\n\
    }\n", "    // YOUR CODE HERE\n    return 0\n}\n", "    var count int\n    var\
    \ i int\n    var c string\n    for i, c = range s {\n        if i % 2 == 0 &&\
    \ c >= 'A' && c <= 'Z' {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for i, v := range s {\n        if i % 2 == 0 && v >=\
    \ 'A' && v <= 'Z' {\n            count += 1\n        }\n    }\n    return count\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var cnt int\n    for i,\
    \ c := range s {\n        if i % 2 == 0 && (c == 'A' || c == 'E' || c == 'I' ||\
    \ c == 'O' || c == 'U') {\n            cnt += 1\n        }\n    }\n    return\
    \ cnt\n}\n", "    count := 0\n    for i, v := range s {\n        if i % 2 == 0\
    \ && v >= 'A' && v <= 'Z' {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for i, char := range s {\n        if i % 2\
    \ == 0 && (char == 'A' || char == 'E' || char == 'I' || char == 'O' || char ==\
    \ 'U') {\n            count += 1\n        }\n    }\n    return count\n}\n", " \
    \   var uppercaseVowels int\n    for i, x := range s {\n        if (i+1)%2 ==\
    \ 0 && x == 'A' || x == 'E' || x == 'I' || x == 'O' || x == 'U' {\n          \
    \  uppercaseVowels += 1\n        }\n    }\n    return uppercaseVowels\n}\n", " \
    \   count := 0\n    for idx, _ := range s {\n        if idx % 2 == 0 {\n     \
    \       continue\n        }\n        if s[idx] == 'A' || s[idx] == 'E' || s[idx]\
    \ == 'I' || s[idx] == 'O' || s[idx] == 'U' {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n", "    count := 0\n    for i, c := range s {\n\
    \        if i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n", "\tcounter := 0\n\tfor i,c := range s\
    \ {\n\t\tif i % 2 == 0 && c >= 'A' && c <= 'Z' {\n\t\t\tcounter++\n\t\t}\n\t}\n\
    \treturn counter\n}\n", "    count := 0\n    for i, c := range s {\n        if\
    \ i % 2 == 0 && c >= 'A' && c <= 'Z' {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    var cnt int\n    for i, c := range s {\n       \
    \ if (i % 2) == 0 && c >= 'A' && c <= 'Z' {\n            cnt++\n        }\n  \
    \  }\n    return cnt\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

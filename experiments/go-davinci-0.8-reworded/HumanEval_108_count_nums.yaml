name: HumanEval_108_count_nums
language: go_test.go
prompt: "package count_nums_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Write a function count_nums which takes a list of integers and returns\n// the\
  \ number of elements which has a sum of digits > 0.\n// If a number is negative,\
  \ then its first signed digit will be negative:\n// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n// >>> count_nums([]int{})\n// 0\n// >>> count_nums([]int{-1, 11,\
  \ -11})\n// 1\n// >>> count_nums([]int{1, 1, 2})\n// 3\nfunc count_nums(arr []int)\
  \ int {\n"
tests: "func TestCount_Nums(t *testing.T) {\n  candidate := count_nums\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{}), expected: 0 },\n     { actual: candidate([]int{-1,\
  \ -2, 0}), expected: 0 },\n     { actual: candidate([]int{1, 1, 2, -2, 3, 4, 5}),\
  \ expected: 6 },\n     { actual: candidate([]int{1, 6, 9, -6, 0, 1, 5}), expected:\
  \ 5 },\n     { actual: candidate([]int{1, 100, 98, -7, 1, -1}), expected: 4 },\n\
  \     { actual: candidate([]int{12, 23, 34, -45, -56, 0}), expected: 5 },\n    \
  \ { actual: candidate([]int{0, 1}), expected: 1 },\n     { actual: candidate([]int{1}),\
  \ expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    sum := 0\n    for _, val := range arr {\n        if val < 0 {\n\
    \            val = -val\n        }\n        for val > 0 {\n            sum +=\
    \ val % 10\n            val /= 10\n        }\n    }\n    return sum\n}\n", " \
    \   m := map[int]bool{}\n    total := 0\n    for _, num := range arr {\n     \
    \   if num < 0 {\n            num = num * -1\n        }\n        if num < 10 {\n\
    \            m[num] = true\n        } else {\n            sum := 0\n         \
    \   for num > 0 {\n                sum += num % 10\n                num = num\
    \ / 10\n            }\n            m[sum] = true\n        }\n    }\n    for _,\
    \ val := range m {\n        if val {\n            total += 1\n        }\n    }\n\
    \    return total\n}\n", "    counter := 0\n    for _, val := range arr {\n  \
    \      for _, v := range fmt.Sprintf(\"%d\", val) {\n            if v == '-' {\n\
    \                continue\n            }\n            num, _ := fmt.Sscanf(string(v),\
    \ \"%d\", &num)\n            counter += num\n        }\n    }\n    return counter\n\
    }\n", "    var count int\n    for _, v := range arr {\n        if v == 0 {\n \
    \           continue\n        }\n        if v < 0 {\n            v = v * -1\n\
    \        }\n        for v > 0 {\n            count += v % 10\n            v =\
    \ v / 10\n        }\n    }\n    return count\n}\n", "    var cnt int = 0\n   \
    \ for _, v := range arr {\n        if v > 0 {\n            cnt += sum_digits(v)\n\
    \        } else {\n            cnt += sum_digits(-v)\n        }\n    }\n    return\
    \ cnt\n}\n", "    count := 0\n    for _, num := range arr {\n        if sum_digits(num)\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range arr {\n        if num < 0 {\n            num =\
    \ -num\n        }\n        if count_digits(num) > 0 {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, i := range\
    \ arr {\n        if i > 0 {\n            count += sum_digits(i)\n        } else\
    \ {\n            count += first_signed_digit(i)\n        }\n    }\n    return\
    \ count\n}\n", "    // TODO\n    return 0\n}\n", "    count := 0\n    for _, value\
    \ := range arr {\n        sum := 0\n        for value != 0 {\n            if value\
    \ < 0 {\n                sum += value % 10\n            } else {\n           \
    \     sum += value % 10\n            }\n            value /= 10\n        }\n \
    \       if sum > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, v := range arr {\n        digits := get_digits(v)\n\
    \        if sum_digits(digits) > 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n", "    if arr == nil {\n        return 0\n    }\n    count\
    \ := 0\n    for _, v := range arr {\n        if v < 0 {\n            sum := v\
    \ * -1\n            sum += sum / 10\n            sum %= 10\n            if sum\
    \ != 0 {\n                count += 1\n            }\n        } else {\n      \
    \      sum := v\n            sum += sum / 10\n            sum %= 10\n        \
    \    if sum != 0 {\n                count += 1\n            }\n        }\n   \
    \ }\n    return count\n}\n", "    count := 0\n    for _, v := range arr {\n  \
    \      if is_positive(v) {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, x := range arr {\n        s := 0\n\
    \        if x < 0 {\n            s = -x\n        } else {\n            s = x\n\
    \        }\n        for s > 0 {\n            s, _ = divmod(s, 10)\n          \
    \  count += 1\n        }\n    }\n    return count\n}\n", "    var ret int\n  \
    \  for _, x := range arr {\n        var y int\n        if x < 0 {\n          \
    \  y = -x\n        } else {\n            y = x\n        }\n        var sum int\n\
    \        for y > 0 {\n            sum += y % 10\n            y /= 10\n       \
    \ }\n        if sum > 0 {\n            ret++\n        }\n    }\n    return ret\n\
    }\n", "    var count int = 0\n    for _, val := range arr {\n        if val ==\
    \ 0 {\n            continue\n        }\n        if val < 0 {\n            val\
    \ = -val\n        }\n        if sum_digits(val) > 0 {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    // TODO add your code here\n  \
    \  return 0\n}\n", "    cnt := 0\n    for _, num := range arr {\n        if num\
    \ < 0 {\n            num = -num\n        }\n        for num > 0 {\n          \
    \  cnt += num % 10\n            num /= 10\n        }\n    }\n    return cnt\n\
    }\n", "    result := 0\n    for _, val := range arr {\n        sval := fmt.Sprintf(\"\
    %d\", val)\n        sum := 0\n        for _, v := range sval {\n            iv,\
    \ _ := strconv.Atoi(string(v))\n            sum += iv\n        }\n        if sum\
    \ > 0 {\n            result += 1\n        }\n    }\n    return result\n}\n", " \
    \   var cnt int = 0\n    for _, v := range arr {\n        if v < 0 {\n       \
    \     cnt += count_digits(-v)\n        } else {\n            cnt += count_digits(v)\n\
    \        }\n    }\n    return cnt\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        sum := 0\n        num := v\n        if num < 0 {\n          \
    \  num = -num\n        }\n        for num > 0 {\n            sum += num % 10\n\
    \            num /= 10\n        }\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    ret := 0\n    for _, num := range arr {\n        if num < 0 {\n\
    \            num = -num\n        }\n        sum := 0\n        for num > 0 {\n\
    \            sum += num % 10\n            num /= 10\n        }\n        if sum\
    \ > 0 {\n            ret += 1\n        }\n    }\n    return ret\n}\n", "    count\
    \ := 0\n    for _, x := range arr {\n        if x > 0 {\n            count +=\
    \ sum_of_digits(x) > 0\n        } else {\n            count += sum_of_digits(-x)\
    \ > 0\n        }\n    }\n    return count\n}\n", "    count := 0\n    for _, v\
    \ := range arr {\n        if v < 0 {\n            v = -v\n        }\n        sum\
    \ := 0\n        for v > 0 {\n            sum += v % 10\n            v /= 10\n\
    \        }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    var i, count int\n    for i = 0; i < len(arr); i++ {\n   \
    \     if sum(arr[i]) > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, v := range arr {\n        if sum_digits(v)\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, v := range arr {\n        if sum_digits(v) > 0 {\n        \
    \    count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ _, num := range arr {\n        if num == 0 {\n            continue\n       \
    \ }\n        if num < 0 {\n            num = -num\n        }\n        total :=\
    \ 0\n        for num > 0 {\n            total += num % 10\n            num /=\
    \ 10\n        }\n        if total > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    var sum int\n    for _, v := range arr {\n     \
    \   num := v\n        if num < 0 {\n            num = -num\n        }\n      \
    \  for num > 0 {\n            sum += num % 10\n            num /= 10\n       \
    \ }\n        if sum > 0 {\n            sum = 0\n        } else {\n           \
    \ sum++\n        }\n    }\n    return sum\n}\n", "    count := 0\n    for _, v\
    \ := range arr {\n        if v < 0 {\n            v = -v\n        }\n        for\
    \ v > 0 {\n            count += v % 10\n            v /= 10\n        }\n    }\n\
    \    return count\n}\n", "    var count int\n    for _, num := range arr {\n \
    \       if num == 0 {\n            continue\n        }\n\n        var sum int\n\
    \        for num != 0 {\n            if num < 0 {\n                sum -= num\
    \ % 10\n            } else {\n                sum += num % 10\n            }\n\
    \            num /= 10\n        }\n\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        sum := 0\n        for v != 0 {\n            sum += v % 10\n \
    \           v /= 10\n        }\n        if sum > 0 {\n            count++\n  \
    \      }\n    }\n    return count\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        if v < 0 {\n            v = -v\n        }\n        if v == 0\
    \ {\n            count++\n            continue\n        }\n        sum := 0\n\
    \        for v > 0 {\n            sum += v % 10\n            v /= 10\n       \
    \ }\n        if sum > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    counter := 0\n    for _, value := range arr {\n        if sum(digits(value))\
    \ > 0 {\n            counter++\n        }\n    }\n    return counter\n}\n", " \
    \   count := 0\n    for _, i := range arr {\n        if i > -1 {\n           \
    \ i = i * -1\n        }\n        if i < -10 {\n            i = i / -10\n     \
    \   }\n        if i > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    num_sum := 0\n    for _, x := range arr {\n        x_sum := 0\n   \
    \     if x < 0 {\n            x = x * -1\n        }\n        for x > 0 {\n   \
    \         x_sum += x % 10\n            x = x / 10\n        }\n        if x_sum\
    \ > 0 {\n            num_sum += 1\n        }\n    }\n    return num_sum\n}\n",
  "    var count int\n    for _, v := range arr {\n        if v < 0 {\n          \
    \  v = -v\n        }\n        for v != 0 {\n            count += v % 10\n    \
    \        v /= 10\n        }\n    }\n    return count\n}\n", "    var tmp, sum\
    \ int\n    for _, v := range arr {\n        sum = 0\n        if v < 0 {\n    \
    \        tmp = v * -1\n        } else {\n            tmp = v\n        }\n    \
    \    for tmp > 0 {\n            sum += tmp % 10\n            tmp /= 10\n     \
    \   }\n        if sum > 0 {\n            fmt.Println(v)\n        }\n    }\n  \
    \  return len(arr)\n}\n", "    count := 0\n    for _, n := range arr {\n     \
    \   if n < 0 {\n            n = -n\n        }\n        sum := 0\n        for n\
    \ > 0 {\n            d := n % 10\n            sum += d\n            n /= 10\n\
    \        }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, num := range arr {\n        sum :=\
    \ 0\n        if num < 0 {\n            num = -num\n        }\n        for num\
    \ > 0 {\n            sum += num % 10\n            num /= 10\n        }\n     \
    \   if sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for _, a := range arr {\n        sum := sum_digits(a)\n   \
    \     if sum > 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, v := range arr {\n        if sum(v) > 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range arr {\n        if num < 0 {\n            num =\
    \ num * -1\n        }\n        tmp := num\n        sum := 0\n        for tmp >\
    \ 0 {\n            sum += tmp % 10\n            tmp /= 10\n        }\n       \
    \ if sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    var sum, count int\n    var signed bool\n    for _, num := range arr {\n  \
    \      sum = 0\n        if num < 0 {\n            signed = true\n            num\
    \ = -num\n        } else {\n            signed = false\n        }\n        for\
    \ num > 0 {\n            sum += num % 10\n            num /= 10\n        }\n \
    \       if signed {\n            sum *= -1\n        }\n        if sum > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    var sum,\
    \ result int\n    for _, value := range arr {\n        sum = 0\n        for value\
    \ != 0 {\n            sum += value % 10\n            value /= 10\n        }\n\
    \        if sum > 0 {\n            result++\n        }\n    }\n    return result\n\
    }\n", "    count := 0\n    for _, v := range arr {\n        sum := 0\n       \
    \ for v != 0 {\n            sum += v % 10\n            v /= 10\n        }\n  \
    \      if sum > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, val := range arr {\n        if sum(val) > 0\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, v := range arr {\n        sum := 0\n        if v < 0 {\n  \
    \          sum += -1\n            v = -v\n        }\n        for v > 0 {\n   \
    \         sum += v % 10\n            v /= 10\n        }\n        if sum > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    count := 0\n    for _, v := range arr {\n   \
    \     if count_digits(v) > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, n := range arr {\n        sum := 0\n\
    \        for n != 0 {\n            sum += n % 10\n            n /= 10\n      \
    \  }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    cnt := 0\n    for _, v := range arr {\n        cnt += sum_digits(v)\
    \ > 0\n    }\n    return cnt\n}\n", "    var sum int\n    var count int\n    for\
    \ _, value := range arr {\n        for ; value != 0; value /= 10 {\n         \
    \   if value < 0 {\n                sum += -value % 10\n            } else {\n\
    \                sum += value % 10\n            }\n        }\n        if sum >\
    \ 0 {\n            count++\n        }\n        sum = 0\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, e := range arr {\n        if sum(e) > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, v := range arr {\n        if sum_digits(v) > 0 {\n           \
    \ count++\n        }\n    }\n    return count\n}\n", "    var count int\n    for\
    \ _, n := range arr {\n        if n < 0 {\n            n = -n\n        }\n   \
    \     if n == 0 {\n            count++\n            continue\n        }\n    \
    \    for n > 0 {\n            count += n % 10\n            n /= 10\n        }\n\
    \    }\n    return count\n}\n", "    var count int\n    for _, val := range arr\
    \ {\n        if sum_digits(val) > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    return 0\n}\n", "    count := 0\n    for _, num\
    \ := range arr {\n        if num < 0 {\n            num = -num\n        }\n  \
    \      if num == 0 {\n            count++\n            continue\n        }\n \
    \       for num > 0 {\n            count += num % 10\n            num /= 10\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        tmp := v\n        if tmp < 0 {\n            tmp = -tmp\n    \
    \    }\n        sum := 0\n        for tmp > 0 {\n            sum += tmp % 10\n\
    \            tmp /= 10\n        }\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    sum := 0\n    for _, n := range\
    \ arr {\n        i := n\n        if i < 0 {\n            i = i * -1\n        }\n\
    \        for i > 0 {\n            sum += i % 10\n            i = i / 10\n    \
    \    }\n    }\n    return sum\n}\n", "    var count int\n    for _, v := range\
    \ arr {\n        if v < 0 {\n            v = -v\n        }\n        for v > 0\
    \ {\n            count += v % 10\n            v /= 10\n        }\n    }\n    return\
    \ count\n}\n", "    var sum_digits, count int\n    for _, n := range arr {\n \
    \       if n < 0 {\n            n = -n\n        }\n        for n > 0 {\n     \
    \       sum_digits += n % 10\n            n /= 10\n        }\n        if sum_digits\
    \ > 0 {\n            count++\n        }\n        sum_digits = 0\n    }\n    return\
    \ count\n}\n", "    var count int\n    if len(arr) == 0 {\n        return count\n\
    \    }\n\n    count = 0\n    for _, val := range arr {\n        if count_nums_helper(val)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n", "    var\
    \ result int = 0\n    for _, element := range arr {\n        if sum(element) >\
    \ 0 {\n            result += 1\n        }\n    }\n    return result\n}\n", " \
    \   count := 0\n    for _, num := range arr {\n        if sum_digits(num) > 0\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n", "    sum\
    \ := 0\n    if len(arr) == 0 {\n        return sum\n    }\n\n    for _, num :=\
    \ range arr {\n        number := num\n        if number < 0 {\n            number\
    \ = -number\n        }\n        digits := 0\n        for number > 0 {\n      \
    \      digits += number % 10\n            number /= 10\n        }\n        if\
    \ digits > 0 {\n            sum++\n        }\n    }\n    return sum\n}\n", " \
    \   total := 0\n    for _, i := range arr {\n        if i > 0 {\n            if\
    \ sum_nums(i) > 0 {\n                total += 1\n            }\n        } else\
    \ {\n            if sum_nums(i) < 0 {\n                total += 1\n          \
    \  }\n        }\n    }\n    return total\n}\n", "    return 0\n}\n", "    count\
    \ := 0\n    for _, i := range arr {\n        if sumDigits(i) > 0 {\n         \
    \   count++\n        }\n    }\n    return count\n}\n", "    count := 0\n    for\
    \ _, v := range arr {\n        sum := sum_abs_digits(v)\n        if sum > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    counter :=\
    \ 0\n    if len(arr) == 0 {\n        return counter\n    }\n\n    for _, value\
    \ := range arr {\n        str := fmt.Sprintf(\"%d\", value)\n        if value\
    \ < 0 {\n            str = str[1:]\n        }\n        counter += digitSum(str)\n\
    \    }\n    return counter\n}\n", "    count := 0\n    for _, elem := range arr\
    \ {\n        sum := 0\n        if elem < 0 {\n            sum += elem * -1\n \
    \       } else {\n            sum += elem\n        }\n        for sum > 0 {\n\
    \            sum -= sum % 10\n            sum /= 10\n        }\n        if sum\
    \ == 0 {\n            count++\n        }\n    }\n    return count\n}\n", "   \
    \ counter := 0\n    for _, num := range arr {\n        if sumDigits(num) > 0 {\n\
    \            counter++\n        }\n    }\n    return counter\n}\n", "    var c\
    \ int\n    for _, n := range arr {\n        if n < 0 {\n            n = -n\n \
    \       }\n        for n > 0 {\n            c += n % 10\n            n /= 10\n\
    \        }\n    }\n    return c\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        if sum_digits(v) > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for _, num := range arr {\n    \
    \    sum := 0\n        var n int\n        if num < 0 {\n            n = -num\n\
    \        } else {\n            n = num\n        }\n        for n > 0 {\n     \
    \       sum += n % 10\n            n /= 10\n        }\n        if sum > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, val := range arr {\n        val_sum := 0\n        if val < 0 {\n\
    \            val *= -1\n        }\n        for val != 0 {\n            val_sum\
    \ += val % 10\n            val /= 10\n        }\n        if val_sum > 0 {\n  \
    \          count++\n        }\n    }\n    return count\n}\n", "    return 0\n\
    }\n", "    nums := 0\n    for _, num := range arr {\n        if sum_of_digits(num)\
    \ > 0 {\n            nums += 1\n        }\n    }\n    return nums\n}\n", "   \
    \ var cnt int\n    for _, v := range arr {\n        var sum int\n        if v\
    \ < 0 {\n            sum += -1\n            v = -v\n        }\n        for v !=\
    \ 0 {\n            sum += v % 10\n            v /= 10\n        }\n        if sum\
    \ > 0 {\n            cnt++\n        }\n    }\n    return cnt\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    total := 0\n    for _, x := range arr {\n\
    \        digits := 0\n        for x != 0 {\n            digits += x % 10\n   \
    \         x /= 10\n        }\n        if digits > 0 {\n            total++\n \
    \       }\n    }\n    return total\n}\n", "    count := 0\n    for _, n := range\
    \ arr {\n        num := fmt.Sprintf(\"%d\", n)\n        sum := 0\n        for\
    \ _, c := range num {\n            sum += int(c - '0')\n        }\n        if\
    \ sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   var (\n        count int\n        sum int\n    )\n    for _, i := range arr\
    \ {\n        sum = 0\n        if i < 0 {\n            sum += (-i % 10)\n     \
    \       i = -(i / 10)\n        }\n        for i > 0 {\n            sum += (i %\
    \ 10)\n            i /= 10\n        }\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var counter int = 0\n    for _,\
    \ num := range arr {\n        var digits []int\n        if num > 0 {\n       \
    \     digits = int2digits(num)\n        } else {\n            digits = int2digits(-num)\n\
    \            digits[0] = -digits[0]\n        }\n        var sum int = 0\n    \
    \    for _, digit := range digits {\n            sum += digit\n        }\n   \
    \     if sum > 0 {\n            counter++\n        }\n    }\n    return counter\n\
    }\n", "    num_of_nums := 0\n    for _, num := range arr {\n        if (get_sum_of_digits(num)\
    \ > 0) {\n            num_of_nums += 1\n        }\n    }\n    return num_of_nums\n\
    }\n", "    count := 0\n    for _, v := range arr {\n        sum := 0\n       \
    \ for i := v; i != 0; i /= 10 {\n            sum += i % 10\n        }\n      \
    \  if sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    sum := 0\n    for _, a := range arr {\n        if a < 0 {\n            sum\
    \ += -a\n        } else {\n            sum += a\n        }\n    }\n    return\
    \ sum\n}\n", "    count := 0\n    for _, val := range arr {\n        sum := 0\n\
    \        for val != 0 {\n            sum += val % 10\n            val /= 10\n\
    \        }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    return 0\n}\n", "    cnt := 0\n    for _, x := range arr {\n\
    \        if x < 0 {\n            x = -x\n        }\n        if x == 0 {\n    \
    \        cnt++\n            continue\n        }\n        s := 0\n        for x\
    \ > 0 {\n            s += x % 10\n            x /= 10\n        }\n        if s\
    \ > 0 {\n            cnt++\n        }\n    }\n    return cnt\n}\n\ntype testpair ",
  "    count := 0\n    for _, v := range arr {\n        if sumDigits(v) > 0 {\n  \
    \          count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for _, v := range arr {\n        if sum_of_digits(v) > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    sum := 0\n    for _, v := range\
    \ arr {\n        if sum_digits(v) > 0 {\n            sum++\n        }\n    }\n\
    \    return sum\n}\n", "    var total int\n    for _, num := range arr {\n   \
    \     if is_positive(num) {\n            total++\n        }\n    }\n    return\
    \ total\n}\n", "    num := 0\n    for _, n := range arr {\n        if n < 0 {\n\
    \            n = -n\n        }\n        sum := 0\n        for n > 0 {\n      \
    \      sum += n % 10\n            n /= 10\n        }\n        if sum > 0 {\n \
    \           num += 1\n        }\n    }\n    return num\n}\n", "    // write your\
    \ code in Go 1.4\n    count := 0\n    for _,v := range arr {\n        if sum_digits(v)\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, v := range arr {\n        sum := 0\n        for v != 0 {\n\
    \            sum += v % 10\n            v /= 10\n        }\n        if sum > 0\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var total\
    \ int\n    for _, v := range arr {\n        var sum int\n        if v < 0 {\n\
    \            v = -v\n        }\n        for v > 0 {\n            sum += v % 10\n\
    \            v /= 10\n        }\n        if sum > 0 {\n            total++\n \
    \       }\n    }\n    return total\n}\n", "    count := 0\n    if arr == nil {\n\
    \        return count\n    }\n    for _, v := range arr {\n        if digit_sum(v)\
    \ > 0 {\n            count += 1\n        }\n    }\n    return count\n}\n", " \
    \   return 0\n}\n", "    n := 0\n    for _, i := range arr {\n        if i < 0\
    \ {\n            i = -i\n        }\n        if i / 10 > 0 {\n            n +=\
    \ 2\n        } else {\n            n++\n        }\n    }\n    return n\n}\n",
  "    count := 0\n    for _, number := range arr {\n        if _, err := is_positive(number);\
    \ err == nil {\n            count += 1\n        }\n    }\n    return count\n}\n",
  "    count := 0\n    for _, i := range arr {\n        if sum_digits(i) > 0 {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    var arr_size\
    \ int = len(arr)\n    var counter int = 0\n    for i := 0; i < arr_size; i++ {\n\
    \        var digit int = arr[i]\n        var sum int = 0\n        for digit !=\
    \ 0 {\n            sum += digit % 10\n            digit /= 10\n        }\n   \
    \     if sum > 0 {\n            counter++\n        }\n    }\n    return counter\n\
    }\n", "    count := 0\n    for _, val := range arr {\n        sum := 0\n     \
    \   val = val * sign(val)\n        for val > 0 {\n            sum += val % 10\n\
    \            val /= 10\n        }\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    n := 0\n    for _, v := range\
    \ arr {\n        if abs_sum_digits(v) > 0 {\n            n++\n        }\n    }\n\
    \    return n\n}\n", "    count := 0\n    for _, v := range arr {\n        if\
    \ v < 0 {\n            count += v % -10\n        } else {\n            count +=\
    \ v % 10\n        }\n    }\n    return count\n}\n", "    count := 0\n    for _,\
    \ n := range arr {\n        if n < 0 {\n            n = -n\n        }\n      \
    \  for n > 0 {\n            if n % 10 > 0 {\n                count++\n       \
    \         break\n            }\n            n /= 10\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, value := range arr {\n        s :=\
    \ sum_digits(value)\n        if s > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for _, a := range arr {\n      \
    \  if getSumOfSignedDigits(a) > 0 {\n            count++\n        }\n    }\n \
    \   return count\n}\n", "    count := 0\n    for _, num := range arr {\n     \
    \   if num == 0 {\n            continue\n        }\n        if num < 0 {\n   \
    \         num = -num\n        }\n        sum := 0\n        for num > 0 {\n   \
    \         digit := num % 10\n            sum += digit\n            num /= 10\n\
    \        }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, n := range arr {\n        sum := 0\n\
    \        for n != 0 {\n            sum += n % 10\n            n /= 10\n      \
    \  }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    sum := 0\n    for _, a := range arr {\n        if a < 0 {\n\
    \            a = -a\n        }\n        for a > 0 {\n            sum += a % 10\n\
    \            a /= 10\n        }\n    }\n    return sum\n}\n", "    count := 0\n\
    \    for _, i := range arr {\n        //if i < 0 { i = -i }\n        i = i * (i>>63\
    \ | 1) // another way to do same thing\n        for i > 0 {\n            count\
    \ += i % 10\n            i /= 10\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for _, v := range arr {\n        for v != 0 {\n          \
    \  count += v % 10\n            v /= 10\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, item := range arr {\n        if sumDigits(item)\
    \ > 0 {\n            count += 1\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for _, n := range arr {\n        sum := 0\n        for ; n\
    \ != 0; n /= 10 {\n            sum += n % 10\n        }\n        if sum > 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, num := range arr {\n        num = abs(num)\n        sum := 0\n\
    \        for num > 0 {\n            sum += num % 10\n            num /= 10\n \
    \       }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    count := 0\n    for _, num := range arr {\n        if sum(num)\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    cnt\
    \ := 0\n    for _, i := range arr {\n        cnt += count_digit(i)\n    }\n  \
    \  return cnt\n}\n", "    return 0\n}\n", "    if len(arr) == 0 {\n        return\
    \ 0\n    }\n    counts := 0\n    for _, v := range arr {\n        if getSumOfDigits(v)\
    \ > 0 {\n            counts += 1\n        }\n    }\n    return counts\n}\n", " \
    \   return 0\n}\n", "    count := 0\n    for _, val := range arr {\n        if\
    \ sum_digits(val) > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    var count int\n    if len(arr) == 0 {\n        return count\n    }\n\
    \    for _, v := range arr {\n        var sum int\n        if v < 0 {\n      \
    \      sum = sum + -1 * v % 10\n            v = -1 * v / 10\n        }\n     \
    \   for v > 0 {\n            sum = sum + v % 10\n            v = v / 10\n    \
    \    }\n        if sum > 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    var count int\n    for _, num := range arr {\n        var\
    \ sum int\n        if num < 0 {\n            sum = sum + -num\n        } else\
    \ {\n            sum = sum + num\n        }\n        for {\n            var last_digit\
    \ int\n            if sum > 0 {\n                last_digit = sum % 10\n     \
    \       } else {\n                last_digit = sum % -10\n            }\n    \
    \        sum = sum - last_digit\n            if sum > 0 {\n                sum\
    \ = sum / 10\n            } else {\n                sum = sum / -10\n        \
    \    }\n            if sum == 0 {\n                if last_digit > 0 {\n     \
    \               count++\n                }\n                break\n          \
    \  }\n        }\n    }\n    return count\n}\n", "    count := 0\n    for _, val\
    \ := range arr {\n        if sum_digits(val) > 0 {\n            count++\n    \
    \    }\n    }\n    return count\n}\n", "    count := 0\n    for _,v := range arr\
    \ {\n        dsum := 0\n        if v < 0 {\n            v = -v\n        }\n  \
    \      for v > 0 {\n            dsum += v % 10\n            v /= 10\n        }\n\
    \        if dsum > 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n", "    count := 0\n    for _, num := range arr {\n        sum := 0\n     \
    \   if num < 0 {\n            num = -num\n        }\n        for ; num > 0; num\
    \ /= 10 {\n            sum += num % 10\n        }\n        if sum > 0 {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    // Your code\
    \ here\n    return 0\n}\n", "    l := len(arr)\n    if l == 0 {\n        return\
    \ 0\n    }\n    count := 0\n    for _, v := range arr {\n        if v > 0 {\n\
    \            if sum_nums(v) > 0 {\n                count++\n            }\n  \
    \      } else {\n            if sum_nums(-v) > 0 {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, v := range arr {\n        sum := 0\n        if v < 0 {\n         \
    \   v = -v\n        }\n        for v > 0 {\n            remainder := v % 10\n\
    \            sum += remainder\n            v = v / 10\n        }\n        if sum\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    var\
    \ n int\n    for _, v := range arr {\n        var s int\n        if v < 0 {\n\
    \            v = -v\n        }\n        for ; v > 0; v /= 10 {\n            s\
    \ += v % 10\n        }\n        if s > 0 {\n            n++\n        }\n    }\n\
    \    return n\n}\n", "    count := 0\n    for _, num := range arr {\n        if\
    \ sum_of_digits(num) > 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n", "    cnt := 0\n    for _, n := range arr {\n        sum := 0\n\
    \        if n < 0 {\n            sum -= n % 10\n            n = -n / 10\n    \
    \    }\n        for n > 0 {\n            sum += n % 10\n            n /= 10\n\
    \        }\n        if sum > 0 {\n            cnt++\n        }\n    }\n    return\
    \ cnt\n}\n", "    if len(arr) == 0 {\n        return 0\n    }\n    digits := 0\n\
    \    sum := 0\n    count := 0\n    for _, num := range arr {\n        digits =\
    \ 0\n        sum = 0\n        if num < 0 {\n            num = num * -1\n     \
    \   }\n        for num > 0 {\n            digits = num % 10\n            sum +=\
    \ digits\n            num = num / 10\n        }\n        if sum > 0 {\n      \
    \      count++\n        }\n    }\n    return count\n}\n", "    // TODO: implement\n\
    \    return 0\n}\n", "    if len(arr) == 0 {\n        return 0\n    }\n    count\
    \ := 0\n    for _, v := range arr {\n        if sumDigits(v) > 0 {\n         \
    \   count++\n        }\n    }\n    return count\n}\n", "    counter := 0\n   \
    \ for _,v := range arr {\n        if v < 0 {\n            v = -v\n        }\n\
    \        sum := 0\n        for v > 0 {\n            sum += v % 10\n          \
    \  v /= 10\n        }\n        if sum > 0 {\n            counter++\n        }\n\
    \    }\n    return counter\n}\n", "    count := 0\n    for _, v := range arr {\n\
    \        sum := 0\n        for _, v1 := range fmt.Sprintf(\"%d\", v) {\n     \
    \       sum += int(v1) - 48\n        }\n        if sum > 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, n := range\
    \ arr {\n        if n < 0 {\n            n = -n\n        }\n        sum := 0\n\
    \        for n > 0 {\n            sum += n % 10\n            n /= 10\n       \
    \ }\n        if sum > 0 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    if len(arr) == 0 {\n        return 0\n    }\n    count := 0\n    for\
    \ _, i := range arr {\n        if len(fmt.Sprintf(\"%d\", i)) == 1 {\n       \
    \     count++\n        } else {\n            sum := 0\n            for _, j :=\
    \ range fmt.Sprintf(\"%d\", i) {\n                sum += int(j - '0')\n      \
    \      }\n            if sum > 0 {\n                count++\n            }\n \
    \       }\n    }\n    return count\n}\n", "    var count int\n    for _, x :=\
    \ range arr {\n        if x < 0 {\n            count += sum_digits(x*-1)\n   \
    \     } else {\n            count += sum_digits(x)\n        }\n    }\n    return\
    \ count\n}\n", "    if len(arr) == 0 {\n        return 0\n    }\n    count :=\
    \ 0\n    for _, val := range arr {\n        if sum_digits(val) > 0 {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    count := 0\n   \
    \ for _, el := range arr {\n        sum := 0\n        for el != 0 {\n        \
    \    sum += el % 10\n            el /= 10\n        }\n        if sum > 0 {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for _, n := range arr {\n        d := 0\n        if n < 0 {\n           \
    \ n = -n\n        }\n        for n > 0 {\n            d += n % 10\n          \
    \  n /= 10\n        }\n        if d > 0 {\n            count++\n        }\n  \
    \  }\n    return count\n}\n", "    cnt := 0\n    for _, v := range arr {\n   \
    \     if v < 0 {\n            v = -v\n        }\n        if v == 0 {\n       \
    \     cnt += 1\n            continue\n        }\n        sum := 0\n        for\
    \ v > 0 {\n            sum += v % 10\n            v /= 10\n        }\n       \
    \ if sum > 0 {\n            cnt += 1\n        }\n    }\n    return cnt\n}\n",
  "    cnt := 0\n    for _, v := range arr {\n        digits := get_digits(v)\n  \
    \      sum := sum_digits(digits)\n        if sum > 0 {\n            cnt++\n  \
    \      }\n    }\n    return cnt\n}\n", "    cnt := 0\n    for _, num := range\
    \ arr {\n        if num != 0 {\n            sum := 0\n            var n int\n\
    \            if num < 0 {\n                sum += -1\n                n = -num\n\
    \            } else {\n                n = num\n            }\n            for\
    \ n > 0 {\n                sum += n % 10\n                n /= 10\n          \
    \  }\n            if sum > 0 {\n                cnt++\n            }\n       \
    \ }\n    }\n    return cnt\n}\n", "    count := 0\n    for _, num := range arr\
    \ {\n        if num == 0 {\n            continue\n        }\n        if num <\
    \ 0 {\n            num = -num\n        }\n        sum := 0\n        for num >\
    \ 0 {\n            sum += num % 10\n            num /= 10\n        }\n       \
    \ if sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    r := 0\n    for _, i := range arr {\n        if sum_digits(i) > 0 {\n     \
    \       r++\n        }\n    }\n    return r\n}\n", "    // TODO add your code\
    \ here\n    return 0\n}\n", "    return 0\n}\n", "    count := 0\n    for _, num\
    \ := range arr {\n        if sumDigits(num) > 0 {\n            count += 1\n  \
    \      }\n    }\n    return count\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        if sum_digits(v) > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for _, n := range arr {\n      \
    \  sum := 0\n        if n < 0 {\n            n = -n\n        }\n        for n\
    \ > 0 {\n            sum += n % 10\n            n /= 10\n        }\n        if\
    \ sum > 0 {\n            count++\n        }\n    }\n    return count\n}\n", " \
    \   var count int = 0\n    for _, v := range arr {\n        if v < 0 {\n     \
    \       v = -v\n        }\n        if v < 10 {\n            count++\n        }\
    \ else {\n            for v > 0 {\n                count++\n                v\
    \ /= 10\n            }\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, x := range arr {\n        var sum int\n        if x < 0 {\n\
    \            sum = -x\n        } else {\n            sum = x\n        }\n    \
    \    for sum > 0 {\n            sum = sum / 10\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for _, num := range arr {\n\
    \        // fmt.Println(num)\n        if num < 0 {\n            num = num * -1\n\
    \        }\n        if (num / 10 + num % 10) > 0 {\n            count += 1\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, v := range\
    \ arr {\n        if sumDigits(v) > 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for _, n := range arr {\n      \
    \  sum := 0\n        for n != 0 {\n            d := n % 10\n            if d <\
    \ 0 {\n                d = -d\n            }\n            sum += d\n         \
    \   n /= 10\n        }\n        if sum > 0 {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for _, v := range arr {\n\
    \        if v < 0 {\n            v = -v\n        }\n        for v > 0 {\n    \
    \        count += v % 10\n            v /= 10\n        }\n    }\n    return count\n\
    }\n", "    sum := 0\n    for _, i := range arr {\n        if i < 0 {\n       \
    \     sum += abs(i%10) + abs(i/10)\n        } else {\n            sum += abs(i%10)\
    \ + abs(i/10)\n        }\n    }\n    return sum\n}\n", "    cnt := 0\n    for\
    \ _, n := range arr {\n        if sum_digits(n) > 0 {\n            cnt++\n   \
    \     }\n    }\n    return cnt\n}\n", "    count := 0\n    for _, num := range\
    \ arr {\n        if num < 0 {\n            num = -num\n        }\n        if num\
    \ / 10 == 0 {\n            if num > 0 {\n                count++\n           \
    \ }\n        } else {\n            sum := 0\n            for num / 10 != 0 {\n\
    \                sum += num % 10\n                num /= 10\n            }\n \
    \           sum += num\n            if sum > 0 {\n                count++\n  \
    \          }\n        }\n    }\n    return count\n}\n", "    var cnt int\n   \
    \ for _,v := range arr {\n        if get_digit_sum(v) > 0 {\n            cnt +=\
    \ 1\n        }\n    }\n    return cnt\n}\n", "    count := 0\n    for _, v :=\
    \ range arr {\n        if v > 0 {\n            if sum_digits(v) > 0 {\n      \
    \          count++\n            }\n        } else {\n            if sum_digits(v)\
    \ < 0 {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n", "    result := 0\n    for _, elem := range arr {\n        if elem\
    \ > 0 {\n            result += digit_sum(elem)\n        } else {\n           \
    \ result += digit_sum(elem * -1)\n        }\n    }\n    return result\n}\n", " \
    \   cnt := 0\n    for _, n := range arr {\n        m := n\n        if n < 0 {\n\
    \            m = -n\n        }\n        sum := 0\n        for m > 0 {\n      \
    \      sum += m % 10\n            m /= 10\n        }\n        if sum > 0 {\n \
    \           cnt++\n        }\n    }\n    return cnt\n}\n", "    cnt := 0\n   \
    \ for _, n := range arr {\n        if n < 0 {\n            n = -n\n        }\n\
    \        sd := 0\n        for ; n > 0; n /= 10 {\n            sd += n % 10\n \
    \       }\n        if sd > 0 {\n            cnt++\n        }\n    }\n    return\
    \ cnt\n}\n", "    var ret int\n    for _, num := range arr {\n        if num ==\
    \ 0 {\n            continue\n        }\n        var sum int\n        // Calculate\
    \ sum of signed digits\n        for num != 0 {\n            sum += num % 10\n\
    \            num /= 10\n        }\n        if sum > 0 {\n            ret++\n \
    \       }\n    }\n    return ret\n}\n", "    count := 0\n    for _, elm := range\
    \ arr {\n        if elm < 0 {\n            elm = -elm\n        }\n        for\
    \ elm > 0 {\n            count += elm % 10\n            elm /= 10\n        }\n\
    \    }\n    return count\n}\n", "    // return 0\n    var i, count int\n    for\
    \ i = 0; i < len(arr); i++ {\n        if arr[i] > 0 {\n            if sign_sum(arr[i])\
    \ > 0 {\n                count++\n            }\n        } else {\n          \
    \  if sign_sum(arr[i]) < 0 {\n                count++\n            }\n       \
    \ }\n    }\n    return count\n}\n", "    return 0\n}\n", "    sum := 0\n    for\
    \ _, v := range arr {\n        if v < 0 {\n            v = -v\n        }\n   \
    \     for v > 0 {\n            sum += v % 10\n            v /= 10\n        }\n\
    \    }\n    return sum\n}\n", "    count := 0\n    for _, num := range arr {\n\
    \        if num > 0 {\n            if num > 9 {\n                num = num % 10\n\
    \            }\n            count += num\n        } else {\n            num =\
    \ num * -1\n            if num > 9 {\n                num = num % 10\n       \
    \     }\n            count += num\n        }\n    }\n    return count\n}\n", " \
    \   count := 0\n    for _, e := range arr {\n        sum := 0\n        if e <\
    \ 0 {\n            e = e * -1\n        }\n        for e > 0 {\n            sum\
    \ += e % 10\n            e = e / 10\n        }\n        if sum > 0 {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    res := 0\n    for\
    \ _, v := range arr {\n        s := 0\n        if v < 0 {\n            v = -v\n\
    \        }\n        for v > 0 {\n            s += v % 10\n            v /= 10\n\
    \        }\n        if s > 0 {\n            res++\n        }\n    }\n    return\
    \ res\n}\n", "    count := 0\n    for _, v := range arr {\n        if sum_digits(v)\
    \ > 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    //\
    \ your code here\n    return 0\n}\n", "    total := 0\n    for _, num := range\
    \ arr {\n        sum := 0\n        if num < 0 {\n            num = -num\n    \
    \    }\n        for num > 0 {\n            sum += num % 10\n            num /=\
    \ 10\n        }\n        if sum > 0 {\n            total++\n        }\n    }\n\
    \    return total\n}\n", "    if arr == nil {\n        return 0\n    }\n    count\
    \ := 0\n    for _, a := range arr {\n        sum := 0\n        if a < 0 {\n  \
    \          a = -a\n        }\n        for a > 0 {\n            sum += a % 10\n\
    \            a /= 10\n        }\n        if sum > 0 {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    var count int\n    for _, a :=\
    \ range arr {\n        if sum_digits(a) > 0 {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    sum := 0\n    for _, value := range arr {\n\
    \        sum += value\n    }\n    return sum\n}\n", "    var total int\n    for\
    \ _, v := range arr {\n        var sum int\n        if v < 0 {\n            sum\
    \ = -(v % 10)\n            v = -(v / 10)\n        } else {\n            sum =\
    \ v % 10\n            v = v / 10\n        }\n        for v > 0 {\n           \
    \ sum += v % 10\n            v = v / 10\n        }\n        if sum > 0 {\n   \
    \         total++\n        }\n    }\n    return total\n}\n", "    count := 0\n\
    \    for _, num := range arr {\n        if (num < 0) {\n            num = num\
    \ * -1\n        }\n        for num > 0 {\n            count += num % 10\n    \
    \        num /= 10\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range arr {\n        sum := 0\n        for num != 0 {\n   \
    \         sum += num % 10\n            num /= 10\n        }\n        if sum >\
    \ 0 {\n            count++\n        }\n    }\n    return count\n}\n", "    cnt\
    \ := 0\n    for _, v := range arr {\n        if sum_signed_digits(v) > 0 {\n \
    \           cnt++\n        }\n    }\n    return cnt\n}\n", "    r := 0\n    for\
    \ _, i := range arr {\n        if i < 0 {\n            i = -i\n        }\n   \
    \     if i == 0 {\n            r++\n            continue\n        }\n        for\
    \ i > 0 {\n            r += i % 10\n            i /= 10\n        }\n    }\n  \
    \  return r\n}\n", "    count := 0\n    for _, val := range arr {\n        if\
    \ (val > 0 && val % 10 > 0) || (val < 0 && val % 10 < 0) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, i := range\
    \ arr {\n        s := fmt.Sprintf(\"%d\", i)\n        sign := \"\"\n        if\
    \ s[0] == '-' {\n            sign = \"-\"\n            s = s[1:]\n        }\n\
    \        sum := 0\n        for _, c := range s {\n            sum += int(c) -\
    \ int('0')\n        }\n        if sum > 0 {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for _, num := range arr {\n\
    \        if num < 0 {\n            num = -num\n        }\n        for num > 0\
    \ {\n            count += num % 10\n            num /= 10\n        }\n    }\n\
    \    return count\n}\n", "    cnt := 0\n    for _, i := range arr {\n        s\
    \ := 0\n        if i < 0 {\n            s += i * -1\n        } else {\n      \
    \      s += i\n        }\n        for s > 0 {\n            s -= s % 10\n     \
    \       s /= 10\n            cnt++\n        }\n    }\n    return cnt\n}\n", " \
    \   count := 0\n    for _, v := range arr {\n        num := 0\n        if v <\
    \ 0 {\n            num = v * -1\n        } else {\n            num = v\n     \
    \   }\n        for num > 0 {\n            count += num % 10\n            num /=\
    \ 10\n        }\n    }\n    return count\n}\n", "    r := 0\n    for _, a := range\
    \ arr {\n        if a == 0 {\n            continue\n        }\n        if a <\
    \ 0 {\n            a = -a\n        }\n        for a > 0 {\n            r += a\
    \ % 10\n            a /= 10\n        }\n    }\n    return r\n}\n", "    count\
    \ := 0\n    for _, n := range arr {\n        if sumDigits(n) > 0 {\n         \
    \   count++\n        }\n    }\n    return count\n}\n", "    counter := 0\n   \
    \ for _, value := range arr {\n        if value < 0 {\n            value = -value\n\
    \        }\n        if value%10 + value/10 > 0 {\n            counter++\n    \
    \    }\n    }\n    return counter\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

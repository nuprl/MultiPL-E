name: HumanEval_121_solution
language: go_test.go
prompt: "package solution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ Given a non-empty list of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n// Examples\n// >>> solution([]int{5, 8, 7, 1})\n\
  // 12\n// >>> solution([]int{3, 3, 3, 3, 3})\n// 9\n// >>> solution([]int{30, 13,\
  \ 24, 321})\n// 0\nfunc solution(lst []int) int {\n"
tests: "func TestSolution(t *testing.T) {\n  candidate := solution\n\ttype test struct\
  \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
  \     { actual: candidate([]int{5, 8, 7, 1}), expected: 12 },\n     { actual: candidate([]int{3,\
  \ 3, 3, 3, 3}), expected: 9 },\n     { actual: candidate([]int{30, 13, 24, 321}),\
  \ expected: 0 },\n     { actual: candidate([]int{5, 9}), expected: 5 },\n     {\
  \ actual: candidate([]int{2, 4, 8}), expected: 0 },\n     { actual: candidate([]int{30,\
  \ 13, 23, 32}), expected: 23 },\n     { actual: candidate([]int{3, 13, 2, 9}), expected:\
  \ 3 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
  \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    sum := 0\n    for i, val := range lst {\n        if i % 2 == 0\
    \ && val % 2 != 0 {\n            sum += val\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 0 && n %\
    \ 2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "  \
    \  // return a list of integers\n    var res int = 0\n    for i, num := range\
    \ lst {\n        if i % 2 == 0 && num % 2 != 0 {\n            res += num\n   \
    \     }\n    }\n    return res\n}\n", "    result := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            result += v\n    \
    \    }\n    }\n    return result\n}\n", "    sum := 0\n    for i, n := range lst\
    \ {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n        }\n\
    \    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n   \
    \     if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var ans int = 0\n    for i, v := range lst {\n   \
    \     if i%2 == 0 && v%2 != 0 {\n            ans += v\n        }\n    }\n    return\
    \ ans\n}\n", "    sum := 0\n    for i, e := range lst {\n        if i%2 == 0 &&\
    \ e%2 != 0 {\n            sum += e\n        }\n    }\n    return sum\n}\n", " \
    \   ans := 0\n    for i := 0; i < len(lst); i += 2 {\n        if lst[i] & 1 ==\
    \ 1 {\n            ans += lst[i]\n        }\n    }\n    return ans\n}\n", "  \
    \  var sum int\n    for i, val := range lst {\n        if i % 2 == 0 && val %\
    \ 2 != 0 {\n            sum += val\n        }\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for i, num := range lst {\n        if i % 2 == 0 && num % 2\
    \ != 0 {\n            sum += num\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int = 0\n    for i, v := range lst {\n        if i % 2 == 0 && v %\
    \ 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 !=\
    \ 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, e := range lst {\n        if (i + 1) % 2 == 0 && e % 2 != 0\
    \ {\n            sum += e\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for i, v := range lst {\n        if (i+1)%2 == 0 && v%2 != 0 {\n    \
    \        sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, val := range lst {\n        if i % 2 == 0 && val % 2 != 0 {\n    \
    \        sum += val\n        }\n    }\n    return sum\n}\n", "    sum := 0\n \
    \   for i, num := range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n     \
    \       sum += num\n        }\n    }\n    return sum\n}\n", "\tsum := 0\n\tfor\
    \ idx, num := range lst {\n\t\tif (idx + 1) % 2 == 0 && num % 2 != 0 {\n\t\t\t\
    sum += num\n\t\t}\n\t}\n\treturn sum\n}\n", "    // Your code here\n    l := len(lst)\n\
    \    i := 0\n    var result int\n    for i < l {\n        if i % 2 == 0 {\n  \
    \          if lst[i] % 2 != 0 {\n                result += lst[i]\n          \
    \  }\n        }\n        i += 1\n    }\n    return result\n}\n", "    sum := 0\n\
    \    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n        \
    \    sum += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, _ := range lst {\n        if i % 2 == 0 && lst[i] % 2 != 0 {\n          \
    \  sum += lst[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "    if len(lst) == 0 {\n    \
    \    return 0\n    }\n    var sum int\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int\n    for i, v := range lst {\n        if i % 2 ==\
    \ 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, num := range lst {\n        if i % 2 == 0 && num\
    \ % 2 != 0 {\n            sum += num\n        }\n    }\n    return sum\n}\n",
  "    var total int\n    for i, num := range lst {\n        if i % 2 == 0 && num\
    \ % 2 != 0 {\n            total += num\n        }\n    }\n    return total\n}\n",
  "    var sum int = 0\n    for i := 0; i < len(lst); i++ {\n        if i % 2 == 0\
    \ && lst[i] % 2 != 0 {\n            sum += lst[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int = 0\n    for i := 1; i < len(lst); i += 2 {\n  \
    \      if i % 2 == 0 {\n            sum += lst[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int = 0\n    for i := 1; i < len(lst); i+=2 {\n    \
    \    if lst[i] % 2 == 1 {\n            sum += lst[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 0\
    \ && n % 2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, val := range lst {\n        if (i + 1) % 2 == 0 && val\
    \ % 2 != 0 {\n            sum += val\n        }\n    }\n    return sum\n}\n",
  "    evens := make([]int, 0)\n    odds := make([]int, 0)\n    for _, i := range\
    \ lst {\n        if i % 2 == 0 {\n            evens = append(evens, i)\n     \
    \   } else {\n            odds = append(odds, i)\n        }\n    }\n    for i,\
    \ v := range evens {\n        odds[i] += v\n    }\n    sum := 0\n    for _, i\
    \ := range odds {\n        sum += i\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for i, num := range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n\
    \            sum += num\n        }\n    }\n    return sum\n}\n", "\tvar result\
    \ int\n\tfor i, v := range lst {\n\t\tif i % 2 == 0 && v % 2 != 0 {\n\t\t\tresult\
    \ += v\n\t\t}\n\t}\n\treturn result\n}\n", "    var res int\n    for i, v := range\
    \ lst {\n        if (i+1)%2 == 0 && v%2 != 0 {\n            res += v\n       \
    \ }\n    }\n    return res\n}\n", "    sum := 0\n    for i, x := range lst {\n\
    \        if i%2 == 0 && x%2 != 0 {\n            sum += x\n        }\n    }\n \
    \   return sum\n}\n", "    var oddSum int\n    for i, v := range lst {\n     \
    \   if i % 2 == 0 && v % 2 != 0 {\n            oddSum += v\n        }\n    }\n\
    \    return oddSum\n}\n", "    var sum int\n    for i, el := range lst {\n   \
    \     if i % 2 == 0 && el % 2 != 0 {\n            sum += el\n        }\n    }\n\
    \    return sum\n}\n", "    var result int\n    for i, j := range lst {\n    \
    \    if i % 2 == 0 && j % 2 != 0 {\n            result += j\n        }\n    }\n\
    \    return result\n}\n", "    var ret int\n    for i, val := range lst {\n  \
    \      if i % 2 == 0 && val % 2 != 0 {\n            ret += val\n        }\n  \
    \  }\n    return ret\n}\n", "    // Write your code here\n    // return -1\n \
    \   res := 0\n    for k, v := range lst {\n        if k % 2 == 0 && v % 2 != 0\
    \ {\n            res += v\n        }\n    }\n    return res\n}\n", "\tvar sum\
    \ int\n\tfor index, value := range lst {\n\t\tif index % 2 == 0 && value % 2 !=\
    \ 0 {\n\t\t\tsum += value\n\t\t}\n\t}\n\treturn sum\n}\n", "    var sum int =\
    \ 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n    \
    \        sum += v\n        }\n    }\n    return sum\n}\n", "    var result int\n\
    \    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n        \
    \    result += v\n        }\n    }\n    return result\n}\n", "    var sum int\n\
    \    // iterate over the list\n    for i, val := range lst {\n        // if the\
    \ current value is an odd number and it's in an even position\n        if val\
    \ % 2 != 0 && i % 2 == 0 {\n            // add it to our sum\n            sum\
    \ += val\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, n\
    \ := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    oddSum := 0\n    for i, v := range lst\
    \ {\n        if i % 2 == 0 && v % 2 != 0 {\n            oddSum += v\n        }\n\
    \    }\n    return oddSum\n}\n", "    odd := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 0 && v % 2 != 0 {\n            odd += v\n        }\n    }\n\
    \    return odd\n}\n", "    sum := 0\n    for i, x := range lst {\n        if\
    \ i % 2 == 0 && x % 2 != 0 {\n            sum += x\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 0\
    \ && n % 2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for index, value := range lst {\n        if index % 2 == 0 &&\
    \ value % 2 != 0 {\n            sum += value\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, v := range lst {\n        if (i % 2 == 0) && (v\
    \ % 2 != 0) {\n            sum += v\n        }\n    }\n    return sum\n}\n", " \
    \   evenPosSum := 0\n    for i, value := range lst {\n        if i % 2 == 0 &&\
    \ value % 2 != 0 {\n            evenPosSum += value\n        }\n    }\n    return\
    \ evenPosSum\n}\n", "    var count = 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            count += v\n        }\n    }\n    return\
    \ count\n}\n", "    sum := 0\n    for i, v := range lst {\n        if i % 2 ==\
    \ 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v %\
    \ 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "  \
    \  //Write your code here\n    sum := 0\n    if len(lst) == 0 {\n        return\
    \ sum\n    }\n    for i := 0; i < len(lst); i++ {\n        if i % 2 == 0 && lst[i]\
    \ % 2 != 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0\
    \ {\n            sum += n\n        }\n    }\n    return sum\n}\n", "    total\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n \
    \           total += v\n        }\n    }\n    return total\n}\n", "    sum :=\
    \ 0\n    for i, val := range lst {\n        if (i + 1) % 2 == 0 && val % 2 !=\
    \ 0 {\n            sum += val\n        }\n    }\n    return sum\n}\n", "    if\
    \ len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for i, val := range\
    \ lst {\n        if i % 2 == 0 && val % 2 != 0 {\n            sum += val\n   \
    \     }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, n := range lst\
    \ {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n        }\n\
    \    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n   \
    \     if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "\tsum := 0\n\tfor i, x := range lst {\n\t\tif i % 2 == 0 && x %\
    \ 2 != 0 {\n\t\t\tsum += x\n\t\t}\n\t}\n\treturn sum\n}\n", "    var result int\
    \ = 0\n    for i,v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n   \
    \         result += v\n        }\n    }\n    return result\n}\n", "\tif len(lst)\
    \ == 0 {\n\t\treturn 0\n\t}\n\treturn lst[1] + solution(lst[2:])\n}\n", "    var\
    \ sum int\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, v := range lst {\n        if (i + 1) % 2 == 0 && v % 2 != 0 {\n         \
    \   sum += v\n        }\n    }\n    return sum\n}\n", "    return 0\n}\n", " \
    \   sum := 0\n    for i,v := range lst {\n        if i % 2 == 0 && v % 2 != 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for i, j := 0, 1; i < len(lst); i, j = i+2, j+2 {\n        if j%2 ==\
    \ 0 {\n            sum += lst[i]\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 !=\
    \ 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    result := 0\n\
    \    for i, e := range lst {\n        if i % 2 == 0 && e % 2 != 0 {\n        \
    \    result += e\n        }\n    }\n    return result\n}\n", "    sum := 0\n \
    \   for i, el := range lst {\n        if i % 2 == 0 && el % 2 != 0 {\n       \
    \     sum += el\n        }\n    }\n    return sum\n}\n", "    var sum int\n  \
    \  for i, el := range lst {\n        if i % 2 == 0 && el % 2 != 0 {\n        \
    \    sum += el\n        }\n    }\n    return sum\n}\n", "    var sum int\n   \
    \ for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n           \
    \ sum += n\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for\
    \ i, el := range lst {\n        if i % 2 == 0 && el % 2 != 0 {\n            sum\
    \ += el\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, elem\
    \ := range lst {\n        if i % 2 == 0 && elem % 2 != 0 {\n            sum +=\
    \ elem\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, v\
    \ := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n\
    \        }\n    }\n    return sum\n}\n", "    // Your code here\n    var answer\
    \ int\n    for i := 0; i < len(lst); i++ {\n        if i % 2 == 0 && lst[i] %\
    \ 2 != 0 {\n            answer += lst[i]\n        }\n    }\n    return answer\n\
    }\n", "\tvar s int\n\tfor i := 0; i < len(lst); i += 2 {\n\t\tif lst[i] % 2 !=\
    \ 0 {\n\t\t\ts += lst[i]\n\t\t}\n\t}\n\treturn s\n}\n", "    var result int\n\
    \    for i, item := range lst {\n        if i % 2 == 0 && item % 2 != 0 {\n  \
    \          result += item\n        }\n    }\n    return result\n}\n", "    var\
    \ sum int\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, x := range lst {\n        if (i % 2 == 0) && (x % 2 != 0) {\n    \
    \        sum += x\n        }\n    }\n    return sum\n}\n", "    sum := 0\n   \
    \ for i, elem := range lst {\n        if (i+1) % 2 == 0 && elem % 2 != 0 {\n \
    \           sum += elem\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i, val := range lst {\n        if i % 2 == 0 && val % 2 != 0 {\n    \
    \        sum += val\n        }\n    }\n    return sum\n}\n", "\tvar sum = 0\n\t\
    for i, n := range lst {\n\t\tif (i % 2 == 0) && (n % 2 != 0) {\n\t\t\tsum += n\n\
    \t\t}\n\t}\n\treturn sum\n}\n", "    // TODO implement me\n    return 0\n}\n",
  "    res := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0\
    \ {\n            res += v\n        }\n    }\n    return res\n}\n", "\tsum := 0\n\
    \tfor i, x := range lst {\n\t\tif i % 2 == 0 && x % 2 != 0 {\n\t\t\tsum += x\n\
    \t\t}\n\t}\n\treturn sum\n}\n", "    sum := 0\n    for i, num := range lst {\n\
    \        if i % 2 == 0 && num % 2 != 0 {\n            sum += num\n        }\n\
    \    }\n    return sum\n}\n", "    // write your code in Go 1.4\n    var res int\n\
    \    for i := 0; i < len(lst); i+=2 {\n        if lst[i] % 2 != 0 {\n        \
    \    res += lst[i]\n        }\n    }\n    return res\n}\n", "    sum := 0\n  \
    \  for i, x := range lst {\n        if i % 2 == 0 && x % 2 != 0 {\n          \
    \  sum += x\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i,\
    \ elm := range lst {\n        if i % 2 == 0 && elm % 2 != 0 {\n            sum\
    \ += elm\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i,\
    \ v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    total := 0\n    for i, num := range lst\
    \ {\n        if (i+1) % 2 == 0 && num % 2 == 1 {\n            total += num\n \
    \       }\n    }\n    return total\n}\n", "    var sum int\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    var sum int\n    for i, n := range lst\
    \ {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n        }\n\
    \    }\n    return sum\n}\n", "    var oddsInEvenPositionsSum int\n    for i,\
    \ v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            oddsInEvenPositionsSum\
    \ += v\n        }\n    }\n    return oddsInEvenPositionsSum\n}\n", "    sum :=\
    \ 0\n    for i, num := range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n\
    \            sum += num\n        }\n    }\n    return sum\n}\n", "    odd := 0\n\
    \    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n        \
    \    odd += n\n        }\n    }\n    return odd\n}\n", "    result := 0\n    for\
    \ i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            result\
    \ += v\n        }\n    }\n    return result\n}\n", "    var sum int\n    for index,\
    \ value := range lst {\n        if index % 2 == 0 && value % 2 != 0 {\n      \
    \      sum += value\n        }\n    }\n    return sum\n}\n", "    sum := 0\n \
    \   for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n         \
    \   sum += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for idx,\
    \ item := range lst {\n        if (idx % 2 == 0) && (item % 2 != 0) {\n      \
    \      sum += item\n        }\n    }\n    return sum\n}\n", "    sum := 0\n  \
    \  for i, v := range lst {\n        if (i+1)%2 == 0 && v%2 != 0 {\n          \
    \  sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i,\
    \ n := range lst {\n        if i%2 == 0 && n%2 != 0 {\n            sum += n\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, val := range\
    \ lst {\n        if i % 2 == 0 && val % 2 != 0 {\n            sum += val\n   \
    \     }\n    }\n    return sum\n}\n", "    var sum int\n    for i, val := range\
    \ lst {\n        if (i % 2 == 0) && (val % 2 != 0) {\n            sum += val\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, _ := range\
    \ lst {\n        if i % 2 == 0 && lst[i] % 2 != 0 {\n            sum += lst[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, val := range\
    \ lst {\n        if i % 2 == 0 && val % 2 != 0 {\n            sum += val\n   \
    \     }\n    }\n    return sum\n}\n", "    result := 0\n    for i, n := range\
    \ lst {\n        if (i % 2 == 0) && (n % 2 != 0) {\n            result += n\n\
    \        }\n    }\n    return result\n}\n", "    if len(lst) == 0 {\n        return\
    \ 0\n    }\n    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 &&\
    \ v % 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    // Enter code here\n    odds := 0\n    for i, v := range lst {\n        if\
    \ (i % 2 == 0) && (v % 2 != 0) {\n            odds += v\n        }\n    }\n  \
    \  return odds\n}\n", "    var sum int\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int\n    for i, n := range lst {\n        if i % 2 ==\
    \ 0 && n % 2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v %\
    \ 2 != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 !=\
    \ 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "    var\
    \ sum int\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n\
    \            sum += n\n        }\n    }\n    return sum\n}\n", "    total := 0\n\
    \    for i, x := range lst {\n        if i % 2 == 0 && x % 2 != 0 {\n        \
    \    total += x\n        }\n    }\n    return total\n}\n", "    sum := 0\n   \
    \ for i, value := range lst {\n        if value % 2 == 1 && i % 2 == 0 {\n   \
    \         sum += value\n        }\n    }\n    return sum\n}\n", "    if len(lst)\
    \ == 0 {\n        return 0\n    }\n    sum := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    return 0\n}\n", "    sum := 0\n    for i, n := range\
    \ lst {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n       \
    \ }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var sum int\n    for i, v := range lst {\n       \
    \ if (i % 2 == 0) && (v % 2 != 0) {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, value := range lst {\n      \
    \  if i % 2 == 0 && value % 2 != 0 {\n            sum += value\n        }\n  \
    \  }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n     \
    \   if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n  \
    \  return sum\n}\n", "\todd := 0\n\tfor i, v := range lst {\n\t\tif i % 2 == 0\
    \ && v % 2 != 0 {\n\t\t\todd += v\n\t\t}\n\t}\n\treturn odd\n}\n", "    evenSum\
    \ := 0\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n \
    \           evenSum += n\n        }\n    }\n    return evenSum\n}\n", "    sum\
    \ := 0\n    for i,v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ idx, val := range lst {\n        if (idx % 2 == 0) && (val % 2 != 0) {\n   \
    \         sum += val\n        }\n    }\n    return sum\n}\n", "    var oddSum\
    \ int\n    if len(lst) == 0 {\n        return oddSum\n    }\n    for i, num :=\
    \ range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n            oddSum +=\
    \ num\n        }\n    }\n    return oddSum\n}\n", "    var total int\n    for\
    \ i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            total\
    \ += v\n        }\n    }\n    return total\n}\n", "    if len(lst) == 0 {\n  \
    \      return 0\n    }\n    oddEvenSum := 0\n    for i, num := range lst {\n \
    \       if (i + 1) % 2 == 0 && num % 2 != 0 {\n            oddEvenSum += num\n\
    \        }\n    }\n    return oddEvenSum\n}\n", "    var sum int\n    for i, v\
    \ := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, n := range\
    \ lst {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n       \
    \ }\n    }\n    return sum\n}\n", "    var sum int\n    for i, n := range lst\
    \ {\n        if i % 2 == 0 && n % 2 != 0 {\n            sum += n\n        }\n\
    \    }\n    return sum\n}\n", "    var sum int\n    for i, x := range lst {\n\
    \        if i % 2 == 0 && x % 2 != 0 {\n            sum += x\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 0\
    \ && n % 2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for idx, item := range lst {\n        if idx % 2 == 0 && item\
    \ % 2 != 0 {\n            sum += item\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var sum\
    \ int = 0\n    for i, elem := range lst {\n        if i % 2 == 0 && elem % 2 !=\
    \ 0 {\n            sum += elem\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, val := range lst {\n        if i % 2 == 0 && val % 2 != 0 {\n\
    \            sum += val\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i, e := range lst {\n        if i % 2 == 0 && e % 2 != 0 {\n        \
    \    sum += e\n        }\n    }\n    return sum\n}\n", "    var result int = 0\n\
    \    if len(lst) == 0 {\n        return result\n    }\n    for i, v := range lst\
    \ {\n        if i % 2 == 0 && v % 2 != 0 {\n            result += v\n        }\n\
    \    }\n    return result\n}\n", "    s := 0\n    for i, v := range lst {\n  \
    \      if i % 2 == 0 && v % 2 != 0 {\n            s += v\n        }\n    }\n \
    \   return s\n}\n", "    if len(lst) == 0 {\n        return 0\n    }\n    count\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n \
    \           count += v\n        }\n    }\n    return count\n}\n", "    odd :=\
    \ 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n    \
    \        odd += v\n        }\n    }\n    return odd\n}\n", "    sum := 0\n   \
    \ for i, val := range lst {\n        if i % 2 == 0 && val % 2 != 0 {\n       \
    \     sum += val\n        }\n    }\n    return sum\n}\n", "    // Write your code\
    \ here\n    sum := 0\n    for i, n := range lst {\n        if (i+1)%2 == 0 &&\
    \ n%2 != 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for i, x := range lst {\n        if (i + 1) % 2 == 0 && x %\
    \ 2 == 1 {\n            sum += x\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for i, val := range lst {\n        if i % 2 == 0 && val %\
    \ 2 != 0 {\n            sum += val\n        }\n    }\n    return sum\n}\n", " \
    \   var sum int\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 !=\
    \ 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    total := 0\n\
    \    for i, v := range lst {\n        if (i % 2 == 0) && (v % 2 != 0) {\n    \
    \        total += v\n        }\n    }\n    return total\n}\n", "    sum := 0\n\
    \    for i, n := range lst {\n        if (i+1)%2 == 0 && n%2 == 1 {\n        \
    \    sum += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, num\
    \ := range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n            sum +=\
    \ num\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v :=\
    \ range lst {\n        if (i+1)%2 == 0 && v%2 != 0 {\n            sum += v\n \
    \       }\n    }\n    return sum\n}\n", "    var result int\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            result += v\n    \
    \    }\n    }\n    return result\n}\n", "    sum := 0\n    for i, v := range lst\
    \ {\n        if (i % 2 == 0) && (v % 2 != 0) {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for idx, num := range lst {\n      \
    \  if idx % 2 == 0 && num % 2 != 0 {\n            sum += num\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int = 0\n    for index, elem := range lst {\n      \
    \  if index % 2 == 0 && elem % 2 != 0 {\n            sum += elem\n        }\n\
    \    }\n    return sum\n}\n", "    var sum int\n    for i, v := range lst {\n\
    \        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var sum int = 0\n    for i, v := range lst {\n   \
    \     if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var result int\n    for index, value := range lst\
    \ {\n        if index % 2 == 0 && value % 2 != 0 {\n            result += value\n\
    \        }\n    }\n    return result\n}\n", "    sum := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 0 && v % 2 != 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, n := range lst {\n\
    \        if i%2 == 0 && n%2 != 0 {\n            sum += n\n        }\n    }\n \
    \   return sum\n}\n", "    // Code here...\n    return 0\n}\n", "    s := 0\n\
    \    for i, v := range lst {\n        if i%2 == 0 && v%2 != 0 {\n            s\
    \ += v\n        }\n    }\n    return s\n}\n", "    // Your code here\n    sum\
    \ := 0\n    for i, element := range lst {\n        if element % 2 != 0 && i %\
    \ 2 == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    oddSum\
    \ := 0\n    for i, el := range lst {\n        if i % 2 == 0 && el % 2 != 0 {\n\
    \            oddSum += el\n        }\n    }\n    return oddSum\n}\n", "    res\
    \ := 0\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n \
    \           res += n\n        }\n    }\n    return res\n}\n", "    sum := 0\n\
    \    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, num := range lst {\n        if i % 2 == 0 && num % 2 != 0 {\n           \
    \ sum += num\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i,\
    \ val := range lst {\n        if (i+1) % 2 == 0 && val % 2 != 0 {\n          \
    \  sum += val\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, num := range lst {\n        if (i + 1) % 2 == 0 && num % 2 != 0 {\n     \
    \       sum += num\n        }\n    }\n    return sum\n}\n", "    sum := 0\n  \
    \  for i, e := range lst {\n        if i % 2 == 0 && e % 2 != 0 {\n          \
    \  sum += e\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i,\
    \ v := range lst {\n        if (i+1)%2 == 0 && v%2 != 0 {\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n", "    // Write your code here\n  \
    \  ans := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 == 1\
    \ {\n            ans += v\n        }\n    }\n    return ans\n}\n", "    var result\
    \ int\n    for i, val := range lst {\n        if i % 2 == 0 && val % 2 != 0 {\n\
    \            result += val\n        }\n    }\n    return result\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 != 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    fmt.Println(lst)\n\
    \    return 0\n}\n", "    var sum int\n    for index, val := range lst {\n   \
    \     if index % 2 == 0 && val % 2 != 0 {\n            sum += val\n        }\n\
    \    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n   \
    \     if (i % 2) == 0 && (v % 2) != 0 {\n            sum += v\n        }\n   \
    \ }\n    return sum\n}\n", "    if len(lst) == 0 {\n        return 0\n    }\n\
    \    sum := 0\n    for i, v := range lst {\n        if i % 2 == 0 && v % 2 !=\
    \ 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, n := range lst {\n        if i % 2 == 0 && n % 2 != 0 {\n \
    \           sum += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i, x := range lst {\n        if i % 2 == 0 && x % 2 != 0 {\n        \
    \    sum += x\n        }\n    }\n    return sum\n}\n", "    total := 0\n    for\
    \ i, num := range lst {\n        if (i+1) % 2 == 0 && num % 2 == 1 {\n       \
    \     total += num\n        }\n    }\n    return total\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

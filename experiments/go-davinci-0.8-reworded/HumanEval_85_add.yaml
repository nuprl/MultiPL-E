name: HumanEval_85_add
language: go_test.go
prompt: "package add_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Given\
  \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
  // Examples:\n// >>> add([]int{4, 2, 6, 7})\n// 2\nfunc add(lst []int) int {\n"
tests: "func TestAdd(t *testing.T) {\n  candidate := add\n\ttype test struct {\n\t\
  \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
  \  { actual: candidate([]int{4, 88}), expected: 88 },\n     { actual: candidate([]int{4,\
  \ 5, 6, 7, 2, 122}), expected: 122 },\n     { actual: candidate([]int{4, 0, 6, 7}),\
  \ expected: 0 },\n     { actual: candidate([]int{4, 4, 6, 8}), expected: 12 },\n\
  \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var total int\n    for i, n := range lst {\n        if i % 2 ==\
    \ 1 && n % 2 == 0 {\n            total += n\n        }\n    }\n    return total\n\
    }\n", "    var sum int\n    for i, v := range lst {\n        if i % 2 == 1 &&\
    \ v % 2 == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for index, value := range lst {\n        if index % 2 == 1 &&\
    \ value % 2 == 0 {\n            sum += value\n        }\n    }\n    return sum\n\
    }\n", "    if len(lst) < 2 {\n        return 0\n    }\n    return lst[1] + add(lst[2:])\n\
    }\n", "    var result int\n    for i, el := range lst {\n        if i % 2 == 1\
    \ && el % 2 == 0 {\n            result += el\n        }\n    }\n    return result\n\
    }\n", "    sum := 0\n    for i, x := range lst {\n        if i % 2 == 1 && x %\
    \ 2 == 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for idx, num := range lst {\n        if idx % 2 == 1 && num\
    \ % 2 == 0 {\n            sum += num\n        }\n    }\n    return sum\n}\n",
  "    var result int\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2\
    \ == 0 {\n            result += v\n        }\n    }\n    return result\n}\n",
  "    var added int\n    for i, elm := range lst {\n        if i % 2 == 1 && elm\
    \ % 2 == 0 {\n            added += elm\n        }\n    }\n    return added\n}\n",
  "    sum := 0\n    for i, num := range lst {\n        if i % 2 == 1 && num % 2 ==\
    \ 0 {\n            sum += num\n        }\n    }\n    return sum\n}\n", "    l\
    \ := len(lst)\n    if l == 0 {\n        return 0\n    }\n    total := 0\n    for\
    \ i, v := range lst {\n        if i%2 == 1 && v%2 == 0 {\n            total +=\
    \ v\n        }\n    }\n    return total\n}\n", "    var total int\n    for i,\
    \ v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            total +=\
    \ v\n        }\n    }\n    return total\n}\n", "    sum := 0\n    for i, e :=\
    \ range lst {\n        if i % 2 == 1 && e % 2 == 0 {\n            sum += e\n \
    \       }\n    }\n    return sum\n}\n", "    total := 0\n    for i, x := range\
    \ lst {\n        if i % 2 == 1 && x % 2 == 0 {\n            total += x\n     \
    \   }\n    }\n    return total\n}\n", "    sum := 0\n    for i, v := range lst\
    \ {\n        if i%2 != 0 && v%2 == 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var sum int = 0\n    for i, v := range lst {\n   \
    \     if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var evens int\n    for i, x := range lst {\n     \
    \   if i%2 != 0 && x%2 == 0 {\n            evens += x\n        }\n    }\n    return\
    \ evens\n}\n", "    var total int\n    for i, elem := range lst {\n        if\
    \ i%2 == 1 && elem%2 == 0 {\n            total += elem\n        }\n    }\n   \
    \ return total\n}\n", "    sum := 0\n    for i, e := range lst {\n        if i\
    \ % 2 == 1 && e % 2 == 0 {\n            sum += e\n        }\n    }\n    return\
    \ sum\n}\n", "    var result int\n    for i, val := range lst {\n        if i\
    \ % 2 == 1 && val % 2 == 0 {\n            result += val\n        }\n    }\n  \
    \  return result\n}\n", "    res := 0\n    // add even elements at odd indices\n\
    \    for i := 0; i < len(lst); i += 2 {\n        res += lst[i]\n    }\n    return\
    \ res\n}\n", "    total := 0\n    for i, v := range lst {\n        if i % 2 ==\
    \ 1 && v % 2 == 0 {\n            total += v\n        }\n    }\n    return total\n\
    }\n", "    result := 0\n    for i, e := range lst {\n        if i % 2 == 1 &&\
    \ e % 2 == 0 {\n            result += e\n        }\n    }\n    return result\n\
    }\n", "    sum := 0\n    for i, val := range lst {\n        if i % 2 == 1 && val\
    \ % 2 == 0 {\n            sum += val\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var sum\
    \ int = 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "    var s int\n    var p bool\n\
    \    for _, v := range lst {\n        if v%2 == 0 {\n            if p {\n    \
    \            s += v\n            }\n        }\n        p = !p\n    }\n    return\
    \ s\n}\n", "    return -1\n}\n", "    n := 0\n    for i, v := range lst {\n  \
    \      if i % 2 == 1 && v % 2 == 0 {\n            n += v\n        }\n    }\n \
    \   return n\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i%2\
    \ == 1 && n%2 == 0 {\n            sum += n\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 1 && n %\
    \ 2 == 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "  \
    \  acc := 0\n    for i, x := range lst {\n        if i%2 == 1 && x%2 == 0 {\n\
    \            acc += x\n        }\n    }\n    return acc\n}\n", "    sum := 0\n\
    \    for i, v := range lst {\n        if i%2 == 1 && v%2 == 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, v\
    \ := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n\
    \        }\n    }\n    return sum\n}\n", "    res := 0\n    for i, val := range\
    \ lst {\n        if i % 2 == 1 && val % 2 == 0 {\n            res += val\n   \
    \     }\n    }\n    return res\n}\n", "\tsum := 0\n\tfor i, n := range lst {\n\
    \t\tif i%2 != 0 && n%2 == 0 {\n\t\t\tsum += n\n\t\t}\n\t}\n\treturn sum\n}\n",
  "    ret := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            ret += v\n        }\n    }\n    return ret\n}\n", "    sum :=\
    \ 0\n    for i, val := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n\
    \            sum += val\n        }\n    }\n    return sum\n}\n", "    var (\n\
    \        sum int\n        idx int\n    )\n    for _, v := range lst {\n      \
    \  if v % 2 == 0 && idx % 2 != 0 {\n            sum += v\n        }\n        idx++\n\
    \    }\n    return sum\n}\n", "    if len(lst) == 0 {\n        return 0\n    }\n\
    \    var sum int\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2\
    \ == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    res\
    \ := 0\n    for i, e := range lst {\n        if i % 2 == 1 && e % 2 == 0 {\n \
    \           res += e\n        }\n    }\n    return res\n}\n", "    var sum int\n\
    \    for i, x := range lst {\n        if i%2 == 1 && x%2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n", "\tvar answer int\n\tfor i, v\
    \ := range lst {\n\t\tif i % 2 == 1 && v % 2 == 0 {\n\t\t\tanswer += v\n\t\t}\n\
    \t}\n\treturn answer\n}\n", "    sum := 0\n    for i, n := range lst {\n     \
    \   if i % 2 == 1 && n % 2 == 0 {\n            sum += n\n        }\n    }\n  \
    \  return sum\n}\n", "    var result int\n    for i, num := range lst {\n    \
    \    if i % 2 == 1 && num % 2 == 0 {\n            result += num\n        }\n \
    \   }\n    return result\n}\n", "\tvar res int\n\tfor i := 0; i < len(lst); i++\
    \ {\n\t\tif i%2 == 1 && lst[i]%2 == 0 {\n\t\t\tres += lst[i]\n\t\t}\n\t}\n\treturn\
    \ res\n}\n", "    return 0\n}\n", "    sum := 0\n    for i, val := range lst {\n\
    \        if i % 2 == 1 && val % 2 == 0 {\n            sum += val\n        }\n\
    \    }\n    return sum\n}\n", "    if len(lst) == 0 {\n        return 0\n    }\n\
    \n    var sum int\n    for i, v := range lst {\n        if v % 2 == 0 && i % 2\
    \ != 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    if\
    \ len(lst) == 0 {\n        return 0\n    }\n    var res int\n    for i, v := range\
    \ lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            res += v\n       \
    \ }\n    }\n    return res\n}\n", "\tsum := 0\n\tfor i := 1; i < len(lst); i +=\
    \ 2 {\n\t\tif lst[i] % 2 == 0 {\n\t\t\tsum += lst[i]\n\t\t}\n\t}\n\treturn sum\n\
    }\n", "\t// TODO add implementation\n\treturn 0\n}\n", "    sum := 0\n    for\
    \ i, x := range lst {\n        if i % 2 == 1 && x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n", "    return 0\n}\n", "    var\
    \ sum int\n    for i, num := range lst {\n        if i % 2 == 1 && num % 2 ==\
    \ 0 {\n            sum += num\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, val := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n\
    \            sum += val\n        }\n    }\n    return sum\n}\n", "\tsum := 0\n\
    \tfor i, n := range lst {\n\t\tif i % 2 == 1 && n % 2 == 0 {\n\t\t\tsum += n\n\
    \t\t}\n\t}\n\treturn sum\n}\n", "    var sum int\n    for idx, num := range lst\
    \ {\n        if idx % 2 == 1 && num % 2 == 0 {\n            sum += num\n     \
    \   }\n    }\n    return sum\n}\n", "    var sum int\n    for i, e := range lst\
    \ {\n        if i % 2 == 1 && e % 2 == 0 {\n            sum += e\n        }\n\
    \    }\n    return sum\n}\n", "    res := 0\n    for i, v := range lst {\n   \
    \     if i % 2 == 1 && v % 2 == 0 {\n            res += v\n        }\n    }\n\
    \    return res\n}\n", "    var s int\n    for i, n := range lst {\n        if\
    \ i%2 == 1 && n%2 == 0 {\n            s += n\n        }\n    }\n    return s\n\
    }\n", "    sum := 0\n    for i, e := range lst {\n        if i % 2 == 1 && e %\
    \ 2 == 0 {\n            sum += e\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for idx, value := range lst {\n        if idx % 2 == 1 &&\
    \ value % 2 == 0 {\n            sum += value\n        }\n    }\n    return sum\n\
    }\n", "    acc := 0\n    for i, val := range lst {\n        if i % 2 == 1 && val\
    \ % 2 == 0 {\n            acc += val\n        }\n    }\n    return acc\n}\n",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var total\
    \ int\n    for index, value := range lst {\n        if index % 2 == 1 && value\
    \ % 2 == 0 {\n            total += value\n        }\n    }\n    return total\n\
    }\n", "    if len(lst) == 0 {\n        return 0\n    }\n\n    // Take last element\n\
    \    last := lst[len(lst)-1]\n    return last + add(lst[:len(lst)-1])\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    sum := 0\n    for i, elem := range\
    \ lst {\n        if i % 2 == 1 && elem % 2 == 0 {\n            sum += elem\n \
    \       }\n    }\n    return sum\n}\n", "    var result int\n    for i, e := range\
    \ lst {\n        if i % 2 == 1 && e % 2 == 0 {\n            result += e\n    \
    \    }\n    }\n    return result\n}\n", "    var sum int = 0\n    if len(lst)\
    \ > 0 {\n        for i := 0; i < len(lst); i++ {\n            if i % 2 == 1 &&\
    \ lst[i] % 2 == 0 {\n                sum += lst[i]\n            }\n        }\n\
    \    }\n    return sum\n}\n", "\tresult := 0\n\tfor i, v := range lst {\n\t\t\
    if i % 2 == 1 && v % 2 == 0 {\n\t\t\tresult += v\n\t\t}\n\t}\n\treturn result\n\
    }\n", "    sum := 0\n    for idx, val := range lst {\n        if idx % 2 == 1\
    \ && val % 2 == 0 {\n            sum += val\n        }\n    }\n    return sum\n\
    }\n", "    var r int\n    for i, v := range lst {\n        if i % 2 == 1 && v\
    \ % 2 == 0 {\n            r += v\n        }\n    }\n    return r\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    var result\
    \ int\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n", "    var res\
    \ int\n    for index, value := range lst {\n        if index % 2 == 1 && value\
    \ % 2 == 0 {\n            res += value\n        }\n    }\n    return res\n}\n",
  "    for i := 1; i < len(lst); i += 2 {\n        lst[i] += lst[i-1]\n    }\n   \
    \ return lst[len(lst)-1]\n}\n", "    total := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 1 && v % 2 == 0 {\n            total += v\n        }\n  \
    \  }\n    return total\n}\n", "    res := 0\n    for i, e := range lst {\n   \
    \     if i % 2 == 1 && e % 2 == 0 {\n            res += e\n        }\n    }\n\
    \    return res\n}\n", "    if len(lst) % 2 == 0 {\n        return 0\n    }\n\
    \    return lst[len(lst) - 1]\n}\n", "    // YOUR CODE HERE\n    var ret int =\
    \ 0\n    for i, val := range lst {\n        if (i % 2 == 1) && (val % 2 == 0)\
    \ {\n            ret += val\n        }\n    }\n    return ret\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "\tvar total int\n\tfor\
    \ i, v := range lst {\n\t\tif i % 2 == 1 && v % 2 == 0 {\n\t\t\ttotal += v\n\t\
    \t}\n\t}\n\treturn total\n}\n", "    total := 0\n    for i, num := range lst {\n\
    \        if i % 2 == 1 && num % 2 == 0 {\n            total += num\n        }\n\
    \    }\n    return total\n}\n", "    sum := 0\n    for i, v := range lst {\n \
    \       if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    i := 0\n    var res int\n    for j, e := range lst\
    \ {\n        if j % 2 == 0 {\n            i += e\n        } else {\n         \
    \   res += e\n        }\n    }\n    if i % 2 == 0 {\n        return i + res\n\
    \    }\n    return res\n}\n", "    sum := 0\n    for i, elem := range lst {\n\
    \        if i % 2 == 1 && elem % 2 == 0 {\n            sum += elem\n        }\n\
    \    }\n    return sum\n}\n", "    var result int = 0\n    for i, v := range lst\
    \ {\n        if i%2 != 0 && v%2 == 0 {\n            result += v\n        }\n \
    \   }\n    return result\n}\n", "    sum := 0\n    for i, v := range lst {\n \
    \       if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    var res int\n    for i, n := range lst {\n       \
    \ if i % 2 == 1 && n % 2 == 0 {\n            res += n\n        }\n    }\n    return\
    \ res\n}\n", "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1\
    \ && v % 2 == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    var result int\n    for i, n := range lst {\n        if i % 2 == 1 && n % 2\
    \ == 0 {\n            result += n\n        }\n    }\n    return result\n}\n",
  "    var sum int\n    for i, n := range lst {\n        if i % 2 == 1 && n % 2 ==\
    \ 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, x := range lst {\n        if i % 2 == 1 && x % 2 == 0 {\n \
    \           sum += x\n        }\n    }\n    return sum\n}\n", "    if len(lst)\
    \ < 2 {\n        return 0\n    }\n    sum := 0\n    for i := 1; i < len(lst);\
    \ i += 2 {\n        if lst[i] % 2 == 0 {\n            sum += lst[i]\n        }\n\
    \    }\n    return sum\n}\n", "    // Code here\n    sum := 0\n    for i, v :=\
    \ range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n \
    \       }\n    }\n    return sum\n}\n", "    return 0\n}\n", "    sum := 0\n \
    \   for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n         \
    \   sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for\
    \ i, val := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n           \
    \ sum += val\n        }\n    }\n    return sum\n}\n", "    var result int\n  \
    \  for i, num := range lst {\n        if i % 2 == 1 && num % 2 == 0 {\n      \
    \      result += num\n        }\n    }\n    return result\n}\n", "    // Write\
    \ your code here\n    sum := 0\n    odd := true\n    for _, v := range lst {\n\
    \        if odd {\n            sum += v\n        }\n        odd = !odd\n    }\n\
    \    return sum\n}\n", "    a := 0\n    for k, v := range lst {\n        if v\
    \ % 2 == 0 && k % 2 != 0 {\n            a += v\n        }\n    }\n    return a\n\
    }\n", "    var sum int\n    for i, v := range lst {\n        if i % 2 == 1 &&\
    \ v % 2 == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, element := range lst {\n        if i % 2 == 1 && element\
    \ % 2 == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n",
  "    var output int\n    if len(lst) == 0 {\n        return output\n    }\n    for\
    \ i, x := range lst {\n        if i % 2 == 1 && x % 2 == 0 {\n            output\
    \ += x\n        }\n    }\n    return output\n}\n", "    sum := 0\n    for i, v\
    \ := range lst {\n        if (i % 2 != 0) && (v % 2 == 0) {\n            sum +=\
    \ v\n        }\n    }\n    return sum\n}\n", "    var total int\n    for i, val\
    \ := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n            total +=\
    \ val\n        }\n    }\n    return total\n}\n", "    var sum int\n    for i,\
    \ j := range lst {\n        if i % 2 == 1 && j % 2 == 0 {\n            sum +=\
    \ j\n        }\n    }\n    return sum\n}\n", "    var result int\n    for i, v\
    \ := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            result +=\
    \ v\n        }\n    }\n    return result\n}\n", "    sum := 0\n    for i, e :=\
    \ range lst {\n        if i % 2 == 1 && e % 2 == 0 {\n            sum += e\n \
    \       }\n    }\n    return sum\n}\n", "    // your code here\n}\n", "    result\
    \ := 0\n    for i, v := range lst {\n        if (i % 2 == 1) && (v % 2 == 0) {\n\
    \            result += v\n        }\n    }\n    return result\n}\n", "    var\
    \ sum int = 0\n    var flg bool = true\n    for _, v := range lst {\n        if\
    \ flg {\n            if v % 2 == 0 {\n                sum += v\n            }\n\
    \        }\n        flg = !flg\n    }\n    return sum\n}\n", "    sum := 0\n \
    \   if len(lst) > 0 {\n        for i, v := range lst {\n            if i % 2 ==\
    \ 1 && v % 2 == 0 {\n                sum += v\n            }\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, e := range lst {\n        if\
    \ i%2 == 1 && e%2 == 0 {\n            sum += e\n        }\n    }\n    return sum\n\
    }\n", "    var result int\n    for i, v := range lst {\n        if v % 2 == 0\
    \ && i % 2 != 0 {\n            result += v\n        }\n    }\n    return result\n\
    }\n", "\tvar sum int\n\tfor i, n := range lst {\n\t\tif n % 2 == 0 && i % 2 !=\
    \ 0 {\n\t\t\tsum += n\n\t\t}\n\t}\n\treturn sum\n}\n", "    sum := 0\n    for\
    \ i, n := range lst {\n        if i % 2 == 1 && n % 2 == 0 {\n            sum\
    \ += n\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, val\
    \ := range lst {\n        if i%2 == 1 && val%2 == 0 {\n            sum += val\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    res := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 1 && v % 2 == 0 {\n            res += v\n        }\n    }\n\
    \    return res\n}\n", "    var res int\n    for i, n := range lst {\n       \
    \ if n%2 == 0 && i%2 != 0 {\n            res += n\n        }\n    }\n    return\
    \ res\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 1\
    \ && n % 2 == 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n",
  "    return 0\n}\n", "    // TODO: Write your code here\n    return 0\n}\n", " \
    \   sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    res :=\
    \ 0\n    for i, item := range lst {\n        if i % 2 == 1 && item % 2 == 0 {\n\
    \            res += item\n        }\n    }\n    return res\n}\n\ntype testpair ",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var sum\
    \ int\n    for i, n := range lst {\n        if i % 2 == 1 && n % 2 == 0 {\n  \
    \          sum += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n \
    \   for i, n := range lst {\n        if i%2 != 0 && n%2 == 0 {\n            sum\
    \ += n\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, val\
    \ := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n            sum +=\
    \ val\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, v :=\
    \ range lst {\n        if i%2 == 1 && v%2 == 0 {\n            sum += v\n     \
    \   }\n    }\n    return sum\n}\n", "    var result int\n    for i, value := range\
    \ lst {\n        if i % 2 == 1 && value % 2 == 0 {\n            result += value\n\
    \        }\n    }\n    return result\n}\n", "    sum := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    var sum int = 0\n    for i, e := range\
    \ lst {\n        if i%2 == 1 && e%2 == 0 {\n            sum += e\n        }\n\
    \    }\n    return sum\n}\n", "    return 0\n}\n", "    var sum int\n    for index,\
    \ value := range lst {\n        if index % 2 == 1 && value % 2 == 0 {\n      \
    \      sum += value\n        }\n    }\n    return sum\n}\n", "    for _, v :=\
    \ range lst {\n        fmt.Println(v)\n    }\n    return 0\n}\n", "    var result\
    \ int\n    for i, v := range lst {\n        if v % 2 == 0 && i % 2 != 0 {\n  \
    \          result += v\n        }\n    }\n    return result\n}\n\ntype AddTestCase ",
  "    var sum int\n    for i, element := range lst {\n        if i % 2 == 1 && element\
    \ % 2 == 0 {\n            sum += element\n        }\n    }\n    return sum\n}\n",
  "    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n    for i, n :=\
    \ range lst {\n        if i%2 == 1 && n%2 == 0 {\n            sum += n\n     \
    \   }\n    }\n    return sum\n}\n", "    var result int\n    for i, val := range\
    \ lst {\n        if i % 2 == 1 && val % 2 == 0 {\n            result += val\n\
    \        }\n    }\n    return result\n}\n", "    // My answer\n    var sum int\n\
    \    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, val := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n           \
    \ sum += val\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for\
    \ i, elem := range lst {\n        if i % 2 == 1 && elem % 2 == 0 {\n         \
    \   sum += elem\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, value := range lst {\n        if i % 2 == 1 && value % 2 == 0 {\n       \
    \     sum += value\n        }\n    }\n    return sum\n}\n", "    var result int\n\
    \    for i, val := range lst {\n        if i % 2 == 1 && val % 2 == 0 {\n    \
    \        result += val\n        }\n    }\n    return result\n}\n", "    sum :=\
    \ 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n    \
    \        sum += v\n        }\n    }\n    return sum\n}\n", "    var acc = 0\n\
    \    for i, x := range lst {\n        if i % 2 == 1 && x % 2 == 0 {\n        \
    \    acc += x\n        }\n    }\n    return acc\n}\n", "    sum := 0\n    for\
    \ i, n := range lst {\n        if i % 2 == 1 && n % 2 == 0 {\n            sum\
    \ += n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i, num\
    \ := range lst {\n        if num % 2 == 0 && i % 2 != 0 {\n            sum +=\
    \ num\n        }\n    }\n    return sum\n}\n", "    var even = 0\n    for i, v\
    \ := range lst {\n        if v % 2 == 0 && i % 2 != 0 {\n            even += v\n\
    \        }\n    }\n    return even\n}\n", "\tvar sum int\n\tfor i, j := range\
    \ lst {\n\t\tif i%2 != 0 && j%2 == 0 {\n\t\t\tsum += j\n\t\t}\n\t}\n\treturn sum\n\
    }\n", "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v %\
    \ 2 == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "  \
    \  sum := 0\n    if lst == nil {\n        return sum\n    }\n    for i, v := range\
    \ lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "    total := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 1 && v % 2 == 0 {\n            total += v\n        }\n  \
    \  }\n    return total\n}\n", "    sum := 0\n    for i, num := range lst {\n \
    \       if i % 2 == 1 && num % 2 == 0 {\n            sum += num\n        }\n \
    \   }\n    return sum\n}\n", "    sum := 0\n    for i, x := range lst {\n    \
    \    if (i % 2 == 1) && (x % 2 == 0) {\n            sum += x\n        }\n    }\n\
    \    return sum\n}\n", "    sum := 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 1 && v % 2 == 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int\n    for i, num := range lst {\n        if i % 2\
    \ == 1 && num % 2 == 0 {\n            sum += num\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i, x := range lst {\n        if i % 2 == 1\
    \ && x % 2 == 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n",
  "    var sum int\n    for i, v := range lst {\n        if i%2 == 1 && v%2 == 0 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i, v := range lst {\n        if (i + 1) % 2 == 0 && v % 2 == 0 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n        \
    \    sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "\treturn 0\n}\n", "    s := 0\n\
    \    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n        \
    \    s += v\n        }\n    }\n    return s\n}\n", "    // Your code here\n  \
    \  var sum int\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 ==\
    \ 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i%2 != 0 && v%2 == 0 {\n     \
    \       sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n \
    \   for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n         \
    \   sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    if len(lst)\
    \ == 0 {\n        return sum\n    }\n    for i := 1; i < len(lst); i += 2 {\n\
    \        if lst[i] % 2 == 0 {\n            sum += lst[i]\n        }\n    }\n \
    \   return sum\n}\n", "    result := 0\n    for i, v := range lst {\n        if\
    \ i % 2 == 1 && v % 2 == 0 {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    var even int\n    for index, num := range lst {\n       \
    \ if index % 2 == 1 && num % 2 == 0 {\n            even += num\n        }\n  \
    \  }\n    return even\n}\n", "    var result int\n    for i, element := range\
    \ lst {\n        if i % 2 == 1 && element % 2 == 0 {\n            result += element\n\
    \        }\n    }\n    return result\n}\n", "    sum := 0\n    for i, v := range\
    \ lst {\n        if i % 2 == 1 && v % 2 == 0 {\n            sum += v\n       \
    \ }\n    }\n    return sum\n}\n", "\tvar i int\n\n\tfor idx, val := range lst\
    \ {\n\t\tif (idx % 2 != 0) && (val % 2 == 0) {\n\t\t\ti += val\n\t\t}\n\t}\n\n\
    \treturn i\n}\n", "    sum := 0\n    for i, element := range lst {\n        if\
    \ i % 2 == 1 && element % 2 == 0 {\n            sum += element\n        }\n  \
    \  }\n    return sum\n}\n", "\tres := 0\n\tif len(lst) > 1 {\n\t\tfor i := 1;\
    \ i < len(lst); i += 2 {\n\t\t\tif lst[i] % 2 == 0 {\n\t\t\t\tres += lst[i]\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn res\n}\n", "    s := 0\n    for i, v := range lst\
    \ {\n        if i % 2 == 1 && v % 2 == 0 {\n            s += v\n        }\n  \
    \  }\n    return s\n}\n", "    sum := 0\n    for i, e := range lst {\n       \
    \ if i % 2 == 1 && e % 2 == 0 {\n            sum += e\n        }\n    }\n    return\
    \ sum\n}\n", "    total := 0\n    for i, n := range lst {\n        if i % 2 ==\
    \ 1 && n % 2 == 0 {\n            total += n\n        }\n    }\n    return total\n\
    }\n", "    if len(lst) == 0 {\n        return 0\n    }\n\n    i := 1\n    sum\
    \ := 0\n    for i < len(lst) {\n        if lst[i] % 2 == 0 {\n            sum\
    \ += lst[i]\n        }\n        i += 2\n    }\n    return sum\n}\n", "    sum\
    \ := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i, v := range lst {\n        if i%2 == 1 && v%2 == 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "\tvar sum int\n\tfor i := 1;\
    \ i < len(lst); i += 2 {\n\t\tif lst[i] % 2 == 0 {\n\t\t\tsum += lst[i]\n\t\t\
    }\n\t}\n\treturn sum\n}\n", "    total := 0\n    for i, num := range lst {\n \
    \       if i % 2 == 1 && num % 2 == 0 {\n            total += num\n        }\n\
    \    }\n    return total\n}\n", "    total := 0\n    for i, v := range lst {\n\
    \        if i % 2 == 1 && v % 2 == 0 {\n            total += v\n        }\n  \
    \  }\n    return total\n}\n", "    var res int\n    for i, n := range lst {\n\
    \        if i%2 == 1 && n%2 == 0 {\n            res += n\n        }\n    }\n \
    \   return res\n}\n", "    var sum int\n    for i, v := range lst {\n        if\
    \ i % 2 == 1 && v % 2 == 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i, x := range lst {\n        if i % 2 == 1\
    \ && x % 2 == 0 {\n            sum += x\n        }\n    }\n    return sum\n}\n",
  "    ans := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            ans += v\n        }\n    }\n    return ans\n}\n", "    return\
    \ 0\n}\n", "    sum := 0\n    for i, n := range lst {\n        if i % 2 == 1 &&\
    \ n % 2 == 0 {\n            sum += n\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i, v := range lst {\n        if i % 2 == 1 && v % 2 == 0\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var res\
    \ int\n    for i, v := range lst {\n        if i%2 == 1 && v%2 == 0 {\n      \
    \      res += v\n        }\n    }\n    return res\n}\n", "    var ans int\n  \
    \  for i, _ := range lst {\n        if i % 2 == 1 && lst[i] % 2 == 0 {\n     \
    \       ans += lst[i]\n        }\n    }\n    return ans\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_122_add_elements
language: go_test.go
prompt: "package add_elements_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a non-empty list of integers arr and an integer k, return\n// the sum of\
  \ the elements with at most two digits from the first k elements of arr.\n// Example:\n\
  // >>> add_elements([]int{111, 21, 3, 4000, 5, 6, 7, 8, 9}, 4)\n// 24\n// Constraints:\n\
  // 1. 1 <= len(arr) <= 100\n// 2. 1 <= k <= len(arr)\nfunc add_elements(arr []int,\
  \ k int) int {\n"
tests: "func TestAdd_Elements(t *testing.T) {\n  candidate := add_elements\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate([]int{1, -2, -3, 41, 57, 76, 87, 88, 99},\
  \ 3), expected: -4 },\n     { actual: candidate([]int{111, 121, 3, 4000, 5, 6},\
  \ 2), expected: 0 },\n     { actual: candidate([]int{11, 21, 3, 90, 5, 6, 7, 8,\
  \ 9}, 4), expected: 125 },\n     { actual: candidate([]int{111, 21, 3, 4000, 5,\
  \ 6, 7, 8, 9}, 4), expected: 24 },\n     { actual: candidate([]int{1}, 1), expected:\
  \ 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
  \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    result := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >\
    \ 9 && arr[i] < 100 {\n            result += arr[i]\n        }\n    }\n    return\
    \ result\n}\n", "    result := 0\n    for _, n := range arr[:k] {\n        if\
    \ n > 99 {\n            continue\n        }\n        result += n\n    }\n    return\
    \ result\n}\n", "    // Your code goes here\n    sum := 0\n    c := 0\n    for\
    \ _, n := range arr {\n        if c == k {\n            break\n        }\n   \
    \     if n < 100 {\n            sum += n\n        }\n        c++\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    if k > len(arr) {\n        k = len(arr)\n    }\n\
    \    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        num := arr[i]\n        if num > 99 {\n            sum += 99\n\
    \        } else {\n            sum += num\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n\
    \            sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] > 99 {\n            sum += arr[i] % 100\n\
    \        } else {\n            sum += arr[i]\n        }\n    }\n    return sum\n\
    }\n", "    var sum int\n    for i := 0; i < k; i++ {\n        n := arr[i]\n  \
    \      if n > 99 {\n            sum += 99\n        } else {\n            sum +=\
    \ n\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i\
    \ < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n\
    \    }\n    return sum\n}\n", "    total := 0\n    for i := 0; i < k; i++ {\n\
    \        if arr[i] < 100 {\n            total += arr[i]\n        }\n    }\n  \
    \  return total\n}\n", "    result := 0\n    for i, v := range arr {\n       \
    \ if i == k {\n            break\n        }\n        if v > 9 && v < 100 {\n \
    \           result += v\n        }\n    }\n    return result\n}\n", "    var sum\
    \ int\n    for i := 0; i < k; i++ {\n        if arr[i] > 99 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] > 99 {\n            continue\n       \
    \ } else {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for _, v := range arr[:k] {\n        if v >= 100 {\n        \
    \    continue\n        }\n        sum += v\n    }\n    return sum\n}\n", "   \
    \ if len(arr) == 0 {\n        return 0\n    }\n    if k < 1 || k > len(arr) {\n\
    \        return 0\n    }\n    var sum int\n    for _, v := range arr[:k] {\n \
    \       if v > 99 {\n            continue\n        }\n        sum += v\n    }\n\
    \    return sum\n}\n", "    var result int\n    for i := 0; i < k; i++ {\n   \
    \     if arr[i] < 100 {\n            result += arr[i]\n        }\n    }\n    return\
    \ result\n}\n", "    sum := 0\n    for i, num := range arr {\n        if i ==\
    \ k {\n            break\n        }\n\n        if num < 100 {\n            sum\
    \ += num\n        }\n    }\n\n    return sum\n}\n", "    sum := 0\n    for _,\
    \ v := range arr[:k] {\n        if v < 100 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n", "    var ret int\n    for i := 0; i < k; i++ {\n\
    \        if arr[i] >= 10 && arr[i] < 100 {\n            ret += arr[i]\n      \
    \  }\n    }\n    return ret\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n\
    \        if len(fmt.Sprintf(\"%d\", arr[i])) < 3 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if i < len(arr) {\n            if arr[i] > 99 {\n           \
    \     sum += 99\n            } else {\n                sum += arr[i]\n       \
    \     }\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0;\
    \ i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n       \
    \ }\n    }\n    return sum\n}\n", "    // TODO: implement me!\n    return 0\n\
    }\n", "    sum := 0\n    for _, n := range arr[:k] {\n        if n <= 99 {\n \
    \           sum += n\n        }\n    }\n    return sum\n}\n", "    total := 0\n\
    \    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"%d\", arr[i])) <=\
    \ 2 {\n            total += arr[i]\n        }\n    }\n    return total\n}\n",
  "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 100 {\n      \
    \      continue\n        }\n        sum += arr[i]\n    }\n    return sum\n}\n",
  "    s := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n         \
    \   s += arr[i]\n        }\n    }\n    return s\n}\n", "    sum := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] > 99 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for _, element :=\
    \ range arr[:k] {\n        if element < 100 {\n            sum += element\n  \
    \      }\n    }\n    return sum\n}\n", "    result := 0\n    // ToDo: implement\
    \ this\n    return result\n}\n", "    s := 0\n    for i := 0; i < k; i++ {\n \
    \       if arr[i] >= 10 && arr[i] < 100 {\n            s += arr[i]\n        }\n\
    \    }\n    return s\n}\n", "    if arr == nil || len(arr) < 1 || k > len(arr)\
    \ {\n        return 0\n    }\n    var sum int\n    for i := 0; i < k; i++ {\n\
    \        if arr[i] >= 100 || arr[i] < 10 {\n            sum += arr[i]\n      \
    \  }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n\
    \        if arr[i] <= 99 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >=\
    \ 100 {\n            sum += 99\n        } else {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i := 0; i <\
    \ k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n\
    \    }\n    return sum\n}\n", "    if k > len(arr) {\n        return 0\n    }\n\
    \    res := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i]\
    \ < 100 {\n            res += arr[i]\n        }\n    }\n    return res\n}\n",
  "    count := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 10 || arr[i]\
    \ > 99 {\n            continue\n        }\n        count += arr[i]\n    }\n  \
    \  return count\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if\
    \ arr[i] >= 10 && arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n\
    \    return sum\n}\n", "    result := 0\n    for i := 0; i < k; i++ {\n      \
    \  if arr[i] < 100 {\n            result += arr[i]\n        }\n    }\n    return\
    \ result\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    result := 0\n    for i, v := range arr {\n        if i < k {\n            if\
    \ v >= 10 && v < 100 {\n                result += v\n            }\n        }\n\
    \    }\n    return result\n}\n", "    sum := 0\n    for _, v := range arr[:k]\
    \ {\n        if v < 10 {\n            sum += v\n        } else if v < 100 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n", "    sum := 0\n\
    \    for i := 0; i < k; i++ {\n        num := arr[i]\n        for num > 9 {\n\
    \            num /= 10\n        }\n        sum += arr[i]\n    }\n    return sum\n\
    }\n", "    counter := 0\n    result := 0\n    for _, v := range arr {\n      \
    \  if (v > 9 && v < 100) || v == 0 {\n            counter++\n            result\
    \ += v\n        }\n        if counter == k {\n            break\n        }\n \
    \   }\n    return result\n}\n", "    sum := 0\n    for _, v := range arr[:k] {\n\
    \        if v > 9 && v < 100 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    if k < 1 || k > len(arr) {\n        return 0\n    }\n    sum\
    \ := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 100 {\n           \
    \ sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    var total int\n\
    \    for i := 0; i < k; i++ {\n        if arr[i] > 9 && arr[i] < 100 {\n     \
    \       total += arr[i]\n        }\n    }\n    return total\n}\n", "    var sum\
    \ int\n    for i, val := range arr {\n        if i >= k {\n            break\n\
    \        }\n        if val <= 99 {\n            sum += val\n        }\n    }\n\
    \    return sum\n}\n", "    var sum int = 0\n    for i := 0; i < k; i++ {\n  \
    \      if arr[i] >= 10 && arr[i] < 100 {\n            sum += arr[i]\n        }\n\
    \    }\n    return sum\n}\n", "    sum := 0\n    for i, e := range arr {\n   \
    \     if i == k {\n            break\n        }\n        if e > 99 || e < -99\
    \ {\n            continue\n        }\n        sum += e\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        num := arr[i]\n   \
    \     count := 0\n        for num != 0 {\n            num /= 10\n            count++\n\
    \        }\n        if count <= 2 {\n            sum += arr[i]\n        }\n  \
    \  }\n    return sum\n}\n", "    res := 0\n    for i := 0; i < k; i++ {\n    \
    \    if arr[i] < 100 {\n            res += arr[i]\n        }\n    }\n    return\
    \ res\n}\n", "    var sum int\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    var res int\n    if len(arr) == 0 {\n        return res\n    }\n    if k <=\
    \ 0 {\n        return res\n    }\n    if k > len(arr) {\n        k = len(arr)\n\
    \    }\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            res\
    \ += arr[i]\n        }\n    }\n    return res\n}\n", "    var ret int\n    for\
    \ _, n := range arr[:k] {\n        if n > 99 {\n            n = n / 100\n    \
    \    }\n        ret += n\n    }\n    return ret\n}\n", "    total := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            total += arr[i]\n\
    \        }\n    }\n    return total\n}\n", "    if k > len(arr) {\n        k =\
    \ len(arr)\n    }\n    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ > 99 {\n            continue\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum\n}\n", "    var sum int = 0\n    var count int = 0\n    for _, elem := range\
    \ arr {\n        if elem < 100 {\n            sum += elem\n            count++\n\
    \        }\n        if count == k {\n            break\n        }\n    }\n   \
    \ return sum\n}\n", "    var sum int\n    for _, num := range arr[:k] {\n    \
    \    if num > 99 {\n            sum += 99\n        } else {\n            sum +=\
    \ num\n        }\n    }\n    return sum\n}\n", "    if k < 1 || k > len(arr) {\n\
    \        return 0\n    }\n    var sum int\n    for _, v := range arr[:k] {\n \
    \       if v >= 10 && v < 100 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >=\
    \ 100 {\n            sum += arr[i] % 100\n        } else {\n            sum +=\
    \ arr[i]\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n \
    \       }\n    }\n    return sum\n}\n", "    count := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            count += arr[i]\n        }\n \
    \   }\n    return count\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n \
    \       if len(fmt.Sprintf(\"%d\", arr[i])) <= 2 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int\n    for i, n := range\
    \ arr {\n        if i >= k {\n            break\n        }\n        if n >= 100\
    \ {\n            continue\n        }\n        sum += n\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for _, val := range arr[:k] {\n        if val < 100 {\n\
    \            sum += val\n        }\n    }\n    return sum\n}\n", "    var result\
    \ int\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            result\
    \ += arr[i]\n        }\n    }\n    return result\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // result := 0\n    // for i := 0; i < k; i++ {\n  \
    \  //     val := arr[i]\n    //     digit := 0\n    //     for val > 0 {\n   \
    \ //         val /= 10\n    //         digit++\n    //     }\n    //     if digit\
    \ < 3 {\n    //         result += arr[i]\n    //     }\n    // }\n    // return\
    \ result\n    result := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100\
    \ {\n            result += arr[i]\n        }\n    }\n    return result\n}\n",
  "    sum := 0\n    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"%d\",\
    \ arr[i])) <= 2 {\n            sum += arr[i]\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        num := arr[i]\n   \
    \     if num < 10 {\n            sum += num\n        } else if num < 100 {\n \
    \           sum += num % 10\n            sum += num / 10\n        } else {\n \
    \           sum += num % 10\n            sum += num / 10 % 10\n        }\n   \
    \ }\n    return sum\n}\n", "    result := 0\n    for i := 0; i < k; i++ {\n  \
    \      if arr[i] < 100 {\n            result += arr[i]\n        }\n    }\n   \
    \ return result\n}\n", "    sum := 0\n    for _, v := range arr[:k] {\n      \
    \  if len(fmt.Sprintf(\"%d\", v)) <= 2 {\n            sum += v\n        }\n  \
    \  }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n    \
    \    n := arr[i]\n        if n >= 100 {\n            sum += n\n        } else\
    \ if n >= 10 {\n            sum += n\n        } else {\n            sum += n\n\
    \        }\n    }\n    return sum\n}\n", "    var result int\n    for _, element\
    \ := range arr[:k] {\n        if element < 100 {\n            result += element\n\
    \        }\n    }\n    return result\n}\n", "    var total int = 0\n    for i,\
    \ elem := range arr {\n        if i < k {\n            var len = 1\n         \
    \   for elem >= 10 {\n                elem /= 10\n                len++\n    \
    \        }\n            if len <= 2 {\n                total += arr[i]\n     \
    \       }\n        }\n    }\n    return total\n}\n", "    result := 0\n    for\
    \ _, v := range arr[:k] {\n        if v < 100 {\n            result += v\n   \
    \     }\n    }\n    return result\n}\n", "    var sum int\n    for i := 0; i <\
    \ k; i++ {\n        if arr[i] < 10 {\n            sum += arr[i]\n        } else\
    \ if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"\
    %d\", arr[i])) <= 2 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for _, e := range arr[:k] {\n        if e >= 10\
    \ && e < 100 {\n            sum += e\n        }\n    }\n    return sum\n}\n",
  "    var sum int\n    for _, el := range arr[:k] {\n        if el < 100 {\n    \
    \        sum += el\n        }\n    }\n    return sum\n}\n", "    total := 0\n\
    \    for i := 0; i < k; i++ {\n        a := arr[i]\n        if a < 100 {\n   \
    \         total += a\n        }\n    }\n    return total\n}\n", "    sum := 0\n\
    \    for i := 0; i < k; i++ {\n        temp := arr[i]\n        for temp >= 10\
    \ {\n            temp /= 10\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum\n}\n", "    var result int\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            result += arr[i]\n        }\n    }\n    return result\n\
    }\n", "    var sum int\n    for _, elem := range arr[:k] {\n        if elem <\
    \ 100 {\n            sum += elem\n        }\n    }\n    return sum\n}\n", "  \
    \  var sum int\n    for _, x := range arr[:k] {\n        if len(fmt.Sprintf(\"\
    %d\", x)) <= 2 {\n            sum += x\n        }\n    }\n    return sum\n}\n",
  "    var sum int\n    count := 0\n    for i := 0; i < len(arr); i++ {\n        num\
    \ := arr[i]\n        if num >= 10 && num < 100 {\n            sum += num\n   \
    \         count++\n        }\n        if count == k {\n            break\n   \
    \     }\n    }\n    return sum\n}\n", "    var sum int\n    for _, v := range\
    \ arr[:k] {\n        if v >= 10 && v < 100 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n  \
    \      if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >=\
    \ 100 || arr[i] <= -100 {\n            sum += arr[i] % 100\n        } else {\n\
    \            sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for _, elem := range arr[:k] {\n        if elem >= 10 && elem < 100 {\n\
    \            sum += elem\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for _, value := range arr[:k] {\n        s := fmt.Sprintf(\"%d\", value)\n\
    \        if len(s) <= 2 {\n            sum += value\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >=\
    \ 100 {\n            continue\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum\n}\n", "    count := 0\n    for _, v := range arr {\n        if count >=\
    \ k {\n            break\n        }\n        if v < 10 {\n            count++\n\
    \            continue\n        }\n        if v < 100 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    sum := 0\n    for i := 0; i <\
    \ k; i++ {\n        arr[i] = arr[i] % 100\n        if arr[i] > 9 {\n         \
    \   sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n   \
    \ }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n     \
    \   if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >\
    \ 99 {\n            sum += 99\n        } else {\n            sum += arr[i]\n \
    \       }\n    }\n    return sum\n}\n", "    if k < 1 || k > len(arr) {\n    \
    \    panic(\"k must be between 1 and len(arr)\")\n    }\n    sum := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 10 {\n            sum += arr[i]\n\
    \        } else if arr[i] < 100 {\n            sum += arr[i] % 10\n          \
    \  sum += arr[i] / 10\n        } else {\n            sum += arr[i] % 10\n    \
    \        sum += arr[i] / 10 % 10\n        }\n    }\n    return sum\n}\n", "  \
    \  sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n       \
    \     sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n \
    \   for i := 0; i < k; i++ {\n        if arr[i] > 99 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    result := 0\n    for i := 0; i <\
    \ k; i++ {\n        if arr[i] < 100 {\n            result += arr[i]\n        }\n\
    \    }\n    return result\n}\n", "    count := 0\n    for i := 0; i < k; i++ {\n\
    \        if arr[i] > 9 && arr[i] < 100 {\n            count += arr[i]\n      \
    \  }\n    }\n    return count\n}\n", "    sum := 0\n    for i := 0; i < k; i++\
    \ {\n        if arr[i] > 99 {\n            continue\n        }\n        sum +=\
    \ arr[i]\n    }\n    return sum\n}\n", "    if len(arr) == 0 {\n        return\
    \ 0\n    }\n    if k <= 0 {\n        return 0\n    }\n    if k > len(arr) {\n\
    \        k = len(arr)\n    }\n    sum := 0\n    for i:=0; i<k; i++ {\n       \
    \ if len(fmt.Sprintf(\"%d\", arr[i])) > 2 {\n            continue\n        }\n\
    \        sum += arr[i]\n    }\n    return sum\n}\n", "    var sum int = 0\n  \
    \  for i := 0; i < k; i++ {\n        if arr[i] >= 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var sum int = 0\n    for i := 0;\
    \ i < k; i++ {\n        if arr[i] < 10 {\n            sum += arr[i]\n        }\
    \ else if arr[i] < 100 {\n            sum += arr[i] / 10 + arr[i] % 10\n     \
    \   } else {\n            sum += 1\n        }\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n      \
    \      sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    var sum = 0\n\
    \    for i := 0; i < k; i++ {\n        var num = arr[i]\n        if num > 99 {\n\
    \            num = 99\n        }\n        sum += num\n    }\n    return sum\n\
    }\n", "    result := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100\
    \ {\n            result += arr[i]\n        }\n    }\n    return result\n}\n",
  "    sum := 0\n    for _, v := range arr[:k] {\n        if v < 100 {\n         \
    \   sum += v\n        }\n    }\n    return sum\n}\n", "    // sum := 0\n    //\
    \ max_elements := 0\n    // for i, val := range arr {\n    //     if num_digits(val)\
    \ <= 2 {\n    //         sum += val\n    //         max_elements++\n    //   \
    \  }\n    //     if max_elements == k {\n    //         break\n    //     }\n\
    \    //     if i == len(arr) - 1 {\n    //         break\n    //     }\n    //\
    \ }\n    // return sum\n    sum := 0\n    for _, val := range arr {\n        if\
    \ num_digits(val) <= 2 {\n            sum += val\n            k--\n        }\n\
    \        if k == 0 {\n            break\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"%d\",\
    \ arr[i])) <= 2 {\n            sum += arr[i]\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for _, v := range arr[:k] {\n        if v < 10 {\n  \
    \          sum += v\n        } else if v < 100 {\n            sum += v / 10 +\
    \ v % 10\n        } else {\n            sum += v / 100 + (v / 10) % 10 + v % 10\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n   \
    \ }\n    return sum\n}\n\ntype TestCase ", "    var result int\n    var two_digits\
    \ bool\n    for i := 0; i < k; i++ {\n        num := arr[i]\n        if num >\
    \ 99 {\n            num = 0\n            two_digits = true\n        } else if\
    \ num > 9 && !two_digits {\n            num = 0\n            two_digits = true\n\
    \        }\n        result += num\n    }\n    return result\n}\n", "    sum :=\
    \ 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    if len(arr) == 0 {\n\
    \        return 0\n    }\n\n    if k > len(arr) {\n        k = len(arr)\n    }\n\
    \n    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] > 99 {\n     \
    \       continue\n        }\n        sum += arr[i]\n    }\n\n    return sum\n\
    }\n", "    sum := 0\n    for _, a := range arr[:k] {\n        if a <= 99 {\n \
    \           sum += a\n        }\n    }\n    return sum\n}\n", "    var sum int\n\
    \    for i := 0; i < k; i++ {\n        if (arr[i] >= 10 && arr[i] < 100) || arr[i]\
    \ < 10 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n", " \
    \   var result int\n    for i := 0; i < k; i++ {\n        if arr[i] > 99 {\n \
    \           result += arr[i]\n        }\n    }\n    return result\n}\n", "   \
    \ sum := 0\n    for i := 0; i < k; i++ {\n        // int to string\n        str\
    \ := fmt.Sprintf(\"%d\", arr[i])\n        if len(str) <= 2 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for _,\
    \ v := range arr[:k] {\n        if v > 99 {\n            sum += 99\n        }\
    \ else {\n            sum += v\n        }\n    }\n    return sum\n}\n", "    s\
    \ := 0\n    for i := 0; i < k; i++ {\n        l := len(fmt.Sprintf(\"%d\", arr[i]))\n\
    \        if l <= 2 {\n            s += arr[i]\n        }\n    }\n    return s\n\
    }\n", "    if k > len(arr) {\n        k = len(arr)\n    }\n    sum := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n\ntype testpair ", "    sum := 0\n    for\
    \ _, val := range arr[:k] {\n        if val >= 10 && val < 100 {\n           \
    \ sum += val\n        }\n    }\n    return sum\n}\n", "    total := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            total += arr[i]\n\
    \        }\n    }\n    return total\n}\n", "    var result int = 0\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] > 9 && arr[i] < 100 {\n            result\
    \ += arr[i]\n        }\n    }\n    return result\n}\n", "    total := 0\n    for\
    \ _, v := range arr[:k] {\n        if v >= 10 && v < 100 {\n            total\
    \ += v\n        }\n    }\n    return total\n}\n", "    var sum int\n    for _,\
    \ n := range arr[:k] {\n        if n > 99 {\n            sum += n % 100\n    \
    \    } else {\n            sum += n\n        }\n    }\n    return sum\n}\n", " \
    \   total := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 100 {\n   \
    \         total += arr[i]\n        }\n    }\n    return total\n}\n", "    var\
    \ sum int\n    for _, a := range arr[:k] {\n        if a > 9 && a < 100 {\n  \
    \          sum += a\n        }\n    }\n    return sum\n}\n", "    var result int\n\
    \    var check_digit = func(a int) bool {\n        return a >= 10 && a < 100\n\
    \    }\n    for i := 0; i < k; i++ {\n        if check_digit(arr[i]) {\n     \
    \       result += arr[i]\n        }\n    }\n    return result\n}\n", "    var\
    \ s int\n    for i := 0; i < k; i++ {\n        if arr[i] <= 99 {\n           \
    \ s += arr[i]\n        }\n    }\n    return s\n}\n", "    var res int\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            res += arr[i]\n\
    \        }\n    }\n    return res\n}\n", "    var total int\n    for i := 0; i\
    \ < k; i++ {\n        if arr[i] > 99 {\n            arr[i] = 99\n        }\n \
    \       total += arr[i]\n    }\n    return total\n}\n", "    var result int\n\
    \    for i := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i] < 100 {\n   \
    \         result += arr[i]\n        }\n    }\n    return result\n}\n", "    //\
    \ TODO: Implement\n    return -1\n}\n", "    var result int\n    for i := 0; i\
    \ < k; i++ {\n        if arr[i] < 10 {\n            result += arr[i]\n       \
    \ } else if arr[i] >= 10 && arr[i] < 100 {\n            result += arr[i]\n   \
    \     }\n    }\n    return result\n}\n", "    res := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] > 99 {\n            res += arr[i] / 100 + arr[i] %\
    \ 100 / 10 + arr[i] % 10\n        } else if arr[i] > 9 {\n            res += arr[i]\
    \ / 10 + arr[i] % 10\n        } else {\n            res += arr[i]\n        }\n\
    \    }\n    return res\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n  \
    \      if len(fmt.Sprintf(\"%d\", arr[i])) > 2 {\n            continue\n     \
    \   }\n        sum += arr[i]\n    }\n    return sum\n}\n", "    sum := 0\n   \
    \ for i := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i] < 100 {\n      \
    \      sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    output := 0\n\
    \    for i := 0; i < k; i++ {\n        num_digits := 1\n        num := arr[i]\n\
    \        num /= 10\n        for num > 0 {\n            num_digits++\n        \
    \    num /= 10\n        }\n        if num_digits <= 2 {\n            output +=\
    \ arr[i]\n        }\n    }\n    return output\n}\n", "    // 1 <= len(arr) <=\
    \ 100\n    if len(arr) == 0 || len(arr) > 100 {\n        return 0\n    }\n   \
    \ // 1 <= k <= len(arr)\n    if k == 0 || k > len(arr) {\n        return 0\n \
    \   }\n    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] > 9 && arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i] <\
    \ 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for _, n := range arr[:k] {\n        if n < 10 {\n         \
    \   sum += n\n        } else if n < 100 {\n            sum += n % 10 + n / 10\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n   \
    \ }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n     \
    \   if arr[i] < 10 {\n            sum += arr[i]\n        } else if arr[i] < 100\
    \ {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n", "    var\
    \ total int\n    for i, v := range arr {\n        if i >= k {\n            break\n\
    \        }\n\n        if v < 100 {\n            total += v\n        }\n    }\n\
    \n    return total\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n      \
    \  if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        sum += arr[i]\
    \ % 100\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++\
    \ {\n        num := arr[i]\n        if num > 99 {\n            continue\n    \
    \    }\n        sum += num\n    }\n    return sum\n}\n", "    sum := 0\n    for\
    \ i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var result int = 0\n    for i :=\
    \ 0; i < k; i++ {\n        if arr[i] < 100 {\n            result += arr[i]\n \
    \       }\n    }\n    return result\n}\n", "    if len(arr) <= 0 || k <= 0 {\n\
    \        return 0\n    }\n    sum := 0\n    for _, num := range arr[:k] {\n  \
    \      if num >= 10 && num < 100 {\n            sum += num\n        }\n    }\n\
    \    return sum\n}\n", "    total := 0\n    for i := 0; i < k; i++ {\n       \
    \ n := arr[i]\n        if n >= 10 && n < 100 {\n            total += n\n     \
    \   }\n    }\n    return total\n}\n", "    var res int\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            res += arr[i]\n        }\n   \
    \ }\n    return res\n}\n", "    var result int = 0\n    var temp_array []int\n\
    \    var counter int = 0\n    var valid_element bool = false\n    for _, element\
    \ := range arr {\n        if len(temp_array) == k {\n            break\n     \
    \   }\n        if element > 99 {\n            valid_element = false\n        }\
    \ else {\n            temp_array = append(temp_array, element)\n            valid_element\
    \ = true\n        }\n        if valid_element {\n            counter += 1\n  \
    \      }\n    }\n    for _, element := range temp_array {\n        result += element\n\
    \    }\n    return result\n}\n", "    if len(arr) == 0 {\n        return 0\n \
    \   }\n    if k > len(arr) {\n        k = len(arr)\n    }\n    var sum int\n \
    \   for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    var (\n        sum int\n       \
    \ i int\n    )\n    for i = 0; i < k; i++ {\n        if arr[i] > 99 {\n      \
    \      continue\n        }\n        sum += arr[i]\n    }\n    return sum\n}\n",
  "    var sum int\n    count := 0\n    for i := 0; i < len(arr); i++ {\n        //\
    \ Count must be less than k for us to continue iterating\n        if count < k\
    \ {\n            // If the number is more than 100, we set the number to 0\n \
    \           if arr[i] > 100 {\n                arr[i] = 0\n            }\n   \
    \         // If the number is more than 10, we set the number to 0\n         \
    \   if arr[i] > 10 {\n                arr[i] = 0\n            }\n            sum\
    \ += arr[i]\n            count++\n        }\n    }\n    return sum\n}\n", "  \
    \  sum := 0\n    i := 0\n    for i < k {\n        sum += arr[i] % 100\n      \
    \  i++\n    }\n    return sum\n}\n", "    total := 0\n    for _, element := range\
    \ arr[:k] {\n        if element < 10 {\n            total += element\n       \
    \ } else if element < 100 {\n            total += element\n        }\n    }\n\
    \    return total\n}\n", "    if k <= 0 {\n        return 0\n    }\n    var ret\
    \ int\n    for _, v := range arr[:k] {\n        if v < 100 {\n            ret\
    \ += v\n        }\n    }\n    return ret\n}\n", "    var sum int\n    for i :=\
    \ 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n    \
    \    }\n    }\n    return sum\n}\n", "    arr = arr[:k]\n    sum := 0\n    for\
    \ _, x := range arr {\n        if x >= 10 && x < 100 {\n            sum += x\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n   \
    \ }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n     \
    \   if arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] <=\
    \ 99 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n", " \
    \   sum := 0\n    for i := 0; i < k; i++ {\n        n := arr[i]\n        if n\
    \ < 100 {\n            sum += n\n        }\n    }\n    return sum\n}\n", "   \
    \ sum := 0\n    for i, v := range arr {\n        if i < k {\n            numDigits\
    \ := 1\n            digit := v\n            for digit > 10 {\n               \
    \ digit /= 10\n                numDigits++\n            }\n            if numDigits\
    \ <= 2 {\n                sum += v\n            }\n        }\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >=\
    \ 100 {\n            continue\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"\
    %d\", arr[i])) < 3 {\n            sum += arr[i]\n        }\n    }\n    return\
    \ sum\n}\n", "    result := 0\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            result += arr[i]\n        }\n    }\n    return result\n\
    }\n", "    sum := 0\n    for i, val := range arr {\n        if i >= k {\n    \
    \        break\n        }\n        if val >= 10 && val < 100 {\n            sum\
    \ += val\n        }\n    }\n    return sum\n}\n", "    var sum int\n    for i\
    \ := 0; i < k; i++ {\n        if arr[i] > 99 {\n            sum += arr[i]\n  \
    \      }\n    }\n    return sum\n}\n\n//Test for given example", "    var total\
    \ int\n    for i := 0; i < k; i++ {\n        tmp := arr[i]\n        if tmp < 100\
    \ {\n            total += tmp\n        }\n    }\n    return total\n}\n", "   \
    \ res := 0\n    for i := 0; i < k; i++ {\n        if len(fmt.Sprintf(\"%d\", arr[i]))\
    \ <= 2 {\n            res += arr[i]\n        }\n    }\n    return res\n}\n", " \
    \   // Your code goes here...\n    var res = 0\n    for _, i := range arr[:k]\
    \ {\n        if i <= 99 {\n            res += i\n        }\n    }\n    return\
    \ res\n}\n", "    sum := 0\n    for i, num := range arr {\n        if i < k {\n\
    \            if num > 10 && num < 100 {\n                sum += num\n        \
    \    }\n        }\n    }\n    return sum\n}\n", "    sum := 0\n    for _, i :=\
    \ range arr[:k] {\n        if i >= 100 {\n            continue\n        }\n  \
    \      sum += i\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i\
    \ < k; i++ {\n        if i > len(arr) - 1 {\n            break\n        }\n\n\
    \        num := arr[i]\n        if num < 10 {\n            sum += num\n      \
    \  } else if num < 100 {\n            sum += num\n        }\n    }\n    return\
    \ sum\n}\n", "    var sum int\n    for _, num := range arr[:k] {\n        if num\
    \ >= 10 && num < 100 {\n            sum += num\n        }\n    }\n    return sum\n\
    }\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 10 &&\
    \ arr[i] < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n\
    }\n", "    res := 0\n    for i := 0; i < k; i++ {\n        tmp := arr[i]\n   \
    \     for tmp > 0 {\n            if tmp < 10 {\n                res += tmp\n \
    \               break\n            }\n            tmp /= 10\n        }\n    }\n\
    \    return res\n}\n", "    if k > len(arr) {\n        return 0\n    }\n    sum\
    \ := 0\n    for i := 0; i < k; i++ {\n        // two digits\n        if arr[i]\
    \ > 99 {\n            continue\n        }\n        sum += arr[i]\n    }\n    return\
    \ sum\n}\n", "    var sum int = 0\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    var sum int\n    for _, value := range arr[:k] {\n        if value < 100 {\n\
    \            sum += value\n        }\n    }\n    return sum\n}\n", "    sum :=\
    \ 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum\
    \ += arr[i]\n        }\n    }\n    return sum\n}\n", "    if arr == nil || len(arr)\
    \ == 0 {\n        return 0\n    }\n    result := 0\n    for _, v := range arr[:k]\
    \ {\n        if v < 100 {\n            result += v\n        }\n    }\n    return\
    \ result\n}\n", "    sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n",
  "    var result int = 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n\
    \            result += arr[i]\n        }\n    }\n    return result\n}\n", "  \
    \  res := 0\n    for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n       \
    \     res += arr[i]\n        }\n    }\n    return res\n}\n", "    sum := 0\n \
    \   for i := 0; i < k; i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n\
    \        }\n    }\n    return sum\n}\n", "    sum := 0\n    for i := 0; i < k;\
    \ i++ {\n        if arr[i] < 100 {\n            sum += arr[i]\n        }\n   \
    \ }\n    return sum\n}\n", "    result := 0\n    for i, v := range arr {\n   \
    \     if v > 9 && v < 100 {\n            result += v\n        }\n        if i\
    \ == k - 1 {\n            break\n        }\n    }\n    return result\n}\n", " \
    \   sum := 0\n    for i := 0; i < k; i++ {\n        if arr[i] >= 10 && arr[i]\
    \ < 100 {\n            sum += arr[i]\n        }\n    }\n    return sum\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

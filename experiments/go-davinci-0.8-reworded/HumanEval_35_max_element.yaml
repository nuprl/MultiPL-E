name: HumanEval_35_max_element
language: go_test.go
prompt: "package max_element_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Return maximum element in the list.\n// >>> max_element([]int{1, 2, 3})\n// 3\n\
  // >>> max_element([]int{5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10})\n// 123\nfunc max_element(l\
  \ []int) int {\n"
tests: "func TestMax_Element(t *testing.T) {\n  candidate := max_element\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{1, 2, 3}), expected: 3 },\n     { actual:\
  \ candidate([]int{5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), expected: 124 },\n  \
  \ }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n  \
    \  for _, v := range l {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    var max int\n    max = l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := l[0]\n    for _, item := range l {\n        if\
    \ item > max {\n            max = item\n        }\n    }\n    return max\n}\n",
  "    // Implement the function body.\n    return 0\n}\n", "    max := l[0]\n   \
    \ for _, x := range l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \n    // First element is the default max.\n    max := l[0]\n\n    for _, num\
    \ := range l {\n        if num > max {\n            max = num\n        }\n   \
    \ }\n\n    return max\n}\n", "    // Your code here (and the code from the previous\
    \ exercise)\n    return -1\n}\n", "    res := l[0]\n    for _, v := range l {\n\
    \        if v > res {\n            res = v\n        }\n    }\n    return res\n\
    }\n\ntype ListMaxElementTestCase ", "    max := l[0]\n    for _, value := range\
    \ l {\n        if value > max {\n            max = value\n        }\n    }\n \
    \   return max\n}\n", "    var max int\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  max := l[0]\n    for _, n := range l {\n        if n > max {\n            max\
    \ = n\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    max := l[0]\n    for _, e := range l {\n        if e >\
    \ max {\n            max = e\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, elem := range l {\n        if elem > max {\n            max\
    \ = elem\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, val\
    \ := range l {\n        if val > max {\n            max = val\n        }\n   \
    \ }\n    return max\n}\n", "    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := l[0]\n    for _, e := range l {\n        if e > max {\n            max\
    \ = e\n        }\n    }\n    return max\n}\n", "    m := l[0]\n    for _, v :=\
    \ range l {\n        if v > m {\n            m = v\n        }\n    }\n    return\
    \ m\n}\n", "    max := 0\n    for _, v := range l {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    var m int\n \
    \   m = 0\n    for _, v := range l {\n        if v > m {\n            m = v\n\
    \        }\n    }\n    return m\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    current_max := l[0]\n    for _, v := range l {\n        if v > current_max\
    \ {\n            current_max = v\n        }\n    }\n    return current_max\n}\n",
  "    max := l[0]\n    for _, v := range l {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    m := l[0]\n    for _, v :=\
    \ range l {\n        if v > m {\n            m = v\n        }\n    }\n    return\
    \ m\n}\n", "    max := l[0]\n    for _, elem := range l {\n        if elem > max\
    \ {\n            max = elem\n        }\n    }\n    return max\n}\n", "    max\
    \ := l[0]\n    for _, i := range l {\n        if i > max {\n            max =\
    \ i\n        }\n    }\n    return max\n}\n", "    if len(l) < 1 {\n        panic(\"\
    List cannot be empty\")\n    }\n    if len(l) == 1 {\n        return l[0]\n  \
    \  }\n    max := l[0]\n    for _, element := range l[1:] {\n        if element\
    \ > max {\n            max = element\n        }\n    }\n    return max\n}\n",
  "    max := l[0]\n    for _, e := range l {\n        if e > max {\n            max\
    \ = e\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    m := l[0]\n    for _, a := range l {\n        if a > m\
    \ {\n            m = a\n        }\n    }\n    return m\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, el := range l {\n\
    \        if el > max {\n            max = el\n        }\n    }\n\n    return max\n\
    }\n", "    max := l[0]\n    for _, i := range l {\n        if i > max {\n    \
    \        max = i\n        }\n    }\n    return max\n}\n", "    m := l[0]\n   \
    \ for _, e := range l {\n        if e > m {\n            m = e\n        }\n  \
    \  }\n    return m\n}\n", "    m := l[0]\n    for _, v := range l {\n        if\
    \ v > m {\n            m = v\n        }\n    }\n    return m\n}\n", "    res :=\
    \ 0\n    for _, elem := range l {\n        if elem > res {\n            res =\
    \ elem\n        }\n    }\n    return res\n}\n", "    if len(l) == 0 {\n      \
    \  return 0\n    }\n    var res int = l[0]\n    for _, el := range l {\n     \
    \   if el > res {\n            res = el\n        }\n    }\n    return res\n}\n",
  "    return 0\n}\n", "    max := 0\n    for _, v := range l {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    return max\n}\n", "    max :=\
    \ l[0]\n    for _, x := range l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    m := l[0]\n    for _, i := range l {\n        if i > m {\n   \
    \         m = i\n        }\n    }\n    return m\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for _, num := range l {\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    return max\n\
    }\n", "    var m int\n    for _, v := range l {\n        if v > m {\n        \
    \    m = v\n        }\n    }\n    return m\n}\n", "    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    if len(l) == 1 {\n        return\
    \ l[0]\n    }\n    m := l[0]\n    for _, v := range l[1:] {\n        if v > m\
    \ {\n            m = v\n        }\n    }\n    return m\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    max := l[0]\n    for _, i := range l {\n \
    \       if i > max {\n            max = i\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    result := l[0]\n   \
    \ for _, v := range l {\n        if v > result {\n            result = v\n   \
    \     }\n    }\n    return result\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    if len(l) == 1 {\n        return l[0]\n    }\n    max_elem :=\
    \ l[0]\n    for _, v := range l[1:] {\n        if v > max_elem {\n           \
    \ max_elem = v\n        }\n    }\n    return max_elem\n}\n", "    max := l[0]\n\
    \    for _, x := range l {\n        if x > max {\n            max = x\n      \
    \  }\n    }\n    return max\n}\n", "    res := 0\n    for _, val := range l {\n\
    \        if val > res {\n            res = val\n        }\n    }\n    return res\n\
    }\n", "    max := l[0]\n    for _, n := range l {\n        if n > max {\n    \
    \        max = n\n        }\n    }\n    return max\n}\n", "    var max int = l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    return max\n}\n", "    m := l[0]\n    for _, i := range l {\n\
    \        if i > m {\n            m = i\n        }\n    }\n    return m\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    var max = l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    // max := l[0]\n    var max int\n    if len(l) ==\
    \ 0 {\n        max = 0\n    } else {\n        max = l[0]\n    }\n    for _, e\
    \ := range l {\n        if e > max {\n            max = e\n        }\n    }\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    m := l[0]\n    for _, v := range l {\n        if v > m {\n   \
    \         m = v\n        }\n    }\n    return m\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    m := l[0]\n    for _, i := range l {\n        if\
    \ i > m {\n            m = i\n        }\n    }\n    return m\n}\n", "    m :=\
    \ l[0]\n    for _, v := range l {\n        if v > m {\n            m = v\n   \
    \     }\n    }\n    return m\n}\n", "    max := l[0]\n    for _, i := range l\
    \ {\n        if i > max {\n            max = i\n        }\n    }\n    return max\n\
    }\n", "    max := l[0]\n    for _, v := range l {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n \
    \   for _, v := range l {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    return max\n}\n", "    result := l[0]\n    for _, value := range\
    \ l {\n        if value > result {\n            result = value\n        }\n  \
    \  }\n    return result\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n         \
    \   max = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    max := l[0]\n    for _, i := range l {\n    \
    \    if i > max {\n            max = i\n        }\n    }\n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    max :=\
    \ l[0]\n    for _, val := range l {\n        if val > max {\n            max =\
    \ val\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    max := l[0]\n    for _, v := range l {\n        if v >\
    \ max {\n            max = v\n        }\n    }\n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    m := l[0]\n    for _, val := range\
    \ l {\n        if val > m {\n            m = val\n        }\n    }\n    return\
    \ m\n}\n", "    var max_el int = l[0]\n    for _, i := range l {\n        if i\
    \ > max_el {\n            max_el = i\n        }\n    }\n    return max_el\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    current_max := l[0]\n    for\
    \ _, x := range l {\n        if x > current_max {\n            current_max = x\n\
    \        }\n    }\n    return current_max\n}\n", "    max := 0\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range l {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    var max int = 0\n    for _, e :=\
    \ range l {\n        if e > max {\n            max = e\n        }\n    }\n   \
    \ return max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    var\
    \ max int = l[0]\n    for _, elem := range l {\n        if elem > max {\n    \
    \        max = elem\n        }\n    }\n    return max\n}\n", "    var max int\
    \ = l[0]\n    for _, e := range l {\n        if e > max {\n            max = e\n\
    \        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    var max int\
    \ = l[0]\n    for _, val := range l {\n        if val > max {\n            max\
    \ = val\n        }\n    }\n    return max\n}\n", "    var m int\n    for i, v\
    \ := range l {\n        if i == 0 || v > m {\n            m = v\n        }\n \
    \   }\n    return m\n}\n", "    max := l[0]\n    for _, x := range l {\n     \
    \   if x > max {\n            max = x\n        }\n    }\n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, el\
    \ := range l {\n        if el > max {\n            max = el\n        }\n    }\n\
    \n    return max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    m := l[0]\n    for _, v := range\
    \ l {\n        if v > m {\n            m = v\n        }\n    }\n    return m\n\
    }\n", "    max := l[0]\n    for _, e := range l {\n        if e > max {\n    \
    \        max = e\n        }\n    }\n    return max\n}\n", "    var max int\n \
    \   for i, val := range l {\n        if i == 0 || val > max {\n            max\
    \ = val\n        }\n    }\n    return max\n}\n", "    return 0\n}\n", "    var\
    \ max int\n    max = 0\n    for i := 0; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max\n}\n", "    var\
    \ max = l[0]\n    for _, element := range l {\n        if element > max {\n  \
    \          max = element\n        }\n    }\n    return max\n}\n", "    var max\
    \ int\n    for i, e := range l {\n        if i == 0 || e > max {\n           \
    \ max = e\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n   \
    \     return 0\n    }\n    result := l[0]\n    for _, value := range l {\n   \
    \     if value > result {\n            result = value\n        }\n    }\n    return\
    \ result\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, i := range l {\n        if i > max {\n            max = i\n      \
    \  }\n    }\n    return max\n}\n", "    var max int\n    for i, v := range l {\n\
    \        if i == 0 || v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    max := l[0]\n    for _, value := range l {\n        if value\
    \ > max {\n            max = value\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    for _, v := range l {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, val\
    \ := range l {\n        if val > max {\n            max = val\n        }\n   \
    \ }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    var max int = l[0]\n    for _, e := range l {\n        if e > max {\n   \
    \         max = e\n        }\n    }\n    return max\n}\n", "    m := l[0]\n  \
    \  for _, v := range l {\n        if v > m {\n            m = v\n        }\n \
    \   }\n    return m\n}\n", "    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    if len(l) < 1 {\n        return 0\n    }\n    max := l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    var max int\n    for i, value := range l {\n        if\
    \ i == 0 || value > max {\n            max = value\n        }\n    }\n    return\
    \ max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    m := l[0]\n    for _, i := range l {\n \
    \       if i > m {\n            m = i\n        }\n    }\n    return m\n}\n", " \
    \   max := l[0]\n    for _, v := range l {\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n   \
    \     return 0\n    }\n    m := l[0]\n    for _, n := range l {\n        if n\
    \ > m {\n            m = n\n        }\n    }\n    return m\n}\n", "    max :=\
    \ 0\n    for _, i := range l {\n        if i > max {\n            max = i\n  \
    \      }\n    }\n    return max\n}\n", "    var max int\n    for _, e := range\
    \ l {\n        if e > max {\n            max = e\n        }\n    }\n    return\
    \ max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    return l[0]\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n \
    \   max := l[0]\n    for _, v := range l {\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    max := l[0]\n    for _, e := range l {\n        if\
    \ e > max {\n            max = e\n        }\n    }\n    return max\n}\n", "  \
    \  max := l[0]\n    for _, v := range l {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    max := l[0]\n    for _, e := range l {\n        if e >\
    \ max {\n            max = e\n        }\n    }\n    return max\n}\n", "    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n", "    lmax := -0x7fffffff\n    for\
    \ _, e := range l {\n        if e > lmax {\n            lmax = e\n        }\n\
    \    }\n    return lmax\n}\n", "    max := l[0]\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    result := l[0]\n   \
    \ for _, v := range l {\n        if v > result {\n            result = v\n   \
    \     }\n    }\n    return result\n}\n", "    var max = l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    ret :=\
    \ l[0]\n    for _, v := range l {\n        if v > ret {\n            ret = v\n\
    \        }\n    }\n    return ret\n}\n", "    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max_element\
    \ := l[0]\n    for _, v := range l {\n        if v > max_element {\n         \
    \   max_element = v\n        }\n    }\n\n    return max_element\n}\n", "    max\
    \ := l[0]\n    for _, e := range l {\n        if e > max {\n            max =\
    \ e\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, i :=\
    \ range l {\n        if i > max {\n            max = i\n        }\n    }\n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    if len(l)\
    \ == 1 {\n        return l[0]\n    }\n    left := max_element(l[:len(l)/2])\n\
    \    right := max_element(l[len(l)/2:])\n    if left > right {\n        return\
    \ left\n    }\n    return right\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n \
    \           max = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    return max\n}\n", "    max := 0\n    for _, value := range l\
    \ {\n        if value > max {\n            max = value\n        }\n    }\n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    if len(l)\
    \ == 1 {\n        return l[0]\n    }\n    m := l[0]\n    for _, v := range l[1:]\
    \ {\n        if v > m {\n            m = v\n        }\n    }\n    return m\n}\n",
  "    var maximum int = l[0]\n    for _, value := range l {\n        if value > maximum\
    \ {\n            maximum = value\n        }\n    }\n    return maximum\n}\n",
  "    // Use empty list as a sentinel.\n    if len(l) == 0 {\n        return 0\n\
    \    }\n    // Use first element of the list as a base maximum.\n    max := l[0]\n\
    \    for _, e := range l {\n        if e > max {\n            max = e\n      \
    \  }\n    }\n    return max\n}\n", "    var m int = l[0]\n    for _, v := range\
    \ l {\n        if v > m {\n            m = v\n        }\n    }\n    return m\n\
    }\n", "    m := l[0]\n    for _, element := range l {\n        if element > m\
    \ {\n            m = element\n        }\n    }\n    return m\n}\n", "    max :=\
    \ l[0]\n    for _, e := range l {\n        if e > max {\n            max = e\n\
    \        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    result := l[0]\n    for _, el := range l {\n        if el > result\
    \ {\n            result = el\n        }\n    }\n    return result\n}\n", "   \
    \ if len(l) == 0 {\n        return 0\n    }\n    var m int = l[0]\n    for _,\
    \ v := range l {\n        if v > m {\n            m = v\n        }\n    }\n  \
    \  return m\n}\n", "    res := l[0]\n    for _, val := range l {\n        if val\
    \ > res {\n            res = val\n        }\n    }\n    return res\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n    for _, i :=\
    \ range l {\n        if i > max {\n            max = i\n        }\n    }\n   \
    \ return max\n}\n", "    max := 0\n    for _, v := range l {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    for _, v := range l {\n        if v > max {\n            max = v\n  \
    \      }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n   \
    \         max = v\n        }\n    }\n    return max\n}\n", "    var max int\n\
    \    if len(l) > 0 {\n        max = l[0]\n    }\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    n := l[0]\n    for _, e := range l {\n        if e > n {\n        \
    \    n = e\n        }\n    }\n    return n\n}\n", "    m := l[0]\n    for _, n\
    \ := range l {\n        if n > m {\n            m = n\n        }\n    }\n    return\
    \ m\n}\n", "    max := 0\n    for _, i := range l {\n        if i > max {\n  \
    \          max = i\n        }\n    }\n    return max\n}\n", "    // TODO: Implement\
    \ max_element.\n    return 0\n}\n", "    var max int = l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    var max int\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    max := l[0]\n    for _,v := range l {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    result := l[0]\n    for _, v\
    \ := range l {\n        if v > result {\n            result = v\n        }\n \
    \   }\n    return result\n}\n", "    var max = 0\n    for _, v := range l {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    res := l[0]\n    for\
    \ _, v := range l {\n        if v > res {\n            res = v\n        }\n  \
    \  }\n    return res\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, e := range l {\n        if e > max {\n          \
    \  max = e\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    max := 0\n    for _,v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  var max int\n    for _, v := range l {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, e\
    \ := range l {\n        if e > max {\n            max = e\n        }\n    }\n\
    \    return max\n}\n", "    max := l[0]\n    for _, i := range l {\n        if\
    \ i > max {\n            max = i\n        }\n    }\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n\n    m := l[0]\n    for _, v :=\
    \ range l {\n        if v > m {\n            m = v\n        }\n    }\n    return\
    \ m\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n \
    \   for _, v := range l {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    return max\n}\n", "    //var i int\n    //var max int = l[0]\n\
    \    //for i = 1; i < len(l); i++ {\n    //    if l[i] > max {\n    //       \
    \ max = l[i]\n    //    }\n    //}\n    //return max\n    return max_element_builtin(l)\n\
    }\n", "    max := l[0]\n    for _, i := range l {\n        if i > max {\n    \
    \        max = i\n        }\n    }\n    return max\n}\n", "    max := l[0]\n \
    \   for _, val := range l {\n        if val > max {\n            max = val\n \
    \       }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    m := l[0]\n    for _, v := range l {\n \
    \       if v > m {\n            m = v\n        }\n    }\n    return m\n}\n", " \
    \   max := l[0]\n    for _, e := range l {\n        if e > max {\n           \
    \ max = e\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _,\
    \ elem := range l {\n        if elem > max {\n            max = elem\n       \
    \ }\n    }\n    return max\n}\n", "    var max int = l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, i := range l {\n        if i > max {\n\
    \            max = i\n        }\n    }\n    return max\n}\n", "    max := l[0]\n\
    \    for _, num := range l {\n        if num > max {\n            max = num\n\
    \        }\n    }\n    return max\n}\n", "    var max int\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    // TODO: implement\
    \ this function\n    fmt.Println(\"TODO: implement this function\")\n    return\
    \ 0\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    max := l[0]\n \
    \   for _, v := range l {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, element := range\
    \ l {\n        if element > max {\n            max = element\n        }\n    }\n\
    \    return max\n}\n", "    var max int = l[0]\n    for _, i := range l {\n  \
    \      if i > max {\n            max = i\n        }\n    }\n    return max\n}\n",
  "    var max int\n    for _, i := range l {\n        if i > max {\n            max\
    \ = i\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n\n    var max = l[0]\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  var max int = l[0]\n    for _, v := range l {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := l[0]\n    for _, i := range l {\n        if i > max {\n            max\
    \ = i\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    if\
    \ len(l) == 1 {\n        return l[0]\n    }\n\n    max := l[0]\n    for _, x :=\
    \ range l[1:] {\n        if x > max {\n            max = x\n        }\n    }\n\
    \n    return max\n}\n", "    max := l[0]\n    for _, n := range l {\n        if\
    \ n > max {\n            max = n\n        }\n    }\n    return max\n}\n", "  \
    \  var max int\n    for _, i := range l {\n        if i > max {\n            max\
    \ = i\n        }\n    }\n    return max\n}\n", "    res := l[0]\n    for _, v\
    \ := range l {\n        if v > res {\n            res = v\n        }\n    }\n\
    \    return res\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    max\
    \ := l[0]\n    for _, e := range l {\n        if e > max {\n            max =\
    \ e\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for _, v :=\
    \ range l {\n        if v > max {\n            max = v\n        }\n    }\n   \
    \ return max\n}\n", "    max := l[0]\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n    return max\n}\n", "    var max int\n    for _, e :=\
    \ range l {\n        if e > max {\n            max = e\n        }\n    }\n   \
    \ return max\n}\n", "    var max int\n    for i, _ := range l {\n        if i\
    \ == 0 {\n            max = l[i]\n        } else if l[i] > max {\n           \
    \ max = l[i]\n        }\n    }\n    return max\n}\n", "    max := l[0]\n    for\
    \ _, num := range l {\n        if num > max {\n            max = num\n       \
    \ }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    var max int = l[0]\n    for _, i := range l {\n        if i > max {\n\
    \            max = i\n        }\n    }\n    return max\n}\n", "    var max int\
    \ = l[0]\n    for _, v := range l {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    var max int\n    for i, val := range\
    \ l {\n        if i == 0 || val > max {\n            max = val\n        }\n  \
    \  }\n    return max\n}\n", "    var max int\n    max = l[0]\n    for _, e :=\
    \ range l {\n        if e > max {\n            max = e\n        }\n    }\n   \
    \ return max\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

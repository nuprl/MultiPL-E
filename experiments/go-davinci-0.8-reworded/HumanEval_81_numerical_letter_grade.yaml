name: HumanEval_81_numerical_letter_grade
language: go_test.go
prompt: "package numerical_letter_grade_test\n\nimport (\n    \"testing\"\n    \"\
  fmt\"\n)\n\n// It is the last week of the semester and the teacher has to give the\
  \ grades\n// to students. The teacher has been making her own algorithm for grading.\n\
  // The only problem is, she has lost the code she used for grading.\n// She has\
  \ given you a list of GPAs for some students and you have to write \n// a function\
  \ that can output a list of letter grades using the following table:\n// GPA   \
  \    |    Letter grade\n// 4.0                A+\n// > 3.7                A \n//\
  \ > 3.3                A- \n// > 3.0                B+\n// > 2.7               \
  \ B \n// > 2.3                B-\n// > 2.0                C+\n// > 1.7         \
  \       C\n// > 1.3                C-\n// > 1.0                D+ \n// > 0.7   \
  \             D \n// > 0.0                D-\n// 0.0                E\n// Example:\n\
  // >>> grade_equation([]float64{4.0, 3, 1.7, 2, 3.5})\n// []string{\"A+\", \"B\"\
  , \"C-\", \"C\", \"A-\"}\nfunc numerical_letter_grade(grades []float64) []string\
  \ {\n"
tests: "func TestNumerical_Letter_Grade(t *testing.T) {\n  candidate := numerical_letter_grade\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate([]float64{4.0, 3, 1.7, 2, 3.5}),\
  \ expected: []string{\"A+\", \"B\", \"C-\", \"C\", \"A-\"} },\n     { actual: candidate([]float64{1.2}),\
  \ expected: []string{\"D+\"} },\n     { actual: candidate([]float64{0.5}), expected:\
  \ []string{\"D-\"} },\n     { actual: candidate([]float64{0.0}), expected: []string{\"\
  E\"} },\n     { actual: candidate([]float64{1.0, 0.3, 1.5, 2.8, 3.3}), expected:\
  \ []string{\"D\", \"D-\", \"C-\", \"B\", \"B+\"} },\n     { actual: candidate([]float64{0.0,\
  \ 0.7}), expected: []string{\"E\", \"D-\"} },\n   }\n\n\tfor i, tc := range tests\
  \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif\
  \ fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\t\
  t.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    letters := []string{}\n    for _, grade := range grades {\n   \
    \     switch {\n        case grade > 4.0:\n            letters = append(letters,\
    \ \"A+\")\n        case grade > 3.7:\n            letters = append(letters, \"\
    A\")\n        case grade > 3.3:\n            letters = append(letters, \"A-\"\
    )\n        case grade > 3.0:\n            letters = append(letters, \"B+\")\n\
    \        case grade > 2.7:\n            letters = append(letters, \"B\")\n   \
    \     case grade > 2.3:\n            letters = append(letters, \"B-\")\n     \
    \   case grade > 2.0:\n            letters = append(letters, \"C+\")\n       \
    \ case grade > 1.7:\n            letters = append(letters, \"C\")\n        case\
    \ grade > 1.3:\n            letters = append(letters, \"C-\")\n        case grade\
    \ > 1.0:\n            letters = append(letters, \"D+\")\n        case grade >\
    \ 0.7:\n            letters = append(letters, \"D\")\n        case grade > 0.0:\n\
    \            letters = append(letters, \"D-\")\n        default:\n           \
    \ letters = append(letters, \"E\")\n        }\n    }\n    return letters\n}\n",
  "    res := make([]string, len(grades))\n    for i, grade := range grades {\n  \
    \      switch {\n        case grade == 4.0:\n            res[i] = \"A+\"\n   \
    \     case grade >= 3.7:\n            res[i] = \"A\"\n        case grade >= 3.3:\n\
    \            res[i] = \"A-\"\n        case grade >= 3.0:\n            res[i] =\
    \ \"B+\"\n        case grade >= 2.7:\n            res[i] = \"B\"\n        case\
    \ grade >= 2.3:\n            res[i] = \"B-\"\n        case grade >= 2.0:\n   \
    \         res[i] = \"C+\"\n        case grade >= 1.7:\n            res[i] = \"\
    C\"\n        case grade >= 1.3:\n            res[i] = \"C-\"\n        case grade\
    \ >= 1.0:\n            res[i] = \"D+\"\n        case grade >= 0.7:\n         \
    \   res[i] = \"D\"\n        case grade >= 0.0:\n            res[i] = \"D-\"\n\
    \        default:\n            res[i] = \"E\"\n        }\n    }\n    return res\n\
    }\n", "\tvar letterGrades []string\n\tfor _, element := range grades {\n\t\tif\
    \ element == 4.0 {\n\t\t\tletterGrades = append(letterGrades, \"A+\")\n\t\t} else\
    \ if element > 3.7 {\n\t\t\tletterGrades = append(letterGrades, \"A\")\n\t\t}\
    \ else if element > 3.3 {\n\t\t\tletterGrades = append(letterGrades, \"A-\")\n\
    \t\t} else if element > 3.0 {\n\t\t\tletterGrades = append(letterGrades, \"B+\"\
    )\n\t\t} else if element > 2.7 {\n\t\t\tletterGrades = append(letterGrades, \"\
    B\")\n\t\t} else if element > 2.3 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"B-\")\n\t\t} else if element > 2.0 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"C+\")\n\t\t} else if element > 1.7 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"C\")\n\t\t} else if element > 1.3 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"C-\")\n\t\t} else if element > 1.0 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"D+\")\n\t\t} else if element > 0.7 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"D\")\n\t\t} else if element > 0.0 {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"D-\")\n\t\t} else {\n\t\t\tletterGrades = append(letterGrades, \"E\")\n\t\t\
    }\n\t}\n\treturn letterGrades\n}\n", "    var letterGrades []string\n    for _,\
    \ grade := range grades {\n        if grade == 4.0 {\n            letterGrades\
    \ = append(letterGrades, \"A+\")\n        } else if grade > 3.7 {\n          \
    \  letterGrades = append(letterGrades, \"A\")\n        } else if grade > 3.3 {\n\
    \            letterGrades = append(letterGrades, \"A-\")\n        } else if grade\
    \ > 3.0 {\n            letterGrades = append(letterGrades, \"B+\")\n        }\
    \ else if grade > 2.7 {\n            letterGrades = append(letterGrades, \"B\"\
    )\n        } else if grade > 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    letter_grades := []string{}\n\
    \    for _, grade := range grades {\n        switch {\n        case grade >= 4.0:\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        case grade\
    \ >= 3.7:\n            letter_grades = append(letter_grades, \"A\")\n        case\
    \ grade >= 3.3:\n            letter_grades = append(letter_grades, \"A-\")\n \
    \       case grade >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // your code\
    \ here\n    var letter_grades []string\n    for _, grade := range grades {\n \
    \       if grade > 4.0 {\n            letter_grades = append(letter_grades, \"\
    A+\")\n        } else if grade > 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letter_grades\
    \ := []string{}\n    for _, val := range grades {\n        if val >= 4.0 {\n \
    \           letter_grades = append(letter_grades, \"A+\")\n        } else if val\
    \ >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n       \
    \ } else if val >= 3.3 {\n            letter_grades = append(letter_grades, \"\
    A-\")\n        } else if val >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if val >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if val >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if val >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if val >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if val >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if val >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if val >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if val >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letter_grades\
    \ := []string{}\n    for _, grade := range grades {\n        if grade >= 4.0 {\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        } else if\
    \ grade >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n \
    \       } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    return grades\n\
    }\n", "    // Implement your code here\n\n    return []string{}\n}\n", "    letter_grades\
    \ := []string{}\n    for _, grade := range grades {\n        if grade == 4.0 {\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        } else if\
    \ grade > 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n  \
    \      } else if grade > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, g := range grades {\n        var letter_grade string\n\
    \        if g >= 4.0 {\n            letter_grade = \"A+\"\n        } else if g\
    \ >= 3.7 {\n            letter_grade = \"A\"\n        } else if g >= 3.3 {\n \
    \           letter_grade = \"A-\"\n        } else if g >= 3.0 {\n            letter_grade\
    \ = \"B+\"\n        } else if g >= 2.7 {\n            letter_grade = \"B\"\n \
    \       } else if g >= 2.3 {\n            letter_grade = \"B-\"\n        } else\
    \ if g >= 2.0 {\n            letter_grade = \"C+\"\n        } else if g >= 1.7\
    \ {\n            letter_grade = \"C\"\n        } else if g >= 1.3 {\n        \
    \    letter_grade = \"C-\"\n        } else if g >= 1.0 {\n            letter_grade\
    \ = \"D+\"\n        } else if g >= 0.7 {\n            letter_grade = \"D\"\n \
    \       } else if g >= 0.0 {\n            letter_grade = \"D-\"\n        } else\
    \ {\n            letter_grade = \"E\"\n        }\n        letter_grades = append(letter_grades,\
    \ letter_grade)\n    }\n    return letter_grades\n}\n", "\tl := len(grades)\n\t\
    x := make([]string, l)\n\tfor i := 0; i < l; i++ {\n\t\tv := grades[i]\n\t\tif\
    \ v >= 4.0 {\n\t\t\tx[i] = \"A+\"\n\t\t} else if v >= 3.7 {\n\t\t\tx[i] = \"A\"\
    \n\t\t} else if v >= 3.3 {\n\t\t\tx[i] = \"A-\"\n\t\t} else if v >= 3.0 {\n\t\t\
    \tx[i] = \"B+\"\n\t\t} else if v >= 2.7 {\n\t\t\tx[i] = \"B\"\n\t\t} else if v\
    \ >= 2.3 {\n\t\t\tx[i] = \"B-\"\n\t\t} else if v >= 2.0 {\n\t\t\tx[i] = \"C+\"\
    \n\t\t} else if v >= 1.7 {\n\t\t\tx[i] = \"C\"\n\t\t} else if v >= 1.3 {\n\t\t\
    \tx[i] = \"C-\"\n\t\t} else if v >= 1.0 {\n\t\t\tx[i] = \"D+\"\n\t\t} else if\
    \ v >= 0.7 {\n\t\t\tx[i] = \"D\"\n\t\t} else if v >= 0.0 {\n\t\t\tx[i] = \"D-\"\
    \n\t\t} else {\n\t\t\tx[i] = \"E\"\n\t\t}\n\t}\n\treturn x\n}\n", "    // Write\
    \ your code here\n    return []string{}\n}\n", "    var letterGrades []string\n\
    \    for _, grade := range grades {\n        switch {\n        case grade >= 4.0:\n\
    \            letterGrades = append(letterGrades, \"A+\")\n        case grade >=\
    \ 3.7:\n            letterGrades = append(letterGrades, \"A\")\n        case grade\
    \ >= 3.3:\n            letterGrades = append(letterGrades, \"A-\")\n        case\
    \ grade >= 3.0:\n            letterGrades = append(letterGrades, \"B+\")\n   \
    \     case grade >= 2.7:\n            letterGrades = append(letterGrades, \"B\"\
    )\n        case grade >= 2.3:\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        case grade >= 1.3:\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        case grade >= 0.0:\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        default:\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    return grades\n}\n",
  "    var letter_grades []string\n    for _, i := range grades {\n        if i >=\
    \ 4.0 {\n            letter_grades = append(letter_grades, \"A+\")\n        }\
    \ else if i >= 3.7 {\n            letter_grades = append(letter_grades, \"A\"\
    )\n        } else if i >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if i >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if i >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if i >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if i >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if i >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if i >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if i >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if i >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if i >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var output []string\n\
    \    for _, score := range grades {\n        if score >= 4.0 {\n            output\
    \ = append(output, \"A+\")\n        } else if score >= 3.7 {\n            output\
    \ = append(output, \"A\")\n        } else if score >= 3.3 {\n            output\
    \ = append(output, \"A-\")\n        } else if score >= 3.0 {\n            output\
    \ = append(output, \"B+\")\n        } else if score >= 2.7 {\n            output\
    \ = append(output, \"B\")\n        } else if score >= 2.3 {\n            output\
    \ = append(output, \"B-\")\n        } else if score >= 2.0 {\n            output\
    \ = append(output, \"C+\")\n        } else if score >= 1.7 {\n            output\
    \ = append(output, \"C\")\n        } else if score >= 1.3 {\n            output\
    \ = append(output, \"C-\")\n        } else if score >= 1.0 {\n            output\
    \ = append(output, \"D+\")\n        } else if score >= 0.7 {\n            output\
    \ = append(output, \"D\")\n        } else if score >= 0.0 {\n            output\
    \ = append(output, \"D-\")\n        } else {\n            output = append(output,\
    \ \"E\")\n        }\n    }\n    return output\n}\n", "    // your solution here\n\
    }\n", "    var result []string\n    for _, i := range grades {\n        if i >=\
    \ 4.0 {\n            result = append(result, \"A+\")\n        } else if i >= 3.7\
    \ {\n            result = append(result, \"A\")\n        } else if i >= 3.3 {\n\
    \            result = append(result, \"A-\")\n        } else if i >= 3.0 {\n \
    \           result = append(result, \"B+\")\n        } else if i >= 2.7 {\n  \
    \          result = append(result, \"B\")\n        } else if i >= 2.3 {\n    \
    \        result = append(result, \"B-\")\n        } else if i >= 2.0 {\n     \
    \       result = append(result, \"C+\")\n        } else if i >= 1.7 {\n      \
    \      result = append(result, \"C\")\n        } else if i >= 1.3 {\n        \
    \    result = append(result, \"C-\")\n        } else if i >= 1.0 {\n         \
    \   result = append(result, \"D+\")\n        } else if i >= 0.7 {\n          \
    \  result = append(result, \"D\")\n        } else if i >= 0.0 {\n            result\
    \ = append(result, \"D-\")\n        } else {\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    letter_grades := []string{}\n\
    \    for _, grade := range grades {\n        if grade >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade >= 3.7 {\n        \
    \    letter_grades = append(letter_grades, \"A\")\n        } else if grade >=\
    \ 3.3 {\n            letter_grades = append(letter_grades, \"A-\")\n        }\
    \ else if grade >= 3.0 {\n            letter_grades = append(letter_grades, \"\
    B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letterGrades\
    \ []string\n    for _, grade := range grades {\n        if grade >= 4.0 {\n  \
    \          letterGrades = append(letterGrades, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            letterGrades = append(letterGrades, \"A\")\n        }\
    \ else if grade >= 3.3 {\n            letterGrades = append(letterGrades, \"A-\"\
    )\n        } else if grade >= 3.0 {\n            letterGrades = append(letterGrades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        switch {\n        case\
    \ grade == 4.0:\n            letter_grades = append(letter_grades, \"A+\")\n \
    \       case grade > 3.7:\n            letter_grades = append(letter_grades, \"\
    A\")\n        case grade > 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case grade > 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade > 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade > 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade > 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade > 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade > 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade > 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade > 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case grade == 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var (\n     \
    \   grade_letter []string\n        grade_key    = []string{\"A+\", \"A\", \"A-\"\
    , \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"}\n\
    \        grade_values = []float64{4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3,\
    \ 1.0, 0.7, 0.0, 0.0}\n    )\n    for _, v := range grades {\n        for i, val\
    \ := range grade_values {\n            if v >= val {\n                grade_letter\
    \ = append(grade_letter, grade_key[i])\n                break\n            }\n\
    \        }\n    }\n    return grade_letter\n}\n", "    // Write your code here!\n\
    }\n", "    var output []string\n    for _, grade := range grades {\n        switch\
    \ {\n        case grade >= 4.0:\n            output = append(output, \"A+\")\n\
    \        case grade >= 3.7:\n            output = append(output, \"A\")\n    \
    \    case grade >= 3.3:\n            output = append(output, \"A-\")\n       \
    \ case grade >= 3.0:\n            output = append(output, \"B+\")\n        case\
    \ grade >= 2.7:\n            output = append(output, \"B\")\n        case grade\
    \ >= 2.3:\n            output = append(output, \"B-\")\n        case grade >=\
    \ 2.0:\n            output = append(output, \"C+\")\n        case grade >= 1.7:\n\
    \            output = append(output, \"C\")\n        case grade >= 1.3:\n    \
    \        output = append(output, \"C-\")\n        case grade >= 1.0:\n       \
    \     output = append(output, \"D+\")\n        case grade >= 0.7:\n          \
    \  output = append(output, \"D\")\n        case grade >= 0.0:\n            output\
    \ = append(output, \"D-\")\n        default:\n            output = append(output,\
    \ \"E\")\n        }\n    }\n    return output\n}\n", "    var letterGrades []string\n\
    \n    for _, grade := range grades {\n        if grade >= 4.0 {\n            letterGrades\
    \ = append(letterGrades, \"A+\")\n        } else if grade >= 3.7 {\n         \
    \   letterGrades = append(letterGrades, \"A\")\n        } else if grade >= 3.3\
    \ {\n            letterGrades = append(letterGrades, \"A-\")\n        } else if\
    \ grade >= 3.0 {\n            letterGrades = append(letterGrades, \"B+\")\n  \
    \      } else if grade >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n\n    return letterGrades\n}\n", "    // Write your code\
    \ here.\n}\n", "  return nil\n}\n", "    var result []string\n    for _, g :=\
    \ range grades {\n        var r string\n        switch {\n        case g == 4.0:\n\
    \            r = \"A+\"\n        case g > 3.7:\n            r = \"A\"\n      \
    \  case g > 3.3:\n            r = \"A-\"\n        case g > 3.0:\n            r\
    \ = \"B+\"\n        case g > 2.7:\n            r = \"B\"\n        case g > 2.3:\n\
    \            r = \"B-\"\n        case g > 2.0:\n            r = \"C+\"\n     \
    \   case g > 1.7:\n            r = \"C\"\n        case g > 1.3:\n            r\
    \ = \"C-\"\n        case g > 1.0:\n            r = \"D+\"\n        case g > 0.7:\n\
    \            r = \"D\"\n        case g > 0.0:\n            r = \"D-\"\n      \
    \  default:\n            r = \"E\"\n        }\n        result = append(result,\
    \ r)\n    }\n    return result\n}\n", "\t// Write your code here\n    letterGrades\
    \ := []string{}\n    for _, value := range grades {\n        if value >= 4.0 {\n\
    \            letterGrades = append(letterGrades, \"A+\")\n        } else if value\
    \ >= 3.7 {\n            letterGrades = append(letterGrades, \"A\")\n        }\
    \ else if value >= 3.3 {\n            letterGrades = append(letterGrades, \"A-\"\
    )\n        } else if value >= 3.0 {\n            letterGrades = append(letterGrades,\
    \ \"B+\")\n        } else if value >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if value >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if value >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if value >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if value >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if value >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if value >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if value >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    letter_grades := []string{}\n\
    \    for _, grade := range grades {\n        if grade >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade >= 3.7 {\n        \
    \    letter_grades = append(letter_grades, \"A\")\n        } else if grade >=\
    \ 3.3 {\n            letter_grades = append(letter_grades, \"A-\")\n        }\
    \ else if grade >= 3.0 {\n            letter_grades = append(letter_grades, \"\
    B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letterGrades\
    \ := []string{}\n    for _, grade := range grades {\n        if grade == 4.0 {\n\
    \            letterGrades = append(letterGrades, \"A+\")\n        } else if grade\
    \ > 3.7 {\n            letterGrades = append(letterGrades, \"A\")\n        } else\
    \ if grade > 3.3 {\n            letterGrades = append(letterGrades, \"A-\")\n\
    \        } else if grade > 3.0 {\n            letterGrades = append(letterGrades,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    var letter_grades\
    \ []string\n    for _, v := range grades {\n        switch {\n        case v >=\
    \ 4.0:\n            letter_grades = append(letter_grades, \"A+\")\n        case\
    \ v >= 3.7:\n            letter_grades = append(letter_grades, \"A\")\n      \
    \  case v >= 3.3:\n            letter_grades = append(letter_grades, \"A-\")\n\
    \        case v >= 3.0:\n            letter_grades = append(letter_grades, \"\
    B+\")\n        case v >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case v >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case v >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case v >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case v >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case v >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case v >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case v >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case v < 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letter_grades\
    \ := []string{}\n    for _, grade := range grades {\n        letter_grade := \"\
    \"\n        if grade >= 4.0 {\n            letter_grade = \"A+\"\n        } else\
    \ if grade >= 3.7 {\n            letter_grade = \"A\"\n        } else if grade\
    \ >= 3.3 {\n            letter_grade = \"A-\"\n        } else if grade >= 3.0\
    \ {\n            letter_grade = \"B+\"\n        } else if grade >= 2.7 {\n   \
    \         letter_grade = \"B\"\n        } else if grade >= 2.3 {\n           \
    \ letter_grade = \"B-\"\n        } else if grade >= 2.0 {\n            letter_grade\
    \ = \"C+\"\n        } else if grade >= 1.7 {\n            letter_grade = \"C\"\
    \n        } else if grade >= 1.3 {\n            letter_grade = \"C-\"\n      \
    \  } else if grade >= 1.0 {\n            letter_grade = \"D+\"\n        } else\
    \ if grade >= 0.7 {\n            letter_grade = \"D\"\n        } else if grade\
    \ >= 0.0 {\n            letter_grade = \"D-\"\n        } else {\n            letter_grade\
    \ = \"E\"\n        }\n        letter_grades = append(letter_grades, letter_grade)\n\
    \    }\n    return letter_grades\n}\n", "    // Write your code here.\n    return\
    \ []string{}\n}\n", "    var result []string\n\n    for _, grade := range grades\
    \ {\n        if grade > 4.0 {\n            result = append(result, \"A+\")\n \
    \       } else if grade > 3.7 {\n            result = append(result, \"A\")\n\
    \        } else if grade > 3.3 {\n            result = append(result, \"A-\")\n\
    \        } else if grade > 3.0 {\n            result = append(result, \"B+\")\n\
    \        } else if grade > 2.7 {\n            result = append(result, \"B\")\n\
    \        } else if grade > 2.3 {\n            result = append(result, \"B-\")\n\
    \        } else if grade > 2.0 {\n            result = append(result, \"C+\")\n\
    \        } else if grade > 1.7 {\n            result = append(result, \"C\")\n\
    \        } else if grade > 1.3 {\n            result = append(result, \"C-\")\n\
    \        } else if grade > 1.0 {\n            result = append(result, \"D+\")\n\
    \        } else if grade > 0.7 {\n            result = append(result, \"D\")\n\
    \        } else if grade > 0.0 {\n            result = append(result, \"D-\")\n\
    \        } else {\n            result = append(result, \"E\")\n        }\n   \
    \ }\n\n    return result\n}\n", "    gpa := []float64{4.0, 3.7, 3.3, 3.0, 2.7,\
    \ 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0}\n    letters := []string{\"A+\", \"A\", \"\
    A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"\
    E\"}\n    var result []string\n    for _, n := range grades {\n        if n ==\
    \ 4.0 {\n            result = append(result, \"A+\")\n        } else {\n     \
    \       for i, _ := range gpa {\n                if n >= gpa[i] {\n          \
    \          result = append(result, letters[i])\n                    break\n  \
    \              }\n            }\n        }\n    }\n    return result\n}\n", " \
    \   letter_grades := []string{}\n    for _, grade := range grades {\n        switch\
    \ {\n        case grade == 4.0:\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        case grade > 3.7:\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        case grade > 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case grade > 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade > 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade > 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade > 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade > 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade > 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade > 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade > 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case grade == 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // Write code\
    \ here and remove the panic()\n    panic(\"Not implemented\")\n}\n", "    output\
    \ := make([]string, len(grades))\n    for i, grade := range grades {\n       \
    \ letter_grade := \"\"\n        if grade >= 4.0 {\n            letter_grade =\
    \ \"A+\"\n        } else if grade >= 3.7 {\n            letter_grade = \"A\"\n\
    \        } else if grade >= 3.3 {\n            letter_grade = \"A-\"\n       \
    \ } else if grade >= 3.0 {\n            letter_grade = \"B+\"\n        } else\
    \ if grade >= 2.7 {\n            letter_grade = \"B\"\n        } else if grade\
    \ >= 2.3 {\n            letter_grade = \"B-\"\n        } else if grade >= 2.0\
    \ {\n            letter_grade = \"C+\"\n        } else if grade >= 1.7 {\n   \
    \         letter_grade = \"C\"\n        } else if grade >= 1.3 {\n           \
    \ letter_grade = \"C-\"\n        } else if grade >= 1.0 {\n            letter_grade\
    \ = \"D+\"\n        } else if grade >= 0.7 {\n            letter_grade = \"D\"\
    \n        } else if grade >= 0.0 {\n            letter_grade = \"D-\"\n      \
    \  } else {\n            letter_grade = \"E\"\n        }\n        output[i] =\
    \ letter_grade\n    }\n    return output\n}\n", "    // TODO: fill in the blanks\n\
    \    return nil\n}\n", "    var letter_grades []string\n    for _, grade := range\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    mapping := map[float64]string{\n\
    \        4.0: \"A+\",\n        3.7: \"A\",\n        3.3: \"A-\",\n        3.0:\
    \ \"B+\",\n        2.7: \"B\",\n        2.3: \"B-\",\n        2.0: \"C+\",\n \
    \       1.7: \"C\",\n        1.3: \"C-\",\n        1.0: \"D+\",\n        0.7:\
    \ \"D\",\n        0.0: \"D-\",\n    }\n    letterGrades := make([]string, len(grades))\n\
    \    for i, grade := range grades {\n        for gpa, letterGrade := range mapping\
    \ {\n            if grade >= gpa {\n                letterGrades[i] = letterGrade\n\
    \                break\n            }\n        }\n    }\n    return letterGrades\n\
    }\n", "    const (\n        A_plus = iota\n        A\n        A_minus\n      \
    \  B_plus\n        B\n        B_minus\n        C_plus\n        C\n        C_minus\n\
    \        D_plus\n        D\n        D_minus\n        E\n    )\n    var grade_string\
    \ []string\n    for _, grade := range grades {\n        switch {\n        case\
    \ grade == 4.0:\n            grade_string = append(grade_string, \"A+\")\n   \
    \     case grade > 3.7:\n            grade_string = append(grade_string, \"A\"\
    )\n        case grade > 3.3:\n            grade_string = append(grade_string,\
    \ \"A-\")\n        case grade > 3.0:\n            grade_string = append(grade_string,\
    \ \"B+\")\n        case grade > 2.7:\n            grade_string = append(grade_string,\
    \ \"B\")\n        case grade > 2.3:\n            grade_string = append(grade_string,\
    \ \"B-\")\n        case grade > 2.0:\n            grade_string = append(grade_string,\
    \ \"C+\")\n        case grade > 1.7:\n            grade_string = append(grade_string,\
    \ \"C\")\n        case grade > 1.3:\n            grade_string = append(grade_string,\
    \ \"C-\")\n        case grade > 1.0:\n            grade_string = append(grade_string,\
    \ \"D+\")\n        case grade > 0.7:\n            grade_string = append(grade_string,\
    \ \"D\")\n        case grade > 0.0:\n            grade_string = append(grade_string,\
    \ \"D-\")\n        case grade == 0.0:\n            grade_string = append(grade_string,\
    \ \"E\")\n        }\n    }\n    return grade_string\n}\n", "    // Write your\
    \ code here.\n    return nil\n}\n", "    // Write your code here\n    for i, grade\
    \ := range grades {\n        switch {\n        case grade > 4.0:\n           \
    \ grades[i] = 4.0\n        case grade < 0.0:\n            grades[i] = 0.0\n  \
    \      }\n    }\n    fmt.Println(grades)\n    result := make([]string, len(grades))\n\
    \    for i, grade := range grades {\n        switch {\n        case grade == 4.0:\n\
    \            result[i] = \"A+\"\n        case grade >= 3.7:\n            result[i]\
    \ = \"A\"\n        case grade >= 3.3:\n            result[i] = \"A-\"\n      \
    \  case grade >= 3.0:\n            result[i] = \"B+\"\n        case grade >= 2.7:\n\
    \            result[i] = \"B\"\n        case grade >= 2.3:\n            result[i]\
    \ = \"B-\"\n        case grade >= 2.0:\n            result[i] = \"C+\"\n     \
    \   case grade >= 1.7:\n            result[i] = \"C\"\n        case grade >= 1.3:\n\
    \            result[i] = \"C-\"\n        case grade >= 1.0:\n            result[i]\
    \ = \"D+\"\n        case grade >= 0.7:\n            result[i] = \"D\"\n      \
    \  case grade >= 0.0:\n            result[i] = \"D-\"\n        default:\n    \
    \        result[i] = \"E\"\n        }\n    }\n    return result\n}\n", "    //\
    \ Write your code here\n    return []string{}\n}\n", "    var letters []string\n\
    \    for _, v := range grades {\n        if v == 4.0 {\n            letters =\
    \ append(letters, \"A+\")\n        } else if v > 3.7 {\n            letters =\
    \ append(letters, \"A\")\n        } else if v > 3.3 {\n            letters = append(letters,\
    \ \"A-\")\n        } else if v > 3.0 {\n            letters = append(letters,\
    \ \"B+\")\n        } else if v > 2.7 {\n            letters = append(letters,\
    \ \"B\")\n        } else if v > 2.3 {\n            letters = append(letters, \"\
    B-\")\n        } else if v > 2.0 {\n            letters = append(letters, \"C+\"\
    )\n        } else if v > 1.7 {\n            letters = append(letters, \"C\")\n\
    \        } else if v > 1.3 {\n            letters = append(letters, \"C-\")\n\
    \        } else if v > 1.0 {\n            letters = append(letters, \"D+\")\n\
    \        } else if v > 0.7 {\n            letters = append(letters, \"D\")\n \
    \       } else if v > 0.0 {\n            letters = append(letters, \"D-\")\n \
    \       } else {\n            letters = append(letters, \"E\")\n        }\n  \
    \  }\n    return letters\n}\n", "\toutput := make([]string, len(grades))\n\tfor\
    \ i, g := range grades {\n\t\tswitch {\n\t\tcase g >= 4.0:\n\t\t\toutput[i] =\
    \ \"A+\"\n\t\tcase g >= 3.7:\n\t\t\toutput[i] = \"A\"\n\t\tcase g >= 3.3:\n\t\t\
    \toutput[i] = \"A-\"\n\t\tcase g >= 3.0:\n\t\t\toutput[i] = \"B+\"\n\t\tcase g\
    \ >= 2.7:\n\t\t\toutput[i] = \"B\"\n\t\tcase g >= 2.3:\n\t\t\toutput[i] = \"B-\"\
    \n\t\tcase g >= 2.0:\n\t\t\toutput[i] = \"C+\"\n\t\tcase g >= 1.7:\n\t\t\toutput[i]\
    \ = \"C\"\n\t\tcase g >= 1.3:\n\t\t\toutput[i] = \"C-\"\n\t\tcase g >= 1.0:\n\t\
    \t\toutput[i] = \"D+\"\n\t\tcase g >= 0.7:\n\t\t\toutput[i] = \"D\"\n\t\tcase\
    \ g >= 0.0:\n\t\t\toutput[i] = \"D-\"\n\t\tdefault:\n\t\t\toutput[i] = \"E\"\n\
    \t\t}\n\t}\n\treturn output\n}\n", "    // Write your code here\n    return []string{}\n\
    }\n", "    var letter_grades []string\n    for _, grade := range grades {\n  \
    \      if grade == 4.0 {\n            letter_grades = append(letter_grades, \"\
    A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // create a map\
    \ of GPA to letter grade\n    grades_map := map[float64]string{\n        4.0:\
    \ \"A+\",\n        3.7: \"A\",\n        3.3: \"A-\",\n        3.0: \"B+\",\n \
    \       2.7: \"B\",\n        2.3: \"B-\",\n        2.0: \"C+\",\n        1.7:\
    \ \"C\",\n        1.3: \"C-\",\n        1.0: \"D+\",\n        0.7: \"D\",\n  \
    \      0.0: \"D-\",\n    }\n    // initialize a new map to hold the result\n \
    \   result := make([]string, len(grades))\n    // loop through the array\n   \
    \ for i, grade := range grades {\n        for gpa, letter := range grades_map\
    \ {\n            if grade >= gpa {\n                result[i] = letter\n     \
    \           break\n            }\n        }\n    }\n    return result\n}\n", " \
    \   var letterGrades []string\n    for _, grade := range grades {\n        if\
    \ grade >= 4.0 {\n            letterGrades = append(letterGrades, \"A+\")\n  \
    \      } else if grade >= 3.7 {\n            letterGrades = append(letterGrades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letterGrades = append(letterGrades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letterGrades = append(letterGrades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    var letterGrades []string\n\
    \n    for _, grade := range grades {\n        if grade >= 4.0 {\n            letterGrades\
    \ = append(letterGrades, \"A+\")\n        } else if grade >= 3.7 {\n         \
    \   letterGrades = append(letterGrades, \"A\")\n        } else if grade >= 3.3\
    \ {\n            letterGrades = append(letterGrades, \"A-\")\n        } else if\
    \ grade >= 3.0 {\n            letterGrades = append(letterGrades, \"B+\")\n  \
    \      } else if grade >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n\n    return letterGrades\n}\n", "    var result []string\n\
    \n    for _, x := range grades {\n        if x >= 4.0 {\n            result =\
    \ append(result, \"A+\")\n        } else if x >= 3.7 {\n            result = append(result,\
    \ \"A\")\n        } else if x >= 3.3 {\n            result = append(result, \"\
    A-\")\n        } else if x >= 3.0 {\n            result = append(result, \"B+\"\
    )\n        } else if x >= 2.7 {\n            result = append(result, \"B\")\n\
    \        } else if x >= 2.3 {\n            result = append(result, \"B-\")\n \
    \       } else if x >= 2.0 {\n            result = append(result, \"C+\")\n  \
    \      } else if x >= 1.7 {\n            result = append(result, \"C\")\n    \
    \    } else if x >= 1.3 {\n            result = append(result, \"C-\")\n     \
    \   } else if x >= 1.0 {\n            result = append(result, \"D+\")\n      \
    \  } else if x >= 0.7 {\n            result = append(result, \"D\")\n        }\
    \ else if x >= 0.0 {\n            result = append(result, \"D-\")\n        } else\
    \ {\n            result = append(result, \"E\")\n        }\n    }\n\n    return\
    \ result\n}\n", "    // To solve this problem, we need to find a way to relate\
    \ the inputs and\n    // outputs. Since the inputs are floats and the outputs\
    \ are strings, we\n    // can create a map of float:string. This will create a\
    \ key:value pair\n    // which will allow us to map inputs to outputs\n    grade_map\
    \ := map[float64]string{\n        4.0: \"A+\",\n        3.7: \"A\",\n        3.3:\
    \ \"A-\",\n        3.0: \"B+\",\n        2.7: \"B\",\n        2.3: \"B-\",\n \
    \       2.0: \"C+\",\n        1.7: \"C\",\n        1.3: \"C-\",\n        1.0:\
    \ \"D+\",\n        0.7: \"D\",\n        0.0: \"D-\",\n        -1.0: \"E\",\n \
    \   }\n    // Now that we have a map, we need to create an empty slice of strings\n\
    \    // to store the values we will return.\n    letter_grades := []string{}\n\
    \    // Now we will iterate through the input slice and assign each value to\n\
    \    // the temp_gpa variable\n    for _, temp_gpa := range grades {\n       \
    \ // If the grade is less than 0.7 but greater than 0.0, we will add\n       \
    \ // 0.1 to the grade to handle rounding errors.\n        if temp_gpa >= 0.0 &&\
    \ temp_gpa < 0.7 {\n            temp_gpa += 0.1\n        }\n        // We will\
    \ use the int() function to convert the float grade to an\n        // integer.\
    \ Next, we will divide the grade by 0.1 and convert the\n        // result back\
    \ to a float. This will allow us to use only the\n        // integer portion of\
    \ the grade.\n        temp_gpa = float64(int(temp_gpa/0.1))*0.1\n        // To\
    \ handle non-integer grades (such as 1.9999), we will add 0.1 if\n        // the\
    \ grade is greater than 3.4 and less than 4.0. This will ensure\n        // that\
    \ the grade is rounded up to the next grade.\n        if temp_gpa >=", "    return\
    \ []string{}\n}\n", "\tvar letter_grades []string\n\tfor _, grade := range grades\
    \ {\n\t\tif grade >= 4.0 {\n\t\t\tletter_grades = append(letter_grades, \"A+\"\
    )\n\t\t} else if grade >= 3.7 {\n\t\t\tletter_grades = append(letter_grades, \"\
    A\")\n\t\t} else if grade >= 3.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"A-\")\n\t\t} else if grade >= 3.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B+\")\n\t\t} else if grade >= 2.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B\")\n\t\t} else if grade >= 2.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B-\")\n\t\t} else if grade >= 2.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C+\")\n\t\t} else if grade >= 1.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C\")\n\t\t} else if grade >= 1.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C-\")\n\t\t} else if grade >= 1.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D+\")\n\t\t} else if grade >= 0.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D\")\n\t\t} else if grade >= 0.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D-\")\n\t\t} else {\n\t\t\tletter_grades = append(letter_grades, \"E\")\n\t\
    \t}\n\t}\n\treturn letter_grades\n}\n", "  var letter_grades []string\n  for _,\
    \ grade := range grades {\n    if grade >= 4.0 {\n      letter_grades = append(letter_grades,\
    \ \"A+\")\n    } else if grade >= 3.7 {\n      letter_grades = append(letter_grades,\
    \ \"A\")\n    } else if grade >= 3.3 {\n      letter_grades = append(letter_grades,\
    \ \"A-\")\n    } else if grade >= 3.0 {\n      letter_grades = append(letter_grades,\
    \ \"B+\")\n    } else if grade >= 2.7 {\n      letter_grades = append(letter_grades,\
    \ \"B\")\n    } else if grade >= 2.3 {\n      letter_grades = append(letter_grades,\
    \ \"B-\")\n    } else if grade >= 2.0 {\n      letter_grades = append(letter_grades,\
    \ \"C+\")\n    } else if grade >= 1.7 {\n      letter_grades = append(letter_grades,\
    \ \"C\")\n    } else if grade >= 1.3 {\n      letter_grades = append(letter_grades,\
    \ \"C-\")\n    } else if grade >= 1.0 {\n      letter_grades = append(letter_grades,\
    \ \"D+\")\n    } else if grade >= 0.7 {\n      letter_grades = append(letter_grades,\
    \ \"D\")\n    } else if grade >= 0.0 {\n      letter_grades = append(letter_grades,\
    \ \"D-\")\n    } else {\n      letter_grades = append(letter_grades, \"E\")\n\
    \    }\n  }\n  return letter_grades\n}\n", "    return nil\n}\n", "    var results\
    \ []string\n    for _, grade := range grades {\n        if grade == 4.0 {\n  \
    \          results = append(results, \"A+\")\n        } else if grade > 3.7 {\n\
    \            results = append(results, \"A\")\n        } else if grade > 3.3 {\n\
    \            results = append(results, \"A-\")\n        } else if grade > 3.0\
    \ {\n            results = append(results, \"B+\")\n        } else if grade >\
    \ 2.7 {\n            results = append(results, \"B\")\n        } else if grade\
    \ > 2.3 {\n            results = append(results, \"B-\")\n        } else if grade\
    \ > 2.0 {\n            results = append(results, \"C+\")\n        } else if grade\
    \ > 1.7 {\n            results = append(results, \"C\")\n        } else if grade\
    \ > 1.3 {\n            results = append(results, \"C-\")\n        } else if grade\
    \ > 1.0 {\n            results = append(results, \"D+\")\n        } else if grade\
    \ > 0.7 {\n            results = append(results, \"D\")\n        } else if grade\
    \ > 0.0 {\n            results = append(results, \"D-\")\n        } else {\n \
    \           results = append(results, \"E\")\n        }\n    }\n    return results\n\
    }\n", "\tvar newGrades []string\n\tfor _, grade := range grades {\n\t\tif grade\
    \ == 4.0 {\n\t\t\tnewGrades = append(newGrades, \"A+\")\n\t\t} else if grade >\
    \ 3.7 {\n\t\t\tnewGrades = append(newGrades, \"A\")\n\t\t} else if grade > 3.3\
    \ {\n\t\t\tnewGrades = append(newGrades, \"A-\")\n\t\t} else if grade > 3.0 {\n\
    \t\t\tnewGrades = append(newGrades, \"B+\")\n\t\t} else if grade > 2.7 {\n\t\t\
    \tnewGrades = append(newGrades, \"B\")\n\t\t} else if grade > 2.3 {\n\t\t\tnewGrades\
    \ = append(newGrades, \"B-\")\n\t\t} else if grade > 2.0 {\n\t\t\tnewGrades =\
    \ append(newGrades, \"C+\")\n\t\t} else if grade > 1.7 {\n\t\t\tnewGrades = append(newGrades,\
    \ \"C\")\n\t\t} else if grade > 1.3 {\n\t\t\tnewGrades = append(newGrades, \"\
    C-\")\n\t\t} else if grade > 1.0 {\n\t\t\tnewGrades = append(newGrades, \"D+\"\
    )\n\t\t} else if grade > 0.7 {\n\t\t\tnewGrades = append(newGrades, \"D\")\n\t\
    \t} else if grade > 0.0 {\n\t\t\tnewGrades = append(newGrades, \"D-\")\n\t\t}\
    \ else {\n\t\t\tnewGrades = append(newGrades, \"E\")\n\t\t}\n\t}\n\treturn newGrades\n\
    }\n", "    var letter_grades []string\n    for _, grade := range grades {\n  \
    \      if grade >= 4.0 {\n            letter_grades = append(letter_grades, \"\
    A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // Write your\
    \ code here\n    res := make([]string, len(grades))\n    for k, v := range grades\
    \ {\n        switch {\n        case v > 4.0:\n            res[k] = \"A+\"\n  \
    \      case v > 3.7:\n            res[k] = \"A\"\n        case v > 3.3:\n    \
    \        res[k] = \"A-\"\n        case v > 3.0:\n            res[k] = \"B+\"\n\
    \        case v > 2.7:\n            res[k] = \"B\"\n        case v > 2.3:\n  \
    \          res[k] = \"B-\"\n        case v > 2.0:\n            res[k] = \"C+\"\
    \n        case v > 1.7:\n            res[k] = \"C\"\n        case v > 1.3:\n \
    \           res[k] = \"C-\"\n        case v > 1.0:\n            res[k] = \"D+\"\
    \n        case v > 0.7:\n            res[k] = \"D\"\n        case v > 0.0:\n \
    \           res[k] = \"D-\"\n        default:\n            res[k] = \"E\"\n  \
    \      }\n    }\n    return res\n}\n", "    var letterGrades []string\n    for\
    \ _, grade := range grades {\n        if grade == 4.0 {\n            letterGrades\
    \ = append(letterGrades, \"A+\")\n        } else if grade >= 3.7 {\n         \
    \   letterGrades = append(letterGrades, \"A\")\n        } else if grade >= 3.3\
    \ {\n            letterGrades = append(letterGrades, \"A-\")\n        } else if\
    \ grade >= 3.0 {\n            letterGrades = append(letterGrades, \"B+\")\n  \
    \      } else if grade >= 2.7 {\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        } else {\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    grade_scale := []float64{4.0,\
    \ 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0}\n    letters := []string{\"\
    A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"\
    D\", \"D-\", \"E\"}\n    letter_grades := []string{}\n    for _,g := range grades\
    \ {\n        i := 0\n        for ; i < len(grade_scale) && g < grade_scale[i];\
    \ i++ {\n        }\n        letter_grades = append(letter_grades, letters[i])\n\
    \    }\n    return letter_grades\n}\n", "    var f_grades []string\n    for _,\
    \ score := range grades {\n        if score >= 4.0 {\n            f_grades = append(f_grades,\
    \ \"A+\")\n        } else if score >= 3.7 {\n            f_grades = append(f_grades,\
    \ \"A\")\n        } else if score >= 3.3 {\n            f_grades = append(f_grades,\
    \ \"A-\")\n        } else if score >= 3.0 {\n            f_grades = append(f_grades,\
    \ \"B+\")\n        } else if score >= 2.7 {\n            f_grades = append(f_grades,\
    \ \"B\")\n        } else if score >= 2.3 {\n            f_grades = append(f_grades,\
    \ \"B-\")\n        } else if score >= 2.0 {\n            f_grades = append(f_grades,\
    \ \"C+\")\n        } else if score >= 1.7 {\n            f_grades = append(f_grades,\
    \ \"C\")\n        } else if score >= 1.3 {\n            f_grades = append(f_grades,\
    \ \"C-\")\n        } else if score >= 1.0 {\n            f_grades = append(f_grades,\
    \ \"D+\")\n        } else if score >= 0.7 {\n            f_grades = append(f_grades,\
    \ \"D\")\n        } else if score >= 0.0 {\n            f_grades = append(f_grades,\
    \ \"D-\")\n        } else {\n            f_grades = append(f_grades, \"E\")\n\
    \        }\n    }\n    return f_grades\n}\n", "    // your code here\n    var\
    \ letterGrades []string\n    return letterGrades\n}\n", "    // loop through each\
    \ grade\n    // convert each grade to a letter grade according to the grading\
    \ system\n    // return the array of letter grades\n    var letter_grades []string\n\
    \    for _, grade := range grades {\n        if grade >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade >= 3.7 {\n        \
    \    letter_grades = append(letter_grades, \"A\")\n        } else if grade >=\
    \ 3.3 {\n            letter_grades = append(letter_grades, \"A-\")\n        }\
    \ else if grade >= 3.0 {\n            letter_grades = append(letter_grades, \"\
    B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        if grade == 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if grade\
    \ > 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n        }\
    \ else if grade > 3.3 {\n            letter_grades = append(letter_grades, \"\
    A-\")\n        } else if grade > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letter_grades\
    \ := []string{}\n    for _, value := range grades {\n        if value == 4.0 {\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        } else if\
    \ value > 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n  \
    \      } else if value > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if value > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if value > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if value > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if value > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if value > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if value > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if value > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if value > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if value > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var students_grades\
    \ []string\n    for _, grade := range grades {\n        if grade >= 4.0 {\n  \
    \          students_grades = append(students_grades, \"A+\")\n        } else if\
    \ grade >= 3.7 {\n            students_grades = append(students_grades, \"A\"\
    )\n        } else if grade >= 3.3 {\n            students_grades = append(students_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            students_grades = append(students_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            students_grades = append(students_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            students_grades = append(students_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            students_grades = append(students_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            students_grades = append(students_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            students_grades = append(students_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            students_grades = append(students_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            students_grades = append(students_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            students_grades = append(students_grades,\
    \ \"D-\")\n        } else {\n            students_grades = append(students_grades,\
    \ \"E\")\n        }\n    }\n    return students_grades\n}\n", "    result := make([]string,\
    \ len(grades))\n    for i, num := range grades {\n        letter := \"\"\n   \
    \     if num >= 4.0 {\n            letter = \"A+\"\n        } else if num >= 3.7\
    \ {\n            letter = \"A\"\n        } else if num >= 3.3 {\n            letter\
    \ = \"A-\"\n        } else if num >= 3.0 {\n            letter = \"B+\"\n    \
    \    } else if num >= 2.7 {\n            letter = \"B\"\n        } else if num\
    \ >= 2.3 {\n            letter = \"B-\"\n        } else if num >= 2.0 {\n    \
    \        letter = \"C+\"\n        } else if num >= 1.7 {\n            letter =\
    \ \"C\"\n        } else if num >= 1.3 {\n            letter = \"C-\"\n       \
    \ } else if num >= 1.0 {\n            letter = \"D+\"\n        } else if num >=\
    \ 0.7 {\n            letter = \"D\"\n        } else if num >= 0.0 {\n        \
    \    letter = \"D-\"\n        } else {\n            letter = \"E\"\n        }\n\
    \        result[i] = letter\n    }\n    return result\n}\n", "    // Declare a\
    \ variable to store results (a slice of strings)\n    var letter_grades []string\n\
    \n    // Create a map that stores grade points\n    grade_points := map[float64]string{\n\
    \        4.0: \"A+\",\n        3.7: \"A\",\n        3.3: \"A-\",\n        3.0:\
    \ \"B+\",\n        2.7: \"B\",\n        2.3: \"B-\",\n        2.0: \"C+\",\n \
    \       1.7: \"C\",\n        1.3: \"C-\",\n        1.0: \"D+\",\n        0.7:\
    \ \"D\",\n        0.0: \"D-\",\n    }\n\n    // Iterate over each numeric grade\
    \ and append the letter grade\n    // to the list of results\n    for _, grade\
    \ := range grades {\n        // Reset the letter grade to an empty string\n  \
    \      letter_grade := \"\"\n\n        // Iterate over each possible grade point\
    \ in the map\n        for grade_point, letter := range grade_points {\n      \
    \      // Find the grade point that the current numeric grade is greater than\n\
    \            if grade >= grade_point {\n                // Then set the letter\
    \ grade to that letter grade\n                letter_grade = letter\n        \
    \        break\n            }\n        }\n\n        // No letter grade was found,\
    \ so set the letter grade to E\n        if letter_grade == \"\" {\n          \
    \  letter_grade = \"E\"\n        }\n\n        // Append the letter grade to the\
    \ list of results\n        letter_grades = append(letter_grades, letter_grade)\n\
    \    }\n\n    // Return the list of results\n    return letter_grades\n}\n", " \
    \   var res []string\n    for _, g := range grades {\n        switch {\n     \
    \   case g >= 4.0:\n            res = append(res, \"A+\")\n        case g >= 3.7:\n\
    \            res = append(res, \"A\")\n        case g >= 3.3:\n            res\
    \ = append(res, \"A-\")\n        case g >= 3.0:\n            res = append(res,\
    \ \"B+\")\n        case g >= 2.7:\n            res = append(res, \"B\")\n    \
    \    case g >= 2.3:\n            res = append(res, \"B-\")\n        case g >=\
    \ 2.0:\n            res = append(res, \"C+\")\n        case g >= 1.7:\n      \
    \      res = append(res, \"C\")\n        case g >= 1.3:\n            res = append(res,\
    \ \"C-\")\n        case g >= 1.0:\n            res = append(res, \"D+\")\n   \
    \     case g >= 0.7:\n            res = append(res, \"D\")\n        case g >=\
    \ 0.0:\n            res = append(res, \"D-\")\n        default:\n            res\
    \ = append(res, \"E\")\n        }\n    }\n    return res\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        if grade == 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if grade\
    \ > 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n        }\
    \ else if grade > 3.3 {\n            letter_grades = append(letter_grades, \"\
    A-\")\n        } else if grade > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        if grade >= 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n       \
    \ } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    letter_grades = append(letter_grades, \"E\")\n    letter_grades\
    \ = append(letter_grades, \"D-\")\n    letter_grades = append(letter_grades, \"\
    D\")\n    letter_grades = append(letter_grades, \"D+\")\n    letter_grades = append(letter_grades,\
    \ \"C-\")\n    letter_grades = append(letter_grades, \"C\")\n    letter_grades\
    \ = append(letter_grades, \"C+\")\n    letter_grades = append(letter_grades, \"\
    B-\")\n    letter_grades = append(letter_grades, \"B\")\n    letter_grades = append(letter_grades,\
    \ \"B+\")\n    letter_grades = append(letter_grades, \"A-\")\n    letter_grades\
    \ = append(letter_grades, \"A\")\n    letter_grades = append(letter_grades, \"\
    A+\")\n    var output []string\n    for _, grade := range grades {\n        if\
    \ grade >= 4.0 {\n            output = append(output, letter_grades[12])\n   \
    \     } else if grade >= 3.7 {\n            output = append(output, letter_grades[11])\n\
    \        } else if grade >= 3.3 {\n            output = append(output, letter_grades[10])\n\
    \        } else if grade >= 3.0 {\n            output = append(output, letter_grades[9])\n\
    \        } else if grade >= 2.7 {\n            output = append(output, letter_grades[8])\n\
    \        } else if grade >= 2.3 {\n            output = append(output, letter_grades[7])\n\
    \        } else if grade >= 2.0 {\n            output = append(output, letter_grades[6])\n\
    \        } else if grade >= 1.7 {\n            output = append(output, letter_grades[5])\n\
    \        } else if grade >= 1.3 {\n            output = append(output, letter_grades[4])\n\
    \        } else if grade >= 1.0 {\n            output = append(output, letter_grades[3])\n\
    \        } else if grade >= 0.7 {\n            output = append(output, letter_grades[2])\n\
    \        } else if grade >= 0.0 {\n", "    // Convert numerical grade to letter\
    \ grade\n    var letterGrade string\n    gradesLen := len(grades)\n    letterGrades\
    \ := make([]string, gradesLen)\n    for i := 0; i < gradesLen; i++ {\n       \
    \ switch {\n        case grades[i] == 4.0:\n            letterGrade = \"A+\"\n\
    \        case grades[i] > 3.7:\n            letterGrade = \"A\"\n        case\
    \ grades[i] > 3.3:\n            letterGrade = \"A-\"\n        case grades[i] >\
    \ 3.0:\n            letterGrade = \"B+\"\n        case grades[i] > 2.7:\n    \
    \        letterGrade = \"B\"\n        case grades[i] > 2.3:\n            letterGrade\
    \ = \"B-\"\n        case grades[i] > 2.0:\n            letterGrade = \"C+\"\n\
    \        case grades[i] > 1.7:\n            letterGrade = \"C\"\n        case\
    \ grades[i] > 1.3:\n            letterGrade = \"C-\"\n        case grades[i] >\
    \ 1.0:\n            letterGrade = \"D+\"\n        case grades[i] > 0.7:\n    \
    \        letterGrade = \"D\"\n        case grades[i] >= 0.0:\n            letterGrade\
    \ = \"D-\"\n        default:\n            letterGrade = \"E\"\n        }\n   \
    \     letterGrades[i] = letterGrade\n    }\n    return letterGrades\n}\n", " \
    \   // Insert your code here\n    fmt.Printf(\"\\n\")\n    // return []string\n\
    \    return []string{\"A+\", \"B\", \"C-\", \"C\", \"A-\"}\n}\n", "    letters\
    \ := []string{\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"\
    C-\", \"D+\", \"D\", \"D-\", \"E\"}\n    numerical := []float64{4.0, 3.7, 3.3,\
    \ 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0}\n    result := []string{}\n\
    \    for _, grade := range grades {\n        for i, num := range numerical {\n\
    \            if grade >= num {\n                result = append(result, letters[i])\n\
    \                break\n            }\n        }\n    }\n    return result\n}\n",
  "    var letter_grades []string\n    for _, grade := range grades {\n        switch\
    \ {\n        case grade >= 4.0:\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        case grade >= 3.7:\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        case grade >= 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case grade >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "\tvar result []string\n\
    \t\n\tfor _, e := range grades {\n\t\tif e >= 4.0 {\n\t\t\tresult = append(result,\
    \ \"A+\")\n\t\t} else if e > 3.7 {\n\t\t\tresult = append(result, \"A\")\n\t\t\
    } else if e > 3.3 {\n\t\t\tresult = append(result, \"A-\")\n\t\t} else if e >\
    \ 3.0 {\n\t\t\tresult = append(result, \"B+\")\n\t\t} else if e > 2.7 {\n\t\t\t\
    result = append(result, \"B\")\n\t\t} else if e > 2.3 {\n\t\t\tresult = append(result,\
    \ \"B-\")\n\t\t} else if e > 2.0 {\n\t\t\tresult = append(result, \"C+\")\n\t\t\
    } else if e > 1.7 {\n\t\t\tresult = append(result, \"C\")\n\t\t} else if e > 1.3\
    \ {\n\t\t\tresult = append(result, \"C-\")\n\t\t} else if e > 1.0 {\n\t\t\tresult\
    \ = append(result, \"D+\")\n\t\t} else if e > 0.7 {\n\t\t\tresult = append(result,\
    \ \"D\")\n\t\t} else if e > 0.0 {\n\t\t\tresult = append(result, \"D-\")\n\t\t\
    } else {\n\t\t\tresult = append(result, \"E\")\n\t\t}\n\t}\n\t\n\treturn result\n\
    }\n", "    var res []string\n    for _, val := range grades {\n        if val\
    \ == 4.0 {\n            res = append(res, \"A+\")\n        } else if val > 3.7\
    \ {\n            res = append(res, \"A\")\n        } else if val > 3.3 {\n   \
    \         res = append(res, \"A-\")\n        } else if val > 3.0 {\n         \
    \   res = append(res, \"B+\")\n        } else if val > 2.7 {\n            res\
    \ = append(res, \"B\")\n        } else if val > 2.3 {\n            res = append(res,\
    \ \"B-\")\n        } else if val > 2.0 {\n            res = append(res, \"C+\"\
    )\n        } else if val > 1.7 {\n            res = append(res, \"C\")\n     \
    \   } else if val > 1.3 {\n            res = append(res, \"C-\")\n        } else\
    \ if val > 1.0 {\n            res = append(res, \"D+\")\n        } else if val\
    \ > 0.7 {\n            res = append(res, \"D\")\n        } else if val > 0.0 {\n\
    \            res = append(res, \"D-\")\n        } else {\n            res = append(res,\
    \ \"E\")\n        }\n    }\n    return res\n}\n", "    grades_letters := []string{}\n\
    \    return grades_letters\n}\n", "    //Your code here\n    return []string{}\n\
    }\n", "    num_to_letter := map[float64]string{\n        4.0: \"A+\",\n      \
    \  3.7: \"A\",\n        3.3: \"A-\",\n        3.0: \"B+\",\n        2.7: \"B\"\
    ,\n        2.3: \"B-\",\n        2.0: \"C+\",\n        1.7: \"C\",\n        1.3:\
    \ \"C-\",\n        1.0: \"D+\",\n        0.7: \"D\",\n        0.0: \"D-\",\n \
    \       -1.0: \"E\",\n    }\n    var letter_grades []string\n    for _, g := range\
    \ grades {\n        for num, letter := range num_to_letter {\n            if g\
    \ > num {\n                letter_grades = append(letter_grades, letter)\n   \
    \             break\n            }\n        }\n    }\n    return letter_grades\n\
    }\n", "    var result []string\n    for _, val := range grades {\n        if val\
    \ >= 4.0 {\n            result = append(result, \"A+\")\n        } else if val\
    \ >= 3.7 {\n            result = append(result, \"A\")\n        } else if val\
    \ >= 3.3 {\n            result = append(result, \"A-\")\n        } else if val\
    \ >= 3.0 {\n            result = append(result, \"B+\")\n        } else if val\
    \ >= 2.7 {\n            result = append(result, \"B\")\n        } else if val\
    \ >= 2.3 {\n            result = append(result, \"B-\")\n        } else if val\
    \ >= 2.0 {\n            result = append(result, \"C+\")\n        } else if val\
    \ >= 1.7 {\n            result = append(result, \"C\")\n        } else if val\
    \ >= 1.3 {\n            result = append(result, \"C-\")\n        } else if val\
    \ >= 1.0 {\n            result = append(result, \"D+\")\n        } else if val\
    \ >= 0.7 {\n            result = append(result, \"D\")\n        } else if val\
    \ >= 0.0 {\n            result = append(result, \"D-\")\n        } else {\n  \
    \          result = append(result, \"E\")\n        }\n    }\n    return result\n\
    }\n", "\tvar letter_grades []string\n\tfor _, grade := range grades {\n\t\tswitch\
    \ {\n\t\tcase grade >= 4.0:\n\t\t\tletter_grades = append(letter_grades, \"A+\"\
    )\n\t\tcase grade >= 3.7:\n\t\t\tletter_grades = append(letter_grades, \"A\")\n\
    \t\tcase grade >= 3.3:\n\t\t\tletter_grades = append(letter_grades, \"A-\")\n\t\
    \tcase grade >= 3.0:\n\t\t\tletter_grades = append(letter_grades, \"B+\")\n\t\t\
    case grade >= 2.7:\n\t\t\tletter_grades = append(letter_grades, \"B\")\n\t\tcase\
    \ grade >= 2.3:\n\t\t\tletter_grades = append(letter_grades, \"B-\")\n\t\tcase\
    \ grade >= 2.0:\n\t\t\tletter_grades = append(letter_grades, \"C+\")\n\t\tcase\
    \ grade >= 1.7:\n\t\t\tletter_grades = append(letter_grades, \"C\")\n\t\tcase\
    \ grade >= 1.3:\n\t\t\tletter_grades = append(letter_grades, \"C-\")\n\t\tcase\
    \ grade >= 1.0:\n\t\t\tletter_grades = append(letter_grades, \"D+\")\n\t\tcase\
    \ grade >= 0.7:\n\t\t\tletter_grades = append(letter_grades, \"D\")\n\t\tcase\
    \ grade >= 0.0:\n\t\t\tletter_grades = append(letter_grades, \"D-\")\n\t\tdefault:\n\
    \t\t\tletter_grades = append(letter_grades, \"E\")\n\t\t}\n\t}\n\treturn letter_grades\n\
    }\n", "    var letter_grades []string\n    var grade_char string\n    var grade\
    \ float64\n    var grade_max float64\n    grade_max = 4.0\n    for _, grade =\
    \ range grades {\n        switch {\n        case grade == grade_max:\n       \
    \     grade_char = \"A+\"\n        case grade > 3.7:\n            grade_char =\
    \ \"A\"\n        case grade > 3.3:\n            grade_char = \"A-\"\n        case\
    \ grade > 3.0:\n            grade_char = \"B+\"\n        case grade > 2.7:\n \
    \           grade_char = \"B\"\n        case grade > 2.3:\n            grade_char\
    \ = \"B-\"\n        case grade > 2.0:\n            grade_char = \"C+\"\n     \
    \   case grade > 1.7:\n            grade_char = \"C\"\n        case grade > 1.3:\n\
    \            grade_char = \"C-\"\n        case grade > 1.0:\n            grade_char\
    \ = \"D+\"\n        case grade > 0.7:\n            grade_char = \"D\"\n      \
    \  case grade > 0.0:\n            grade_char = \"D-\"\n        case grade == 0.0:\n\
    \            grade_char = \"E\"\n        }\n        letter_grades = append(letter_grades,\
    \ grade_char)\n    }\n    return letter_grades\n}\n", "    letter_grades := []string{}\n\
    \    for _, grade := range grades {\n        // fmt.Println(grade)\n        if\
    \ grade == 4.0 {\n            letter_grades = append(letter_grades, \"A+\")\n\
    \        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // YOUR CODE\
    \ HERE\n    return []string{}\n}\n", "    var letter_grades []string\n    for\
    \ _, grade := range grades {\n        if grade >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade >= 3.7 {\n        \
    \    letter_grades = append(letter_grades, \"A\")\n        } else if grade >=\
    \ 3.3 {\n            letter_grades = append(letter_grades, \"A-\")\n        }\
    \ else if grade >= 3.0 {\n            letter_grades = append(letter_grades, \"\
    B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    return nil\n\
    }\n", "    return []string{}\n}\n", "    var letter_grades []string\n    for _,\
    \ grade := range grades {\n        switch {\n        case grade > 4.0:\n     \
    \       letter_grades = append(letter_grades, \"A+\")\n        case grade > 3.7:\n\
    \            letter_grades = append(letter_grades, \"A\")\n        case grade\
    \ > 3.3:\n            letter_grades = append(letter_grades, \"A-\")\n        case\
    \ grade > 3.0:\n            letter_grades = append(letter_grades, \"B+\")\n  \
    \      case grade > 2.7:\n            letter_grades = append(letter_grades, \"\
    B\")\n        case grade > 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade > 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade > 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade > 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade > 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade > 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case grade == 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    fmt.Println(grades)\n\
    \    var result []string\n    for _, g := range grades {\n        switch {\n \
    \       case g >= 4.0:\n            result = append(result, \"A+\")\n        case\
    \ g >= 3.7:\n            result = append(result, \"A\")\n        case g >= 3.3:\n\
    \            result = append(result, \"A-\")\n        case g >= 3.0:\n       \
    \     result = append(result, \"B+\")\n        case g >= 2.7:\n            result\
    \ = append(result, \"B\")\n        case g >= 2.3:\n            result = append(result,\
    \ \"B-\")\n        case g >= 2.0:\n            result = append(result, \"C+\"\
    )\n        case g >= 1.7:\n            result = append(result, \"C\")\n      \
    \  case g >= 1.3:\n            result = append(result, \"C-\")\n        case g\
    \ >= 1.0:\n            result = append(result, \"D+\")\n        case g >= 0.7:\n\
    \            result = append(result, \"D\")\n        case g >= 0.0:\n        \
    \    result = append(result, \"D-\")\n        default:\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    var letter_grades []string\n\
    \    for _, grade := range grades {\n        if grade == 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade > 3.7 {\n         \
    \   letter_grades = append(letter_grades, \"A\")\n        } else if grade > 3.3\
    \ {\n            letter_grades = append(letter_grades, \"A-\")\n        } else\
    \ if grade > 3.0 {\n            letter_grades = append(letter_grades, \"B+\")\n\
    \        } else if grade > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    letterGrades\
    \ := []string{}\n    for _, grade := range grades {\n        switch {\n      \
    \  case grade == 4.0:\n            letterGrades = append(letterGrades, \"A+\"\
    )\n        case grade >= 3.7:\n            letterGrades = append(letterGrades,\
    \ \"A\")\n        case grade >= 3.3:\n            letterGrades = append(letterGrades,\
    \ \"A-\")\n        case grade >= 3.0:\n            letterGrades = append(letterGrades,\
    \ \"B+\")\n        case grade >= 2.7:\n            letterGrades = append(letterGrades,\
    \ \"B\")\n        case grade >= 2.3:\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        case grade >= 1.3:\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        case grade >= 0.0:\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        case grade == 0.0:\n            letterGrades = append(letterGrades,\
    \ \"E\")\n        }\n    }\n    return letterGrades\n}\n", "\tvar letterGrades\
    \ []string\n\tfor _, grade := range grades {\n\t\tif grade == 4.0 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"A+\")\n\t\t} else if grade >= 3.7 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"A\")\n\t\t} else if grade >= 3.3 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"A-\")\n\t\t} else if grade >= 3.0 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"B+\")\n\t\t} else if grade >= 2.7 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"B\")\n\t\t} else if grade >= 2.3 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"B-\")\n\t\t} else if grade >= 2.0 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"C+\")\n\t\t} else if grade >= 1.7 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"C\")\n\t\t} else if grade >= 1.3 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"C-\")\n\t\t} else if grade >= 1.0 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"D+\")\n\t\t} else if grade >= 0.7 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"D\")\n\t\t} else if grade >= 0.0 {\n\t\t\tletterGrades\
    \ = append(letterGrades, \"D-\")\n\t\t} else {\n\t\t\tletterGrades = append(letterGrades,\
    \ \"E\")\n\t\t}\n\t}\n\treturn letterGrades\n}\n", "    var letter_grades []string\n\
    \    for _, grade := range grades {\n        switch {\n        case grade >= 4.0:\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        case grade\
    \ >= 3.7:\n            letter_grades = append(letter_grades, \"A\")\n        case\
    \ grade >= 3.3:\n            letter_grades = append(letter_grades, \"A-\")\n \
    \       case grade >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "\tletterGrades :=\
    \ []string{}\n\tfor _, grade := range grades {\n\t\tif grade >= 4.0 {\n\t\t\t\
    letterGrades = append(letterGrades, \"A+\")\n\t\t} else if grade >= 3.7 {\n\t\t\
    \tletterGrades = append(letterGrades, \"A\")\n\t\t} else if grade >= 3.3 {\n\t\
    \t\tletterGrades = append(letterGrades, \"A-\")\n\t\t} else if grade >= 3.0 {\n\
    \t\t\tletterGrades = append(letterGrades, \"B+\")\n\t\t} else if grade >= 2.7\
    \ {\n\t\t\tletterGrades = append(letterGrades, \"B\")\n\t\t} else if grade >=\
    \ 2.3 {\n\t\t\tletterGrades = append(letterGrades, \"B-\")\n\t\t} else if grade\
    \ >= 2.0 {\n\t\t\tletterGrades = append(letterGrades, \"C+\")\n\t\t} else if grade\
    \ >= 1.7 {\n\t\t\tletterGrades = append(letterGrades, \"C\")\n\t\t} else if grade\
    \ >= 1.3 {\n\t\t\tletterGrades = append(letterGrades, \"C-\")\n\t\t} else if grade\
    \ >= 1.0 {\n\t\t\tletterGrades = append(letterGrades, \"D+\")\n\t\t} else if grade\
    \ >= 0.7 {\n\t\t\tletterGrades = append(letterGrades, \"D\")\n\t\t} else if grade\
    \ >= 0.0 {\n\t\t\tletterGrades = append(letterGrades, \"D-\")\n\t\t} else {\n\t\
    \t\tletterGrades = append(letterGrades, \"E\")\n\t\t}\n\t}\n\treturn letterGrades\n\
    }\n", "    var letters []string\n    for _, grade := range grades {\n        switch\
    \ {\n        case grade == 4.0:\n            letters = append(letters, \"A+\"\
    )\n        case grade > 3.7:\n            letters = append(letters, \"A\")\n \
    \       case grade > 3.3:\n            letters = append(letters, \"A-\")\n   \
    \     case grade > 3.0:\n            letters = append(letters, \"B+\")\n     \
    \   case grade > 2.7:\n            letters = append(letters, \"B\")\n        case\
    \ grade > 2.3:\n            letters = append(letters, \"B-\")\n        case grade\
    \ > 2.0:\n            letters = append(letters, \"C+\")\n        case grade >\
    \ 1.7:\n            letters = append(letters, \"C\")\n        case grade > 1.3:\n\
    \            letters = append(letters, \"C-\")\n        case grade > 1.0:\n  \
    \          letters = append(letters, \"D+\")\n        case grade > 0.7:\n    \
    \        letters = append(letters, \"D\")\n        case grade > 0.0:\n       \
    \     letters = append(letters, \"D-\")\n        case grade == 0.0:\n        \
    \    letters = append(letters, \"E\")\n        }\n    }\n    return letters\n\
    }\n", "    var letter_grades []string\n\n    for _, grade := range grades {\n\
    \        if grade >= 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n\n    return letter_grades\n}\n", "  letter_grades\
    \ := []string{}\n  for _, g := range grades {\n    switch {\n    case g >= 4.0:\n\
    \      letter_grades = append(letter_grades, \"A+\")\n    case g >= 3.7:\n   \
    \   letter_grades = append(letter_grades, \"A\")\n    case g >= 3.3:\n      letter_grades\
    \ = append(letter_grades, \"A-\")\n    case g >= 3.0:\n      letter_grades = append(letter_grades,\
    \ \"B+\")\n    case g >= 2.7:\n      letter_grades = append(letter_grades, \"\
    B\")\n    case g >= 2.3:\n      letter_grades = append(letter_grades, \"B-\")\n\
    \    case g >= 2.0:\n      letter_grades = append(letter_grades, \"C+\")\n   \
    \ case g >= 1.7:\n      letter_grades = append(letter_grades, \"C\")\n    case\
    \ g >= 1.3:\n      letter_grades = append(letter_grades, \"C-\")\n    case g >=\
    \ 1.0:\n      letter_grades = append(letter_grades, \"D+\")\n    case g >= 0.7:\n\
    \      letter_grades = append(letter_grades, \"D\")\n    case g >= 0.0:\n    \
    \  letter_grades = append(letter_grades, \"D-\")\n    default:\n      letter_grades\
    \ = append(letter_grades, \"E\")\n    }\n  }\n  return letter_grades\n}\n", " \
    \   var answer []string\n    for _, v := range grades {\n        if v == 4.0 {\n\
    \            answer = append(answer, \"A+\")\n        } else if v >= 3.7 {\n \
    \           answer = append(answer, \"A\")\n        } else if v >= 3.3 {\n   \
    \         answer = append(answer, \"A-\")\n        } else if v >= 3.0 {\n    \
    \        answer = append(answer, \"B+\")\n        } else if v >= 2.7 {\n     \
    \       answer = append(answer, \"B\")\n        } else if v >= 2.3 {\n       \
    \     answer = append(answer, \"B-\")\n        } else if v >= 2.0 {\n        \
    \    answer = append(answer, \"C+\")\n        } else if v >= 1.7 {\n         \
    \   answer = append(answer, \"C\")\n        } else if v >= 1.3 {\n           \
    \ answer = append(answer, \"C-\")\n        } else if v >= 1.0 {\n            answer\
    \ = append(answer, \"D+\")\n        } else if v >= 0.7 {\n            answer =\
    \ append(answer, \"D\")\n        } else if v >= 0.0 {\n            answer = append(answer,\
    \ \"D-\")\n        } else {\n            answer = append(answer, \"E\")\n    \
    \    }\n    }\n    return answer\n}\n", "    // START: CODE HERE\n    var alphabets\
    \ []string\n    for _, item := range grades {\n        if item == 4.0 {\n    \
    \        alphabets = append(alphabets, \"A+\")\n        } else if item > 3.7 {\n\
    \            alphabets = append(alphabets, \"A\")\n        } else if item > 3.3\
    \ {\n            alphabets = append(alphabets, \"A-\")\n        } else if item\
    \ > 3.0 {\n            alphabets = append(alphabets, \"B+\")\n        } else if\
    \ item > 2.7 {\n            alphabets = append(alphabets, \"B\")\n        } else\
    \ if item > 2.3 {\n            alphabets = append(alphabets, \"B-\")\n       \
    \ } else if item > 2.0 {\n            alphabets = append(alphabets, \"C+\")\n\
    \        } else if item > 1.7 {\n            alphabets = append(alphabets, \"\
    C\")\n        } else if item > 1.3 {\n            alphabets = append(alphabets,\
    \ \"C-\")\n        } else if item > 1.0 {\n            alphabets = append(alphabets,\
    \ \"D+\")\n        } else if item > 0.7 {\n            alphabets = append(alphabets,\
    \ \"D\")\n        } else if item > 0.0 {\n            alphabets = append(alphabets,\
    \ \"D-\")\n        } else {\n            alphabets = append(alphabets, \"E\")\n\
    \        }\n    }\n    return alphabets\n    // END: CODE HERE\n}\n", "    letterGradeList\
    \ := []string{}\n    for _, grade := range grades {\n        letterGrade := \"\
    \"\n        switch {\n        case grade >= 4.0:\n            letterGrade = \"\
    A+\"\n        case grade >= 3.7:\n            letterGrade = \"A\"\n        case\
    \ grade >= 3.3:\n            letterGrade = \"A-\"\n        case grade >= 3.0:\n\
    \            letterGrade = \"B+\"\n        case grade >= 2.7:\n            letterGrade\
    \ = \"B\"\n        case grade >= 2.3:\n            letterGrade = \"B-\"\n    \
    \    case grade >= 2.0:\n            letterGrade = \"C+\"\n        case grade\
    \ >= 1.7:\n            letterGrade = \"C\"\n        case grade >= 1.3:\n     \
    \       letterGrade = \"C-\"\n        case grade >= 1.0:\n            letterGrade\
    \ = \"D+\"\n        case grade >= 0.7:\n            letterGrade = \"D\"\n    \
    \    case grade >= 0.0:\n            letterGrade = \"D-\"\n        default:\n\
    \            letterGrade = \"E\"\n        }\n        letterGradeList = append(letterGradeList,\
    \ letterGrade)\n    }\n    return letterGradeList\n}\n", "    letter_grades :=\
    \ []string{}\n    for _, grade := range grades {\n        letter_grade := \"\"\
    \n        if grade >= 4.0 {\n            letter_grade = \"A+\"\n        } else\
    \ if grade >= 3.7 {\n            letter_grade = \"A\"\n        } else if grade\
    \ >= 3.3 {\n            letter_grade = \"A-\"\n        } else if grade >= 3.0\
    \ {\n            letter_grade = \"B+\"\n        } else if grade >= 2.7 {\n   \
    \         letter_grade = \"B\"\n        } else if grade >= 2.3 {\n           \
    \ letter_grade = \"B-\"\n        } else if grade >= 2.0 {\n            letter_grade\
    \ = \"C+\"\n        } else if grade >= 1.7 {\n            letter_grade = \"C\"\
    \n        } else if grade >= 1.3 {\n            letter_grade = \"C-\"\n      \
    \  } else if grade >= 1.0 {\n            letter_grade = \"D+\"\n        } else\
    \ if grade >= 0.7 {\n            letter_grade = \"D\"\n        } else if grade\
    \ >= 0.0 {\n            letter_grade = \"D-\"\n        } else {\n            letter_grade\
    \ = \"E\"\n        }\n        letter_grades = append(letter_grades, letter_grade)\n\
    \    }\n    return letter_grades\n}\n", "    // Write your code here.\n    return\
    \ []string{}\n}\n", "    letters := []string{\"A+\", \"A\", \"A-\", \"B+\", \"\
    B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"E\"}\n    points\
    \ := []float64{4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0, 0.7, 0.0, 0.0}\n\
    \    var results []string\n    for _,g := range grades {\n        for i,p := range\
    \ points {\n            if g >= p {\n                results = append(results,\
    \ letters[i])\n                break\n            }\n        }\n    }\n    return\
    \ results\n}\n", "    var ans []string\n    for _, grade := range grades {\n \
    \       if grade == 4.0 {\n            ans = append(ans, \"A+\")\n        } else\
    \ if grade >= 3.7 {\n            ans = append(ans, \"A\")\n        } else if grade\
    \ >= 3.3 {\n            ans = append(ans, \"A-\")\n        } else if grade >=\
    \ 3.0 {\n            ans = append(ans, \"B+\")\n        } else if grade >= 2.7\
    \ {\n            ans = append(ans, \"B\")\n        } else if grade >= 2.3 {\n\
    \            ans = append(ans, \"B-\")\n        } else if grade >= 2.0 {\n   \
    \         ans = append(ans, \"C+\")\n        } else if grade >= 1.7 {\n      \
    \      ans = append(ans, \"C\")\n        } else if grade >= 1.3 {\n          \
    \  ans = append(ans, \"C-\")\n        } else if grade >= 1.0 {\n            ans\
    \ = append(ans, \"D+\")\n        } else if grade >= 0.7 {\n            ans = append(ans,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            ans = append(ans, \"D-\"\
    )\n        } else {\n            ans = append(ans, \"E\")\n        }\n    }\n\
    \    return ans\n}\n", "    var letter_grades []string\n    for _, g := range\
    \ grades {\n        if g == 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if g > 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if g > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if g > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if g > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if g > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if g > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if g > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if g > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if g > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if g > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if g > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letters []string\n\
    \    for _, g := range grades {\n        if g >= 4.0 {\n            letters =\
    \ append(letters, \"A+\")\n        } else if g >= 3.7 {\n            letters =\
    \ append(letters, \"A\")\n        } else if g >= 3.3 {\n            letters =\
    \ append(letters, \"A-\")\n        } else if g >= 3.0 {\n            letters =\
    \ append(letters, \"B+\")\n        } else if g >= 2.7 {\n            letters =\
    \ append(letters, \"B\")\n        } else if g >= 2.3 {\n            letters =\
    \ append(letters, \"B-\")\n        } else if g >= 2.0 {\n            letters =\
    \ append(letters, \"C+\")\n        } else if g >= 1.7 {\n            letters =\
    \ append(letters, \"C\")\n        } else if g >= 1.3 {\n            letters =\
    \ append(letters, \"C-\")\n        } else if g >= 1.0 {\n            letters =\
    \ append(letters, \"D+\")\n        } else if g >= 0.7 {\n            letters =\
    \ append(letters, \"D\")\n        } else if g >= 0.0 {\n            letters =\
    \ append(letters, \"D-\")\n        } else {\n            letters = append(letters,\
    \ \"E\")\n        }\n    }\n    return letters\n}\n", "\tletter_grades := []string{}\n\
    \tfor _, v := range grades {\n\t\tif v >= 4.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"A+\")\n\t\t} else if v >= 3.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"A\")\n\t\t} else if v >= 3.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"A-\")\n\t\t} else if v >= 3.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B+\")\n\t\t} else if v >= 2.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B\")\n\t\t} else if v >= 2.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"B-\")\n\t\t} else if v >= 2.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C+\")\n\t\t} else if v >= 1.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C\")\n\t\t} else if v >= 1.3 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"C-\")\n\t\t} else if v >= 1.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D+\")\n\t\t} else if v >= 0.7 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D\")\n\t\t} else if v >= 0.0 {\n\t\t\tletter_grades = append(letter_grades,\
    \ \"D-\")\n\t\t} else {\n\t\t\tletter_grades = append(letter_grades, \"E\")\n\t\
    \t}\n\t}\n\treturn letter_grades\n}\n", "    var letter_grades []string\n\n  \
    \  for _, grade := range grades {\n        letter_grade := \"E\"\n        if grade\
    \ > 4.0 {\n            letter_grade = \"A+\"\n        } else if grade > 3.7 {\n\
    \            letter_grade = \"A\"\n        } else if grade > 3.3 {\n         \
    \   letter_grade = \"A-\"\n        } else if grade > 3.0 {\n            letter_grade\
    \ = \"B+\"\n        } else if grade > 2.7 {\n            letter_grade = \"B\"\n\
    \        } else if grade > 2.3 {\n            letter_grade = \"B-\"\n        }\
    \ else if grade > 2.0 {\n            letter_grade = \"C+\"\n        } else if\
    \ grade > 1.7 {\n            letter_grade = \"C\"\n        } else if grade > 1.3\
    \ {\n            letter_grade = \"C-\"\n        } else if grade > 1.0 {\n    \
    \        letter_grade = \"D+\"\n        } else if grade > 0.7 {\n            letter_grade\
    \ = \"D\"\n        } else if grade > 0.0 {\n            letter_grade = \"D-\"\n\
    \        } else if grade == 0.0 {\n            letter_grade = \"E\"\n        }\n\
    \        letter_grades = append(letter_grades, letter_grade)\n    }\n    return\
    \ letter_grades\n}\n", "    //TODO: implement\n    var result []string\n    for\
    \ _, value := range grades {\n        if value == 4.0 {\n            result =\
    \ append(result, \"A+\")\n        } else if value > 3.7 {\n            result\
    \ = append(result, \"A\")\n        } else if value > 3.3 {\n            result\
    \ = append(result, \"A-\")\n        } else if value > 3.0 {\n            result\
    \ = append(result, \"B+\")\n        } else if value > 2.7 {\n            result\
    \ = append(result, \"B\")\n        } else if value > 2.3 {\n            result\
    \ = append(result, \"B-\")\n        } else if value > 2.0 {\n            result\
    \ = append(result, \"C+\")\n        } else if value > 1.7 {\n            result\
    \ = append(result, \"C\")\n        } else if value > 1.3 {\n            result\
    \ = append(result, \"C-\")\n        } else if value > 1.0 {\n            result\
    \ = append(result, \"D+\")\n        } else if value > 0.7 {\n            result\
    \ = append(result, \"D\")\n        } else if value > 0.0 {\n            result\
    \ = append(result, \"D-\")\n        } else {\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    return nil\n}\n", " \
    \   var letter_grades []string\n    letter_grades = append(letter_grades, \"A+\"\
    )\n    letter_grades = append(letter_grades, \"A\")\n    letter_grades = append(letter_grades,\
    \ \"A-\")\n    letter_grades = append(letter_grades, \"B+\")\n    letter_grades\
    \ = append(letter_grades, \"B\")\n    letter_grades = append(letter_grades, \"\
    B-\")\n    letter_grades = append(letter_grades, \"C+\")\n    letter_grades =\
    \ append(letter_grades, \"C\")\n    letter_grades = append(letter_grades, \"C-\"\
    )\n    letter_grades = append(letter_grades, \"D+\")\n    letter_grades = append(letter_grades,\
    \ \"D\")\n    letter_grades = append(letter_grades, \"D-\")\n    letter_grades\
    \ = append(letter_grades, \"E\")\n    var output []string\n    var i int\n   \
    \ for _, grade := range grades {\n        if grade >= 4.0 {\n            output\
    \ = append(output, letter_grades[0])\n        } else if grade >= 3.7 {\n     \
    \       output = append(output, letter_grades[1])\n        } else if grade >=\
    \ 3.3 {\n            output = append(output, letter_grades[2])\n        } else\
    \ if grade >= 3.0 {\n            output = append(output, letter_grades[3])\n \
    \       } else if grade >= 2.7 {\n            output = append(output, letter_grades[4])\n\
    \        } else if grade >= 2.3 {\n            output = append(output, letter_grades[5])\n\
    \        } else if grade >= 2.0 {\n            output = append(output, letter_grades[6])\n\
    \        } else if grade >= 1.7 {\n            output = append(output, letter_grades[7])\n\
    \        } else if grade >= 1.3 {\n            output = append(output, letter_grades[8])\n\
    \        } else if grade >= 1.0 {\n            output = append(output, letter_grades[9])\n\
    \        } else if grade >= 0.7 {\n            output = append(output, letter_grades[10])\n\
    \        } else if grade >=", "    var result []string\n    for _, grade := range\
    \ grades {\n        if grade > 4.0 {\n            result = append(result, \"A+\"\
    )\n        } else if grade > 3.7 {\n            result = append(result, \"A\"\
    )\n        } else if grade > 3.3 {\n            result = append(result, \"A-\"\
    )\n        } else if grade > 3.0 {\n            result = append(result, \"B+\"\
    )\n        } else if grade > 2.7 {\n            result = append(result, \"B\"\
    )\n        } else if grade > 2.3 {\n            result = append(result, \"B-\"\
    )\n        } else if grade > 2.0 {\n            result = append(result, \"C+\"\
    )\n        } else if grade > 1.7 {\n            result = append(result, \"C\"\
    )\n        } else if grade > 1.3 {\n            result = append(result, \"C-\"\
    )\n        } else if grade > 1.0 {\n            result = append(result, \"D+\"\
    )\n        } else if grade > 0.7 {\n            result = append(result, \"D\"\
    )\n        } else if grade > 0.0 {\n            result = append(result, \"D-\"\
    )\n        } else {\n            result = append(result, \"E\")\n        }\n \
    \   }\n    return result\n}\n", "    letter_grades := []string{}\n    return letter_grades\n\
    }\n", "    var letter_grades []string\n    for _, grade := range grades {\n  \
    \      letter_grade := \"\"\n        if grade == 4.0 {\n            letter_grade\
    \ = \"A+\"\n        } else if grade > 3.7 {\n            letter_grade = \"A\"\n\
    \        } else if grade > 3.3 {\n            letter_grade = \"A-\"\n        }\
    \ else if grade > 3.0 {\n            letter_grade = \"B+\"\n        } else if\
    \ grade > 2.7 {\n            letter_grade = \"B\"\n        } else if grade > 2.3\
    \ {\n            letter_grade = \"B-\"\n        } else if grade > 2.0 {\n    \
    \        letter_grade = \"C+\"\n        } else if grade > 1.7 {\n            letter_grade\
    \ = \"C\"\n        } else if grade > 1.3 {\n            letter_grade = \"C-\"\n\
    \        } else if grade > 1.0 {\n            letter_grade = \"D+\"\n        }\
    \ else if grade > 0.7 {\n            letter_grade = \"D\"\n        } else if grade\
    \ > 0.0 {\n            letter_grade = \"D-\"\n        } else {\n            letter_grade\
    \ = \"E\"\n        }\n        letter_grades = append(letter_grades, letter_grade)\n\
    \    }\n    return letter_grades\n}\n", "    letter_grades := []string{}\n   \
    \ for _, num := range grades {\n        if num >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if num >= 3.7 {\n          \
    \  letter_grades = append(letter_grades, \"A\")\n        } else if num >= 3.3\
    \ {\n            letter_grades = append(letter_grades, \"A-\")\n        } else\
    \ if num >= 3.0 {\n            letter_grades = append(letter_grades, \"B+\")\n\
    \        } else if num >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if num >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if num >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if num >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if num >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if num >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if num >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if num >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        if grade >= 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n       \
    \ } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    for _, g := range grades {\n        if g >= 4.0 {\n            result = append(result,\
    \ \"A+\")\n        } else if g >= 3.7 {\n            result = append(result, \"\
    A\")\n        } else if g >= 3.3 {\n            result = append(result, \"A-\"\
    )\n        } else if g >= 3.0 {\n            result = append(result, \"B+\")\n\
    \        } else if g >= 2.7 {\n            result = append(result, \"B\")\n  \
    \      } else if g >= 2.3 {\n            result = append(result, \"B-\")\n   \
    \     } else if g >= 2.0 {\n            result = append(result, \"C+\")\n    \
    \    } else if g >= 1.7 {\n            result = append(result, \"C\")\n      \
    \  } else if g >= 1.3 {\n            result = append(result, \"C-\")\n       \
    \ } else if g >= 1.0 {\n            result = append(result, \"D+\")\n        }\
    \ else if g >= 0.7 {\n            result = append(result, \"D\")\n        } else\
    \ if g >= 0.0 {\n            result = append(result, \"D-\")\n        } else {\n\
    \            result = append(result, \"E\")\n        }\n    }\n    return result\n\
    }\n", "    var letter_grades []string\n    for _, grade := range grades {\n  \
    \      if grade >= 4.0 {\n            letter_grades = append(letter_grades, \"\
    A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    for _, g := range grades {\n        result = append(result, grade_equation(g))\n\
    \    }\n    return result\n}\n", "    scores := []string{}\n    for _, grade :=\
    \ range grades {\n        if grade == 4.0 {\n            scores = append(scores,\
    \ \"A+\")\n        } else if grade > 3.7 {\n            scores = append(scores,\
    \ \"A\")\n        } else if grade > 3.3 {\n            scores = append(scores,\
    \ \"A-\")\n        } else if grade > 3.0 {\n            scores = append(scores,\
    \ \"B+\")\n        } else if grade > 2.7 {\n            scores = append(scores,\
    \ \"B\")\n        } else if grade > 2.3 {\n            scores = append(scores,\
    \ \"B-\")\n        } else if grade > 2.0 {\n            scores = append(scores,\
    \ \"C+\")\n        } else if grade > 1.7 {\n            scores = append(scores,\
    \ \"C\")\n        } else if grade > 1.3 {\n            scores = append(scores,\
    \ \"C-\")\n        } else if grade > 1.0 {\n            scores = append(scores,\
    \ \"D+\")\n        } else if grade > 0.7 {\n            scores = append(scores,\
    \ \"D\")\n        } else if grade > 0.0 {\n            scores = append(scores,\
    \ \"D-\")\n        } else {\n            scores = append(scores, \"E\")\n    \
    \    }\n    }\n    return scores\n}\n", "    var letterGrades []string\n    for\
    \ _, grade := range grades {\n        switch {\n        case grade >= 4.0:\n \
    \           letterGrades = append(letterGrades, \"A+\")\n        case grade >=\
    \ 3.7:\n            letterGrades = append(letterGrades, \"A\")\n        case grade\
    \ >= 3.3:\n            letterGrades = append(letterGrades, \"A-\")\n        case\
    \ grade >= 3.0:\n            letterGrades = append(letterGrades, \"B+\")\n   \
    \     case grade >= 2.7:\n            letterGrades = append(letterGrades, \"B\"\
    )\n        case grade >= 2.3:\n            letterGrades = append(letterGrades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letterGrades = append(letterGrades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letterGrades = append(letterGrades,\
    \ \"C\")\n        case grade >= 1.3:\n            letterGrades = append(letterGrades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letterGrades = append(letterGrades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letterGrades = append(letterGrades,\
    \ \"D\")\n        case grade >= 0.0:\n            letterGrades = append(letterGrades,\
    \ \"D-\")\n        default:\n            letterGrades = append(letterGrades, \"\
    E\")\n        }\n    }\n    return letterGrades\n}\n", "    var result []string\n\
    \    for _, v := range grades {\n        switch {\n        case v == 4.0:\n  \
    \          result = append(result, \"A+\")\n        case v > 3.7:\n          \
    \  result = append(result, \"A\")\n        case v > 3.3:\n            result =\
    \ append(result, \"A-\")\n        case v > 3.0:\n            result = append(result,\
    \ \"B+\")\n        case v > 2.7:\n            result = append(result, \"B\")\n\
    \        case v > 2.3:\n            result = append(result, \"B-\")\n        case\
    \ v > 2.0:\n            result = append(result, \"C+\")\n        case v > 1.7:\n\
    \            result = append(result, \"C\")\n        case v > 1.3:\n         \
    \   result = append(result, \"C-\")\n        case v > 1.0:\n            result\
    \ = append(result, \"D+\")\n        case v > 0.7:\n            result = append(result,\
    \ \"D\")\n        case v > 0.0:\n            result = append(result, \"D-\")\n\
    \        case v == 0.0:\n            result = append(result, \"E\")\n        }\n\
    \    }\n    return result\n}\n", "    letter_grades := []string{}\n    for _,\
    \ grade := range grades {\n        switch {\n        case grade >= 4.0:\n    \
    \        letter_grades = append(letter_grades, \"A+\")\n        case grade >=\
    \ 3.7:\n            letter_grades = append(letter_grades, \"A\")\n        case\
    \ grade >= 3.3:\n            letter_grades = append(letter_grades, \"A-\")\n \
    \       case grade >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // TODO: Implementation\n\
    \    return []string{}\n}\n", "    // write the function body here\n}\n", "  \
    \  var letterGrades []string\n    for _, x := range grades {\n        var grade\
    \ string\n        if x >= 4.0 {\n            grade = \"A+\"\n        } else if\
    \ x >= 3.7 {\n            grade = \"A\"\n        } else if x >= 3.3 {\n      \
    \      grade = \"A-\"\n        } else if x >= 3.0 {\n            grade = \"B+\"\
    \n        } else if x >= 2.7 {\n            grade = \"B\"\n        } else if x\
    \ >= 2.3 {\n            grade = \"B-\"\n        } else if x >= 2.0 {\n       \
    \     grade = \"C+\"\n        } else if x >= 1.7 {\n            grade = \"C\"\n\
    \        } else if x >= 1.3 {\n            grade = \"C-\"\n        } else if x\
    \ >= 1.0 {\n            grade = \"D+\"\n        } else if x >= 0.7 {\n       \
    \     grade = \"D\"\n        } else if x >= 0.0 {\n            grade = \"D-\"\n\
    \        } else {\n            grade = \"E\"\n        }\n        letterGrades\
    \ = append(letterGrades, grade)\n    }\n    return letterGrades\n}\n", "    var\
    \ letter_grades []string\n    var l_grade string\n    for _, i := range grades\
    \ {\n        if i == 4.0 {\n            l_grade = \"A+\"\n        } else if i\
    \ >= 3.7 {\n            l_grade = \"A\"\n        } else if i >= 3.3 {\n      \
    \      l_grade = \"A-\"\n        } else if i >= 3.0 {\n            l_grade = \"\
    B+\"\n        } else if i >= 2.7 {\n            l_grade = \"B\"\n        } else\
    \ if i >= 2.3 {\n            l_grade = \"B-\"\n        } else if i >= 2.0 {\n\
    \            l_grade = \"C+\"\n        } else if i >= 1.7 {\n            l_grade\
    \ = \"C\"\n        } else if i >= 1.3 {\n            l_grade = \"C-\"\n      \
    \  } else if i >= 1.0 {\n            l_grade = \"D+\"\n        } else if i >=\
    \ 0.7 {\n            l_grade = \"D\"\n        } else if i >= 0.0 {\n         \
    \   l_grade = \"D-\"\n        } else {\n            l_grade = \"E\"\n        }\n\
    \        letter_grades = append(letter_grades, l_grade)\n    }\n    return letter_grades\n\
    }\n", "  // Write your code here\n  return nil\n}\n", "    grades_length := len(grades)\n\
    \    var letter_grades []string\n    for i := 0; i < grades_length; i++ {\n  \
    \      if grades[i] >= 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if grades[i] >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grades[i] >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grades[i] >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grades[i] >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grades[i] >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grades[i] >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grades[i] >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grades[i] >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grades[i] >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grades[i] >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grades[i] >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // your code\
    \ here\n    return nil\n}\n", "    var letter_grades []string\n    for _, value\
    \ := range grades {\n        if value == 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if value > 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if value > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if value > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if value > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if value > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if value > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if value > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if value > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if value > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if value > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if value == 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        }\n    }\n    return letter_grades\n}\n", "\tvar result []string\n\
    \tfor _, grade := range grades {\n\t\tswitch {\n\t\tcase grade == 4.0:\n\t\t\t\
    result = append(result, \"A+\")\n\t\tcase grade > 3.7:\n\t\t\tresult = append(result,\
    \ \"A\")\n\t\tcase grade > 3.3:\n\t\t\tresult = append(result, \"A-\")\n\t\tcase\
    \ grade > 3.0:\n\t\t\tresult = append(result, \"B+\")\n\t\tcase grade > 2.7:\n\
    \t\t\tresult = append(result, \"B\")\n\t\tcase grade > 2.3:\n\t\t\tresult = append(result,\
    \ \"B-\")\n\t\tcase grade > 2.0:\n\t\t\tresult = append(result, \"C+\")\n\t\t\
    case grade > 1.7:\n\t\t\tresult = append(result, \"C\")\n\t\tcase grade > 1.3:\n\
    \t\t\tresult = append(result, \"C-\")\n\t\tcase grade > 1.0:\n\t\t\tresult = append(result,\
    \ \"D+\")\n\t\tcase grade > 0.7:\n\t\t\tresult = append(result, \"D\")\n\t\tcase\
    \ grade > 0.0:\n\t\t\tresult = append(result, \"D-\")\n\t\tcase grade == 0.0:\n\
    \t\t\tresult = append(result, \"E\")\n\t\t}\n\t}\n\treturn result\n}\n", "   \
    \ var result []string\n    for _, grade := range grades {\n        if grade >=\
    \ 4.0 {\n            result = append(result, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            result = append(result, \"A\")\n        } else if grade\
    \ >= 3.3 {\n            result = append(result, \"A-\")\n        } else if grade\
    \ >= 3.0 {\n            result = append(result, \"B+\")\n        } else if grade\
    \ >= 2.7 {\n            result = append(result, \"B\")\n        } else if grade\
    \ >= 2.3 {\n            result = append(result, \"B-\")\n        } else if grade\
    \ >= 2.0 {\n            result = append(result, \"C+\")\n        } else if grade\
    \ >= 1.7 {\n            result = append(result, \"C\")\n        } else if grade\
    \ >= 1.3 {\n            result = append(result, \"C-\")\n        } else if grade\
    \ >= 1.0 {\n            result = append(result, \"D+\")\n        } else if grade\
    \ >= 0.7 {\n            result = append(result, \"D\")\n        } else if grade\
    \ >= 0.0 {\n            result = append(result, \"D-\")\n        } else {\n  \
    \          result = append(result, \"E\")\n        }\n    }\n    return result\n\
    }\n", "    var letter_grades []string\n    for _,g := range grades {\n       \
    \ if g == 4.0 {\n            letter_grades = append(letter_grades, \"A+\")\n \
    \       } else if g > 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if g > 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if g > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if g > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if g > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if g > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if g > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if g > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if g > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if g > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if g > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var grade_str\
    \ []string\n    for _, g := range grades {\n        if g >= 4.0 {\n          \
    \  grade_str = append(grade_str, \"A+\")\n        } else if g >= 3.7 {\n     \
    \       grade_str = append(grade_str, \"A\")\n        } else if g >= 3.3 {\n \
    \           grade_str = append(grade_str, \"A-\")\n        } else if g >= 3.0\
    \ {\n            grade_str = append(grade_str, \"B+\")\n        } else if g >=\
    \ 2.7 {\n            grade_str = append(grade_str, \"B\")\n        } else if g\
    \ >= 2.3 {\n            grade_str = append(grade_str, \"B-\")\n        } else\
    \ if g >= 2.0 {\n            grade_str = append(grade_str, \"C+\")\n        }\
    \ else if g >= 1.7 {\n            grade_str = append(grade_str, \"C\")\n     \
    \   } else if g >= 1.3 {\n            grade_str = append(grade_str, \"C-\")\n\
    \        } else if g >= 1.0 {\n            grade_str = append(grade_str, \"D+\"\
    )\n        } else if g >= 0.7 {\n            grade_str = append(grade_str, \"\
    D\")\n        } else if g >= 0.0 {\n            grade_str = append(grade_str,\
    \ \"D-\")\n        } else {\n            grade_str = append(grade_str, \"E\")\n\
    \        }\n    }\n    return grade_str\n}\n", "    var output []string\n    for\
    \ _, i := range grades {\n        if i >= 4.0 {\n            output = append(output,\
    \ \"A+\")\n        } else if i >= 3.7 {\n            output = append(output, \"\
    A\")\n        } else if i >= 3.3 {\n            output = append(output, \"A-\"\
    )\n        } else if i >= 3.0 {\n            output = append(output, \"B+\")\n\
    \        } else if i >= 2.7 {\n            output = append(output, \"B\")\n  \
    \      } else if i >= 2.3 {\n            output = append(output, \"B-\")\n   \
    \     } else if i >= 2.0 {\n            output = append(output, \"C+\")\n    \
    \    } else if i >= 1.7 {\n            output = append(output, \"C\")\n      \
    \  } else if i >= 1.3 {\n            output = append(output, \"C-\")\n       \
    \ } else if i >= 1.0 {\n            output = append(output, \"D+\")\n        }\
    \ else if i >= 0.7 {\n            output = append(output, \"D\")\n        } else\
    \ if i >= 0.0 {\n            output = append(output, \"D-\")\n        } else {\n\
    \            output = append(output, \"E\")\n        }\n    }\n    return output\n\
    }\n", "\tvar result []string\n\tfor _, v := range grades {\n\t\tswitch {\n\t\t\
    case v == 4.0:\n\t\t\tresult = append(result, \"A+\")\n\t\tcase v > 3.7:\n\t\t\
    \tresult = append(result, \"A\")\n\t\tcase v > 3.3:\n\t\t\tresult = append(result,\
    \ \"A-\")\n\t\tcase v > 3.0:\n\t\t\tresult = append(result, \"B+\")\n\t\tcase\
    \ v > 2.7:\n\t\t\tresult = append(result, \"B\")\n\t\tcase v > 2.3:\n\t\t\tresult\
    \ = append(result, \"B-\")\n\t\tcase v > 2.0:\n\t\t\tresult = append(result, \"\
    C+\")\n\t\tcase v > 1.7:\n\t\t\tresult = append(result, \"C\")\n\t\tcase v > 1.3:\n\
    \t\t\tresult = append(result, \"C-\")\n\t\tcase v > 1.0:\n\t\t\tresult = append(result,\
    \ \"D+\")\n\t\tcase v > 0.7:\n\t\t\tresult = append(result, \"D\")\n\t\tcase v\
    \ > 0.0:\n\t\t\tresult = append(result, \"D-\")\n\t\tcase v == 0.0:\n\t\t\tresult\
    \ = append(result, \"E\")\n\t\t}\n\t}\n\treturn result\n}\n", "    letter_grades\
    \ := []string{}\n    for _, value := range grades {\n        if value > 3.7 {\n\
    \            letter_grades = append(letter_grades, \"A+\")\n        } else if\
    \ value > 3.3 {\n            letter_grades = append(letter_grades, \"A\")\n  \
    \      } else if value > 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if value > 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if value > 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if value > 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if value > 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if value > 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if value > 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if value > 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if value > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if value > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // Your code\
    \ here\n    return nil\n}\n", "    // Write your code here\n    return nil\n}\n",
  "    var results []string\n    for _, val := range grades {\n        if val >= 4.0\
    \ {\n            results = append(results, \"A+\")\n        } else if val >= 3.7\
    \ {\n            results = append(results, \"A\")\n        } else if val >= 3.3\
    \ {\n            results = append(results, \"A-\")\n        } else if val >= 3.0\
    \ {\n            results = append(results, \"B+\")\n        } else if val >= 2.7\
    \ {\n            results = append(results, \"B\")\n        } else if val >= 2.3\
    \ {\n            results = append(results, \"B-\")\n        } else if val >= 2.0\
    \ {\n            results = append(results, \"C+\")\n        } else if val >= 1.7\
    \ {\n            results = append(results, \"C\")\n        } else if val >= 1.3\
    \ {\n            results = append(results, \"C-\")\n        } else if val >= 1.0\
    \ {\n            results = append(results, \"D+\")\n        } else if val >= 0.7\
    \ {\n            results = append(results, \"D\")\n        } else if val >= 0.0\
    \ {\n            results = append(results, \"D-\")\n        } else {\n       \
    \     results = append(results, \"E\")\n        }\n    }\n    return results\n\
    }\n\n//", "    letter_grades := []string{}\n    for _, g := range grades {\n \
    \       switch {\n        case g >= 4.0:\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        case g >= 3.7:\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        case g >= 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case g >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case g >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case g >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case g >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case g >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case g >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case g >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case g >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case g > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // Write code\
    \ here\n}\n", "    var results []string\n    for _, v := range grades {\n    \
    \    if v == 4.0 {\n            results = append(results, \"A+\")\n        } else\
    \ if v > 3.7 {\n            results = append(results, \"A\")\n        } else if\
    \ v > 3.3 {\n            results = append(results, \"A-\")\n        } else if\
    \ v > 3.0 {\n            results = append(results, \"B+\")\n        } else if\
    \ v > 2.7 {\n            results = append(results, \"B\")\n        } else if v\
    \ > 2.3 {\n            results = append(results, \"B-\")\n        } else if v\
    \ > 2.0 {\n            results = append(results, \"C+\")\n        } else if v\
    \ > 1.7 {\n            results = append(results, \"C\")\n        } else if v >\
    \ 1.3 {\n            results = append(results, \"C-\")\n        } else if v >\
    \ 1.0 {\n            results = append(results, \"D+\")\n        } else if v >\
    \ 0.7 {\n            results = append(results, \"D\")\n        } else if v > 0.0\
    \ {\n            results = append(results, \"D-\")\n        } else {\n       \
    \     results = append(results, \"E\")\n        }\n    }\n    return results\n\
    }\n", "    var results []string\n    for _, g := range grades {\n        switch\
    \ {\n        case g == 4.0:\n            results = append(results, \"A+\")\n \
    \       case g >= 3.7:\n            results = append(results, \"A\")\n       \
    \ case g >= 3.3:\n            results = append(results, \"A-\")\n        case\
    \ g >= 3.0:\n            results = append(results, \"B+\")\n        case g >=\
    \ 2.7:\n            results = append(results, \"B\")\n        case g >= 2.3:\n\
    \            results = append(results, \"B-\")\n        case g >= 2.0:\n     \
    \       results = append(results, \"C+\")\n        case g >= 1.7:\n          \
    \  results = append(results, \"C\")\n        case g >= 1.3:\n            results\
    \ = append(results, \"C-\")\n        case g >= 1.0:\n            results = append(results,\
    \ \"D+\")\n        case g >= 0.7:\n            results = append(results, \"D\"\
    )\n        case g > 0.0:\n            results = append(results, \"D-\")\n    \
    \    case g == 0.0:\n            results = append(results, \"E\")\n        }\n\
    \    }\n    return results\n}\n", "    var letters []string\n    for _, grade\
    \ := range grades {\n        if grade >= 4.0 {\n            letters = append(letters,\
    \ \"A+\")\n        } else if grade >= 3.7 {\n            letters = append(letters,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letters = append(letters,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letters = append(letters,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letters = append(letters,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letters = append(letters,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letters = append(letters,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letters = append(letters,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letters = append(letters,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letters = append(letters,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letters = append(letters,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letters = append(letters,\
    \ \"D-\")\n        } else {\n            letters = append(letters, \"E\")\n  \
    \      }\n    }\n    return letters\n}\n", "    var output []string\n    var gradeMap\
    \ = map[float64]string{\n        4.0: \"A+\",\n        3.7: \"A\",\n        3.3:\
    \ \"A-\",\n        3.0: \"B+\",\n        2.7: \"B\",\n        2.3: \"B-\",\n \
    \       2.0: \"C+\",\n        1.7: \"C\",\n        1.3: \"C-\",\n        1.0:\
    \ \"D+\",\n        0.7: \"D\",\n        0.0: \"D-\",\n        -1.0: \"E\",\n \
    \   }\n    for _, val := range grades {\n        var grade string\n        for\
    \ gpa, letter := range gradeMap {\n            if val >= gpa {\n             \
    \   grade = letter\n                break\n            }\n        }\n        output\
    \ = append(output, grade)\n    }\n    return output\n}\n", "    var letter_grades\
    \ []string\n    for _, value := range grades {\n        if value == 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if value\
    \ >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n       \
    \ } else if value >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if value >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if value >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if value >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if value >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if value >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if value >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if value >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if value >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if value > 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, grade := range grades {\n        if grade >= 4.0 {\n  \
    \          letter_grades = append(letter_grades, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            letter_grades = append(letter_grades, \"A\")\n       \
    \ } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    // grade_a := []float64{4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7, 1.3, 1.0,\
    \ 0.7, 0.0}\n    grade_a := []float64{4.0, 3.7, 3.3, 3.0, 2.7, 2.3, 2.0, 1.7,\
    \ 1.3, 1.0, 0.7, 0.0}\n    // grade_b := []string{\"A+\", \"A\", \"A-\", \"B+\"\
    , \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\"}\n    grade_b :=\
    \ []string{\"A+\", \"A\", \"A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\"\
    , \"D+\", \"D\", \"D-\"}\n    len_a := len(grade_a)\n    for _, g := range grades\
    \ {\n        i := 0\n        for ; i < len_a; i++ {\n            if g < grade_a[i]\
    \ {\n                break\n            }\n        }\n        result = append(result,\
    \ grade_b[i])\n    }\n    return result\n}\n", "    var result []string\n    for\
    \ _, grade := range grades {\n        switch {\n        case grade >= 4.0:\n \
    \           result = append(result, \"A+\")\n        case grade >= 3.7:\n    \
    \        result = append(result, \"A\")\n        case grade >= 3.3:\n        \
    \    result = append(result, \"A-\")\n        case grade >= 3.0:\n           \
    \ result = append(result, \"B+\")\n        case grade >= 2.7:\n            result\
    \ = append(result, \"B\")\n        case grade >= 2.3:\n            result = append(result,\
    \ \"B-\")\n        case grade >= 2.0:\n            result = append(result, \"\
    C+\")\n        case grade >= 1.7:\n            result = append(result, \"C\")\n\
    \        case grade >= 1.3:\n            result = append(result, \"C-\")\n   \
    \     case grade >= 1.0:\n            result = append(result, \"D+\")\n      \
    \  case grade >= 0.7:\n            result = append(result, \"D\")\n        case\
    \ grade >= 0.0:\n            result = append(result, \"D-\")\n        default:\n\
    \            result = append(result, \"E\")\n        }\n    }\n    return result\n\
    }\n", "    var letter_grades []string = []string{}\n    for _, g := range grades\
    \ {\n        letter_grades = append(letter_grades, numerical_letter_grade_helper(g))\n\
    \    }\n    return letter_grades\n}\n", "    // Write your code here.\n    return\
    \ []string{}\n}\n", "    var str []string\n    for _, grade := range grades {\n\
    \        var s string\n        if grade >= 4.0 {\n            s = \"A+\"\n   \
    \     } else if grade >= 3.7 {\n            s = \"A\"\n        } else if grade\
    \ >= 3.3 {\n            s = \"A-\"\n        } else if grade >= 3.0 {\n       \
    \     s = \"B+\"\n        } else if grade >= 2.7 {\n            s = \"B\"\n  \
    \      } else if grade >= 2.3 {\n            s = \"B-\"\n        } else if grade\
    \ >= 2.0 {\n            s = \"C+\"\n        } else if grade >= 1.7 {\n       \
    \     s = \"C\"\n        } else if grade >= 1.3 {\n            s = \"C-\"\n  \
    \      } else if grade >= 1.0 {\n            s = \"D+\"\n        } else if grade\
    \ >= 0.7 {\n            s = \"D\"\n        } else if grade >= 0.0 {\n        \
    \    s = \"D-\"\n        } else {\n            s = \"E\"\n        }\n        str\
    \ = append(str, s)\n    }\n    return str\n}\n", "    var letter_grades []string\n\
    \    for _, grade := range grades {\n        letter_grade := \"E\"\n        if\
    \ grade >= 4.0 {\n            letter_grade = \"A+\"\n        } else if grade >=\
    \ 3.7 {\n            letter_grade = \"A\"\n        } else if grade >= 3.3 {\n\
    \            letter_grade = \"A-\"\n        } else if grade >= 3.0 {\n       \
    \     letter_grade = \"B+\"\n        } else if grade >= 2.7 {\n            letter_grade\
    \ = \"B\"\n        } else if grade >= 2.3 {\n            letter_grade = \"B-\"\
    \n        } else if grade >= 2.0 {\n            letter_grade = \"C+\"\n      \
    \  } else if grade >= 1.7 {\n            letter_grade = \"C\"\n        } else\
    \ if grade >= 1.3 {\n            letter_grade = \"C-\"\n        } else if grade\
    \ >= 1.0 {\n            letter_grade = \"D+\"\n        } else if grade >= 0.7\
    \ {\n            letter_grade = \"D\"\n        } else if grade >= 0.0 {\n    \
    \        letter_grade = \"D-\"\n        }\n        letter_grades = append(letter_grades,\
    \ letter_grade)\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    for _, grade := range grades {\n        if grade >= 4.0 {\n            result\
    \ = append(result, \"A+\")\n        } else if grade >= 3.7 {\n            result\
    \ = append(result, \"A\")\n        } else if grade >= 3.3 {\n            result\
    \ = append(result, \"A-\")\n        } else if grade >= 3.0 {\n            result\
    \ = append(result, \"B+\")\n        } else if grade >= 2.7 {\n            result\
    \ = append(result, \"B\")\n        } else if grade >= 2.3 {\n            result\
    \ = append(result, \"B-\")\n        } else if grade >= 2.0 {\n            result\
    \ = append(result, \"C+\")\n        } else if grade >= 1.7 {\n            result\
    \ = append(result, \"C\")\n        } else if grade >= 1.3 {\n            result\
    \ = append(result, \"C-\")\n        } else if grade >= 1.0 {\n            result\
    \ = append(result, \"D+\")\n        } else if grade >= 0.7 {\n            result\
    \ = append(result, \"D\")\n        } else if grade >= 0.0 {\n            result\
    \ = append(result, \"D-\")\n        } else {\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    /* Write your code here\
    \ */\n    letters := []string{}\n    for _, g := range grades {\n        switch\
    \ {\n        case g > 4.0:\n            letters = append(letters, \"A+\")\n  \
    \      case g > 3.7:\n            letters = append(letters, \"A\")\n        case\
    \ g > 3.3:\n            letters = append(letters, \"A-\")\n        case g > 3.0:\n\
    \            letters = append(letters, \"B+\")\n        case g > 2.7:\n      \
    \      letters = append(letters, \"B\")\n        case g > 2.3:\n            letters\
    \ = append(letters, \"B-\")\n        case g > 2.0:\n            letters = append(letters,\
    \ \"C+\")\n        case g > 1.7:\n            letters = append(letters, \"C\"\
    )\n        case g > 1.3:\n            letters = append(letters, \"C-\")\n    \
    \    case g > 1.0:\n            letters = append(letters, \"D+\")\n        case\
    \ g > 0.7:\n            letters = append(letters, \"D\")\n        case g > 0.0:\n\
    \            letters = append(letters, \"D-\")\n        default:\n           \
    \ letters = append(letters, \"E\")\n        }\n    }\n    return letters\n}\n",
  "    var letter_grades []string\n    for _, v := range grades {\n        letter_grades\
    \ = append(letter_grades, grade_equation(v))\n    }\n    return letter_grades\n\
    }\n", "    var letterGrades []string\n    for _, g := range grades {\n       \
    \ var l string\n        switch {\n        case g == 4.0:\n            l = \"A+\"\
    \n        case g > 3.7:\n            l = \"A\"\n        case g > 3.3:\n      \
    \      l = \"A-\"\n        case g > 3.0:\n            l = \"B+\"\n        case\
    \ g > 2.7:\n            l = \"B\"\n        case g > 2.3:\n            l = \"B-\"\
    \n        case g > 2.0:\n            l = \"C+\"\n        case g > 1.7:\n     \
    \       l = \"C\"\n        case g > 1.3:\n            l = \"C-\"\n        case\
    \ g > 1.0:\n            l = \"D+\"\n        case g > 0.7:\n            l = \"\
    D\"\n        case g > 0.0:\n            l = \"D-\"\n        default:\n       \
    \     l = \"E\"\n        }\n        letterGrades = append(letterGrades, l)\n \
    \   }\n    return letterGrades\n}\n", "    return []string{}\n}\n", "    // Fill\
    \ this in.\n    return nil\n}\n", "  // Your code here\n  return nil\n}\n", " \
    \   var letter_grades []string\n    for _, grade := range grades {\n        switch\
    \ {\n        case grade == 4.0:\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        case grade > 3.7:\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        case grade > 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case grade > 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grade > 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grade > 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grade > 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grade > 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grade > 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grade > 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grade > 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grade > 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case grade == 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var letter_grades\
    \ []string\n    for _, val := range grades {\n        switch {\n        case val\
    \ >= 4.0:\n            letter_grades = append(letter_grades, \"A+\")\n       \
    \ case val >= 3.7:\n            letter_grades = append(letter_grades, \"A\")\n\
    \        case val >= 3.3:\n            letter_grades = append(letter_grades, \"\
    A-\")\n        case val >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case val >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case val >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case val >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case val >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case val >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case val >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case val >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case val >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        default:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    for _, val := range grades {\n        if val >= 4.0 {\n            result\
    \ = append(result, \"A+\")\n        } else if val >= 3.7 {\n            result\
    \ = append(result, \"A\")\n        } else if val >= 3.3 {\n            result\
    \ = append(result, \"A-\")\n        } else if val >= 3.0 {\n            result\
    \ = append(result, \"B+\")\n        } else if val >= 2.7 {\n            result\
    \ = append(result, \"B\")\n        } else if val >= 2.3 {\n            result\
    \ = append(result, \"B-\")\n        } else if val >= 2.0 {\n            result\
    \ = append(result, \"C+\")\n        } else if val >= 1.7 {\n            result\
    \ = append(result, \"C\")\n        } else if val >= 1.3 {\n            result\
    \ = append(result, \"C-\")\n        } else if val >= 1.0 {\n            result\
    \ = append(result, \"D+\")\n        } else if val >= 0.7 {\n            result\
    \ = append(result, \"D\")\n        } else if val >= 0.0 {\n            result\
    \ = append(result, \"D-\")\n        } else {\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    var (\n        grade_list\
    \ []string\n        grade string\n    )\n    for _, g := range grades {\n    \
    \    if g > 4.0 {\n            grade = \"A+\"\n        } else if g > 3.7 {\n \
    \           grade = \"A\"\n        } else if g > 3.3 {\n            grade = \"\
    A-\"\n        } else if g > 3.0 {\n            grade = \"B+\"\n        } else\
    \ if g > 2.7 {\n            grade = \"B\"\n        } else if g > 2.3 {\n     \
    \       grade = \"B-\"\n        } else if g > 2.0 {\n            grade = \"C+\"\
    \n        } else if g > 1.7 {\n            grade = \"C\"\n        } else if g\
    \ > 1.3 {\n            grade = \"C-\"\n        } else if g > 1.0 {\n         \
    \   grade = \"D+\"\n        } else if g > 0.7 {\n            grade = \"D\"\n \
    \       } else if g > 0.0 {\n            grade = \"D-\"\n        } else {\n  \
    \          grade = \"E\"\n        }\n        grade_list = append(grade_list, grade)\n\
    \    }\n    return grade_list\n}\n", "    res := make([]string, len(grades))\n\
    \    for i, grade := range grades {\n        if grade == 4.0 {\n            res[i]\
    \ = \"A+\"\n        } else if grade > 3.7 {\n            res[i] = \"A\"\n    \
    \    } else if grade > 3.3 {\n            res[i] = \"A-\"\n        } else if grade\
    \ > 3.0 {\n            res[i] = \"B+\"\n        } else if grade > 2.7 {\n    \
    \        res[i] = \"B\"\n        } else if grade > 2.3 {\n            res[i] =\
    \ \"B-\"\n        } else if grade > 2.0 {\n            res[i] = \"C+\"\n     \
    \   } else if grade > 1.7 {\n            res[i] = \"C\"\n        } else if grade\
    \ > 1.3 {\n            res[i] = \"C-\"\n        } else if grade > 1.0 {\n    \
    \        res[i] = \"D+\"\n        } else if grade > 0.7 {\n            res[i]\
    \ = \"D\"\n        } else if grade > 0.0 {\n            res[i] = \"D-\"\n    \
    \    } else {\n            res[i] = \"E\"\n        }\n    }\n    return res\n\
    }\n", "    var result []string\n    for _, grade := range grades {\n        if\
    \ grade >= 4.0 {\n            result = append(result, \"A+\")\n        } else\
    \ if grade >= 3.7 {\n            result = append(result, \"A\")\n        } else\
    \ if grade >= 3.3 {\n            result = append(result, \"A-\")\n        } else\
    \ if grade >= 3.0 {\n            result = append(result, \"B+\")\n        } else\
    \ if grade >= 2.7 {\n            result = append(result, \"B\")\n        } else\
    \ if grade >= 2.3 {\n            result = append(result, \"B-\")\n        } else\
    \ if grade >= 2.0 {\n            result = append(result, \"C+\")\n        } else\
    \ if grade >= 1.7 {\n            result = append(result, \"C\")\n        } else\
    \ if grade >= 1.3 {\n            result = append(result, \"C-\")\n        } else\
    \ if grade >= 1.0 {\n            result = append(result, \"D+\")\n        } else\
    \ if grade >= 0.7 {\n            result = append(result, \"D\")\n        } else\
    \ if grade >= 0.0 {\n            result = append(result, \"D-\")\n        } else\
    \ {\n            result = append(result, \"E\")\n        }\n    }\n    return\
    \ result\n}\n", "    var letter_grades []string\n    for _, g := range grades\
    \ {\n        letter_grades = append(letter_grades, grade_equation(g))\n    }\n\
    \    return letter_grades\n}\n", "    res := make([]string, len(grades))\n   \
    \ for i, value := range grades {\n        if value == 4.0 {\n            res[i]\
    \ = \"A+\"\n        } else if value >= 3.7 {\n            res[i] = \"A\"\n   \
    \     } else if value >= 3.3 {\n            res[i] = \"A-\"\n        } else if\
    \ value >= 3.0 {\n            res[i] = \"B+\"\n        } else if value >= 2.7\
    \ {\n            res[i] = \"B\"\n        } else if value >= 2.3 {\n          \
    \  res[i] = \"B-\"\n        } else if value >= 2.0 {\n            res[i] = \"\
    C+\"\n        } else if value >= 1.7 {\n            res[i] = \"C\"\n        }\
    \ else if value >= 1.3 {\n            res[i] = \"C-\"\n        } else if value\
    \ >= 1.0 {\n            res[i] = \"D+\"\n        } else if value >= 0.7 {\n  \
    \          res[i] = \"D\"\n        } else if value >= 0.0 {\n            res[i]\
    \ = \"D-\"\n        } else {\n            res[i] = \"E\"\n        }\n    }\n \
    \   return res\n}\n", "    grade_index := []float64{4.0, 3.7, 3.3, 3.0, 2.7, 2.3,\
    \ 2.0, 1.7, 1.3, 1.0, 0.7, 0.0}\n    grade_label := []string{\"A+\", \"A\", \"\
    A-\", \"B+\", \"B\", \"B-\", \"C+\", \"C\", \"C-\", \"D+\", \"D\", \"D-\", \"\
    E\"}\n    if len(grades) < 1 {\n        fmt.Println(\"Empty input\")\n       \
    \ return nil\n    }\n    result := make([]string, len(grades))\n    for i := 0;\
    \ i < len(grades); i++ {\n        if grades[i] < 0.0 {\n            fmt.Println(\"\
    Input grade less than 0\")\n            return nil\n        }\n        if grades[i]\
    \ == 0.0 {\n            result[i] = \"E\"\n            continue\n        }\n \
    \       for j := 0; j < len(grade_index); j++ {\n            if grades[i] >= grade_index[j]\
    \ {\n                result[i] = grade_label[j]\n                break\n     \
    \       }\n        }\n    }\n    return result\n}\n", "    // WRITE YOUR CODE\
    \ HERE.\n    var letter_grades []string\n    for _, grade := range grades {\n\
    \        if grade >= 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    res := make([]string,\
    \ len(grades))\n    for i, grade := range grades {\n        if grade == 4.0 {\n\
    \            res[i] = \"A+\"\n        } else if grade >= 3.7 {\n            res[i]\
    \ = \"A\"\n        } else if grade >= 3.3 {\n            res[i] = \"A-\"\n   \
    \     } else if grade >= 3.0 {\n            res[i] = \"B+\"\n        } else if\
    \ grade >= 2.7 {\n            res[i] = \"B\"\n        } else if grade >= 2.3 {\n\
    \            res[i] = \"B-\"\n        } else if grade >= 2.0 {\n            res[i]\
    \ = \"C+\"\n        } else if grade >= 1.7 {\n            res[i] = \"C\"\n   \
    \     } else if grade >= 1.3 {\n            res[i] = \"C-\"\n        } else if\
    \ grade >= 1.0 {\n            res[i] = \"D+\"\n        } else if grade >= 0.7\
    \ {\n            res[i] = \"D\"\n        } else if grade > 0.0 {\n           \
    \ res[i] = \"D-\"\n        } else {\n            res[i] = \"E\"\n        }\n \
    \   }\n    return res\n}\n", "    var result []string\n    for _, grade := range\
    \ grades {\n        if grade >= 4.0 {\n            result = append(result, \"\
    A+\")\n        } else if grade >= 3.7 {\n            result = append(result, \"\
    A\")\n        } else if grade >= 3.3 {\n            result = append(result, \"\
    A-\")\n        } else if grade >= 3.0 {\n            result = append(result, \"\
    B+\")\n        } else if grade >= 2.7 {\n            result = append(result, \"\
    B\")\n        } else if grade >= 2.3 {\n            result = append(result, \"\
    B-\")\n        } else if grade >= 2.0 {\n            result = append(result, \"\
    C+\")\n        } else if grade >= 1.7 {\n            result = append(result, \"\
    C\")\n        } else if grade >= 1.3 {\n            result = append(result, \"\
    C-\")\n        } else if grade >= 1.0 {\n            result = append(result, \"\
    D+\")\n        } else if grade >= 0.7 {\n            result = append(result, \"\
    D\")\n        } else if grade >= 0.0 {\n            result = append(result, \"\
    D-\")\n        } else {\n            result = append(result, \"E\")\n        }\n\
    \    }\n    return result\n}\n", "    var letter_grades []string\n    for _, grade\
    \ := range grades {\n        if grade >= 4.0 {\n            letter_grades = append(letter_grades,\
    \ \"A+\")\n        } else if grade >= 3.7 {\n            letter_grades = append(letter_grades,\
    \ \"A\")\n        } else if grade >= 3.3 {\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        } else if grade >= 3.0 {\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    var result []string\n\
    \    for _, grade := range grades {\n        if grade == 4.0 {\n            result\
    \ = append(result, \"A+\")\n        } else if grade >= 3.7 {\n            result\
    \ = append(result, \"A\")\n        } else if grade >= 3.3 {\n            result\
    \ = append(result, \"A-\")\n        } else if grade >= 3.0 {\n            result\
    \ = append(result, \"B+\")\n        } else if grade >= 2.7 {\n            result\
    \ = append(result, \"B\")\n        } else if grade >= 2.3 {\n            result\
    \ = append(result, \"B-\")\n        } else if grade >= 2.0 {\n            result\
    \ = append(result, \"C+\")\n        } else if grade >= 1.7 {\n            result\
    \ = append(result, \"C\")\n        } else if grade >= 1.3 {\n            result\
    \ = append(result, \"C-\")\n        } else if grade >= 1.0 {\n            result\
    \ = append(result, \"D+\")\n        } else if grade >= 0.7 {\n            result\
    \ = append(result, \"D\")\n        } else if grade >= 0.0 {\n            result\
    \ = append(result, \"D-\")\n        } else {\n            result = append(result,\
    \ \"E\")\n        }\n    }\n    return result\n}\n", "    result := make([]string,\
    \ len(grades))\n    for i, val := range grades {\n        if val >= 4.0 {\n  \
    \          result[i] = \"A+\"\n        } else if val >= 3.7 {\n            result[i]\
    \ = \"A\"\n        } else if val >= 3.3 {\n            result[i] = \"A-\"\n  \
    \      } else if val >= 3.0 {\n            result[i] = \"B+\"\n        } else\
    \ if val >= 2.7 {\n            result[i] = \"B\"\n        } else if val >= 2.3\
    \ {\n            result[i] = \"B-\"\n        } else if val >= 2.0 {\n        \
    \    result[i] = \"C+\"\n        } else if val >= 1.7 {\n            result[i]\
    \ = \"C\"\n        } else if val >= 1.3 {\n            result[i] = \"C-\"\n  \
    \      } else if val >= 1.0 {\n            result[i] = \"D+\"\n        } else\
    \ if val >= 0.7 {\n            result[i] = \"D\"\n        } else if val >= 0.0\
    \ {\n            result[i] = \"D-\"\n        } else {\n            result[i] =\
    \ \"E\"\n        }\n    }\n    return result\n}\n", "    output := make([]string,\
    \ len(grades))\n    for i, grade := range grades {\n        switch {\n       \
    \ case grade >= 4.0:\n            output[i] = \"A+\"\n        case grade >= 3.7:\n\
    \            output[i] = \"A\"\n        case grade >= 3.3:\n            output[i]\
    \ = \"A-\"\n        case grade >= 3.0:\n            output[i] = \"B+\"\n     \
    \   case grade >= 2.7:\n            output[i] = \"B\"\n        case grade >= 2.3:\n\
    \            output[i] = \"B-\"\n        case grade >= 2.0:\n            output[i]\
    \ = \"C+\"\n        case grade >= 1.7:\n            output[i] = \"C\"\n      \
    \  case grade >= 1.3:\n            output[i] = \"C-\"\n        case grade >= 1.0:\n\
    \            output[i] = \"D+\"\n        case grade >= 0.7:\n            output[i]\
    \ = \"D\"\n        case grade >= 0.0:\n            output[i] = \"D-\"\n      \
    \  default:\n            output[i] = \"E\"\n        }\n    }\n    return output\n\
    }\n", "    // Write your code here\n}\n", "\tresult := make([]string, len(grades))\n\
    \tfor i, grade := range grades {\n\t\tif grade >= 4.0 {\n\t\t\tresult[i] = \"\
    A+\"\n\t\t} else if grade >= 3.7 {\n\t\t\tresult[i] = \"A\"\n\t\t} else if grade\
    \ >= 3.3 {\n\t\t\tresult[i] = \"A-\"\n\t\t} else if grade >= 3.0 {\n\t\t\tresult[i]\
    \ = \"B+\"\n\t\t} else if grade >= 2.7 {\n\t\t\tresult[i] = \"B\"\n\t\t} else\
    \ if grade >= 2.3 {\n\t\t\tresult[i] = \"B-\"\n\t\t} else if grade >= 2.0 {\n\t\
    \t\tresult[i] = \"C+\"\n\t\t} else if grade >= 1.7 {\n\t\t\tresult[i] = \"C\"\n\
    \t\t} else if grade >= 1.3 {\n\t\t\tresult[i] = \"C-\"\n\t\t} else if grade >=\
    \ 1.0 {\n\t\t\tresult[i] = \"D+\"\n\t\t} else if grade >= 0.7 {\n\t\t\tresult[i]\
    \ = \"D\"\n\t\t} else if grade >= 0.0 {\n\t\t\tresult[i] = \"D-\"\n\t\t} else\
    \ {\n\t\t\tresult[i] = \"E\"\n\t\t}\n\t}\n\treturn result\n}\n", "    var letters\
    \ []string\n\n    for _, grade := range grades {\n        switch {\n        case\
    \ grade >= 4.0:\n            letters = append(letters, \"A+\")\n        case grade\
    \ >= 3.7:\n            letters = append(letters, \"A\")\n        case grade >=\
    \ 3.3:\n            letters = append(letters, \"A-\")\n        case grade >= 3.0:\n\
    \            letters = append(letters, \"B+\")\n        case grade >= 2.7:\n \
    \           letters = append(letters, \"B\")\n        case grade >= 2.3:\n   \
    \         letters = append(letters, \"B-\")\n        case grade >= 2.0:\n    \
    \        letters = append(letters, \"C+\")\n        case grade >= 1.7:\n     \
    \       letters = append(letters, \"C\")\n        case grade >= 1.3:\n       \
    \     letters = append(letters, \"C-\")\n        case grade >= 1.0:\n        \
    \    letters = append(letters, \"D+\")\n        case grade >= 0.7:\n         \
    \   letters = append(letters, \"D\")\n        case grade >= 0.0:\n           \
    \ letters = append(letters, \"D-\")\n        default:\n            letters = append(letters,\
    \ \"E\")\n        }\n    }\n\n    return letters\n}\n", "    letters := []string{}\n\
    \    for _, grade := range grades {\n        if grade > 4.0 {\n            letters\
    \ = append(letters, \"D+\")\n        } else if grade == 4.0 {\n            letters\
    \ = append(letters, \"A+\")\n        } else if grade > 3.7 {\n            letters\
    \ = append(letters, \"A\")\n        } else if grade > 3.3 {\n            letters\
    \ = append(letters, \"A-\")\n        } else if grade > 3.0 {\n            letters\
    \ = append(letters, \"B+\")\n        } else if grade > 2.7 {\n            letters\
    \ = append(letters, \"B\")\n        } else if grade > 2.3 {\n            letters\
    \ = append(letters, \"B-\")\n        } else if grade > 2.0 {\n            letters\
    \ = append(letters, \"C+\")\n        } else if grade > 1.7 {\n            letters\
    \ = append(letters, \"C\")\n        } else if grade > 1.3 {\n            letters\
    \ = append(letters, \"C-\")\n        } else if grade > 1.0 {\n            letters\
    \ = append(letters, \"D+\")\n        } else if grade > 0.7 {\n            letters\
    \ = append(letters, \"D\")\n        } else if grade > 0.0 {\n            letters\
    \ = append(letters, \"D-\")\n        } else {\n            letters = append(letters,\
    \ \"E\")\n        }\n    }\n    return letters\n}\n", "    var result []string\n\
    \    for _, val := range grades {\n        if val == 4.0 {\n            result\
    \ = append(result, \"A+\")\n        } else if val > 3.7 {\n            result\
    \ = append(result, \"A\")\n        } else if val > 3.3 {\n            result =\
    \ append(result, \"A-\")\n        } else if val > 3.0 {\n            result =\
    \ append(result, \"B+\")\n        } else if val > 2.7 {\n            result =\
    \ append(result, \"B\")\n        } else if val > 2.3 {\n            result = append(result,\
    \ \"B-\")\n        } else if val > 2.0 {\n            result = append(result,\
    \ \"C+\")\n        } else if val > 1.7 {\n            result = append(result,\
    \ \"C\")\n        } else if val > 1.3 {\n            result = append(result, \"\
    C-\")\n        } else if val > 1.0 {\n            result = append(result, \"D+\"\
    )\n        } else if val > 0.7 {\n            result = append(result, \"D\")\n\
    \        } else if val > 0.0 {\n            result = append(result, \"D-\")\n\
    \        } else {\n            result = append(result, \"E\")\n        }\n   \
    \ }\n    return result\n}\n", "    return grade_equation_list_comp(grades)\n}\n",
  "    var result []string\n\n    for _, grade := range grades {\n        if grade\
    \ >= 4.0 {\n            result = append(result, \"A+\")\n        } else if grade\
    \ >= 3.7 {\n            result = append(result, \"A\")\n        } else if grade\
    \ >= 3.3 {\n            result = append(result, \"A-\")\n        } else if grade\
    \ >= 3.0 {\n            result = append(result, \"B+\")\n        } else if grade\
    \ >= 2.7 {\n            result = append(result, \"B\")\n        } else if grade\
    \ >= 2.3 {\n            result = append(result, \"B-\")\n        } else if grade\
    \ >= 2.0 {\n            result = append(result, \"C+\")\n        } else if grade\
    \ >= 1.7 {\n            result = append(result, \"C\")\n        } else if grade\
    \ >= 1.3 {\n            result = append(result, \"C-\")\n        } else if grade\
    \ >= 1.0 {\n            result = append(result, \"D+\")\n        } else if grade\
    \ >= 0.7 {\n            result = append(result, \"D\")\n        } else if grade\
    \ >= 0.0 {\n            result = append(result, \"D-\")\n        } else {\n  \
    \          result = append(result, \"E\")\n        }\n    }\n\n    return result\n\
    }\n", "\tvar letter_grades []string\n\tfor _, grade := range grades {\n\t\tletter_grade\
    \ := get_letter_grade(grade)\n\t\tletter_grades = append(letter_grades, letter_grade)\n\
    \t}\n\treturn letter_grades\n}\n", "    var letter_grades []string\n    for _,\
    \ grade := range grades {\n        if grade >= 4.0 {\n            letter_grades\
    \ = append(letter_grades, \"A+\")\n        } else if grade >= 3.7 {\n        \
    \    letter_grades = append(letter_grades, \"A\")\n        } else if grade >=\
    \ 3.3 {\n            letter_grades = append(letter_grades, \"A-\")\n        }\
    \ else if grade >= 3.0 {\n            letter_grades = append(letter_grades, \"\
    B+\")\n        } else if grade >= 2.7 {\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        } else if grade >= 2.3 {\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        } else if grade >= 2.0 {\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        } else if grade >= 1.7 {\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        } else if grade >= 1.3 {\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        } else if grade >= 1.0 {\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        } else if grade >= 0.7 {\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        } else if grade >= 0.0 {\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        } else {\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    alphas := []string{}\n\
    \    for _, g := range grades {\n        if g > 4.0 {\n            alphas = append(alphas,\
    \ \"A+\")\n        } else if g > 3.7 {\n            alphas = append(alphas, \"\
    A\")\n        } else if g > 3.3 {\n            alphas = append(alphas, \"A-\"\
    )\n        } else if g > 3.0 {\n            alphas = append(alphas, \"B+\")\n\
    \        } else if g > 2.7 {\n            alphas = append(alphas, \"B\")\n   \
    \     } else if g > 2.3 {\n            alphas = append(alphas, \"B-\")\n     \
    \   } else if g > 2.0 {\n            alphas = append(alphas, \"C+\")\n       \
    \ } else if g > 1.7 {\n            alphas = append(alphas, \"C\")\n        } else\
    \ if g > 1.3 {\n            alphas = append(alphas, \"C-\")\n        } else if\
    \ g > 1.0 {\n            alphas = append(alphas, \"D+\")\n        } else if g\
    \ > 0.7 {\n            alphas = append(alphas, \"D\")\n        } else if g > 0.0\
    \ {\n            alphas = append(alphas, \"D-\")\n        } else {\n         \
    \   alphas = append(alphas, \"E\")\n        }\n    }\n    return alphas\n}\n",
  "    var (\n        letter_grades []string\n        grade float64\n    )\n    for\
    \ i := 0; i < len(grades); i++ {\n        switch {\n        case grades[i] >=\
    \ 4.0:\n            letter_grades = append(letter_grades, \"A+\")\n        case\
    \ grades[i] >= 3.7:\n            letter_grades = append(letter_grades, \"A\")\n\
    \        case grades[i] >= 3.3:\n            letter_grades = append(letter_grades,\
    \ \"A-\")\n        case grades[i] >= 3.0:\n            letter_grades = append(letter_grades,\
    \ \"B+\")\n        case grades[i] >= 2.7:\n            letter_grades = append(letter_grades,\
    \ \"B\")\n        case grades[i] >= 2.3:\n            letter_grades = append(letter_grades,\
    \ \"B-\")\n        case grades[i] >= 2.0:\n            letter_grades = append(letter_grades,\
    \ \"C+\")\n        case grades[i] >= 1.7:\n            letter_grades = append(letter_grades,\
    \ \"C\")\n        case grades[i] >= 1.3:\n            letter_grades = append(letter_grades,\
    \ \"C-\")\n        case grades[i] >= 1.0:\n            letter_grades = append(letter_grades,\
    \ \"D+\")\n        case grades[i] >= 0.7:\n            letter_grades = append(letter_grades,\
    \ \"D\")\n        case grades[i] >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"D-\")\n        case grades[i] >= 0.0:\n            letter_grades = append(letter_grades,\
    \ \"E\")\n        }\n    }\n    return letter_grades\n}\n", "    // Write your\
    \ code here\n    return nil\n}\n", "    return []string{}\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

language: go_test.go
name: HumanEval_84_solve
results:
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var binaryNum string\n    for i := N; i > 0; i /= 2 {\n      \
    \  if i % 2 == 0 {\n            binaryNum = \"0\" + binaryNum\n        } else\
    \ {\n            binaryNum = \"1\" + binaryNum\n        }\n    }\n    return binaryNum\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdut85rdw_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdut85rdw_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdut85rdw_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdut85rdw_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdut85rdw_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    str := \"\"\n    for N > 0 {\n        if N % 2 == 0 {\n      \
    \      str = \"0\" + str\n        } else {\n            str = \"1\" + str\n  \
    \      }\n        N /= 2\n    }\n    return str\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmn9982g3_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpmn9982g3_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpmn9982g3_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpmn9982g3_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpmn9982g3_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    var res string\n    var n int\n    for\
    \ n = N; n > 0; n = n / 2 {\n        res = string(n % 2 + '0') + res\n    }\n\
    \    return res\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmp_lslylbk_test.go:26:15: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N == 1 {\n  \
    \      return \"1\"\n    }\n    if N < 4 {\n        return \"10\"\n    }\n   \
    \ if N < 8 {\n        return \"11\"\n    }\n    if N < 16 {\n        return \"\
    100\"\n    }\n    if N < 32 {\n        return \"101\"\n    }\n    if N < 64 {\n\
    \        return \"110\"\n    }\n    if N < 128 {\n        return \"111\"\n   \
    \ }\n    if N < 256 {\n        return \"1000\"\n    }\n    if N < 512 {\n    \
    \    return \"1001\"\n    }\n    if N < 1024 {\n        return \"1010\"\n    }\n\
    \    if N < 2048 {\n        return \"1011\"\n    }\n    if N < 4096 {\n      \
    \  return \"1100\"\n    }\n    if N < 8192 {\n        return \"1101\"\n    }\n\
    \    if N < 16384 {\n        return \"1110\"\n    }\n    if N < 32768 {\n    \
    \    return \"1111\"\n    }\n    if N < 65536 {\n        return \"100000\"\n \
    \   }\n    if N < 131072 {\n        return \"100001\"\n    }\n    if N < 262144\
    \ {\n        return \"100010\"\n    }\n    if N < 524288 {\n        return \"\
    100011\"\n    }\n    if N < 1048576 {\n        return \"100100\"\n    }\n    if\
    \ N < 2097152 {\n        return \"100101\"\n    }\n    if N < 4194304 {\n    \
    \    return \"100110\"\n    }\n    if N < 8388608 {\n        return \"100111\"\
    \n    }\n    if N < 16777216 {\n        return \"101000\"\n    }\n    if N < 33554432\
    \ {\n        return \"101001\"\n    }\n    if N < 67108864 {\n        return \"\
    101010\"\n    }\n    if N < 134217728 {\n        return \"101011\"\n    }\n  \
    \  if N < 268435456 {\n        return \"101100\"\n   \nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpnv347fx5_test.go:109:6: expected ''('', found TestSolve

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660075203
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var nums []int\n    var str string\n    for i := 0; i < N; i++\
    \ {\n        if i % 2 == 0 {\n            nums = append(nums, 0)\n        } else\
    \ {\n            nums = append(nums, 1)\n        }\n    }\n    for _, v := range\
    \ nums {\n        str += fmt.Sprintf(\"%d\", v)\n    }\n    return str\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7b1x5_test.go:54: expected '1', gotn\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpqlo7b1x5_test.go:54:\
    \ expected '110', got '010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101'\n\
    \    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7b1x5_test.go:54:\
    \ expected '1100', got '010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpqlo7b1x5_test.go:54:\
    \ expected '1001', got '01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    fmt.Println(N)\n    return \"1\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1000\n150\n147\n333\n963\n--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpb8i1slwr_test.go:43: expected '110', got '1'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpb8i1slwr_test.go:43: expected '1100',\
    \ got '1'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpb8i1slwr_test.go:43:\
    \ expected '1001', got '1'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmpb8i1slwr_test.go:43: expected '10010', got '1'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.007s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n\tvar result string\n\tvar remainder int\n\n\tfor N > 0 {\n\t\tremainder\
    \ = N % 2\n\t\tN = N / 2\n\t\tresult = fmt.Sprintf(\"%d%s\", remainder, result)\n\
    \t}\n\n\treturn result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpg4o3rlru_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpg4o3rlru_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpg4o3rlru_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpg4o3rlru_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpg4o3rlru_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n\t// Write your code here\n\treturn \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwu_14vcp_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwu_14vcp_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwu_14vcp_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwu_14vcp_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwu_14vcp_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    str := \"\"\n    var rem int\n    for N > 0 {\n        rem = N\
    \ % 2\n        str = fmt.Sprintf(\"%d%s\", rem, str)\n        N = N / 2\n    }\n\
    \    return str\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpkjcp2g11_test.go:49: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpkjcp2g11_test.go:49: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpkjcp2g11_test.go:49:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpkjcp2g11_test.go:49: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpkjcp2g11_test.go:49: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return fmt.Sprintf(\"%b\", N)\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpx8tinlfe_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpx8tinlfe_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpx8tinlfe_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpx8tinlfe_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpx8tinlfe_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    var bin string\n    for i := N; i > 0;\
    \ i /= 2 {\n        bin = fmt.Sprintf(\"%d\", i % 2) + bin\n    }\n    return\
    \ bin\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmponfa64op_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmponfa64op_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmponfa64op_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmponfa64op_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmponfa64op_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    str := \"\"\n    for N > 0 {\n        var r = N % 2\n        N\
    \ = N / 2\n        if r == 1 {\n            str = \"1\" + str\n        } else\
    \ {\n            str = \"0\" + str\n        }\n    }\n    return str\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp28h6mr9j_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp28h6mr9j_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp28h6mr9j_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp28h6mr9j_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp28h6mr9j_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for i := N; i > 0; i = i / 2 {\n      \
    \  fmt.Println(i)\n        result = fmt.Sprintf(\"%d%s\", i % 2, result)\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1000\n500\n250\n125\n62\n31\n15\n7\n3\n1\n150\n75\n37\n18\n9\n4\n2\n1\n\
    147\n73\n36\n18\n9\n4\n2\n1\n333\n166\n83\n41\n20\n10\n5\n2\n1\n963\n481\n240\n\
    120\n60\n30\n15\n7\n3\n1\n--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0\
    \ (0.00s)\n        tmpo8marhga_test.go:47: expected '1', got '1111101000'\n  \
    \  --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpo8marhga_test.go:47: expected\
    \ '110', got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n       \
    \ tmpo8marhga_test.go:47: expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3\
    \ (0.00s)\n        tmpo8marhga_test.go:47: expected '1001', got '101001101'\n\
    \    --- FAIL: TestSolve/test_num__4 (0.00s)\n        tmpo8marhga_test.go:47:\
    \ expected '10010', got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        if N % 2 == 0 {\n\
    \            result = \"0\" + result\n        } else {\n            result = \"\
    1\" + result\n        }\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpz4yzygb3_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpz4yzygb3_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpz4yzygb3_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpz4yzygb3_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpz4yzygb3_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.015s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    bits := make([]bool, 0)\n    for i := 0; i < 15; i++ {\n     \
    \   if N % 2 == 1 {\n            bits = append(bits, true)\n        } else {\n\
    \            bits = append(bits, false)\n        }\n        N /= 2\n    }\n  \
    \  str := \"\"\n    for i := len(bits) - 1; i >= 0; i-- {\n        if bits[i]\
    \ {\n            str += \"1\"\n        } else {\n            str += \"0\"\n  \
    \      }\n    }\n    return str\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpx7gx9uk3_test.go:59: expected '1', got '000001111101000'\n    ---\
    \ FAIL: TestSolve/test_num__1 (0.00s)\n        tmpx7gx9uk3_test.go:59: expected\
    \ '110', got '000000010010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n\
    \        tmpx7gx9uk3_test.go:59: expected '1100', got '000000010010011'\n    ---\
    \ FAIL: TestSolve/test_num__3 (0.00s)\n        tmpx7gx9uk3_test.go:59: expected\
    \ '1001', got '000000101001101'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmpx7gx9uk3_test.go:59: expected '10010', got '000001111000011'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // TODO: Implementation\n    return \"0\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqe2xc_cl_test.go:43: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpqe2xc_cl_test.go:43: expected '110', got '0'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpqe2xc_cl_test.go:43: expected '1100',\
    \ got '0'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpqe2xc_cl_test.go:43:\
    \ expected '1001', got '0'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmpqe2xc_cl_test.go:43: expected '10010', got '0'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    b := fmt.Sprintf(\"%b\", N)\n    return b\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwk5011iw_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpwk5011iw_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwk5011iw_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpwk5011iw_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpwk5011iw_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpu1a_pvua_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N < 2 {\n        return fmt.Sprintf(\"%d\", N)\n    }\n   \
    \ var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"%d%s\", N\
    \ % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmper0w51gm_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmper0w51gm_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmper0w51gm_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmper0w51gm_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmper0w51gm_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    res := \"\"\n    for ; N > 0; N /= 2 {\n        res = fmt.Sprintf(\"\
    %d\", N % 2) + res\n    }\n    return res\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8oosyr5j_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp8oosyr5j_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp8oosyr5j_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp8oosyr5j_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp8oosyr5j_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Convert decimal to binary and return the\n    // resulting\
    \ string\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpizlp743g_test.go:44: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpizlp743g_test.go:44: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpizlp743g_test.go:44:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpizlp743g_test.go:44: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpizlp743g_test.go:44: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N < 0 || N > 10000 {\n        return \"Error\"\n    }\n   \
    \ var result []int\n    for N > 0 {\n        result = append(result, N % 2)\n\
    \        N = N / 2\n    }\n    return IntSliceToString(result)\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpm_1e4hqp_test.go:30:12: undefined: IntSliceToString

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %v%v\", N % 2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpd76bmfko_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpd76bmfko_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpd76bmfko_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpd76bmfko_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpd76bmfko_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var input int = N\n    var result string\n    for input > 0 {\n\
    \        result = fmt.Sprintf(\"%d%s\", input % 2, result)\n        input = input\
    \ / 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjhm4xdbn_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpjhm4xdbn_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjhm4xdbn_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpjhm4xdbn_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpjhm4xdbn_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075206
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    sum := \"\"\n    for N > 0 {\n        b := N % 2\n        N =\
    \ N / 2\n        if b == 1 {\n            sum = \"1\" + sum\n        } else {\n\
    \            sum = \"0\" + sum\n        }\n    }\n    return sum\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp5j4q91up_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp5j4q91up_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp5j4q91up_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp5j4q91up_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp5j4q91up_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075207
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    s := \"\"\n    for i := N; i > 0; i /= 2 {\n        s = fmt.Sprintf(\"\
    %d\", i % 2) + s\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n \
    \ candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpn8lz9_2o_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpn8lz9_2o_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpn8lz9_2o_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpn8lz9_2o_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpn8lz9_2o_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    res := \"\"\n    for i := N; i > 0; i /= 2 {\n        res = fmt.Sprintf(\"\
    %d\", i % 2) + res\n    }\n    return res\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmperarcyo2_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmperarcyo2_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmperarcyo2_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmperarcyo2_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmperarcyo2_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N < 0 || N > 10000 {\n        panic(\"Bad argument\")\n   \
    \ }\n    sum := 0\n    for N > 0 {\n        sum += N % 2\n        N /= 2\n   \
    \ }\n    return fmt.Sprintf(\"%d\", sum)\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpb0e85_0p_test.go:50: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpb0e85_0p_test.go:50: expected '110', got '4'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpb0e85_0p_test.go:50: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpb0e85_0p_test.go:50:\
    \ expected '1001', got '5'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmpb0e85_0p_test.go:50: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    sum := \"\"\n  \
    \  for N > 0 {\n        sum = fmt.Sprintf(\"%v%v\", N%2, sum)\n        N /= 2\n\
    \    }\n    return sum\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6_jcivvc_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp6_jcivvc_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp6_jcivvc_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp6_jcivvc_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp6_jcivvc_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"0\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwzq7rhek_test.go:42: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwzq7rhek_test.go:42: expected '110', got '0'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwzq7rhek_test.go:42: expected '1100',\
    \ got '0'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwzq7rhek_test.go:42:\
    \ expected '1001', got '0'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmpwzq7rhek_test.go:42: expected '10010', got '0'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.007s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var i, j int\n    var r []byte\n    b := make([]byte, 10)\n  \
    \  for i = 0; N > 0; i++ {\n        b[i] = byte(N % 2)\n        N /= 2\n    }\n\
    \    for j = 0; j < i; j++ {\n        r = append(r, b[i-j-1])\n    }\n    return\
    \ string(r)\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpi_fw0p_w_test.go:52: expected '1', got '\x01\x01\x01\x01\x01\0\x01\
    \0\0\0'\n    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpi_fw0p_w_test.go:52:\
    \ expected '110', got '\x01\0\0\x01\0\x01\x01\0'\n    --- FAIL: TestSolve/test_num__2\
    \ (0.00s)\n        tmpi_fw0p_w_test.go:52: expected '1100', got '\x01\0\0\x01\0\
    \0\x01\x01'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpi_fw0p_w_test.go:52:\
    \ expected '1001', got '\x01\0\x01\0\0\x01\x01\0\x01'\n    --- FAIL: TestSolve/test_num__4\
    \ (0.00s)\n        tmpi_fw0p_w_test.go:52: expected '10010', got '\x01\x01\x01\
    \x01\0\0\0\0\x01\x01'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N < 0 {\n   \
    \     return \"-\" + solve(-N)\n    }\n    var s string\n    for N > 0 {\n   \
    \     s = fmt.Sprintf(\"%d\", N & 1) + s\n        N >>= 1\n    }\n    return s\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpxs21mwct_test.go:53: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpxs21mwct_test.go:53: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpxs21mwct_test.go:53:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpxs21mwct_test.go:53: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpxs21mwct_test.go:53: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N < 1 || N >\
    \ 10000 {\n        return \"\"\n    }\n    r := \"\"\n    for N > 0 {\n      \
    \  r = fmt.Sprintf(\"%v%v\", N%2, r)\n        N = N/2\n    }\n    return r\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzn1ez89z_test.go:53: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpzn1ez89z_test.go:53: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpzn1ez89z_test.go:53:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpzn1ez89z_test.go:53: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpzn1ez89z_test.go:53: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var o string\n    for N > 0 {\n        if N%2 == 0 {\n       \
    \     o = \"0\" + o\n        } else {\n            o = \"1\" + o\n        }\n\
    \        N = N / 2\n    }\n    return o\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpw3zfl43s_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpw3zfl43s_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpw3zfl43s_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpw3zfl43s_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpw3zfl43s_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    b := \"\"\n    for N > 0 {\n        if N % 2 == 0 {\n        \
    \    b = \"0\" + b\n        } else {\n            b = \"1\" + b\n        }\n \
    \       N /= 2\n    }\n    return b\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpuptmmotu_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpuptmmotu_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpuptmmotu_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpuptmmotu_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpuptmmotu_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var r string\n    if N < 2 {\n        return fmt.Sprintf(\"%d\"\
    , N)\n    }\n    n := N\n    for n > 0 {\n        m := n % 2\n        r = fmt.Sprintf(\"\
    %d%s\", m, r)\n        n = n / 2\n    }\n    return r\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpi9e_sb_x_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpi9e_sb_x_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpi9e_sb_x_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpi9e_sb_x_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpi9e_sb_x_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for i := 0; i < 32; i++ {\n        if (N\
    \ & (1 << i)) > 0 {\n            result = \"1\" + result\n        } else {\n \
    \           result = \"0\" + result\n        }\n    }\n    return result\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp60l2txgt_test.go:50: expected '1', got '00000000000000000000001111101000'\n\
    \    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmp60l2txgt_test.go:50:\
    \ expected '110', got '00000000000000000000000010010110'\n    --- FAIL: TestSolve/test_num__2\
    \ (0.00s)\n        tmp60l2txgt_test.go:50: expected '1100', got '00000000000000000000000010010011'\n\
    \    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp60l2txgt_test.go:50:\
    \ expected '1001', got '00000000000000000000000101001101'\n    --- FAIL: TestSolve/test_num__4\
    \ (0.00s)\n        tmp60l2txgt_test.go:50: expected '10010', got '00000000000000000000001111000011'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var out string\n    for N > 0 {\n        if N % 2 == 0 {\n   \
    \         out = \"0\" + out\n        } else {\n            out = \"1\" + out\n\
    \        }\n        N /= 2\n    }\n    return out\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6vze54_z_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp6vze54_z_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp6vze54_z_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp6vze54_z_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp6vze54_z_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    digits := []string{}\n    for N > 0 {\n        digits = append(digits,\
    \ fmt.Sprintf(\"%d\", N % 2))\n        N /= 2\n    }\n    var result string\n\
    \    for i := len(digits) - 1; i >= 0; i-- {\n        result += digits[i]\n  \
    \  }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpps9zf5an_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpps9zf5an_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpps9zf5an_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpps9zf5an_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpps9zf5an_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    b := fmt.Sprintf(\"%b\", N)\n    return b\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwk5011iw_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpwk5011iw_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwk5011iw_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpwk5011iw_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpwk5011iw_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var binary_slice []int\n    for N > 0 {\n        binary_slice\
    \ = append(binary_slice, N % 2)\n        N = N / 2\n    }\n    fmt.Println(binary_slice)\n\
    \    return \"1\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[0 0 0 1 0 1 1 1 1 1]\n[0 1 1 0 1 0 0 1]\n[1 1 0 0 1 0 0 1]\n[1 0 1 1 0\
    \ 0 1 0 1]\n[1 1 0 0 0 0 1 1 1 1]\n--- FAIL: TestSolve (0.00s)\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpgoko1lvx_test.go:48: expected '110',\
    \ got '1'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpgoko1lvx_test.go:48:\
    \ expected '1100', got '1'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n    \
    \    tmpgoko1lvx_test.go:48: expected '1001', got '1'\n    --- FAIL: TestSolve/test_num__4\
    \ (0.00s)\n        tmpgoko1lvx_test.go:48: expected '10010', got '1'\nFAIL\nFAIL\t\
    command-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpu1a_pvua_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result = \"\"\n    for N > 0 {\n        lastDigit := N % 2\n\
    \        result = fmt.Sprintf(\"%v%v\", lastDigit, result)\n        N = N / 2\n\
    \    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate :=\
    \ solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpltdmowbr_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpltdmowbr_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpltdmowbr_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpltdmowbr_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpltdmowbr_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %v%v\", N%2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp1a0kev4t_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp1a0kev4t_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp1a0kev4t_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp1a0kev4t_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp1a0kev4t_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // TODO: write code here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp6__gc9ok_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp6__gc9ok_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp6__gc9ok_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp6__gc9ok_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmp6__gc9ok_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.010s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var str string\n    for N > 0 {\n        str = fmt.Sprintf(\"\
    %d%s\", N % 2, str)\n        N /= 2\n    }\n    return str\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8agdvvcn_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp8agdvvcn_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp8agdvvcn_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp8agdvvcn_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp8agdvvcn_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n\n    result := \"\"\
    \n    for N > 0 {\n        result = fmt.Sprintf(\"%d%s\", N % 2, result)\n   \
    \     N /= 2\n    }\n\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpaygi51lb_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpaygi51lb_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpaygi51lb_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpaygi51lb_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpaygi51lb_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    s := fmt.Sprintf(\"%b\", N)\n    return s\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpj9zp8xw4_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpj9zp8xw4_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpj9zp8xw4_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpj9zp8xw4_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpj9zp8xw4_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var ans []int\n    for N >= 1 {\n        if N%2 == 0 {\n     \
    \       ans = append(ans, 0)\n        } else {\n            ans = append(ans,\
    \ 1)\n        }\n        N /= 2\n    }\n    var s string\n    for i := len(ans)-1;\
    \ i >= 0; i-- {\n        s += fmt.Sprintf(\"%d\", ans[i])\n    }\n    return s\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8nnopgtf_test.go:55: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp8nnopgtf_test.go:55: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp8nnopgtf_test.go:55:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp8nnopgtf_test.go:55: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp8nnopgtf_test.go:55: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075209
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    i := 0\n    for N > 0 {\n        if (N\
    \ % 2) > 0 {\n            result = fmt.Sprintf(\"%d%s\", N % 2, result)\n    \
    \    } else {\n            result = fmt.Sprintf(\"%s\", result)\n        }\n \
    \       N = N / 2\n        i++\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp4eaz_o8f_test.go:53: expected '1', got '111111'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp4eaz_o8f_test.go:53: expected '110', got '1111'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmp4eaz_o8f_test.go:53: expected\
    \ '1100', got '1111'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp4eaz_o8f_test.go:53:\
    \ expected '1001', got '11111'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n\
    \        tmp4eaz_o8f_test.go:53: expected '10010', got '111111'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075209
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var out string\n    x := fmt.Sprintf(\"%b\", N)\n    fmt.Println(x)\n\
    \    return out\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1111101000\n10010110\n10010011\n101001101\n1111000011\n--- FAIL: TestSolve\
    \ (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n        tmpm3591v95_test.go:45:\
    \ expected '1', got ''\n    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpm3591v95_test.go:45:\
    \ expected '110', got ''\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n      \
    \  tmpm3591v95_test.go:45: expected '1100', got ''\n    --- FAIL: TestSolve/test_num__3\
    \ (0.00s)\n        tmpm3591v95_test.go:45: expected '1001', got ''\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpm3591v95_test.go:45: expected '10010',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n\n    binary_str :=\
    \ \"\"\n    for N > 0 {\n        if N%2 == 0 {\n            binary_str = \"0\"\
    \ + binary_str\n        } else {\n            binary_str = \"1\" + binary_str\n\
    \        }\n        N = N / 2\n    }\n    return binary_str\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpw4w2rxyp_test.go:55: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpw4w2rxyp_test.go:55: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpw4w2rxyp_test.go:55:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpw4w2rxyp_test.go:55: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpw4w2rxyp_test.go:55: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    num := N\n    bin := \"\"\n    for num > 0 {\n        rem := num\
    \ % 2\n        bin = fmt.Sprintf(\"%d%s\", rem, bin)\n        num = num / 2\n\
    \    }\n    return bin\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfasr9bt0_test.go:49: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpfasr9bt0_test.go:49: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpfasr9bt0_test.go:49:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpfasr9bt0_test.go:49: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpfasr9bt0_test.go:49: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var count int\n    var res string\n    for N > 0 {\n        count\
    \ = N % 2\n        res = fmt.Sprintf(\"%v%v\", count, res)\n        N = N / 2\n\
    \    }\n    return res\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdk3dx1w5_test.go:49: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdk3dx1w5_test.go:49: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdk3dx1w5_test.go:49:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdk3dx1w5_test.go:49: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdk3dx1w5_test.go:49: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // write your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpbxnw9ydd_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpbxnw9ydd_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpbxnw9ydd_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpbxnw9ydd_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpbxnw9ydd_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    r := []string{}\n    for N > 0 {\n        if N % 2 == 0 {\n  \
    \          r = append(r, \"0\")\n        } else {\n            r = append(r, \"\
    1\")\n        }\n        N = N / 2\n    }\n    return reverse(r)\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbncdio1b_test.go:31:12: undefined: reverse

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N%2, result)\n        N = N / 2\n    }\n\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpcn0l66ml_test.go:49: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpcn0l66ml_test.go:49: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpcn0l66ml_test.go:49:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpcn0l66ml_test.go:49: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpcn0l66ml_test.go:49: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var ret string\n    for i := N; i > 0; i = i / 2 {\n        ret\
    \ = fmt.Sprintf(\"%v%v\", i % 2, ret)\n    }\n    return ret\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzjp9bd_z_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpzjp9bd_z_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpzjp9bd_z_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpzjp9bd_z_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpzjp9bd_z_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    result := \"\"\n\
    \    for N > 0 {\n        result = fmt.Sprintf(\"%d%s\", N%2, result)\n      \
    \  N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpt_i2z1hf_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpt_i2z1hf_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpt_i2z1hf_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpt_i2z1hf_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpt_i2z1hf_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk0djoyfi_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpk0djoyfi_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk0djoyfi_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpk0djoyfi_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpk0djoyfi_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for i := N; i > 0; i /= 2 {\n        result\
    \ = fmt.Sprintf(\"%d%s\", i % 2, result)\n    }\n    return result\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpd68kersk_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpd68kersk_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpd68kersk_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpd68kersk_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpd68kersk_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // return intToBinary(N)\n    return fmt.Sprintf(\"%b\", N)\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp0rbaz2bf_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp0rbaz2bf_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp0rbaz2bf_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp0rbaz2bf_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp0rbaz2bf_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var b = fmt.Sprintf(\"%b\", N)\n    return b\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdtq1ct4m_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdtq1ct4m_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdtq1ct4m_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdtq1ct4m_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdtq1ct4m_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Your code here\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpc8cc740d_test.go:23:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    var r string\n    for N > 0 {\n       \
    \ if N % 2 == 0 {\n            r = \"0\" + r\n        } else {\n            r\
    \ = \"1\" + r\n        }\n        N = N / 2\n    }\n    return r\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpm1ocps7c_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpm1ocps7c_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpm1ocps7c_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpm1ocps7c_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpm1ocps7c_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfe7se98o_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpfe7se98o_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpfe7se98o_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpfe7se98o_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpfe7se98o_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var s string\n    for N > 0 {\n        if N % 2 == 0 {\n     \
    \       s = \"0\" + s\n        } else {\n            s = \"1\" + s\n        }\n\
    \        N /= 2\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmprsnimwz1_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmprsnimwz1_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmprsnimwz1_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmprsnimwz1_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmprsnimwz1_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N%2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpso62dz5d_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpso62dz5d_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpso62dz5d_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmuag5e5k_test.go:45: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpmuag5e5k_test.go:45: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpmuag5e5k_test.go:45: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpmuag5e5k_test.go:45:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpmuag5e5k_test.go:45: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfe7se98o_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpfe7se98o_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpfe7se98o_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpfe7se98o_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpfe7se98o_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    sum := 0\n    for N > 0 {\n        sum += N % 2\n        N /=\
    \ 2\n    }\n    return fmt.Sprintf(\"%d\", sum)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8elp2_ok_test.go:47: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp8elp2_ok_test.go:47: expected '110', got '4'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp8elp2_ok_test.go:47: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp8elp2_ok_test.go:47:\
    \ expected '1001', got '5'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp8elp2_ok_test.go:47: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    answer := \"\"\n    for {\n        r := N % 2\n        N = N /\
    \ 2\n        if N == 0 {\n            return string(r) + answer\n        }\n \
    \       answer = string(r) + answer\n    }\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmp8l1eyvng_test.go:27:20: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    /tmp/tmp8l1eyvng_test.go:29:18: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdnxf1q2z_test.go:45: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdnxf1q2z_test.go:45: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdnxf1q2z_test.go:45:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdnxf1q2z_test.go:45: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdnxf1q2z_test.go:45: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    r := \"\"\n    for N > 0 {\n    \
    \    n := N % 2\n        N = N / 2\n        r = fmt.Sprintf(\"%v%v\", n, r)\n\
    \    }\n    return r\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwl_d09m7_test.go:49: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpwl_d09m7_test.go:49: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpwl_d09m7_test.go:49:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpwl_d09m7_test.go:49: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpwl_d09m7_test.go:49: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    res := \"\"\n    var i int\n    for {\n        if N == 0 {\n \
    \           break\n        }\n        i = N % 2\n        N = N / 2\n        res\
    \ = fmt.Sprintf(\"%d%s\", i, res)\n    }\n    return res\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp4o_g5w6h_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp4o_g5w6h_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp4o_g5w6h_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp4o_g5w6h_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp4o_g5w6h_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N < 0 || N > 10000 {\n        return \"\"\n    }\n    var sum\
    \ string\n    for N > 0 {\n        sum = fmt.Sprintf(\"%v%v\", N%2, sum)\n   \
    \     N = N / 2\n    }\n    return sum\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfoywskzn_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpfoywskzn_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpfoywskzn_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpfoywskzn_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpfoywskzn_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    res := \"\"\n    for N > 0 {\n  \
    \      if N % 2 == 0 {\n            res = \"0\" + res\n        } else {\n    \
    \        res = \"1\" + res\n        }\n        N /= 2\n    }\n    return res\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzml1i3jy_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpzml1i3jy_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpzml1i3jy_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpzml1i3jy_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpzml1i3jy_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var totalSum int = 0\n    for N > 0 {\n        totalSum += N %\
    \ 2\n        N /= 2\n    }\n    return fmt.Sprintf(\"%d\", totalSum)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp058pj16p_test.go:47: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp058pj16p_test.go:47: expected '110', got '4'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp058pj16p_test.go:47: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp058pj16p_test.go:47:\
    \ expected '1001', got '5'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp058pj16p_test.go:47: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075212
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var str = \"\"\n    for N > 0 {\n        if N % 2 == 0 {\n   \
    \         str = \"0\" + str\n        } else {\n            str = \"1\" + str\n\
    \        }\n        N = N / 2\n    }\n    return str\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp9y__xgej_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp9y__xgej_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp9y__xgej_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp9y__xgej_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp9y__xgej_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075213
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    out := \"\"\n    for N > 0 {\n        out = fmt.Sprintf(\"%v%v\"\
    , N % 2, out)\n        N /= 2\n    }\n    return out\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvbas3l2p_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpvbas3l2p_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpvbas3l2p_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpvbas3l2p_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpvbas3l2p_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075213
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N == 1 {\n  \
    \      return \"1\"\n    }\n    if N % 2 == 0 {\n        return solve(N / 2) +\
    \ \"0\"\n    }\n    return solve(N / 2) + \"1\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqkey68gj_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqkey68gj_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqkey68gj_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqkey68gj_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqkey68gj_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N < 2 {\n        return fmt.Sprintf(\"%d\", N)\n    }\n   \
    \ if N % 2 == 0 {\n        return solve(N / 2) + \"0\"\n    }\n    return solve(N\
    \ / 2) + \"1\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmps57yxaus_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmps57yxaus_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmps57yxaus_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmps57yxaus_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmps57yxaus_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    str := \"\"\n    for N > 0 {\n        rem := N % 2\n        N\
    \ = N / 2\n        if rem == 1 {\n            str = \"1\" + str\n        } else\
    \ {\n            str = \"0\" + str\n        }\n    }\n    return str\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpxf2bgyq7_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpxf2bgyq7_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpxf2bgyq7_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpxf2bgyq7_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpxf2bgyq7_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"0\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwzq7rhek_test.go:42: expected '1', got '0'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwzq7rhek_test.go:42: expected '110', got '0'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwzq7rhek_test.go:42: expected '1100',\
    \ got '0'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwzq7rhek_test.go:42:\
    \ expected '1001', got '0'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmpwzq7rhek_test.go:42: expected '10010', got '0'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.007s\nFAIL\n"
  timestamp: 1660075208
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpb5fa1_k3_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpb5fa1_k3_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpb5fa1_k3_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpb5fa1_k3_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpb5fa1_k3_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var binN string\n    if N == 0 {\n        return \"0\"\n    }\n\
    \    for N > 0 {\n        if N%2 == 0 {\n            binN = \"0\" + binN\n   \
    \     } else {\n            binN = \"1\" + binN\n        }\n        N = N/2\n\
    \    }\n    return binN\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpj34sqp9y_test.go:54: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpj34sqp9y_test.go:54: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpj34sqp9y_test.go:54:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpj34sqp9y_test.go:54: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpj34sqp9y_test.go:54: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var sum string\n    sum = \"\"\n    for N >= 1 {\n        if N\
    \ % 2 == 0 {\n            sum = \"0\" + sum\n        } else {\n            sum\
    \ = \"1\" + sum\n        }\n        N = N / 2\n    }\n    return sum\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpxaaomu1z_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpxaaomu1z_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpxaaomu1z_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpxaaomu1z_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpxaaomu1z_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    fmt.Println(N)\n    sum := \"\"\n    for N > 0 {\n        sum\
    \ = fmt.Sprintf(\"%d%s\", N % 2, sum)\n        N /= 2\n    }\n    return sum\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1000\n150\n147\n333\n963\n--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0\
    \ (0.00s)\n        tmp48o5jbby_test.go:48: expected '1', got '1111101000'\n  \
    \  --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmp48o5jbby_test.go:48: expected\
    \ '110', got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n       \
    \ tmp48o5jbby_test.go:48: expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3\
    \ (0.00s)\n        tmp48o5jbby_test.go:48: expected '1001', got '101001101'\n\
    \    --- FAIL: TestSolve/test_num__4 (0.00s)\n        tmp48o5jbby_test.go:48:\
    \ expected '10010', got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\n\
    FAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var binary string\n    for N > 0 {\n        n := N % 2\n     \
    \   N = N / 2\n        binary = fmt.Sprintf(\"%d%s\", n, binary)\n    }\n    return\
    \ binary\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqdynh2cr_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqdynh2cr_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqdynh2cr_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqdynh2cr_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqdynh2cr_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    out := \"\"\n    for {\n        out = fmt.Sprintf(\"%d\", N%2)\
    \ + out\n        N = N/2\n        if N == 0 {\n            break\n        }\n\
    \    }\n    return out\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpmi72crqh_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpmi72crqh_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpmi72crqh_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpmi72crqh_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpmi72crqh_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.008s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    const HEX = \"0123456789ABCDEF\"\n    var str string\n    var\
    \ index int\n    for N > 0 {\n        index = N % 2\n        str = string(HEX[index])\
    \ + str\n        N = N >> 1\n    }\n    return str\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp1x54qhw1_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp1x54qhw1_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp1x54qhw1_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp1x54qhw1_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp1x54qhw1_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var r string\n    for N > 0 {\n        r = fmt.Sprintf(\"%d%s\"\
    , N % 2, r)\n        N /= 2\n    }\n    return r\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpe3opflij_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpe3opflij_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpe3opflij_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpe3opflij_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpe3opflij_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    quotient := N /\
    \ 2\n    remainder := N % 2\n    return solve(quotient) + fmt.Sprintf(\"%d\",\
    \ remainder)\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp2xtz2bo0_test.go:47: expected '1', got '01111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp2xtz2bo0_test.go:47: expected '110',\
    \ got '010010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp2xtz2bo0_test.go:47:\
    \ expected '1100', got '010010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp2xtz2bo0_test.go:47: expected '1001', got '0101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp2xtz2bo0_test.go:47: expected '10010',\
    \ got '01111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpfe7se98o_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpfe7se98o_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpfe7se98o_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpfe7se98o_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpfe7se98o_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // For every odd number N, its binary representation is 1*2**0+1*2**1+...\n\
    \    // For every even number N, its binary representation is 1*2**0+1*2**1+...\n\
    \    // So we can only need to check if the number is odd or even, get binary\
    \ representation\n    // of odd number, then minus 1.\n    // If the binary representation\
    \ of odd number is 1, then return 1.\n    var binary []int\n    for N > 0 {\n\
    \        if N % 2 == 0 {\n            binary = append(binary, 0)\n        } else\
    \ {\n            binary = append(binary, 1)\n            N -= 1\n        }\n \
    \       N /= 2\n    }\n    var result string\n    for i := len(binary) - 1; i\
    \ >= 0; i-- {\n        result += fmt.Sprintf(\"%d\", binary[i])\n    }\n    return\
    \ result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpr31klv_7_test.go:61: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpr31klv_7_test.go:61: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpr31klv_7_test.go:61:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpr31klv_7_test.go:61: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpr31klv_7_test.go:61: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    sum := 0\n    for N > 0 {\n        sum += N % 2\n        N /=\
    \ 2\n    }\n    return fmt.Sprintf(\"%d\", sum)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp8elp2_ok_test.go:47: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp8elp2_ok_test.go:47: expected '110', got '4'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp8elp2_ok_test.go:47: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp8elp2_ok_test.go:47:\
    \ expected '1001', got '5'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp8elp2_ok_test.go:47: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075211
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N > 10000 {\n        panic(\"N out of range\")\n    }\n   \
    \ if N == 0 {\n        return \"0\"\n    }\n    var result string\n    for N >\
    \ 0 {\n        if N % 2 == 0 {\n            result = \"0\" + result\n        }\
    \ else {\n            result = \"1\" + result\n        }\n        N /= 2\n   \
    \ }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplndk63ec_test.go:57: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmplndk63ec_test.go:57: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmplndk63ec_test.go:57:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmplndk63ec_test.go:57: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmplndk63ec_test.go:57: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    digits := make([]string, 0)\n    s := N\n    for s > 0 {\n   \
    \     digits = append(digits, fmt.Sprintf(\"%d\", s % 2))\n        s = s / 2\n\
    \    }\n    str := \"\"\n    for i := len(digits) - 1; i >= 0; i-- {\n       \
    \ str += digits[i]\n    }\n    return str\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp4871vmwk_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp4871vmwk_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp4871vmwk_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp4871vmwk_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp4871vmwk_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n\n    s := \"\"\n  \
    \  for N > 0 {\n        s = fmt.Sprintf(\"%v%v\", N%2, s)\n        N /= 2\n  \
    \  }\n    return s\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplkf37ezt_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmplkf37ezt_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmplkf37ezt_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmplkf37ezt_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmplkf37ezt_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    res := \"\"\n    for N > 0 {\n        if N % 2 == 0 {\n      \
    \      res = \"0\" + res\n        } else {\n            res = \"1\" + res\n  \
    \      }\n        N /= 2\n    }\n    return res\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpy29gjer7_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpy29gjer7_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpy29gjer7_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpy29gjer7_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpy29gjer7_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var ret string\n    for N != 0 {\n        rem := N % 2\n     \
    \   N = N / 2\n        ret = fmt.Sprintf(\"%v%v\", rem, ret)\n    }\n    return\
    \ ret\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(1000), expected: \"1\" },\n     { actual:\
    \ candidate(150), expected: \"110\" },\n     { actual: candidate(147), expected:\
    \ \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n     { actual:\
    \ candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpc1z_nd15_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpc1z_nd15_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpc1z_nd15_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpc1z_nd15_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpc1z_nd15_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    s := \"\"\n    for i := 0; i < 10; i++ {\n        if N & 1 > 0\
    \ {\n            s = \"1\" + s\n        } else {\n            s = \"0\" + s\n\
    \        }\n        N >>= 1\n    }\n    return s\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpdrhpl2fi_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpdrhpl2fi_test.go:51: expected '110',\
    \ got '0010010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpdrhpl2fi_test.go:51:\
    \ expected '1100', got '0010010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpdrhpl2fi_test.go:51: expected '1001', got '0101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpdrhpl2fi_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc\
    \ TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpu1a_pvua_test.go:43:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpu1a_pvua_test.go:43: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpu1a_pvua_test.go:43: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // TODO: Implement me\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpyg1oogs7_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpyg1oogs7_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpyg1oogs7_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpyg1oogs7_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpyg1oogs7_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var out string\n    if N == 0 {\n        return \"0\"\n    }\n\
    \    for N > 0 {\n        out = fmt.Sprintf(\"%v%v\", N%2, out)\n        N = N/2\n\
    \    }\n    return out\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmplckmwp57_test.go:50: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmplckmwp57_test.go:50: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmplckmwp57_test.go:50:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmplckmwp57_test.go:50: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmplckmwp57_test.go:50: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    fmt.Println(N)\n    fmt.Println(N % 2)\n    return \"\"\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1000\n0\n150\n0\n147\n1\n333\n1\n963\n1\n--- FAIL: TestSolve (0.00s)\n\
    \    --- FAIL: TestSolve/test_num__0 (0.00s)\n        tmpi0l6jm6y_test.go:44:\
    \ expected '1', got ''\n    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpi0l6jm6y_test.go:44:\
    \ expected '110', got ''\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n      \
    \  tmpi0l6jm6y_test.go:44: expected '1100', got ''\n    --- FAIL: TestSolve/test_num__3\
    \ (0.00s)\n        tmpi0l6jm6y_test.go:44: expected '1001', got ''\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpi0l6jm6y_test.go:44: expected '10010',\
    \ got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    s := \"\"\n    for N > 0 {\n    \
    \    s = fmt.Sprintf(\"%d%s\", N%2, s)\n        N = N / 2\n    }\n    return s\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmphac5jxp9_test.go:48: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmphac5jxp9_test.go:48: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmphac5jxp9_test.go:48:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmphac5jxp9_test.go:48: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmphac5jxp9_test.go:48: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"solution\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpez64koto_test.go:42: expected '1', got 'solution'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpez64koto_test.go:42: expected '110', got 'solution'\n  \
    \  --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpez64koto_test.go:42: expected\
    \ '1100', got 'solution'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n      \
    \  tmpez64koto_test.go:42: expected '1001', got 'solution'\n    --- FAIL: TestSolve/test_num__4\
    \ (0.00s)\n        tmpez64koto_test.go:42: expected '10010', got 'solution'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var S string\n    for ; N > 0; N /= 2 {\n        S = fmt.Sprintf(\"\
    %d%s\", N % 2, S)\n    }\n    return S\n}\n\nfunc TestSolve(t *testing.T) {\n\
    \  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000), expected:\
    \ \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n     { actual:\
    \ candidate(147), expected: \"1100\" },\n     { actual: candidate(333), expected:\
    \ \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmppd52ty___test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmppd52ty___test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmppd52ty___test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmppd52ty___test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmppd52ty___test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N == 1 {\n  \
    \      return \"1\"\n    }\n    if N % 2 == 0 {\n        return solve(N / 2) +\
    \ \"0\"\n    }\n    return solve(N / 2) + \"1\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqkey68gj_test.go:51: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqkey68gj_test.go:51: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqkey68gj_test.go:51:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqkey68gj_test.go:51: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqkey68gj_test.go:51: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075214
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code here\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpwbllbnvn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpwbllbnvn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpwbllbnvn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpwbllbnvn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpwbllbnvn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    bin := fmt.Sprintf(\"%b\", N)\n    sum := 0\n    for _, v := range\
    \ bin {\n        sum += int(v - '0')\n    }\n    return fmt.Sprintf(\"%d\", sum)\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp327y04lr_test.go:47: expected '1', got '6'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmp327y04lr_test.go:47: expected '110', got '4'\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmp327y04lr_test.go:47: expected '1100',\
    \ got '4'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmp327y04lr_test.go:47:\
    \ expected '1001', got '5'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n    \
    \    tmp327y04lr_test.go:47: expected '10010', got '6'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N%2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpso62dz5d_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpso62dz5d_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpso62dz5d_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    fmt.Println(N, N / 2, N % 2)\n   \
    \ return \"1\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n   \
    \  { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "1000 500 0\n150 75 0\n147 73 1\n333 166 1\n963 481 1\n--- FAIL: TestSolve\
    \ (0.00s)\n    --- FAIL: TestSolve/test_num__1 (0.00s)\n        tmpduwrrmvu_test.go:44:\
    \ expected '110', got '1'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n     \
    \   tmpduwrrmvu_test.go:44: expected '1100', got '1'\n    --- FAIL: TestSolve/test_num__3\
    \ (0.00s)\n        tmpduwrrmvu_test.go:44: expected '1001', got '1'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpduwrrmvu_test.go:44: expected '10010',\
    \ got '1'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    //fmt.Println(N)\n    var out string\n    return out\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpz9zkhtvp_test.go:47: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpz9zkhtvp_test.go:47: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpz9zkhtvp_test.go:47: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpz9zkhtvp_test.go:47:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpz9zkhtvp_test.go:47: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result int64 = 0\n    for N != 0 {\n        result = result*2\
    \ + int64(N%2)\n        N /= 2\n    }\n    return fmt.Sprintf(\"%d\", result)\n\
    }\n\nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvhiln7nb_test.go:47: expected '1', got '95'\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvhiln7nb_test.go:47: expected '110', got '105'\n    ---\
    \ FAIL: TestSolve/test_num__2 (0.00s)\n        tmpvhiln7nb_test.go:47: expected\
    \ '1100', got '201'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvhiln7nb_test.go:47:\
    \ expected '1001', got '357'\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n  \
    \      tmpvhiln7nb_test.go:47: expected '10010', got '783'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 2
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    if N == 0 {\n        return \"0\"\n    }\n    if N == 1 {\n  \
    \      return \"1\"\n    }\n    var output string\n    for N != 0 {\n        output\
    \ = string(N%2 + 48) + output\n        N /= 2\n    }\n    return output\n}\n\n\
    func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpilah33b1_test.go:30:18: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // your code goes here\n    return \"\"\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpzuck1rfn_test.go:43: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpzuck1rfn_test.go:43: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpzuck1rfn_test.go:43: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpzuck1rfn_test.go:43:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpzuck1rfn_test.go:43: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    for N > 0 {\n        result = fmt.Sprintf(\"\
    %d%s\", N%2, result)\n        N /= 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpso62dz5d_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpso62dz5d_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpso62dz5d_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpso62dz5d_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660075125
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n    if N == 0 {\n        return \"0\"\n   \
    \ }\n    for N > 0 {\n        if N % 2 == 0 {\n            result = \"0\" + result\n\
    \        } else {\n            result = \"1\" + result\n        }\n        N =\
    \ N / 2\n    }\n    return result\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpk_f_5uq__test.go:54: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpk_f_5uq__test.go:54: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpk_f_5uq__test.go:54:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpk_f_5uq__test.go:54: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpk_f_5uq__test.go:54: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    binary := \"\"\n    for N > 0 {\n        binary = fmt.Sprintf(\"\
    %v%v\", N % 2, binary)\n        N /= 2\n    }\n    return binary\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpofue86cj_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpofue86cj_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpofue86cj_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpofue86cj_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpofue86cj_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var answer = \"\"\n    for i := N; i > 0; i = i / 2 {\n      \
    \  answer = fmt.Sprintf(\"%v%v\", i % 2, answer)\n    }\n    return answer\n}\n\
    \nfunc TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(1000), expected: \"1\" },\n     { actual: candidate(150),\
    \ expected: \"110\" },\n     { actual: candidate(147), expected: \"1100\" },\n\
    \     { actual: candidate(333), expected: \"1001\" },\n     { actual: candidate(963),\
    \ expected: \"10010\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpigfyssc9_test.go:46: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpigfyssc9_test.go:46: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpigfyssc9_test.go:46:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpigfyssc9_test.go:46: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpigfyssc9_test.go:46: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    // write your code here\n    if N < 0 || N > 10000 {\n       \
    \ return \"0\"\n    }\n    var res string\n    for N > 0 {\n        if N % 2 ==\
    \ 0 {\n            res = \"0\" + res\n        } else {\n            res = \"1\"\
    \ + res\n        }\n        N = N/2\n    }\n    return res\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmp34r8fzb2_test.go:55: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmp34r8fzb2_test.go:55: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmp34r8fzb2_test.go:55:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmp34r8fzb2_test.go:55: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmp34r8fzb2_test.go:55: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    r := \"\"\n    if N > 1 {\n        r = solve(N/2)\n    }\n   \
    \ r += fmt.Sprintf(\"%d\", N%2)\n    return r\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpa_oyv0ln_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpa_oyv0ln_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpa_oyv0ln_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpa_oyv0ln_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpa_oyv0ln_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    answer := \"\"\n    for N > 0 {\n        answer = fmt.Sprintf(\"\
    %d%s\", N%2, answer)\n        N = N/2\n    }\n    return answer\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpch2hsu47_test.go:47: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpch2hsu47_test.go:47: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpch2hsu47_test.go:47:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpch2hsu47_test.go:47: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpch2hsu47_test.go:47: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return fmt.Sprintf(\"%b\", N)\n}\n\nfunc TestSolve(t *testing.T)\
    \ {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpqlo7phxq_test.go:42:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpqlo7phxq_test.go:42: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpqlo7phxq_test.go:42: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075046
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    return \"\"\n}\n\nfunc TestSolve(t *testing.T) {\n  candidate\
    \ := solve\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(1000), expected: \"1\" },\n\
    \     { actual: candidate(150), expected: \"110\" },\n     { actual: candidate(147),\
    \ expected: \"1100\" },\n     { actual: candidate(333), expected: \"1001\" },\n\
    \     { actual: candidate(963), expected: \"10010\" },\n   }\n\n\tfor i, tc :=\
    \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpvtdqvfjo_test.go:42: expected '1', got ''\n    --- FAIL: TestSolve/test_num__1\
    \ (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '110', got ''\n    --- FAIL:\
    \ TestSolve/test_num__2 (0.00s)\n        tmpvtdqvfjo_test.go:42: expected '1100',\
    \ got ''\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n        tmpvtdqvfjo_test.go:42:\
    \ expected '1001', got ''\n    --- FAIL: TestSolve/test_num__4 (0.00s)\n     \
    \   tmpvtdqvfjo_test.go:42: expected '10010', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660075205
- exit_code: 1
  program: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer N, return the total sum of its digits in binary.\n\
    // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
    \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
    \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunc solve(N int)\
    \ string {\n    var result string\n\n    if N == 0 {\n        return \"0\"\n \
    \   }\n    for N > 0 {\n        tmp := N % 2\n        result = fmt.Sprintf(\"\
    %d%s\", tmp, result)\n        N = N / 2\n    }\n    return result\n}\n\nfunc TestSolve(t\
    \ *testing.T) {\n  candidate := solve\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(1000),\
    \ expected: \"1\" },\n     { actual: candidate(150), expected: \"110\" },\n  \
    \   { actual: candidate(147), expected: \"1100\" },\n     { actual: candidate(333),\
    \ expected: \"1001\" },\n     { actual: candidate(963), expected: \"10010\" },\n\
    \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\"\
    , i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSolve (0.00s)\n    --- FAIL: TestSolve/test_num__0 (0.00s)\n\
    \        tmpjjxboc44_test.go:52: expected '1', got '1111101000'\n    --- FAIL:\
    \ TestSolve/test_num__1 (0.00s)\n        tmpjjxboc44_test.go:52: expected '110',\
    \ got '10010110'\n    --- FAIL: TestSolve/test_num__2 (0.00s)\n        tmpjjxboc44_test.go:52:\
    \ expected '1100', got '10010011'\n    --- FAIL: TestSolve/test_num__3 (0.00s)\n\
    \        tmpjjxboc44_test.go:52: expected '1001', got '101001101'\n    --- FAIL:\
    \ TestSolve/test_num__4 (0.00s)\n        tmpjjxboc44_test.go:52: expected '10010',\
    \ got '1111000011'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660075216

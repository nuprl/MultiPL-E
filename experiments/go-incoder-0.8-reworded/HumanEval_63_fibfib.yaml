name: HumanEval_63_fibfib
language: go_test.go
prompt: "package fibfib_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// The\
  \ FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's\
  \ defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n// fibfib(2) == 1\n\
  // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n// Please write a function\
  \ to efficiently compute the n-th element of the fibfib number sequence.\n// >>>\
  \ fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n// 24\nfunc fibfib(n\
  \ int) int {\n"
tests: "func TestFibfib(t *testing.T) {\n  candidate := fibfib\n\ttype test struct\
  \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
  \     { actual: candidate(2), expected: 1 },\n     { actual: candidate(1), expected:\
  \ 0 },\n     { actual: candidate(5), expected: 4 },\n     { actual: candidate(8),\
  \ expected: 24 },\n     { actual: candidate(10), expected: 81 },\n     { actual:\
  \ candidate(12), expected: 274 },\n     { actual: candidate(14), expected: 927 },\n\
  \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if n<2 {\n        return n\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 1 {\n        return n\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 0 {\n        return 0\n    }\n\
    \n    fib1 := fibfib(n-1)\n    fib2 := fibfib(n-2)\n    fib3 := fibfib(n-3)\n\n\
    \    return fib1 + fib2 + fib3\n}\n", "    if n < 0 {\n        panic(\"fibfib()\
    \ argument must be a non-negative integer.\")\n    }\n    fibfib0 := 0\n    fibfib1\
    \ := 0\n    fibfib2 := 1\n    fibfib3 := 0\n    for n > 0 {\n        fibfib3 =\
    \ fibfib2 + fibfib1\n        fibfib2 = fibfib1\n        fibfib1 = fibfib0\n  \
    \      fibfib0 = fibfibfib3\n        n--\n    }\n    return fibfib0\n}\n", " \
    \   if n < 0 {\n        return 0\n    }\n    if n == 0 {\n        return 0\n \
    \   }\n    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n \
    \   if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 3 {\n        return n\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    result := 0\n    if n <= 1 {\n     \
    \   result = 0\n    } else {\n        result = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n\n    return result\n}\n", "    if n < 0 {\n        return -1\n    }\n\
    \n    if n < 2 {\n        return 0\n    }\n\n    if n < 5 {\n        return 1\n\
    \    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n\
    \ < 0 {\n        fmt.Printf(\"fibfib() only takes positive integers\\n\")\n  \
    \      return 0\n    }\n\n    if n == 0 {\n        return 0\n    }\n\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n      \
    \  return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 0\n \
    \   }\n    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 2 {\n        return 0\n    } else {\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    switch\
    \ {\n    case n == 0: return 0\n    case n == 1: return 0\n    case n == 2: return\
    \ 1\n    default: return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n",
  "    if n<0 {\n        return -1\n    }\n    if n==0 {\n        return 0\n    }\n\
    \    if n==1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n \
    \       return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n <= 0 {\n        return 0\n    }\n    if n <= 1 {\n        return\
    \ 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if\
    \ n < 0 {\n        fmt.Println(\"fibfib(n) called with n < 0\")\n        return\
    \ -1\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n     \
    \   return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 2\n    }\n    if n != fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ {\n        fmt.Println(\"fibfib(n) called with not fibonacci number\")\n   \
    \     return -1\n    }\n    return n\n}\n", "    if n<2 {\n        return 0\n\
    \    }\n    if n%2 == 0 {\n        return fibfib(n-1)+fibfib(n-2)\n    }\n   \
    \ return fibfib(n-3)+fibfib(n-2)\n}\n", "    switch {\n    case n == 0:\n    \
    \    return 0\n    case n == 1:\n        return 1\n    case n == 2:\n        return\
    \ 2\n    }\n    a, b := fibfib(n-1), fibfib(n-2)\n    return a + b + b\n}\n",
  "    if n < 0 {\n        return n\n    }\n\n    fibfibs := make([]int, n)\n    fibfibs[0]\
    \ = 0\n    fibfibs[1] = 1\n\n    for i := 2; i <= n; i++ {\n        fibfibs[i]\
    \ = fibfibs[i-2] + fibfibs[i-1]\n    }\n\n    return fibfibs[n]\n}\n", "    if\
    \ n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n\
    \    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 2\n    }\n   \
    \ if n <= 3 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 3 {\n\
    \        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n <= 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n<2 {\n      \
    \  return n\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n <= 0 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    // Your code here\n    if n <= 1 {\n        return\
    \ 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if\
    \ n == 0 || n == 1 {\n        return 0\n    }\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    var a int = 1\n    var b int = 1\n\n    for i := 3;\
    \ i <= n; i++ {\n        var tmp int = b\n        b = a\n        a = tmp + b\n\
    \    }\n\n    return a\n}\n", "    if n == 0 || n == 1 {\n        return 0\n \
    \   }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    var i int\n    var fib int\n    fib = 1\n    i = 0\n\
    \    for ; i < n; i++ {\n        fib += fib\n    }\n    return fib\n}\n", "  \
    \  // YOUR CODE HERE\n    switch {\n    case n == 0: return 0\n    case n == 1:\
    \ return 0\n    case n == 2: return 1\n    default: return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n}\n", "    f := make([]int, n)\n    f[0] = 0\n    f[1]\
    \ = 0\n    f[2] = 1\n    for i := 3; i < len(f); i++ {\n        f[i] = f[i-1]\
    \ + f[i-2] + f[i-3]\n    }\n    return f[n-1]\n}\n", "    // Insert your code\
    \ here\n    switch {\n    case n < 2:\n        return n\n    default:\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n <= 1\
    \ {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 || n > 100 {\n\
    \        fmt.Println(\"fibfib:\", n)\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return\
    \ 0\n    }\n    if n == 3 {\n        return 2\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    if n == 3 {\n        return 2\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 2 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    var result int\n    if n == 0 {\n  \
    \      return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    if n == 3 {\n        return 1\n    }\n   \
    \ result = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return result\n}\n", " \
    \   var sum int = 0\n\n    if n <= 0 {\n        return 0\n    }\n\n    if n ==\
    \ 1 {\n        return sum\n    }\n\n    sum += fibfib(n-1)\n    sum += fibfib(n-2)\n\
    \    sum += fibfib(n-3)\n\n    return sum\n}\n", "    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    // base case: fibfib(0) = 0\n    if n == 0 {\n   \
    \     return 0\n    }\n\n    // fibfib(1) = 0\n    if n == 1 {\n        return\
    \ 0\n    }\n\n    // fibfib(2) = 1\n    if n == 2 {\n        return 1\n    }\n\
    \n    // fibfib(n) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch {\n    case n == 0:\n       \
    \ return 0\n    case n == 1:\n        return 0\n    case n == 2:\n        return\
    \ 1\n    case n > 2:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n}\n", "    if n < 1 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    fibfibNums := make([]int, n+1)\n   \
    \ fibfibNums[0] = 0\n    fibfibNums[1] = 0\n    fibfibNums[2] = 1\n    for i :=\
    \ 3; i <= n; i++ {\n        fibfibNums[i] = fibfibNums[i-2] + fibfibNums[i-1]\
    \ + fibfibNums[i]\n    }\n    return fibfibNums[n]\n}\n", "    if n <= 1 {\n \
    \       return 0\n    } else {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if n <= 3 {\n   \
    \     return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n<0 {\n        return -1\n    }\n    if n==0 || n==1 {\n        return 0\n\
    \    }\n    if n==2 {\n        return 1\n    }\n    if n%2==0 {\n        return\
    \ fibfib(n-1)+fibfib(n-2)\n    }\n    return fibfib(n-3)+fibfib(n-2)\n}\n", " \
    \   if n < 2 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 0 {\n \
    \       return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    if n > 2 {\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n}\n", "    if n <= 3 {\n        return 0\n    }\n    if\
    \ n%2 != 0 {\n        return fibfib(n-2) + fibfib(n-3)\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2)\n}\n", "    if n < 3 {\n        return n\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return\
    \ 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if\
    \ n <= 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 0\n   \
    \ }\n\n    if n == 2 {\n        return 1\n    }\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n \
    \   if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    return 0\n}", "    if n < 2 {\n        return n\n\
    \    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n\
    \ == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n\
    \    if n == 2 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 {\n    \
    \    return 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1\
    \ {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n<=0 {\n        return 0\n    }\n    if n==1 {\n        return 1\n\
    \    }\n    if n==2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch {\n        case n == 0: return\
    \ 0\n        case n == 1: return 0\n        case n == 2: return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 || n ==\
    \ 1 {\n        return 0\n    }\n\n    n -= 1\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 1 {\n        return 0\n    }\n    return fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    switch {\n    case n <= 1:\n        return 0\n   \
    \ case n <= 2:\n        return 1\n    case n > 2:\n        return fibfib(n-2)\
    \ + fibfib(n-1)\n    }\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if\
    \ n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n==0 {\n  \
    \      return 0\n    }\n    if n==1 {\n        return 1\n    }\n    if n==2 {\n\
    \        return 1\n    }\n    if n<0 {\n        return -1\n    }\n    if n%3 ==\
    \ 0 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n    return\
    \ fibfib(n-3) + fibfib(n-2) + fibfib(n-1)\n}\n", "    if n < 0 {\n        return\
    \ 0\n    }\n    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    fibfiblist := make([]int, n)\n    fibfiblist[0],\
    \ fibfiblist[1] = 0, 1\n    for i := 2; i < len(fibfiblist); i++ {\n        fibfiblist[i]\
    \ = fibfiblist[i-1] + fibfiblist[i-2] + fibfiblist[i-3]\n    }\n    return fibfiblist[n-1]\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 0\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 2\n    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n < 2 {\n        return 0\n    }\n    if n > 100 {\n        return -1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <\
    \ 0 || n >= 1000 {\n        fmt.Println(\"fibfib: \", n)\n        return 0\n \
    \   }\n    var a, b int\n    if n <= 2 {\n        a = 1\n        b = n\n    }\
    \ else {\n        a = fibfib(n-1)\n        b = fibfib(n-2)\n    }\n    return\
    \ a + b\n}\n", "    var a, b, c int\n    for i := 0; i < n; i++ {\n        a =\
    \ b\n        b = c\n        c = a + b\n    }\n    return c\n}\n", "    if n <=\
    \ 1 {\n        return 0\n    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    switch {\n    case n < 3:\n        return 0\n    case n < 5:\n    \
    \    return 1\n    case n < 8:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    default:\n        return -1\n    }\n}\n", "    var fibfibs int\n    for i\
    \ := 0; i < n; i++ {\n        fibfibs = fibfibs + fibfib(i-1)\n    }\n    return\
    \ fibfibs;\n}\n", "    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 {\n        return\
    \ -1\n    }\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n == 2\
    \ {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    // Write your code here.\n    if n <= 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch\
    \ {\n    case n == 0: return 0\n    case n == 1: return 0\n    case n == 2: return\
    \ 1\n    default:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  \
    \  }\n}\n", "    if n<0 {\n        fmt.Println(\"fibfib: input number must be\
    \ positive.\")\n        return 0\n    }\n\n    if n==0 {\n        return 0\n \
    \   }\n\n    if n==1 {\n        return 1\n    }\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 0 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\
    \ else if n == 1 {\n        return 1\n    } else if n == 2 {\n        return 1\n\
    \    } else if n > 2 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n   \
    \     return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    return fibfib2(n, 0, 0)\n}\n", "    // Base case\n    if n == 0 {\n       \
    \ return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", " \
    \   if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 3 {\n        return n\n    } else {\n     \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n ==\
    \ 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return 0\n    }\n\n\
    \    if n == 2 {\n        return 1\n    }\n\n    if n > 2 {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n < 2 {\n        return n\n\
    \    } else {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n\
    }\n", "    if n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 1 {\n        return 0\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 || n\
    \ > 100 {\n        fmt.Println(\"Invalid argument, n = \", n)\n        exit(1)\n\
    \    }\n    if n < 2 {\n        return n\n    }\n\n    var a int = 0\n    var\
    \ b int = 1\n    var c int = 1\n    for i := 2; i <= n; i++ {\n        c = a +\
    \ b\n        a = b\n        b = c\n    }\n    return b\n}\n", "    if n<0 || n>100000\
    \ {\n        fmt.Printf(\"fibfib() invalid input: %d\\n\", n)\n        return\
    \ -1\n    }\n    if n==0 || n==1 {\n        return n\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch {\n    case n < 1:\n        return\
    \ 0\n    case n == 1: \n        return 0\n    case n == 2:\n        return 1\n\
    \    case n > 2:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n   \
    \ }\n}\n", "    if n == 1 {\n        return 0\n    }\n\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return\
    \ 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if\
    \ n <= 0 {\n        return 0\n    }\n\n    if n < 3 {\n        return 1\n    }\n\
    \n    sum := 0\n    for i := 3; i <= n; i++ {\n        sum += fibfib(i-1)\n  \
    \  }\n\n    return sum\n}\n", "    if n == 0 || n == 1 {\n        return 0\n \
    \   }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    sum := 0\n    for i := 0; i < n; i++ {\n        sum\
    \ += fib(i, n)\n    }\n    return sum\n}\n", "    if n == 0 || n == 1 {\n    \
    \    return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    switch {\n    case n <= 1:\n        return n\n    case n > 2:\n        return\
    \ fibfib(n-1) + fibfib(n-2)\n    }\n}\n", "    if n <= 0 {\n        return 0\n\
    \    }\n    if n == 1:\n        return 0\n    if n == 2 {\n        return 1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    // base\
    \ case\n    if n <= 1 {\n        return 0\n    }\n\n    // Recursive case\n  \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 3 {\n  \
    \      return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n < 0 {\n        fmt.Println(\"Bad input, input not valid.\")\n        return\
    \ 0\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n      \
    \  return 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n\
    \        return 1\n    }\n    if n == 4 {\n        return 1\n    }\n    if n ==\
    \ 5 {\n        return 1\n    }\n    if n == 6 {\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    }\n    if n == 7 {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) + fibfib(n-4)\n    }\n    if n == 8 {\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5)\n    }\n\
    \    if n == 9 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4)\
    \ + fibfib(n-5) + fibfib(n-6)\n    }\n    if n == 10 {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5) + fibfib(n-6) + fibfib(n-7)\n\
    \    }\n    if n == 11 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ + fibfib(n-4) + fibfib(n-5) + fibfib(n-6) + fibfib(n-7) + fibfib(n-8)\n    }\n\
    \    if n == 12 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4)\
    \ + fibfib(n-5) + fibfib(n-6) + fibfib(n-7) + fibfib(n-8) + fibfib(n-9)\n    }\n\
    \    if n == 13 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4)\
    \ + fibfib(n-5) + fibfib(n-6) + fibfib(n-7) + fibfib(n-8) + fibfib(n-9) + fibfib(n-10)\n\
    \    }\n    if n == 14 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\
    \ + fibfib(n-4) + fibfib(n-5) + fibfib(n-6) + fibfib(n-7) + fibfib(n-8) + fibfib(n-9)\
    \ + fibfib(n-10) + fibfib(n-11)\n    }\n    if n == 15 {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5) + fibfib(n-6) + fibfib(n-7)\
    \ + fibfib(n-8) + fibfib", "    if n <= 3 {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 0 {\n        return\
    \ 0\n    }\n    if n <= 3 {\n        return 1\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    // Your code here\n    prev := 0\n    current := 1\n\
    \    sum := 0\n    for i := 2; i < n; i++ {\n        current = prev + current\n\
    \        sum = sum + prev\n        prev = current\n    }\n    return sum\n}\n",
  "    if (n == 0 || n == 1) {\n        return 0\n    }\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if n ==\
    \ 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 || n ==\
    \ 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 1 {\n   \
    \     return 0\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3\
    \ {\n        return 2\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 1\n    }\n    if n == 3 {\n      \
    \  return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n <= 0 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    switch {\n    case n == 0: return 0\n    case n ==\
    \ 1: return 0\n    case n == 2: return 1\n    default:\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n == 0 || n == 1 {\n     \
    \   return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n < 3 {\n        return 0\n    }\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n <= 1 {\n        return 0\n    } else {\n    \
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n <=\
    \ 1 {\n        return 0\n    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    switch {\n    case n == 0: return 0\n    case n == 1: return 0\n  \
    \  case n == 2: return 1\n    default:\n        c := fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n        return c\n    }\n}\n", "    var a int = 0\n    var b\
    \ int = 0\n    var c int = 1\n    for i := 0; i < n; i++ {\n        a = c\n  \
    \      c = b\n        b = a + b\n    }\n    return b\n}\n", "    if n <= 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 0\n    }\n    if n ==\
    \ 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n    else if n == 2\
    \ {\n        return 1\n    }\n    else if n == 3 {\n        return 1\n    }\n\
    \    else {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n",
  "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n \
    \   }\n    if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 2 {\n        return n\n    }\n    if n == 2\
    \ {\n        return 0\n    }\n    return fibfib(n-2) + fibfib(n-1)\n}\n", "  \
    \  if n<0 {\n        return 0\n    }\n    if n==0 {\n        return 0\n    }\n\
    \    if n==1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    switch {\n    case n == 0:\n        return 0\n   \
    \ case n == 1:\n        return 0\n    case n == 2:\n        return 1\n    case\
    \ n > 2:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n",
  "    if n == 0 || n == 1 {\n        return 0\n    }\n    r := fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    return r\n}\n", "    // Base case\n    if n == 0 {\n    \
    \    return 0\n    }\n    // Recursive case\n    if n == 1 {\n        return 1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <=\
    \ 0 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    switch {\n    case n == 0: return 0\n    case n == 1: return 1\n  \
    \  case n == 2: return 1\n    default:\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n}\n", "    if n < 2 {\n        return 0\n    }\n    sum\
    \ := 0\n    for i := 0; i < n; i++ {\n        sum += fibfib(n-2)\n    }\n    return\
    \ sum\n}\n", "    if n <= 0 {\n        return 0\n    }\n    if n == 3 {\n    \
    \    return 1\n    }\n    if n == 4 {\n        return 1\n    }\n    if n == 5\
    \ {\n        return 2\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ 1\n    }\n    if n == 2 {\n        return 0\n    }\n    if n == 3 {\n      \
    \  return 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    if n <= 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n \
    \   }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n ==\
    \ 0 || n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <=\
    \ 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 {\n        n = 0\n    }\n\n\
    \    return 0\n}\n", "    if n==0 || n==1 {\n        return n\n    }\n\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 2 {\n        return\
    \ 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if\
    \ n < 0 {\n        return -1\n    }\n    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 2 {\n        return 0\n    }\n    f := fibfib(n-1)\n\
    \    g := fibfib(n-2)\n    h := fibfib(n-3)\n\n    return f * h + g\n}\n", " \
    \   return 1\n}\n", "    // Write your code here\n    return 0\n}\n", "    if\
    \ n < 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n < 0 {\n        panic(\"fibfib(0) is undefined\")\n    }\n    if\
    \ n < 2 {\n        return 0\n    }\n    fibfib1 := fibfib(n-1)\n    fibfib2 :=\
    \ fibfib(n-2)\n    fibfib3 := fibfib(n-3)\n    return fibfib1 + fibfib2 + fibfib3\n\
    }\n", "    var sum = 1\n    sum := sum + fibfib(n-1)\n    sum := sum + fibfib(n-2)\n\
    \    sum := sum + fibfib(n-3)\n    return sum\n}\n", "    switch {\n    case n\
    \ == 0:\n        return 0\n    case n == 1:\n        return 1\n    case n == 2:\n\
    \        return 0\n    case n > 2:\n        return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\n    }\n}\n", "    var fibfibNums [30]int\n    var i int\n    for\
    \ i = 0; i <= 30; i++ {\n        fibfibNums[i] = fibfibNums[i-1] + fibfibNums[i-2]\
    \ + fibfibNums[i-3]\n    }\n    return fibfibNums[n]\n}\n", "    switch {\n  \
    \  case n < 2:\n        return 0\n    case n > 2:\n        return fibfib(n-1)\
    \ + fibfib(n-2)\n    default:\n        return 1\n    }\n}\n", "    if n<3 { return\
    \ 0 }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    return 0\n\
    }\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n <= 1 {\n        return n\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch n {\n \
    \   case 1:\n        return 0\n    case 2:\n        return 1\n    case 3:\n  \
    \      return 2\n    default:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n}\n", "    switch {\n    case n <= 2:\n        return 0\n    case n <=\
    \ 4:\n        return 1\n    case n <= 8:\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n}\n", "    if n <= 2 {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    switch {\n    case n <=\
    \ 1:\n        return 0\n    case n <= 3:\n        return 1\n    case n <= 6:\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    default:\n      \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    switch {\n\
    \    case n == 0: return 0\n    case n == 1: return 0\n    case n == 2: return\
    \ 1\n    default:\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n  \
    \  }\n}\n", "    // Write code here\n    if n < 1 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n ==\
    \ 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 2 {\n        return 0\n    }\n    a, b := 0,\
    \ 1\n    for i := 2; i <= n; i++ {\n        a, b = b, a+b\n    }\n    return a\n\
    }\n", "    if n < 0 {\n        fmt.Println(\"fibfib(-n)\")\n        return -1\n\
    \    }\n    switch n {\n    case 0:\n        return 0\n    case 1:\n        return\
    \ 0\n    case 2:\n        return 1\n    default:\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    if n < 0 || n >= 1000 {\n     \
    \   return 0\n    }\n    if n < 2 {\n        return 1\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n    if n ==\
    \ 2 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n < 3 {\n        return 0\n    }\n\n    if n == 3 {\n        return\
    \ 1\n    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    \n\
    \    if n < 2 {\n        return 0\n    }\n    \n    if n == 3 {\n        return\
    \ 1\n    }\n    \n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", " \
    \   if n <= 0 {\n        return 0\n    }\n    f := fibfib(n-1)\n    return f +\
    \ f + f\n}\n", "    if n == 0 {\n        return 0\n    }\n\n    if n == 1 {\n\
    \        return 1\n    }\n\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n <= 1 {\n        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n < 2 {\n        return 0\n    }\n    if n == 2\
    \ {\n        return 1\n    }\n    return fibfib(n-2) + fibfib(n-3)\n}\n", "  \
    \  if n <= 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n \
    \   }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0\
    \ {\n        n *= -1\n    }\n    if n < 2 {\n        return 0\n    }\n    return\
    \ fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 1 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return 0\n    }\n    if n == 2 {\n        return 1\n\
    \    }\n    if n > 2 {\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \    }\n}\n", "    if n <= 2 {\n        return n\n    }\n\n    // base case: fibfib(0)\
    \ = 0\n    if n == 0 {\n        return 0\n    }\n\n    // base case: fibfib(1)\
    \ = 0\n    if n == 1 {\n        return 0\n    }\n\n    // base case: fibfib(2)\
    \ = 1\n    if n == 2 {\n        return 1\n    }\n\n    // recursive case:\n  \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n == 0 || n ==\
    \ 1 {\n        return n\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    // base case\n    if n < 2 {\n     \
    \   return n\n    }\n    return fibfib(n-2) + fibfib(n-1)\n}\n", "    if n < 2\
    \ {\n        return 0\n    }\n\n    if n == 1 {\n        return 0\n    }\n\n \
    \   return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    return 0\n}\n",
  "    if n<2 {\n        return n\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    // Write code here\n\n    if n<=0 {\n        return 0\n    }\n    if\
    \ n==1 {\n        return 0\n    }\n    if n==2 {\n        return 1\n    }\n  \
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if (n == 0) return\
    \ 0\n    if (n == 1) return 0\n    if (n == 2) return 1\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 2 {\n        return n\n    }\n\
    \    fibfib0 := fibfib(n-1) + fibfib(n-2)\n    return fibfib0\n}\n", "    if n\
    \ < 3 {\n        return n\n    }\n\n    result := 0\n    i := 1\n    for ; i <\
    \ n; i++ {\n        result = result + fibfib(n-i)\n    }\n\n    return result\n\
    }\n", "    if n == 0 {\n        return 0\n    }\n\n    if n == 1 {\n        return\
    \ 0\n    }\n\n    if n == 2 {\n        return 1\n    }\n\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "    if n < 0 {\n        return 0\n    }\n\
    \    if n < 2 {\n        return 1\n    }\n    if n < 3 {\n        return fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n    return fibfib(n-2) + fibfib(n-3) + fibfib(n-4)\n}\n",
  "    if n == 0 || n == 1 {\n        return n\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    if n == 0 || n == 1 {\n        return 0\n    }\n \
    \   if n == 2 {\n        return 1\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n", "    switch n {\n    case 0:\n        return 0\n    case\
    \ 1:\n        return 0\n    case 2:\n        return 1\n    default:\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    }\n}\n", "    // write your code\
    \ in here\n    return 0\n}"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "
